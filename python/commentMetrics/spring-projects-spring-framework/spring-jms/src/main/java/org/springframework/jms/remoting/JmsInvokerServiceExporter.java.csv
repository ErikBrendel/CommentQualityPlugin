# id;timestamp;commentText;codeText;commentWords;codeWords
JmsInvokerServiceExporter -> protected Message createResponseMessage(Message request, Session session, RemoteInvocationResult result) 			throws JMSException;1328020251;Create the invocation result response message._<p>The default implementation creates a JMS ObjectMessage for the given_RemoteInvocationResult object. It sets the response's correlation id_to the request message's correlation id, if any_ otherwise to the_request message id._@param request the original request message_@param session the JMS session to use_@param result the invocation result_@return the message response to send_@throws javax.jms.JMSException if creating the messsage failed;protected Message createResponseMessage(Message request, Session session, RemoteInvocationResult result)_			throws JMSException {__		Message response = this.messageConverter.toMessage(result, session)__		String correlation = request.getJMSCorrelationID()__		if (correlation == null) {_			correlation = request.getJMSMessageID()__		}_		response.setJMSCorrelationID(correlation)__		return response__	};create,the,invocation,result,response,message,p,the,default,implementation,creates,a,jms,object,message,for,the,given,remote,invocation,result,object,it,sets,the,response,s,correlation,id,to,the,request,message,s,correlation,id,if,any,otherwise,to,the,request,message,id,param,request,the,original,request,message,param,session,the,jms,session,to,use,param,result,the,invocation,result,return,the,message,response,to,send,throws,javax,jms,jmsexception,if,creating,the,messsage,failed;protected,message,create,response,message,message,request,session,session,remote,invocation,result,result,throws,jmsexception,message,response,this,message,converter,to,message,result,session,string,correlation,request,get,jmscorrelation,id,if,correlation,null,correlation,request,get,jmsmessage,id,response,set,jmscorrelation,id,correlation,return,response
JmsInvokerServiceExporter -> protected Message createResponseMessage(Message request, Session session, RemoteInvocationResult result) 			throws JMSException;1356735495;Create the invocation result response message._<p>The default implementation creates a JMS ObjectMessage for the given_RemoteInvocationResult object. It sets the response's correlation id_to the request message's correlation id, if any_ otherwise to the_request message id._@param request the original request message_@param session the JMS session to use_@param result the invocation result_@return the message response to send_@throws javax.jms.JMSException if creating the messsage failed;protected Message createResponseMessage(Message request, Session session, RemoteInvocationResult result)_			throws JMSException {__		Message response = this.messageConverter.toMessage(result, session)__		String correlation = request.getJMSCorrelationID()__		if (correlation == null) {_			correlation = request.getJMSMessageID()__		}_		response.setJMSCorrelationID(correlation)__		return response__	};create,the,invocation,result,response,message,p,the,default,implementation,creates,a,jms,object,message,for,the,given,remote,invocation,result,object,it,sets,the,response,s,correlation,id,to,the,request,message,s,correlation,id,if,any,otherwise,to,the,request,message,id,param,request,the,original,request,message,param,session,the,jms,session,to,use,param,result,the,invocation,result,return,the,message,response,to,send,throws,javax,jms,jmsexception,if,creating,the,messsage,failed;protected,message,create,response,message,message,request,session,session,remote,invocation,result,result,throws,jmsexception,message,response,this,message,converter,to,message,result,session,string,correlation,request,get,jmscorrelation,id,if,correlation,null,correlation,request,get,jmsmessage,id,response,set,jmscorrelation,id,correlation,return,response
JmsInvokerServiceExporter -> protected Message createResponseMessage(Message request, Session session, RemoteInvocationResult result) 			throws JMSException;1357119239;Create the invocation result response message._<p>The default implementation creates a JMS ObjectMessage for the given_RemoteInvocationResult object. It sets the response's correlation id_to the request message's correlation id, if any_ otherwise to the_request message id._@param request the original request message_@param session the JMS session to use_@param result the invocation result_@return the message response to send_@throws javax.jms.JMSException if creating the messsage failed;protected Message createResponseMessage(Message request, Session session, RemoteInvocationResult result)_			throws JMSException {__		Message response = this.messageConverter.toMessage(result, session)__		String correlation = request.getJMSCorrelationID()__		if (correlation == null) {_			correlation = request.getJMSMessageID()__		}_		response.setJMSCorrelationID(correlation)__		return response__	};create,the,invocation,result,response,message,p,the,default,implementation,creates,a,jms,object,message,for,the,given,remote,invocation,result,object,it,sets,the,response,s,correlation,id,to,the,request,message,s,correlation,id,if,any,otherwise,to,the,request,message,id,param,request,the,original,request,message,param,session,the,jms,session,to,use,param,result,the,invocation,result,return,the,message,response,to,send,throws,javax,jms,jmsexception,if,creating,the,messsage,failed;protected,message,create,response,message,message,request,session,session,remote,invocation,result,result,throws,jmsexception,message,response,this,message,converter,to,message,result,session,string,correlation,request,get,jmscorrelation,id,if,correlation,null,correlation,request,get,jmsmessage,id,response,set,jmscorrelation,id,correlation,return,response
JmsInvokerServiceExporter -> protected Message createResponseMessage(Message request, Session session, RemoteInvocationResult result) 			throws JMSException;1368482696;Create the invocation result response message._<p>The default implementation creates a JMS ObjectMessage for the given_RemoteInvocationResult object. It sets the response's correlation id_to the request message's correlation id, if any_ otherwise to the_request message id._@param request the original request message_@param session the JMS session to use_@param result the invocation result_@return the message response to send_@throws javax.jms.JMSException if creating the messsage failed;protected Message createResponseMessage(Message request, Session session, RemoteInvocationResult result)_			throws JMSException {__		Message response = this.messageConverter.toMessage(result, session)__		String correlation = request.getJMSCorrelationID()__		if (correlation == null) {_			correlation = request.getJMSMessageID()__		}_		response.setJMSCorrelationID(correlation)__		return response__	};create,the,invocation,result,response,message,p,the,default,implementation,creates,a,jms,object,message,for,the,given,remote,invocation,result,object,it,sets,the,response,s,correlation,id,to,the,request,message,s,correlation,id,if,any,otherwise,to,the,request,message,id,param,request,the,original,request,message,param,session,the,jms,session,to,use,param,result,the,invocation,result,return,the,message,response,to,send,throws,javax,jms,jmsexception,if,creating,the,messsage,failed;protected,message,create,response,message,message,request,session,session,remote,invocation,result,result,throws,jmsexception,message,response,this,message,converter,to,message,result,session,string,correlation,request,get,jmscorrelation,id,if,correlation,null,correlation,request,get,jmsmessage,id,response,set,jmscorrelation,id,correlation,return,response
JmsInvokerServiceExporter -> protected Message createResponseMessage(Message request, Session session, RemoteInvocationResult result) 			throws JMSException;1495868221;Create the invocation result response message._<p>The default implementation creates a JMS ObjectMessage for the given_RemoteInvocationResult object. It sets the response's correlation id_to the request message's correlation id, if any_ otherwise to the_request message id._@param request the original request message_@param session the JMS session to use_@param result the invocation result_@return the message response to send_@throws javax.jms.JMSException if creating the messsage failed;protected Message createResponseMessage(Message request, Session session, RemoteInvocationResult result)_			throws JMSException {__		Message response = this.messageConverter.toMessage(result, session)__		String correlation = request.getJMSCorrelationID()__		if (correlation == null) {_			correlation = request.getJMSMessageID()__		}_		response.setJMSCorrelationID(correlation)__		return response__	};create,the,invocation,result,response,message,p,the,default,implementation,creates,a,jms,object,message,for,the,given,remote,invocation,result,object,it,sets,the,response,s,correlation,id,to,the,request,message,s,correlation,id,if,any,otherwise,to,the,request,message,id,param,request,the,original,request,message,param,session,the,jms,session,to,use,param,result,the,invocation,result,return,the,message,response,to,send,throws,javax,jms,jmsexception,if,creating,the,messsage,failed;protected,message,create,response,message,message,request,session,session,remote,invocation,result,result,throws,jmsexception,message,response,this,message,converter,to,message,result,session,string,correlation,request,get,jmscorrelation,id,if,correlation,null,correlation,request,get,jmsmessage,id,response,set,jmscorrelation,id,correlation,return,response
JmsInvokerServiceExporter -> protected Message createResponseMessage(Message request, Session session, RemoteInvocationResult result) 			throws JMSException;1496259743;Create the invocation result response message._<p>The default implementation creates a JMS ObjectMessage for the given_RemoteInvocationResult object. It sets the response's correlation id_to the request message's correlation id, if any_ otherwise to the_request message id._@param request the original request message_@param session the JMS session to use_@param result the invocation result_@return the message response to send_@throws javax.jms.JMSException if creating the messsage failed;protected Message createResponseMessage(Message request, Session session, RemoteInvocationResult result)_			throws JMSException {__		Message response = this.messageConverter.toMessage(result, session)__		String correlation = request.getJMSCorrelationID()__		if (correlation == null) {_			correlation = request.getJMSMessageID()__		}_		response.setJMSCorrelationID(correlation)__		return response__	};create,the,invocation,result,response,message,p,the,default,implementation,creates,a,jms,object,message,for,the,given,remote,invocation,result,object,it,sets,the,response,s,correlation,id,to,the,request,message,s,correlation,id,if,any,otherwise,to,the,request,message,id,param,request,the,original,request,message,param,session,the,jms,session,to,use,param,result,the,invocation,result,return,the,message,response,to,send,throws,javax,jms,jmsexception,if,creating,the,messsage,failed;protected,message,create,response,message,message,request,session,session,remote,invocation,result,result,throws,jmsexception,message,response,this,message,converter,to,message,result,session,string,correlation,request,get,jmscorrelation,id,if,correlation,null,correlation,request,get,jmsmessage,id,response,set,jmscorrelation,id,correlation,return,response
JmsInvokerServiceExporter -> protected Message createResponseMessage(Message request, Session session, RemoteInvocationResult result) 			throws JMSException;1496837955;Create the invocation result response message._<p>The default implementation creates a JMS ObjectMessage for the given_RemoteInvocationResult object. It sets the response's correlation id_to the request message's correlation id, if any_ otherwise to the_request message id._@param request the original request message_@param session the JMS session to use_@param result the invocation result_@return the message response to send_@throws javax.jms.JMSException if creating the messsage failed;protected Message createResponseMessage(Message request, Session session, RemoteInvocationResult result)_			throws JMSException {__		Message response = this.messageConverter.toMessage(result, session)__		String correlation = request.getJMSCorrelationID()__		if (correlation == null) {_			correlation = request.getJMSMessageID()__		}_		response.setJMSCorrelationID(correlation)__		return response__	};create,the,invocation,result,response,message,p,the,default,implementation,creates,a,jms,object,message,for,the,given,remote,invocation,result,object,it,sets,the,response,s,correlation,id,to,the,request,message,s,correlation,id,if,any,otherwise,to,the,request,message,id,param,request,the,original,request,message,param,session,the,jms,session,to,use,param,result,the,invocation,result,return,the,message,response,to,send,throws,javax,jms,jmsexception,if,creating,the,messsage,failed;protected,message,create,response,message,message,request,session,session,remote,invocation,result,result,throws,jmsexception,message,response,this,message,converter,to,message,result,session,string,correlation,request,get,jmscorrelation,id,if,correlation,null,correlation,request,get,jmsmessage,id,response,set,jmscorrelation,id,correlation,return,response
JmsInvokerServiceExporter -> protected Message createResponseMessage(Message request, Session session, RemoteInvocationResult result) 			throws JMSException;1500495740;Create the invocation result response message._<p>The default implementation creates a JMS ObjectMessage for the given_RemoteInvocationResult object. It sets the response's correlation id_to the request message's correlation id, if any_ otherwise to the_request message id._@param request the original request message_@param session the JMS session to use_@param result the invocation result_@return the message response to send_@throws javax.jms.JMSException if creating the messsage failed;protected Message createResponseMessage(Message request, Session session, RemoteInvocationResult result)_			throws JMSException {__		Message response = this.messageConverter.toMessage(result, session)__		String correlation = request.getJMSCorrelationID()__		if (correlation == null) {_			correlation = request.getJMSMessageID()__		}_		response.setJMSCorrelationID(correlation)__		return response__	};create,the,invocation,result,response,message,p,the,default,implementation,creates,a,jms,object,message,for,the,given,remote,invocation,result,object,it,sets,the,response,s,correlation,id,to,the,request,message,s,correlation,id,if,any,otherwise,to,the,request,message,id,param,request,the,original,request,message,param,session,the,jms,session,to,use,param,result,the,invocation,result,return,the,message,response,to,send,throws,javax,jms,jmsexception,if,creating,the,messsage,failed;protected,message,create,response,message,message,request,session,session,remote,invocation,result,result,throws,jmsexception,message,response,this,message,converter,to,message,result,session,string,correlation,request,get,jmscorrelation,id,if,correlation,null,correlation,request,get,jmsmessage,id,response,set,jmscorrelation,id,correlation,return,response
JmsInvokerServiceExporter -> protected Message createResponseMessage(Message request, Session session, RemoteInvocationResult result) 			throws JMSException;1532091916;Create the invocation result response message._<p>The default implementation creates a JMS ObjectMessage for the given_RemoteInvocationResult object. It sets the response's correlation id_to the request message's correlation id, if any_ otherwise to the_request message id._@param request the original request message_@param session the JMS session to use_@param result the invocation result_@return the message response to send_@throws javax.jms.JMSException if creating the messsage failed;protected Message createResponseMessage(Message request, Session session, RemoteInvocationResult result)_			throws JMSException {__		Message response = this.messageConverter.toMessage(result, session)__		String correlation = request.getJMSCorrelationID()__		if (correlation == null) {_			correlation = request.getJMSMessageID()__		}_		response.setJMSCorrelationID(correlation)__		return response__	};create,the,invocation,result,response,message,p,the,default,implementation,creates,a,jms,object,message,for,the,given,remote,invocation,result,object,it,sets,the,response,s,correlation,id,to,the,request,message,s,correlation,id,if,any,otherwise,to,the,request,message,id,param,request,the,original,request,message,param,session,the,jms,session,to,use,param,result,the,invocation,result,return,the,message,response,to,send,throws,javax,jms,jmsexception,if,creating,the,messsage,failed;protected,message,create,response,message,message,request,session,session,remote,invocation,result,result,throws,jmsexception,message,response,this,message,converter,to,message,result,session,string,correlation,request,get,jmscorrelation,id,if,correlation,null,correlation,request,get,jmsmessage,id,response,set,jmscorrelation,id,correlation,return,response
JmsInvokerServiceExporter -> protected Message createResponseMessage(Message request, Session session, RemoteInvocationResult result) 			throws JMSException;1542613849;Create the invocation result response message._<p>The default implementation creates a JMS ObjectMessage for the given_RemoteInvocationResult object. It sets the response's correlation id_to the request message's correlation id, if any_ otherwise to the_request message id._@param request the original request message_@param session the JMS session to use_@param result the invocation result_@return the message response to send_@throws javax.jms.JMSException if creating the message failed;protected Message createResponseMessage(Message request, Session session, RemoteInvocationResult result)_			throws JMSException {__		Message response = this.messageConverter.toMessage(result, session)__		String correlation = request.getJMSCorrelationID()__		if (correlation == null) {_			correlation = request.getJMSMessageID()__		}_		response.setJMSCorrelationID(correlation)__		return response__	};create,the,invocation,result,response,message,p,the,default,implementation,creates,a,jms,object,message,for,the,given,remote,invocation,result,object,it,sets,the,response,s,correlation,id,to,the,request,message,s,correlation,id,if,any,otherwise,to,the,request,message,id,param,request,the,original,request,message,param,session,the,jms,session,to,use,param,result,the,invocation,result,return,the,message,response,to,send,throws,javax,jms,jmsexception,if,creating,the,message,failed;protected,message,create,response,message,message,request,session,session,remote,invocation,result,result,throws,jmsexception,message,response,this,message,converter,to,message,result,session,string,correlation,request,get,jmscorrelation,id,if,correlation,null,correlation,request,get,jmsmessage,id,response,set,jmscorrelation,id,correlation,return,response
JmsInvokerServiceExporter -> public void setIgnoreInvalidRequests(boolean ignoreInvalidRequests);1328020251;Set whether invalidly formatted messages should be discarded._Default is "true"._<p>Switch this flag to "false" to throw an exception back to the_listener container. This will typically lead to redelivery of_the message, which is usually undesirable - since the message_content will be the same (that is, still invalid).;public void setIgnoreInvalidRequests(boolean ignoreInvalidRequests) {_		this.ignoreInvalidRequests = ignoreInvalidRequests__	};set,whether,invalidly,formatted,messages,should,be,discarded,default,is,true,p,switch,this,flag,to,false,to,throw,an,exception,back,to,the,listener,container,this,will,typically,lead,to,redelivery,of,the,message,which,is,usually,undesirable,since,the,message,content,will,be,the,same,that,is,still,invalid;public,void,set,ignore,invalid,requests,boolean,ignore,invalid,requests,this,ignore,invalid,requests,ignore,invalid,requests
JmsInvokerServiceExporter -> public void setIgnoreInvalidRequests(boolean ignoreInvalidRequests);1356735495;Set whether invalidly formatted messages should be discarded._Default is "true"._<p>Switch this flag to "false" to throw an exception back to the_listener container. This will typically lead to redelivery of_the message, which is usually undesirable - since the message_content will be the same (that is, still invalid).;public void setIgnoreInvalidRequests(boolean ignoreInvalidRequests) {_		this.ignoreInvalidRequests = ignoreInvalidRequests__	};set,whether,invalidly,formatted,messages,should,be,discarded,default,is,true,p,switch,this,flag,to,false,to,throw,an,exception,back,to,the,listener,container,this,will,typically,lead,to,redelivery,of,the,message,which,is,usually,undesirable,since,the,message,content,will,be,the,same,that,is,still,invalid;public,void,set,ignore,invalid,requests,boolean,ignore,invalid,requests,this,ignore,invalid,requests,ignore,invalid,requests
JmsInvokerServiceExporter -> public void setIgnoreInvalidRequests(boolean ignoreInvalidRequests);1357119239;Set whether invalidly formatted messages should be discarded._Default is "true"._<p>Switch this flag to "false" to throw an exception back to the_listener container. This will typically lead to redelivery of_the message, which is usually undesirable - since the message_content will be the same (that is, still invalid).;public void setIgnoreInvalidRequests(boolean ignoreInvalidRequests) {_		this.ignoreInvalidRequests = ignoreInvalidRequests__	};set,whether,invalidly,formatted,messages,should,be,discarded,default,is,true,p,switch,this,flag,to,false,to,throw,an,exception,back,to,the,listener,container,this,will,typically,lead,to,redelivery,of,the,message,which,is,usually,undesirable,since,the,message,content,will,be,the,same,that,is,still,invalid;public,void,set,ignore,invalid,requests,boolean,ignore,invalid,requests,this,ignore,invalid,requests,ignore,invalid,requests
JmsInvokerServiceExporter -> public void setIgnoreInvalidRequests(boolean ignoreInvalidRequests);1368482696;Set whether invalidly formatted messages should be discarded._Default is "true"._<p>Switch this flag to "false" to throw an exception back to the_listener container. This will typically lead to redelivery of_the message, which is usually undesirable - since the message_content will be the same (that is, still invalid).;public void setIgnoreInvalidRequests(boolean ignoreInvalidRequests) {_		this.ignoreInvalidRequests = ignoreInvalidRequests__	};set,whether,invalidly,formatted,messages,should,be,discarded,default,is,true,p,switch,this,flag,to,false,to,throw,an,exception,back,to,the,listener,container,this,will,typically,lead,to,redelivery,of,the,message,which,is,usually,undesirable,since,the,message,content,will,be,the,same,that,is,still,invalid;public,void,set,ignore,invalid,requests,boolean,ignore,invalid,requests,this,ignore,invalid,requests,ignore,invalid,requests
JmsInvokerServiceExporter -> public void setIgnoreInvalidRequests(boolean ignoreInvalidRequests);1495868221;Set whether invalidly formatted messages should be discarded._Default is "true"._<p>Switch this flag to "false" to throw an exception back to the_listener container. This will typically lead to redelivery of_the message, which is usually undesirable - since the message_content will be the same (that is, still invalid).;public void setIgnoreInvalidRequests(boolean ignoreInvalidRequests) {_		this.ignoreInvalidRequests = ignoreInvalidRequests__	};set,whether,invalidly,formatted,messages,should,be,discarded,default,is,true,p,switch,this,flag,to,false,to,throw,an,exception,back,to,the,listener,container,this,will,typically,lead,to,redelivery,of,the,message,which,is,usually,undesirable,since,the,message,content,will,be,the,same,that,is,still,invalid;public,void,set,ignore,invalid,requests,boolean,ignore,invalid,requests,this,ignore,invalid,requests,ignore,invalid,requests
JmsInvokerServiceExporter -> public void setIgnoreInvalidRequests(boolean ignoreInvalidRequests);1496259743;Set whether invalidly formatted messages should be discarded._Default is "true"._<p>Switch this flag to "false" to throw an exception back to the_listener container. This will typically lead to redelivery of_the message, which is usually undesirable - since the message_content will be the same (that is, still invalid).;public void setIgnoreInvalidRequests(boolean ignoreInvalidRequests) {_		this.ignoreInvalidRequests = ignoreInvalidRequests__	};set,whether,invalidly,formatted,messages,should,be,discarded,default,is,true,p,switch,this,flag,to,false,to,throw,an,exception,back,to,the,listener,container,this,will,typically,lead,to,redelivery,of,the,message,which,is,usually,undesirable,since,the,message,content,will,be,the,same,that,is,still,invalid;public,void,set,ignore,invalid,requests,boolean,ignore,invalid,requests,this,ignore,invalid,requests,ignore,invalid,requests
JmsInvokerServiceExporter -> public void setIgnoreInvalidRequests(boolean ignoreInvalidRequests);1496837955;Set whether invalidly formatted messages should be discarded._Default is "true"._<p>Switch this flag to "false" to throw an exception back to the_listener container. This will typically lead to redelivery of_the message, which is usually undesirable - since the message_content will be the same (that is, still invalid).;public void setIgnoreInvalidRequests(boolean ignoreInvalidRequests) {_		this.ignoreInvalidRequests = ignoreInvalidRequests__	};set,whether,invalidly,formatted,messages,should,be,discarded,default,is,true,p,switch,this,flag,to,false,to,throw,an,exception,back,to,the,listener,container,this,will,typically,lead,to,redelivery,of,the,message,which,is,usually,undesirable,since,the,message,content,will,be,the,same,that,is,still,invalid;public,void,set,ignore,invalid,requests,boolean,ignore,invalid,requests,this,ignore,invalid,requests,ignore,invalid,requests
JmsInvokerServiceExporter -> public void setIgnoreInvalidRequests(boolean ignoreInvalidRequests);1500495740;Set whether invalidly formatted messages should be discarded._Default is "true"._<p>Switch this flag to "false" to throw an exception back to the_listener container. This will typically lead to redelivery of_the message, which is usually undesirable - since the message_content will be the same (that is, still invalid).;public void setIgnoreInvalidRequests(boolean ignoreInvalidRequests) {_		this.ignoreInvalidRequests = ignoreInvalidRequests__	};set,whether,invalidly,formatted,messages,should,be,discarded,default,is,true,p,switch,this,flag,to,false,to,throw,an,exception,back,to,the,listener,container,this,will,typically,lead,to,redelivery,of,the,message,which,is,usually,undesirable,since,the,message,content,will,be,the,same,that,is,still,invalid;public,void,set,ignore,invalid,requests,boolean,ignore,invalid,requests,this,ignore,invalid,requests,ignore,invalid,requests
JmsInvokerServiceExporter -> public void setIgnoreInvalidRequests(boolean ignoreInvalidRequests);1532091916;Set whether invalidly formatted messages should be discarded._Default is "true"._<p>Switch this flag to "false" to throw an exception back to the_listener container. This will typically lead to redelivery of_the message, which is usually undesirable - since the message_content will be the same (that is, still invalid).;public void setIgnoreInvalidRequests(boolean ignoreInvalidRequests) {_		this.ignoreInvalidRequests = ignoreInvalidRequests__	};set,whether,invalidly,formatted,messages,should,be,discarded,default,is,true,p,switch,this,flag,to,false,to,throw,an,exception,back,to,the,listener,container,this,will,typically,lead,to,redelivery,of,the,message,which,is,usually,undesirable,since,the,message,content,will,be,the,same,that,is,still,invalid;public,void,set,ignore,invalid,requests,boolean,ignore,invalid,requests,this,ignore,invalid,requests,ignore,invalid,requests
JmsInvokerServiceExporter -> public void setIgnoreInvalidRequests(boolean ignoreInvalidRequests);1542613849;Set whether invalidly formatted messages should be discarded._Default is "true"._<p>Switch this flag to "false" to throw an exception back to the_listener container. This will typically lead to redelivery of_the message, which is usually undesirable - since the message_content will be the same (that is, still invalid).;public void setIgnoreInvalidRequests(boolean ignoreInvalidRequests) {_		this.ignoreInvalidRequests = ignoreInvalidRequests__	};set,whether,invalidly,formatted,messages,should,be,discarded,default,is,true,p,switch,this,flag,to,false,to,throw,an,exception,back,to,the,listener,container,this,will,typically,lead,to,redelivery,of,the,message,which,is,usually,undesirable,since,the,message,content,will,be,the,same,that,is,still,invalid;public,void,set,ignore,invalid,requests,boolean,ignore,invalid,requests,this,ignore,invalid,requests,ignore,invalid,requests
JmsInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			Message requestMessage, Session session, RemoteInvocationResult result) throws JMSException;1328020251;Send the given RemoteInvocationResult as a JMS message to the originator._@param requestMessage current request message_@param session the JMS Session to use_@param result the RemoteInvocationResult object_@throws javax.jms.JMSException if thrown by trying to send the message;protected void writeRemoteInvocationResult(_			Message requestMessage, Session session, RemoteInvocationResult result) throws JMSException {__		Message response = createResponseMessage(requestMessage, session, result)__		MessageProducer producer = session.createProducer(requestMessage.getJMSReplyTo())__		try {_			producer.send(response)__		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,remote,invocation,result,as,a,jms,message,to,the,originator,param,request,message,current,request,message,param,session,the,jms,session,to,use,param,result,the,remote,invocation,result,object,throws,javax,jms,jmsexception,if,thrown,by,trying,to,send,the,message;protected,void,write,remote,invocation,result,message,request,message,session,session,remote,invocation,result,result,throws,jmsexception,message,response,create,response,message,request,message,session,result,message,producer,producer,session,create,producer,request,message,get,jmsreply,to,try,producer,send,response,finally,jms,utils,close,message,producer,producer
JmsInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			Message requestMessage, Session session, RemoteInvocationResult result) throws JMSException;1356735495;Send the given RemoteInvocationResult as a JMS message to the originator._@param requestMessage current request message_@param session the JMS Session to use_@param result the RemoteInvocationResult object_@throws javax.jms.JMSException if thrown by trying to send the message;protected void writeRemoteInvocationResult(_			Message requestMessage, Session session, RemoteInvocationResult result) throws JMSException {__		Message response = createResponseMessage(requestMessage, session, result)__		MessageProducer producer = session.createProducer(requestMessage.getJMSReplyTo())__		try {_			producer.send(response)__		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,remote,invocation,result,as,a,jms,message,to,the,originator,param,request,message,current,request,message,param,session,the,jms,session,to,use,param,result,the,remote,invocation,result,object,throws,javax,jms,jmsexception,if,thrown,by,trying,to,send,the,message;protected,void,write,remote,invocation,result,message,request,message,session,session,remote,invocation,result,result,throws,jmsexception,message,response,create,response,message,request,message,session,result,message,producer,producer,session,create,producer,request,message,get,jmsreply,to,try,producer,send,response,finally,jms,utils,close,message,producer,producer
JmsInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			Message requestMessage, Session session, RemoteInvocationResult result) throws JMSException;1357119239;Send the given RemoteInvocationResult as a JMS message to the originator._@param requestMessage current request message_@param session the JMS Session to use_@param result the RemoteInvocationResult object_@throws javax.jms.JMSException if thrown by trying to send the message;protected void writeRemoteInvocationResult(_			Message requestMessage, Session session, RemoteInvocationResult result) throws JMSException {__		Message response = createResponseMessage(requestMessage, session, result)__		MessageProducer producer = session.createProducer(requestMessage.getJMSReplyTo())__		try {_			producer.send(response)__		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,remote,invocation,result,as,a,jms,message,to,the,originator,param,request,message,current,request,message,param,session,the,jms,session,to,use,param,result,the,remote,invocation,result,object,throws,javax,jms,jmsexception,if,thrown,by,trying,to,send,the,message;protected,void,write,remote,invocation,result,message,request,message,session,session,remote,invocation,result,result,throws,jmsexception,message,response,create,response,message,request,message,session,result,message,producer,producer,session,create,producer,request,message,get,jmsreply,to,try,producer,send,response,finally,jms,utils,close,message,producer,producer
JmsInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			Message requestMessage, Session session, RemoteInvocationResult result) throws JMSException;1368482696;Send the given RemoteInvocationResult as a JMS message to the originator._@param requestMessage current request message_@param session the JMS Session to use_@param result the RemoteInvocationResult object_@throws javax.jms.JMSException if thrown by trying to send the message;protected void writeRemoteInvocationResult(_			Message requestMessage, Session session, RemoteInvocationResult result) throws JMSException {__		Message response = createResponseMessage(requestMessage, session, result)__		MessageProducer producer = session.createProducer(requestMessage.getJMSReplyTo())__		try {_			producer.send(response)__		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,remote,invocation,result,as,a,jms,message,to,the,originator,param,request,message,current,request,message,param,session,the,jms,session,to,use,param,result,the,remote,invocation,result,object,throws,javax,jms,jmsexception,if,thrown,by,trying,to,send,the,message;protected,void,write,remote,invocation,result,message,request,message,session,session,remote,invocation,result,result,throws,jmsexception,message,response,create,response,message,request,message,session,result,message,producer,producer,session,create,producer,request,message,get,jmsreply,to,try,producer,send,response,finally,jms,utils,close,message,producer,producer
JmsInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			Message requestMessage, Session session, RemoteInvocationResult result) throws JMSException;1495868221;Send the given RemoteInvocationResult as a JMS message to the originator._@param requestMessage current request message_@param session the JMS Session to use_@param result the RemoteInvocationResult object_@throws javax.jms.JMSException if thrown by trying to send the message;protected void writeRemoteInvocationResult(_			Message requestMessage, Session session, RemoteInvocationResult result) throws JMSException {__		Message response = createResponseMessage(requestMessage, session, result)__		MessageProducer producer = session.createProducer(requestMessage.getJMSReplyTo())__		try {_			producer.send(response)__		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,remote,invocation,result,as,a,jms,message,to,the,originator,param,request,message,current,request,message,param,session,the,jms,session,to,use,param,result,the,remote,invocation,result,object,throws,javax,jms,jmsexception,if,thrown,by,trying,to,send,the,message;protected,void,write,remote,invocation,result,message,request,message,session,session,remote,invocation,result,result,throws,jmsexception,message,response,create,response,message,request,message,session,result,message,producer,producer,session,create,producer,request,message,get,jmsreply,to,try,producer,send,response,finally,jms,utils,close,message,producer,producer
JmsInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			Message requestMessage, Session session, RemoteInvocationResult result) throws JMSException;1496259743;Send the given RemoteInvocationResult as a JMS message to the originator._@param requestMessage current request message_@param session the JMS Session to use_@param result the RemoteInvocationResult object_@throws javax.jms.JMSException if thrown by trying to send the message;protected void writeRemoteInvocationResult(_			Message requestMessage, Session session, RemoteInvocationResult result) throws JMSException {__		Message response = createResponseMessage(requestMessage, session, result)__		MessageProducer producer = session.createProducer(requestMessage.getJMSReplyTo())__		try {_			producer.send(response)__		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,remote,invocation,result,as,a,jms,message,to,the,originator,param,request,message,current,request,message,param,session,the,jms,session,to,use,param,result,the,remote,invocation,result,object,throws,javax,jms,jmsexception,if,thrown,by,trying,to,send,the,message;protected,void,write,remote,invocation,result,message,request,message,session,session,remote,invocation,result,result,throws,jmsexception,message,response,create,response,message,request,message,session,result,message,producer,producer,session,create,producer,request,message,get,jmsreply,to,try,producer,send,response,finally,jms,utils,close,message,producer,producer
JmsInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			Message requestMessage, Session session, RemoteInvocationResult result) throws JMSException;1496837955;Send the given RemoteInvocationResult as a JMS message to the originator._@param requestMessage current request message_@param session the JMS Session to use_@param result the RemoteInvocationResult object_@throws javax.jms.JMSException if thrown by trying to send the message;protected void writeRemoteInvocationResult(_			Message requestMessage, Session session, RemoteInvocationResult result) throws JMSException {__		Message response = createResponseMessage(requestMessage, session, result)__		MessageProducer producer = session.createProducer(requestMessage.getJMSReplyTo())__		try {_			producer.send(response)__		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,remote,invocation,result,as,a,jms,message,to,the,originator,param,request,message,current,request,message,param,session,the,jms,session,to,use,param,result,the,remote,invocation,result,object,throws,javax,jms,jmsexception,if,thrown,by,trying,to,send,the,message;protected,void,write,remote,invocation,result,message,request,message,session,session,remote,invocation,result,result,throws,jmsexception,message,response,create,response,message,request,message,session,result,message,producer,producer,session,create,producer,request,message,get,jmsreply,to,try,producer,send,response,finally,jms,utils,close,message,producer,producer
JmsInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			Message requestMessage, Session session, RemoteInvocationResult result) throws JMSException;1500495740;Send the given RemoteInvocationResult as a JMS message to the originator._@param requestMessage current request message_@param session the JMS Session to use_@param result the RemoteInvocationResult object_@throws javax.jms.JMSException if thrown by trying to send the message;protected void writeRemoteInvocationResult(_			Message requestMessage, Session session, RemoteInvocationResult result) throws JMSException {__		Message response = createResponseMessage(requestMessage, session, result)__		MessageProducer producer = session.createProducer(requestMessage.getJMSReplyTo())__		try {_			producer.send(response)__		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,remote,invocation,result,as,a,jms,message,to,the,originator,param,request,message,current,request,message,param,session,the,jms,session,to,use,param,result,the,remote,invocation,result,object,throws,javax,jms,jmsexception,if,thrown,by,trying,to,send,the,message;protected,void,write,remote,invocation,result,message,request,message,session,session,remote,invocation,result,result,throws,jmsexception,message,response,create,response,message,request,message,session,result,message,producer,producer,session,create,producer,request,message,get,jmsreply,to,try,producer,send,response,finally,jms,utils,close,message,producer,producer
JmsInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			Message requestMessage, Session session, RemoteInvocationResult result) throws JMSException;1532091916;Send the given RemoteInvocationResult as a JMS message to the originator._@param requestMessage current request message_@param session the JMS Session to use_@param result the RemoteInvocationResult object_@throws javax.jms.JMSException if thrown by trying to send the message;protected void writeRemoteInvocationResult(_			Message requestMessage, Session session, RemoteInvocationResult result) throws JMSException {__		Message response = createResponseMessage(requestMessage, session, result)__		MessageProducer producer = session.createProducer(requestMessage.getJMSReplyTo())__		try {_			producer.send(response)__		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,remote,invocation,result,as,a,jms,message,to,the,originator,param,request,message,current,request,message,param,session,the,jms,session,to,use,param,result,the,remote,invocation,result,object,throws,javax,jms,jmsexception,if,thrown,by,trying,to,send,the,message;protected,void,write,remote,invocation,result,message,request,message,session,session,remote,invocation,result,result,throws,jmsexception,message,response,create,response,message,request,message,session,result,message,producer,producer,session,create,producer,request,message,get,jmsreply,to,try,producer,send,response,finally,jms,utils,close,message,producer,producer
JmsInvokerServiceExporter -> protected void writeRemoteInvocationResult( 			Message requestMessage, Session session, RemoteInvocationResult result) throws JMSException;1542613849;Send the given RemoteInvocationResult as a JMS message to the originator._@param requestMessage current request message_@param session the JMS Session to use_@param result the RemoteInvocationResult object_@throws javax.jms.JMSException if thrown by trying to send the message;protected void writeRemoteInvocationResult(_			Message requestMessage, Session session, RemoteInvocationResult result) throws JMSException {__		Message response = createResponseMessage(requestMessage, session, result)__		MessageProducer producer = session.createProducer(requestMessage.getJMSReplyTo())__		try {_			producer.send(response)__		}_		finally {_			JmsUtils.closeMessageProducer(producer)__		}_	};send,the,given,remote,invocation,result,as,a,jms,message,to,the,originator,param,request,message,current,request,message,param,session,the,jms,session,to,use,param,result,the,remote,invocation,result,object,throws,javax,jms,jmsexception,if,thrown,by,trying,to,send,the,message;protected,void,write,remote,invocation,result,message,request,message,session,session,remote,invocation,result,result,throws,jmsexception,message,response,create,response,message,request,message,session,result,message,producer,producer,session,create,producer,request,message,get,jmsreply,to,try,producer,send,response,finally,jms,utils,close,message,producer,producer
JmsInvokerServiceExporter -> protected RemoteInvocation onInvalidRequest(Message requestMessage) throws JMSException;1328020251;Callback that is invoked by {@link #readRemoteInvocation}_when it encounters an invalid request message._<p>The default implementation either discards the invalid message or_throws a MessageFormatException - according to the "ignoreInvalidRequests"_flag, which is set to "true" (that is, discard invalid messages) by default._@param requestMessage the invalid request message_@return the RemoteInvocation to expose for the invalid request (typically_<code>null</code> in case of an invalid message that will simply be ignored)_@throws javax.jms.JMSException in case of the invalid request supposed_to lead to an exception (instead of ignoring it)_@see #readRemoteInvocation_@see #setIgnoreInvalidRequests;protected RemoteInvocation onInvalidRequest(Message requestMessage) throws JMSException {_		if (this.ignoreInvalidRequests) {_			if (logger.isWarnEnabled()) {_				logger.warn("Invalid request message will be discarded: " + requestMessage)__			}_			return null__		}_		else {_			throw new MessageFormatException("Invalid request message: " + requestMessage)__		}_	};callback,that,is,invoked,by,link,read,remote,invocation,when,it,encounters,an,invalid,request,message,p,the,default,implementation,either,discards,the,invalid,message,or,throws,a,message,format,exception,according,to,the,ignore,invalid,requests,flag,which,is,set,to,true,that,is,discard,invalid,messages,by,default,param,request,message,the,invalid,request,message,return,the,remote,invocation,to,expose,for,the,invalid,request,typically,code,null,code,in,case,of,an,invalid,message,that,will,simply,be,ignored,throws,javax,jms,jmsexception,in,case,of,the,invalid,request,supposed,to,lead,to,an,exception,instead,of,ignoring,it,see,read,remote,invocation,see,set,ignore,invalid,requests;protected,remote,invocation,on,invalid,request,message,request,message,throws,jmsexception,if,this,ignore,invalid,requests,if,logger,is,warn,enabled,logger,warn,invalid,request,message,will,be,discarded,request,message,return,null,else,throw,new,message,format,exception,invalid,request,message,request,message
JmsInvokerServiceExporter -> protected RemoteInvocation onInvalidRequest(Message requestMessage) throws JMSException;1356735495;Callback that is invoked by {@link #readRemoteInvocation}_when it encounters an invalid request message._<p>The default implementation either discards the invalid message or_throws a MessageFormatException - according to the "ignoreInvalidRequests"_flag, which is set to "true" (that is, discard invalid messages) by default._@param requestMessage the invalid request message_@return the RemoteInvocation to expose for the invalid request (typically_{@code null} in case of an invalid message that will simply be ignored)_@throws javax.jms.JMSException in case of the invalid request supposed_to lead to an exception (instead of ignoring it)_@see #readRemoteInvocation_@see #setIgnoreInvalidRequests;protected RemoteInvocation onInvalidRequest(Message requestMessage) throws JMSException {_		if (this.ignoreInvalidRequests) {_			if (logger.isWarnEnabled()) {_				logger.warn("Invalid request message will be discarded: " + requestMessage)__			}_			return null__		}_		else {_			throw new MessageFormatException("Invalid request message: " + requestMessage)__		}_	};callback,that,is,invoked,by,link,read,remote,invocation,when,it,encounters,an,invalid,request,message,p,the,default,implementation,either,discards,the,invalid,message,or,throws,a,message,format,exception,according,to,the,ignore,invalid,requests,flag,which,is,set,to,true,that,is,discard,invalid,messages,by,default,param,request,message,the,invalid,request,message,return,the,remote,invocation,to,expose,for,the,invalid,request,typically,code,null,in,case,of,an,invalid,message,that,will,simply,be,ignored,throws,javax,jms,jmsexception,in,case,of,the,invalid,request,supposed,to,lead,to,an,exception,instead,of,ignoring,it,see,read,remote,invocation,see,set,ignore,invalid,requests;protected,remote,invocation,on,invalid,request,message,request,message,throws,jmsexception,if,this,ignore,invalid,requests,if,logger,is,warn,enabled,logger,warn,invalid,request,message,will,be,discarded,request,message,return,null,else,throw,new,message,format,exception,invalid,request,message,request,message
JmsInvokerServiceExporter -> protected RemoteInvocation onInvalidRequest(Message requestMessage) throws JMSException;1357119239;Callback that is invoked by {@link #readRemoteInvocation}_when it encounters an invalid request message._<p>The default implementation either discards the invalid message or_throws a MessageFormatException - according to the "ignoreInvalidRequests"_flag, which is set to "true" (that is, discard invalid messages) by default._@param requestMessage the invalid request message_@return the RemoteInvocation to expose for the invalid request (typically_{@code null} in case of an invalid message that will simply be ignored)_@throws javax.jms.JMSException in case of the invalid request supposed_to lead to an exception (instead of ignoring it)_@see #readRemoteInvocation_@see #setIgnoreInvalidRequests;protected RemoteInvocation onInvalidRequest(Message requestMessage) throws JMSException {_		if (this.ignoreInvalidRequests) {_			if (logger.isWarnEnabled()) {_				logger.warn("Invalid request message will be discarded: " + requestMessage)__			}_			return null__		}_		else {_			throw new MessageFormatException("Invalid request message: " + requestMessage)__		}_	};callback,that,is,invoked,by,link,read,remote,invocation,when,it,encounters,an,invalid,request,message,p,the,default,implementation,either,discards,the,invalid,message,or,throws,a,message,format,exception,according,to,the,ignore,invalid,requests,flag,which,is,set,to,true,that,is,discard,invalid,messages,by,default,param,request,message,the,invalid,request,message,return,the,remote,invocation,to,expose,for,the,invalid,request,typically,code,null,in,case,of,an,invalid,message,that,will,simply,be,ignored,throws,javax,jms,jmsexception,in,case,of,the,invalid,request,supposed,to,lead,to,an,exception,instead,of,ignoring,it,see,read,remote,invocation,see,set,ignore,invalid,requests;protected,remote,invocation,on,invalid,request,message,request,message,throws,jmsexception,if,this,ignore,invalid,requests,if,logger,is,warn,enabled,logger,warn,invalid,request,message,will,be,discarded,request,message,return,null,else,throw,new,message,format,exception,invalid,request,message,request,message
JmsInvokerServiceExporter -> protected RemoteInvocation onInvalidRequest(Message requestMessage) throws JMSException;1368482696;Callback that is invoked by {@link #readRemoteInvocation}_when it encounters an invalid request message._<p>The default implementation either discards the invalid message or_throws a MessageFormatException - according to the "ignoreInvalidRequests"_flag, which is set to "true" (that is, discard invalid messages) by default._@param requestMessage the invalid request message_@return the RemoteInvocation to expose for the invalid request (typically_{@code null} in case of an invalid message that will simply be ignored)_@throws javax.jms.JMSException in case of the invalid request supposed_to lead to an exception (instead of ignoring it)_@see #readRemoteInvocation_@see #setIgnoreInvalidRequests;protected RemoteInvocation onInvalidRequest(Message requestMessage) throws JMSException {_		if (this.ignoreInvalidRequests) {_			if (logger.isWarnEnabled()) {_				logger.warn("Invalid request message will be discarded: " + requestMessage)__			}_			return null__		}_		else {_			throw new MessageFormatException("Invalid request message: " + requestMessage)__		}_	};callback,that,is,invoked,by,link,read,remote,invocation,when,it,encounters,an,invalid,request,message,p,the,default,implementation,either,discards,the,invalid,message,or,throws,a,message,format,exception,according,to,the,ignore,invalid,requests,flag,which,is,set,to,true,that,is,discard,invalid,messages,by,default,param,request,message,the,invalid,request,message,return,the,remote,invocation,to,expose,for,the,invalid,request,typically,code,null,in,case,of,an,invalid,message,that,will,simply,be,ignored,throws,javax,jms,jmsexception,in,case,of,the,invalid,request,supposed,to,lead,to,an,exception,instead,of,ignoring,it,see,read,remote,invocation,see,set,ignore,invalid,requests;protected,remote,invocation,on,invalid,request,message,request,message,throws,jmsexception,if,this,ignore,invalid,requests,if,logger,is,warn,enabled,logger,warn,invalid,request,message,will,be,discarded,request,message,return,null,else,throw,new,message,format,exception,invalid,request,message,request,message
JmsInvokerServiceExporter -> @Nullable 	protected RemoteInvocation readRemoteInvocation(Message requestMessage) throws JMSException;1495868221;Read a RemoteInvocation from the given JMS message._@param requestMessage current request message_@return the RemoteInvocation object (or {@code null}_in case of an invalid message that will simply be ignored)_@throws javax.jms.JMSException in case of message access failure;@Nullable_	protected RemoteInvocation readRemoteInvocation(Message requestMessage) throws JMSException {_		Object content = this.messageConverter.fromMessage(requestMessage)__		if (content instanceof RemoteInvocation) {_			return (RemoteInvocation) content__		}_		return onInvalidRequest(requestMessage)__	};read,a,remote,invocation,from,the,given,jms,message,param,request,message,current,request,message,return,the,remote,invocation,object,or,code,null,in,case,of,an,invalid,message,that,will,simply,be,ignored,throws,javax,jms,jmsexception,in,case,of,message,access,failure;nullable,protected,remote,invocation,read,remote,invocation,message,request,message,throws,jmsexception,object,content,this,message,converter,from,message,request,message,if,content,instanceof,remote,invocation,return,remote,invocation,content,return,on,invalid,request,request,message
JmsInvokerServiceExporter -> @Nullable 	protected RemoteInvocation readRemoteInvocation(Message requestMessage) throws JMSException;1496259743;Read a RemoteInvocation from the given JMS message._@param requestMessage current request message_@return the RemoteInvocation object (or {@code null}_in case of an invalid message that will simply be ignored)_@throws javax.jms.JMSException in case of message access failure;@Nullable_	protected RemoteInvocation readRemoteInvocation(Message requestMessage) throws JMSException {_		Object content = this.messageConverter.fromMessage(requestMessage)__		if (content instanceof RemoteInvocation) {_			return (RemoteInvocation) content__		}_		return onInvalidRequest(requestMessage)__	};read,a,remote,invocation,from,the,given,jms,message,param,request,message,current,request,message,return,the,remote,invocation,object,or,code,null,in,case,of,an,invalid,message,that,will,simply,be,ignored,throws,javax,jms,jmsexception,in,case,of,message,access,failure;nullable,protected,remote,invocation,read,remote,invocation,message,request,message,throws,jmsexception,object,content,this,message,converter,from,message,request,message,if,content,instanceof,remote,invocation,return,remote,invocation,content,return,on,invalid,request,request,message
JmsInvokerServiceExporter -> @Nullable 	protected RemoteInvocation readRemoteInvocation(Message requestMessage) throws JMSException;1496837955;Read a RemoteInvocation from the given JMS message._@param requestMessage current request message_@return the RemoteInvocation object (or {@code null}_in case of an invalid message that will simply be ignored)_@throws javax.jms.JMSException in case of message access failure;@Nullable_	protected RemoteInvocation readRemoteInvocation(Message requestMessage) throws JMSException {_		Object content = this.messageConverter.fromMessage(requestMessage)__		if (content instanceof RemoteInvocation) {_			return (RemoteInvocation) content__		}_		return onInvalidRequest(requestMessage)__	};read,a,remote,invocation,from,the,given,jms,message,param,request,message,current,request,message,return,the,remote,invocation,object,or,code,null,in,case,of,an,invalid,message,that,will,simply,be,ignored,throws,javax,jms,jmsexception,in,case,of,message,access,failure;nullable,protected,remote,invocation,read,remote,invocation,message,request,message,throws,jmsexception,object,content,this,message,converter,from,message,request,message,if,content,instanceof,remote,invocation,return,remote,invocation,content,return,on,invalid,request,request,message
JmsInvokerServiceExporter -> @Nullable 	protected RemoteInvocation readRemoteInvocation(Message requestMessage) throws JMSException;1500495740;Read a RemoteInvocation from the given JMS message._@param requestMessage current request message_@return the RemoteInvocation object (or {@code null}_in case of an invalid message that will simply be ignored)_@throws javax.jms.JMSException in case of message access failure;@Nullable_	protected RemoteInvocation readRemoteInvocation(Message requestMessage) throws JMSException {_		Object content = this.messageConverter.fromMessage(requestMessage)__		if (content instanceof RemoteInvocation) {_			return (RemoteInvocation) content__		}_		return onInvalidRequest(requestMessage)__	};read,a,remote,invocation,from,the,given,jms,message,param,request,message,current,request,message,return,the,remote,invocation,object,or,code,null,in,case,of,an,invalid,message,that,will,simply,be,ignored,throws,javax,jms,jmsexception,in,case,of,message,access,failure;nullable,protected,remote,invocation,read,remote,invocation,message,request,message,throws,jmsexception,object,content,this,message,converter,from,message,request,message,if,content,instanceof,remote,invocation,return,remote,invocation,content,return,on,invalid,request,request,message
JmsInvokerServiceExporter -> @Nullable 	protected RemoteInvocation readRemoteInvocation(Message requestMessage) throws JMSException;1532091916;Read a RemoteInvocation from the given JMS message._@param requestMessage current request message_@return the RemoteInvocation object (or {@code null}_in case of an invalid message that will simply be ignored)_@throws javax.jms.JMSException in case of message access failure;@Nullable_	protected RemoteInvocation readRemoteInvocation(Message requestMessage) throws JMSException {_		Object content = this.messageConverter.fromMessage(requestMessage)__		if (content instanceof RemoteInvocation) {_			return (RemoteInvocation) content__		}_		return onInvalidRequest(requestMessage)__	};read,a,remote,invocation,from,the,given,jms,message,param,request,message,current,request,message,return,the,remote,invocation,object,or,code,null,in,case,of,an,invalid,message,that,will,simply,be,ignored,throws,javax,jms,jmsexception,in,case,of,message,access,failure;nullable,protected,remote,invocation,read,remote,invocation,message,request,message,throws,jmsexception,object,content,this,message,converter,from,message,request,message,if,content,instanceof,remote,invocation,return,remote,invocation,content,return,on,invalid,request,request,message
JmsInvokerServiceExporter -> @Nullable 	protected RemoteInvocation readRemoteInvocation(Message requestMessage) throws JMSException;1542613849;Read a RemoteInvocation from the given JMS message._@param requestMessage current request message_@return the RemoteInvocation object (or {@code null}_in case of an invalid message that will simply be ignored)_@throws javax.jms.JMSException in case of message access failure;@Nullable_	protected RemoteInvocation readRemoteInvocation(Message requestMessage) throws JMSException {_		Object content = this.messageConverter.fromMessage(requestMessage)__		if (content instanceof RemoteInvocation) {_			return (RemoteInvocation) content__		}_		return onInvalidRequest(requestMessage)__	};read,a,remote,invocation,from,the,given,jms,message,param,request,message,current,request,message,return,the,remote,invocation,object,or,code,null,in,case,of,an,invalid,message,that,will,simply,be,ignored,throws,javax,jms,jmsexception,in,case,of,message,access,failure;nullable,protected,remote,invocation,read,remote,invocation,message,request,message,throws,jmsexception,object,content,this,message,converter,from,message,request,message,if,content,instanceof,remote,invocation,return,remote,invocation,content,return,on,invalid,request,request,message
JmsInvokerServiceExporter -> @Nullable 	protected RemoteInvocation onInvalidRequest(Message requestMessage) throws JMSException;1495868221;Callback that is invoked by {@link #readRemoteInvocation}_when it encounters an invalid request message._<p>The default implementation either discards the invalid message or_throws a MessageFormatException - according to the "ignoreInvalidRequests"_flag, which is set to "true" (that is, discard invalid messages) by default._@param requestMessage the invalid request message_@return the RemoteInvocation to expose for the invalid request (typically_{@code null} in case of an invalid message that will simply be ignored)_@throws javax.jms.JMSException in case of the invalid request supposed_to lead to an exception (instead of ignoring it)_@see #readRemoteInvocation_@see #setIgnoreInvalidRequests;@Nullable_	protected RemoteInvocation onInvalidRequest(Message requestMessage) throws JMSException {_		if (this.ignoreInvalidRequests) {_			if (logger.isWarnEnabled()) {_				logger.warn("Invalid request message will be discarded: " + requestMessage)__			}_			return null__		}_		else {_			throw new MessageFormatException("Invalid request message: " + requestMessage)__		}_	};callback,that,is,invoked,by,link,read,remote,invocation,when,it,encounters,an,invalid,request,message,p,the,default,implementation,either,discards,the,invalid,message,or,throws,a,message,format,exception,according,to,the,ignore,invalid,requests,flag,which,is,set,to,true,that,is,discard,invalid,messages,by,default,param,request,message,the,invalid,request,message,return,the,remote,invocation,to,expose,for,the,invalid,request,typically,code,null,in,case,of,an,invalid,message,that,will,simply,be,ignored,throws,javax,jms,jmsexception,in,case,of,the,invalid,request,supposed,to,lead,to,an,exception,instead,of,ignoring,it,see,read,remote,invocation,see,set,ignore,invalid,requests;nullable,protected,remote,invocation,on,invalid,request,message,request,message,throws,jmsexception,if,this,ignore,invalid,requests,if,logger,is,warn,enabled,logger,warn,invalid,request,message,will,be,discarded,request,message,return,null,else,throw,new,message,format,exception,invalid,request,message,request,message
JmsInvokerServiceExporter -> @Nullable 	protected RemoteInvocation onInvalidRequest(Message requestMessage) throws JMSException;1496259743;Callback that is invoked by {@link #readRemoteInvocation}_when it encounters an invalid request message._<p>The default implementation either discards the invalid message or_throws a MessageFormatException - according to the "ignoreInvalidRequests"_flag, which is set to "true" (that is, discard invalid messages) by default._@param requestMessage the invalid request message_@return the RemoteInvocation to expose for the invalid request (typically_{@code null} in case of an invalid message that will simply be ignored)_@throws javax.jms.JMSException in case of the invalid request supposed_to lead to an exception (instead of ignoring it)_@see #readRemoteInvocation_@see #setIgnoreInvalidRequests;@Nullable_	protected RemoteInvocation onInvalidRequest(Message requestMessage) throws JMSException {_		if (this.ignoreInvalidRequests) {_			if (logger.isWarnEnabled()) {_				logger.warn("Invalid request message will be discarded: " + requestMessage)__			}_			return null__		}_		else {_			throw new MessageFormatException("Invalid request message: " + requestMessage)__		}_	};callback,that,is,invoked,by,link,read,remote,invocation,when,it,encounters,an,invalid,request,message,p,the,default,implementation,either,discards,the,invalid,message,or,throws,a,message,format,exception,according,to,the,ignore,invalid,requests,flag,which,is,set,to,true,that,is,discard,invalid,messages,by,default,param,request,message,the,invalid,request,message,return,the,remote,invocation,to,expose,for,the,invalid,request,typically,code,null,in,case,of,an,invalid,message,that,will,simply,be,ignored,throws,javax,jms,jmsexception,in,case,of,the,invalid,request,supposed,to,lead,to,an,exception,instead,of,ignoring,it,see,read,remote,invocation,see,set,ignore,invalid,requests;nullable,protected,remote,invocation,on,invalid,request,message,request,message,throws,jmsexception,if,this,ignore,invalid,requests,if,logger,is,warn,enabled,logger,warn,invalid,request,message,will,be,discarded,request,message,return,null,else,throw,new,message,format,exception,invalid,request,message,request,message
JmsInvokerServiceExporter -> @Nullable 	protected RemoteInvocation onInvalidRequest(Message requestMessage) throws JMSException;1496837955;Callback that is invoked by {@link #readRemoteInvocation}_when it encounters an invalid request message._<p>The default implementation either discards the invalid message or_throws a MessageFormatException - according to the "ignoreInvalidRequests"_flag, which is set to "true" (that is, discard invalid messages) by default._@param requestMessage the invalid request message_@return the RemoteInvocation to expose for the invalid request (typically_{@code null} in case of an invalid message that will simply be ignored)_@throws javax.jms.JMSException in case of the invalid request supposed_to lead to an exception (instead of ignoring it)_@see #readRemoteInvocation_@see #setIgnoreInvalidRequests;@Nullable_	protected RemoteInvocation onInvalidRequest(Message requestMessage) throws JMSException {_		if (this.ignoreInvalidRequests) {_			if (logger.isWarnEnabled()) {_				logger.warn("Invalid request message will be discarded: " + requestMessage)__			}_			return null__		}_		else {_			throw new MessageFormatException("Invalid request message: " + requestMessage)__		}_	};callback,that,is,invoked,by,link,read,remote,invocation,when,it,encounters,an,invalid,request,message,p,the,default,implementation,either,discards,the,invalid,message,or,throws,a,message,format,exception,according,to,the,ignore,invalid,requests,flag,which,is,set,to,true,that,is,discard,invalid,messages,by,default,param,request,message,the,invalid,request,message,return,the,remote,invocation,to,expose,for,the,invalid,request,typically,code,null,in,case,of,an,invalid,message,that,will,simply,be,ignored,throws,javax,jms,jmsexception,in,case,of,the,invalid,request,supposed,to,lead,to,an,exception,instead,of,ignoring,it,see,read,remote,invocation,see,set,ignore,invalid,requests;nullable,protected,remote,invocation,on,invalid,request,message,request,message,throws,jmsexception,if,this,ignore,invalid,requests,if,logger,is,warn,enabled,logger,warn,invalid,request,message,will,be,discarded,request,message,return,null,else,throw,new,message,format,exception,invalid,request,message,request,message
JmsInvokerServiceExporter -> @Nullable 	protected RemoteInvocation onInvalidRequest(Message requestMessage) throws JMSException;1500495740;Callback that is invoked by {@link #readRemoteInvocation}_when it encounters an invalid request message._<p>The default implementation either discards the invalid message or_throws a MessageFormatException - according to the "ignoreInvalidRequests"_flag, which is set to "true" (that is, discard invalid messages) by default._@param requestMessage the invalid request message_@return the RemoteInvocation to expose for the invalid request (typically_{@code null} in case of an invalid message that will simply be ignored)_@throws javax.jms.JMSException in case of the invalid request supposed_to lead to an exception (instead of ignoring it)_@see #readRemoteInvocation_@see #setIgnoreInvalidRequests;@Nullable_	protected RemoteInvocation onInvalidRequest(Message requestMessage) throws JMSException {_		if (this.ignoreInvalidRequests) {_			if (logger.isWarnEnabled()) {_				logger.warn("Invalid request message will be discarded: " + requestMessage)__			}_			return null__		}_		else {_			throw new MessageFormatException("Invalid request message: " + requestMessage)__		}_	};callback,that,is,invoked,by,link,read,remote,invocation,when,it,encounters,an,invalid,request,message,p,the,default,implementation,either,discards,the,invalid,message,or,throws,a,message,format,exception,according,to,the,ignore,invalid,requests,flag,which,is,set,to,true,that,is,discard,invalid,messages,by,default,param,request,message,the,invalid,request,message,return,the,remote,invocation,to,expose,for,the,invalid,request,typically,code,null,in,case,of,an,invalid,message,that,will,simply,be,ignored,throws,javax,jms,jmsexception,in,case,of,the,invalid,request,supposed,to,lead,to,an,exception,instead,of,ignoring,it,see,read,remote,invocation,see,set,ignore,invalid,requests;nullable,protected,remote,invocation,on,invalid,request,message,request,message,throws,jmsexception,if,this,ignore,invalid,requests,if,logger,is,warn,enabled,logger,warn,invalid,request,message,will,be,discarded,request,message,return,null,else,throw,new,message,format,exception,invalid,request,message,request,message
JmsInvokerServiceExporter -> @Nullable 	protected RemoteInvocation onInvalidRequest(Message requestMessage) throws JMSException;1532091916;Callback that is invoked by {@link #readRemoteInvocation}_when it encounters an invalid request message._<p>The default implementation either discards the invalid message or_throws a MessageFormatException - according to the "ignoreInvalidRequests"_flag, which is set to "true" (that is, discard invalid messages) by default._@param requestMessage the invalid request message_@return the RemoteInvocation to expose for the invalid request (typically_{@code null} in case of an invalid message that will simply be ignored)_@throws javax.jms.JMSException in case of the invalid request supposed_to lead to an exception (instead of ignoring it)_@see #readRemoteInvocation_@see #setIgnoreInvalidRequests;@Nullable_	protected RemoteInvocation onInvalidRequest(Message requestMessage) throws JMSException {_		if (this.ignoreInvalidRequests) {_			if (logger.isDebugEnabled()) {_				logger.debug("Invalid request message will be discarded: " + requestMessage)__			}_			return null__		}_		else {_			throw new MessageFormatException("Invalid request message: " + requestMessage)__		}_	};callback,that,is,invoked,by,link,read,remote,invocation,when,it,encounters,an,invalid,request,message,p,the,default,implementation,either,discards,the,invalid,message,or,throws,a,message,format,exception,according,to,the,ignore,invalid,requests,flag,which,is,set,to,true,that,is,discard,invalid,messages,by,default,param,request,message,the,invalid,request,message,return,the,remote,invocation,to,expose,for,the,invalid,request,typically,code,null,in,case,of,an,invalid,message,that,will,simply,be,ignored,throws,javax,jms,jmsexception,in,case,of,the,invalid,request,supposed,to,lead,to,an,exception,instead,of,ignoring,it,see,read,remote,invocation,see,set,ignore,invalid,requests;nullable,protected,remote,invocation,on,invalid,request,message,request,message,throws,jmsexception,if,this,ignore,invalid,requests,if,logger,is,debug,enabled,logger,debug,invalid,request,message,will,be,discarded,request,message,return,null,else,throw,new,message,format,exception,invalid,request,message,request,message
JmsInvokerServiceExporter -> @Nullable 	protected RemoteInvocation onInvalidRequest(Message requestMessage) throws JMSException;1542613849;Callback that is invoked by {@link #readRemoteInvocation}_when it encounters an invalid request message._<p>The default implementation either discards the invalid message or_throws a MessageFormatException - according to the "ignoreInvalidRequests"_flag, which is set to "true" (that is, discard invalid messages) by default._@param requestMessage the invalid request message_@return the RemoteInvocation to expose for the invalid request (typically_{@code null} in case of an invalid message that will simply be ignored)_@throws javax.jms.JMSException in case of the invalid request supposed_to lead to an exception (instead of ignoring it)_@see #readRemoteInvocation_@see #setIgnoreInvalidRequests;@Nullable_	protected RemoteInvocation onInvalidRequest(Message requestMessage) throws JMSException {_		if (this.ignoreInvalidRequests) {_			if (logger.isDebugEnabled()) {_				logger.debug("Invalid request message will be discarded: " + requestMessage)__			}_			return null__		}_		else {_			throw new MessageFormatException("Invalid request message: " + requestMessage)__		}_	};callback,that,is,invoked,by,link,read,remote,invocation,when,it,encounters,an,invalid,request,message,p,the,default,implementation,either,discards,the,invalid,message,or,throws,a,message,format,exception,according,to,the,ignore,invalid,requests,flag,which,is,set,to,true,that,is,discard,invalid,messages,by,default,param,request,message,the,invalid,request,message,return,the,remote,invocation,to,expose,for,the,invalid,request,typically,code,null,in,case,of,an,invalid,message,that,will,simply,be,ignored,throws,javax,jms,jmsexception,in,case,of,the,invalid,request,supposed,to,lead,to,an,exception,instead,of,ignoring,it,see,read,remote,invocation,see,set,ignore,invalid,requests;nullable,protected,remote,invocation,on,invalid,request,message,request,message,throws,jmsexception,if,this,ignore,invalid,requests,if,logger,is,debug,enabled,logger,debug,invalid,request,message,will,be,discarded,request,message,return,null,else,throw,new,message,format,exception,invalid,request,message,request,message
JmsInvokerServiceExporter -> public void setMessageConverter(MessageConverter messageConverter);1328020251;Specify the MessageConverter to use for turning request messages into_{@link org.springframework.remoting.support.RemoteInvocation} objects,_as well as {@link org.springframework.remoting.support.RemoteInvocationResult}_objects into response messages._<p>Default is a {@link org.springframework.jms.support.converter.SimpleMessageConverter},_using a standard JMS {@link javax.jms.ObjectMessage} for each invocation /_invocation result object._<p>Custom implementations may generally adapt Serializables into_special kinds of messages, or might be specifically tailored for_translating RemoteInvocation(Result)s into specific kinds of messages.;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = (messageConverter != null ? messageConverter : new SimpleMessageConverter())__	};specify,the,message,converter,to,use,for,turning,request,messages,into,link,org,springframework,remoting,support,remote,invocation,objects,as,well,as,link,org,springframework,remoting,support,remote,invocation,result,objects,into,response,messages,p,default,is,a,link,org,springframework,jms,support,converter,simple,message,converter,using,a,standard,jms,link,javax,jms,object,message,for,each,invocation,invocation,result,object,p,custom,implementations,may,generally,adapt,serializables,into,special,kinds,of,messages,or,might,be,specifically,tailored,for,translating,remote,invocation,result,s,into,specific,kinds,of,messages;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter,null,message,converter,new,simple,message,converter
JmsInvokerServiceExporter -> public void setMessageConverter(MessageConverter messageConverter);1356735495;Specify the MessageConverter to use for turning request messages into_{@link org.springframework.remoting.support.RemoteInvocation} objects,_as well as {@link org.springframework.remoting.support.RemoteInvocationResult}_objects into response messages._<p>Default is a {@link org.springframework.jms.support.converter.SimpleMessageConverter},_using a standard JMS {@link javax.jms.ObjectMessage} for each invocation /_invocation result object._<p>Custom implementations may generally adapt Serializables into_special kinds of messages, or might be specifically tailored for_translating RemoteInvocation(Result)s into specific kinds of messages.;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = (messageConverter != null ? messageConverter : new SimpleMessageConverter())__	};specify,the,message,converter,to,use,for,turning,request,messages,into,link,org,springframework,remoting,support,remote,invocation,objects,as,well,as,link,org,springframework,remoting,support,remote,invocation,result,objects,into,response,messages,p,default,is,a,link,org,springframework,jms,support,converter,simple,message,converter,using,a,standard,jms,link,javax,jms,object,message,for,each,invocation,invocation,result,object,p,custom,implementations,may,generally,adapt,serializables,into,special,kinds,of,messages,or,might,be,specifically,tailored,for,translating,remote,invocation,result,s,into,specific,kinds,of,messages;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter,null,message,converter,new,simple,message,converter
JmsInvokerServiceExporter -> public void setMessageConverter(MessageConverter messageConverter);1357119239;Specify the MessageConverter to use for turning request messages into_{@link org.springframework.remoting.support.RemoteInvocation} objects,_as well as {@link org.springframework.remoting.support.RemoteInvocationResult}_objects into response messages._<p>Default is a {@link org.springframework.jms.support.converter.SimpleMessageConverter},_using a standard JMS {@link javax.jms.ObjectMessage} for each invocation /_invocation result object._<p>Custom implementations may generally adapt Serializables into_special kinds of messages, or might be specifically tailored for_translating RemoteInvocation(Result)s into specific kinds of messages.;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = (messageConverter != null ? messageConverter : new SimpleMessageConverter())__	};specify,the,message,converter,to,use,for,turning,request,messages,into,link,org,springframework,remoting,support,remote,invocation,objects,as,well,as,link,org,springframework,remoting,support,remote,invocation,result,objects,into,response,messages,p,default,is,a,link,org,springframework,jms,support,converter,simple,message,converter,using,a,standard,jms,link,javax,jms,object,message,for,each,invocation,invocation,result,object,p,custom,implementations,may,generally,adapt,serializables,into,special,kinds,of,messages,or,might,be,specifically,tailored,for,translating,remote,invocation,result,s,into,specific,kinds,of,messages;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter,null,message,converter,new,simple,message,converter
JmsInvokerServiceExporter -> public void setMessageConverter(MessageConverter messageConverter);1368482696;Specify the MessageConverter to use for turning request messages into_{@link org.springframework.remoting.support.RemoteInvocation} objects,_as well as {@link org.springframework.remoting.support.RemoteInvocationResult}_objects into response messages._<p>Default is a {@link org.springframework.jms.support.converter.SimpleMessageConverter},_using a standard JMS {@link javax.jms.ObjectMessage} for each invocation /_invocation result object._<p>Custom implementations may generally adapt Serializables into_special kinds of messages, or might be specifically tailored for_translating RemoteInvocation(Result)s into specific kinds of messages.;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = (messageConverter != null ? messageConverter : new SimpleMessageConverter())__	};specify,the,message,converter,to,use,for,turning,request,messages,into,link,org,springframework,remoting,support,remote,invocation,objects,as,well,as,link,org,springframework,remoting,support,remote,invocation,result,objects,into,response,messages,p,default,is,a,link,org,springframework,jms,support,converter,simple,message,converter,using,a,standard,jms,link,javax,jms,object,message,for,each,invocation,invocation,result,object,p,custom,implementations,may,generally,adapt,serializables,into,special,kinds,of,messages,or,might,be,specifically,tailored,for,translating,remote,invocation,result,s,into,specific,kinds,of,messages;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter,null,message,converter,new,simple,message,converter
JmsInvokerServiceExporter -> public void setMessageConverter(MessageConverter messageConverter);1495868221;Specify the MessageConverter to use for turning request messages into_{@link org.springframework.remoting.support.RemoteInvocation} objects,_as well as {@link org.springframework.remoting.support.RemoteInvocationResult}_objects into response messages._<p>Default is a {@link org.springframework.jms.support.converter.SimpleMessageConverter},_using a standard JMS {@link javax.jms.ObjectMessage} for each invocation /_invocation result object._<p>Custom implementations may generally adapt Serializables into_special kinds of messages, or might be specifically tailored for_translating RemoteInvocation(Result)s into specific kinds of messages.;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = (messageConverter != null ? messageConverter : new SimpleMessageConverter())__	};specify,the,message,converter,to,use,for,turning,request,messages,into,link,org,springframework,remoting,support,remote,invocation,objects,as,well,as,link,org,springframework,remoting,support,remote,invocation,result,objects,into,response,messages,p,default,is,a,link,org,springframework,jms,support,converter,simple,message,converter,using,a,standard,jms,link,javax,jms,object,message,for,each,invocation,invocation,result,object,p,custom,implementations,may,generally,adapt,serializables,into,special,kinds,of,messages,or,might,be,specifically,tailored,for,translating,remote,invocation,result,s,into,specific,kinds,of,messages;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter,null,message,converter,new,simple,message,converter
JmsInvokerServiceExporter -> public void setMessageConverter(MessageConverter messageConverter);1496259743;Specify the MessageConverter to use for turning request messages into_{@link org.springframework.remoting.support.RemoteInvocation} objects,_as well as {@link org.springframework.remoting.support.RemoteInvocationResult}_objects into response messages._<p>Default is a {@link org.springframework.jms.support.converter.SimpleMessageConverter},_using a standard JMS {@link javax.jms.ObjectMessage} for each invocation /_invocation result object._<p>Custom implementations may generally adapt Serializables into_special kinds of messages, or might be specifically tailored for_translating RemoteInvocation(Result)s into specific kinds of messages.;public void setMessageConverter(MessageConverter messageConverter) {_		this.messageConverter = (messageConverter != null ? messageConverter : new SimpleMessageConverter())__	};specify,the,message,converter,to,use,for,turning,request,messages,into,link,org,springframework,remoting,support,remote,invocation,objects,as,well,as,link,org,springframework,remoting,support,remote,invocation,result,objects,into,response,messages,p,default,is,a,link,org,springframework,jms,support,converter,simple,message,converter,using,a,standard,jms,link,javax,jms,object,message,for,each,invocation,invocation,result,object,p,custom,implementations,may,generally,adapt,serializables,into,special,kinds,of,messages,or,might,be,specifically,tailored,for,translating,remote,invocation,result,s,into,specific,kinds,of,messages;public,void,set,message,converter,message,converter,message,converter,this,message,converter,message,converter,null,message,converter,new,simple,message,converter
JmsInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(Message requestMessage) throws JMSException;1328020251;Read a RemoteInvocation from the given JMS message._@param requestMessage current request message_@return the RemoteInvocation object (or <code>null</code>_in case of an invalid message that will simply be ignored)_@throws javax.jms.JMSException in case of message access failure;protected RemoteInvocation readRemoteInvocation(Message requestMessage) throws JMSException {_		Object content = this.messageConverter.fromMessage(requestMessage)__		if (content instanceof RemoteInvocation) {_			return (RemoteInvocation) content__		}_		return onInvalidRequest(requestMessage)__	};read,a,remote,invocation,from,the,given,jms,message,param,request,message,current,request,message,return,the,remote,invocation,object,or,code,null,code,in,case,of,an,invalid,message,that,will,simply,be,ignored,throws,javax,jms,jmsexception,in,case,of,message,access,failure;protected,remote,invocation,read,remote,invocation,message,request,message,throws,jmsexception,object,content,this,message,converter,from,message,request,message,if,content,instanceof,remote,invocation,return,remote,invocation,content,return,on,invalid,request,request,message
JmsInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(Message requestMessage) throws JMSException;1356735495;Read a RemoteInvocation from the given JMS message._@param requestMessage current request message_@return the RemoteInvocation object (or {@code null}_in case of an invalid message that will simply be ignored)_@throws javax.jms.JMSException in case of message access failure;protected RemoteInvocation readRemoteInvocation(Message requestMessage) throws JMSException {_		Object content = this.messageConverter.fromMessage(requestMessage)__		if (content instanceof RemoteInvocation) {_			return (RemoteInvocation) content__		}_		return onInvalidRequest(requestMessage)__	};read,a,remote,invocation,from,the,given,jms,message,param,request,message,current,request,message,return,the,remote,invocation,object,or,code,null,in,case,of,an,invalid,message,that,will,simply,be,ignored,throws,javax,jms,jmsexception,in,case,of,message,access,failure;protected,remote,invocation,read,remote,invocation,message,request,message,throws,jmsexception,object,content,this,message,converter,from,message,request,message,if,content,instanceof,remote,invocation,return,remote,invocation,content,return,on,invalid,request,request,message
JmsInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(Message requestMessage) throws JMSException;1357119239;Read a RemoteInvocation from the given JMS message._@param requestMessage current request message_@return the RemoteInvocation object (or {@code null}_in case of an invalid message that will simply be ignored)_@throws javax.jms.JMSException in case of message access failure;protected RemoteInvocation readRemoteInvocation(Message requestMessage) throws JMSException {_		Object content = this.messageConverter.fromMessage(requestMessage)__		if (content instanceof RemoteInvocation) {_			return (RemoteInvocation) content__		}_		return onInvalidRequest(requestMessage)__	};read,a,remote,invocation,from,the,given,jms,message,param,request,message,current,request,message,return,the,remote,invocation,object,or,code,null,in,case,of,an,invalid,message,that,will,simply,be,ignored,throws,javax,jms,jmsexception,in,case,of,message,access,failure;protected,remote,invocation,read,remote,invocation,message,request,message,throws,jmsexception,object,content,this,message,converter,from,message,request,message,if,content,instanceof,remote,invocation,return,remote,invocation,content,return,on,invalid,request,request,message
JmsInvokerServiceExporter -> protected RemoteInvocation readRemoteInvocation(Message requestMessage) throws JMSException;1368482696;Read a RemoteInvocation from the given JMS message._@param requestMessage current request message_@return the RemoteInvocation object (or {@code null}_in case of an invalid message that will simply be ignored)_@throws javax.jms.JMSException in case of message access failure;protected RemoteInvocation readRemoteInvocation(Message requestMessage) throws JMSException {_		Object content = this.messageConverter.fromMessage(requestMessage)__		if (content instanceof RemoteInvocation) {_			return (RemoteInvocation) content__		}_		return onInvalidRequest(requestMessage)__	};read,a,remote,invocation,from,the,given,jms,message,param,request,message,current,request,message,return,the,remote,invocation,object,or,code,null,in,case,of,an,invalid,message,that,will,simply,be,ignored,throws,javax,jms,jmsexception,in,case,of,message,access,failure;protected,remote,invocation,read,remote,invocation,message,request,message,throws,jmsexception,object,content,this,message,converter,from,message,request,message,if,content,instanceof,remote,invocation,return,remote,invocation,content,return,on,invalid,request,request,message
JmsInvokerServiceExporter -> public void setMessageConverter(@Nullable MessageConverter messageConverter);1496837955;Specify the MessageConverter to use for turning request messages into_{@link org.springframework.remoting.support.RemoteInvocation} objects,_as well as {@link org.springframework.remoting.support.RemoteInvocationResult}_objects into response messages._<p>Default is a {@link org.springframework.jms.support.converter.SimpleMessageConverter},_using a standard JMS {@link javax.jms.ObjectMessage} for each invocation /_invocation result object._<p>Custom implementations may generally adapt Serializables into_special kinds of messages, or might be specifically tailored for_translating RemoteInvocation(Result)s into specific kinds of messages.;public void setMessageConverter(@Nullable MessageConverter messageConverter) {_		this.messageConverter = (messageConverter != null ? messageConverter : new SimpleMessageConverter())__	};specify,the,message,converter,to,use,for,turning,request,messages,into,link,org,springframework,remoting,support,remote,invocation,objects,as,well,as,link,org,springframework,remoting,support,remote,invocation,result,objects,into,response,messages,p,default,is,a,link,org,springframework,jms,support,converter,simple,message,converter,using,a,standard,jms,link,javax,jms,object,message,for,each,invocation,invocation,result,object,p,custom,implementations,may,generally,adapt,serializables,into,special,kinds,of,messages,or,might,be,specifically,tailored,for,translating,remote,invocation,result,s,into,specific,kinds,of,messages;public,void,set,message,converter,nullable,message,converter,message,converter,this,message,converter,message,converter,null,message,converter,new,simple,message,converter
JmsInvokerServiceExporter -> public void setMessageConverter(@Nullable MessageConverter messageConverter);1500495740;Specify the MessageConverter to use for turning request messages into_{@link org.springframework.remoting.support.RemoteInvocation} objects,_as well as {@link org.springframework.remoting.support.RemoteInvocationResult}_objects into response messages._<p>Default is a {@link org.springframework.jms.support.converter.SimpleMessageConverter},_using a standard JMS {@link javax.jms.ObjectMessage} for each invocation /_invocation result object._<p>Custom implementations may generally adapt Serializables into_special kinds of messages, or might be specifically tailored for_translating RemoteInvocation(Result)s into specific kinds of messages.;public void setMessageConverter(@Nullable MessageConverter messageConverter) {_		this.messageConverter = (messageConverter != null ? messageConverter : new SimpleMessageConverter())__	};specify,the,message,converter,to,use,for,turning,request,messages,into,link,org,springframework,remoting,support,remote,invocation,objects,as,well,as,link,org,springframework,remoting,support,remote,invocation,result,objects,into,response,messages,p,default,is,a,link,org,springframework,jms,support,converter,simple,message,converter,using,a,standard,jms,link,javax,jms,object,message,for,each,invocation,invocation,result,object,p,custom,implementations,may,generally,adapt,serializables,into,special,kinds,of,messages,or,might,be,specifically,tailored,for,translating,remote,invocation,result,s,into,specific,kinds,of,messages;public,void,set,message,converter,nullable,message,converter,message,converter,this,message,converter,message,converter,null,message,converter,new,simple,message,converter
JmsInvokerServiceExporter -> public void setMessageConverter(@Nullable MessageConverter messageConverter);1532091916;Specify the MessageConverter to use for turning request messages into_{@link org.springframework.remoting.support.RemoteInvocation} objects,_as well as {@link org.springframework.remoting.support.RemoteInvocationResult}_objects into response messages._<p>Default is a {@link org.springframework.jms.support.converter.SimpleMessageConverter},_using a standard JMS {@link javax.jms.ObjectMessage} for each invocation /_invocation result object._<p>Custom implementations may generally adapt Serializables into_special kinds of messages, or might be specifically tailored for_translating RemoteInvocation(Result)s into specific kinds of messages.;public void setMessageConverter(@Nullable MessageConverter messageConverter) {_		this.messageConverter = (messageConverter != null ? messageConverter : new SimpleMessageConverter())__	};specify,the,message,converter,to,use,for,turning,request,messages,into,link,org,springframework,remoting,support,remote,invocation,objects,as,well,as,link,org,springframework,remoting,support,remote,invocation,result,objects,into,response,messages,p,default,is,a,link,org,springframework,jms,support,converter,simple,message,converter,using,a,standard,jms,link,javax,jms,object,message,for,each,invocation,invocation,result,object,p,custom,implementations,may,generally,adapt,serializables,into,special,kinds,of,messages,or,might,be,specifically,tailored,for,translating,remote,invocation,result,s,into,specific,kinds,of,messages;public,void,set,message,converter,nullable,message,converter,message,converter,this,message,converter,message,converter,null,message,converter,new,simple,message,converter
JmsInvokerServiceExporter -> public void setMessageConverter(@Nullable MessageConverter messageConverter);1542613849;Specify the MessageConverter to use for turning request messages into_{@link org.springframework.remoting.support.RemoteInvocation} objects,_as well as {@link org.springframework.remoting.support.RemoteInvocationResult}_objects into response messages._<p>Default is a {@link org.springframework.jms.support.converter.SimpleMessageConverter},_using a standard JMS {@link javax.jms.ObjectMessage} for each invocation /_invocation result object._<p>Custom implementations may generally adapt Serializables into_special kinds of messages, or might be specifically tailored for_translating RemoteInvocation(Result)s into specific kinds of messages.;public void setMessageConverter(@Nullable MessageConverter messageConverter) {_		this.messageConverter = (messageConverter != null ? messageConverter : new SimpleMessageConverter())__	};specify,the,message,converter,to,use,for,turning,request,messages,into,link,org,springframework,remoting,support,remote,invocation,objects,as,well,as,link,org,springframework,remoting,support,remote,invocation,result,objects,into,response,messages,p,default,is,a,link,org,springframework,jms,support,converter,simple,message,converter,using,a,standard,jms,link,javax,jms,object,message,for,each,invocation,invocation,result,object,p,custom,implementations,may,generally,adapt,serializables,into,special,kinds,of,messages,or,might,be,specifically,tailored,for,translating,remote,invocation,result,s,into,specific,kinds,of,messages;public,void,set,message,converter,nullable,message,converter,message,converter,this,message,converter,message,converter,null,message,converter,new,simple,message,converter
