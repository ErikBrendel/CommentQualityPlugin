# id;timestamp;commentText;codeText;commentWords;codeWords
MarshallingMessageConverter -> public MarshallingMessageConverter(Marshaller marshaller, Unmarshaller unmarshaller);1328020251;Construct a new <code>MarshallingMessageConverter</code> with the_given Marshaller and Unmarshaller._@param marshaller the Marshaller to use_@param unmarshaller the Unmarshaller to use;public MarshallingMessageConverter(Marshaller marshaller, Unmarshaller unmarshaller) {_		Assert.notNull(marshaller, "Marshaller must not be null")__		Assert.notNull(unmarshaller, "Unmarshaller must not be null")__		this.marshaller = marshaller__		this.unmarshaller = unmarshaller__	};construct,a,new,code,marshalling,message,converter,code,with,the,given,marshaller,and,unmarshaller,param,marshaller,the,marshaller,to,use,param,unmarshaller,the,unmarshaller,to,use;public,marshalling,message,converter,marshaller,marshaller,unmarshaller,unmarshaller,assert,not,null,marshaller,marshaller,must,not,be,null,assert,not,null,unmarshaller,unmarshaller,must,not,be,null,this,marshaller,marshaller,this,unmarshaller,unmarshaller
MarshallingMessageConverter -> public MarshallingMessageConverter(Marshaller marshaller, Unmarshaller unmarshaller);1356735495;Construct a new {@code MarshallingMessageConverter} with the_given Marshaller and Unmarshaller._@param marshaller the Marshaller to use_@param unmarshaller the Unmarshaller to use;public MarshallingMessageConverter(Marshaller marshaller, Unmarshaller unmarshaller) {_		Assert.notNull(marshaller, "Marshaller must not be null")__		Assert.notNull(unmarshaller, "Unmarshaller must not be null")__		this.marshaller = marshaller__		this.unmarshaller = unmarshaller__	};construct,a,new,code,marshalling,message,converter,with,the,given,marshaller,and,unmarshaller,param,marshaller,the,marshaller,to,use,param,unmarshaller,the,unmarshaller,to,use;public,marshalling,message,converter,marshaller,marshaller,unmarshaller,unmarshaller,assert,not,null,marshaller,marshaller,must,not,be,null,assert,not,null,unmarshaller,unmarshaller,must,not,be,null,this,marshaller,marshaller,this,unmarshaller,unmarshaller
MarshallingMessageConverter -> public MarshallingMessageConverter(Marshaller marshaller, Unmarshaller unmarshaller);1357119239;Construct a new {@code MarshallingMessageConverter} with the_given Marshaller and Unmarshaller._@param marshaller the Marshaller to use_@param unmarshaller the Unmarshaller to use;public MarshallingMessageConverter(Marshaller marshaller, Unmarshaller unmarshaller) {_		Assert.notNull(marshaller, "Marshaller must not be null")__		Assert.notNull(unmarshaller, "Unmarshaller must not be null")__		this.marshaller = marshaller__		this.unmarshaller = unmarshaller__	};construct,a,new,code,marshalling,message,converter,with,the,given,marshaller,and,unmarshaller,param,marshaller,the,marshaller,to,use,param,unmarshaller,the,unmarshaller,to,use;public,marshalling,message,converter,marshaller,marshaller,unmarshaller,unmarshaller,assert,not,null,marshaller,marshaller,must,not,be,null,assert,not,null,unmarshaller,unmarshaller,must,not,be,null,this,marshaller,marshaller,this,unmarshaller,unmarshaller
MarshallingMessageConverter -> public MarshallingMessageConverter(Marshaller marshaller, Unmarshaller unmarshaller);1368482696;Construct a new {@code MarshallingMessageConverter} with the_given Marshaller and Unmarshaller._@param marshaller the Marshaller to use_@param unmarshaller the Unmarshaller to use;public MarshallingMessageConverter(Marshaller marshaller, Unmarshaller unmarshaller) {_		Assert.notNull(marshaller, "Marshaller must not be null")__		Assert.notNull(unmarshaller, "Unmarshaller must not be null")__		this.marshaller = marshaller__		this.unmarshaller = unmarshaller__	};construct,a,new,code,marshalling,message,converter,with,the,given,marshaller,and,unmarshaller,param,marshaller,the,marshaller,to,use,param,unmarshaller,the,unmarshaller,to,use;public,marshalling,message,converter,marshaller,marshaller,unmarshaller,unmarshaller,assert,not,null,marshaller,marshaller,must,not,be,null,assert,not,null,unmarshaller,unmarshaller,must,not,be,null,this,marshaller,marshaller,this,unmarshaller,unmarshaller
MarshallingMessageConverter -> public MarshallingMessageConverter(Marshaller marshaller, Unmarshaller unmarshaller);1395698258;Construct a new {@code MarshallingMessageConverter} with the_given Marshaller and Unmarshaller._@param marshaller the Marshaller to use_@param unmarshaller the Unmarshaller to use;public MarshallingMessageConverter(Marshaller marshaller, Unmarshaller unmarshaller) {_		Assert.notNull(marshaller, "Marshaller must not be null")__		Assert.notNull(unmarshaller, "Unmarshaller must not be null")__		this.marshaller = marshaller__		this.unmarshaller = unmarshaller__	};construct,a,new,code,marshalling,message,converter,with,the,given,marshaller,and,unmarshaller,param,marshaller,the,marshaller,to,use,param,unmarshaller,the,unmarshaller,to,use;public,marshalling,message,converter,marshaller,marshaller,unmarshaller,unmarshaller,assert,not,null,marshaller,marshaller,must,not,be,null,assert,not,null,unmarshaller,unmarshaller,must,not,be,null,this,marshaller,marshaller,this,unmarshaller,unmarshaller
MarshallingMessageConverter -> public MarshallingMessageConverter(Marshaller marshaller, Unmarshaller unmarshaller);1500495740;Construct a new {@code MarshallingMessageConverter} with the_given Marshaller and Unmarshaller._@param marshaller the Marshaller to use_@param unmarshaller the Unmarshaller to use;public MarshallingMessageConverter(Marshaller marshaller, Unmarshaller unmarshaller) {_		Assert.notNull(marshaller, "Marshaller must not be null")__		Assert.notNull(unmarshaller, "Unmarshaller must not be null")__		this.marshaller = marshaller__		this.unmarshaller = unmarshaller__	};construct,a,new,code,marshalling,message,converter,with,the,given,marshaller,and,unmarshaller,param,marshaller,the,marshaller,to,use,param,unmarshaller,the,unmarshaller,to,use;public,marshalling,message,converter,marshaller,marshaller,unmarshaller,unmarshaller,assert,not,null,marshaller,marshaller,must,not,be,null,assert,not,null,unmarshaller,unmarshaller,must,not,be,null,this,marshaller,marshaller,this,unmarshaller,unmarshaller
MarshallingMessageConverter -> @Override 	public Message toMessage(Object object, Session session) throws JMSException, MessageConversionException;1356735495;This implementation marshals the given object to a {@link javax.jms.TextMessage} or_{@link javax.jms.BytesMessage}. The desired message type can be defined by setting_the {@link #setTargetType "marshalTo"} property._@see #marshalToTextMessage_@see #marshalToBytesMessage;@Override_	public Message toMessage(Object object, Session session) throws JMSException, MessageConversionException {_		try {_			switch (this.targetType) {_				case TEXT:_					return marshalToTextMessage(object, session, this.marshaller)__				case BYTES:_					return marshalToBytesMessage(object, session, this.marshaller)__				default:_					return marshalToMessage(object, session, this.marshaller, this.targetType)__			}_		}_		catch (XmlMappingException ex) {_			throw new MessageConversionException("Could not marshal [" + object + "]", ex)__		}_		catch (IOException ex) {_			throw new MessageConversionException("Could not marshal [" + object + "]", ex)__		}_	};this,implementation,marshals,the,given,object,to,a,link,javax,jms,text,message,or,link,javax,jms,bytes,message,the,desired,message,type,can,be,defined,by,setting,the,link,set,target,type,marshal,to,property,see,marshal,to,text,message,see,marshal,to,bytes,message;override,public,message,to,message,object,object,session,session,throws,jmsexception,message,conversion,exception,try,switch,this,target,type,case,text,return,marshal,to,text,message,object,session,this,marshaller,case,bytes,return,marshal,to,bytes,message,object,session,this,marshaller,default,return,marshal,to,message,object,session,this,marshaller,this,target,type,catch,xml,mapping,exception,ex,throw,new,message,conversion,exception,could,not,marshal,object,ex,catch,ioexception,ex,throw,new,message,conversion,exception,could,not,marshal,object,ex
MarshallingMessageConverter -> @Override 	public Message toMessage(Object object, Session session) throws JMSException, MessageConversionException;1368482696;This implementation marshals the given object to a {@link javax.jms.TextMessage} or_{@link javax.jms.BytesMessage}. The desired message type can be defined by setting_the {@link #setTargetType "marshalTo"} property._@see #marshalToTextMessage_@see #marshalToBytesMessage;@Override_	public Message toMessage(Object object, Session session) throws JMSException, MessageConversionException {_		try {_			switch (this.targetType) {_				case TEXT:_					return marshalToTextMessage(object, session, this.marshaller)__				case BYTES:_					return marshalToBytesMessage(object, session, this.marshaller)__				default:_					return marshalToMessage(object, session, this.marshaller, this.targetType)__			}_		}_		catch (XmlMappingException ex) {_			throw new MessageConversionException("Could not marshal [" + object + "]", ex)__		}_		catch (IOException ex) {_			throw new MessageConversionException("Could not marshal [" + object + "]", ex)__		}_	};this,implementation,marshals,the,given,object,to,a,link,javax,jms,text,message,or,link,javax,jms,bytes,message,the,desired,message,type,can,be,defined,by,setting,the,link,set,target,type,marshal,to,property,see,marshal,to,text,message,see,marshal,to,bytes,message;override,public,message,to,message,object,object,session,session,throws,jmsexception,message,conversion,exception,try,switch,this,target,type,case,text,return,marshal,to,text,message,object,session,this,marshaller,case,bytes,return,marshal,to,bytes,message,object,session,this,marshaller,default,return,marshal,to,message,object,session,this,marshaller,this,target,type,catch,xml,mapping,exception,ex,throw,new,message,conversion,exception,could,not,marshal,object,ex,catch,ioexception,ex,throw,new,message,conversion,exception,could,not,marshal,object,ex
MarshallingMessageConverter -> @Override 	public Message toMessage(Object object, Session session) throws JMSException, MessageConversionException;1395698258;This implementation marshals the given object to a {@link javax.jms.TextMessage} or_{@link javax.jms.BytesMessage}. The desired message type can be defined by setting_the {@link #setTargetType "marshalTo"} property._@see #marshalToTextMessage_@see #marshalToBytesMessage;@Override_	public Message toMessage(Object object, Session session) throws JMSException, MessageConversionException {_		try {_			switch (this.targetType) {_				case TEXT:_					return marshalToTextMessage(object, session, this.marshaller)__				case BYTES:_					return marshalToBytesMessage(object, session, this.marshaller)__				default:_					return marshalToMessage(object, session, this.marshaller, this.targetType)__			}_		}_		catch (XmlMappingException ex) {_			throw new MessageConversionException("Could not marshal [" + object + "]", ex)__		}_		catch (IOException ex) {_			throw new MessageConversionException("Could not marshal [" + object + "]", ex)__		}_	};this,implementation,marshals,the,given,object,to,a,link,javax,jms,text,message,or,link,javax,jms,bytes,message,the,desired,message,type,can,be,defined,by,setting,the,link,set,target,type,marshal,to,property,see,marshal,to,text,message,see,marshal,to,bytes,message;override,public,message,to,message,object,object,session,session,throws,jmsexception,message,conversion,exception,try,switch,this,target,type,case,text,return,marshal,to,text,message,object,session,this,marshaller,case,bytes,return,marshal,to,bytes,message,object,session,this,marshaller,default,return,marshal,to,message,object,session,this,marshaller,this,target,type,catch,xml,mapping,exception,ex,throw,new,message,conversion,exception,could,not,marshal,object,ex,catch,ioexception,ex,throw,new,message,conversion,exception,could,not,marshal,object,ex
MarshallingMessageConverter -> @Override 	public Message toMessage(Object object, Session session) throws JMSException, MessageConversionException;1500495740;This implementation marshals the given object to a {@link javax.jms.TextMessage} or_{@link javax.jms.BytesMessage}. The desired message type can be defined by setting_the {@link #setTargetType "marshalTo"} property._@see #marshalToTextMessage_@see #marshalToBytesMessage;@Override_	public Message toMessage(Object object, Session session) throws JMSException, MessageConversionException {_		Assert.state(this.marshaller != null, "No Marshaller set")__		try {_			switch (this.targetType) {_				case TEXT:_					return marshalToTextMessage(object, session, this.marshaller)__				case BYTES:_					return marshalToBytesMessage(object, session, this.marshaller)__				default:_					return marshalToMessage(object, session, this.marshaller, this.targetType)__			}_		}_		catch (XmlMappingException | IOException ex) {_			throw new MessageConversionException("Could not marshal [" + object + "]", ex)__		}_	};this,implementation,marshals,the,given,object,to,a,link,javax,jms,text,message,or,link,javax,jms,bytes,message,the,desired,message,type,can,be,defined,by,setting,the,link,set,target,type,marshal,to,property,see,marshal,to,text,message,see,marshal,to,bytes,message;override,public,message,to,message,object,object,session,session,throws,jmsexception,message,conversion,exception,assert,state,this,marshaller,null,no,marshaller,set,try,switch,this,target,type,case,text,return,marshal,to,text,message,object,session,this,marshaller,case,bytes,return,marshal,to,bytes,message,object,session,this,marshaller,default,return,marshal,to,message,object,session,this,marshaller,this,target,type,catch,xml,mapping,exception,ioexception,ex,throw,new,message,conversion,exception,could,not,marshal,object,ex
MarshallingMessageConverter -> public MarshallingMessageConverter(Marshaller marshaller);1328020251;Construct a new <code>MarshallingMessageConverter</code> with the given {@link Marshaller} set._<p>If the given {@link Marshaller} also implements the {@link Unmarshaller} interface,_it is used for both marshalling and unmarshalling. Otherwise, an exception is thrown._<p>Note that all {@link Marshaller} implementations in Spring also implement the_{@link Unmarshaller} interface, so that you can safely use this constructor._@param marshaller object used as marshaller and unmarshaller_@throws IllegalArgumentException when <code>marshaller</code> does not implement the_{@link Unmarshaller} interface as well;public MarshallingMessageConverter(Marshaller marshaller) {_		Assert.notNull(marshaller, "Marshaller must not be null")__		if (!(marshaller instanceof Unmarshaller)) {_			throw new IllegalArgumentException(_					"Marshaller [" + marshaller + "] does not implement the Unmarshaller " +_					"interface. Please set an Unmarshaller explicitly by using the " +_					"MarshallingMessageConverter(Marshaller, Unmarshaller) constructor.")__		}_		else {_			this.marshaller = marshaller__			this.unmarshaller = (Unmarshaller) marshaller__		}_	};construct,a,new,code,marshalling,message,converter,code,with,the,given,link,marshaller,set,p,if,the,given,link,marshaller,also,implements,the,link,unmarshaller,interface,it,is,used,for,both,marshalling,and,unmarshalling,otherwise,an,exception,is,thrown,p,note,that,all,link,marshaller,implementations,in,spring,also,implement,the,link,unmarshaller,interface,so,that,you,can,safely,use,this,constructor,param,marshaller,object,used,as,marshaller,and,unmarshaller,throws,illegal,argument,exception,when,code,marshaller,code,does,not,implement,the,link,unmarshaller,interface,as,well;public,marshalling,message,converter,marshaller,marshaller,assert,not,null,marshaller,marshaller,must,not,be,null,if,marshaller,instanceof,unmarshaller,throw,new,illegal,argument,exception,marshaller,marshaller,does,not,implement,the,unmarshaller,interface,please,set,an,unmarshaller,explicitly,by,using,the,marshalling,message,converter,marshaller,unmarshaller,constructor,else,this,marshaller,marshaller,this,unmarshaller,unmarshaller,marshaller
MarshallingMessageConverter -> public MarshallingMessageConverter(Marshaller marshaller);1356735495;Construct a new {@code MarshallingMessageConverter} with the given {@link Marshaller} set._<p>If the given {@link Marshaller} also implements the {@link Unmarshaller} interface,_it is used for both marshalling and unmarshalling. Otherwise, an exception is thrown._<p>Note that all {@link Marshaller} implementations in Spring also implement the_{@link Unmarshaller} interface, so that you can safely use this constructor._@param marshaller object used as marshaller and unmarshaller_@throws IllegalArgumentException when {@code marshaller} does not implement the_{@link Unmarshaller} interface as well;public MarshallingMessageConverter(Marshaller marshaller) {_		Assert.notNull(marshaller, "Marshaller must not be null")__		if (!(marshaller instanceof Unmarshaller)) {_			throw new IllegalArgumentException(_					"Marshaller [" + marshaller + "] does not implement the Unmarshaller " +_					"interface. Please set an Unmarshaller explicitly by using the " +_					"MarshallingMessageConverter(Marshaller, Unmarshaller) constructor.")__		}_		else {_			this.marshaller = marshaller__			this.unmarshaller = (Unmarshaller) marshaller__		}_	};construct,a,new,code,marshalling,message,converter,with,the,given,link,marshaller,set,p,if,the,given,link,marshaller,also,implements,the,link,unmarshaller,interface,it,is,used,for,both,marshalling,and,unmarshalling,otherwise,an,exception,is,thrown,p,note,that,all,link,marshaller,implementations,in,spring,also,implement,the,link,unmarshaller,interface,so,that,you,can,safely,use,this,constructor,param,marshaller,object,used,as,marshaller,and,unmarshaller,throws,illegal,argument,exception,when,code,marshaller,does,not,implement,the,link,unmarshaller,interface,as,well;public,marshalling,message,converter,marshaller,marshaller,assert,not,null,marshaller,marshaller,must,not,be,null,if,marshaller,instanceof,unmarshaller,throw,new,illegal,argument,exception,marshaller,marshaller,does,not,implement,the,unmarshaller,interface,please,set,an,unmarshaller,explicitly,by,using,the,marshalling,message,converter,marshaller,unmarshaller,constructor,else,this,marshaller,marshaller,this,unmarshaller,unmarshaller,marshaller
MarshallingMessageConverter -> public MarshallingMessageConverter(Marshaller marshaller);1357119239;Construct a new {@code MarshallingMessageConverter} with the given {@link Marshaller} set._<p>If the given {@link Marshaller} also implements the {@link Unmarshaller} interface,_it is used for both marshalling and unmarshalling. Otherwise, an exception is thrown._<p>Note that all {@link Marshaller} implementations in Spring also implement the_{@link Unmarshaller} interface, so that you can safely use this constructor._@param marshaller object used as marshaller and unmarshaller_@throws IllegalArgumentException when {@code marshaller} does not implement the_{@link Unmarshaller} interface as well;public MarshallingMessageConverter(Marshaller marshaller) {_		Assert.notNull(marshaller, "Marshaller must not be null")__		if (!(marshaller instanceof Unmarshaller)) {_			throw new IllegalArgumentException(_					"Marshaller [" + marshaller + "] does not implement the Unmarshaller " +_					"interface. Please set an Unmarshaller explicitly by using the " +_					"MarshallingMessageConverter(Marshaller, Unmarshaller) constructor.")__		}_		else {_			this.marshaller = marshaller__			this.unmarshaller = (Unmarshaller) marshaller__		}_	};construct,a,new,code,marshalling,message,converter,with,the,given,link,marshaller,set,p,if,the,given,link,marshaller,also,implements,the,link,unmarshaller,interface,it,is,used,for,both,marshalling,and,unmarshalling,otherwise,an,exception,is,thrown,p,note,that,all,link,marshaller,implementations,in,spring,also,implement,the,link,unmarshaller,interface,so,that,you,can,safely,use,this,constructor,param,marshaller,object,used,as,marshaller,and,unmarshaller,throws,illegal,argument,exception,when,code,marshaller,does,not,implement,the,link,unmarshaller,interface,as,well;public,marshalling,message,converter,marshaller,marshaller,assert,not,null,marshaller,marshaller,must,not,be,null,if,marshaller,instanceof,unmarshaller,throw,new,illegal,argument,exception,marshaller,marshaller,does,not,implement,the,unmarshaller,interface,please,set,an,unmarshaller,explicitly,by,using,the,marshalling,message,converter,marshaller,unmarshaller,constructor,else,this,marshaller,marshaller,this,unmarshaller,unmarshaller,marshaller
MarshallingMessageConverter -> public MarshallingMessageConverter(Marshaller marshaller);1368482696;Construct a new {@code MarshallingMessageConverter} with the given {@link Marshaller} set._<p>If the given {@link Marshaller} also implements the {@link Unmarshaller} interface,_it is used for both marshalling and unmarshalling. Otherwise, an exception is thrown._<p>Note that all {@link Marshaller} implementations in Spring also implement the_{@link Unmarshaller} interface, so that you can safely use this constructor._@param marshaller object used as marshaller and unmarshaller_@throws IllegalArgumentException when {@code marshaller} does not implement the_{@link Unmarshaller} interface as well;public MarshallingMessageConverter(Marshaller marshaller) {_		Assert.notNull(marshaller, "Marshaller must not be null")__		if (!(marshaller instanceof Unmarshaller)) {_			throw new IllegalArgumentException(_					"Marshaller [" + marshaller + "] does not implement the Unmarshaller " +_					"interface. Please set an Unmarshaller explicitly by using the " +_					"MarshallingMessageConverter(Marshaller, Unmarshaller) constructor.")__		}_		else {_			this.marshaller = marshaller__			this.unmarshaller = (Unmarshaller) marshaller__		}_	};construct,a,new,code,marshalling,message,converter,with,the,given,link,marshaller,set,p,if,the,given,link,marshaller,also,implements,the,link,unmarshaller,interface,it,is,used,for,both,marshalling,and,unmarshalling,otherwise,an,exception,is,thrown,p,note,that,all,link,marshaller,implementations,in,spring,also,implement,the,link,unmarshaller,interface,so,that,you,can,safely,use,this,constructor,param,marshaller,object,used,as,marshaller,and,unmarshaller,throws,illegal,argument,exception,when,code,marshaller,does,not,implement,the,link,unmarshaller,interface,as,well;public,marshalling,message,converter,marshaller,marshaller,assert,not,null,marshaller,marshaller,must,not,be,null,if,marshaller,instanceof,unmarshaller,throw,new,illegal,argument,exception,marshaller,marshaller,does,not,implement,the,unmarshaller,interface,please,set,an,unmarshaller,explicitly,by,using,the,marshalling,message,converter,marshaller,unmarshaller,constructor,else,this,marshaller,marshaller,this,unmarshaller,unmarshaller,marshaller
MarshallingMessageConverter -> public MarshallingMessageConverter(Marshaller marshaller);1395698258;Construct a new {@code MarshallingMessageConverter} with the given {@link Marshaller} set._<p>If the given {@link Marshaller} also implements the {@link Unmarshaller} interface,_it is used for both marshalling and unmarshalling. Otherwise, an exception is thrown._<p>Note that all {@link Marshaller} implementations in Spring also implement the_{@link Unmarshaller} interface, so that you can safely use this constructor._@param marshaller object used as marshaller and unmarshaller_@throws IllegalArgumentException when {@code marshaller} does not implement the_{@link Unmarshaller} interface as well;public MarshallingMessageConverter(Marshaller marshaller) {_		Assert.notNull(marshaller, "Marshaller must not be null")__		if (!(marshaller instanceof Unmarshaller)) {_			throw new IllegalArgumentException(_					"Marshaller [" + marshaller + "] does not implement the Unmarshaller " +_					"interface. Please set an Unmarshaller explicitly by using the " +_					"MarshallingMessageConverter(Marshaller, Unmarshaller) constructor.")__		}_		else {_			this.marshaller = marshaller__			this.unmarshaller = (Unmarshaller) marshaller__		}_	};construct,a,new,code,marshalling,message,converter,with,the,given,link,marshaller,set,p,if,the,given,link,marshaller,also,implements,the,link,unmarshaller,interface,it,is,used,for,both,marshalling,and,unmarshalling,otherwise,an,exception,is,thrown,p,note,that,all,link,marshaller,implementations,in,spring,also,implement,the,link,unmarshaller,interface,so,that,you,can,safely,use,this,constructor,param,marshaller,object,used,as,marshaller,and,unmarshaller,throws,illegal,argument,exception,when,code,marshaller,does,not,implement,the,link,unmarshaller,interface,as,well;public,marshalling,message,converter,marshaller,marshaller,assert,not,null,marshaller,marshaller,must,not,be,null,if,marshaller,instanceof,unmarshaller,throw,new,illegal,argument,exception,marshaller,marshaller,does,not,implement,the,unmarshaller,interface,please,set,an,unmarshaller,explicitly,by,using,the,marshalling,message,converter,marshaller,unmarshaller,constructor,else,this,marshaller,marshaller,this,unmarshaller,unmarshaller,marshaller
MarshallingMessageConverter -> public MarshallingMessageConverter(Marshaller marshaller);1500495740;Construct a new {@code MarshallingMessageConverter} with the given {@link Marshaller} set._<p>If the given {@link Marshaller} also implements the {@link Unmarshaller} interface,_it is used for both marshalling and unmarshalling. Otherwise, an exception is thrown._<p>Note that all {@link Marshaller} implementations in Spring also implement the_{@link Unmarshaller} interface, so that you can safely use this constructor._@param marshaller object used as marshaller and unmarshaller_@throws IllegalArgumentException when {@code marshaller} does not implement the_{@link Unmarshaller} interface as well;public MarshallingMessageConverter(Marshaller marshaller) {_		Assert.notNull(marshaller, "Marshaller must not be null")__		if (!(marshaller instanceof Unmarshaller)) {_			throw new IllegalArgumentException(_					"Marshaller [" + marshaller + "] does not implement the Unmarshaller " +_					"interface. Please set an Unmarshaller explicitly by using the " +_					"MarshallingMessageConverter(Marshaller, Unmarshaller) constructor.")__		}_		else {_			this.marshaller = marshaller__			this.unmarshaller = (Unmarshaller) marshaller__		}_	};construct,a,new,code,marshalling,message,converter,with,the,given,link,marshaller,set,p,if,the,given,link,marshaller,also,implements,the,link,unmarshaller,interface,it,is,used,for,both,marshalling,and,unmarshalling,otherwise,an,exception,is,thrown,p,note,that,all,link,marshaller,implementations,in,spring,also,implement,the,link,unmarshaller,interface,so,that,you,can,safely,use,this,constructor,param,marshaller,object,used,as,marshaller,and,unmarshaller,throws,illegal,argument,exception,when,code,marshaller,does,not,implement,the,link,unmarshaller,interface,as,well;public,marshalling,message,converter,marshaller,marshaller,assert,not,null,marshaller,marshaller,must,not,be,null,if,marshaller,instanceof,unmarshaller,throw,new,illegal,argument,exception,marshaller,marshaller,does,not,implement,the,unmarshaller,interface,please,set,an,unmarshaller,explicitly,by,using,the,marshalling,message,converter,marshaller,unmarshaller,constructor,else,this,marshaller,marshaller,this,unmarshaller,unmarshaller,marshaller
MarshallingMessageConverter -> public void setMarshaller(Marshaller marshaller);1328020251;Set the {@link Marshaller} to be used by this message converter.;public void setMarshaller(Marshaller marshaller) {_		this.marshaller = marshaller__	};set,the,link,marshaller,to,be,used,by,this,message,converter;public,void,set,marshaller,marshaller,marshaller,this,marshaller,marshaller
MarshallingMessageConverter -> public void setMarshaller(Marshaller marshaller);1356735495;Set the {@link Marshaller} to be used by this message converter.;public void setMarshaller(Marshaller marshaller) {_		this.marshaller = marshaller__	};set,the,link,marshaller,to,be,used,by,this,message,converter;public,void,set,marshaller,marshaller,marshaller,this,marshaller,marshaller
MarshallingMessageConverter -> public void setMarshaller(Marshaller marshaller);1357119239;Set the {@link Marshaller} to be used by this message converter.;public void setMarshaller(Marshaller marshaller) {_		this.marshaller = marshaller__	};set,the,link,marshaller,to,be,used,by,this,message,converter;public,void,set,marshaller,marshaller,marshaller,this,marshaller,marshaller
MarshallingMessageConverter -> public void setMarshaller(Marshaller marshaller);1368482696;Set the {@link Marshaller} to be used by this message converter.;public void setMarshaller(Marshaller marshaller) {_		this.marshaller = marshaller__	};set,the,link,marshaller,to,be,used,by,this,message,converter;public,void,set,marshaller,marshaller,marshaller,this,marshaller,marshaller
MarshallingMessageConverter -> public void setMarshaller(Marshaller marshaller);1395698258;Set the {@link Marshaller} to be used by this message converter.;public void setMarshaller(Marshaller marshaller) {_		this.marshaller = marshaller__	};set,the,link,marshaller,to,be,used,by,this,message,converter;public,void,set,marshaller,marshaller,marshaller,this,marshaller,marshaller
MarshallingMessageConverter -> public void setMarshaller(Marshaller marshaller);1500495740;Set the {@link Marshaller} to be used by this message converter.;public void setMarshaller(Marshaller marshaller) {_		Assert.notNull(marshaller, "Marshaller must not be null")__		this.marshaller = marshaller__	};set,the,link,marshaller,to,be,used,by,this,message,converter;public,void,set,marshaller,marshaller,marshaller,assert,not,null,marshaller,marshaller,must,not,be,null,this,marshaller,marshaller
MarshallingMessageConverter -> protected Message marshalToMessage(Object object, Session session, Marshaller marshaller, MessageType targetType) 			throws JMSException, IOException, XmlMappingException;1328020251;Template method that allows for custom message marshalling._Invoked when {@link #setTargetType} is not {@link MessageType#TEXT} or_{@link MessageType#BYTES}._<p>The default implementation throws an {@link IllegalArgumentException}._@param object the object to marshal_@param session the JMS session_@param marshaller the marshaller to use_@param targetType the target message type (other than TEXT or BYTES)_@return the resulting message_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors;protected Message marshalToMessage(Object object, Session session, Marshaller marshaller, MessageType targetType)_			throws JMSException, IOException, XmlMappingException {__		throw new IllegalArgumentException("Unsupported message type [" + targetType +_				"]. MarshallingMessageConverter by default only supports TextMessages and BytesMessages.")__	};template,method,that,allows,for,custom,message,marshalling,invoked,when,link,set,target,type,is,not,link,message,type,text,or,link,message,type,bytes,p,the,default,implementation,throws,an,link,illegal,argument,exception,param,object,the,object,to,marshal,param,session,the,jms,session,param,marshaller,the,marshaller,to,use,param,target,type,the,target,message,type,other,than,text,or,bytes,return,the,resulting,message,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors;protected,message,marshal,to,message,object,object,session,session,marshaller,marshaller,message,type,target,type,throws,jmsexception,ioexception,xml,mapping,exception,throw,new,illegal,argument,exception,unsupported,message,type,target,type,marshalling,message,converter,by,default,only,supports,text,messages,and,bytes,messages
MarshallingMessageConverter -> protected Message marshalToMessage(Object object, Session session, Marshaller marshaller, MessageType targetType) 			throws JMSException, IOException, XmlMappingException;1356735495;Template method that allows for custom message marshalling._Invoked when {@link #setTargetType} is not {@link MessageType#TEXT} or_{@link MessageType#BYTES}._<p>The default implementation throws an {@link IllegalArgumentException}._@param object the object to marshal_@param session the JMS session_@param marshaller the marshaller to use_@param targetType the target message type (other than TEXT or BYTES)_@return the resulting message_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors;protected Message marshalToMessage(Object object, Session session, Marshaller marshaller, MessageType targetType)_			throws JMSException, IOException, XmlMappingException {__		throw new IllegalArgumentException("Unsupported message type [" + targetType +_				"]. MarshallingMessageConverter by default only supports TextMessages and BytesMessages.")__	};template,method,that,allows,for,custom,message,marshalling,invoked,when,link,set,target,type,is,not,link,message,type,text,or,link,message,type,bytes,p,the,default,implementation,throws,an,link,illegal,argument,exception,param,object,the,object,to,marshal,param,session,the,jms,session,param,marshaller,the,marshaller,to,use,param,target,type,the,target,message,type,other,than,text,or,bytes,return,the,resulting,message,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors;protected,message,marshal,to,message,object,object,session,session,marshaller,marshaller,message,type,target,type,throws,jmsexception,ioexception,xml,mapping,exception,throw,new,illegal,argument,exception,unsupported,message,type,target,type,marshalling,message,converter,by,default,only,supports,text,messages,and,bytes,messages
MarshallingMessageConverter -> protected Message marshalToMessage(Object object, Session session, Marshaller marshaller, MessageType targetType) 			throws JMSException, IOException, XmlMappingException;1357119239;Template method that allows for custom message marshalling._Invoked when {@link #setTargetType} is not {@link MessageType#TEXT} or_{@link MessageType#BYTES}._<p>The default implementation throws an {@link IllegalArgumentException}._@param object the object to marshal_@param session the JMS session_@param marshaller the marshaller to use_@param targetType the target message type (other than TEXT or BYTES)_@return the resulting message_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors;protected Message marshalToMessage(Object object, Session session, Marshaller marshaller, MessageType targetType)_			throws JMSException, IOException, XmlMappingException {__		throw new IllegalArgumentException("Unsupported message type [" + targetType +_				"]. MarshallingMessageConverter by default only supports TextMessages and BytesMessages.")__	};template,method,that,allows,for,custom,message,marshalling,invoked,when,link,set,target,type,is,not,link,message,type,text,or,link,message,type,bytes,p,the,default,implementation,throws,an,link,illegal,argument,exception,param,object,the,object,to,marshal,param,session,the,jms,session,param,marshaller,the,marshaller,to,use,param,target,type,the,target,message,type,other,than,text,or,bytes,return,the,resulting,message,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors;protected,message,marshal,to,message,object,object,session,session,marshaller,marshaller,message,type,target,type,throws,jmsexception,ioexception,xml,mapping,exception,throw,new,illegal,argument,exception,unsupported,message,type,target,type,marshalling,message,converter,by,default,only,supports,text,messages,and,bytes,messages
MarshallingMessageConverter -> protected Message marshalToMessage(Object object, Session session, Marshaller marshaller, MessageType targetType) 			throws JMSException, IOException, XmlMappingException;1368482696;Template method that allows for custom message marshalling._Invoked when {@link #setTargetType} is not {@link MessageType#TEXT} or_{@link MessageType#BYTES}._<p>The default implementation throws an {@link IllegalArgumentException}._@param object the object to marshal_@param session the JMS session_@param marshaller the marshaller to use_@param targetType the target message type (other than TEXT or BYTES)_@return the resulting message_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors;protected Message marshalToMessage(Object object, Session session, Marshaller marshaller, MessageType targetType)_			throws JMSException, IOException, XmlMappingException {__		throw new IllegalArgumentException("Unsupported message type [" + targetType +_				"]. MarshallingMessageConverter by default only supports TextMessages and BytesMessages.")__	};template,method,that,allows,for,custom,message,marshalling,invoked,when,link,set,target,type,is,not,link,message,type,text,or,link,message,type,bytes,p,the,default,implementation,throws,an,link,illegal,argument,exception,param,object,the,object,to,marshal,param,session,the,jms,session,param,marshaller,the,marshaller,to,use,param,target,type,the,target,message,type,other,than,text,or,bytes,return,the,resulting,message,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors;protected,message,marshal,to,message,object,object,session,session,marshaller,marshaller,message,type,target,type,throws,jmsexception,ioexception,xml,mapping,exception,throw,new,illegal,argument,exception,unsupported,message,type,target,type,marshalling,message,converter,by,default,only,supports,text,messages,and,bytes,messages
MarshallingMessageConverter -> protected Message marshalToMessage(Object object, Session session, Marshaller marshaller, MessageType targetType) 			throws JMSException, IOException, XmlMappingException;1395698258;Template method that allows for custom message marshalling._Invoked when {@link #setTargetType} is not {@link MessageType#TEXT} or_{@link MessageType#BYTES}._<p>The default implementation throws an {@link IllegalArgumentException}._@param object the object to marshal_@param session the JMS session_@param marshaller the marshaller to use_@param targetType the target message type (other than TEXT or BYTES)_@return the resulting message_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors;protected Message marshalToMessage(Object object, Session session, Marshaller marshaller, MessageType targetType)_			throws JMSException, IOException, XmlMappingException {__		throw new IllegalArgumentException("Unsupported message type [" + targetType +_				"]. MarshallingMessageConverter by default only supports TextMessages and BytesMessages.")__	};template,method,that,allows,for,custom,message,marshalling,invoked,when,link,set,target,type,is,not,link,message,type,text,or,link,message,type,bytes,p,the,default,implementation,throws,an,link,illegal,argument,exception,param,object,the,object,to,marshal,param,session,the,jms,session,param,marshaller,the,marshaller,to,use,param,target,type,the,target,message,type,other,than,text,or,bytes,return,the,resulting,message,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors;protected,message,marshal,to,message,object,object,session,session,marshaller,marshaller,message,type,target,type,throws,jmsexception,ioexception,xml,mapping,exception,throw,new,illegal,argument,exception,unsupported,message,type,target,type,marshalling,message,converter,by,default,only,supports,text,messages,and,bytes,messages
MarshallingMessageConverter -> protected Message marshalToMessage(Object object, Session session, Marshaller marshaller, MessageType targetType) 			throws JMSException, IOException, XmlMappingException;1500495740;Template method that allows for custom message marshalling._Invoked when {@link #setTargetType} is not {@link MessageType#TEXT} or_{@link MessageType#BYTES}._<p>The default implementation throws an {@link IllegalArgumentException}._@param object the object to marshal_@param session the JMS session_@param marshaller the marshaller to use_@param targetType the target message type (other than TEXT or BYTES)_@return the resulting message_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors;protected Message marshalToMessage(Object object, Session session, Marshaller marshaller, MessageType targetType)_			throws JMSException, IOException, XmlMappingException {__		throw new IllegalArgumentException("Unsupported message type [" + targetType +_				"]. MarshallingMessageConverter by default only supports TextMessages and BytesMessages.")__	};template,method,that,allows,for,custom,message,marshalling,invoked,when,link,set,target,type,is,not,link,message,type,text,or,link,message,type,bytes,p,the,default,implementation,throws,an,link,illegal,argument,exception,param,object,the,object,to,marshal,param,session,the,jms,session,param,marshaller,the,marshaller,to,use,param,target,type,the,target,message,type,other,than,text,or,bytes,return,the,resulting,message,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors;protected,message,marshal,to,message,object,object,session,session,marshaller,marshaller,message,type,target,type,throws,jmsexception,ioexception,xml,mapping,exception,throw,new,illegal,argument,exception,unsupported,message,type,target,type,marshalling,message,converter,by,default,only,supports,text,messages,and,bytes,messages
MarshallingMessageConverter -> protected Object unmarshalFromMessage(Message message, Unmarshaller unmarshaller) 			throws JMSException, IOException, XmlMappingException;1328020251;Template method that allows for custom message unmarshalling._Invoked when {@link #fromMessage(Message)} is invoked with a message_that is not a {@link TextMessage} or {@link BytesMessage}._<p>The default implementation throws an {@link IllegalArgumentException}._@param message the message_@param unmarshaller the unmarshaller to use_@return the unmarshalled object_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors;protected Object unmarshalFromMessage(Message message, Unmarshaller unmarshaller)_			throws JMSException, IOException, XmlMappingException {__		throw new IllegalArgumentException("Unsupported message type [" + message.getClass() +_				"]. MarshallingMessageConverter by default only supports TextMessages and BytesMessages.")__	};template,method,that,allows,for,custom,message,unmarshalling,invoked,when,link,from,message,message,is,invoked,with,a,message,that,is,not,a,link,text,message,or,link,bytes,message,p,the,default,implementation,throws,an,link,illegal,argument,exception,param,message,the,message,param,unmarshaller,the,unmarshaller,to,use,return,the,unmarshalled,object,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors;protected,object,unmarshal,from,message,message,message,unmarshaller,unmarshaller,throws,jmsexception,ioexception,xml,mapping,exception,throw,new,illegal,argument,exception,unsupported,message,type,message,get,class,marshalling,message,converter,by,default,only,supports,text,messages,and,bytes,messages
MarshallingMessageConverter -> protected Object unmarshalFromMessage(Message message, Unmarshaller unmarshaller) 			throws JMSException, IOException, XmlMappingException;1356735495;Template method that allows for custom message unmarshalling._Invoked when {@link #fromMessage(Message)} is invoked with a message_that is not a {@link TextMessage} or {@link BytesMessage}._<p>The default implementation throws an {@link IllegalArgumentException}._@param message the message_@param unmarshaller the unmarshaller to use_@return the unmarshalled object_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors;protected Object unmarshalFromMessage(Message message, Unmarshaller unmarshaller)_			throws JMSException, IOException, XmlMappingException {__		throw new IllegalArgumentException("Unsupported message type [" + message.getClass() +_				"]. MarshallingMessageConverter by default only supports TextMessages and BytesMessages.")__	};template,method,that,allows,for,custom,message,unmarshalling,invoked,when,link,from,message,message,is,invoked,with,a,message,that,is,not,a,link,text,message,or,link,bytes,message,p,the,default,implementation,throws,an,link,illegal,argument,exception,param,message,the,message,param,unmarshaller,the,unmarshaller,to,use,return,the,unmarshalled,object,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors;protected,object,unmarshal,from,message,message,message,unmarshaller,unmarshaller,throws,jmsexception,ioexception,xml,mapping,exception,throw,new,illegal,argument,exception,unsupported,message,type,message,get,class,marshalling,message,converter,by,default,only,supports,text,messages,and,bytes,messages
MarshallingMessageConverter -> protected Object unmarshalFromMessage(Message message, Unmarshaller unmarshaller) 			throws JMSException, IOException, XmlMappingException;1357119239;Template method that allows for custom message unmarshalling._Invoked when {@link #fromMessage(Message)} is invoked with a message_that is not a {@link TextMessage} or {@link BytesMessage}._<p>The default implementation throws an {@link IllegalArgumentException}._@param message the message_@param unmarshaller the unmarshaller to use_@return the unmarshalled object_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors;protected Object unmarshalFromMessage(Message message, Unmarshaller unmarshaller)_			throws JMSException, IOException, XmlMappingException {__		throw new IllegalArgumentException("Unsupported message type [" + message.getClass() +_				"]. MarshallingMessageConverter by default only supports TextMessages and BytesMessages.")__	};template,method,that,allows,for,custom,message,unmarshalling,invoked,when,link,from,message,message,is,invoked,with,a,message,that,is,not,a,link,text,message,or,link,bytes,message,p,the,default,implementation,throws,an,link,illegal,argument,exception,param,message,the,message,param,unmarshaller,the,unmarshaller,to,use,return,the,unmarshalled,object,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors;protected,object,unmarshal,from,message,message,message,unmarshaller,unmarshaller,throws,jmsexception,ioexception,xml,mapping,exception,throw,new,illegal,argument,exception,unsupported,message,type,message,get,class,marshalling,message,converter,by,default,only,supports,text,messages,and,bytes,messages
MarshallingMessageConverter -> protected Object unmarshalFromMessage(Message message, Unmarshaller unmarshaller) 			throws JMSException, IOException, XmlMappingException;1368482696;Template method that allows for custom message unmarshalling._Invoked when {@link #fromMessage(Message)} is invoked with a message_that is not a {@link TextMessage} or {@link BytesMessage}._<p>The default implementation throws an {@link IllegalArgumentException}._@param message the message_@param unmarshaller the unmarshaller to use_@return the unmarshalled object_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors;protected Object unmarshalFromMessage(Message message, Unmarshaller unmarshaller)_			throws JMSException, IOException, XmlMappingException {__		throw new IllegalArgumentException("Unsupported message type [" + message.getClass() +_				"]. MarshallingMessageConverter by default only supports TextMessages and BytesMessages.")__	};template,method,that,allows,for,custom,message,unmarshalling,invoked,when,link,from,message,message,is,invoked,with,a,message,that,is,not,a,link,text,message,or,link,bytes,message,p,the,default,implementation,throws,an,link,illegal,argument,exception,param,message,the,message,param,unmarshaller,the,unmarshaller,to,use,return,the,unmarshalled,object,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors;protected,object,unmarshal,from,message,message,message,unmarshaller,unmarshaller,throws,jmsexception,ioexception,xml,mapping,exception,throw,new,illegal,argument,exception,unsupported,message,type,message,get,class,marshalling,message,converter,by,default,only,supports,text,messages,and,bytes,messages
MarshallingMessageConverter -> protected Object unmarshalFromMessage(Message message, Unmarshaller unmarshaller) 			throws JMSException, IOException, XmlMappingException;1395698258;Template method that allows for custom message unmarshalling._Invoked when {@link #fromMessage(Message)} is invoked with a message_that is not a {@link TextMessage} or {@link BytesMessage}._<p>The default implementation throws an {@link IllegalArgumentException}._@param message the message_@param unmarshaller the unmarshaller to use_@return the unmarshalled object_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors;protected Object unmarshalFromMessage(Message message, Unmarshaller unmarshaller)_			throws JMSException, IOException, XmlMappingException {__		throw new IllegalArgumentException("Unsupported message type [" + message.getClass() +_				"]. MarshallingMessageConverter by default only supports TextMessages and BytesMessages.")__	};template,method,that,allows,for,custom,message,unmarshalling,invoked,when,link,from,message,message,is,invoked,with,a,message,that,is,not,a,link,text,message,or,link,bytes,message,p,the,default,implementation,throws,an,link,illegal,argument,exception,param,message,the,message,param,unmarshaller,the,unmarshaller,to,use,return,the,unmarshalled,object,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors;protected,object,unmarshal,from,message,message,message,unmarshaller,unmarshaller,throws,jmsexception,ioexception,xml,mapping,exception,throw,new,illegal,argument,exception,unsupported,message,type,message,get,class,marshalling,message,converter,by,default,only,supports,text,messages,and,bytes,messages
MarshallingMessageConverter -> protected Object unmarshalFromMessage(Message message, Unmarshaller unmarshaller) 			throws JMSException, IOException, XmlMappingException;1500495740;Template method that allows for custom message unmarshalling._Invoked when {@link #fromMessage(Message)} is invoked with a message_that is not a {@link TextMessage} or {@link BytesMessage}._<p>The default implementation throws an {@link IllegalArgumentException}._@param message the message_@param unmarshaller the unmarshaller to use_@return the unmarshalled object_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors;protected Object unmarshalFromMessage(Message message, Unmarshaller unmarshaller)_			throws JMSException, IOException, XmlMappingException {__		throw new IllegalArgumentException("Unsupported message type [" + message.getClass() +_				"]. MarshallingMessageConverter by default only supports TextMessages and BytesMessages.")__	};template,method,that,allows,for,custom,message,unmarshalling,invoked,when,link,from,message,message,is,invoked,with,a,message,that,is,not,a,link,text,message,or,link,bytes,message,p,the,default,implementation,throws,an,link,illegal,argument,exception,param,message,the,message,param,unmarshaller,the,unmarshaller,to,use,return,the,unmarshalled,object,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors;protected,object,unmarshal,from,message,message,message,unmarshaller,unmarshaller,throws,jmsexception,ioexception,xml,mapping,exception,throw,new,illegal,argument,exception,unsupported,message,type,message,get,class,marshalling,message,converter,by,default,only,supports,text,messages,and,bytes,messages
MarshallingMessageConverter -> public Object fromMessage(Message message) throws JMSException, MessageConversionException;1328020251;This implementation unmarshals the given {@link Message} into an object._@see #unmarshalFromTextMessage_@see #unmarshalFromBytesMessage;public Object fromMessage(Message message) throws JMSException, MessageConversionException {_		try {_			if (message instanceof TextMessage) {_				TextMessage textMessage = (TextMessage) message__				return unmarshalFromTextMessage(textMessage, this.unmarshaller)__			}_			else if (message instanceof BytesMessage) {_				BytesMessage bytesMessage = (BytesMessage) message__				return unmarshalFromBytesMessage(bytesMessage, this.unmarshaller)__			}_			else {_				return unmarshalFromMessage(message, this.unmarshaller)__			}_		}_		catch (IOException ex) {_			throw new MessageConversionException("Could not access message content: " + message, ex)__		}_		catch (XmlMappingException ex) {_			throw new MessageConversionException("Could not unmarshal message: " + message, ex)__		}_	};this,implementation,unmarshals,the,given,link,message,into,an,object,see,unmarshal,from,text,message,see,unmarshal,from,bytes,message;public,object,from,message,message,message,throws,jmsexception,message,conversion,exception,try,if,message,instanceof,text,message,text,message,text,message,text,message,message,return,unmarshal,from,text,message,text,message,this,unmarshaller,else,if,message,instanceof,bytes,message,bytes,message,bytes,message,bytes,message,message,return,unmarshal,from,bytes,message,bytes,message,this,unmarshaller,else,return,unmarshal,from,message,message,this,unmarshaller,catch,ioexception,ex,throw,new,message,conversion,exception,could,not,access,message,content,message,ex,catch,xml,mapping,exception,ex,throw,new,message,conversion,exception,could,not,unmarshal,message,message,ex
MarshallingMessageConverter -> public Object fromMessage(Message message) throws JMSException, MessageConversionException;1357119239;This implementation unmarshals the given {@link Message} into an object._@see #unmarshalFromTextMessage_@see #unmarshalFromBytesMessage;public Object fromMessage(Message message) throws JMSException, MessageConversionException {_		try {_			if (message instanceof TextMessage) {_				TextMessage textMessage = (TextMessage) message__				return unmarshalFromTextMessage(textMessage, this.unmarshaller)__			}_			else if (message instanceof BytesMessage) {_				BytesMessage bytesMessage = (BytesMessage) message__				return unmarshalFromBytesMessage(bytesMessage, this.unmarshaller)__			}_			else {_				return unmarshalFromMessage(message, this.unmarshaller)__			}_		}_		catch (IOException ex) {_			throw new MessageConversionException("Could not access message content: " + message, ex)__		}_		catch (XmlMappingException ex) {_			throw new MessageConversionException("Could not unmarshal message: " + message, ex)__		}_	};this,implementation,unmarshals,the,given,link,message,into,an,object,see,unmarshal,from,text,message,see,unmarshal,from,bytes,message;public,object,from,message,message,message,throws,jmsexception,message,conversion,exception,try,if,message,instanceof,text,message,text,message,text,message,text,message,message,return,unmarshal,from,text,message,text,message,this,unmarshaller,else,if,message,instanceof,bytes,message,bytes,message,bytes,message,bytes,message,message,return,unmarshal,from,bytes,message,bytes,message,this,unmarshaller,else,return,unmarshal,from,message,message,this,unmarshaller,catch,ioexception,ex,throw,new,message,conversion,exception,could,not,access,message,content,message,ex,catch,xml,mapping,exception,ex,throw,new,message,conversion,exception,could,not,unmarshal,message,message,ex
MarshallingMessageConverter -> protected Object unmarshalFromTextMessage(TextMessage message, Unmarshaller unmarshaller) 			throws JMSException, IOException, XmlMappingException;1328020251;Unmarshal the given {@link TextMessage} into an object._@param message the message_@param unmarshaller the unmarshaller to use_@return the unmarshalled object_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Unmarshaller#unmarshal(Source);protected Object unmarshalFromTextMessage(TextMessage message, Unmarshaller unmarshaller)_			throws JMSException, IOException, XmlMappingException {__		Source source = new StreamSource(new StringReader(message.getText()))__		return unmarshaller.unmarshal(source)__	};unmarshal,the,given,link,text,message,into,an,object,param,message,the,message,param,unmarshaller,the,unmarshaller,to,use,return,the,unmarshalled,object,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,unmarshaller,unmarshal,source;protected,object,unmarshal,from,text,message,text,message,message,unmarshaller,unmarshaller,throws,jmsexception,ioexception,xml,mapping,exception,source,source,new,stream,source,new,string,reader,message,get,text,return,unmarshaller,unmarshal,source
MarshallingMessageConverter -> protected Object unmarshalFromTextMessage(TextMessage message, Unmarshaller unmarshaller) 			throws JMSException, IOException, XmlMappingException;1356735495;Unmarshal the given {@link TextMessage} into an object._@param message the message_@param unmarshaller the unmarshaller to use_@return the unmarshalled object_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Unmarshaller#unmarshal(Source);protected Object unmarshalFromTextMessage(TextMessage message, Unmarshaller unmarshaller)_			throws JMSException, IOException, XmlMappingException {__		Source source = new StreamSource(new StringReader(message.getText()))__		return unmarshaller.unmarshal(source)__	};unmarshal,the,given,link,text,message,into,an,object,param,message,the,message,param,unmarshaller,the,unmarshaller,to,use,return,the,unmarshalled,object,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,unmarshaller,unmarshal,source;protected,object,unmarshal,from,text,message,text,message,message,unmarshaller,unmarshaller,throws,jmsexception,ioexception,xml,mapping,exception,source,source,new,stream,source,new,string,reader,message,get,text,return,unmarshaller,unmarshal,source
MarshallingMessageConverter -> protected Object unmarshalFromTextMessage(TextMessage message, Unmarshaller unmarshaller) 			throws JMSException, IOException, XmlMappingException;1357119239;Unmarshal the given {@link TextMessage} into an object._@param message the message_@param unmarshaller the unmarshaller to use_@return the unmarshalled object_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Unmarshaller#unmarshal(Source);protected Object unmarshalFromTextMessage(TextMessage message, Unmarshaller unmarshaller)_			throws JMSException, IOException, XmlMappingException {__		Source source = new StreamSource(new StringReader(message.getText()))__		return unmarshaller.unmarshal(source)__	};unmarshal,the,given,link,text,message,into,an,object,param,message,the,message,param,unmarshaller,the,unmarshaller,to,use,return,the,unmarshalled,object,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,unmarshaller,unmarshal,source;protected,object,unmarshal,from,text,message,text,message,message,unmarshaller,unmarshaller,throws,jmsexception,ioexception,xml,mapping,exception,source,source,new,stream,source,new,string,reader,message,get,text,return,unmarshaller,unmarshal,source
MarshallingMessageConverter -> protected Object unmarshalFromTextMessage(TextMessage message, Unmarshaller unmarshaller) 			throws JMSException, IOException, XmlMappingException;1368482696;Unmarshal the given {@link TextMessage} into an object._@param message the message_@param unmarshaller the unmarshaller to use_@return the unmarshalled object_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Unmarshaller#unmarshal(Source);protected Object unmarshalFromTextMessage(TextMessage message, Unmarshaller unmarshaller)_			throws JMSException, IOException, XmlMappingException {__		Source source = new StreamSource(new StringReader(message.getText()))__		return unmarshaller.unmarshal(source)__	};unmarshal,the,given,link,text,message,into,an,object,param,message,the,message,param,unmarshaller,the,unmarshaller,to,use,return,the,unmarshalled,object,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,unmarshaller,unmarshal,source;protected,object,unmarshal,from,text,message,text,message,message,unmarshaller,unmarshaller,throws,jmsexception,ioexception,xml,mapping,exception,source,source,new,stream,source,new,string,reader,message,get,text,return,unmarshaller,unmarshal,source
MarshallingMessageConverter -> protected Object unmarshalFromTextMessage(TextMessage message, Unmarshaller unmarshaller) 			throws JMSException, IOException, XmlMappingException;1395698258;Unmarshal the given {@link TextMessage} into an object._@param message the message_@param unmarshaller the unmarshaller to use_@return the unmarshalled object_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Unmarshaller#unmarshal(Source);protected Object unmarshalFromTextMessage(TextMessage message, Unmarshaller unmarshaller)_			throws JMSException, IOException, XmlMappingException {__		Source source = new StreamSource(new StringReader(message.getText()))__		return unmarshaller.unmarshal(source)__	};unmarshal,the,given,link,text,message,into,an,object,param,message,the,message,param,unmarshaller,the,unmarshaller,to,use,return,the,unmarshalled,object,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,unmarshaller,unmarshal,source;protected,object,unmarshal,from,text,message,text,message,message,unmarshaller,unmarshaller,throws,jmsexception,ioexception,xml,mapping,exception,source,source,new,stream,source,new,string,reader,message,get,text,return,unmarshaller,unmarshal,source
MarshallingMessageConverter -> protected Object unmarshalFromTextMessage(TextMessage message, Unmarshaller unmarshaller) 			throws JMSException, IOException, XmlMappingException;1500495740;Unmarshal the given {@link TextMessage} into an object._@param message the message_@param unmarshaller the unmarshaller to use_@return the unmarshalled object_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Unmarshaller#unmarshal(Source);protected Object unmarshalFromTextMessage(TextMessage message, Unmarshaller unmarshaller)_			throws JMSException, IOException, XmlMappingException {__		Source source = new StreamSource(new StringReader(message.getText()))__		return unmarshaller.unmarshal(source)__	};unmarshal,the,given,link,text,message,into,an,object,param,message,the,message,param,unmarshaller,the,unmarshaller,to,use,return,the,unmarshalled,object,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,unmarshaller,unmarshal,source;protected,object,unmarshal,from,text,message,text,message,message,unmarshaller,unmarshaller,throws,jmsexception,ioexception,xml,mapping,exception,source,source,new,stream,source,new,string,reader,message,get,text,return,unmarshaller,unmarshal,source
MarshallingMessageConverter -> public void setTargetType(MessageType targetType);1328020251;Specify whether {@link #toMessage(Object, Session)} should marshal to_a {@link BytesMessage} or a {@link TextMessage}._<p>The default is {@link MessageType#BYTES}, i.e. this converter marshals_to a {@link BytesMessage}. Note that the default version of this converter_supports {@link MessageType#BYTES} and {@link MessageType#TEXT} only._@see MessageType#BYTES_@see MessageType#TEXT;public void setTargetType(MessageType targetType) {_		Assert.notNull(targetType, "MessageType must not be null")__		this.targetType = targetType__	};specify,whether,link,to,message,object,session,should,marshal,to,a,link,bytes,message,or,a,link,text,message,p,the,default,is,link,message,type,bytes,i,e,this,converter,marshals,to,a,link,bytes,message,note,that,the,default,version,of,this,converter,supports,link,message,type,bytes,and,link,message,type,text,only,see,message,type,bytes,see,message,type,text;public,void,set,target,type,message,type,target,type,assert,not,null,target,type,message,type,must,not,be,null,this,target,type,target,type
MarshallingMessageConverter -> public void setTargetType(MessageType targetType);1356735495;Specify whether {@link #toMessage(Object, Session)} should marshal to_a {@link BytesMessage} or a {@link TextMessage}._<p>The default is {@link MessageType#BYTES}, i.e. this converter marshals_to a {@link BytesMessage}. Note that the default version of this converter_supports {@link MessageType#BYTES} and {@link MessageType#TEXT} only._@see MessageType#BYTES_@see MessageType#TEXT;public void setTargetType(MessageType targetType) {_		Assert.notNull(targetType, "MessageType must not be null")__		this.targetType = targetType__	};specify,whether,link,to,message,object,session,should,marshal,to,a,link,bytes,message,or,a,link,text,message,p,the,default,is,link,message,type,bytes,i,e,this,converter,marshals,to,a,link,bytes,message,note,that,the,default,version,of,this,converter,supports,link,message,type,bytes,and,link,message,type,text,only,see,message,type,bytes,see,message,type,text;public,void,set,target,type,message,type,target,type,assert,not,null,target,type,message,type,must,not,be,null,this,target,type,target,type
MarshallingMessageConverter -> public void setTargetType(MessageType targetType);1357119239;Specify whether {@link #toMessage(Object, Session)} should marshal to_a {@link BytesMessage} or a {@link TextMessage}._<p>The default is {@link MessageType#BYTES}, i.e. this converter marshals_to a {@link BytesMessage}. Note that the default version of this converter_supports {@link MessageType#BYTES} and {@link MessageType#TEXT} only._@see MessageType#BYTES_@see MessageType#TEXT;public void setTargetType(MessageType targetType) {_		Assert.notNull(targetType, "MessageType must not be null")__		this.targetType = targetType__	};specify,whether,link,to,message,object,session,should,marshal,to,a,link,bytes,message,or,a,link,text,message,p,the,default,is,link,message,type,bytes,i,e,this,converter,marshals,to,a,link,bytes,message,note,that,the,default,version,of,this,converter,supports,link,message,type,bytes,and,link,message,type,text,only,see,message,type,bytes,see,message,type,text;public,void,set,target,type,message,type,target,type,assert,not,null,target,type,message,type,must,not,be,null,this,target,type,target,type
MarshallingMessageConverter -> public void setTargetType(MessageType targetType);1368482696;Specify whether {@link #toMessage(Object, Session)} should marshal to_a {@link BytesMessage} or a {@link TextMessage}._<p>The default is {@link MessageType#BYTES}, i.e. this converter marshals_to a {@link BytesMessage}. Note that the default version of this converter_supports {@link MessageType#BYTES} and {@link MessageType#TEXT} only._@see MessageType#BYTES_@see MessageType#TEXT;public void setTargetType(MessageType targetType) {_		Assert.notNull(targetType, "MessageType must not be null")__		this.targetType = targetType__	};specify,whether,link,to,message,object,session,should,marshal,to,a,link,bytes,message,or,a,link,text,message,p,the,default,is,link,message,type,bytes,i,e,this,converter,marshals,to,a,link,bytes,message,note,that,the,default,version,of,this,converter,supports,link,message,type,bytes,and,link,message,type,text,only,see,message,type,bytes,see,message,type,text;public,void,set,target,type,message,type,target,type,assert,not,null,target,type,message,type,must,not,be,null,this,target,type,target,type
MarshallingMessageConverter -> public void setTargetType(MessageType targetType);1395698258;Specify whether {@link #toMessage(Object, Session)} should marshal to_a {@link BytesMessage} or a {@link TextMessage}._<p>The default is {@link MessageType#BYTES}, i.e. this converter marshals_to a {@link BytesMessage}. Note that the default version of this converter_supports {@link MessageType#BYTES} and {@link MessageType#TEXT} only._@see MessageType#BYTES_@see MessageType#TEXT;public void setTargetType(MessageType targetType) {_		Assert.notNull(targetType, "MessageType must not be null")__		this.targetType = targetType__	};specify,whether,link,to,message,object,session,should,marshal,to,a,link,bytes,message,or,a,link,text,message,p,the,default,is,link,message,type,bytes,i,e,this,converter,marshals,to,a,link,bytes,message,note,that,the,default,version,of,this,converter,supports,link,message,type,bytes,and,link,message,type,text,only,see,message,type,bytes,see,message,type,text;public,void,set,target,type,message,type,target,type,assert,not,null,target,type,message,type,must,not,be,null,this,target,type,target,type
MarshallingMessageConverter -> public void setTargetType(MessageType targetType);1500495740;Specify whether {@link #toMessage(Object, Session)} should marshal to_a {@link BytesMessage} or a {@link TextMessage}._<p>The default is {@link MessageType#BYTES}, i.e. this converter marshals_to a {@link BytesMessage}. Note that the default version of this converter_supports {@link MessageType#BYTES} and {@link MessageType#TEXT} only._@see MessageType#BYTES_@see MessageType#TEXT;public void setTargetType(MessageType targetType) {_		Assert.notNull(targetType, "MessageType must not be null")__		this.targetType = targetType__	};specify,whether,link,to,message,object,session,should,marshal,to,a,link,bytes,message,or,a,link,text,message,p,the,default,is,link,message,type,bytes,i,e,this,converter,marshals,to,a,link,bytes,message,note,that,the,default,version,of,this,converter,supports,link,message,type,bytes,and,link,message,type,text,only,see,message,type,bytes,see,message,type,text;public,void,set,target,type,message,type,target,type,assert,not,null,target,type,message,type,must,not,be,null,this,target,type,target,type
MarshallingMessageConverter -> public Message toMessage(Object object, Session session) throws JMSException, MessageConversionException;1328020251;This implementation marshals the given object to a {@link javax.jms.TextMessage} or_{@link javax.jms.BytesMessage}. The desired message type can be defined by setting_the {@link #setTargetType "marshalTo"} property._@see #marshalToTextMessage_@see #marshalToBytesMessage;public Message toMessage(Object object, Session session) throws JMSException, MessageConversionException {_		try {_			switch (this.targetType) {_				case TEXT:_					return marshalToTextMessage(object, session, this.marshaller)__				case BYTES:_					return marshalToBytesMessage(object, session, this.marshaller)__				default:_					return marshalToMessage(object, session, this.marshaller, this.targetType)__			}_		}_		catch (XmlMappingException ex) {_			throw new MessageConversionException("Could not marshal [" + object + "]", ex)__		}_		catch (IOException ex) {_			throw new MessageConversionException("Could not marshal [" + object + "]", ex)__		}_	};this,implementation,marshals,the,given,object,to,a,link,javax,jms,text,message,or,link,javax,jms,bytes,message,the,desired,message,type,can,be,defined,by,setting,the,link,set,target,type,marshal,to,property,see,marshal,to,text,message,see,marshal,to,bytes,message;public,message,to,message,object,object,session,session,throws,jmsexception,message,conversion,exception,try,switch,this,target,type,case,text,return,marshal,to,text,message,object,session,this,marshaller,case,bytes,return,marshal,to,bytes,message,object,session,this,marshaller,default,return,marshal,to,message,object,session,this,marshaller,this,target,type,catch,xml,mapping,exception,ex,throw,new,message,conversion,exception,could,not,marshal,object,ex,catch,ioexception,ex,throw,new,message,conversion,exception,could,not,marshal,object,ex
MarshallingMessageConverter -> public Message toMessage(Object object, Session session) throws JMSException, MessageConversionException;1357119239;This implementation marshals the given object to a {@link javax.jms.TextMessage} or_{@link javax.jms.BytesMessage}. The desired message type can be defined by setting_the {@link #setTargetType "marshalTo"} property._@see #marshalToTextMessage_@see #marshalToBytesMessage;public Message toMessage(Object object, Session session) throws JMSException, MessageConversionException {_		try {_			switch (this.targetType) {_				case TEXT:_					return marshalToTextMessage(object, session, this.marshaller)__				case BYTES:_					return marshalToBytesMessage(object, session, this.marshaller)__				default:_					return marshalToMessage(object, session, this.marshaller, this.targetType)__			}_		}_		catch (XmlMappingException ex) {_			throw new MessageConversionException("Could not marshal [" + object + "]", ex)__		}_		catch (IOException ex) {_			throw new MessageConversionException("Could not marshal [" + object + "]", ex)__		}_	};this,implementation,marshals,the,given,object,to,a,link,javax,jms,text,message,or,link,javax,jms,bytes,message,the,desired,message,type,can,be,defined,by,setting,the,link,set,target,type,marshal,to,property,see,marshal,to,text,message,see,marshal,to,bytes,message;public,message,to,message,object,object,session,session,throws,jmsexception,message,conversion,exception,try,switch,this,target,type,case,text,return,marshal,to,text,message,object,session,this,marshaller,case,bytes,return,marshal,to,bytes,message,object,session,this,marshaller,default,return,marshal,to,message,object,session,this,marshaller,this,target,type,catch,xml,mapping,exception,ex,throw,new,message,conversion,exception,could,not,marshal,object,ex,catch,ioexception,ex,throw,new,message,conversion,exception,could,not,marshal,object,ex
MarshallingMessageConverter -> protected BytesMessage marshalToBytesMessage(Object object, Session session, Marshaller marshaller) 			throws JMSException, IOException, XmlMappingException;1328020251;Marshal the given object to a {@link BytesMessage}._@param object the object to be marshalled_@param session current JMS session_@param marshaller the marshaller to use_@return the resulting message_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Session#createBytesMessage_@see Marshaller#marshal(Object, Result);protected BytesMessage marshalToBytesMessage(Object object, Session session, Marshaller marshaller)_			throws JMSException, IOException, XmlMappingException {__		ByteArrayOutputStream bos = new ByteArrayOutputStream()__		StreamResult streamResult = new StreamResult(bos)__		marshaller.marshal(object, streamResult)__		BytesMessage message = session.createBytesMessage()__		message.writeBytes(bos.toByteArray())__		return message__	};marshal,the,given,object,to,a,link,bytes,message,param,object,the,object,to,be,marshalled,param,session,current,jms,session,param,marshaller,the,marshaller,to,use,return,the,resulting,message,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,session,create,bytes,message,see,marshaller,marshal,object,result;protected,bytes,message,marshal,to,bytes,message,object,object,session,session,marshaller,marshaller,throws,jmsexception,ioexception,xml,mapping,exception,byte,array,output,stream,bos,new,byte,array,output,stream,stream,result,stream,result,new,stream,result,bos,marshaller,marshal,object,stream,result,bytes,message,message,session,create,bytes,message,message,write,bytes,bos,to,byte,array,return,message
MarshallingMessageConverter -> protected BytesMessage marshalToBytesMessage(Object object, Session session, Marshaller marshaller) 			throws JMSException, IOException, XmlMappingException;1356735495;Marshal the given object to a {@link BytesMessage}._@param object the object to be marshalled_@param session current JMS session_@param marshaller the marshaller to use_@return the resulting message_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Session#createBytesMessage_@see Marshaller#marshal(Object, Result);protected BytesMessage marshalToBytesMessage(Object object, Session session, Marshaller marshaller)_			throws JMSException, IOException, XmlMappingException {__		ByteArrayOutputStream bos = new ByteArrayOutputStream()__		StreamResult streamResult = new StreamResult(bos)__		marshaller.marshal(object, streamResult)__		BytesMessage message = session.createBytesMessage()__		message.writeBytes(bos.toByteArray())__		return message__	};marshal,the,given,object,to,a,link,bytes,message,param,object,the,object,to,be,marshalled,param,session,current,jms,session,param,marshaller,the,marshaller,to,use,return,the,resulting,message,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,session,create,bytes,message,see,marshaller,marshal,object,result;protected,bytes,message,marshal,to,bytes,message,object,object,session,session,marshaller,marshaller,throws,jmsexception,ioexception,xml,mapping,exception,byte,array,output,stream,bos,new,byte,array,output,stream,stream,result,stream,result,new,stream,result,bos,marshaller,marshal,object,stream,result,bytes,message,message,session,create,bytes,message,message,write,bytes,bos,to,byte,array,return,message
MarshallingMessageConverter -> protected BytesMessage marshalToBytesMessage(Object object, Session session, Marshaller marshaller) 			throws JMSException, IOException, XmlMappingException;1357119239;Marshal the given object to a {@link BytesMessage}._@param object the object to be marshalled_@param session current JMS session_@param marshaller the marshaller to use_@return the resulting message_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Session#createBytesMessage_@see Marshaller#marshal(Object, Result);protected BytesMessage marshalToBytesMessage(Object object, Session session, Marshaller marshaller)_			throws JMSException, IOException, XmlMappingException {__		ByteArrayOutputStream bos = new ByteArrayOutputStream()__		StreamResult streamResult = new StreamResult(bos)__		marshaller.marshal(object, streamResult)__		BytesMessage message = session.createBytesMessage()__		message.writeBytes(bos.toByteArray())__		return message__	};marshal,the,given,object,to,a,link,bytes,message,param,object,the,object,to,be,marshalled,param,session,current,jms,session,param,marshaller,the,marshaller,to,use,return,the,resulting,message,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,session,create,bytes,message,see,marshaller,marshal,object,result;protected,bytes,message,marshal,to,bytes,message,object,object,session,session,marshaller,marshaller,throws,jmsexception,ioexception,xml,mapping,exception,byte,array,output,stream,bos,new,byte,array,output,stream,stream,result,stream,result,new,stream,result,bos,marshaller,marshal,object,stream,result,bytes,message,message,session,create,bytes,message,message,write,bytes,bos,to,byte,array,return,message
MarshallingMessageConverter -> protected BytesMessage marshalToBytesMessage(Object object, Session session, Marshaller marshaller) 			throws JMSException, IOException, XmlMappingException;1368482696;Marshal the given object to a {@link BytesMessage}._@param object the object to be marshalled_@param session current JMS session_@param marshaller the marshaller to use_@return the resulting message_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Session#createBytesMessage_@see Marshaller#marshal(Object, Result);protected BytesMessage marshalToBytesMessage(Object object, Session session, Marshaller marshaller)_			throws JMSException, IOException, XmlMappingException {__		ByteArrayOutputStream bos = new ByteArrayOutputStream()__		StreamResult streamResult = new StreamResult(bos)__		marshaller.marshal(object, streamResult)__		BytesMessage message = session.createBytesMessage()__		message.writeBytes(bos.toByteArray())__		return message__	};marshal,the,given,object,to,a,link,bytes,message,param,object,the,object,to,be,marshalled,param,session,current,jms,session,param,marshaller,the,marshaller,to,use,return,the,resulting,message,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,session,create,bytes,message,see,marshaller,marshal,object,result;protected,bytes,message,marshal,to,bytes,message,object,object,session,session,marshaller,marshaller,throws,jmsexception,ioexception,xml,mapping,exception,byte,array,output,stream,bos,new,byte,array,output,stream,stream,result,stream,result,new,stream,result,bos,marshaller,marshal,object,stream,result,bytes,message,message,session,create,bytes,message,message,write,bytes,bos,to,byte,array,return,message
MarshallingMessageConverter -> protected BytesMessage marshalToBytesMessage(Object object, Session session, Marshaller marshaller) 			throws JMSException, IOException, XmlMappingException;1395698258;Marshal the given object to a {@link BytesMessage}._@param object the object to be marshalled_@param session current JMS session_@param marshaller the marshaller to use_@return the resulting message_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Session#createBytesMessage_@see Marshaller#marshal(Object, Result);protected BytesMessage marshalToBytesMessage(Object object, Session session, Marshaller marshaller)_			throws JMSException, IOException, XmlMappingException {__		ByteArrayOutputStream bos = new ByteArrayOutputStream(1024)__		StreamResult streamResult = new StreamResult(bos)__		marshaller.marshal(object, streamResult)__		BytesMessage message = session.createBytesMessage()__		message.writeBytes(bos.toByteArray())__		return message__	};marshal,the,given,object,to,a,link,bytes,message,param,object,the,object,to,be,marshalled,param,session,current,jms,session,param,marshaller,the,marshaller,to,use,return,the,resulting,message,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,session,create,bytes,message,see,marshaller,marshal,object,result;protected,bytes,message,marshal,to,bytes,message,object,object,session,session,marshaller,marshaller,throws,jmsexception,ioexception,xml,mapping,exception,byte,array,output,stream,bos,new,byte,array,output,stream,1024,stream,result,stream,result,new,stream,result,bos,marshaller,marshal,object,stream,result,bytes,message,message,session,create,bytes,message,message,write,bytes,bos,to,byte,array,return,message
MarshallingMessageConverter -> protected BytesMessage marshalToBytesMessage(Object object, Session session, Marshaller marshaller) 			throws JMSException, IOException, XmlMappingException;1500495740;Marshal the given object to a {@link BytesMessage}._@param object the object to be marshalled_@param session current JMS session_@param marshaller the marshaller to use_@return the resulting message_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Session#createBytesMessage_@see Marshaller#marshal(Object, Result);protected BytesMessage marshalToBytesMessage(Object object, Session session, Marshaller marshaller)_			throws JMSException, IOException, XmlMappingException {__		ByteArrayOutputStream bos = new ByteArrayOutputStream(1024)__		StreamResult streamResult = new StreamResult(bos)__		marshaller.marshal(object, streamResult)__		BytesMessage message = session.createBytesMessage()__		message.writeBytes(bos.toByteArray())__		return message__	};marshal,the,given,object,to,a,link,bytes,message,param,object,the,object,to,be,marshalled,param,session,current,jms,session,param,marshaller,the,marshaller,to,use,return,the,resulting,message,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,session,create,bytes,message,see,marshaller,marshal,object,result;protected,bytes,message,marshal,to,bytes,message,object,object,session,session,marshaller,marshaller,throws,jmsexception,ioexception,xml,mapping,exception,byte,array,output,stream,bos,new,byte,array,output,stream,1024,stream,result,stream,result,new,stream,result,bos,marshaller,marshal,object,stream,result,bytes,message,message,session,create,bytes,message,message,write,bytes,bos,to,byte,array,return,message
MarshallingMessageConverter -> public void setUnmarshaller(Unmarshaller unmarshaller);1328020251;Set the {@link Unmarshaller} to be used by this message converter.;public void setUnmarshaller(Unmarshaller unmarshaller) {_		this.unmarshaller = unmarshaller__	};set,the,link,unmarshaller,to,be,used,by,this,message,converter;public,void,set,unmarshaller,unmarshaller,unmarshaller,this,unmarshaller,unmarshaller
MarshallingMessageConverter -> public void setUnmarshaller(Unmarshaller unmarshaller);1356735495;Set the {@link Unmarshaller} to be used by this message converter.;public void setUnmarshaller(Unmarshaller unmarshaller) {_		this.unmarshaller = unmarshaller__	};set,the,link,unmarshaller,to,be,used,by,this,message,converter;public,void,set,unmarshaller,unmarshaller,unmarshaller,this,unmarshaller,unmarshaller
MarshallingMessageConverter -> public void setUnmarshaller(Unmarshaller unmarshaller);1357119239;Set the {@link Unmarshaller} to be used by this message converter.;public void setUnmarshaller(Unmarshaller unmarshaller) {_		this.unmarshaller = unmarshaller__	};set,the,link,unmarshaller,to,be,used,by,this,message,converter;public,void,set,unmarshaller,unmarshaller,unmarshaller,this,unmarshaller,unmarshaller
MarshallingMessageConverter -> public void setUnmarshaller(Unmarshaller unmarshaller);1368482696;Set the {@link Unmarshaller} to be used by this message converter.;public void setUnmarshaller(Unmarshaller unmarshaller) {_		this.unmarshaller = unmarshaller__	};set,the,link,unmarshaller,to,be,used,by,this,message,converter;public,void,set,unmarshaller,unmarshaller,unmarshaller,this,unmarshaller,unmarshaller
MarshallingMessageConverter -> public void setUnmarshaller(Unmarshaller unmarshaller);1395698258;Set the {@link Unmarshaller} to be used by this message converter.;public void setUnmarshaller(Unmarshaller unmarshaller) {_		this.unmarshaller = unmarshaller__	};set,the,link,unmarshaller,to,be,used,by,this,message,converter;public,void,set,unmarshaller,unmarshaller,unmarshaller,this,unmarshaller,unmarshaller
MarshallingMessageConverter -> public void setUnmarshaller(Unmarshaller unmarshaller);1500495740;Set the {@link Unmarshaller} to be used by this message converter.;public void setUnmarshaller(Unmarshaller unmarshaller) {_		Assert.notNull(unmarshaller, "Unmarshaller must not be null")__		this.unmarshaller = unmarshaller__	};set,the,link,unmarshaller,to,be,used,by,this,message,converter;public,void,set,unmarshaller,unmarshaller,unmarshaller,assert,not,null,unmarshaller,unmarshaller,must,not,be,null,this,unmarshaller,unmarshaller
MarshallingMessageConverter -> protected Object unmarshalFromBytesMessage(BytesMessage message, Unmarshaller unmarshaller) 			throws JMSException, IOException, XmlMappingException;1328020251;Unmarshal the given {@link BytesMessage} into an object._@param message the message_@param unmarshaller the unmarshaller to use_@return the unmarshalled object_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Unmarshaller#unmarshal(Source);protected Object unmarshalFromBytesMessage(BytesMessage message, Unmarshaller unmarshaller)_			throws JMSException, IOException, XmlMappingException {__		byte[] bytes = new byte[(int) message.getBodyLength()]__		message.readBytes(bytes)__		ByteArrayInputStream bis = new ByteArrayInputStream(bytes)__		StreamSource source = new StreamSource(bis)__		return unmarshaller.unmarshal(source)__	};unmarshal,the,given,link,bytes,message,into,an,object,param,message,the,message,param,unmarshaller,the,unmarshaller,to,use,return,the,unmarshalled,object,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,unmarshaller,unmarshal,source;protected,object,unmarshal,from,bytes,message,bytes,message,message,unmarshaller,unmarshaller,throws,jmsexception,ioexception,xml,mapping,exception,byte,bytes,new,byte,int,message,get,body,length,message,read,bytes,bytes,byte,array,input,stream,bis,new,byte,array,input,stream,bytes,stream,source,source,new,stream,source,bis,return,unmarshaller,unmarshal,source
MarshallingMessageConverter -> protected Object unmarshalFromBytesMessage(BytesMessage message, Unmarshaller unmarshaller) 			throws JMSException, IOException, XmlMappingException;1356735495;Unmarshal the given {@link BytesMessage} into an object._@param message the message_@param unmarshaller the unmarshaller to use_@return the unmarshalled object_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Unmarshaller#unmarshal(Source);protected Object unmarshalFromBytesMessage(BytesMessage message, Unmarshaller unmarshaller)_			throws JMSException, IOException, XmlMappingException {__		byte[] bytes = new byte[(int) message.getBodyLength()]__		message.readBytes(bytes)__		ByteArrayInputStream bis = new ByteArrayInputStream(bytes)__		StreamSource source = new StreamSource(bis)__		return unmarshaller.unmarshal(source)__	};unmarshal,the,given,link,bytes,message,into,an,object,param,message,the,message,param,unmarshaller,the,unmarshaller,to,use,return,the,unmarshalled,object,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,unmarshaller,unmarshal,source;protected,object,unmarshal,from,bytes,message,bytes,message,message,unmarshaller,unmarshaller,throws,jmsexception,ioexception,xml,mapping,exception,byte,bytes,new,byte,int,message,get,body,length,message,read,bytes,bytes,byte,array,input,stream,bis,new,byte,array,input,stream,bytes,stream,source,source,new,stream,source,bis,return,unmarshaller,unmarshal,source
MarshallingMessageConverter -> protected Object unmarshalFromBytesMessage(BytesMessage message, Unmarshaller unmarshaller) 			throws JMSException, IOException, XmlMappingException;1357119239;Unmarshal the given {@link BytesMessage} into an object._@param message the message_@param unmarshaller the unmarshaller to use_@return the unmarshalled object_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Unmarshaller#unmarshal(Source);protected Object unmarshalFromBytesMessage(BytesMessage message, Unmarshaller unmarshaller)_			throws JMSException, IOException, XmlMappingException {__		byte[] bytes = new byte[(int) message.getBodyLength()]__		message.readBytes(bytes)__		ByteArrayInputStream bis = new ByteArrayInputStream(bytes)__		StreamSource source = new StreamSource(bis)__		return unmarshaller.unmarshal(source)__	};unmarshal,the,given,link,bytes,message,into,an,object,param,message,the,message,param,unmarshaller,the,unmarshaller,to,use,return,the,unmarshalled,object,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,unmarshaller,unmarshal,source;protected,object,unmarshal,from,bytes,message,bytes,message,message,unmarshaller,unmarshaller,throws,jmsexception,ioexception,xml,mapping,exception,byte,bytes,new,byte,int,message,get,body,length,message,read,bytes,bytes,byte,array,input,stream,bis,new,byte,array,input,stream,bytes,stream,source,source,new,stream,source,bis,return,unmarshaller,unmarshal,source
MarshallingMessageConverter -> protected Object unmarshalFromBytesMessage(BytesMessage message, Unmarshaller unmarshaller) 			throws JMSException, IOException, XmlMappingException;1368482696;Unmarshal the given {@link BytesMessage} into an object._@param message the message_@param unmarshaller the unmarshaller to use_@return the unmarshalled object_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Unmarshaller#unmarshal(Source);protected Object unmarshalFromBytesMessage(BytesMessage message, Unmarshaller unmarshaller)_			throws JMSException, IOException, XmlMappingException {__		byte[] bytes = new byte[(int) message.getBodyLength()]__		message.readBytes(bytes)__		ByteArrayInputStream bis = new ByteArrayInputStream(bytes)__		StreamSource source = new StreamSource(bis)__		return unmarshaller.unmarshal(source)__	};unmarshal,the,given,link,bytes,message,into,an,object,param,message,the,message,param,unmarshaller,the,unmarshaller,to,use,return,the,unmarshalled,object,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,unmarshaller,unmarshal,source;protected,object,unmarshal,from,bytes,message,bytes,message,message,unmarshaller,unmarshaller,throws,jmsexception,ioexception,xml,mapping,exception,byte,bytes,new,byte,int,message,get,body,length,message,read,bytes,bytes,byte,array,input,stream,bis,new,byte,array,input,stream,bytes,stream,source,source,new,stream,source,bis,return,unmarshaller,unmarshal,source
MarshallingMessageConverter -> protected Object unmarshalFromBytesMessage(BytesMessage message, Unmarshaller unmarshaller) 			throws JMSException, IOException, XmlMappingException;1395698258;Unmarshal the given {@link BytesMessage} into an object._@param message the message_@param unmarshaller the unmarshaller to use_@return the unmarshalled object_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Unmarshaller#unmarshal(Source);protected Object unmarshalFromBytesMessage(BytesMessage message, Unmarshaller unmarshaller)_			throws JMSException, IOException, XmlMappingException {__		byte[] bytes = new byte[(int) message.getBodyLength()]__		message.readBytes(bytes)__		ByteArrayInputStream bis = new ByteArrayInputStream(bytes)__		StreamSource source = new StreamSource(bis)__		return unmarshaller.unmarshal(source)__	};unmarshal,the,given,link,bytes,message,into,an,object,param,message,the,message,param,unmarshaller,the,unmarshaller,to,use,return,the,unmarshalled,object,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,unmarshaller,unmarshal,source;protected,object,unmarshal,from,bytes,message,bytes,message,message,unmarshaller,unmarshaller,throws,jmsexception,ioexception,xml,mapping,exception,byte,bytes,new,byte,int,message,get,body,length,message,read,bytes,bytes,byte,array,input,stream,bis,new,byte,array,input,stream,bytes,stream,source,source,new,stream,source,bis,return,unmarshaller,unmarshal,source
MarshallingMessageConverter -> protected Object unmarshalFromBytesMessage(BytesMessage message, Unmarshaller unmarshaller) 			throws JMSException, IOException, XmlMappingException;1500495740;Unmarshal the given {@link BytesMessage} into an object._@param message the message_@param unmarshaller the unmarshaller to use_@return the unmarshalled object_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Unmarshaller#unmarshal(Source);protected Object unmarshalFromBytesMessage(BytesMessage message, Unmarshaller unmarshaller)_			throws JMSException, IOException, XmlMappingException {__		byte[] bytes = new byte[(int) message.getBodyLength()]__		message.readBytes(bytes)__		ByteArrayInputStream bis = new ByteArrayInputStream(bytes)__		StreamSource source = new StreamSource(bis)__		return unmarshaller.unmarshal(source)__	};unmarshal,the,given,link,bytes,message,into,an,object,param,message,the,message,param,unmarshaller,the,unmarshaller,to,use,return,the,unmarshalled,object,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,unmarshaller,unmarshal,source;protected,object,unmarshal,from,bytes,message,bytes,message,message,unmarshaller,unmarshaller,throws,jmsexception,ioexception,xml,mapping,exception,byte,bytes,new,byte,int,message,get,body,length,message,read,bytes,bytes,byte,array,input,stream,bis,new,byte,array,input,stream,bytes,stream,source,source,new,stream,source,bis,return,unmarshaller,unmarshal,source
MarshallingMessageConverter -> protected TextMessage marshalToTextMessage(Object object, Session session, Marshaller marshaller) 			throws JMSException, IOException, XmlMappingException;1328020251;Marshal the given object to a {@link TextMessage}._@param object the object to be marshalled_@param session current JMS session_@param marshaller the marshaller to use_@return the resulting message_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Session#createTextMessage_@see Marshaller#marshal(Object, Result);protected TextMessage marshalToTextMessage(Object object, Session session, Marshaller marshaller)_			throws JMSException, IOException, XmlMappingException {__		StringWriter writer = new StringWriter()__		Result result = new StreamResult(writer)__		marshaller.marshal(object, result)__		return session.createTextMessage(writer.toString())__	};marshal,the,given,object,to,a,link,text,message,param,object,the,object,to,be,marshalled,param,session,current,jms,session,param,marshaller,the,marshaller,to,use,return,the,resulting,message,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,session,create,text,message,see,marshaller,marshal,object,result;protected,text,message,marshal,to,text,message,object,object,session,session,marshaller,marshaller,throws,jmsexception,ioexception,xml,mapping,exception,string,writer,writer,new,string,writer,result,result,new,stream,result,writer,marshaller,marshal,object,result,return,session,create,text,message,writer,to,string
MarshallingMessageConverter -> protected TextMessage marshalToTextMessage(Object object, Session session, Marshaller marshaller) 			throws JMSException, IOException, XmlMappingException;1356735495;Marshal the given object to a {@link TextMessage}._@param object the object to be marshalled_@param session current JMS session_@param marshaller the marshaller to use_@return the resulting message_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Session#createTextMessage_@see Marshaller#marshal(Object, Result);protected TextMessage marshalToTextMessage(Object object, Session session, Marshaller marshaller)_			throws JMSException, IOException, XmlMappingException {__		StringWriter writer = new StringWriter()__		Result result = new StreamResult(writer)__		marshaller.marshal(object, result)__		return session.createTextMessage(writer.toString())__	};marshal,the,given,object,to,a,link,text,message,param,object,the,object,to,be,marshalled,param,session,current,jms,session,param,marshaller,the,marshaller,to,use,return,the,resulting,message,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,session,create,text,message,see,marshaller,marshal,object,result;protected,text,message,marshal,to,text,message,object,object,session,session,marshaller,marshaller,throws,jmsexception,ioexception,xml,mapping,exception,string,writer,writer,new,string,writer,result,result,new,stream,result,writer,marshaller,marshal,object,result,return,session,create,text,message,writer,to,string
MarshallingMessageConverter -> protected TextMessage marshalToTextMessage(Object object, Session session, Marshaller marshaller) 			throws JMSException, IOException, XmlMappingException;1357119239;Marshal the given object to a {@link TextMessage}._@param object the object to be marshalled_@param session current JMS session_@param marshaller the marshaller to use_@return the resulting message_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Session#createTextMessage_@see Marshaller#marshal(Object, Result);protected TextMessage marshalToTextMessage(Object object, Session session, Marshaller marshaller)_			throws JMSException, IOException, XmlMappingException {__		StringWriter writer = new StringWriter()__		Result result = new StreamResult(writer)__		marshaller.marshal(object, result)__		return session.createTextMessage(writer.toString())__	};marshal,the,given,object,to,a,link,text,message,param,object,the,object,to,be,marshalled,param,session,current,jms,session,param,marshaller,the,marshaller,to,use,return,the,resulting,message,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,session,create,text,message,see,marshaller,marshal,object,result;protected,text,message,marshal,to,text,message,object,object,session,session,marshaller,marshaller,throws,jmsexception,ioexception,xml,mapping,exception,string,writer,writer,new,string,writer,result,result,new,stream,result,writer,marshaller,marshal,object,result,return,session,create,text,message,writer,to,string
MarshallingMessageConverter -> protected TextMessage marshalToTextMessage(Object object, Session session, Marshaller marshaller) 			throws JMSException, IOException, XmlMappingException;1368482696;Marshal the given object to a {@link TextMessage}._@param object the object to be marshalled_@param session current JMS session_@param marshaller the marshaller to use_@return the resulting message_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Session#createTextMessage_@see Marshaller#marshal(Object, Result);protected TextMessage marshalToTextMessage(Object object, Session session, Marshaller marshaller)_			throws JMSException, IOException, XmlMappingException {__		StringWriter writer = new StringWriter()__		Result result = new StreamResult(writer)__		marshaller.marshal(object, result)__		return session.createTextMessage(writer.toString())__	};marshal,the,given,object,to,a,link,text,message,param,object,the,object,to,be,marshalled,param,session,current,jms,session,param,marshaller,the,marshaller,to,use,return,the,resulting,message,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,session,create,text,message,see,marshaller,marshal,object,result;protected,text,message,marshal,to,text,message,object,object,session,session,marshaller,marshaller,throws,jmsexception,ioexception,xml,mapping,exception,string,writer,writer,new,string,writer,result,result,new,stream,result,writer,marshaller,marshal,object,result,return,session,create,text,message,writer,to,string
MarshallingMessageConverter -> protected TextMessage marshalToTextMessage(Object object, Session session, Marshaller marshaller) 			throws JMSException, IOException, XmlMappingException;1395698258;Marshal the given object to a {@link TextMessage}._@param object the object to be marshalled_@param session current JMS session_@param marshaller the marshaller to use_@return the resulting message_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Session#createTextMessage_@see Marshaller#marshal(Object, Result);protected TextMessage marshalToTextMessage(Object object, Session session, Marshaller marshaller)_			throws JMSException, IOException, XmlMappingException {__		StringWriter writer = new StringWriter()__		Result result = new StreamResult(writer)__		marshaller.marshal(object, result)__		return session.createTextMessage(writer.toString())__	};marshal,the,given,object,to,a,link,text,message,param,object,the,object,to,be,marshalled,param,session,current,jms,session,param,marshaller,the,marshaller,to,use,return,the,resulting,message,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,session,create,text,message,see,marshaller,marshal,object,result;protected,text,message,marshal,to,text,message,object,object,session,session,marshaller,marshaller,throws,jmsexception,ioexception,xml,mapping,exception,string,writer,writer,new,string,writer,result,result,new,stream,result,writer,marshaller,marshal,object,result,return,session,create,text,message,writer,to,string
MarshallingMessageConverter -> protected TextMessage marshalToTextMessage(Object object, Session session, Marshaller marshaller) 			throws JMSException, IOException, XmlMappingException;1500495740;Marshal the given object to a {@link TextMessage}._@param object the object to be marshalled_@param session current JMS session_@param marshaller the marshaller to use_@return the resulting message_@throws JMSException if thrown by JMS methods_@throws IOException in case of I/O errors_@throws XmlMappingException in case of OXM mapping errors_@see Session#createTextMessage_@see Marshaller#marshal(Object, Result);protected TextMessage marshalToTextMessage(Object object, Session session, Marshaller marshaller)_			throws JMSException, IOException, XmlMappingException {__		StringWriter writer = new StringWriter()__		Result result = new StreamResult(writer)__		marshaller.marshal(object, result)__		return session.createTextMessage(writer.toString())__	};marshal,the,given,object,to,a,link,text,message,param,object,the,object,to,be,marshalled,param,session,current,jms,session,param,marshaller,the,marshaller,to,use,return,the,resulting,message,throws,jmsexception,if,thrown,by,jms,methods,throws,ioexception,in,case,of,i,o,errors,throws,xml,mapping,exception,in,case,of,oxm,mapping,errors,see,session,create,text,message,see,marshaller,marshal,object,result;protected,text,message,marshal,to,text,message,object,object,session,session,marshaller,marshaller,throws,jmsexception,ioexception,xml,mapping,exception,string,writer,writer,new,string,writer,result,result,new,stream,result,writer,marshaller,marshal,object,result,return,session,create,text,message,writer,to,string
MarshallingMessageConverter -> public MarshallingMessageConverter();1328020251;Construct a new <code>MarshallingMessageConverter</code> with no {@link Marshaller}_or {@link Unmarshaller} set. The marshaller must be set after construction by invoking_{@link #setMarshaller(Marshaller)} and {@link #setUnmarshaller(Unmarshaller)} .;public MarshallingMessageConverter() {_	};construct,a,new,code,marshalling,message,converter,code,with,no,link,marshaller,or,link,unmarshaller,set,the,marshaller,must,be,set,after,construction,by,invoking,link,set,marshaller,marshaller,and,link,set,unmarshaller,unmarshaller;public,marshalling,message,converter
MarshallingMessageConverter -> public MarshallingMessageConverter();1356735495;Construct a new {@code MarshallingMessageConverter} with no {@link Marshaller}_or {@link Unmarshaller} set. The marshaller must be set after construction by invoking_{@link #setMarshaller(Marshaller)} and {@link #setUnmarshaller(Unmarshaller)} .;public MarshallingMessageConverter() {_	};construct,a,new,code,marshalling,message,converter,with,no,link,marshaller,or,link,unmarshaller,set,the,marshaller,must,be,set,after,construction,by,invoking,link,set,marshaller,marshaller,and,link,set,unmarshaller,unmarshaller;public,marshalling,message,converter
MarshallingMessageConverter -> public MarshallingMessageConverter();1357119239;Construct a new {@code MarshallingMessageConverter} with no {@link Marshaller}_or {@link Unmarshaller} set. The marshaller must be set after construction by invoking_{@link #setMarshaller(Marshaller)} and {@link #setUnmarshaller(Unmarshaller)} .;public MarshallingMessageConverter() {_	};construct,a,new,code,marshalling,message,converter,with,no,link,marshaller,or,link,unmarshaller,set,the,marshaller,must,be,set,after,construction,by,invoking,link,set,marshaller,marshaller,and,link,set,unmarshaller,unmarshaller;public,marshalling,message,converter
MarshallingMessageConverter -> public MarshallingMessageConverter();1368482696;Construct a new {@code MarshallingMessageConverter} with no {@link Marshaller}_or {@link Unmarshaller} set. The marshaller must be set after construction by invoking_{@link #setMarshaller(Marshaller)} and {@link #setUnmarshaller(Unmarshaller)} .;public MarshallingMessageConverter() {_	};construct,a,new,code,marshalling,message,converter,with,no,link,marshaller,or,link,unmarshaller,set,the,marshaller,must,be,set,after,construction,by,invoking,link,set,marshaller,marshaller,and,link,set,unmarshaller,unmarshaller;public,marshalling,message,converter
MarshallingMessageConverter -> public MarshallingMessageConverter();1395698258;Construct a new {@code MarshallingMessageConverter} with no {@link Marshaller}_or {@link Unmarshaller} set. The marshaller must be set after construction by invoking_{@link #setMarshaller(Marshaller)} and {@link #setUnmarshaller(Unmarshaller)} .;public MarshallingMessageConverter() {_	};construct,a,new,code,marshalling,message,converter,with,no,link,marshaller,or,link,unmarshaller,set,the,marshaller,must,be,set,after,construction,by,invoking,link,set,marshaller,marshaller,and,link,set,unmarshaller,unmarshaller;public,marshalling,message,converter
MarshallingMessageConverter -> public MarshallingMessageConverter();1500495740;Construct a new {@code MarshallingMessageConverter} with no {@link Marshaller}_or {@link Unmarshaller} set. The marshaller must be set after construction by invoking_{@link #setMarshaller(Marshaller)} and {@link #setUnmarshaller(Unmarshaller)} .;public MarshallingMessageConverter() {_	};construct,a,new,code,marshalling,message,converter,with,no,link,marshaller,or,link,unmarshaller,set,the,marshaller,must,be,set,after,construction,by,invoking,link,set,marshaller,marshaller,and,link,set,unmarshaller,unmarshaller;public,marshalling,message,converter
MarshallingMessageConverter -> @Override 	public Object fromMessage(Message message) throws JMSException, MessageConversionException;1356735495;This implementation unmarshals the given {@link Message} into an object._@see #unmarshalFromTextMessage_@see #unmarshalFromBytesMessage;@Override_	public Object fromMessage(Message message) throws JMSException, MessageConversionException {_		try {_			if (message instanceof TextMessage) {_				TextMessage textMessage = (TextMessage) message__				return unmarshalFromTextMessage(textMessage, this.unmarshaller)__			}_			else if (message instanceof BytesMessage) {_				BytesMessage bytesMessage = (BytesMessage) message__				return unmarshalFromBytesMessage(bytesMessage, this.unmarshaller)__			}_			else {_				return unmarshalFromMessage(message, this.unmarshaller)__			}_		}_		catch (IOException ex) {_			throw new MessageConversionException("Could not access message content: " + message, ex)__		}_		catch (XmlMappingException ex) {_			throw new MessageConversionException("Could not unmarshal message: " + message, ex)__		}_	};this,implementation,unmarshals,the,given,link,message,into,an,object,see,unmarshal,from,text,message,see,unmarshal,from,bytes,message;override,public,object,from,message,message,message,throws,jmsexception,message,conversion,exception,try,if,message,instanceof,text,message,text,message,text,message,text,message,message,return,unmarshal,from,text,message,text,message,this,unmarshaller,else,if,message,instanceof,bytes,message,bytes,message,bytes,message,bytes,message,message,return,unmarshal,from,bytes,message,bytes,message,this,unmarshaller,else,return,unmarshal,from,message,message,this,unmarshaller,catch,ioexception,ex,throw,new,message,conversion,exception,could,not,access,message,content,message,ex,catch,xml,mapping,exception,ex,throw,new,message,conversion,exception,could,not,unmarshal,message,message,ex
MarshallingMessageConverter -> @Override 	public Object fromMessage(Message message) throws JMSException, MessageConversionException;1368482696;This implementation unmarshals the given {@link Message} into an object._@see #unmarshalFromTextMessage_@see #unmarshalFromBytesMessage;@Override_	public Object fromMessage(Message message) throws JMSException, MessageConversionException {_		try {_			if (message instanceof TextMessage) {_				TextMessage textMessage = (TextMessage) message__				return unmarshalFromTextMessage(textMessage, this.unmarshaller)__			}_			else if (message instanceof BytesMessage) {_				BytesMessage bytesMessage = (BytesMessage) message__				return unmarshalFromBytesMessage(bytesMessage, this.unmarshaller)__			}_			else {_				return unmarshalFromMessage(message, this.unmarshaller)__			}_		}_		catch (IOException ex) {_			throw new MessageConversionException("Could not access message content: " + message, ex)__		}_		catch (XmlMappingException ex) {_			throw new MessageConversionException("Could not unmarshal message: " + message, ex)__		}_	};this,implementation,unmarshals,the,given,link,message,into,an,object,see,unmarshal,from,text,message,see,unmarshal,from,bytes,message;override,public,object,from,message,message,message,throws,jmsexception,message,conversion,exception,try,if,message,instanceof,text,message,text,message,text,message,text,message,message,return,unmarshal,from,text,message,text,message,this,unmarshaller,else,if,message,instanceof,bytes,message,bytes,message,bytes,message,bytes,message,message,return,unmarshal,from,bytes,message,bytes,message,this,unmarshaller,else,return,unmarshal,from,message,message,this,unmarshaller,catch,ioexception,ex,throw,new,message,conversion,exception,could,not,access,message,content,message,ex,catch,xml,mapping,exception,ex,throw,new,message,conversion,exception,could,not,unmarshal,message,message,ex
MarshallingMessageConverter -> @Override 	public Object fromMessage(Message message) throws JMSException, MessageConversionException;1395698258;This implementation unmarshals the given {@link Message} into an object._@see #unmarshalFromTextMessage_@see #unmarshalFromBytesMessage;@Override_	public Object fromMessage(Message message) throws JMSException, MessageConversionException {_		try {_			if (message instanceof TextMessage) {_				TextMessage textMessage = (TextMessage) message__				return unmarshalFromTextMessage(textMessage, this.unmarshaller)__			}_			else if (message instanceof BytesMessage) {_				BytesMessage bytesMessage = (BytesMessage) message__				return unmarshalFromBytesMessage(bytesMessage, this.unmarshaller)__			}_			else {_				return unmarshalFromMessage(message, this.unmarshaller)__			}_		}_		catch (IOException ex) {_			throw new MessageConversionException("Could not access message content: " + message, ex)__		}_		catch (XmlMappingException ex) {_			throw new MessageConversionException("Could not unmarshal message: " + message, ex)__		}_	};this,implementation,unmarshals,the,given,link,message,into,an,object,see,unmarshal,from,text,message,see,unmarshal,from,bytes,message;override,public,object,from,message,message,message,throws,jmsexception,message,conversion,exception,try,if,message,instanceof,text,message,text,message,text,message,text,message,message,return,unmarshal,from,text,message,text,message,this,unmarshaller,else,if,message,instanceof,bytes,message,bytes,message,bytes,message,bytes,message,message,return,unmarshal,from,bytes,message,bytes,message,this,unmarshaller,else,return,unmarshal,from,message,message,this,unmarshaller,catch,ioexception,ex,throw,new,message,conversion,exception,could,not,access,message,content,message,ex,catch,xml,mapping,exception,ex,throw,new,message,conversion,exception,could,not,unmarshal,message,message,ex
MarshallingMessageConverter -> @Override 	public Object fromMessage(Message message) throws JMSException, MessageConversionException;1500495740;This implementation unmarshals the given {@link Message} into an object._@see #unmarshalFromTextMessage_@see #unmarshalFromBytesMessage;@Override_	public Object fromMessage(Message message) throws JMSException, MessageConversionException {_		Assert.state(this.unmarshaller != null, "No Unmarshaller set")__		try {_			if (message instanceof TextMessage) {_				TextMessage textMessage = (TextMessage) message__				return unmarshalFromTextMessage(textMessage, this.unmarshaller)__			}_			else if (message instanceof BytesMessage) {_				BytesMessage bytesMessage = (BytesMessage) message__				return unmarshalFromBytesMessage(bytesMessage, this.unmarshaller)__			}_			else {_				return unmarshalFromMessage(message, this.unmarshaller)__			}_		}_		catch (IOException ex) {_			throw new MessageConversionException("Could not access message content: " + message, ex)__		}_		catch (XmlMappingException ex) {_			throw new MessageConversionException("Could not unmarshal message: " + message, ex)__		}_	};this,implementation,unmarshals,the,given,link,message,into,an,object,see,unmarshal,from,text,message,see,unmarshal,from,bytes,message;override,public,object,from,message,message,message,throws,jmsexception,message,conversion,exception,assert,state,this,unmarshaller,null,no,unmarshaller,set,try,if,message,instanceof,text,message,text,message,text,message,text,message,message,return,unmarshal,from,text,message,text,message,this,unmarshaller,else,if,message,instanceof,bytes,message,bytes,message,bytes,message,bytes,message,message,return,unmarshal,from,bytes,message,bytes,message,this,unmarshaller,else,return,unmarshal,from,message,message,this,unmarshaller,catch,ioexception,ex,throw,new,message,conversion,exception,could,not,access,message,content,message,ex,catch,xml,mapping,exception,ex,throw,new,message,conversion,exception,could,not,unmarshal,message,message,ex
