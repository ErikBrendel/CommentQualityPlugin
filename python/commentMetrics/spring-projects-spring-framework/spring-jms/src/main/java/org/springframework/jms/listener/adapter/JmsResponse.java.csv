# id;timestamp;commentText;codeText;commentWords;codeWords
JmsResponse -> public static <T> JmsResponse<T> forTopic(T result, String topicName);1434461630;Create a {@link JmsResponse} targeting the topic with the specified name.;public static <T> JmsResponse<T> forTopic(T result, String topicName) {_		Assert.notNull(topicName, "Topic name must not be null")__		return new JmsResponse<T>(result, new DestinationNameHolder(topicName, true))__	};create,a,link,jms,response,targeting,the,topic,with,the,specified,name;public,static,t,jms,response,t,for,topic,t,result,string,topic,name,assert,not,null,topic,name,topic,name,must,not,be,null,return,new,jms,response,t,result,new,destination,name,holder,topic,name,true
JmsResponse -> public static <T> JmsResponse<T> forTopic(T result, String topicName);1437512314;Create a {@link JmsResponse} targeting the topic with the specified name.;public static <T> JmsResponse<T> forTopic(T result, String topicName) {_		Assert.notNull(topicName, "Topic name must not be null")__		return new JmsResponse<T>(result, new DestinationNameHolder(topicName, true))__	};create,a,link,jms,response,targeting,the,topic,with,the,specified,name;public,static,t,jms,response,t,for,topic,t,result,string,topic,name,assert,not,null,topic,name,topic,name,must,not,be,null,return,new,jms,response,t,result,new,destination,name,holder,topic,name,true
JmsResponse -> public static <T> JmsResponse<T> forTopic(T result, String topicName);1467730834;Create a {@link JmsResponse} targeting the topic with the specified name.;public static <T> JmsResponse<T> forTopic(T result, String topicName) {_		Assert.notNull(topicName, "Topic name must not be null")__		return new JmsResponse<>(result, new DestinationNameHolder(topicName, true))__	};create,a,link,jms,response,targeting,the,topic,with,the,specified,name;public,static,t,jms,response,t,for,topic,t,result,string,topic,name,assert,not,null,topic,name,topic,name,must,not,be,null,return,new,jms,response,result,new,destination,name,holder,topic,name,true
JmsResponse -> public static <T> JmsResponse<T> forTopic(T result, String topicName);1495868221;Create a {@link JmsResponse} targeting the topic with the specified name.;public static <T> JmsResponse<T> forTopic(T result, String topicName) {_		Assert.notNull(topicName, "Topic name must not be null")__		return new JmsResponse<>(result, new DestinationNameHolder(topicName, true))__	};create,a,link,jms,response,targeting,the,topic,with,the,specified,name;public,static,t,jms,response,t,for,topic,t,result,string,topic,name,assert,not,null,topic,name,topic,name,must,not,be,null,return,new,jms,response,result,new,destination,name,holder,topic,name,true
JmsResponse -> public static <T> JmsResponse<T> forTopic(T result, String topicName);1530174524;Create a {@link JmsResponse} targeting the topic with the specified name.;public static <T> JmsResponse<T> forTopic(T result, String topicName) {_		Assert.notNull(topicName, "Topic name must not be null")__		return new JmsResponse<>(result, new DestinationNameHolder(topicName, true))__	};create,a,link,jms,response,targeting,the,topic,with,the,specified,name;public,static,t,jms,response,t,for,topic,t,result,string,topic,name,assert,not,null,topic,name,topic,name,must,not,be,null,return,new,jms,response,result,new,destination,name,holder,topic,name,true
JmsResponse -> public static <T> JmsResponse<T> forDestination(T result, Destination destination);1434461630;Create a {@link JmsResponse} targeting the specified {@link Destination}.;public static <T> JmsResponse<T> forDestination(T result, Destination destination) {_		Assert.notNull(destination, "Destination must not be null")__		return new JmsResponse<T>(result, destination)__	};create,a,link,jms,response,targeting,the,specified,link,destination;public,static,t,jms,response,t,for,destination,t,result,destination,destination,assert,not,null,destination,destination,must,not,be,null,return,new,jms,response,t,result,destination
JmsResponse -> public static <T> JmsResponse<T> forDestination(T result, Destination destination);1437512314;Create a {@link JmsResponse} targeting the specified {@link Destination}.;public static <T> JmsResponse<T> forDestination(T result, Destination destination) {_		Assert.notNull(destination, "Destination must not be null")__		return new JmsResponse<T>(result, destination)__	};create,a,link,jms,response,targeting,the,specified,link,destination;public,static,t,jms,response,t,for,destination,t,result,destination,destination,assert,not,null,destination,destination,must,not,be,null,return,new,jms,response,t,result,destination
JmsResponse -> public static <T> JmsResponse<T> forDestination(T result, Destination destination);1467730834;Create a {@link JmsResponse} targeting the specified {@link Destination}.;public static <T> JmsResponse<T> forDestination(T result, Destination destination) {_		Assert.notNull(destination, "Destination must not be null")__		return new JmsResponse<>(result, destination)__	};create,a,link,jms,response,targeting,the,specified,link,destination;public,static,t,jms,response,t,for,destination,t,result,destination,destination,assert,not,null,destination,destination,must,not,be,null,return,new,jms,response,result,destination
JmsResponse -> public static <T> JmsResponse<T> forDestination(T result, Destination destination);1495868221;Create a {@link JmsResponse} targeting the specified {@link Destination}.;public static <T> JmsResponse<T> forDestination(T result, Destination destination) {_		Assert.notNull(destination, "Destination must not be null")__		return new JmsResponse<>(result, destination)__	};create,a,link,jms,response,targeting,the,specified,link,destination;public,static,t,jms,response,t,for,destination,t,result,destination,destination,assert,not,null,destination,destination,must,not,be,null,return,new,jms,response,result,destination
JmsResponse -> public static <T> JmsResponse<T> forDestination(T result, Destination destination);1530174524;Create a {@link JmsResponse} targeting the specified {@link Destination}.;public static <T> JmsResponse<T> forDestination(T result, Destination destination) {_		Assert.notNull(destination, "Destination must not be null")__		return new JmsResponse<>(result, destination)__	};create,a,link,jms,response,targeting,the,specified,link,destination;public,static,t,jms,response,t,for,destination,t,result,destination,destination,assert,not,null,destination,destination,must,not,be,null,return,new,jms,response,result,destination
JmsResponse -> @Nullable 	public Destination resolveDestination(DestinationResolver destinationResolver, Session session) 			throws JMSException;1495868221;Resolve the {@link Destination} to use for this instance. The {@link DestinationResolver}_and {@link Session} can be used to resolve a destination at runtime._@param destinationResolver the destination resolver to use if necessary_@param session the session to use, if necessary_@return the {@link Destination} to use_@throws JMSException if the DestinationResolver failed to resolve the destination;@Nullable_	public Destination resolveDestination(DestinationResolver destinationResolver, Session session)_			throws JMSException {__		if (this.destination instanceof Destination) {_			return (Destination) this.destination__		}_		if (this.destination instanceof DestinationNameHolder) {_			DestinationNameHolder nameHolder = (DestinationNameHolder) this.destination__			return destinationResolver.resolveDestinationName(session,_					nameHolder.destinationName, nameHolder.pubSubDomain)__		}_		return null__	};resolve,the,link,destination,to,use,for,this,instance,the,link,destination,resolver,and,link,session,can,be,used,to,resolve,a,destination,at,runtime,param,destination,resolver,the,destination,resolver,to,use,if,necessary,param,session,the,session,to,use,if,necessary,return,the,link,destination,to,use,throws,jmsexception,if,the,destination,resolver,failed,to,resolve,the,destination;nullable,public,destination,resolve,destination,destination,resolver,destination,resolver,session,session,throws,jmsexception,if,this,destination,instanceof,destination,return,destination,this,destination,if,this,destination,instanceof,destination,name,holder,destination,name,holder,name,holder,destination,name,holder,this,destination,return,destination,resolver,resolve,destination,name,session,name,holder,destination,name,name,holder,pub,sub,domain,return,null
JmsResponse -> @Nullable 	public Destination resolveDestination(DestinationResolver destinationResolver, Session session) 			throws JMSException;1530174524;Resolve the {@link Destination} to use for this instance. The {@link DestinationResolver}_and {@link Session} can be used to resolve a destination at runtime._@param destinationResolver the destination resolver to use if necessary_@param session the session to use, if necessary_@return the {@link Destination} to use_@throws JMSException if the DestinationResolver failed to resolve the destination;@Nullable_	public Destination resolveDestination(DestinationResolver destinationResolver, Session session)_			throws JMSException {__		if (this.destination instanceof Destination) {_			return (Destination) this.destination__		}_		if (this.destination instanceof DestinationNameHolder) {_			DestinationNameHolder nameHolder = (DestinationNameHolder) this.destination__			return destinationResolver.resolveDestinationName(session,_					nameHolder.destinationName, nameHolder.pubSubDomain)__		}_		return null__	};resolve,the,link,destination,to,use,for,this,instance,the,link,destination,resolver,and,link,session,can,be,used,to,resolve,a,destination,at,runtime,param,destination,resolver,the,destination,resolver,to,use,if,necessary,param,session,the,session,to,use,if,necessary,return,the,link,destination,to,use,throws,jmsexception,if,the,destination,resolver,failed,to,resolve,the,destination;nullable,public,destination,resolve,destination,destination,resolver,destination,resolver,session,session,throws,jmsexception,if,this,destination,instanceof,destination,return,destination,this,destination,if,this,destination,instanceof,destination,name,holder,destination,name,holder,name,holder,destination,name,holder,this,destination,return,destination,resolver,resolve,destination,name,session,name,holder,destination,name,name,holder,pub,sub,domain,return,null
JmsResponse -> protected JmsResponse(T response, Object destination);1434461630;Create a new instance_@param response the content of the result_@param destination the destination;protected JmsResponse(T response, Object destination) {_		Assert.notNull(response, "Result must not be null")__		this.response = response__		this.destination = destination__	};create,a,new,instance,param,response,the,content,of,the,result,param,destination,the,destination;protected,jms,response,t,response,object,destination,assert,not,null,response,result,must,not,be,null,this,response,response,this,destination,destination
JmsResponse -> protected JmsResponse(T response, Object destination);1437512314;Create a new instance_@param response the content of the result_@param destination the destination;protected JmsResponse(T response, Object destination) {_		Assert.notNull(response, "Result must not be null")__		this.response = response__		this.destination = destination__	};create,a,new,instance,param,response,the,content,of,the,result,param,destination,the,destination;protected,jms,response,t,response,object,destination,assert,not,null,response,result,must,not,be,null,this,response,response,this,destination,destination
JmsResponse -> protected JmsResponse(T response, Object destination);1467730834;Create a new instance_@param response the content of the result_@param destination the destination;protected JmsResponse(T response, Object destination) {_		Assert.notNull(response, "Result must not be null")__		this.response = response__		this.destination = destination__	};create,a,new,instance,param,response,the,content,of,the,result,param,destination,the,destination;protected,jms,response,t,response,object,destination,assert,not,null,response,result,must,not,be,null,this,response,response,this,destination,destination
JmsResponse -> protected JmsResponse(T response, Object destination);1495868221;Create a new instance_@param response the content of the result_@param destination the destination;protected JmsResponse(T response, Object destination) {_		Assert.notNull(response, "Result must not be null")__		this.response = response__		this.destination = destination__	};create,a,new,instance,param,response,the,content,of,the,result,param,destination,the,destination;protected,jms,response,t,response,object,destination,assert,not,null,response,result,must,not,be,null,this,response,response,this,destination,destination
JmsResponse -> protected JmsResponse(T response, Object destination);1530174524;Create a new {@link JmsResponse} instance._@param response the content of the result_@param destination the destination;protected JmsResponse(T response, Object destination) {_		Assert.notNull(response, "Result must not be null")__		this.response = response__		this.destination = destination__	};create,a,new,link,jms,response,instance,param,response,the,content,of,the,result,param,destination,the,destination;protected,jms,response,t,response,object,destination,assert,not,null,response,result,must,not,be,null,this,response,response,this,destination,destination
JmsResponse -> public Destination resolveDestination(DestinationResolver destinationResolver, Session session) 			throws JMSException;1434461630;Resolve the {@link Destination} to use for this instance. The {@link DestinationResolver}_and {@link Session} can be used to resolve a destination at runtime._@param destinationResolver the destination resolver to use if necessary_@param session the session to use, if necessary_@return the {@link Destination} to use_@throws JMSException if the DestinationResolver failed to resolve the destination;public Destination resolveDestination(DestinationResolver destinationResolver, Session session)_			throws JMSException {__		if (this.destination instanceof Destination) {_			return (Destination) this.destination__		}_		if (this.destination instanceof DestinationNameHolder) {_			DestinationNameHolder nameHolder = (DestinationNameHolder) this.destination__			return destinationResolver.resolveDestinationName(session,_					nameHolder.destinationName, nameHolder.pubSubDomain)__		}_		return null__	};resolve,the,link,destination,to,use,for,this,instance,the,link,destination,resolver,and,link,session,can,be,used,to,resolve,a,destination,at,runtime,param,destination,resolver,the,destination,resolver,to,use,if,necessary,param,session,the,session,to,use,if,necessary,return,the,link,destination,to,use,throws,jmsexception,if,the,destination,resolver,failed,to,resolve,the,destination;public,destination,resolve,destination,destination,resolver,destination,resolver,session,session,throws,jmsexception,if,this,destination,instanceof,destination,return,destination,this,destination,if,this,destination,instanceof,destination,name,holder,destination,name,holder,name,holder,destination,name,holder,this,destination,return,destination,resolver,resolve,destination,name,session,name,holder,destination,name,name,holder,pub,sub,domain,return,null
JmsResponse -> public Destination resolveDestination(DestinationResolver destinationResolver, Session session) 			throws JMSException;1437512314;Resolve the {@link Destination} to use for this instance. The {@link DestinationResolver}_and {@link Session} can be used to resolve a destination at runtime._@param destinationResolver the destination resolver to use if necessary_@param session the session to use, if necessary_@return the {@link Destination} to use_@throws JMSException if the DestinationResolver failed to resolve the destination;public Destination resolveDestination(DestinationResolver destinationResolver, Session session)_			throws JMSException {__		if (this.destination instanceof Destination) {_			return (Destination) this.destination__		}_		if (this.destination instanceof DestinationNameHolder) {_			DestinationNameHolder nameHolder = (DestinationNameHolder) this.destination__			return destinationResolver.resolveDestinationName(session,_					nameHolder.destinationName, nameHolder.pubSubDomain)__		}_		return null__	};resolve,the,link,destination,to,use,for,this,instance,the,link,destination,resolver,and,link,session,can,be,used,to,resolve,a,destination,at,runtime,param,destination,resolver,the,destination,resolver,to,use,if,necessary,param,session,the,session,to,use,if,necessary,return,the,link,destination,to,use,throws,jmsexception,if,the,destination,resolver,failed,to,resolve,the,destination;public,destination,resolve,destination,destination,resolver,destination,resolver,session,session,throws,jmsexception,if,this,destination,instanceof,destination,return,destination,this,destination,if,this,destination,instanceof,destination,name,holder,destination,name,holder,name,holder,destination,name,holder,this,destination,return,destination,resolver,resolve,destination,name,session,name,holder,destination,name,name,holder,pub,sub,domain,return,null
JmsResponse -> public Destination resolveDestination(DestinationResolver destinationResolver, Session session) 			throws JMSException;1467730834;Resolve the {@link Destination} to use for this instance. The {@link DestinationResolver}_and {@link Session} can be used to resolve a destination at runtime._@param destinationResolver the destination resolver to use if necessary_@param session the session to use, if necessary_@return the {@link Destination} to use_@throws JMSException if the DestinationResolver failed to resolve the destination;public Destination resolveDestination(DestinationResolver destinationResolver, Session session)_			throws JMSException {__		if (this.destination instanceof Destination) {_			return (Destination) this.destination__		}_		if (this.destination instanceof DestinationNameHolder) {_			DestinationNameHolder nameHolder = (DestinationNameHolder) this.destination__			return destinationResolver.resolveDestinationName(session,_					nameHolder.destinationName, nameHolder.pubSubDomain)__		}_		return null__	};resolve,the,link,destination,to,use,for,this,instance,the,link,destination,resolver,and,link,session,can,be,used,to,resolve,a,destination,at,runtime,param,destination,resolver,the,destination,resolver,to,use,if,necessary,param,session,the,session,to,use,if,necessary,return,the,link,destination,to,use,throws,jmsexception,if,the,destination,resolver,failed,to,resolve,the,destination;public,destination,resolve,destination,destination,resolver,destination,resolver,session,session,throws,jmsexception,if,this,destination,instanceof,destination,return,destination,this,destination,if,this,destination,instanceof,destination,name,holder,destination,name,holder,name,holder,destination,name,holder,this,destination,return,destination,resolver,resolve,destination,name,session,name,holder,destination,name,name,holder,pub,sub,domain,return,null
JmsResponse -> public T getResponse();1434461630;Return the content of the response.;public T getResponse() {_		return this.response__	};return,the,content,of,the,response;public,t,get,response,return,this,response
JmsResponse -> public T getResponse();1437512314;Return the content of the response.;public T getResponse() {_		return this.response__	};return,the,content,of,the,response;public,t,get,response,return,this,response
JmsResponse -> public T getResponse();1467730834;Return the content of the response.;public T getResponse() {_		return this.response__	};return,the,content,of,the,response;public,t,get,response,return,this,response
JmsResponse -> public T getResponse();1495868221;Return the content of the response.;public T getResponse() {_		return this.response__	};return,the,content,of,the,response;public,t,get,response,return,this,response
JmsResponse -> public T getResponse();1530174524;Return the content of the response.;public T getResponse() {_		return this.response__	};return,the,content,of,the,response;public,t,get,response,return,this,response
JmsResponse -> public static <T> JmsResponse<T> forQueue(T result, String queueName);1434461630;Create a {@link JmsResponse} targeting the queue with the specified name.;public static <T> JmsResponse<T> forQueue(T result, String queueName) {_		Assert.notNull(queueName, "Queue name must not be null")__		return new JmsResponse<T>(result, new DestinationNameHolder(queueName, false))__	};create,a,link,jms,response,targeting,the,queue,with,the,specified,name;public,static,t,jms,response,t,for,queue,t,result,string,queue,name,assert,not,null,queue,name,queue,name,must,not,be,null,return,new,jms,response,t,result,new,destination,name,holder,queue,name,false
JmsResponse -> public static <T> JmsResponse<T> forQueue(T result, String queueName);1437512314;Create a {@link JmsResponse} targeting the queue with the specified name.;public static <T> JmsResponse<T> forQueue(T result, String queueName) {_		Assert.notNull(queueName, "Queue name must not be null")__		return new JmsResponse<T>(result, new DestinationNameHolder(queueName, false))__	};create,a,link,jms,response,targeting,the,queue,with,the,specified,name;public,static,t,jms,response,t,for,queue,t,result,string,queue,name,assert,not,null,queue,name,queue,name,must,not,be,null,return,new,jms,response,t,result,new,destination,name,holder,queue,name,false
JmsResponse -> public static <T> JmsResponse<T> forQueue(T result, String queueName);1467730834;Create a {@link JmsResponse} targeting the queue with the specified name.;public static <T> JmsResponse<T> forQueue(T result, String queueName) {_		Assert.notNull(queueName, "Queue name must not be null")__		return new JmsResponse<>(result, new DestinationNameHolder(queueName, false))__	};create,a,link,jms,response,targeting,the,queue,with,the,specified,name;public,static,t,jms,response,t,for,queue,t,result,string,queue,name,assert,not,null,queue,name,queue,name,must,not,be,null,return,new,jms,response,result,new,destination,name,holder,queue,name,false
JmsResponse -> public static <T> JmsResponse<T> forQueue(T result, String queueName);1495868221;Create a {@link JmsResponse} targeting the queue with the specified name.;public static <T> JmsResponse<T> forQueue(T result, String queueName) {_		Assert.notNull(queueName, "Queue name must not be null")__		return new JmsResponse<>(result, new DestinationNameHolder(queueName, false))__	};create,a,link,jms,response,targeting,the,queue,with,the,specified,name;public,static,t,jms,response,t,for,queue,t,result,string,queue,name,assert,not,null,queue,name,queue,name,must,not,be,null,return,new,jms,response,result,new,destination,name,holder,queue,name,false
JmsResponse -> public static <T> JmsResponse<T> forQueue(T result, String queueName);1530174524;Create a {@link JmsResponse} targeting the queue with the specified name.;public static <T> JmsResponse<T> forQueue(T result, String queueName) {_		Assert.notNull(queueName, "Queue name must not be null")__		return new JmsResponse<>(result, new DestinationNameHolder(queueName, false))__	};create,a,link,jms,response,targeting,the,queue,with,the,specified,name;public,static,t,jms,response,t,for,queue,t,result,string,queue,name,assert,not,null,queue,name,queue,name,must,not,be,null,return,new,jms,response,result,new,destination,name,holder,queue,name,false
