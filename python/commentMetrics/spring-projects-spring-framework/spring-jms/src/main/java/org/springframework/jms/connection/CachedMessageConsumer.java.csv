commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getMessageSelector() throws JMSException {     return this.target.getMessageSelector(). }
false;public;0;5;;@Override @Nullable public Queue getQueue() throws JMSException {     return (this.target instanceof QueueReceiver ? ((QueueReceiver) this.target).getQueue() : null). }
false;public;0;5;;@Override @Nullable public Topic getTopic() throws JMSException {     return (this.target instanceof TopicSubscriber ? ((TopicSubscriber) this.target).getTopic() : null). }
false;public;0;4;;@Override public boolean getNoLocal() throws JMSException {     return (this.target instanceof TopicSubscriber && ((TopicSubscriber) this.target).getNoLocal()). }
false;public;0;4;;@Override public MessageListener getMessageListener() throws JMSException {     return this.target.getMessageListener(). }
false;public;1;4;;@Override public void setMessageListener(MessageListener messageListener) throws JMSException {     this.target.setMessageListener(messageListener). }
false;public;0;4;;@Override public Message receive() throws JMSException {     return this.target.receive(). }
false;public;1;4;;@Override public Message receive(long timeout) throws JMSException {     return this.target.receive(timeout). }
false;public;0;4;;@Override public Message receiveNoWait() throws JMSException {     return this.target.receiveNoWait(). }
false;public;0;4;;@Override public void close() throws JMSException { // It's a cached MessageConsumer... }
false;public;0;4;;@Override public String toString() {     return "Cached JMS MessageConsumer: " + this.target. }
