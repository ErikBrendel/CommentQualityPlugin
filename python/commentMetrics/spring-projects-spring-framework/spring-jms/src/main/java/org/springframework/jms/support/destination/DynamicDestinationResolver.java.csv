# id;timestamp;commentText;codeText;commentWords;codeWords
DynamicDestinationResolver -> @Override 	public Destination resolveDestinationName(Session session, String destinationName, boolean pubSubDomain) 			throws JMSException;1356735495;Resolve the specified destination name as a dynamic destination._@param session the current JMS Session_@param destinationName the name of the destination_@param pubSubDomain {@code true} if the domain is pub-sub, {@code false} if P2P_@return the JMS destination (either a topic or a queue)_@throws javax.jms.JMSException if resolution failed_@see #resolveTopic(javax.jms.Session, String)_@see #resolveQueue(javax.jms.Session, String);@Override_	public Destination resolveDestinationName(Session session, String destinationName, boolean pubSubDomain)_			throws JMSException {__		Assert.notNull(session, "Session must not be null")__		Assert.notNull(destinationName, "Destination name must not be null")__		if (pubSubDomain) {_			return resolveTopic(session, destinationName)__		}_		else {_			return resolveQueue(session, destinationName)__		}_	};resolve,the,specified,destination,name,as,a,dynamic,destination,param,session,the,current,jms,session,param,destination,name,the,name,of,the,destination,param,pub,sub,domain,code,true,if,the,domain,is,pub,sub,code,false,if,p2p,return,the,jms,destination,either,a,topic,or,a,queue,throws,javax,jms,jmsexception,if,resolution,failed,see,resolve,topic,javax,jms,session,string,see,resolve,queue,javax,jms,session,string;override,public,destination,resolve,destination,name,session,session,string,destination,name,boolean,pub,sub,domain,throws,jmsexception,assert,not,null,session,session,must,not,be,null,assert,not,null,destination,name,destination,name,must,not,be,null,if,pub,sub,domain,return,resolve,topic,session,destination,name,else,return,resolve,queue,session,destination,name
DynamicDestinationResolver -> @Override 	public Destination resolveDestinationName(Session session, String destinationName, boolean pubSubDomain) 			throws JMSException;1368482696;Resolve the specified destination name as a dynamic destination._@param session the current JMS Session_@param destinationName the name of the destination_@param pubSubDomain {@code true} if the domain is pub-sub, {@code false} if P2P_@return the JMS destination (either a topic or a queue)_@throws javax.jms.JMSException if resolution failed_@see #resolveTopic(javax.jms.Session, String)_@see #resolveQueue(javax.jms.Session, String);@Override_	public Destination resolveDestinationName(Session session, String destinationName, boolean pubSubDomain)_			throws JMSException {__		Assert.notNull(session, "Session must not be null")__		Assert.notNull(destinationName, "Destination name must not be null")__		if (pubSubDomain) {_			return resolveTopic(session, destinationName)__		}_		else {_			return resolveQueue(session, destinationName)__		}_	};resolve,the,specified,destination,name,as,a,dynamic,destination,param,session,the,current,jms,session,param,destination,name,the,name,of,the,destination,param,pub,sub,domain,code,true,if,the,domain,is,pub,sub,code,false,if,p2p,return,the,jms,destination,either,a,topic,or,a,queue,throws,javax,jms,jmsexception,if,resolution,failed,see,resolve,topic,javax,jms,session,string,see,resolve,queue,javax,jms,session,string;override,public,destination,resolve,destination,name,session,session,string,destination,name,boolean,pub,sub,domain,throws,jmsexception,assert,not,null,session,session,must,not,be,null,assert,not,null,destination,name,destination,name,must,not,be,null,if,pub,sub,domain,return,resolve,topic,session,destination,name,else,return,resolve,queue,session,destination,name
DynamicDestinationResolver -> @Override 	public Destination resolveDestinationName(Session session, String destinationName, boolean pubSubDomain) 			throws JMSException;1405696891;Resolve the specified destination name as a dynamic destination._@param session the current JMS Session_@param destinationName the name of the destination_@param pubSubDomain {@code true} if the domain is pub-sub, {@code false} if P2P_@return the JMS destination (either a topic or a queue)_@throws javax.jms.JMSException if resolution failed_@see #resolveTopic(javax.jms.Session, String)_@see #resolveQueue(javax.jms.Session, String);@Override_	public Destination resolveDestinationName(Session session, String destinationName, boolean pubSubDomain)_			throws JMSException {__		Assert.notNull(session, "Session must not be null")__		Assert.notNull(destinationName, "Destination name must not be null")__		if (pubSubDomain) {_			return resolveTopic(session, destinationName)__		}_		else {_			return resolveQueue(session, destinationName)__		}_	};resolve,the,specified,destination,name,as,a,dynamic,destination,param,session,the,current,jms,session,param,destination,name,the,name,of,the,destination,param,pub,sub,domain,code,true,if,the,domain,is,pub,sub,code,false,if,p2p,return,the,jms,destination,either,a,topic,or,a,queue,throws,javax,jms,jmsexception,if,resolution,failed,see,resolve,topic,javax,jms,session,string,see,resolve,queue,javax,jms,session,string;override,public,destination,resolve,destination,name,session,session,string,destination,name,boolean,pub,sub,domain,throws,jmsexception,assert,not,null,session,session,must,not,be,null,assert,not,null,destination,name,destination,name,must,not,be,null,if,pub,sub,domain,return,resolve,topic,session,destination,name,else,return,resolve,queue,session,destination,name
DynamicDestinationResolver -> public Destination resolveDestinationName(Session session, String destinationName, boolean pubSubDomain) 			throws JMSException;1328020251;Resolve the specified destination name as a dynamic destination._@param session the current JMS Session_@param destinationName the name of the destination_@param pubSubDomain <code>true</code> if the domain is pub-sub, <code>false</code> if P2P_@return the JMS destination (either a topic or a queue)_@throws javax.jms.JMSException if resolution failed_@see #resolveTopic(javax.jms.Session, String)_@see #resolveQueue(javax.jms.Session, String);public Destination resolveDestinationName(Session session, String destinationName, boolean pubSubDomain)_			throws JMSException {__		Assert.notNull(session, "Session must not be null")__		Assert.notNull(destinationName, "Destination name must not be null")__		if (pubSubDomain) {_			return resolveTopic(session, destinationName)__		}_		else {_			return resolveQueue(session, destinationName)__		}_	};resolve,the,specified,destination,name,as,a,dynamic,destination,param,session,the,current,jms,session,param,destination,name,the,name,of,the,destination,param,pub,sub,domain,code,true,code,if,the,domain,is,pub,sub,code,false,code,if,p2p,return,the,jms,destination,either,a,topic,or,a,queue,throws,javax,jms,jmsexception,if,resolution,failed,see,resolve,topic,javax,jms,session,string,see,resolve,queue,javax,jms,session,string;public,destination,resolve,destination,name,session,session,string,destination,name,boolean,pub,sub,domain,throws,jmsexception,assert,not,null,session,session,must,not,be,null,assert,not,null,destination,name,destination,name,must,not,be,null,if,pub,sub,domain,return,resolve,topic,session,destination,name,else,return,resolve,queue,session,destination,name
DynamicDestinationResolver -> public Destination resolveDestinationName(Session session, String destinationName, boolean pubSubDomain) 			throws JMSException;1357119239;Resolve the specified destination name as a dynamic destination._@param session the current JMS Session_@param destinationName the name of the destination_@param pubSubDomain {@code true} if the domain is pub-sub, {@code false} if P2P_@return the JMS destination (either a topic or a queue)_@throws javax.jms.JMSException if resolution failed_@see #resolveTopic(javax.jms.Session, String)_@see #resolveQueue(javax.jms.Session, String);public Destination resolveDestinationName(Session session, String destinationName, boolean pubSubDomain)_			throws JMSException {__		Assert.notNull(session, "Session must not be null")__		Assert.notNull(destinationName, "Destination name must not be null")__		if (pubSubDomain) {_			return resolveTopic(session, destinationName)__		}_		else {_			return resolveQueue(session, destinationName)__		}_	};resolve,the,specified,destination,name,as,a,dynamic,destination,param,session,the,current,jms,session,param,destination,name,the,name,of,the,destination,param,pub,sub,domain,code,true,if,the,domain,is,pub,sub,code,false,if,p2p,return,the,jms,destination,either,a,topic,or,a,queue,throws,javax,jms,jmsexception,if,resolution,failed,see,resolve,topic,javax,jms,session,string,see,resolve,queue,javax,jms,session,string;public,destination,resolve,destination,name,session,session,string,destination,name,boolean,pub,sub,domain,throws,jmsexception,assert,not,null,session,session,must,not,be,null,assert,not,null,destination,name,destination,name,must,not,be,null,if,pub,sub,domain,return,resolve,topic,session,destination,name,else,return,resolve,queue,session,destination,name
DynamicDestinationResolver -> protected Queue resolveQueue(Session session, String queueName) throws JMSException;1328020251;Resolve the given destination name to a {@link Queue}._@param session the current JMS Session_@param queueName the name of the desired {@link Queue}_@return the JMS {@link Queue}_@throws javax.jms.JMSException if resolution failed_@see Session#createQueue(String);protected Queue resolveQueue(Session session, String queueName) throws JMSException {_		if (session instanceof QueueSession) {_			_			return ((QueueSession) session).createQueue(queueName)__		}_		else {_			_			return session.createQueue(queueName)__		}_	};resolve,the,given,destination,name,to,a,link,queue,param,session,the,current,jms,session,param,queue,name,the,name,of,the,desired,link,queue,return,the,jms,link,queue,throws,javax,jms,jmsexception,if,resolution,failed,see,session,create,queue,string;protected,queue,resolve,queue,session,session,string,queue,name,throws,jmsexception,if,session,instanceof,queue,session,return,queue,session,session,create,queue,queue,name,else,return,session,create,queue,queue,name
DynamicDestinationResolver -> protected Queue resolveQueue(Session session, String queueName) throws JMSException;1356735495;Resolve the given destination name to a {@link Queue}._@param session the current JMS Session_@param queueName the name of the desired {@link Queue}_@return the JMS {@link Queue}_@throws javax.jms.JMSException if resolution failed_@see Session#createQueue(String);protected Queue resolveQueue(Session session, String queueName) throws JMSException {_		if (session instanceof QueueSession) {_			_			return ((QueueSession) session).createQueue(queueName)__		}_		else {_			_			return session.createQueue(queueName)__		}_	};resolve,the,given,destination,name,to,a,link,queue,param,session,the,current,jms,session,param,queue,name,the,name,of,the,desired,link,queue,return,the,jms,link,queue,throws,javax,jms,jmsexception,if,resolution,failed,see,session,create,queue,string;protected,queue,resolve,queue,session,session,string,queue,name,throws,jmsexception,if,session,instanceof,queue,session,return,queue,session,session,create,queue,queue,name,else,return,session,create,queue,queue,name
DynamicDestinationResolver -> protected Queue resolveQueue(Session session, String queueName) throws JMSException;1357119239;Resolve the given destination name to a {@link Queue}._@param session the current JMS Session_@param queueName the name of the desired {@link Queue}_@return the JMS {@link Queue}_@throws javax.jms.JMSException if resolution failed_@see Session#createQueue(String);protected Queue resolveQueue(Session session, String queueName) throws JMSException {_		if (session instanceof QueueSession) {_			_			return ((QueueSession) session).createQueue(queueName)__		}_		else {_			_			return session.createQueue(queueName)__		}_	};resolve,the,given,destination,name,to,a,link,queue,param,session,the,current,jms,session,param,queue,name,the,name,of,the,desired,link,queue,return,the,jms,link,queue,throws,javax,jms,jmsexception,if,resolution,failed,see,session,create,queue,string;protected,queue,resolve,queue,session,session,string,queue,name,throws,jmsexception,if,session,instanceof,queue,session,return,queue,session,session,create,queue,queue,name,else,return,session,create,queue,queue,name
DynamicDestinationResolver -> protected Queue resolveQueue(Session session, String queueName) throws JMSException;1368482696;Resolve the given destination name to a {@link Queue}._@param session the current JMS Session_@param queueName the name of the desired {@link Queue}_@return the JMS {@link Queue}_@throws javax.jms.JMSException if resolution failed_@see Session#createQueue(String);protected Queue resolveQueue(Session session, String queueName) throws JMSException {_		if (session instanceof QueueSession) {_			_			return ((QueueSession) session).createQueue(queueName)__		}_		else {_			_			return session.createQueue(queueName)__		}_	};resolve,the,given,destination,name,to,a,link,queue,param,session,the,current,jms,session,param,queue,name,the,name,of,the,desired,link,queue,return,the,jms,link,queue,throws,javax,jms,jmsexception,if,resolution,failed,see,session,create,queue,string;protected,queue,resolve,queue,session,session,string,queue,name,throws,jmsexception,if,session,instanceof,queue,session,return,queue,session,session,create,queue,queue,name,else,return,session,create,queue,queue,name
DynamicDestinationResolver -> protected Queue resolveQueue(Session session, String queueName) throws JMSException;1405696891;Resolve the given destination name to a {@link Queue}._@param session the current JMS Session_@param queueName the name of the desired {@link Queue}_@return the JMS {@link Queue}_@throws javax.jms.JMSException if resolution failed_@see Session#createQueue(String);protected Queue resolveQueue(Session session, String queueName) throws JMSException {_		return session.createQueue(queueName)__	};resolve,the,given,destination,name,to,a,link,queue,param,session,the,current,jms,session,param,queue,name,the,name,of,the,desired,link,queue,return,the,jms,link,queue,throws,javax,jms,jmsexception,if,resolution,failed,see,session,create,queue,string;protected,queue,resolve,queue,session,session,string,queue,name,throws,jmsexception,return,session,create,queue,queue,name
DynamicDestinationResolver -> protected Queue resolveQueue(Session session, String queueName) throws JMSException;1496242568;Resolve the given destination name to a {@link Queue}._@param session the current JMS Session_@param queueName the name of the desired {@link Queue}_@return the JMS {@link Queue}_@throws javax.jms.JMSException if resolution failed_@see Session#createQueue(String);protected Queue resolveQueue(Session session, String queueName) throws JMSException {_		return session.createQueue(queueName)__	};resolve,the,given,destination,name,to,a,link,queue,param,session,the,current,jms,session,param,queue,name,the,name,of,the,desired,link,queue,return,the,jms,link,queue,throws,javax,jms,jmsexception,if,resolution,failed,see,session,create,queue,string;protected,queue,resolve,queue,session,session,string,queue,name,throws,jmsexception,return,session,create,queue,queue,name
DynamicDestinationResolver -> protected Topic resolveTopic(Session session, String topicName) throws JMSException;1328020251;Resolve the given destination name to a {@link Topic}._@param session the current JMS Session_@param topicName the name of the desired {@link Topic}_@return the JMS {@link Topic}_@throws javax.jms.JMSException if resolution failed_@see Session#createTopic(String);protected Topic resolveTopic(Session session, String topicName) throws JMSException {_		if (session instanceof TopicSession) {_			_			return ((TopicSession) session).createTopic(topicName)__		}_		else {_			_			return session.createTopic(topicName)__		}_	};resolve,the,given,destination,name,to,a,link,topic,param,session,the,current,jms,session,param,topic,name,the,name,of,the,desired,link,topic,return,the,jms,link,topic,throws,javax,jms,jmsexception,if,resolution,failed,see,session,create,topic,string;protected,topic,resolve,topic,session,session,string,topic,name,throws,jmsexception,if,session,instanceof,topic,session,return,topic,session,session,create,topic,topic,name,else,return,session,create,topic,topic,name
DynamicDestinationResolver -> protected Topic resolveTopic(Session session, String topicName) throws JMSException;1356735495;Resolve the given destination name to a {@link Topic}._@param session the current JMS Session_@param topicName the name of the desired {@link Topic}_@return the JMS {@link Topic}_@throws javax.jms.JMSException if resolution failed_@see Session#createTopic(String);protected Topic resolveTopic(Session session, String topicName) throws JMSException {_		if (session instanceof TopicSession) {_			_			return ((TopicSession) session).createTopic(topicName)__		}_		else {_			_			return session.createTopic(topicName)__		}_	};resolve,the,given,destination,name,to,a,link,topic,param,session,the,current,jms,session,param,topic,name,the,name,of,the,desired,link,topic,return,the,jms,link,topic,throws,javax,jms,jmsexception,if,resolution,failed,see,session,create,topic,string;protected,topic,resolve,topic,session,session,string,topic,name,throws,jmsexception,if,session,instanceof,topic,session,return,topic,session,session,create,topic,topic,name,else,return,session,create,topic,topic,name
DynamicDestinationResolver -> protected Topic resolveTopic(Session session, String topicName) throws JMSException;1357119239;Resolve the given destination name to a {@link Topic}._@param session the current JMS Session_@param topicName the name of the desired {@link Topic}_@return the JMS {@link Topic}_@throws javax.jms.JMSException if resolution failed_@see Session#createTopic(String);protected Topic resolveTopic(Session session, String topicName) throws JMSException {_		if (session instanceof TopicSession) {_			_			return ((TopicSession) session).createTopic(topicName)__		}_		else {_			_			return session.createTopic(topicName)__		}_	};resolve,the,given,destination,name,to,a,link,topic,param,session,the,current,jms,session,param,topic,name,the,name,of,the,desired,link,topic,return,the,jms,link,topic,throws,javax,jms,jmsexception,if,resolution,failed,see,session,create,topic,string;protected,topic,resolve,topic,session,session,string,topic,name,throws,jmsexception,if,session,instanceof,topic,session,return,topic,session,session,create,topic,topic,name,else,return,session,create,topic,topic,name
DynamicDestinationResolver -> protected Topic resolveTopic(Session session, String topicName) throws JMSException;1368482696;Resolve the given destination name to a {@link Topic}._@param session the current JMS Session_@param topicName the name of the desired {@link Topic}_@return the JMS {@link Topic}_@throws javax.jms.JMSException if resolution failed_@see Session#createTopic(String);protected Topic resolveTopic(Session session, String topicName) throws JMSException {_		if (session instanceof TopicSession) {_			_			return ((TopicSession) session).createTopic(topicName)__		}_		else {_			_			return session.createTopic(topicName)__		}_	};resolve,the,given,destination,name,to,a,link,topic,param,session,the,current,jms,session,param,topic,name,the,name,of,the,desired,link,topic,return,the,jms,link,topic,throws,javax,jms,jmsexception,if,resolution,failed,see,session,create,topic,string;protected,topic,resolve,topic,session,session,string,topic,name,throws,jmsexception,if,session,instanceof,topic,session,return,topic,session,session,create,topic,topic,name,else,return,session,create,topic,topic,name
DynamicDestinationResolver -> protected Topic resolveTopic(Session session, String topicName) throws JMSException;1405696891;Resolve the given destination name to a {@link Topic}._@param session the current JMS Session_@param topicName the name of the desired {@link Topic}_@return the JMS {@link Topic}_@throws javax.jms.JMSException if resolution failed_@see Session#createTopic(String);protected Topic resolveTopic(Session session, String topicName) throws JMSException {_		return session.createTopic(topicName)__	};resolve,the,given,destination,name,to,a,link,topic,param,session,the,current,jms,session,param,topic,name,the,name,of,the,desired,link,topic,return,the,jms,link,topic,throws,javax,jms,jmsexception,if,resolution,failed,see,session,create,topic,string;protected,topic,resolve,topic,session,session,string,topic,name,throws,jmsexception,return,session,create,topic,topic,name
DynamicDestinationResolver -> protected Topic resolveTopic(Session session, String topicName) throws JMSException;1496242568;Resolve the given destination name to a {@link Topic}._@param session the current JMS Session_@param topicName the name of the desired {@link Topic}_@return the JMS {@link Topic}_@throws javax.jms.JMSException if resolution failed_@see Session#createTopic(String);protected Topic resolveTopic(Session session, String topicName) throws JMSException {_		return session.createTopic(topicName)__	};resolve,the,given,destination,name,to,a,link,topic,param,session,the,current,jms,session,param,topic,name,the,name,of,the,desired,link,topic,return,the,jms,link,topic,throws,javax,jms,jmsexception,if,resolution,failed,see,session,create,topic,string;protected,topic,resolve,topic,session,session,string,topic,name,throws,jmsexception,return,session,create,topic,topic,name
