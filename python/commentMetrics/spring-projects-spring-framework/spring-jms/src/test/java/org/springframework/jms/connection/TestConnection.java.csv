commented;modifiers;parameterAmount;loc;comment;code
false;public;2;4;;@Override public Session createSession(boolean b, int i) throws JMSException {     return null. }
false;public;1;4;;@Override public Session createSession(int sessionMode) throws JMSException {     return null. }
false;public;0;4;;@Override public Session createSession() throws JMSException {     return null. }
false;public;0;4;;@Override public String getClientID() throws JMSException {     return null. }
false;public;1;3;;@Override public void setClientID(String paramName) throws JMSException { }
false;public;0;4;;@Override public ConnectionMetaData getMetaData() throws JMSException {     return null. }
false;public;0;4;;@Override public ExceptionListener getExceptionListener() throws JMSException {     return exceptionListener. }
false;public;1;4;;@Override public void setExceptionListener(ExceptionListener exceptionListener) throws JMSException {     this.exceptionListener = exceptionListener. }
false;public;0;4;;@Override public void start() throws JMSException {     this.startCount++. }
false;public;0;3;;@Override public void stop() throws JMSException { }
false;public;0;4;;@Override public void close() throws JMSException {     this.closeCount++. }
false;public;4;4;;@Override public ConnectionConsumer createConnectionConsumer(Destination destination, String paramName, ServerSessionPool serverSessionPool, int i) throws JMSException {     return null. }
false;public;5;4;;@Override public ConnectionConsumer createDurableConnectionConsumer(Topic topic, String paramName, String paramName1, ServerSessionPool serverSessionPool, int i) throws JMSException {     return null. }
false;public;5;4;;@Override public ConnectionConsumer createSharedConnectionConsumer(Topic topic, String subscriptionName, String messageSelector, ServerSessionPool sessionPool, int maxMessages) throws JMSException {     return null. }
false;public;5;4;;@Override public ConnectionConsumer createSharedDurableConnectionConsumer(Topic topic, String subscriptionName, String messageSelector, ServerSessionPool sessionPool, int maxMessages) throws JMSException {     return null. }
false;public;0;3;;public int getStartCount() {     return startCount. }
false;public;0;3;;public int getCloseCount() {     return closeCount. }
