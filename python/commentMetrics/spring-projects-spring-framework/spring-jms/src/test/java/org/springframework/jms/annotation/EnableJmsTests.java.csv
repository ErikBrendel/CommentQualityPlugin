commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Override @Test public void sampleConfiguration() {     ConfigurableApplicationContext context = new AnnotationConfigApplicationContext(EnableJmsSampleConfig.class, SampleBean.class).     testSampleConfiguration(context). }
false;public;0;7;;@Override @Test public void fullConfiguration() {     ConfigurableApplicationContext context = new AnnotationConfigApplicationContext(EnableJmsFullConfig.class, FullBean.class).     testFullConfiguration(context). }
false;public;0;6;;@Override public void fullConfigurableConfiguration() {     ConfigurableApplicationContext context = new AnnotationConfigApplicationContext(EnableJmsFullConfigurableConfig.class, FullConfigurableBean.class).     testFullConfiguration(context). }
false;public;0;7;;@Override @Test public void customConfiguration() {     ConfigurableApplicationContext context = new AnnotationConfigApplicationContext(EnableJmsCustomConfig.class, CustomBean.class).     testCustomConfiguration(context). }
false;public;0;7;;@Override @Test public void explicitContainerFactory() {     ConfigurableApplicationContext context = new AnnotationConfigApplicationContext(EnableJmsCustomContainerFactoryConfig.class, DefaultBean.class).     testExplicitContainerFactoryConfiguration(context). }
false;public;0;7;;@Override @Test public void defaultContainerFactory() {     ConfigurableApplicationContext context = new AnnotationConfigApplicationContext(EnableJmsDefaultContainerFactoryConfig.class, DefaultBean.class).     testDefaultContainerFactoryConfiguration(context). }
false;public;0;10;;@Test public void containerAreStartedByDefault() {     ConfigurableApplicationContext context = new AnnotationConfigApplicationContext(EnableJmsDefaultContainerFactoryConfig.class, DefaultBean.class).     JmsListenerContainerTestFactory factory = context.getBean(JmsListenerContainerTestFactory.class).     MessageListenerTestContainer container = factory.getListenerContainers().get(0).     assertTrue(container.isAutoStartup()).     assertTrue(container.isStarted()). }
false;public;0;13;;@Test public void containerCanBeStarterViaTheRegistry() {     ConfigurableApplicationContext context = new AnnotationConfigApplicationContext(EnableJmsAutoStartupFalseConfig.class, DefaultBean.class).     JmsListenerContainerTestFactory factory = context.getBean(JmsListenerContainerTestFactory.class).     MessageListenerTestContainer container = factory.getListenerContainers().get(0).     assertFalse(container.isAutoStartup()).     assertFalse(container.isStarted()).     JmsListenerEndpointRegistry registry = context.getBean(JmsListenerEndpointRegistry.class).     registry.start().     assertTrue(container.isStarted()). }
false;public;0;10;;@Override @Test public void jmsHandlerMethodFactoryConfiguration() throws JMSException {     ConfigurableApplicationContext context = new AnnotationConfigApplicationContext(EnableJmsHandlerMethodFactoryConfig.class, ValidationBean.class).     thrown.expect(ListenerExecutionFailedException.class).     thrown.expectCause(Is.<MethodArgumentNotValidException>isA(MethodArgumentNotValidException.class)).     testJmsHandlerMethodFactoryConfiguration(context). }
false;public;0;7;;@Override @Test public void jmsListenerIsRepeatable() {     ConfigurableApplicationContext context = new AnnotationConfigApplicationContext(EnableJmsDefaultContainerFactoryConfig.class, JmsListenerRepeatableBean.class).     testJmsListenerRepeatable(context). }
false;public;0;7;;@Override @Test public void jmsListeners() {     ConfigurableApplicationContext context = new AnnotationConfigApplicationContext(EnableJmsDefaultContainerFactoryConfig.class, JmsListenersBean.class).     testJmsListenerRepeatable(context). }
false;public;0;21;;@Test public void composedJmsListeners() {     try (ConfigurableApplicationContext context = new AnnotationConfigApplicationContext(EnableJmsDefaultContainerFactoryConfig.class, ComposedJmsListenersBean.class)) {         JmsListenerContainerTestFactory simpleFactory = context.getBean("jmsListenerContainerFactory", JmsListenerContainerTestFactory.class).         assertEquals(2, simpleFactory.getListenerContainers().size()).         MethodJmsListenerEndpoint first = (MethodJmsListenerEndpoint) simpleFactory.getListenerContainer("first").getEndpoint().         assertEquals("first", first.getId()).         assertEquals("orderQueue", first.getDestination()).         assertNull(first.getConcurrency()).         MethodJmsListenerEndpoint second = (MethodJmsListenerEndpoint) simpleFactory.getListenerContainer("second").getEndpoint().         assertEquals("second", second.getId()).         assertEquals("billingQueue", second.getDestination()).         assertEquals("2-10", second.getConcurrency()).     } }
false;public;0;7;;@Test @SuppressWarnings("resource") public void unknownFactory() {     thrown.expect(BeanCreationException.class).     // not found     thrown.expectMessage("customFactory").     new AnnotationConfigApplicationContext(EnableJmsSampleConfig.class, CustomBean.class). }
false;public;0;15;;@Test public void lazyComponent() {     ConfigurableApplicationContext context = new AnnotationConfigApplicationContext(EnableJmsDefaultContainerFactoryConfig.class, LazyBean.class).     JmsListenerContainerTestFactory defaultFactory = context.getBean("jmsListenerContainerFactory", JmsListenerContainerTestFactory.class).     assertEquals(0, defaultFactory.getListenerContainers().size()).     // trigger lazy resolution     context.getBean(LazyBean.class).     assertEquals(1, defaultFactory.getListenerContainers().size()).     MessageListenerTestContainer container = defaultFactory.getListenerContainers().get(0).     assertTrue("Should have been started " + container, container.isStarted()).     // close and stop the listeners     context.close().     assertTrue("Should have been stopped " + container, container.isStopped()). }
false;public;0;4;;@Bean public JmsListenerContainerTestFactory jmsListenerContainerFactory() {     return new JmsListenerContainerTestFactory(). }
false;public;0;4;;@Bean public JmsListenerContainerTestFactory simpleFactory() {     return new JmsListenerContainerTestFactory(). }
false;public;0;4;;@Bean public JmsListenerContainerTestFactory simpleFactory() {     return new JmsListenerContainerTestFactory(). }
false;public;0;4;;@Bean public JmsListenerContainerTestFactory simpleFactory() {     return new JmsListenerContainerTestFactory(). }
false;public;0;4;;@Bean public PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer() {     return new PropertySourcesPlaceholderConfigurer(). }
false;public;1;11;;@Override public void configureJmsListeners(JmsListenerEndpointRegistrar registrar) {     registrar.setEndpointRegistry(customRegistry()).     // Also register a custom endpoint     SimpleJmsListenerEndpoint endpoint = new SimpleJmsListenerEndpoint().     endpoint.setId("myCustomEndpointId").     endpoint.setDestination("myQueue").     endpoint.setMessageListener(simpleMessageListener()).     registrar.registerEndpoint(endpoint). }
false;public;0;4;;@Bean public JmsListenerContainerTestFactory jmsListenerContainerFactory() {     return new JmsListenerContainerTestFactory(). }
false;public;0;4;;@Bean public JmsListenerEndpointRegistry customRegistry() {     return new JmsListenerEndpointRegistry(). }
false;public;0;4;;@Bean public JmsListenerContainerTestFactory customFactory() {     return new JmsListenerContainerTestFactory(). }
false;public;0;4;;@Bean public MessageListener simpleMessageListener() {     return new MessageListenerAdapter(). }
false;public;1;4;;@Override public void configureJmsListeners(JmsListenerEndpointRegistrar registrar) {     registrar.setContainerFactory(simpleFactory()). }
false;public;0;4;;@Bean public JmsListenerContainerTestFactory simpleFactory() {     return new JmsListenerContainerTestFactory(). }
false;public;0;4;;@Bean public JmsListenerContainerTestFactory jmsListenerContainerFactory() {     return new JmsListenerContainerTestFactory(). }
false;public;1;4;;@Override public void configureJmsListeners(JmsListenerEndpointRegistrar registrar) {     registrar.setMessageHandlerMethodFactory(customMessageHandlerMethodFactory()). }
false;public;0;6;;@Bean public MessageHandlerMethodFactory customMessageHandlerMethodFactory() {     DefaultMessageHandlerMethodFactory factory = new DefaultMessageHandlerMethodFactory().     factory.setValidator(new TestValidator()).     return factory. }
false;public;0;4;;@Bean public JmsListenerContainerTestFactory defaultFactory() {     return new JmsListenerContainerTestFactory(). }
false;public;1;4;;@Override public void configureJmsListeners(JmsListenerEndpointRegistrar registrar) {     registrar.setContainerFactory(simpleFactory()). }
false;public;0;6;;@Bean public JmsListenerContainerTestFactory simpleFactory() {     JmsListenerContainerTestFactory factory = new JmsListenerContainerTestFactory().     factory.setAutoStartup(false).     return factory. }
false;public;1;3;;@JmsListener(destination = "myQueue") public void handle(String msg) { }
false;public;1;4;;@OrderQueueListener(id = "first") @BillingQueueListener(id = "second", concurrency = "2-10") public void repeatableHandle(String msg) { }
