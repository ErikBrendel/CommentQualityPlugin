# id;timestamp;commentText;codeText;commentWords;codeWords
JmsTemplateTests -> public void testSendDestinationWithQOS() throws Exception;1328020251;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator) using QOS parameters.;public void testSendDestinationWithQOS() throws Exception {_		doTestSendDestination(true, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator,using,qos,parameters;public,void,test,send,destination,with,qos,throws,exception,do,test,send,destination,true,false,false,true
JmsTemplateTests -> public void testSendDestinationWithQOS() throws Exception;1356735495;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator) using QOS parameters.;public void testSendDestinationWithQOS() throws Exception {_		doTestSendDestination(true, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator,using,qos,parameters;public,void,test,send,destination,with,qos,throws,exception,do,test,send,destination,true,false,false,true
JmsTemplateTests -> @Test 	public void testSendDefaultDestination() throws Exception;1362408075;Test sending to the default destination.;@Test_	public void testSendDefaultDestination() throws Exception {_		doTestSendDestination(true, true, true, true)__	};test,sending,to,the,default,destination;test,public,void,test,send,default,destination,throws,exception,do,test,send,destination,true,true,true,true
JmsTemplateTests -> @Test 	public void testSendDefaultDestination() throws Exception;1363208506;Test sending to the default destination.;@Test_	public void testSendDefaultDestination() throws Exception {_		doTestSendDestination(true, true, true, true)__	};test,sending,to,the,default,destination;test,public,void,test,send,default,destination,throws,exception,do,test,send,destination,true,true,true,true
JmsTemplateTests -> @Test 	public void testSendDefaultDestination() throws Exception;1398144713;Test sending to the default destination.;@Test_	public void testSendDefaultDestination() throws Exception {_		doTestSendDestination(true, true, true, true)__	};test,sending,to,the,default,destination;test,public,void,test,send,default,destination,throws,exception,do,test,send,destination,true,true,true,true
JmsTemplateTests -> @Test 	public void testSendDefaultDestination() throws Exception;1406555570;Test sending to the default destination.;@Test_	public void testSendDefaultDestination() throws Exception {_		doTestSendDestination(true, true, true, true)__	};test,sending,to,the,default,destination;test,public,void,test,send,default,destination,throws,exception,do,test,send,destination,true,true,true,true
JmsTemplateTests -> @Test 	public void testSendDefaultDestination() throws Exception;1413848647;Test sending to the default destination.;@Test_	public void testSendDefaultDestination() throws Exception {_		doTestSendDestination(true, true, true, true)__	};test,sending,to,the,default,destination;test,public,void,test,send,default,destination,throws,exception,do,test,send,destination,true,true,true,true
JmsTemplateTests -> @Test 	public void testSendDefaultDestination() throws Exception;1414619099;Test sending to the default destination.;@Test_	public void testSendDefaultDestination() throws Exception {_		doTestSendDestination(true, true, true, true)__	};test,sending,to,the,default,destination;test,public,void,test,send,default,destination,throws,exception,do,test,send,destination,true,true,true,true
JmsTemplateTests -> @Test 	public void testSendDefaultDestination() throws Exception;1492515173;Test sending to the default destination.;@Test_	public void testSendDefaultDestination() throws Exception {_		doTestSendDestination(true, true, true, true)__	};test,sending,to,the,default,destination;test,public,void,test,send,default,destination,throws,exception,do,test,send,destination,true,true,true,true
JmsTemplateTests -> @Test 	public void testSendDefaultDestination() throws Exception;1492515207;Test sending to the default destination.;@Test_	public void testSendDefaultDestination() throws Exception {_		doTestSendDestination(true, true, true, true)__	};test,sending,to,the,default,destination;test,public,void,test,send,default,destination,throws,exception,do,test,send,destination,true,true,true,true
JmsTemplateTests -> @Test 	public void testSendDefaultDestination() throws Exception;1496837955;Test sending to the default destination.;@Test_	public void testSendDefaultDestination() throws Exception {_		doTestSendDestination(true, true, true, true)__	};test,sending,to,the,default,destination;test,public,void,test,send,default,destination,throws,exception,do,test,send,destination,true,true,true,true
JmsTemplateTests -> @Test 	public void testSendDefaultDestination() throws Exception;1542613849;Test sending to the default destination.;@Test_	public void testSendDefaultDestination() throws Exception {_		doTestSendDestination(true, true, true, true)__	};test,sending,to,the,default,destination;test,public,void,test,send,default,destination,throws,exception,do,test,send,destination,true,true,true,true
JmsTemplateTests -> @Test 	public void testSessionCallback() throws Exception;1362408075;Test the method execute(SessionCallback action).;@Test_	public void testSessionCallback() throws Exception {_		JmsTemplate template = createTemplate()__		template.setConnectionFactory(connectionFactory)___		template.execute(new SessionCallback() {_			@Override_			public Object doInJms(Session session) throws JMSException {_				session.getTransacted()__				return null__			}_		})___		verify(session).close()__		verify(connection).close()__	};test,the,method,execute,session,callback,action;test,public,void,test,session,callback,throws,exception,jms,template,template,create,template,template,set,connection,factory,connection,factory,template,execute,new,session,callback,override,public,object,do,in,jms,session,session,throws,jmsexception,session,get,transacted,return,null,verify,session,close,verify,connection,close
JmsTemplateTests -> @Test 	public void testSessionCallback() throws Exception;1363208506;Test the method execute(SessionCallback action).;@Test_	public void testSessionCallback() throws Exception {_		JmsTemplate template = createTemplate()__		template.setConnectionFactory(connectionFactory)___		template.execute(new SessionCallback() {_			@Override_			public Object doInJms(Session session) throws JMSException {_				session.getTransacted()__				return null__			}_		})___		verify(session).close()__		verify(connection).close()__	};test,the,method,execute,session,callback,action;test,public,void,test,session,callback,throws,exception,jms,template,template,create,template,template,set,connection,factory,connection,factory,template,execute,new,session,callback,override,public,object,do,in,jms,session,session,throws,jmsexception,session,get,transacted,return,null,verify,session,close,verify,connection,close
JmsTemplateTests -> @Test 	public void testSessionCallback() throws Exception;1398144713;Test the method execute(SessionCallback action).;@Test_	public void testSessionCallback() throws Exception {_		JmsTemplate template = createTemplate()__		template.setConnectionFactory(connectionFactory)___		template.execute(new SessionCallback<Void>() {_			@Override_			public Void doInJms(Session session) throws JMSException {_				session.getTransacted()__				return null__			}_		})___		verify(session).close()__		verify(connection).close()__	};test,the,method,execute,session,callback,action;test,public,void,test,session,callback,throws,exception,jms,template,template,create,template,template,set,connection,factory,connection,factory,template,execute,new,session,callback,void,override,public,void,do,in,jms,session,session,throws,jmsexception,session,get,transacted,return,null,verify,session,close,verify,connection,close
JmsTemplateTests -> @Test 	public void testSessionCallback() throws Exception;1406555570;Test the method execute(SessionCallback action).;@Test_	public void testSessionCallback() throws Exception {_		JmsTemplate template = createTemplate()__		template.setConnectionFactory(connectionFactory)___		template.execute(new SessionCallback<Void>() {_			@Override_			public Void doInJms(Session session) throws JMSException {_				session.getTransacted()__				return null__			}_		})___		verify(session).close()__		verify(connection).close()__	};test,the,method,execute,session,callback,action;test,public,void,test,session,callback,throws,exception,jms,template,template,create,template,template,set,connection,factory,connection,factory,template,execute,new,session,callback,void,override,public,void,do,in,jms,session,session,throws,jmsexception,session,get,transacted,return,null,verify,session,close,verify,connection,close
JmsTemplateTests -> @Test 	public void testSessionCallback() throws Exception;1413848647;Test the method execute(SessionCallback action).;@Test_	public void testSessionCallback() throws Exception {_		JmsTemplate template = createTemplate()__		template.setConnectionFactory(connectionFactory)___		template.execute(new SessionCallback<Void>() {_			@Override_			public Void doInJms(Session session) throws JMSException {_				session.getTransacted()__				return null__			}_		})___		verify(session).close()__		verify(connection).close()__	};test,the,method,execute,session,callback,action;test,public,void,test,session,callback,throws,exception,jms,template,template,create,template,template,set,connection,factory,connection,factory,template,execute,new,session,callback,void,override,public,void,do,in,jms,session,session,throws,jmsexception,session,get,transacted,return,null,verify,session,close,verify,connection,close
JmsTemplateTests -> @Test 	public void testSessionCallback() throws Exception;1414619099;Test the method execute(SessionCallback action).;@Test_	public void testSessionCallback() throws Exception {_		JmsTemplate template = createTemplate()__		template.setConnectionFactory(connectionFactory)___		template.execute(new SessionCallback<Void>() {_			@Override_			public Void doInJms(Session session) throws JMSException {_				session.getTransacted()__				return null__			}_		})___		verify(session).close()__		verify(connection).close()__	};test,the,method,execute,session,callback,action;test,public,void,test,session,callback,throws,exception,jms,template,template,create,template,template,set,connection,factory,connection,factory,template,execute,new,session,callback,void,override,public,void,do,in,jms,session,session,throws,jmsexception,session,get,transacted,return,null,verify,session,close,verify,connection,close
JmsTemplateTests -> @Test 	public void testSessionCallback() throws Exception;1492515173;Test the method execute(SessionCallback action).;@Test_	public void testSessionCallback() throws Exception {_		JmsTemplate template = createTemplate()__		template.setConnectionFactory(connectionFactory)___		template.execute(new SessionCallback<Void>() {_			@Override_			public Void doInJms(Session session) throws JMSException {_				session.getTransacted()__				return null__			}_		})___		verify(session).close()__		verify(connection).close()__	};test,the,method,execute,session,callback,action;test,public,void,test,session,callback,throws,exception,jms,template,template,create,template,template,set,connection,factory,connection,factory,template,execute,new,session,callback,void,override,public,void,do,in,jms,session,session,throws,jmsexception,session,get,transacted,return,null,verify,session,close,verify,connection,close
JmsTemplateTests -> @Test 	public void testSessionCallback() throws Exception;1492515207;Test the method execute(SessionCallback action).;@Test_	public void testSessionCallback() throws Exception {_		JmsTemplate template = createTemplate()__		template.setConnectionFactory(this.connectionFactory)___		template.execute(new SessionCallback<Void>() {_			@Override_			public Void doInJms(Session session) throws JMSException {_				session.getTransacted()__				return null__			}_		})___		verify(this.session).close()__		verify(this.connection).close()__	};test,the,method,execute,session,callback,action;test,public,void,test,session,callback,throws,exception,jms,template,template,create,template,template,set,connection,factory,this,connection,factory,template,execute,new,session,callback,void,override,public,void,do,in,jms,session,session,throws,jmsexception,session,get,transacted,return,null,verify,this,session,close,verify,this,connection,close
JmsTemplateTests -> @Test 	public void testSessionCallback() throws Exception;1496837955;Test the method execute(SessionCallback action).;@Test_	public void testSessionCallback() throws Exception {_		JmsTemplate template = createTemplate()__		template.setConnectionFactory(this.connectionFactory)___		template.execute(new SessionCallback<Void>() {_			@Override_			public Void doInJms(Session session) throws JMSException {_				session.getTransacted()__				return null__			}_		})___		verify(this.session).close()__		verify(this.connection).close()__	};test,the,method,execute,session,callback,action;test,public,void,test,session,callback,throws,exception,jms,template,template,create,template,template,set,connection,factory,this,connection,factory,template,execute,new,session,callback,void,override,public,void,do,in,jms,session,session,throws,jmsexception,session,get,transacted,return,null,verify,this,session,close,verify,this,connection,close
JmsTemplateTests -> @Test 	public void testSessionCallback() throws Exception;1542613849;Test the method execute(SessionCallback action).;@Test_	public void testSessionCallback() throws Exception {_		JmsTemplate template = createTemplate()__		template.setConnectionFactory(this.connectionFactory)___		template.execute(new SessionCallback<Void>() {_			@Override_			public Void doInJms(Session session) throws JMSException {_				session.getTransacted()__				return null__			}_		})___		verify(this.session).close()__		verify(this.connection).close()__	};test,the,method,execute,session,callback,action;test,public,void,test,session,callback,throws,exception,jms,template,template,create,template,template,set,connection,factory,this,connection,factory,template,execute,new,session,callback,void,override,public,void,do,in,jms,session,session,throws,jmsexception,session,get,transacted,return,null,verify,this,session,close,verify,this,connection,close
JmsTemplateTests -> public void testSessionCallback() throws Exception;1328020251;Test the method execute(SessionCallback action).;public void testSessionCallback() throws Exception {_		JmsTemplate template = createTemplate()__		template.setConnectionFactory(mockConnectionFactory)___		mockSession.close()__		sessionControl.setVoidCallable(1)___		mockConnection.close()__		connectionControl.setVoidCallable(1)___		sessionControl.replay()__		connectionControl.replay()___		template.execute(new SessionCallback() {_			public Object doInJms(Session session) throws JMSException {_				boolean b = session.getTransacted()__				return null__			}_		})___		connectionFactoryControl.verify()__		connectionControl.verify()__		sessionControl.verify()__	};test,the,method,execute,session,callback,action;public,void,test,session,callback,throws,exception,jms,template,template,create,template,template,set,connection,factory,mock,connection,factory,mock,session,close,session,control,set,void,callable,1,mock,connection,close,connection,control,set,void,callable,1,session,control,replay,connection,control,replay,template,execute,new,session,callback,public,object,do,in,jms,session,session,throws,jmsexception,boolean,b,session,get,transacted,return,null,connection,factory,control,verify,connection,control,verify,session,control,verify
JmsTemplateTests -> public void testSessionCallback() throws Exception;1356735495;Test the method execute(SessionCallback action).;public void testSessionCallback() throws Exception {_		JmsTemplate template = createTemplate()__		template.setConnectionFactory(mockConnectionFactory)___		mockSession.close()__		sessionControl.setVoidCallable(1)___		mockConnection.close()__		connectionControl.setVoidCallable(1)___		sessionControl.replay()__		connectionControl.replay()___		template.execute(new SessionCallback() {_			@Override_			public Object doInJms(Session session) throws JMSException {_				boolean b = session.getTransacted()__				return null__			}_		})___		connectionFactoryControl.verify()__		connectionControl.verify()__		sessionControl.verify()__	};test,the,method,execute,session,callback,action;public,void,test,session,callback,throws,exception,jms,template,template,create,template,template,set,connection,factory,mock,connection,factory,mock,session,close,session,control,set,void,callable,1,mock,connection,close,connection,control,set,void,callable,1,session,control,replay,connection,control,replay,template,execute,new,session,callback,override,public,object,do,in,jms,session,session,throws,jmsexception,boolean,b,session,get,transacted,return,null,connection,factory,control,verify,connection,control,verify,session,control,verify
JmsTemplateTests -> public void testSendDefaultDestinationName() throws Exception;1328020251;Test sending to the default destination name.;public void testSendDefaultDestinationName() throws Exception {_		doTestSendDestination(false, true, true, true)__	};test,sending,to,the,default,destination,name;public,void,test,send,default,destination,name,throws,exception,do,test,send,destination,false,true,true,true
JmsTemplateTests -> public void testSendDefaultDestinationName() throws Exception;1356735495;Test sending to the default destination name.;public void testSendDefaultDestinationName() throws Exception {_		doTestSendDestination(false, true, true, true)__	};test,sending,to,the,default,destination,name;public,void,test,send,default,destination,name,throws,exception,do,test,send,destination,false,true,true,true
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationNameWithQOS() throws Exception;1362408075;Test sending to the default destination name using explicit QOS parameters.;@Test_	public void testSendDefaultDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, true, false, false)__	};test,sending,to,the,default,destination,name,using,explicit,qos,parameters;test,public,void,test,send,default,destination,name,with,qos,throws,exception,do,test,send,destination,false,true,false,false
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationNameWithQOS() throws Exception;1363208506;Test sending to the default destination name using explicit QOS parameters.;@Test_	public void testSendDefaultDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, true, false, false)__	};test,sending,to,the,default,destination,name,using,explicit,qos,parameters;test,public,void,test,send,default,destination,name,with,qos,throws,exception,do,test,send,destination,false,true,false,false
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationNameWithQOS() throws Exception;1398144713;Test sending to the default destination name using explicit QOS parameters.;@Test_	public void testSendDefaultDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, true, false, false)__	};test,sending,to,the,default,destination,name,using,explicit,qos,parameters;test,public,void,test,send,default,destination,name,with,qos,throws,exception,do,test,send,destination,false,true,false,false
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationNameWithQOS() throws Exception;1406555570;Test sending to the default destination name using explicit QOS parameters.;@Test_	public void testSendDefaultDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, true, false, false)__	};test,sending,to,the,default,destination,name,using,explicit,qos,parameters;test,public,void,test,send,default,destination,name,with,qos,throws,exception,do,test,send,destination,false,true,false,false
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationNameWithQOS() throws Exception;1413848647;Test sending to the default destination name using explicit QOS parameters.;@Test_	public void testSendDefaultDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, true, false, false)__	};test,sending,to,the,default,destination,name,using,explicit,qos,parameters;test,public,void,test,send,default,destination,name,with,qos,throws,exception,do,test,send,destination,false,true,false,false
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationNameWithQOS() throws Exception;1414619099;Test sending to the default destination name using explicit QOS parameters.;@Test_	public void testSendDefaultDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, true, false, false)__	};test,sending,to,the,default,destination,name,using,explicit,qos,parameters;test,public,void,test,send,default,destination,name,with,qos,throws,exception,do,test,send,destination,false,true,false,false
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationNameWithQOS() throws Exception;1492515173;Test sending to the default destination name using explicit QOS parameters.;@Test_	public void testSendDefaultDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, true, false, false)__	};test,sending,to,the,default,destination,name,using,explicit,qos,parameters;test,public,void,test,send,default,destination,name,with,qos,throws,exception,do,test,send,destination,false,true,false,false
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationNameWithQOS() throws Exception;1492515207;Test sending to the default destination name using explicit QOS parameters.;@Test_	public void testSendDefaultDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, true, false, false)__	};test,sending,to,the,default,destination,name,using,explicit,qos,parameters;test,public,void,test,send,default,destination,name,with,qos,throws,exception,do,test,send,destination,false,true,false,false
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationNameWithQOS() throws Exception;1496837955;Test sending to the default destination name using explicit QOS parameters.;@Test_	public void testSendDefaultDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, true, false, false)__	};test,sending,to,the,default,destination,name,using,explicit,qos,parameters;test,public,void,test,send,default,destination,name,with,qos,throws,exception,do,test,send,destination,false,true,false,false
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationNameWithQOS() throws Exception;1542613849;Test sending to the default destination name using explicit QOS parameters.;@Test_	public void testSendDefaultDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, true, false, false)__	};test,sending,to,the,default,destination,name,using,explicit,qos,parameters;test,public,void,test,send,default,destination,name,with,qos,throws,exception,do,test,send,destination,false,true,false,false
JmsTemplateTests -> public void testSendDefaultDestinationNameWithQOS() throws Exception;1328020251;Test sending to the default destination name using explicit QOS parameters.;public void testSendDefaultDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, true, false, false)__	};test,sending,to,the,default,destination,name,using,explicit,qos,parameters;public,void,test,send,default,destination,name,with,qos,throws,exception,do,test,send,destination,false,true,false,false
JmsTemplateTests -> public void testSendDefaultDestinationNameWithQOS() throws Exception;1356735495;Test sending to the default destination name using explicit QOS parameters.;public void testSendDefaultDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, true, false, false)__	};test,sending,to,the,default,destination,name,using,explicit,qos,parameters;public,void,test,send,default,destination,name,with,qos,throws,exception,do,test,send,destination,false,true,false,false
JmsTemplateTests -> public void testSendDefaultDestinationWithQOS() throws Exception;1328020251;Test sending to the default destination using explicit QOS parameters.;public void testSendDefaultDestinationWithQOS() throws Exception {_		doTestSendDestination(true, true, false, false)__	};test,sending,to,the,default,destination,using,explicit,qos,parameters;public,void,test,send,default,destination,with,qos,throws,exception,do,test,send,destination,true,true,false,false
JmsTemplateTests -> public void testSendDefaultDestinationWithQOS() throws Exception;1356735495;Test sending to the default destination using explicit QOS parameters.;public void testSendDefaultDestinationWithQOS() throws Exception {_		doTestSendDestination(true, true, false, false)__	};test,sending,to,the,default,destination,using,explicit,qos,parameters;public,void,test,send,default,destination,with,qos,throws,exception,do,test,send,destination,true,true,false,false
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationWithQOS() throws Exception;1362408075;Test sending to the default destination using explicit QOS parameters.;@Test_	public void testSendDefaultDestinationWithQOS() throws Exception {_		doTestSendDestination(true, true, false, false)__	};test,sending,to,the,default,destination,using,explicit,qos,parameters;test,public,void,test,send,default,destination,with,qos,throws,exception,do,test,send,destination,true,true,false,false
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationWithQOS() throws Exception;1363208506;Test sending to the default destination using explicit QOS parameters.;@Test_	public void testSendDefaultDestinationWithQOS() throws Exception {_		doTestSendDestination(true, true, false, false)__	};test,sending,to,the,default,destination,using,explicit,qos,parameters;test,public,void,test,send,default,destination,with,qos,throws,exception,do,test,send,destination,true,true,false,false
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationWithQOS() throws Exception;1398144713;Test sending to the default destination using explicit QOS parameters.;@Test_	public void testSendDefaultDestinationWithQOS() throws Exception {_		doTestSendDestination(true, true, false, false)__	};test,sending,to,the,default,destination,using,explicit,qos,parameters;test,public,void,test,send,default,destination,with,qos,throws,exception,do,test,send,destination,true,true,false,false
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationWithQOS() throws Exception;1406555570;Test sending to the default destination using explicit QOS parameters.;@Test_	public void testSendDefaultDestinationWithQOS() throws Exception {_		doTestSendDestination(true, true, false, false)__	};test,sending,to,the,default,destination,using,explicit,qos,parameters;test,public,void,test,send,default,destination,with,qos,throws,exception,do,test,send,destination,true,true,false,false
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationWithQOS() throws Exception;1413848647;Test sending to the default destination using explicit QOS parameters.;@Test_	public void testSendDefaultDestinationWithQOS() throws Exception {_		doTestSendDestination(true, true, false, false)__	};test,sending,to,the,default,destination,using,explicit,qos,parameters;test,public,void,test,send,default,destination,with,qos,throws,exception,do,test,send,destination,true,true,false,false
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationWithQOS() throws Exception;1414619099;Test sending to the default destination using explicit QOS parameters.;@Test_	public void testSendDefaultDestinationWithQOS() throws Exception {_		doTestSendDestination(true, true, false, false)__	};test,sending,to,the,default,destination,using,explicit,qos,parameters;test,public,void,test,send,default,destination,with,qos,throws,exception,do,test,send,destination,true,true,false,false
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationWithQOS() throws Exception;1492515173;Test sending to the default destination using explicit QOS parameters.;@Test_	public void testSendDefaultDestinationWithQOS() throws Exception {_		doTestSendDestination(true, true, false, false)__	};test,sending,to,the,default,destination,using,explicit,qos,parameters;test,public,void,test,send,default,destination,with,qos,throws,exception,do,test,send,destination,true,true,false,false
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationWithQOS() throws Exception;1492515207;Test sending to the default destination using explicit QOS parameters.;@Test_	public void testSendDefaultDestinationWithQOS() throws Exception {_		doTestSendDestination(true, true, false, false)__	};test,sending,to,the,default,destination,using,explicit,qos,parameters;test,public,void,test,send,default,destination,with,qos,throws,exception,do,test,send,destination,true,true,false,false
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationWithQOS() throws Exception;1496837955;Test sending to the default destination using explicit QOS parameters.;@Test_	public void testSendDefaultDestinationWithQOS() throws Exception {_		doTestSendDestination(true, true, false, false)__	};test,sending,to,the,default,destination,using,explicit,qos,parameters;test,public,void,test,send,default,destination,with,qos,throws,exception,do,test,send,destination,true,true,false,false
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationWithQOS() throws Exception;1542613849;Test sending to the default destination using explicit QOS parameters.;@Test_	public void testSendDefaultDestinationWithQOS() throws Exception {_		doTestSendDestination(true, true, false, false)__	};test,sending,to,the,default,destination,using,explicit,qos,parameters;test,public,void,test,send,default,destination,with,qos,throws,exception,do,test,send,destination,true,true,false,false
JmsTemplateTests -> @Test 	public void testSendDestinationNameWithQOS() throws Exception;1362408075;Test sending to a destination using the method_send(String d, MessageCreator messageCreator) using QOS parameters.;@Test_	public void testSendDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,string,d,message,creator,message,creator,using,qos,parameters;test,public,void,test,send,destination,name,with,qos,throws,exception,do,test,send,destination,false,false,false,true
JmsTemplateTests -> @Test 	public void testSendDestinationNameWithQOS() throws Exception;1363208506;Test sending to a destination using the method_send(String d, MessageCreator messageCreator) using QOS parameters.;@Test_	public void testSendDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,string,d,message,creator,message,creator,using,qos,parameters;test,public,void,test,send,destination,name,with,qos,throws,exception,do,test,send,destination,false,false,false,true
JmsTemplateTests -> @Test 	public void testSendDestinationNameWithQOS() throws Exception;1398144713;Test sending to a destination using the method_send(String d, MessageCreator messageCreator) using QOS parameters.;@Test_	public void testSendDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,string,d,message,creator,message,creator,using,qos,parameters;test,public,void,test,send,destination,name,with,qos,throws,exception,do,test,send,destination,false,false,false,true
JmsTemplateTests -> @Test 	public void testSendDestinationNameWithQOS() throws Exception;1406555570;Test sending to a destination using the method_send(String d, MessageCreator messageCreator) using QOS parameters.;@Test_	public void testSendDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,string,d,message,creator,message,creator,using,qos,parameters;test,public,void,test,send,destination,name,with,qos,throws,exception,do,test,send,destination,false,false,false,true
JmsTemplateTests -> @Test 	public void testSendDestinationNameWithQOS() throws Exception;1413848647;Test sending to a destination using the method_send(String d, MessageCreator messageCreator) using QOS parameters.;@Test_	public void testSendDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,string,d,message,creator,message,creator,using,qos,parameters;test,public,void,test,send,destination,name,with,qos,throws,exception,do,test,send,destination,false,false,false,true
JmsTemplateTests -> @Test 	public void testSendDestinationNameWithQOS() throws Exception;1414619099;Test sending to a destination using the method_send(String d, MessageCreator messageCreator) using QOS parameters.;@Test_	public void testSendDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,string,d,message,creator,message,creator,using,qos,parameters;test,public,void,test,send,destination,name,with,qos,throws,exception,do,test,send,destination,false,false,false,true
JmsTemplateTests -> @Test 	public void testSendDestinationNameWithQOS() throws Exception;1492515173;Test sending to a destination using the method_send(String d, MessageCreator messageCreator) using QOS parameters.;@Test_	public void testSendDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,string,d,message,creator,message,creator,using,qos,parameters;test,public,void,test,send,destination,name,with,qos,throws,exception,do,test,send,destination,false,false,false,true
JmsTemplateTests -> @Test 	public void testSendDestinationNameWithQOS() throws Exception;1492515207;Test sending to a destination using the method_send(String d, MessageCreator messageCreator) using QOS parameters.;@Test_	public void testSendDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,string,d,message,creator,message,creator,using,qos,parameters;test,public,void,test,send,destination,name,with,qos,throws,exception,do,test,send,destination,false,false,false,true
JmsTemplateTests -> @Test 	public void testSendDestinationNameWithQOS() throws Exception;1496837955;Test sending to a destination using the method_send(String d, MessageCreator messageCreator) using QOS parameters.;@Test_	public void testSendDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,string,d,message,creator,message,creator,using,qos,parameters;test,public,void,test,send,destination,name,with,qos,throws,exception,do,test,send,destination,false,false,false,true
JmsTemplateTests -> @Test 	public void testSendDestinationNameWithQOS() throws Exception;1542613849;Test sending to a destination using the method_send(String d, MessageCreator messageCreator) using QOS parameters.;@Test_	public void testSendDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,string,d,message,creator,message,creator,using,qos,parameters;test,public,void,test,send,destination,name,with,qos,throws,exception,do,test,send,destination,false,false,false,true
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationName() throws Exception;1362408075;Test sending to the default destination name.;@Test_	public void testSendDefaultDestinationName() throws Exception {_		doTestSendDestination(false, true, true, true)__	};test,sending,to,the,default,destination,name;test,public,void,test,send,default,destination,name,throws,exception,do,test,send,destination,false,true,true,true
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationName() throws Exception;1363208506;Test sending to the default destination name.;@Test_	public void testSendDefaultDestinationName() throws Exception {_		doTestSendDestination(false, true, true, true)__	};test,sending,to,the,default,destination,name;test,public,void,test,send,default,destination,name,throws,exception,do,test,send,destination,false,true,true,true
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationName() throws Exception;1398144713;Test sending to the default destination name.;@Test_	public void testSendDefaultDestinationName() throws Exception {_		doTestSendDestination(false, true, true, true)__	};test,sending,to,the,default,destination,name;test,public,void,test,send,default,destination,name,throws,exception,do,test,send,destination,false,true,true,true
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationName() throws Exception;1406555570;Test sending to the default destination name.;@Test_	public void testSendDefaultDestinationName() throws Exception {_		doTestSendDestination(false, true, true, true)__	};test,sending,to,the,default,destination,name;test,public,void,test,send,default,destination,name,throws,exception,do,test,send,destination,false,true,true,true
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationName() throws Exception;1413848647;Test sending to the default destination name.;@Test_	public void testSendDefaultDestinationName() throws Exception {_		doTestSendDestination(false, true, true, true)__	};test,sending,to,the,default,destination,name;test,public,void,test,send,default,destination,name,throws,exception,do,test,send,destination,false,true,true,true
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationName() throws Exception;1414619099;Test sending to the default destination name.;@Test_	public void testSendDefaultDestinationName() throws Exception {_		doTestSendDestination(false, true, true, true)__	};test,sending,to,the,default,destination,name;test,public,void,test,send,default,destination,name,throws,exception,do,test,send,destination,false,true,true,true
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationName() throws Exception;1492515173;Test sending to the default destination name.;@Test_	public void testSendDefaultDestinationName() throws Exception {_		doTestSendDestination(false, true, true, true)__	};test,sending,to,the,default,destination,name;test,public,void,test,send,default,destination,name,throws,exception,do,test,send,destination,false,true,true,true
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationName() throws Exception;1492515207;Test sending to the default destination name.;@Test_	public void testSendDefaultDestinationName() throws Exception {_		doTestSendDestination(false, true, true, true)__	};test,sending,to,the,default,destination,name;test,public,void,test,send,default,destination,name,throws,exception,do,test,send,destination,false,true,true,true
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationName() throws Exception;1496837955;Test sending to the default destination name.;@Test_	public void testSendDefaultDestinationName() throws Exception {_		doTestSendDestination(false, true, true, true)__	};test,sending,to,the,default,destination,name;test,public,void,test,send,default,destination,name,throws,exception,do,test,send,destination,false,true,true,true
JmsTemplateTests -> @Test 	public void testSendDefaultDestinationName() throws Exception;1542613849;Test sending to the default destination name.;@Test_	public void testSendDefaultDestinationName() throws Exception {_		doTestSendDestination(false, true, true, true)__	};test,sending,to,the,default,destination,name;test,public,void,test,send,default,destination,name,throws,exception,do,test,send,destination,false,true,true,true
JmsTemplateTests -> public void testSendDestination() throws Exception;1328020251;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator);public void testSendDestination() throws Exception {_		doTestSendDestination(true, false, true, false)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator;public,void,test,send,destination,throws,exception,do,test,send,destination,true,false,true,false
JmsTemplateTests -> public void testSendDestination() throws Exception;1356735495;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator);public void testSendDestination() throws Exception {_		doTestSendDestination(true, false, true, false)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator;public,void,test,send,destination,throws,exception,do,test,send,destination,true,false,true,false
JmsTemplateTests -> public void testSendDestinationName() throws Exception;1328020251;Test seding to a destination using the method_send(String d, MessageCreator messageCreator);public void testSendDestinationName() throws Exception {_		doTestSendDestination(false, false, true, false)__	};test,seding,to,a,destination,using,the,method,send,string,d,message,creator,message,creator;public,void,test,send,destination,name,throws,exception,do,test,send,destination,false,false,true,false
JmsTemplateTests -> public void testSendDestinationName() throws Exception;1356735495;Test seding to a destination using the method_send(String d, MessageCreator messageCreator);public void testSendDestinationName() throws Exception {_		doTestSendDestination(false, false, true, false)__	};test,seding,to,a,destination,using,the,method,send,string,d,message,creator,message,creator;public,void,test,send,destination,name,throws,exception,do,test,send,destination,false,false,true,false
JmsTemplateTests -> public void testSendDestinationNameWithQOS() throws Exception;1328020251;Test sending to a destination using the method_send(String d, MessageCreator messageCreator) using QOS parameters.;public void testSendDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,string,d,message,creator,message,creator,using,qos,parameters;public,void,test,send,destination,name,with,qos,throws,exception,do,test,send,destination,false,false,false,true
JmsTemplateTests -> public void testSendDestinationNameWithQOS() throws Exception;1356735495;Test sending to a destination using the method_send(String d, MessageCreator messageCreator) using QOS parameters.;public void testSendDestinationNameWithQOS() throws Exception {_		doTestSendDestination(false, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,string,d,message,creator,message,creator,using,qos,parameters;public,void,test,send,destination,name,with,qos,throws,exception,do,test,send,destination,false,false,false,true
JmsTemplateTests -> @Before 	public void setupMocks() throws Exception;1362408075;Create the mock objects for testing.;@Before_	public void setupMocks() throws Exception {_		jndiContext = mock(Context.class)__		connectionFactory = mock(ConnectionFactory.class)__		connection = mock(Connection.class)__		session = mock(Session.class)__		queue = mock(Queue.class)___		given(connectionFactory.createConnection()).willReturn(connection)__		given(connection.createSession(useTransactedTemplate(),_				Session.AUTO_ACKNOWLEDGE)).willReturn(session)__		given(session.getTransacted()).willReturn(useTransactedSession())__		given(jndiContext.lookup("testDestination")).willReturn(queue)__	};create,the,mock,objects,for,testing;before,public,void,setup,mocks,throws,exception,jndi,context,mock,context,class,connection,factory,mock,connection,factory,class,connection,mock,connection,class,session,mock,session,class,queue,mock,queue,class,given,connection,factory,create,connection,will,return,connection,given,connection,create,session,use,transacted,template,session,will,return,session,given,session,get,transacted,will,return,use,transacted,session,given,jndi,context,lookup,test,destination,will,return,queue
JmsTemplateTests -> @Before 	public void setupMocks() throws Exception;1363208506;Create the mock objects for testing.;@Before_	public void setupMocks() throws Exception {_		jndiContext = mock(Context.class)__		connectionFactory = mock(ConnectionFactory.class)__		connection = mock(Connection.class)__		session = mock(Session.class)__		queue = mock(Queue.class)___		given(connectionFactory.createConnection()).willReturn(connection)__		given(connection.createSession(useTransactedTemplate(),_				Session.AUTO_ACKNOWLEDGE)).willReturn(session)__		given(session.getTransacted()).willReturn(useTransactedSession())__		given(jndiContext.lookup("testDestination")).willReturn(queue)__	};create,the,mock,objects,for,testing;before,public,void,setup,mocks,throws,exception,jndi,context,mock,context,class,connection,factory,mock,connection,factory,class,connection,mock,connection,class,session,mock,session,class,queue,mock,queue,class,given,connection,factory,create,connection,will,return,connection,given,connection,create,session,use,transacted,template,session,will,return,session,given,session,get,transacted,will,return,use,transacted,session,given,jndi,context,lookup,test,destination,will,return,queue
JmsTemplateTests -> @Before 	public void setupMocks() throws Exception;1398144713;Create the mock objects for testing.;@Before_	public void setupMocks() throws Exception {_		jndiContext = mock(Context.class)__		connectionFactory = mock(ConnectionFactory.class)__		connection = mock(Connection.class)__		session = mock(Session.class)__		queue = mock(Queue.class)___		given(connectionFactory.createConnection()).willReturn(connection)__		given(connection.createSession(useTransactedTemplate(),_				Session.AUTO_ACKNOWLEDGE)).willReturn(session)__		given(session.getTransacted()).willReturn(useTransactedSession())__		given(jndiContext.lookup("testDestination")).willReturn(queue)__	};create,the,mock,objects,for,testing;before,public,void,setup,mocks,throws,exception,jndi,context,mock,context,class,connection,factory,mock,connection,factory,class,connection,mock,connection,class,session,mock,session,class,queue,mock,queue,class,given,connection,factory,create,connection,will,return,connection,given,connection,create,session,use,transacted,template,session,will,return,session,given,session,get,transacted,will,return,use,transacted,session,given,jndi,context,lookup,test,destination,will,return,queue
JmsTemplateTests -> @Before 	public void setupMocks() throws Exception;1406555570;Create the mock objects for testing.;@Before_	public void setupMocks() throws Exception {_		jndiContext = mock(Context.class)__		connectionFactory = mock(ConnectionFactory.class)__		connection = mock(Connection.class)__		session = mock(Session.class)__		queue = mock(Queue.class)___		given(connectionFactory.createConnection()).willReturn(connection)__		given(connection.createSession(useTransactedTemplate(),_				Session.AUTO_ACKNOWLEDGE)).willReturn(session)__		given(session.getTransacted()).willReturn(useTransactedSession())__		given(jndiContext.lookup("testDestination")).willReturn(queue)__	};create,the,mock,objects,for,testing;before,public,void,setup,mocks,throws,exception,jndi,context,mock,context,class,connection,factory,mock,connection,factory,class,connection,mock,connection,class,session,mock,session,class,queue,mock,queue,class,given,connection,factory,create,connection,will,return,connection,given,connection,create,session,use,transacted,template,session,will,return,session,given,session,get,transacted,will,return,use,transacted,session,given,jndi,context,lookup,test,destination,will,return,queue
JmsTemplateTests -> @Before 	public void setupMocks() throws Exception;1413848647;Create the mock objects for testing.;@Before_	public void setupMocks() throws Exception {_		jndiContext = mock(Context.class)__		connectionFactory = mock(ConnectionFactory.class)__		connection = mock(Connection.class)__		session = mock(Session.class)__		queue = mock(Queue.class)___		given(connectionFactory.createConnection()).willReturn(connection)__		given(connection.createSession(useTransactedTemplate(),_				Session.AUTO_ACKNOWLEDGE)).willReturn(session)__		given(session.getTransacted()).willReturn(useTransactedSession())__		given(jndiContext.lookup("testDestination")).willReturn(queue)__	};create,the,mock,objects,for,testing;before,public,void,setup,mocks,throws,exception,jndi,context,mock,context,class,connection,factory,mock,connection,factory,class,connection,mock,connection,class,session,mock,session,class,queue,mock,queue,class,given,connection,factory,create,connection,will,return,connection,given,connection,create,session,use,transacted,template,session,will,return,session,given,session,get,transacted,will,return,use,transacted,session,given,jndi,context,lookup,test,destination,will,return,queue
JmsTemplateTests -> @Before 	public void setupMocks() throws Exception;1414619099;Create the mock objects for testing.;@Before_	public void setupMocks() throws Exception {_		jndiContext = mock(Context.class)__		connectionFactory = mock(ConnectionFactory.class)__		connection = mock(Connection.class)__		session = mock(Session.class)__		queue = mock(Queue.class)___		given(connectionFactory.createConnection()).willReturn(connection)__		given(connection.createSession(useTransactedTemplate(), Session.AUTO_ACKNOWLEDGE)).willReturn(session)__		given(session.getTransacted()).willReturn(useTransactedSession())__		given(jndiContext.lookup("testDestination")).willReturn(queue)__	};create,the,mock,objects,for,testing;before,public,void,setup,mocks,throws,exception,jndi,context,mock,context,class,connection,factory,mock,connection,factory,class,connection,mock,connection,class,session,mock,session,class,queue,mock,queue,class,given,connection,factory,create,connection,will,return,connection,given,connection,create,session,use,transacted,template,session,will,return,session,given,session,get,transacted,will,return,use,transacted,session,given,jndi,context,lookup,test,destination,will,return,queue
JmsTemplateTests -> @Before 	public void setupMocks() throws Exception;1492515173;Create the mock objects for testing.;@Before_	public void setupMocks() throws Exception {_		jndiContext = mock(Context.class)__		connectionFactory = mock(ConnectionFactory.class)__		connection = mock(Connection.class)__		session = mock(Session.class)__		queue = mock(Queue.class)___		given(connectionFactory.createConnection()).willReturn(connection)__		given(connection.createSession(useTransactedTemplate(), Session.AUTO_ACKNOWLEDGE)).willReturn(session)__		given(session.getTransacted()).willReturn(useTransactedSession())__		given(jndiContext.lookup("testDestination")).willReturn(queue)__	};create,the,mock,objects,for,testing;before,public,void,setup,mocks,throws,exception,jndi,context,mock,context,class,connection,factory,mock,connection,factory,class,connection,mock,connection,class,session,mock,session,class,queue,mock,queue,class,given,connection,factory,create,connection,will,return,connection,given,connection,create,session,use,transacted,template,session,will,return,session,given,session,get,transacted,will,return,use,transacted,session,given,jndi,context,lookup,test,destination,will,return,queue
JmsTemplateTests -> @Before 	public void setupMocks() throws Exception;1492515207;Create the mock objects for testing.;@Before_	public void setupMocks() throws Exception {_		this.jndiContext = mock(Context.class)__		this.connectionFactory = mock(ConnectionFactory.class)__		this.connection = mock(Connection.class)__		this.session = mock(Session.class)__		this.queue = mock(Queue.class)___		given(this.connectionFactory.createConnection()).willReturn(this.connection)__		given(this.connection.createSession(useTransactedTemplate(), Session.AUTO_ACKNOWLEDGE)).willReturn(this.session)__		given(this.session.getTransacted()).willReturn(useTransactedSession())__		given(this.jndiContext.lookup("testDestination")).willReturn(this.queue)__	};create,the,mock,objects,for,testing;before,public,void,setup,mocks,throws,exception,this,jndi,context,mock,context,class,this,connection,factory,mock,connection,factory,class,this,connection,mock,connection,class,this,session,mock,session,class,this,queue,mock,queue,class,given,this,connection,factory,create,connection,will,return,this,connection,given,this,connection,create,session,use,transacted,template,session,will,return,this,session,given,this,session,get,transacted,will,return,use,transacted,session,given,this,jndi,context,lookup,test,destination,will,return,this,queue
JmsTemplateTests -> @Before 	public void setupMocks() throws Exception;1496837955;Create the mock objects for testing.;@Before_	public void setupMocks() throws Exception {_		this.jndiContext = mock(Context.class)__		this.connectionFactory = mock(ConnectionFactory.class)__		this.connection = mock(Connection.class)__		this.session = mock(Session.class)__		this.queue = mock(Queue.class)___		given(this.connectionFactory.createConnection()).willReturn(this.connection)__		given(this.connection.createSession(useTransactedTemplate(), Session.AUTO_ACKNOWLEDGE)).willReturn(this.session)__		given(this.session.getTransacted()).willReturn(useTransactedSession())__		given(this.jndiContext.lookup("testDestination")).willReturn(this.queue)__	};create,the,mock,objects,for,testing;before,public,void,setup,mocks,throws,exception,this,jndi,context,mock,context,class,this,connection,factory,mock,connection,factory,class,this,connection,mock,connection,class,this,session,mock,session,class,this,queue,mock,queue,class,given,this,connection,factory,create,connection,will,return,this,connection,given,this,connection,create,session,use,transacted,template,session,will,return,this,session,given,this,session,get,transacted,will,return,use,transacted,session,given,this,jndi,context,lookup,test,destination,will,return,this,queue
JmsTemplateTests -> @Before 	public void setupMocks() throws Exception;1542613849;Create the mock objects for testing.;@Before_	public void setupMocks() throws Exception {_		this.jndiContext = mock(Context.class)__		this.connectionFactory = mock(ConnectionFactory.class)__		this.connection = mock(Connection.class)__		this.session = mock(Session.class)__		this.queue = mock(Queue.class)___		given(this.connectionFactory.createConnection()).willReturn(this.connection)__		given(this.connection.createSession(useTransactedTemplate(), Session.AUTO_ACKNOWLEDGE)).willReturn(this.session)__		given(this.session.getTransacted()).willReturn(useTransactedSession())__		given(this.jndiContext.lookup("testDestination")).willReturn(this.queue)__	};create,the,mock,objects,for,testing;before,public,void,setup,mocks,throws,exception,this,jndi,context,mock,context,class,this,connection,factory,mock,connection,factory,class,this,connection,mock,connection,class,this,session,mock,session,class,this,queue,mock,queue,class,given,this,connection,factory,create,connection,will,return,this,connection,given,this,connection,create,session,use,transacted,template,session,will,return,this,session,given,this,session,get,transacted,will,return,use,transacted,session,given,this,jndi,context,lookup,test,destination,will,return,this,queue
JmsTemplateTests -> private void doTestSendDestination( 			boolean explicitDestination, boolean useDefaultDestination, 			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception;1328020251;Common method for testing a send method that uses the MessageCreator_callback but with different QOS options._@param ignoreQOS test using default QOS options.;private void doTestSendDestination(_			boolean explicitDestination, boolean useDefaultDestination,_			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception {__		JmsTemplate template = createTemplate()__		template.setConnectionFactory(mockConnectionFactory)___		String destinationName = "testDestination"___		if (useDefaultDestination) {_			if (explicitDestination) {_				template.setDefaultDestination(mockQueue)__			}_			else {_				template.setDefaultDestinationName(destinationName)__			}_		}_		if (disableIdAndTimestamp) {_			template.setMessageIdEnabled(false)__			template.setMessageTimestampEnabled(false)__		}__		MockControl messageProducerControl = MockControl.createControl(MessageProducer.class)__		MessageProducer mockMessageProducer = (MessageProducer) messageProducerControl.getMock()___		MockControl messageControl = MockControl.createControl(TextMessage.class)__		TextMessage mockMessage = (TextMessage) messageControl.getMock()___		mockSession.createProducer(mockQueue)__		sessionControl.setReturnValue(mockMessageProducer)__		mockSession.createTextMessage("just testing")__		sessionControl.setReturnValue(mockMessage)___		if (useTransactedTemplate()) {_			mockSession.commit()__			sessionControl.setVoidCallable(1)__		}__		if (disableIdAndTimestamp) {_			mockMessageProducer.setDisableMessageID(true)__			messageProducerControl.setVoidCallable(1)__			mockMessageProducer.setDisableMessageTimestamp(true)__			messageProducerControl.setVoidCallable(1)__		}__		if (ignoreQOS) {_			mockMessageProducer.send(mockMessage)__		}_		else {_			template.setExplicitQosEnabled(true)__			template.setDeliveryMode(deliveryMode)__			template.setPriority(priority)__			template.setTimeToLive(timeToLive)__			mockMessageProducer.send(mockMessage, deliveryMode, priority, timeToLive)__		}_		messageProducerControl.setVoidCallable(1)___		mockMessageProducer.close()__		messageProducerControl.setVoidCallable(1)__		mockSession.close()__		sessionControl.setVoidCallable(1)__		mockConnection.close()__		connectionControl.setVoidCallable(1)___		messageProducerControl.replay()__		sessionControl.replay()__		connectionControl.replay()___		if (useDefaultDestination) {_			template.send(new MessageCreator() {_				public Message createMessage(Session session) throws JMSException {_					return session.createTextMessage("just testing")__				}_			})__		}_		else {_			if (explicitDestination) {_				template.send(mockQueue, new MessageCreator() {_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_			else {_				template.send(destinationName, new MessageCreator() {_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_		}__		connectionFactoryControl.verify()__		connectionControl.verify()__		sessionControl.verify()__		messageProducerControl.verify()__	};common,method,for,testing,a,send,method,that,uses,the,message,creator,callback,but,with,different,qos,options,param,ignore,qos,test,using,default,qos,options;private,void,do,test,send,destination,boolean,explicit,destination,boolean,use,default,destination,boolean,ignore,qos,boolean,disable,id,and,timestamp,throws,exception,jms,template,template,create,template,template,set,connection,factory,mock,connection,factory,string,destination,name,test,destination,if,use,default,destination,if,explicit,destination,template,set,default,destination,mock,queue,else,template,set,default,destination,name,destination,name,if,disable,id,and,timestamp,template,set,message,id,enabled,false,template,set,message,timestamp,enabled,false,mock,control,message,producer,control,mock,control,create,control,message,producer,class,message,producer,mock,message,producer,message,producer,message,producer,control,get,mock,mock,control,message,control,mock,control,create,control,text,message,class,text,message,mock,message,text,message,message,control,get,mock,mock,session,create,producer,mock,queue,session,control,set,return,value,mock,message,producer,mock,session,create,text,message,just,testing,session,control,set,return,value,mock,message,if,use,transacted,template,mock,session,commit,session,control,set,void,callable,1,if,disable,id,and,timestamp,mock,message,producer,set,disable,message,id,true,message,producer,control,set,void,callable,1,mock,message,producer,set,disable,message,timestamp,true,message,producer,control,set,void,callable,1,if,ignore,qos,mock,message,producer,send,mock,message,else,template,set,explicit,qos,enabled,true,template,set,delivery,mode,delivery,mode,template,set,priority,priority,template,set,time,to,live,time,to,live,mock,message,producer,send,mock,message,delivery,mode,priority,time,to,live,message,producer,control,set,void,callable,1,mock,message,producer,close,message,producer,control,set,void,callable,1,mock,session,close,session,control,set,void,callable,1,mock,connection,close,connection,control,set,void,callable,1,message,producer,control,replay,session,control,replay,connection,control,replay,if,use,default,destination,template,send,new,message,creator,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,if,explicit,destination,template,send,mock,queue,new,message,creator,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,template,send,destination,name,new,message,creator,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,connection,factory,control,verify,connection,control,verify,session,control,verify,message,producer,control,verify
JmsTemplateTests -> private void doTestSendDestination( 			boolean explicitDestination, boolean useDefaultDestination, 			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception;1356735495;Common method for testing a send method that uses the MessageCreator_callback but with different QOS options._@param ignoreQOS test using default QOS options.;private void doTestSendDestination(_			boolean explicitDestination, boolean useDefaultDestination,_			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception {__		JmsTemplate template = createTemplate()__		template.setConnectionFactory(mockConnectionFactory)___		String destinationName = "testDestination"___		if (useDefaultDestination) {_			if (explicitDestination) {_				template.setDefaultDestination(mockQueue)__			}_			else {_				template.setDefaultDestinationName(destinationName)__			}_		}_		if (disableIdAndTimestamp) {_			template.setMessageIdEnabled(false)__			template.setMessageTimestampEnabled(false)__		}__		MockControl messageProducerControl = MockControl.createControl(MessageProducer.class)__		MessageProducer mockMessageProducer = (MessageProducer) messageProducerControl.getMock()___		MockControl messageControl = MockControl.createControl(TextMessage.class)__		TextMessage mockMessage = (TextMessage) messageControl.getMock()___		mockSession.createProducer(mockQueue)__		sessionControl.setReturnValue(mockMessageProducer)__		mockSession.createTextMessage("just testing")__		sessionControl.setReturnValue(mockMessage)___		if (useTransactedTemplate()) {_			mockSession.commit()__			sessionControl.setVoidCallable(1)__		}__		if (disableIdAndTimestamp) {_			mockMessageProducer.setDisableMessageID(true)__			messageProducerControl.setVoidCallable(1)__			mockMessageProducer.setDisableMessageTimestamp(true)__			messageProducerControl.setVoidCallable(1)__		}__		if (ignoreQOS) {_			mockMessageProducer.send(mockMessage)__		}_		else {_			template.setExplicitQosEnabled(true)__			template.setDeliveryMode(deliveryMode)__			template.setPriority(priority)__			template.setTimeToLive(timeToLive)__			mockMessageProducer.send(mockMessage, deliveryMode, priority, timeToLive)__		}_		messageProducerControl.setVoidCallable(1)___		mockMessageProducer.close()__		messageProducerControl.setVoidCallable(1)__		mockSession.close()__		sessionControl.setVoidCallable(1)__		mockConnection.close()__		connectionControl.setVoidCallable(1)___		messageProducerControl.replay()__		sessionControl.replay()__		connectionControl.replay()___		if (useDefaultDestination) {_			template.send(new MessageCreator() {_				@Override_				public Message createMessage(Session session) throws JMSException {_					return session.createTextMessage("just testing")__				}_			})__		}_		else {_			if (explicitDestination) {_				template.send(mockQueue, new MessageCreator() {_					@Override_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_			else {_				template.send(destinationName, new MessageCreator() {_					@Override_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_		}__		connectionFactoryControl.verify()__		connectionControl.verify()__		sessionControl.verify()__		messageProducerControl.verify()__	};common,method,for,testing,a,send,method,that,uses,the,message,creator,callback,but,with,different,qos,options,param,ignore,qos,test,using,default,qos,options;private,void,do,test,send,destination,boolean,explicit,destination,boolean,use,default,destination,boolean,ignore,qos,boolean,disable,id,and,timestamp,throws,exception,jms,template,template,create,template,template,set,connection,factory,mock,connection,factory,string,destination,name,test,destination,if,use,default,destination,if,explicit,destination,template,set,default,destination,mock,queue,else,template,set,default,destination,name,destination,name,if,disable,id,and,timestamp,template,set,message,id,enabled,false,template,set,message,timestamp,enabled,false,mock,control,message,producer,control,mock,control,create,control,message,producer,class,message,producer,mock,message,producer,message,producer,message,producer,control,get,mock,mock,control,message,control,mock,control,create,control,text,message,class,text,message,mock,message,text,message,message,control,get,mock,mock,session,create,producer,mock,queue,session,control,set,return,value,mock,message,producer,mock,session,create,text,message,just,testing,session,control,set,return,value,mock,message,if,use,transacted,template,mock,session,commit,session,control,set,void,callable,1,if,disable,id,and,timestamp,mock,message,producer,set,disable,message,id,true,message,producer,control,set,void,callable,1,mock,message,producer,set,disable,message,timestamp,true,message,producer,control,set,void,callable,1,if,ignore,qos,mock,message,producer,send,mock,message,else,template,set,explicit,qos,enabled,true,template,set,delivery,mode,delivery,mode,template,set,priority,priority,template,set,time,to,live,time,to,live,mock,message,producer,send,mock,message,delivery,mode,priority,time,to,live,message,producer,control,set,void,callable,1,mock,message,producer,close,message,producer,control,set,void,callable,1,mock,session,close,session,control,set,void,callable,1,mock,connection,close,connection,control,set,void,callable,1,message,producer,control,replay,session,control,replay,connection,control,replay,if,use,default,destination,template,send,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,if,explicit,destination,template,send,mock,queue,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,template,send,destination,name,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,connection,factory,control,verify,connection,control,verify,session,control,verify,message,producer,control,verify
JmsTemplateTests -> private void doTestSendDestination( 			boolean explicitDestination, boolean useDefaultDestination, 			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception;1362408075;Common method for testing a send method that uses the MessageCreator_callback but with different QOS options._@param ignoreQOS test using default QOS options.;private void doTestSendDestination(_			boolean explicitDestination, boolean useDefaultDestination,_			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception {__		JmsTemplate template = createTemplate()__		template.setConnectionFactory(connectionFactory)___		String destinationName = "testDestination"___		if (useDefaultDestination) {_			if (explicitDestination) {_				template.setDefaultDestination(queue)__			}_			else {_				template.setDefaultDestinationName(destinationName)__			}_		}_		if (disableIdAndTimestamp) {_			template.setMessageIdEnabled(false)__			template.setMessageTimestampEnabled(false)__		}__		MessageProducer messageProducer = mock(MessageProducer.class)__		TextMessage textMessage = mock(TextMessage.class)___		given(session.createProducer(queue)).willReturn(messageProducer)__		given(session.createTextMessage("just testing")).willReturn(textMessage)___		if (!ignoreQOS) {_			template.setExplicitQosEnabled(true)__			template.setDeliveryMode(deliveryMode)__			template.setPriority(priority)__			template.setTimeToLive(timeToLive)__		}__		if (useDefaultDestination) {_			template.send(new MessageCreator() {_				@Override_				public Message createMessage(Session session) throws JMSException {_					return session.createTextMessage("just testing")__				}_			})__		}_		else {_			if (explicitDestination) {_				template.send(queue, new MessageCreator() {_					@Override_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_			else {_				template.send(destinationName, new MessageCreator() {_					@Override_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_		}__		if (useTransactedTemplate()) {_			verify(session).commit()__		}__		if (disableIdAndTimestamp) {_			verify(messageProducer).setDisableMessageID(true)__			verify(messageProducer).setDisableMessageTimestamp(true)__		}__		if (ignoreQOS) {_			verify(messageProducer).send(textMessage)__		}_		else {_			verify(messageProducer).send(textMessage, deliveryMode, priority, timeToLive)__		}_		verify(messageProducer).close()__		verify(session).close()__		verify(connection).close()__	};common,method,for,testing,a,send,method,that,uses,the,message,creator,callback,but,with,different,qos,options,param,ignore,qos,test,using,default,qos,options;private,void,do,test,send,destination,boolean,explicit,destination,boolean,use,default,destination,boolean,ignore,qos,boolean,disable,id,and,timestamp,throws,exception,jms,template,template,create,template,template,set,connection,factory,connection,factory,string,destination,name,test,destination,if,use,default,destination,if,explicit,destination,template,set,default,destination,queue,else,template,set,default,destination,name,destination,name,if,disable,id,and,timestamp,template,set,message,id,enabled,false,template,set,message,timestamp,enabled,false,message,producer,message,producer,mock,message,producer,class,text,message,text,message,mock,text,message,class,given,session,create,producer,queue,will,return,message,producer,given,session,create,text,message,just,testing,will,return,text,message,if,ignore,qos,template,set,explicit,qos,enabled,true,template,set,delivery,mode,delivery,mode,template,set,priority,priority,template,set,time,to,live,time,to,live,if,use,default,destination,template,send,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,if,explicit,destination,template,send,queue,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,template,send,destination,name,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,if,use,transacted,template,verify,session,commit,if,disable,id,and,timestamp,verify,message,producer,set,disable,message,id,true,verify,message,producer,set,disable,message,timestamp,true,if,ignore,qos,verify,message,producer,send,text,message,else,verify,message,producer,send,text,message,delivery,mode,priority,time,to,live,verify,message,producer,close,verify,session,close,verify,connection,close
JmsTemplateTests -> private void doTestSendDestination( 			boolean explicitDestination, boolean useDefaultDestination, 			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception;1363208506;Common method for testing a send method that uses the MessageCreator_callback but with different QOS options._@param ignoreQOS test using default QOS options.;private void doTestSendDestination(_			boolean explicitDestination, boolean useDefaultDestination,_			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception {__		JmsTemplate template = createTemplate()__		template.setConnectionFactory(connectionFactory)___		String destinationName = "testDestination"___		if (useDefaultDestination) {_			if (explicitDestination) {_				template.setDefaultDestination(queue)__			}_			else {_				template.setDefaultDestinationName(destinationName)__			}_		}_		if (disableIdAndTimestamp) {_			template.setMessageIdEnabled(false)__			template.setMessageTimestampEnabled(false)__		}__		MessageProducer messageProducer = mock(MessageProducer.class)__		TextMessage textMessage = mock(TextMessage.class)___		given(session.createProducer(queue)).willReturn(messageProducer)__		given(session.createTextMessage("just testing")).willReturn(textMessage)___		if (!ignoreQOS) {_			template.setExplicitQosEnabled(true)__			template.setDeliveryMode(deliveryMode)__			template.setPriority(priority)__			template.setTimeToLive(timeToLive)__		}__		if (useDefaultDestination) {_			template.send(new MessageCreator() {_				@Override_				public Message createMessage(Session session) throws JMSException {_					return session.createTextMessage("just testing")__				}_			})__		}_		else {_			if (explicitDestination) {_				template.send(queue, new MessageCreator() {_					@Override_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_			else {_				template.send(destinationName, new MessageCreator() {_					@Override_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_		}__		if (useTransactedTemplate()) {_			verify(session).commit()__		}__		if (disableIdAndTimestamp) {_			verify(messageProducer).setDisableMessageID(true)__			verify(messageProducer).setDisableMessageTimestamp(true)__		}__		if (ignoreQOS) {_			verify(messageProducer).send(textMessage)__		}_		else {_			verify(messageProducer).send(textMessage, deliveryMode, priority, timeToLive)__		}_		verify(messageProducer).close()__		verify(session).close()__		verify(connection).close()__	};common,method,for,testing,a,send,method,that,uses,the,message,creator,callback,but,with,different,qos,options,param,ignore,qos,test,using,default,qos,options;private,void,do,test,send,destination,boolean,explicit,destination,boolean,use,default,destination,boolean,ignore,qos,boolean,disable,id,and,timestamp,throws,exception,jms,template,template,create,template,template,set,connection,factory,connection,factory,string,destination,name,test,destination,if,use,default,destination,if,explicit,destination,template,set,default,destination,queue,else,template,set,default,destination,name,destination,name,if,disable,id,and,timestamp,template,set,message,id,enabled,false,template,set,message,timestamp,enabled,false,message,producer,message,producer,mock,message,producer,class,text,message,text,message,mock,text,message,class,given,session,create,producer,queue,will,return,message,producer,given,session,create,text,message,just,testing,will,return,text,message,if,ignore,qos,template,set,explicit,qos,enabled,true,template,set,delivery,mode,delivery,mode,template,set,priority,priority,template,set,time,to,live,time,to,live,if,use,default,destination,template,send,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,if,explicit,destination,template,send,queue,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,template,send,destination,name,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,if,use,transacted,template,verify,session,commit,if,disable,id,and,timestamp,verify,message,producer,set,disable,message,id,true,verify,message,producer,set,disable,message,timestamp,true,if,ignore,qos,verify,message,producer,send,text,message,else,verify,message,producer,send,text,message,delivery,mode,priority,time,to,live,verify,message,producer,close,verify,session,close,verify,connection,close
JmsTemplateTests -> private void doTestSendDestination( 			boolean explicitDestination, boolean useDefaultDestination, 			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception;1398144713;Common method for testing a send method that uses the MessageCreator_callback but with different QOS options._@param ignoreQOS test using default QOS options.;private void doTestSendDestination(_			boolean explicitDestination, boolean useDefaultDestination,_			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception {__		JmsTemplate template = createTemplate()__		template.setConnectionFactory(connectionFactory)___		String destinationName = "testDestination"___		if (useDefaultDestination) {_			if (explicitDestination) {_				template.setDefaultDestination(queue)__			}_			else {_				template.setDefaultDestinationName(destinationName)__			}_		}_		if (disableIdAndTimestamp) {_			template.setMessageIdEnabled(false)__			template.setMessageTimestampEnabled(false)__		}__		MessageProducer messageProducer = mock(MessageProducer.class)__		TextMessage textMessage = mock(TextMessage.class)___		given(session.createProducer(queue)).willReturn(messageProducer)__		given(session.createTextMessage("just testing")).willReturn(textMessage)___		if (!ignoreQOS) {_			template.setExplicitQosEnabled(true)__			template.setDeliveryMode(deliveryMode)__			template.setPriority(priority)__			template.setTimeToLive(timeToLive)__		}__		if (useDefaultDestination) {_			template.send(new MessageCreator() {_				@Override_				public Message createMessage(Session session) throws JMSException {_					return session.createTextMessage("just testing")__				}_			})__		}_		else {_			if (explicitDestination) {_				template.send(queue, new MessageCreator() {_					@Override_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_			else {_				template.send(destinationName, new MessageCreator() {_					@Override_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_		}__		if (useTransactedTemplate()) {_			verify(session).commit()__		}__		if (disableIdAndTimestamp) {_			verify(messageProducer).setDisableMessageID(true)__			verify(messageProducer).setDisableMessageTimestamp(true)__		}__		if (ignoreQOS) {_			verify(messageProducer).send(textMessage)__		}_		else {_			verify(messageProducer).send(textMessage, deliveryMode, priority, timeToLive)__		}_		verify(messageProducer).close()__		verify(session).close()__		verify(connection).close()__	};common,method,for,testing,a,send,method,that,uses,the,message,creator,callback,but,with,different,qos,options,param,ignore,qos,test,using,default,qos,options;private,void,do,test,send,destination,boolean,explicit,destination,boolean,use,default,destination,boolean,ignore,qos,boolean,disable,id,and,timestamp,throws,exception,jms,template,template,create,template,template,set,connection,factory,connection,factory,string,destination,name,test,destination,if,use,default,destination,if,explicit,destination,template,set,default,destination,queue,else,template,set,default,destination,name,destination,name,if,disable,id,and,timestamp,template,set,message,id,enabled,false,template,set,message,timestamp,enabled,false,message,producer,message,producer,mock,message,producer,class,text,message,text,message,mock,text,message,class,given,session,create,producer,queue,will,return,message,producer,given,session,create,text,message,just,testing,will,return,text,message,if,ignore,qos,template,set,explicit,qos,enabled,true,template,set,delivery,mode,delivery,mode,template,set,priority,priority,template,set,time,to,live,time,to,live,if,use,default,destination,template,send,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,if,explicit,destination,template,send,queue,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,template,send,destination,name,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,if,use,transacted,template,verify,session,commit,if,disable,id,and,timestamp,verify,message,producer,set,disable,message,id,true,verify,message,producer,set,disable,message,timestamp,true,if,ignore,qos,verify,message,producer,send,text,message,else,verify,message,producer,send,text,message,delivery,mode,priority,time,to,live,verify,message,producer,close,verify,session,close,verify,connection,close
JmsTemplateTests -> private void doTestSendDestination( 			boolean explicitDestination, boolean useDefaultDestination, 			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception;1406555570;Common method for testing a send method that uses the MessageCreator_callback but with different QOS options._@param ignoreQOS test using default QOS options.;private void doTestSendDestination(_			boolean explicitDestination, boolean useDefaultDestination,_			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception {__		JmsTemplate template = createTemplate()__		template.setConnectionFactory(connectionFactory)___		String destinationName = "testDestination"___		if (useDefaultDestination) {_			if (explicitDestination) {_				template.setDefaultDestination(queue)__			}_			else {_				template.setDefaultDestinationName(destinationName)__			}_		}_		if (disableIdAndTimestamp) {_			template.setMessageIdEnabled(false)__			template.setMessageTimestampEnabled(false)__		}__		MessageProducer messageProducer = mock(MessageProducer.class)__		TextMessage textMessage = mock(TextMessage.class)___		given(session.createProducer(queue)).willReturn(messageProducer)__		given(session.createTextMessage("just testing")).willReturn(textMessage)___		if (!ignoreQOS) {_			template.setExplicitQosEnabled(true)__			template.setDeliveryMode(deliveryMode)__			template.setPriority(priority)__			template.setTimeToLive(timeToLive)__		}__		if (useDefaultDestination) {_			template.send(new MessageCreator() {_				@Override_				public Message createMessage(Session session) throws JMSException {_					return session.createTextMessage("just testing")__				}_			})__		}_		else {_			if (explicitDestination) {_				template.send(queue, new MessageCreator() {_					@Override_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_			else {_				template.send(destinationName, new MessageCreator() {_					@Override_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_		}__		if (useTransactedTemplate()) {_			verify(session).commit()__		}__		if (disableIdAndTimestamp) {_			verify(messageProducer).setDisableMessageID(true)__			verify(messageProducer).setDisableMessageTimestamp(true)__		}__		if (ignoreQOS) {_			verify(messageProducer).send(textMessage)__		}_		else {_			verify(messageProducer).send(textMessage, deliveryMode, priority, timeToLive)__		}_		verify(messageProducer).close()__		verify(session).close()__		verify(connection).close()__	};common,method,for,testing,a,send,method,that,uses,the,message,creator,callback,but,with,different,qos,options,param,ignore,qos,test,using,default,qos,options;private,void,do,test,send,destination,boolean,explicit,destination,boolean,use,default,destination,boolean,ignore,qos,boolean,disable,id,and,timestamp,throws,exception,jms,template,template,create,template,template,set,connection,factory,connection,factory,string,destination,name,test,destination,if,use,default,destination,if,explicit,destination,template,set,default,destination,queue,else,template,set,default,destination,name,destination,name,if,disable,id,and,timestamp,template,set,message,id,enabled,false,template,set,message,timestamp,enabled,false,message,producer,message,producer,mock,message,producer,class,text,message,text,message,mock,text,message,class,given,session,create,producer,queue,will,return,message,producer,given,session,create,text,message,just,testing,will,return,text,message,if,ignore,qos,template,set,explicit,qos,enabled,true,template,set,delivery,mode,delivery,mode,template,set,priority,priority,template,set,time,to,live,time,to,live,if,use,default,destination,template,send,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,if,explicit,destination,template,send,queue,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,template,send,destination,name,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,if,use,transacted,template,verify,session,commit,if,disable,id,and,timestamp,verify,message,producer,set,disable,message,id,true,verify,message,producer,set,disable,message,timestamp,true,if,ignore,qos,verify,message,producer,send,text,message,else,verify,message,producer,send,text,message,delivery,mode,priority,time,to,live,verify,message,producer,close,verify,session,close,verify,connection,close
JmsTemplateTests -> private void doTestSendDestination( 			boolean explicitDestination, boolean useDefaultDestination, 			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception;1413848647;Common method for testing a send method that uses the MessageCreator_callback but with different QOS options._@param ignoreQOS test using default QOS options.;private void doTestSendDestination(_			boolean explicitDestination, boolean useDefaultDestination,_			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception {__		JmsTemplate template = createTemplate()__		template.setConnectionFactory(connectionFactory)___		String destinationName = "testDestination"___		if (useDefaultDestination) {_			if (explicitDestination) {_				template.setDefaultDestination(queue)__			}_			else {_				template.setDefaultDestinationName(destinationName)__			}_		}_		if (disableIdAndTimestamp) {_			template.setMessageIdEnabled(false)__			template.setMessageTimestampEnabled(false)__		}__		MessageProducer messageProducer = mock(MessageProducer.class)__		TextMessage textMessage = mock(TextMessage.class)___		given(session.createProducer(queue)).willReturn(messageProducer)__		given(session.createTextMessage("just testing")).willReturn(textMessage)___		if (!ignoreQOS) {_			template.setExplicitQosEnabled(true)__			template.setDeliveryMode(deliveryMode)__			template.setPriority(priority)__			template.setTimeToLive(timeToLive)__		}__		if (useDefaultDestination) {_			template.send(new MessageCreator() {_				@Override_				public Message createMessage(Session session) throws JMSException {_					return session.createTextMessage("just testing")__				}_			})__		}_		else {_			if (explicitDestination) {_				template.send(queue, new MessageCreator() {_					@Override_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_			else {_				template.send(destinationName, new MessageCreator() {_					@Override_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_		}__		if (useTransactedTemplate()) {_			verify(session).commit()__		}__		if (disableIdAndTimestamp) {_			verify(messageProducer).setDisableMessageID(true)__			verify(messageProducer).setDisableMessageTimestamp(true)__		}__		if (ignoreQOS) {_			verify(messageProducer).send(textMessage)__		}_		else {_			verify(messageProducer).send(textMessage, deliveryMode, priority, timeToLive)__		}_		verify(messageProducer).close()__		verify(session).close()__		verify(connection).close()__	};common,method,for,testing,a,send,method,that,uses,the,message,creator,callback,but,with,different,qos,options,param,ignore,qos,test,using,default,qos,options;private,void,do,test,send,destination,boolean,explicit,destination,boolean,use,default,destination,boolean,ignore,qos,boolean,disable,id,and,timestamp,throws,exception,jms,template,template,create,template,template,set,connection,factory,connection,factory,string,destination,name,test,destination,if,use,default,destination,if,explicit,destination,template,set,default,destination,queue,else,template,set,default,destination,name,destination,name,if,disable,id,and,timestamp,template,set,message,id,enabled,false,template,set,message,timestamp,enabled,false,message,producer,message,producer,mock,message,producer,class,text,message,text,message,mock,text,message,class,given,session,create,producer,queue,will,return,message,producer,given,session,create,text,message,just,testing,will,return,text,message,if,ignore,qos,template,set,explicit,qos,enabled,true,template,set,delivery,mode,delivery,mode,template,set,priority,priority,template,set,time,to,live,time,to,live,if,use,default,destination,template,send,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,if,explicit,destination,template,send,queue,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,template,send,destination,name,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,if,use,transacted,template,verify,session,commit,if,disable,id,and,timestamp,verify,message,producer,set,disable,message,id,true,verify,message,producer,set,disable,message,timestamp,true,if,ignore,qos,verify,message,producer,send,text,message,else,verify,message,producer,send,text,message,delivery,mode,priority,time,to,live,verify,message,producer,close,verify,session,close,verify,connection,close
JmsTemplateTests -> private void doTestSendDestination( 			boolean explicitDestination, boolean useDefaultDestination, 			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception;1414619099;Common method for testing a send method that uses the MessageCreator_callback but with different QOS options._@param ignoreQOS test using default QOS options.;private void doTestSendDestination(_			boolean explicitDestination, boolean useDefaultDestination,_			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception {__		JmsTemplate template = createTemplate()__		template.setConnectionFactory(connectionFactory)___		String destinationName = "testDestination"___		if (useDefaultDestination) {_			if (explicitDestination) {_				template.setDefaultDestination(queue)__			}_			else {_				template.setDefaultDestinationName(destinationName)__			}_		}_		if (disableIdAndTimestamp) {_			template.setMessageIdEnabled(false)__			template.setMessageTimestampEnabled(false)__		}__		MessageProducer messageProducer = mock(MessageProducer.class)__		TextMessage textMessage = mock(TextMessage.class)___		given(session.createProducer(queue)).willReturn(messageProducer)__		given(session.createTextMessage("just testing")).willReturn(textMessage)___		if (!ignoreQOS) {_			template.setExplicitQosEnabled(true)__			template.setDeliveryMode(deliveryMode)__			template.setPriority(priority)__			template.setTimeToLive(timeToLive)__		}__		if (useDefaultDestination) {_			template.send(new MessageCreator() {_				@Override_				public Message createMessage(Session session) throws JMSException {_					return session.createTextMessage("just testing")__				}_			})__		}_		else {_			if (explicitDestination) {_				template.send(queue, new MessageCreator() {_					@Override_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_			else {_				template.send(destinationName, new MessageCreator() {_					@Override_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_		}__		if (useTransactedTemplate()) {_			verify(session).commit()__		}__		if (disableIdAndTimestamp) {_			verify(messageProducer).setDisableMessageID(true)__			verify(messageProducer).setDisableMessageTimestamp(true)__		}__		if (ignoreQOS) {_			verify(messageProducer).send(textMessage)__		}_		else {_			verify(messageProducer).send(textMessage, deliveryMode, priority, timeToLive)__		}_		verify(messageProducer).close()__		verify(session).close()__		verify(connection).close()__	};common,method,for,testing,a,send,method,that,uses,the,message,creator,callback,but,with,different,qos,options,param,ignore,qos,test,using,default,qos,options;private,void,do,test,send,destination,boolean,explicit,destination,boolean,use,default,destination,boolean,ignore,qos,boolean,disable,id,and,timestamp,throws,exception,jms,template,template,create,template,template,set,connection,factory,connection,factory,string,destination,name,test,destination,if,use,default,destination,if,explicit,destination,template,set,default,destination,queue,else,template,set,default,destination,name,destination,name,if,disable,id,and,timestamp,template,set,message,id,enabled,false,template,set,message,timestamp,enabled,false,message,producer,message,producer,mock,message,producer,class,text,message,text,message,mock,text,message,class,given,session,create,producer,queue,will,return,message,producer,given,session,create,text,message,just,testing,will,return,text,message,if,ignore,qos,template,set,explicit,qos,enabled,true,template,set,delivery,mode,delivery,mode,template,set,priority,priority,template,set,time,to,live,time,to,live,if,use,default,destination,template,send,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,if,explicit,destination,template,send,queue,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,template,send,destination,name,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,if,use,transacted,template,verify,session,commit,if,disable,id,and,timestamp,verify,message,producer,set,disable,message,id,true,verify,message,producer,set,disable,message,timestamp,true,if,ignore,qos,verify,message,producer,send,text,message,else,verify,message,producer,send,text,message,delivery,mode,priority,time,to,live,verify,message,producer,close,verify,session,close,verify,connection,close
JmsTemplateTests -> private void doTestSendDestination( 			boolean explicitDestination, boolean useDefaultDestination, 			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception;1492515173;Common method for testing a send method that uses the MessageCreator_callback but with different QOS options._@param ignoreQOS test using default QOS options.;private void doTestSendDestination(_			boolean explicitDestination, boolean useDefaultDestination,_			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception {__		JmsTemplate template = createTemplate()__		template.setConnectionFactory(connectionFactory)___		String destinationName = "testDestination"___		if (useDefaultDestination) {_			if (explicitDestination) {_				template.setDefaultDestination(queue)__			}_			else {_				template.setDefaultDestinationName(destinationName)__			}_		}_		if (disableIdAndTimestamp) {_			template.setMessageIdEnabled(false)__			template.setMessageTimestampEnabled(false)__		}__		MessageProducer messageProducer = mock(MessageProducer.class)__		TextMessage textMessage = mock(TextMessage.class)___		given(session.createProducer(queue)).willReturn(messageProducer)__		given(session.createTextMessage("just testing")).willReturn(textMessage)___		if (!ignoreQOS) {_			template.setQosSettings(qosSettings)__		}__		if (useDefaultDestination) {_			template.send(new MessageCreator() {_				@Override_				public Message createMessage(Session session) throws JMSException {_					return session.createTextMessage("just testing")__				}_			})__		}_		else {_			if (explicitDestination) {_				template.send(queue, new MessageCreator() {_					@Override_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_			else {_				template.send(destinationName, new MessageCreator() {_					@Override_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_		}__		if (useTransactedTemplate()) {_			verify(session).commit()__		}__		if (disableIdAndTimestamp) {_			verify(messageProducer).setDisableMessageID(true)__			verify(messageProducer).setDisableMessageTimestamp(true)__		}__		if (ignoreQOS) {_			verify(messageProducer).send(textMessage)__		}_		else {_			verify(messageProducer).send(textMessage, qosSettings.getDeliveryMode(),_					qosSettings.getPriority(), qosSettings.getTimeToLive())__		}_		verify(messageProducer).close()__		verify(session).close()__		verify(connection).close()__	};common,method,for,testing,a,send,method,that,uses,the,message,creator,callback,but,with,different,qos,options,param,ignore,qos,test,using,default,qos,options;private,void,do,test,send,destination,boolean,explicit,destination,boolean,use,default,destination,boolean,ignore,qos,boolean,disable,id,and,timestamp,throws,exception,jms,template,template,create,template,template,set,connection,factory,connection,factory,string,destination,name,test,destination,if,use,default,destination,if,explicit,destination,template,set,default,destination,queue,else,template,set,default,destination,name,destination,name,if,disable,id,and,timestamp,template,set,message,id,enabled,false,template,set,message,timestamp,enabled,false,message,producer,message,producer,mock,message,producer,class,text,message,text,message,mock,text,message,class,given,session,create,producer,queue,will,return,message,producer,given,session,create,text,message,just,testing,will,return,text,message,if,ignore,qos,template,set,qos,settings,qos,settings,if,use,default,destination,template,send,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,if,explicit,destination,template,send,queue,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,template,send,destination,name,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,if,use,transacted,template,verify,session,commit,if,disable,id,and,timestamp,verify,message,producer,set,disable,message,id,true,verify,message,producer,set,disable,message,timestamp,true,if,ignore,qos,verify,message,producer,send,text,message,else,verify,message,producer,send,text,message,qos,settings,get,delivery,mode,qos,settings,get,priority,qos,settings,get,time,to,live,verify,message,producer,close,verify,session,close,verify,connection,close
JmsTemplateTests -> private void doTestSendDestination( 			boolean explicitDestination, boolean useDefaultDestination, 			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception;1492515207;Common method for testing a send method that uses the MessageCreator_callback but with different QOS options._@param ignoreQOS test using default QOS options.;private void doTestSendDestination(_			boolean explicitDestination, boolean useDefaultDestination,_			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception {__		JmsTemplate template = createTemplate()__		template.setConnectionFactory(this.connectionFactory)___		String destinationName = "testDestination"___		if (useDefaultDestination) {_			if (explicitDestination) {_				template.setDefaultDestination(this.queue)__			}_			else {_				template.setDefaultDestinationName(destinationName)__			}_		}_		if (disableIdAndTimestamp) {_			template.setMessageIdEnabled(false)__			template.setMessageTimestampEnabled(false)__		}__		MessageProducer messageProducer = mock(MessageProducer.class)__		TextMessage textMessage = mock(TextMessage.class)___		given(this.session.createProducer(this.queue)).willReturn(messageProducer)__		given(this.session.createTextMessage("just testing")).willReturn(textMessage)___		if (!ignoreQOS) {_			template.setQosSettings(this.qosSettings)__		}__		if (useDefaultDestination) {_			template.send(new MessageCreator() {_				@Override_				public Message createMessage(Session session) throws JMSException {_					return session.createTextMessage("just testing")__				}_			})__		}_		else {_			if (explicitDestination) {_				template.send(this.queue, new MessageCreator() {_					@Override_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_			else {_				template.send(destinationName, new MessageCreator() {_					@Override_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_		}__		if (useTransactedTemplate()) {_			verify(this.session).commit()__		}__		if (disableIdAndTimestamp) {_			verify(messageProducer).setDisableMessageID(true)__			verify(messageProducer).setDisableMessageTimestamp(true)__		}__		if (ignoreQOS) {_			verify(messageProducer).send(textMessage)__		}_		else {_			verify(messageProducer).send(textMessage, this.qosSettings.getDeliveryMode(),_					this.qosSettings.getPriority(), this.qosSettings.getTimeToLive())__		}_		verify(messageProducer).close()__		verify(this.session).close()__		verify(this.connection).close()__	};common,method,for,testing,a,send,method,that,uses,the,message,creator,callback,but,with,different,qos,options,param,ignore,qos,test,using,default,qos,options;private,void,do,test,send,destination,boolean,explicit,destination,boolean,use,default,destination,boolean,ignore,qos,boolean,disable,id,and,timestamp,throws,exception,jms,template,template,create,template,template,set,connection,factory,this,connection,factory,string,destination,name,test,destination,if,use,default,destination,if,explicit,destination,template,set,default,destination,this,queue,else,template,set,default,destination,name,destination,name,if,disable,id,and,timestamp,template,set,message,id,enabled,false,template,set,message,timestamp,enabled,false,message,producer,message,producer,mock,message,producer,class,text,message,text,message,mock,text,message,class,given,this,session,create,producer,this,queue,will,return,message,producer,given,this,session,create,text,message,just,testing,will,return,text,message,if,ignore,qos,template,set,qos,settings,this,qos,settings,if,use,default,destination,template,send,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,if,explicit,destination,template,send,this,queue,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,template,send,destination,name,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,if,use,transacted,template,verify,this,session,commit,if,disable,id,and,timestamp,verify,message,producer,set,disable,message,id,true,verify,message,producer,set,disable,message,timestamp,true,if,ignore,qos,verify,message,producer,send,text,message,else,verify,message,producer,send,text,message,this,qos,settings,get,delivery,mode,this,qos,settings,get,priority,this,qos,settings,get,time,to,live,verify,message,producer,close,verify,this,session,close,verify,this,connection,close
JmsTemplateTests -> private void doTestSendDestination( 			boolean explicitDestination, boolean useDefaultDestination, 			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception;1496837955;Common method for testing a send method that uses the MessageCreator_callback but with different QOS options._@param ignoreQOS test using default QOS options.;private void doTestSendDestination(_			boolean explicitDestination, boolean useDefaultDestination,_			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception {__		JmsTemplate template = createTemplate()__		template.setConnectionFactory(this.connectionFactory)___		String destinationName = "testDestination"___		if (useDefaultDestination) {_			if (explicitDestination) {_				template.setDefaultDestination(this.queue)__			}_			else {_				template.setDefaultDestinationName(destinationName)__			}_		}_		if (disableIdAndTimestamp) {_			template.setMessageIdEnabled(false)__			template.setMessageTimestampEnabled(false)__		}__		MessageProducer messageProducer = mock(MessageProducer.class)__		TextMessage textMessage = mock(TextMessage.class)___		given(this.session.createProducer(this.queue)).willReturn(messageProducer)__		given(this.session.createTextMessage("just testing")).willReturn(textMessage)___		if (!ignoreQOS) {_			template.setQosSettings(this.qosSettings)__		}__		if (useDefaultDestination) {_			template.send(new MessageCreator() {_				@Override_				public Message createMessage(Session session) throws JMSException {_					return session.createTextMessage("just testing")__				}_			})__		}_		else {_			if (explicitDestination) {_				template.send(this.queue, new MessageCreator() {_					@Override_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_			else {_				template.send(destinationName, new MessageCreator() {_					@Override_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_		}__		if (useTransactedTemplate()) {_			verify(this.session).commit()__		}__		if (disableIdAndTimestamp) {_			verify(messageProducer).setDisableMessageID(true)__			verify(messageProducer).setDisableMessageTimestamp(true)__		}__		if (ignoreQOS) {_			verify(messageProducer).send(textMessage)__		}_		else {_			verify(messageProducer).send(textMessage, this.qosSettings.getDeliveryMode(),_					this.qosSettings.getPriority(), this.qosSettings.getTimeToLive())__		}_		verify(messageProducer).close()__		verify(this.session).close()__		verify(this.connection).close()__	};common,method,for,testing,a,send,method,that,uses,the,message,creator,callback,but,with,different,qos,options,param,ignore,qos,test,using,default,qos,options;private,void,do,test,send,destination,boolean,explicit,destination,boolean,use,default,destination,boolean,ignore,qos,boolean,disable,id,and,timestamp,throws,exception,jms,template,template,create,template,template,set,connection,factory,this,connection,factory,string,destination,name,test,destination,if,use,default,destination,if,explicit,destination,template,set,default,destination,this,queue,else,template,set,default,destination,name,destination,name,if,disable,id,and,timestamp,template,set,message,id,enabled,false,template,set,message,timestamp,enabled,false,message,producer,message,producer,mock,message,producer,class,text,message,text,message,mock,text,message,class,given,this,session,create,producer,this,queue,will,return,message,producer,given,this,session,create,text,message,just,testing,will,return,text,message,if,ignore,qos,template,set,qos,settings,this,qos,settings,if,use,default,destination,template,send,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,if,explicit,destination,template,send,this,queue,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,template,send,destination,name,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,if,use,transacted,template,verify,this,session,commit,if,disable,id,and,timestamp,verify,message,producer,set,disable,message,id,true,verify,message,producer,set,disable,message,timestamp,true,if,ignore,qos,verify,message,producer,send,text,message,else,verify,message,producer,send,text,message,this,qos,settings,get,delivery,mode,this,qos,settings,get,priority,this,qos,settings,get,time,to,live,verify,message,producer,close,verify,this,session,close,verify,this,connection,close
JmsTemplateTests -> private void doTestSendDestination( 			boolean explicitDestination, boolean useDefaultDestination, 			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception;1542613849;Common method for testing a send method that uses the MessageCreator_callback but with different QOS options._@param ignoreQOS test using default QOS options.;private void doTestSendDestination(_			boolean explicitDestination, boolean useDefaultDestination,_			boolean ignoreQOS, boolean disableIdAndTimestamp) throws Exception {__		JmsTemplate template = createTemplate()__		template.setConnectionFactory(this.connectionFactory)___		String destinationName = "testDestination"___		if (useDefaultDestination) {_			if (explicitDestination) {_				template.setDefaultDestination(this.queue)__			}_			else {_				template.setDefaultDestinationName(destinationName)__			}_		}_		if (disableIdAndTimestamp) {_			template.setMessageIdEnabled(false)__			template.setMessageTimestampEnabled(false)__		}__		MessageProducer messageProducer = mock(MessageProducer.class)__		TextMessage textMessage = mock(TextMessage.class)___		given(this.session.createProducer(this.queue)).willReturn(messageProducer)__		given(this.session.createTextMessage("just testing")).willReturn(textMessage)___		if (!ignoreQOS) {_			template.setQosSettings(this.qosSettings)__		}__		if (useDefaultDestination) {_			template.send(new MessageCreator() {_				@Override_				public Message createMessage(Session session) throws JMSException {_					return session.createTextMessage("just testing")__				}_			})__		}_		else {_			if (explicitDestination) {_				template.send(this.queue, new MessageCreator() {_					@Override_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_			else {_				template.send(destinationName, new MessageCreator() {_					@Override_					public Message createMessage(Session session) throws JMSException {_						return session.createTextMessage("just testing")__					}_				})__			}_		}__		if (useTransactedTemplate()) {_			verify(this.session).commit()__		}__		if (disableIdAndTimestamp) {_			verify(messageProducer).setDisableMessageID(true)__			verify(messageProducer).setDisableMessageTimestamp(true)__		}__		if (ignoreQOS) {_			verify(messageProducer).send(textMessage)__		}_		else {_			verify(messageProducer).send(textMessage, this.qosSettings.getDeliveryMode(),_					this.qosSettings.getPriority(), this.qosSettings.getTimeToLive())__		}_		verify(messageProducer).close()__		verify(this.session).close()__		verify(this.connection).close()__	};common,method,for,testing,a,send,method,that,uses,the,message,creator,callback,but,with,different,qos,options,param,ignore,qos,test,using,default,qos,options;private,void,do,test,send,destination,boolean,explicit,destination,boolean,use,default,destination,boolean,ignore,qos,boolean,disable,id,and,timestamp,throws,exception,jms,template,template,create,template,template,set,connection,factory,this,connection,factory,string,destination,name,test,destination,if,use,default,destination,if,explicit,destination,template,set,default,destination,this,queue,else,template,set,default,destination,name,destination,name,if,disable,id,and,timestamp,template,set,message,id,enabled,false,template,set,message,timestamp,enabled,false,message,producer,message,producer,mock,message,producer,class,text,message,text,message,mock,text,message,class,given,this,session,create,producer,this,queue,will,return,message,producer,given,this,session,create,text,message,just,testing,will,return,text,message,if,ignore,qos,template,set,qos,settings,this,qos,settings,if,use,default,destination,template,send,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,if,explicit,destination,template,send,this,queue,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,else,template,send,destination,name,new,message,creator,override,public,message,create,message,session,session,throws,jmsexception,return,session,create,text,message,just,testing,if,use,transacted,template,verify,this,session,commit,if,disable,id,and,timestamp,verify,message,producer,set,disable,message,id,true,verify,message,producer,set,disable,message,timestamp,true,if,ignore,qos,verify,message,producer,send,text,message,else,verify,message,producer,send,text,message,this,qos,settings,get,delivery,mode,this,qos,settings,get,priority,this,qos,settings,get,time,to,live,verify,message,producer,close,verify,this,session,close,verify,this,connection,close
JmsTemplateTests -> @Test 	public void testSendDestination() throws Exception;1362408075;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator);@Test_	public void testSendDestination() throws Exception {_		doTestSendDestination(true, false, true, false)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator;test,public,void,test,send,destination,throws,exception,do,test,send,destination,true,false,true,false
JmsTemplateTests -> @Test 	public void testSendDestination() throws Exception;1363208506;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator);@Test_	public void testSendDestination() throws Exception {_		doTestSendDestination(true, false, true, false)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator;test,public,void,test,send,destination,throws,exception,do,test,send,destination,true,false,true,false
JmsTemplateTests -> @Test 	public void testSendDestination() throws Exception;1398144713;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator);@Test_	public void testSendDestination() throws Exception {_		doTestSendDestination(true, false, true, false)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator;test,public,void,test,send,destination,throws,exception,do,test,send,destination,true,false,true,false
JmsTemplateTests -> @Test 	public void testSendDestination() throws Exception;1406555570;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator);@Test_	public void testSendDestination() throws Exception {_		doTestSendDestination(true, false, true, false)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator;test,public,void,test,send,destination,throws,exception,do,test,send,destination,true,false,true,false
JmsTemplateTests -> @Test 	public void testSendDestination() throws Exception;1413848647;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator);@Test_	public void testSendDestination() throws Exception {_		doTestSendDestination(true, false, true, false)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator;test,public,void,test,send,destination,throws,exception,do,test,send,destination,true,false,true,false
JmsTemplateTests -> @Test 	public void testSendDestination() throws Exception;1414619099;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator);@Test_	public void testSendDestination() throws Exception {_		doTestSendDestination(true, false, true, false)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator;test,public,void,test,send,destination,throws,exception,do,test,send,destination,true,false,true,false
JmsTemplateTests -> @Test 	public void testSendDestination() throws Exception;1492515173;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator);@Test_	public void testSendDestination() throws Exception {_		doTestSendDestination(true, false, true, false)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator;test,public,void,test,send,destination,throws,exception,do,test,send,destination,true,false,true,false
JmsTemplateTests -> @Test 	public void testSendDestination() throws Exception;1492515207;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator);@Test_	public void testSendDestination() throws Exception {_		doTestSendDestination(true, false, true, false)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator;test,public,void,test,send,destination,throws,exception,do,test,send,destination,true,false,true,false
JmsTemplateTests -> @Test 	public void testSendDestination() throws Exception;1496837955;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator);@Test_	public void testSendDestination() throws Exception {_		doTestSendDestination(true, false, true, false)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator;test,public,void,test,send,destination,throws,exception,do,test,send,destination,true,false,true,false
JmsTemplateTests -> @Test 	public void testSendDestination() throws Exception;1542613849;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator);@Test_	public void testSendDestination() throws Exception {_		doTestSendDestination(true, false, true, false)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator;test,public,void,test,send,destination,throws,exception,do,test,send,destination,true,false,true,false
JmsTemplateTests -> public void testSendDefaultDestination() throws Exception;1328020251;Test sending to the default destination.;public void testSendDefaultDestination() throws Exception {_		doTestSendDestination(true, true, true, true)__	};test,sending,to,the,default,destination;public,void,test,send,default,destination,throws,exception,do,test,send,destination,true,true,true,true
JmsTemplateTests -> public void testSendDefaultDestination() throws Exception;1356735495;Test sending to the default destination.;public void testSendDefaultDestination() throws Exception {_		doTestSendDestination(true, true, true, true)__	};test,sending,to,the,default,destination;public,void,test,send,default,destination,throws,exception,do,test,send,destination,true,true,true,true
JmsTemplateTests -> @Test 	public void testSendDestinationWithQOS() throws Exception;1362408075;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator) using QOS parameters.;@Test_	public void testSendDestinationWithQOS() throws Exception {_		doTestSendDestination(true, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator,using,qos,parameters;test,public,void,test,send,destination,with,qos,throws,exception,do,test,send,destination,true,false,false,true
JmsTemplateTests -> @Test 	public void testSendDestinationWithQOS() throws Exception;1363208506;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator) using QOS parameters.;@Test_	public void testSendDestinationWithQOS() throws Exception {_		doTestSendDestination(true, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator,using,qos,parameters;test,public,void,test,send,destination,with,qos,throws,exception,do,test,send,destination,true,false,false,true
JmsTemplateTests -> @Test 	public void testSendDestinationWithQOS() throws Exception;1398144713;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator) using QOS parameters.;@Test_	public void testSendDestinationWithQOS() throws Exception {_		doTestSendDestination(true, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator,using,qos,parameters;test,public,void,test,send,destination,with,qos,throws,exception,do,test,send,destination,true,false,false,true
JmsTemplateTests -> @Test 	public void testSendDestinationWithQOS() throws Exception;1406555570;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator) using QOS parameters.;@Test_	public void testSendDestinationWithQOS() throws Exception {_		doTestSendDestination(true, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator,using,qos,parameters;test,public,void,test,send,destination,with,qos,throws,exception,do,test,send,destination,true,false,false,true
JmsTemplateTests -> @Test 	public void testSendDestinationWithQOS() throws Exception;1413848647;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator) using QOS parameters.;@Test_	public void testSendDestinationWithQOS() throws Exception {_		doTestSendDestination(true, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator,using,qos,parameters;test,public,void,test,send,destination,with,qos,throws,exception,do,test,send,destination,true,false,false,true
JmsTemplateTests -> @Test 	public void testSendDestinationWithQOS() throws Exception;1414619099;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator) using QOS parameters.;@Test_	public void testSendDestinationWithQOS() throws Exception {_		doTestSendDestination(true, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator,using,qos,parameters;test,public,void,test,send,destination,with,qos,throws,exception,do,test,send,destination,true,false,false,true
JmsTemplateTests -> @Test 	public void testSendDestinationWithQOS() throws Exception;1492515173;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator) using QOS parameters.;@Test_	public void testSendDestinationWithQOS() throws Exception {_		doTestSendDestination(true, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator,using,qos,parameters;test,public,void,test,send,destination,with,qos,throws,exception,do,test,send,destination,true,false,false,true
JmsTemplateTests -> @Test 	public void testSendDestinationWithQOS() throws Exception;1492515207;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator) using QOS parameters.;@Test_	public void testSendDestinationWithQOS() throws Exception {_		doTestSendDestination(true, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator,using,qos,parameters;test,public,void,test,send,destination,with,qos,throws,exception,do,test,send,destination,true,false,false,true
JmsTemplateTests -> @Test 	public void testSendDestinationWithQOS() throws Exception;1496837955;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator) using QOS parameters.;@Test_	public void testSendDestinationWithQOS() throws Exception {_		doTestSendDestination(true, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator,using,qos,parameters;test,public,void,test,send,destination,with,qos,throws,exception,do,test,send,destination,true,false,false,true
JmsTemplateTests -> @Test 	public void testSendDestinationWithQOS() throws Exception;1542613849;Test sending to a destination using the method_send(Destination d, MessageCreator messageCreator) using QOS parameters.;@Test_	public void testSendDestinationWithQOS() throws Exception {_		doTestSendDestination(true, false, false, true)__	};test,sending,to,a,destination,using,the,method,send,destination,d,message,creator,message,creator,using,qos,parameters;test,public,void,test,send,destination,with,qos,throws,exception,do,test,send,destination,true,false,false,true
JmsTemplateTests -> @Test 	public void testSendDestinationName() throws Exception;1362408075;Test seding to a destination using the method_send(String d, MessageCreator messageCreator);@Test_	public void testSendDestinationName() throws Exception {_		doTestSendDestination(false, false, true, false)__	};test,seding,to,a,destination,using,the,method,send,string,d,message,creator,message,creator;test,public,void,test,send,destination,name,throws,exception,do,test,send,destination,false,false,true,false
JmsTemplateTests -> @Test 	public void testSendDestinationName() throws Exception;1363208506;Test seding to a destination using the method_send(String d, MessageCreator messageCreator);@Test_	public void testSendDestinationName() throws Exception {_		doTestSendDestination(false, false, true, false)__	};test,seding,to,a,destination,using,the,method,send,string,d,message,creator,message,creator;test,public,void,test,send,destination,name,throws,exception,do,test,send,destination,false,false,true,false
JmsTemplateTests -> @Test 	public void testSendDestinationName() throws Exception;1398144713;Test seding to a destination using the method_send(String d, MessageCreator messageCreator);@Test_	public void testSendDestinationName() throws Exception {_		doTestSendDestination(false, false, true, false)__	};test,seding,to,a,destination,using,the,method,send,string,d,message,creator,message,creator;test,public,void,test,send,destination,name,throws,exception,do,test,send,destination,false,false,true,false
JmsTemplateTests -> @Test 	public void testSendDestinationName() throws Exception;1406555570;Test seding to a destination using the method_send(String d, MessageCreator messageCreator);@Test_	public void testSendDestinationName() throws Exception {_		doTestSendDestination(false, false, true, false)__	};test,seding,to,a,destination,using,the,method,send,string,d,message,creator,message,creator;test,public,void,test,send,destination,name,throws,exception,do,test,send,destination,false,false,true,false
JmsTemplateTests -> @Test 	public void testSendDestinationName() throws Exception;1413848647;Test seding to a destination using the method_send(String d, MessageCreator messageCreator);@Test_	public void testSendDestinationName() throws Exception {_		doTestSendDestination(false, false, true, false)__	};test,seding,to,a,destination,using,the,method,send,string,d,message,creator,message,creator;test,public,void,test,send,destination,name,throws,exception,do,test,send,destination,false,false,true,false
JmsTemplateTests -> @Test 	public void testSendDestinationName() throws Exception;1414619099;Test seding to a destination using the method_send(String d, MessageCreator messageCreator);@Test_	public void testSendDestinationName() throws Exception {_		doTestSendDestination(false, false, true, false)__	};test,seding,to,a,destination,using,the,method,send,string,d,message,creator,message,creator;test,public,void,test,send,destination,name,throws,exception,do,test,send,destination,false,false,true,false
JmsTemplateTests -> @Test 	public void testSendDestinationName() throws Exception;1492515173;Test seding to a destination using the method_send(String d, MessageCreator messageCreator);@Test_	public void testSendDestinationName() throws Exception {_		doTestSendDestination(false, false, true, false)__	};test,seding,to,a,destination,using,the,method,send,string,d,message,creator,message,creator;test,public,void,test,send,destination,name,throws,exception,do,test,send,destination,false,false,true,false
JmsTemplateTests -> @Test 	public void testSendDestinationName() throws Exception;1492515207;Test seding to a destination using the method_send(String d, MessageCreator messageCreator);@Test_	public void testSendDestinationName() throws Exception {_		doTestSendDestination(false, false, true, false)__	};test,seding,to,a,destination,using,the,method,send,string,d,message,creator,message,creator;test,public,void,test,send,destination,name,throws,exception,do,test,send,destination,false,false,true,false
JmsTemplateTests -> @Test 	public void testSendDestinationName() throws Exception;1496837955;Test seding to a destination using the method_send(String d, MessageCreator messageCreator);@Test_	public void testSendDestinationName() throws Exception {_		doTestSendDestination(false, false, true, false)__	};test,seding,to,a,destination,using,the,method,send,string,d,message,creator,message,creator;test,public,void,test,send,destination,name,throws,exception,do,test,send,destination,false,false,true,false
JmsTemplateTests -> @Test 	public void testSendDestinationName() throws Exception;1542613849;Test sending to a destination using the method_send(String d, MessageCreator messageCreator);@Test_	public void testSendDestinationName() throws Exception {_		doTestSendDestination(false, false, true, false)__	};test,sending,to,a,destination,using,the,method,send,string,d,message,creator,message,creator;test,public,void,test,send,destination,name,throws,exception,do,test,send,destination,false,false,true,false
