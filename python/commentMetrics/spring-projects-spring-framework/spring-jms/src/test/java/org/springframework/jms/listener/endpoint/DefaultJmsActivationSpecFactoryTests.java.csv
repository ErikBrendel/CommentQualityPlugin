commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void activeMQResourceAdapterSetup() {     activationSpecConfig.setAcknowledgeMode(Session.SESSION_TRANSACTED).     JmsActivationSpecFactory activationSpecFactory = new DefaultJmsActivationSpecFactory().     StubActiveMQActivationSpec spec = (StubActiveMQActivationSpec) activationSpecFactory.createActivationSpec(new StubActiveMQResourceAdapter(), activationSpecConfig).     assertEquals(5, spec.getMaxSessions()).     assertEquals(3, spec.getMaxMessagesPerSessions()).     assertTrue(spec.isUseRAManagedTransaction()). }
false;public;0;17;;@Test public void webSphereResourceAdapterSetup() throws Exception {     Destination destination = new StubQueue().     DestinationResolver destinationResolver = mock(DestinationResolver.class).     given(destinationResolver.resolveDestinationName(null, "destinationname", false)).willReturn(destination).     DefaultJmsActivationSpecFactory activationSpecFactory = new DefaultJmsActivationSpecFactory().     activationSpecFactory.setDestinationResolver(destinationResolver).     StubWebSphereActivationSpecImpl spec = (StubWebSphereActivationSpecImpl) activationSpecFactory.createActivationSpec(new StubWebSphereResourceAdapterImpl(), activationSpecConfig).     assertEquals(destination, spec.getDestination()).     assertEquals(5, spec.getMaxConcurrency()).     assertEquals(3, spec.getMaxBatchSize()). }
false;public;1;3;;public void setMaxSessions(int maxSessions) {     this.maxSessions = maxSessions. }
false;public;1;3;;public void setMaxMessagesPerSessions(int maxMessagesPerSessions) {     this.maxMessagesPerSessions = maxMessagesPerSessions. }
false;public;0;3;;public int getMaxSessions() {     return maxSessions. }
false;public;0;3;;public int getMaxMessagesPerSessions() {     return maxMessagesPerSessions. }
false;public;0;3;;public String getDestination() {     return destination. }
false;public;1;3;;public void setDestination(String destination) {     this.destination = destination. }
false;public;0;3;;public boolean isUseRAManagedTransaction() {     return useRAManagedTransaction. }
false;public;1;3;;public void setUseRAManagedTransaction(boolean useRAManagedTransaction) {     this.useRAManagedTransaction = useRAManagedTransaction. }
false;public;1;3;;public void setDestination(Destination destination) {     this.destination = destination. }
false;public;0;3;;public Destination getDestination() {     return destination. }
false;public;0;3;;public int getMaxConcurrency() {     return maxConcurrency. }
false;public;1;3;;public void setMaxConcurrency(int maxConcurrency) {     this.maxConcurrency = maxConcurrency. }
false;public;0;3;;public int getMaxBatchSize() {     return maxBatchSize. }
false;public;1;3;;public void setMaxBatchSize(int maxBatchSize) {     this.maxBatchSize = maxBatchSize. }
