commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void onlyHandlesMessage() throws JMSException {     this.thrown.expect(IllegalArgumentException.class).     this.converter.toMessage(new Object(), mock(Session.class)). }
false;public;0;10;;@Test public void simpleObject() throws Exception {     Session session = mock(Session.class).     Serializable payload = mock(Serializable.class).     ObjectMessage jmsMessage = mock(ObjectMessage.class).     given(session.createObjectMessage(payload)).willReturn(jmsMessage).     this.converter.toMessage(MessageBuilder.withPayload(payload).build(), session).     verify(session).createObjectMessage(payload). }
false;public;0;8;;@Test public void customPayloadConverter() throws JMSException {     TextMessage jmsMsg = new StubTextMessage("1224").     this.converter.setPayloadConverter(new TestMessageConverter()).     Message<?> msg = (Message<?>) this.converter.fromMessage(jmsMsg).     assertEquals(1224L, msg.getPayload()). }
false;public;1;9;;@Override public Object fromMessage(javax.jms.Message message) throws JMSException, MessageConversionException {     if (this.called) {         throw new java.lang.IllegalStateException("Converter called twice").     }     this.called = true.     TextMessage textMessage = (TextMessage) message.     return Long.parseLong(textMessage.getText()). }
