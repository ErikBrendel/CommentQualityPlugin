commented;modifiers;parameterAmount;loc;comment;code
false;public,final;0;4;;@Before public final void setUp() throws Exception {     unmarshaller = createUnmarshaller(). }
false;protected,abstract;0;1;;protected abstract U createUnmarshaller() throws Exception.
false;protected,abstract;1;1;;protected abstract void testFlights(Object o).
false;protected,abstract;1;1;;protected abstract void testFlight(Object o).
false;public;0;16;;@Test public void unmarshalDomSource() throws Exception {     DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder().     Document document = builder.newDocument().     Element flightsElement = document.createElementNS("http://samples.springframework.org/flight", "tns:flights").     document.appendChild(flightsElement).     Element flightElement = document.createElementNS("http://samples.springframework.org/flight", "tns:flight").     flightsElement.appendChild(flightElement).     Element numberElement = document.createElementNS("http://samples.springframework.org/flight", "tns:number").     flightElement.appendChild(numberElement).     Text text = document.createTextNode("42").     numberElement.appendChild(text).     DOMSource source = new DOMSource(document).     Object flights = unmarshaller.unmarshal(source).     testFlights(flights). }
false;public;0;6;;@Test public void unmarshalStreamSourceReader() throws Exception {     StreamSource source = new StreamSource(new StringReader(INPUT_STRING)).     Object flights = unmarshaller.unmarshal(source).     testFlights(flights). }
false;public;0;6;;@Test public void unmarshalStreamSourceInputStream() throws Exception {     StreamSource source = new StreamSource(new ByteArrayInputStream(INPUT_STRING.getBytes("UTF-8"))).     Object flights = unmarshaller.unmarshal(source).     testFlights(flights). }
false;public;0;8;;@Test @SuppressWarnings("deprecation") public void unmarshalSAXSource() throws Exception {     XMLReader reader = org.xml.sax.helpers.XMLReaderFactory.createXMLReader().     SAXSource source = new SAXSource(reader, new InputSource(new StringReader(INPUT_STRING))).     Object flights = unmarshaller.unmarshal(source).     testFlights(flights). }
false;public;0;8;;@Test public void unmarshalStaxSourceXmlStreamReader() throws Exception {     XMLInputFactory inputFactory = XMLInputFactory.newInstance().     XMLStreamReader streamReader = inputFactory.createXMLStreamReader(new StringReader(INPUT_STRING)).     Source source = StaxUtils.createStaxSource(streamReader).     Object flights = unmarshaller.unmarshal(source).     testFlights(flights). }
false;public;0;8;;@Test public void unmarshalStaxSourceXmlEventReader() throws Exception {     XMLInputFactory inputFactory = XMLInputFactory.newInstance().     XMLEventReader eventReader = inputFactory.createXMLEventReader(new StringReader(INPUT_STRING)).     Source source = StaxUtils.createStaxSource(eventReader).     Object flights = unmarshaller.unmarshal(source).     testFlights(flights). }
false;public;0;8;;@Test public void unmarshalJaxp14StaxSourceXmlStreamReader() throws Exception {     XMLInputFactory inputFactory = XMLInputFactory.newInstance().     XMLStreamReader streamReader = inputFactory.createXMLStreamReader(new StringReader(INPUT_STRING)).     StAXSource source = new StAXSource(streamReader).     Object flights = unmarshaller.unmarshal(source).     testFlights(flights). }
false;public;0;8;;@Test public void unmarshalJaxp14StaxSourceXmlEventReader() throws Exception {     XMLInputFactory inputFactory = XMLInputFactory.newInstance().     XMLEventReader eventReader = inputFactory.createXMLEventReader(new StringReader(INPUT_STRING)).     StAXSource source = new StAXSource(eventReader).     Object flights = unmarshaller.unmarshal(source).     testFlights(flights). }
false;public;0;14;;@Test public void unmarshalPartialStaxSourceXmlStreamReader() throws Exception {     XMLInputFactory inputFactory = XMLInputFactory.newInstance().     XMLStreamReader streamReader = inputFactory.createXMLStreamReader(new StringReader(INPUT_STRING)).     // skip to flights     streamReader.nextTag().     assertEquals("Invalid element", new QName("http://samples.springframework.org/flight", "flights"), streamReader.getName()).     // skip to flight     streamReader.nextTag().     assertEquals("Invalid element", new QName("http://samples.springframework.org/flight", "flight"), streamReader.getName()).     Source source = StaxUtils.createStaxSource(streamReader).     Object flight = unmarshaller.unmarshal(source).     testFlight(flight). }
