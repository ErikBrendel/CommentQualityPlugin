commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/* 	java.net.URI 	javax.xml.datatype.XMLGregorianCalendarxs:anySimpleType 	javax.xml.datatype.Duration 	java.lang.Object 	java.awt.Image 	javax.activation.DataHandler 	javax.xml.transform.Source 	java.util.UUID 		 */ ;/* 	java.net.URI 	javax.xml.datatype.XMLGregorianCalendarxs:anySimpleType 	javax.xml.datatype.Duration 	java.lang.Object 	java.awt.Image 	javax.activation.DataHandler 	javax.xml.transform.Source 	java.util.UUID 		 */ public JAXBElement<String> standardClassString() {     return new JAXBElement<>(NAME, String.class, "42"). }
false;public;0;3;;public JAXBElement<BigInteger> standardClassBigInteger() {     return new JAXBElement<>(NAME, BigInteger.class, new BigInteger("42")). }
false;public;0;3;;public JAXBElement<BigDecimal> standardClassBigDecimal() {     return new JAXBElement<>(NAME, BigDecimal.class, new BigDecimal("42.0")). }
false;public;0;3;;public JAXBElement<Calendar> standardClassCalendar() {     return new JAXBElement<>(NAME, Calendar.class, Calendar.getInstance()). }
false;public;0;3;;public JAXBElement<GregorianCalendar> standardClassGregorianCalendar() {     return new JAXBElement<>(NAME, GregorianCalendar.class, (GregorianCalendar) Calendar.getInstance()). }
false;public;0;3;;public JAXBElement<Date> standardClassDate() {     return new JAXBElement<>(NAME, Date.class, new Date()). }
false;public;0;3;;public JAXBElement<QName> standardClassQName() {     return new JAXBElement<>(NAME, QName.class, NAME). }
false;public;0;3;;public JAXBElement<URI> standardClassURI() {     return new JAXBElement<>(NAME, URI.class, URI.create("http://springframework.org")). }
false;public;0;5;;public JAXBElement<XMLGregorianCalendar> standardClassXMLGregorianCalendar() throws DatatypeConfigurationException {     XMLGregorianCalendar calendar = factory.newXMLGregorianCalendar((GregorianCalendar) Calendar.getInstance()).     return new JAXBElement<>(NAME, XMLGregorianCalendar.class, calendar). }
false;public;0;4;;public JAXBElement<Duration> standardClassDuration() {     Duration duration = factory.newDuration(42000).     return new JAXBElement<>(NAME, Duration.class, duration). }
false;public;0;4;;public JAXBElement<Image> standardClassImage() throws IOException {     Image image = ImageIO.read(getClass().getResourceAsStream("spring-ws.png")).     return new JAXBElement<>(NAME, Image.class, image). }
false;public;0;5;;public JAXBElement<DataHandler> standardClassDataHandler() {     DataSource dataSource = new URLDataSource(getClass().getResource("spring-ws.png")).     DataHandler dataHandler = new DataHandler(dataSource).     return new JAXBElement<>(NAME, DataHandler.class, dataHandler). }
false;public;0;3;;/* The following should work according to the spec, but doesn't on the JAXB2 implementation including in JDK 1.6.0_17 	public JAXBElement<Source> standardClassSource() { 		StringReader reader = new StringReader("<foo/>"). 		return new JAXBElement<Source>(NAME, Source.class, new StreamSource(reader)). 	} 	*/ public JAXBElement<UUID> standardClassUUID() {     return new JAXBElement<>(NAME, UUID.class, UUID.randomUUID()). }
