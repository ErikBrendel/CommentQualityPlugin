# id;timestamp;commentText;codeText;commentWords;codeWords
ClassPathJaxb2TypeScanner -> public Class<?>[] scanPackages() throws UncategorizedMappingException;1367594604;Scan the packages for classes marked with JAXB2 annotations._@throws UncategorizedMappingException in case of errors;public Class<?>[] scanPackages() throws UncategorizedMappingException {_		try {_			List<Class<?>> jaxb2Classes = new ArrayList<Class<?>>()__			for (String packageToScan : this.packagesToScan) {_				String pattern = ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX +_						ClassUtils.convertClassNameToResourcePath(packageToScan) + RESOURCE_PATTERN__				Resource[] resources = this.resourcePatternResolver.getResources(pattern)__				MetadataReaderFactory metadataReaderFactory = new CachingMetadataReaderFactory(this.resourcePatternResolver)__				for (Resource resource : resources) {_					MetadataReader metadataReader = metadataReaderFactory.getMetadataReader(resource)__					if (isJaxb2Class(metadataReader, metadataReaderFactory)) {_						String className = metadataReader.getClassMetadata().getClassName()__						Class<?> jaxb2AnnotatedClass = this.resourcePatternResolver.getClassLoader().loadClass(className)__						jaxb2Classes.add(jaxb2AnnotatedClass)__					}_				}_			}_			return jaxb2Classes.toArray(new Class<?>[jaxb2Classes.size()])__		}_		catch (IOException ex) {_			throw new UncategorizedMappingException("Failed to scan classpath for unlisted classes", ex)__		}_		catch (ClassNotFoundException ex) {_			throw new UncategorizedMappingException("Failed to load annotated classes from classpath", ex)__		}_	};scan,the,packages,for,classes,marked,with,jaxb2,annotations,throws,uncategorized,mapping,exception,in,case,of,errors;public,class,scan,packages,throws,uncategorized,mapping,exception,try,list,class,jaxb2classes,new,array,list,class,for,string,package,to,scan,this,packages,to,scan,string,pattern,resource,pattern,resolver,class,utils,convert,class,name,to,resource,path,package,to,scan,resource,resources,this,resource,pattern,resolver,get,resources,pattern,metadata,reader,factory,metadata,reader,factory,new,caching,metadata,reader,factory,this,resource,pattern,resolver,for,resource,resource,resources,metadata,reader,metadata,reader,metadata,reader,factory,get,metadata,reader,resource,if,is,jaxb2class,metadata,reader,metadata,reader,factory,string,class,name,metadata,reader,get,class,metadata,get,class,name,class,jaxb2annotated,class,this,resource,pattern,resolver,get,class,loader,load,class,class,name,jaxb2classes,add,jaxb2annotated,class,return,jaxb2classes,to,array,new,class,jaxb2classes,size,catch,ioexception,ex,throw,new,uncategorized,mapping,exception,failed,to,scan,classpath,for,unlisted,classes,ex,catch,class,not,found,exception,ex,throw,new,uncategorized,mapping,exception,failed,to,load,annotated,classes,from,classpath,ex
ClassPathJaxb2TypeScanner -> public Class<?>[] scanPackages() throws UncategorizedMappingException;1375122324;Scan the packages for classes marked with JAXB2 annotations._@throws UncategorizedMappingException in case of errors;public Class<?>[] scanPackages() throws UncategorizedMappingException {_		try {_			List<Class<?>> jaxb2Classes = new ArrayList<Class<?>>()__			for (String packageToScan : this.packagesToScan) {_				String pattern = ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX +_						ClassUtils.convertClassNameToResourcePath(packageToScan) + RESOURCE_PATTERN__				Resource[] resources = this.resourcePatternResolver.getResources(pattern)__				MetadataReaderFactory metadataReaderFactory = new CachingMetadataReaderFactory(this.resourcePatternResolver)__				for (Resource resource : resources) {_					MetadataReader metadataReader = metadataReaderFactory.getMetadataReader(resource)__					if (isJaxb2Class(metadataReader, metadataReaderFactory)) {_						String className = metadataReader.getClassMetadata().getClassName()__						Class<?> jaxb2AnnotatedClass = this.resourcePatternResolver.getClassLoader().loadClass(className)__						jaxb2Classes.add(jaxb2AnnotatedClass)__					}_				}_			}_			return jaxb2Classes.toArray(new Class<?>[jaxb2Classes.size()])__		}_		catch (IOException ex) {_			throw new UncategorizedMappingException("Failed to scan classpath for unlisted classes", ex)__		}_		catch (ClassNotFoundException ex) {_			throw new UncategorizedMappingException("Failed to load annotated classes from classpath", ex)__		}_	};scan,the,packages,for,classes,marked,with,jaxb2,annotations,throws,uncategorized,mapping,exception,in,case,of,errors;public,class,scan,packages,throws,uncategorized,mapping,exception,try,list,class,jaxb2classes,new,array,list,class,for,string,package,to,scan,this,packages,to,scan,string,pattern,resource,pattern,resolver,class,utils,convert,class,name,to,resource,path,package,to,scan,resource,resources,this,resource,pattern,resolver,get,resources,pattern,metadata,reader,factory,metadata,reader,factory,new,caching,metadata,reader,factory,this,resource,pattern,resolver,for,resource,resource,resources,metadata,reader,metadata,reader,metadata,reader,factory,get,metadata,reader,resource,if,is,jaxb2class,metadata,reader,metadata,reader,factory,string,class,name,metadata,reader,get,class,metadata,get,class,name,class,jaxb2annotated,class,this,resource,pattern,resolver,get,class,loader,load,class,class,name,jaxb2classes,add,jaxb2annotated,class,return,jaxb2classes,to,array,new,class,jaxb2classes,size,catch,ioexception,ex,throw,new,uncategorized,mapping,exception,failed,to,scan,classpath,for,unlisted,classes,ex,catch,class,not,found,exception,ex,throw,new,uncategorized,mapping,exception,failed,to,load,annotated,classes,from,classpath,ex
ClassPathJaxb2TypeScanner -> public Class<?>[] scanPackages() throws UncategorizedMappingException;1413848647;Scan the packages for classes marked with JAXB2 annotations._@throws UncategorizedMappingException in case of errors;public Class<?>[] scanPackages() throws UncategorizedMappingException {_		try {_			List<Class<?>> jaxb2Classes = new ArrayList<Class<?>>()__			for (String packageToScan : this.packagesToScan) {_				String pattern = ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX +_						ClassUtils.convertClassNameToResourcePath(packageToScan) + RESOURCE_PATTERN__				Resource[] resources = this.resourcePatternResolver.getResources(pattern)__				MetadataReaderFactory metadataReaderFactory = new CachingMetadataReaderFactory(this.resourcePatternResolver)__				for (Resource resource : resources) {_					MetadataReader metadataReader = metadataReaderFactory.getMetadataReader(resource)__					if (isJaxb2Class(metadataReader, metadataReaderFactory)) {_						String className = metadataReader.getClassMetadata().getClassName()__						Class<?> jaxb2AnnotatedClass = this.resourcePatternResolver.getClassLoader().loadClass(className)__						jaxb2Classes.add(jaxb2AnnotatedClass)__					}_				}_			}_			return jaxb2Classes.toArray(new Class<?>[jaxb2Classes.size()])__		}_		catch (IOException ex) {_			throw new UncategorizedMappingException("Failed to scan classpath for unlisted classes", ex)__		}_		catch (ClassNotFoundException ex) {_			throw new UncategorizedMappingException("Failed to load annotated classes from classpath", ex)__		}_	};scan,the,packages,for,classes,marked,with,jaxb2,annotations,throws,uncategorized,mapping,exception,in,case,of,errors;public,class,scan,packages,throws,uncategorized,mapping,exception,try,list,class,jaxb2classes,new,array,list,class,for,string,package,to,scan,this,packages,to,scan,string,pattern,resource,pattern,resolver,class,utils,convert,class,name,to,resource,path,package,to,scan,resource,resources,this,resource,pattern,resolver,get,resources,pattern,metadata,reader,factory,metadata,reader,factory,new,caching,metadata,reader,factory,this,resource,pattern,resolver,for,resource,resource,resources,metadata,reader,metadata,reader,metadata,reader,factory,get,metadata,reader,resource,if,is,jaxb2class,metadata,reader,metadata,reader,factory,string,class,name,metadata,reader,get,class,metadata,get,class,name,class,jaxb2annotated,class,this,resource,pattern,resolver,get,class,loader,load,class,class,name,jaxb2classes,add,jaxb2annotated,class,return,jaxb2classes,to,array,new,class,jaxb2classes,size,catch,ioexception,ex,throw,new,uncategorized,mapping,exception,failed,to,scan,classpath,for,unlisted,classes,ex,catch,class,not,found,exception,ex,throw,new,uncategorized,mapping,exception,failed,to,load,annotated,classes,from,classpath,ex
ClassPathJaxb2TypeScanner -> public Class<?>[] scanPackages() throws UncategorizedMappingException;1436792393;Scan the packages for classes marked with JAXB2 annotations._@throws UncategorizedMappingException in case of errors;public Class<?>[] scanPackages() throws UncategorizedMappingException {_		try {_			List<Class<?>> jaxb2Classes = new ArrayList<Class<?>>()__			for (String packageToScan : this.packagesToScan) {_				String pattern = ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX +_						ClassUtils.convertClassNameToResourcePath(packageToScan) + RESOURCE_PATTERN__				Resource[] resources = this.resourcePatternResolver.getResources(pattern)__				MetadataReaderFactory metadataReaderFactory = new CachingMetadataReaderFactory(this.resourcePatternResolver)__				for (Resource resource : resources) {_					MetadataReader metadataReader = metadataReaderFactory.getMetadataReader(resource)__					if (isJaxb2Class(metadataReader, metadataReaderFactory)) {_						String className = metadataReader.getClassMetadata().getClassName()__						Class<?> jaxb2AnnotatedClass = this.resourcePatternResolver.getClassLoader().loadClass(className)__						jaxb2Classes.add(jaxb2AnnotatedClass)__					}_				}_			}_			return jaxb2Classes.toArray(new Class<?>[jaxb2Classes.size()])__		}_		catch (IOException ex) {_			throw new UncategorizedMappingException("Failed to scan classpath for unlisted classes", ex)__		}_		catch (ClassNotFoundException ex) {_			throw new UncategorizedMappingException("Failed to load annotated classes from classpath", ex)__		}_	};scan,the,packages,for,classes,marked,with,jaxb2,annotations,throws,uncategorized,mapping,exception,in,case,of,errors;public,class,scan,packages,throws,uncategorized,mapping,exception,try,list,class,jaxb2classes,new,array,list,class,for,string,package,to,scan,this,packages,to,scan,string,pattern,resource,pattern,resolver,class,utils,convert,class,name,to,resource,path,package,to,scan,resource,resources,this,resource,pattern,resolver,get,resources,pattern,metadata,reader,factory,metadata,reader,factory,new,caching,metadata,reader,factory,this,resource,pattern,resolver,for,resource,resource,resources,metadata,reader,metadata,reader,metadata,reader,factory,get,metadata,reader,resource,if,is,jaxb2class,metadata,reader,metadata,reader,factory,string,class,name,metadata,reader,get,class,metadata,get,class,name,class,jaxb2annotated,class,this,resource,pattern,resolver,get,class,loader,load,class,class,name,jaxb2classes,add,jaxb2annotated,class,return,jaxb2classes,to,array,new,class,jaxb2classes,size,catch,ioexception,ex,throw,new,uncategorized,mapping,exception,failed,to,scan,classpath,for,unlisted,classes,ex,catch,class,not,found,exception,ex,throw,new,uncategorized,mapping,exception,failed,to,load,annotated,classes,from,classpath,ex
ClassPathJaxb2TypeScanner -> public Class<?>[] scanPackages() throws UncategorizedMappingException;1467730834;Scan the packages for classes marked with JAXB2 annotations._@throws UncategorizedMappingException in case of errors;public Class<?>[] scanPackages() throws UncategorizedMappingException {_		try {_			List<Class<?>> jaxb2Classes = new ArrayList<>()__			for (String packageToScan : this.packagesToScan) {_				String pattern = ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX +_						ClassUtils.convertClassNameToResourcePath(packageToScan) + RESOURCE_PATTERN__				Resource[] resources = this.resourcePatternResolver.getResources(pattern)__				MetadataReaderFactory metadataReaderFactory = new CachingMetadataReaderFactory(this.resourcePatternResolver)__				for (Resource resource : resources) {_					MetadataReader metadataReader = metadataReaderFactory.getMetadataReader(resource)__					if (isJaxb2Class(metadataReader, metadataReaderFactory)) {_						String className = metadataReader.getClassMetadata().getClassName()__						Class<?> jaxb2AnnotatedClass = this.resourcePatternResolver.getClassLoader().loadClass(className)__						jaxb2Classes.add(jaxb2AnnotatedClass)__					}_				}_			}_			return jaxb2Classes.toArray(new Class<?>[jaxb2Classes.size()])__		}_		catch (IOException ex) {_			throw new UncategorizedMappingException("Failed to scan classpath for unlisted classes", ex)__		}_		catch (ClassNotFoundException ex) {_			throw new UncategorizedMappingException("Failed to load annotated classes from classpath", ex)__		}_	};scan,the,packages,for,classes,marked,with,jaxb2,annotations,throws,uncategorized,mapping,exception,in,case,of,errors;public,class,scan,packages,throws,uncategorized,mapping,exception,try,list,class,jaxb2classes,new,array,list,for,string,package,to,scan,this,packages,to,scan,string,pattern,resource,pattern,resolver,class,utils,convert,class,name,to,resource,path,package,to,scan,resource,resources,this,resource,pattern,resolver,get,resources,pattern,metadata,reader,factory,metadata,reader,factory,new,caching,metadata,reader,factory,this,resource,pattern,resolver,for,resource,resource,resources,metadata,reader,metadata,reader,metadata,reader,factory,get,metadata,reader,resource,if,is,jaxb2class,metadata,reader,metadata,reader,factory,string,class,name,metadata,reader,get,class,metadata,get,class,name,class,jaxb2annotated,class,this,resource,pattern,resolver,get,class,loader,load,class,class,name,jaxb2classes,add,jaxb2annotated,class,return,jaxb2classes,to,array,new,class,jaxb2classes,size,catch,ioexception,ex,throw,new,uncategorized,mapping,exception,failed,to,scan,classpath,for,unlisted,classes,ex,catch,class,not,found,exception,ex,throw,new,uncategorized,mapping,exception,failed,to,load,annotated,classes,from,classpath,ex
ClassPathJaxb2TypeScanner -> public Class<?>[] scanPackages() throws UncategorizedMappingException;1496837955;Scan the packages for classes marked with JAXB2 annotations._@throws UncategorizedMappingException in case of errors;public Class<?>[] scanPackages() throws UncategorizedMappingException {_		try {_			List<Class<?>> jaxb2Classes = new ArrayList<>()__			for (String packageToScan : this.packagesToScan) {_				String pattern = ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX +_						ClassUtils.convertClassNameToResourcePath(packageToScan) + RESOURCE_PATTERN__				Resource[] resources = this.resourcePatternResolver.getResources(pattern)__				MetadataReaderFactory metadataReaderFactory = new CachingMetadataReaderFactory(this.resourcePatternResolver)__				for (Resource resource : resources) {_					MetadataReader metadataReader = metadataReaderFactory.getMetadataReader(resource)__					if (isJaxb2Class(metadataReader, metadataReaderFactory)) {_						String className = metadataReader.getClassMetadata().getClassName()__						Class<?> jaxb2AnnotatedClass =_								ClassUtils.forName(className, this.resourcePatternResolver.getClassLoader())__						jaxb2Classes.add(jaxb2AnnotatedClass)__					}_				}_			}_			return jaxb2Classes.toArray(new Class<?>[jaxb2Classes.size()])__		}_		catch (IOException ex) {_			throw new UncategorizedMappingException("Failed to scan classpath for unlisted classes", ex)__		}_		catch (ClassNotFoundException ex) {_			throw new UncategorizedMappingException("Failed to load annotated classes from classpath", ex)__		}_	};scan,the,packages,for,classes,marked,with,jaxb2,annotations,throws,uncategorized,mapping,exception,in,case,of,errors;public,class,scan,packages,throws,uncategorized,mapping,exception,try,list,class,jaxb2classes,new,array,list,for,string,package,to,scan,this,packages,to,scan,string,pattern,resource,pattern,resolver,class,utils,convert,class,name,to,resource,path,package,to,scan,resource,resources,this,resource,pattern,resolver,get,resources,pattern,metadata,reader,factory,metadata,reader,factory,new,caching,metadata,reader,factory,this,resource,pattern,resolver,for,resource,resource,resources,metadata,reader,metadata,reader,metadata,reader,factory,get,metadata,reader,resource,if,is,jaxb2class,metadata,reader,metadata,reader,factory,string,class,name,metadata,reader,get,class,metadata,get,class,name,class,jaxb2annotated,class,class,utils,for,name,class,name,this,resource,pattern,resolver,get,class,loader,jaxb2classes,add,jaxb2annotated,class,return,jaxb2classes,to,array,new,class,jaxb2classes,size,catch,ioexception,ex,throw,new,uncategorized,mapping,exception,failed,to,scan,classpath,for,unlisted,classes,ex,catch,class,not,found,exception,ex,throw,new,uncategorized,mapping,exception,failed,to,load,annotated,classes,from,classpath,ex
ClassPathJaxb2TypeScanner -> public Class<?>[] scanPackages() throws UncategorizedMappingException;1498780456;Scan the packages for classes marked with JAXB2 annotations._@throws UncategorizedMappingException in case of errors;public Class<?>[] scanPackages() throws UncategorizedMappingException {_		try {_			List<Class<?>> jaxb2Classes = new ArrayList<>()__			for (String packageToScan : this.packagesToScan) {_				String pattern = ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX +_						ClassUtils.convertClassNameToResourcePath(packageToScan) + RESOURCE_PATTERN__				Resource[] resources = this.resourcePatternResolver.getResources(pattern)__				MetadataReaderFactory metadataReaderFactory = new CachingMetadataReaderFactory(this.resourcePatternResolver)__				for (Resource resource : resources) {_					MetadataReader metadataReader = metadataReaderFactory.getMetadataReader(resource)__					if (isJaxb2Class(metadataReader, metadataReaderFactory)) {_						String className = metadataReader.getClassMetadata().getClassName()__						Class<?> jaxb2AnnotatedClass =_								ClassUtils.forName(className, this.resourcePatternResolver.getClassLoader())__						jaxb2Classes.add(jaxb2AnnotatedClass)__					}_				}_			}_			return jaxb2Classes.toArray(new Class<?>[jaxb2Classes.size()])__		}_		catch (IOException ex) {_			throw new UncategorizedMappingException("Failed to scan classpath for unlisted classes", ex)__		}_		catch (ClassNotFoundException ex) {_			throw new UncategorizedMappingException("Failed to load annotated classes from classpath", ex)__		}_	};scan,the,packages,for,classes,marked,with,jaxb2,annotations,throws,uncategorized,mapping,exception,in,case,of,errors;public,class,scan,packages,throws,uncategorized,mapping,exception,try,list,class,jaxb2classes,new,array,list,for,string,package,to,scan,this,packages,to,scan,string,pattern,resource,pattern,resolver,class,utils,convert,class,name,to,resource,path,package,to,scan,resource,resources,this,resource,pattern,resolver,get,resources,pattern,metadata,reader,factory,metadata,reader,factory,new,caching,metadata,reader,factory,this,resource,pattern,resolver,for,resource,resource,resources,metadata,reader,metadata,reader,metadata,reader,factory,get,metadata,reader,resource,if,is,jaxb2class,metadata,reader,metadata,reader,factory,string,class,name,metadata,reader,get,class,metadata,get,class,name,class,jaxb2annotated,class,class,utils,for,name,class,name,this,resource,pattern,resolver,get,class,loader,jaxb2classes,add,jaxb2annotated,class,return,jaxb2classes,to,array,new,class,jaxb2classes,size,catch,ioexception,ex,throw,new,uncategorized,mapping,exception,failed,to,scan,classpath,for,unlisted,classes,ex,catch,class,not,found,exception,ex,throw,new,uncategorized,mapping,exception,failed,to,load,annotated,classes,from,classpath,ex
ClassPathJaxb2TypeScanner -> public Class<?>[] scanPackages() throws UncategorizedMappingException;1519295386;Scan the packages for classes marked with JAXB2 annotations._@throws UncategorizedMappingException in case of errors;public Class<?>[] scanPackages() throws UncategorizedMappingException {_		try {_			List<Class<?>> jaxb2Classes = new ArrayList<>()__			for (String packageToScan : this.packagesToScan) {_				String pattern = ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX +_						ClassUtils.convertClassNameToResourcePath(packageToScan) + RESOURCE_PATTERN__				Resource[] resources = this.resourcePatternResolver.getResources(pattern)__				MetadataReaderFactory metadataReaderFactory = new CachingMetadataReaderFactory(this.resourcePatternResolver)__				for (Resource resource : resources) {_					MetadataReader metadataReader = metadataReaderFactory.getMetadataReader(resource)__					if (isJaxb2Class(metadataReader, metadataReaderFactory)) {_						String className = metadataReader.getClassMetadata().getClassName()__						Class<?> jaxb2AnnotatedClass =_								ClassUtils.forName(className, this.resourcePatternResolver.getClassLoader())__						jaxb2Classes.add(jaxb2AnnotatedClass)__					}_				}_			}_			return ClassUtils.toClassArray(jaxb2Classes)__		}_		catch (IOException ex) {_			throw new UncategorizedMappingException("Failed to scan classpath for unlisted classes", ex)__		}_		catch (ClassNotFoundException ex) {_			throw new UncategorizedMappingException("Failed to load annotated classes from classpath", ex)__		}_	};scan,the,packages,for,classes,marked,with,jaxb2,annotations,throws,uncategorized,mapping,exception,in,case,of,errors;public,class,scan,packages,throws,uncategorized,mapping,exception,try,list,class,jaxb2classes,new,array,list,for,string,package,to,scan,this,packages,to,scan,string,pattern,resource,pattern,resolver,class,utils,convert,class,name,to,resource,path,package,to,scan,resource,resources,this,resource,pattern,resolver,get,resources,pattern,metadata,reader,factory,metadata,reader,factory,new,caching,metadata,reader,factory,this,resource,pattern,resolver,for,resource,resource,resources,metadata,reader,metadata,reader,metadata,reader,factory,get,metadata,reader,resource,if,is,jaxb2class,metadata,reader,metadata,reader,factory,string,class,name,metadata,reader,get,class,metadata,get,class,name,class,jaxb2annotated,class,class,utils,for,name,class,name,this,resource,pattern,resolver,get,class,loader,jaxb2classes,add,jaxb2annotated,class,return,class,utils,to,class,array,jaxb2classes,catch,ioexception,ex,throw,new,uncategorized,mapping,exception,failed,to,scan,classpath,for,unlisted,classes,ex,catch,class,not,found,exception,ex,throw,new,uncategorized,mapping,exception,failed,to,load,annotated,classes,from,classpath,ex
