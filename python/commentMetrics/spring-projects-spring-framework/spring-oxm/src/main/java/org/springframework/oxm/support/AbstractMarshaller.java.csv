# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractMarshaller -> @Override 	public final Object unmarshal(Source source) throws IOException, XmlMappingException;1356735495;Unmarshals the given provided {@code javax.xml.transform.Source} into an object graph._<p>This implementation inspects the given result, and calls {@code unmarshalDomSource},_{@code unmarshalSaxSource}, or {@code unmarshalStreamSource}._@param source the source to marshal from_@return the object graph_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if {@code source} is neither a {@code DOMSource},_a {@code SAXSource}, nor a {@code StreamSource}_@see #unmarshalDomSource(javax.xml.transform.dom.DOMSource)_@see #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)_@see #unmarshalStreamSource(javax.xml.transform.stream.StreamSource);@Override_	public final Object unmarshal(Source source) throws IOException, XmlMappingException {_		if (source instanceof DOMSource) {_			return unmarshalDomSource((DOMSource) source)__		}_		else if (StaxUtils.isStaxSource(source)) {_			return unmarshalStaxSource(source)__		}_		else if (source instanceof SAXSource) {_			return unmarshalSaxSource((SAXSource) source)__		}_		else if (source instanceof StreamSource) {_			return unmarshalStreamSource((StreamSource) source)__		}_		else {_			throw new IllegalArgumentException("Unknown Source type: " + source.getClass())__		}_	};unmarshals,the,given,provided,code,javax,xml,transform,source,into,an,object,graph,p,this,implementation,inspects,the,given,result,and,calls,code,unmarshal,dom,source,code,unmarshal,sax,source,or,code,unmarshal,stream,source,param,source,the,source,to,marshal,from,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,code,source,is,neither,a,code,domsource,a,code,saxsource,nor,a,code,stream,source,see,unmarshal,dom,source,javax,xml,transform,dom,domsource,see,unmarshal,sax,source,javax,xml,transform,sax,saxsource,see,unmarshal,stream,source,javax,xml,transform,stream,stream,source;override,public,final,object,unmarshal,source,source,throws,ioexception,xml,mapping,exception,if,source,instanceof,domsource,return,unmarshal,dom,source,domsource,source,else,if,stax,utils,is,stax,source,source,return,unmarshal,stax,source,source,else,if,source,instanceof,saxsource,return,unmarshal,sax,source,saxsource,source,else,if,source,instanceof,stream,source,return,unmarshal,stream,source,stream,source,source,else,throw,new,illegal,argument,exception,unknown,source,type,source,get,class
AbstractMarshaller -> @Override 	public final Object unmarshal(Source source) throws IOException, XmlMappingException;1368482696;Unmarshals the given provided {@code javax.xml.transform.Source} into an object graph._<p>This implementation inspects the given result, and calls {@code unmarshalDomSource},_{@code unmarshalSaxSource}, or {@code unmarshalStreamSource}._@param source the source to marshal from_@return the object graph_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if {@code source} is neither a {@code DOMSource},_a {@code SAXSource}, nor a {@code StreamSource}_@see #unmarshalDomSource(javax.xml.transform.dom.DOMSource)_@see #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)_@see #unmarshalStreamSource(javax.xml.transform.stream.StreamSource);@Override_	public final Object unmarshal(Source source) throws IOException, XmlMappingException {_		if (source instanceof DOMSource) {_			return unmarshalDomSource((DOMSource) source)__		}_		else if (StaxUtils.isStaxSource(source)) {_			return unmarshalStaxSource(source)__		}_		else if (source instanceof SAXSource) {_			return unmarshalSaxSource((SAXSource) source)__		}_		else if (source instanceof StreamSource) {_			return unmarshalStreamSource((StreamSource) source)__		}_		else {_			throw new IllegalArgumentException("Unknown Source type: " + source.getClass())__		}_	};unmarshals,the,given,provided,code,javax,xml,transform,source,into,an,object,graph,p,this,implementation,inspects,the,given,result,and,calls,code,unmarshal,dom,source,code,unmarshal,sax,source,or,code,unmarshal,stream,source,param,source,the,source,to,marshal,from,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,code,source,is,neither,a,code,domsource,a,code,saxsource,nor,a,code,stream,source,see,unmarshal,dom,source,javax,xml,transform,dom,domsource,see,unmarshal,sax,source,javax,xml,transform,sax,saxsource,see,unmarshal,stream,source,javax,xml,transform,stream,stream,source;override,public,final,object,unmarshal,source,source,throws,ioexception,xml,mapping,exception,if,source,instanceof,domsource,return,unmarshal,dom,source,domsource,source,else,if,stax,utils,is,stax,source,source,return,unmarshal,stax,source,source,else,if,source,instanceof,saxsource,return,unmarshal,sax,source,saxsource,source,else,if,source,instanceof,stream,source,return,unmarshal,stream,source,stream,source,source,else,throw,new,illegal,argument,exception,unknown,source,type,source,get,class
AbstractMarshaller -> @Override 	public final Object unmarshal(Source source) throws IOException, XmlMappingException;1376041400;Unmarshals the given provided {@code javax.xml.transform.Source} into an object graph._<p>This implementation inspects the given result, and calls {@code unmarshalDomSource},_{@code unmarshalSaxSource}, or {@code unmarshalStreamSource}._@param source the source to marshal from_@return the object graph_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if {@code source} is neither a {@code DOMSource},_a {@code SAXSource}, nor a {@code StreamSource}_@see #unmarshalDomSource(javax.xml.transform.dom.DOMSource)_@see #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)_@see #unmarshalStreamSource(javax.xml.transform.stream.StreamSource);@Override_	public final Object unmarshal(Source source) throws IOException, XmlMappingException {_		if (source instanceof DOMSource) {_			return unmarshalDomSource((DOMSource) source)__		}_		else if (StaxUtils.isStaxSource(source)) {_			return unmarshalStaxSource(source)__		}_		else if (source instanceof SAXSource) {_			return unmarshalSaxSource((SAXSource) source)__		}_		else if (source instanceof StreamSource) {_			return unmarshalStreamSource((StreamSource) source)__		}_		else {_			throw new IllegalArgumentException("Unknown Source type: " + source.getClass())__		}_	};unmarshals,the,given,provided,code,javax,xml,transform,source,into,an,object,graph,p,this,implementation,inspects,the,given,result,and,calls,code,unmarshal,dom,source,code,unmarshal,sax,source,or,code,unmarshal,stream,source,param,source,the,source,to,marshal,from,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,code,source,is,neither,a,code,domsource,a,code,saxsource,nor,a,code,stream,source,see,unmarshal,dom,source,javax,xml,transform,dom,domsource,see,unmarshal,sax,source,javax,xml,transform,sax,saxsource,see,unmarshal,stream,source,javax,xml,transform,stream,stream,source;override,public,final,object,unmarshal,source,source,throws,ioexception,xml,mapping,exception,if,source,instanceof,domsource,return,unmarshal,dom,source,domsource,source,else,if,stax,utils,is,stax,source,source,return,unmarshal,stax,source,source,else,if,source,instanceof,saxsource,return,unmarshal,sax,source,saxsource,source,else,if,source,instanceof,stream,source,return,unmarshal,stream,source,stream,source,source,else,throw,new,illegal,argument,exception,unknown,source,type,source,get,class
AbstractMarshaller -> @Override 	public final Object unmarshal(Source source) throws IOException, XmlMappingException;1392767670;Unmarshals the given provided {@code javax.xml.transform.Source} into an object graph._<p>This implementation inspects the given result, and calls {@code unmarshalDomSource},_{@code unmarshalSaxSource}, or {@code unmarshalStreamSource}._@param source the source to marshal from_@return the object graph_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if {@code source} is neither a {@code DOMSource},_a {@code SAXSource}, nor a {@code StreamSource}_@see #unmarshalDomSource(javax.xml.transform.dom.DOMSource)_@see #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)_@see #unmarshalStreamSource(javax.xml.transform.stream.StreamSource);@Override_	public final Object unmarshal(Source source) throws IOException, XmlMappingException {_		if (source instanceof DOMSource) {_			return unmarshalDomSource((DOMSource) source)__		}_		else if (StaxUtils.isStaxSource(source)) {_			return unmarshalStaxSource(source)__		}_		else if (source instanceof SAXSource) {_			return unmarshalSaxSource((SAXSource) source)__		}_		else if (source instanceof StreamSource) {_			return unmarshalStreamSourceNoExternalEntitities((StreamSource) source)__		}_		else {_			throw new IllegalArgumentException("Unknown Source type: " + source.getClass())__		}_	};unmarshals,the,given,provided,code,javax,xml,transform,source,into,an,object,graph,p,this,implementation,inspects,the,given,result,and,calls,code,unmarshal,dom,source,code,unmarshal,sax,source,or,code,unmarshal,stream,source,param,source,the,source,to,marshal,from,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,code,source,is,neither,a,code,domsource,a,code,saxsource,nor,a,code,stream,source,see,unmarshal,dom,source,javax,xml,transform,dom,domsource,see,unmarshal,sax,source,javax,xml,transform,sax,saxsource,see,unmarshal,stream,source,javax,xml,transform,stream,stream,source;override,public,final,object,unmarshal,source,source,throws,ioexception,xml,mapping,exception,if,source,instanceof,domsource,return,unmarshal,dom,source,domsource,source,else,if,stax,utils,is,stax,source,source,return,unmarshal,stax,source,source,else,if,source,instanceof,saxsource,return,unmarshal,sax,source,saxsource,source,else,if,source,instanceof,stream,source,return,unmarshal,stream,source,no,external,entitities,stream,source,source,else,throw,new,illegal,argument,exception,unknown,source,type,source,get,class
AbstractMarshaller -> @Override 	public final Object unmarshal(Source source) throws IOException, XmlMappingException;1397058176;Unmarshals the given provided {@code javax.xml.transform.Source} into an object graph._<p>This implementation inspects the given result, and calls {@code unmarshalDomSource},_{@code unmarshalSaxSource}, or {@code unmarshalStreamSource}._@param source the source to marshal from_@return the object graph_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if {@code source} is neither a {@code DOMSource},_a {@code SAXSource}, nor a {@code StreamSource}_@see #unmarshalDomSource(javax.xml.transform.dom.DOMSource)_@see #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)_@see #unmarshalStreamSource(javax.xml.transform.stream.StreamSource);@Override_	public final Object unmarshal(Source source) throws IOException, XmlMappingException {_		if (source instanceof DOMSource) {_			return unmarshalDomSource((DOMSource) source)__		}_		else if (StaxUtils.isStaxSource(source)) {_			return unmarshalStaxSource(source)__		}_		else if (source instanceof SAXSource) {_			return unmarshalSaxSource((SAXSource) source)__		}_		else if (source instanceof StreamSource) {_			return unmarshalStreamSourceNoExternalEntitities((StreamSource) source)__		}_		else {_			throw new IllegalArgumentException("Unknown Source type: " + source.getClass())__		}_	};unmarshals,the,given,provided,code,javax,xml,transform,source,into,an,object,graph,p,this,implementation,inspects,the,given,result,and,calls,code,unmarshal,dom,source,code,unmarshal,sax,source,or,code,unmarshal,stream,source,param,source,the,source,to,marshal,from,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,code,source,is,neither,a,code,domsource,a,code,saxsource,nor,a,code,stream,source,see,unmarshal,dom,source,javax,xml,transform,dom,domsource,see,unmarshal,sax,source,javax,xml,transform,sax,saxsource,see,unmarshal,stream,source,javax,xml,transform,stream,stream,source;override,public,final,object,unmarshal,source,source,throws,ioexception,xml,mapping,exception,if,source,instanceof,domsource,return,unmarshal,dom,source,domsource,source,else,if,stax,utils,is,stax,source,source,return,unmarshal,stax,source,source,else,if,source,instanceof,saxsource,return,unmarshal,sax,source,saxsource,source,else,if,source,instanceof,stream,source,return,unmarshal,stream,source,no,external,entitities,stream,source,source,else,throw,new,illegal,argument,exception,unknown,source,type,source,get,class
AbstractMarshaller -> @Override 	public final Object unmarshal(Source source) throws IOException, XmlMappingException;1397069887;Unmarshals the given provided {@code javax.xml.transform.Source} into an object graph._<p>This implementation inspects the given result, and calls {@code unmarshalDomSource},_{@code unmarshalSaxSource}, or {@code unmarshalStreamSource}._@param source the source to marshal from_@return the object graph_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if {@code source} is neither a {@code DOMSource},_a {@code SAXSource}, nor a {@code StreamSource}_@see #unmarshalDomSource(javax.xml.transform.dom.DOMSource)_@see #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)_@see #unmarshalStreamSource(javax.xml.transform.stream.StreamSource);@Override_	public final Object unmarshal(Source source) throws IOException, XmlMappingException {_		if (source instanceof DOMSource) {_			return unmarshalDomSource((DOMSource) source)__		}_		else if (StaxUtils.isStaxSource(source)) {_			return unmarshalStaxSource(source)__		}_		else if (source instanceof SAXSource) {_			return unmarshalSaxSource((SAXSource) source)__		}_		else if (source instanceof StreamSource) {_			return unmarshalStreamSourceNoExternalEntitities((StreamSource) source)__		}_		else {_			throw new IllegalArgumentException("Unknown Source type: " + source.getClass())__		}_	};unmarshals,the,given,provided,code,javax,xml,transform,source,into,an,object,graph,p,this,implementation,inspects,the,given,result,and,calls,code,unmarshal,dom,source,code,unmarshal,sax,source,or,code,unmarshal,stream,source,param,source,the,source,to,marshal,from,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,code,source,is,neither,a,code,domsource,a,code,saxsource,nor,a,code,stream,source,see,unmarshal,dom,source,javax,xml,transform,dom,domsource,see,unmarshal,sax,source,javax,xml,transform,sax,saxsource,see,unmarshal,stream,source,javax,xml,transform,stream,stream,source;override,public,final,object,unmarshal,source,source,throws,ioexception,xml,mapping,exception,if,source,instanceof,domsource,return,unmarshal,dom,source,domsource,source,else,if,stax,utils,is,stax,source,source,return,unmarshal,stax,source,source,else,if,source,instanceof,saxsource,return,unmarshal,sax,source,saxsource,source,else,if,source,instanceof,stream,source,return,unmarshal,stream,source,no,external,entitities,stream,source,source,else,throw,new,illegal,argument,exception,unknown,source,type,source,get,class
AbstractMarshaller -> @Override 	public final Object unmarshal(Source source) throws IOException, XmlMappingException;1398638859;Unmarshals the given provided {@code javax.xml.transform.Source} into an object graph._<p>This implementation inspects the given result, and calls {@code unmarshalDomSource},_{@code unmarshalSaxSource}, or {@code unmarshalStreamSource}._@param source the source to marshal from_@return the object graph_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if {@code source} is neither a {@code DOMSource},_a {@code SAXSource}, nor a {@code StreamSource}_@see #unmarshalDomSource(javax.xml.transform.dom.DOMSource)_@see #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)_@see #unmarshalStreamSource(javax.xml.transform.stream.StreamSource);@Override_	public final Object unmarshal(Source source) throws IOException, XmlMappingException {_		if (source instanceof DOMSource) {_			return unmarshalDomSource((DOMSource) source)__		}_		else if (StaxUtils.isStaxSource(source)) {_			return unmarshalStaxSource(source)__		}_		else if (source instanceof SAXSource) {_			return unmarshalSaxSource((SAXSource) source)__		}_		else if (source instanceof StreamSource) {_			return unmarshalStreamSource((StreamSource) source)__		}_		else {_			throw new IllegalArgumentException("Unknown Source type: " + source.getClass())__		}_	};unmarshals,the,given,provided,code,javax,xml,transform,source,into,an,object,graph,p,this,implementation,inspects,the,given,result,and,calls,code,unmarshal,dom,source,code,unmarshal,sax,source,or,code,unmarshal,stream,source,param,source,the,source,to,marshal,from,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,code,source,is,neither,a,code,domsource,a,code,saxsource,nor,a,code,stream,source,see,unmarshal,dom,source,javax,xml,transform,dom,domsource,see,unmarshal,sax,source,javax,xml,transform,sax,saxsource,see,unmarshal,stream,source,javax,xml,transform,stream,stream,source;override,public,final,object,unmarshal,source,source,throws,ioexception,xml,mapping,exception,if,source,instanceof,domsource,return,unmarshal,dom,source,domsource,source,else,if,stax,utils,is,stax,source,source,return,unmarshal,stax,source,source,else,if,source,instanceof,saxsource,return,unmarshal,sax,source,saxsource,source,else,if,source,instanceof,stream,source,return,unmarshal,stream,source,stream,source,source,else,throw,new,illegal,argument,exception,unknown,source,type,source,get,class
AbstractMarshaller -> @Override 	public final Object unmarshal(Source source) throws IOException, XmlMappingException;1400553912;Unmarshals the given provided {@code javax.xml.transform.Source} into an object graph._<p>This implementation inspects the given result, and calls {@code unmarshalDomSource},_{@code unmarshalSaxSource}, or {@code unmarshalStreamSource}._@param source the source to marshal from_@return the object graph_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if {@code source} is neither a {@code DOMSource},_a {@code SAXSource}, nor a {@code StreamSource}_@see #unmarshalDomSource(javax.xml.transform.dom.DOMSource)_@see #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)_@see #unmarshalStreamSource(javax.xml.transform.stream.StreamSource);@Override_	public final Object unmarshal(Source source) throws IOException, XmlMappingException {_		if (source instanceof DOMSource) {_			return unmarshalDomSource((DOMSource) source)__		}_		else if (StaxUtils.isStaxSource(source)) {_			return unmarshalStaxSource(source)__		}_		else if (source instanceof SAXSource) {_			return unmarshalSaxSource((SAXSource) source)__		}_		else if (source instanceof StreamSource) {_			return unmarshalStreamSource((StreamSource) source)__		}_		else {_			throw new IllegalArgumentException("Unknown Source type: " + source.getClass())__		}_	};unmarshals,the,given,provided,code,javax,xml,transform,source,into,an,object,graph,p,this,implementation,inspects,the,given,result,and,calls,code,unmarshal,dom,source,code,unmarshal,sax,source,or,code,unmarshal,stream,source,param,source,the,source,to,marshal,from,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,code,source,is,neither,a,code,domsource,a,code,saxsource,nor,a,code,stream,source,see,unmarshal,dom,source,javax,xml,transform,dom,domsource,see,unmarshal,sax,source,javax,xml,transform,sax,saxsource,see,unmarshal,stream,source,javax,xml,transform,stream,stream,source;override,public,final,object,unmarshal,source,source,throws,ioexception,xml,mapping,exception,if,source,instanceof,domsource,return,unmarshal,dom,source,domsource,source,else,if,stax,utils,is,stax,source,source,return,unmarshal,stax,source,source,else,if,source,instanceof,saxsource,return,unmarshal,sax,source,saxsource,source,else,if,source,instanceof,stream,source,return,unmarshal,stream,source,stream,source,source,else,throw,new,illegal,argument,exception,unknown,source,type,source,get,class
AbstractMarshaller -> @Override 	public final Object unmarshal(Source source) throws IOException, XmlMappingException;1435665021;Unmarshals the given provided {@code javax.xml.transform.Source} into an object graph._<p>This implementation inspects the given result, and calls {@code unmarshalDomSource},_{@code unmarshalSaxSource}, or {@code unmarshalStreamSource}._@param source the source to marshal from_@return the object graph_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if {@code source} is neither a {@code DOMSource},_a {@code SAXSource}, nor a {@code StreamSource}_@see #unmarshalDomSource(javax.xml.transform.dom.DOMSource)_@see #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)_@see #unmarshalStreamSource(javax.xml.transform.stream.StreamSource);@Override_	public final Object unmarshal(Source source) throws IOException, XmlMappingException {_		if (source instanceof DOMSource) {_			return unmarshalDomSource((DOMSource) source)__		}_		else if (StaxUtils.isStaxSource(source)) {_			return unmarshalStaxSource(source)__		}_		else if (source instanceof SAXSource) {_			return unmarshalSaxSource((SAXSource) source)__		}_		else if (source instanceof StreamSource) {_			return unmarshalStreamSource((StreamSource) source)__		}_		else {_			throw new IllegalArgumentException("Unknown Source type: " + source.getClass())__		}_	};unmarshals,the,given,provided,code,javax,xml,transform,source,into,an,object,graph,p,this,implementation,inspects,the,given,result,and,calls,code,unmarshal,dom,source,code,unmarshal,sax,source,or,code,unmarshal,stream,source,param,source,the,source,to,marshal,from,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,code,source,is,neither,a,code,domsource,a,code,saxsource,nor,a,code,stream,source,see,unmarshal,dom,source,javax,xml,transform,dom,domsource,see,unmarshal,sax,source,javax,xml,transform,sax,saxsource,see,unmarshal,stream,source,javax,xml,transform,stream,stream,source;override,public,final,object,unmarshal,source,source,throws,ioexception,xml,mapping,exception,if,source,instanceof,domsource,return,unmarshal,dom,source,domsource,source,else,if,stax,utils,is,stax,source,source,return,unmarshal,stax,source,source,else,if,source,instanceof,saxsource,return,unmarshal,sax,source,saxsource,source,else,if,source,instanceof,stream,source,return,unmarshal,stream,source,stream,source,source,else,throw,new,illegal,argument,exception,unknown,source,type,source,get,class
AbstractMarshaller -> @Override 	public final Object unmarshal(Source source) throws IOException, XmlMappingException;1455117733;Unmarshals the given provided {@code javax.xml.transform.Source} into an object graph._<p>This implementation inspects the given result, and calls {@code unmarshalDomSource},_{@code unmarshalSaxSource}, or {@code unmarshalStreamSource}._@param source the source to marshal from_@return the object graph_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if {@code source} is neither a {@code DOMSource},_a {@code SAXSource}, nor a {@code StreamSource}_@see #unmarshalDomSource(javax.xml.transform.dom.DOMSource)_@see #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)_@see #unmarshalStreamSource(javax.xml.transform.stream.StreamSource);@Override_	public final Object unmarshal(Source source) throws IOException, XmlMappingException {_		if (source instanceof DOMSource) {_			return unmarshalDomSource((DOMSource) source)__		}_		else if (StaxUtils.isStaxSource(source)) {_			return unmarshalStaxSource(source)__		}_		else if (source instanceof SAXSource) {_			return unmarshalSaxSource((SAXSource) source)__		}_		else if (source instanceof StreamSource) {_			return unmarshalStreamSource((StreamSource) source)__		}_		else {_			throw new IllegalArgumentException("Unknown Source type: " + source.getClass())__		}_	};unmarshals,the,given,provided,code,javax,xml,transform,source,into,an,object,graph,p,this,implementation,inspects,the,given,result,and,calls,code,unmarshal,dom,source,code,unmarshal,sax,source,or,code,unmarshal,stream,source,param,source,the,source,to,marshal,from,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,code,source,is,neither,a,code,domsource,a,code,saxsource,nor,a,code,stream,source,see,unmarshal,dom,source,javax,xml,transform,dom,domsource,see,unmarshal,sax,source,javax,xml,transform,sax,saxsource,see,unmarshal,stream,source,javax,xml,transform,stream,stream,source;override,public,final,object,unmarshal,source,source,throws,ioexception,xml,mapping,exception,if,source,instanceof,domsource,return,unmarshal,dom,source,domsource,source,else,if,stax,utils,is,stax,source,source,return,unmarshal,stax,source,source,else,if,source,instanceof,saxsource,return,unmarshal,sax,source,saxsource,source,else,if,source,instanceof,stream,source,return,unmarshal,stream,source,stream,source,source,else,throw,new,illegal,argument,exception,unknown,source,type,source,get,class
AbstractMarshaller -> @Override 	public final Object unmarshal(Source source) throws IOException, XmlMappingException;1468948866;Unmarshals the given provided {@code javax.xml.transform.Source} into an object graph._<p>This implementation inspects the given result, and calls {@code unmarshalDomSource},_{@code unmarshalSaxSource}, or {@code unmarshalStreamSource}._@param source the source to marshal from_@return the object graph_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if {@code source} is neither a {@code DOMSource},_a {@code SAXSource}, nor a {@code StreamSource}_@see #unmarshalDomSource(javax.xml.transform.dom.DOMSource)_@see #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)_@see #unmarshalStreamSource(javax.xml.transform.stream.StreamSource);@Override_	public final Object unmarshal(Source source) throws IOException, XmlMappingException {_		if (source instanceof DOMSource) {_			return unmarshalDomSource((DOMSource) source)__		}_		else if (StaxUtils.isStaxSource(source)) {_			return unmarshalStaxSource(source)__		}_		else if (source instanceof SAXSource) {_			return unmarshalSaxSource((SAXSource) source)__		}_		else if (source instanceof StreamSource) {_			return unmarshalStreamSource((StreamSource) source)__		}_		else {_			throw new IllegalArgumentException("Unknown Source type: " + source.getClass())__		}_	};unmarshals,the,given,provided,code,javax,xml,transform,source,into,an,object,graph,p,this,implementation,inspects,the,given,result,and,calls,code,unmarshal,dom,source,code,unmarshal,sax,source,or,code,unmarshal,stream,source,param,source,the,source,to,marshal,from,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,code,source,is,neither,a,code,domsource,a,code,saxsource,nor,a,code,stream,source,see,unmarshal,dom,source,javax,xml,transform,dom,domsource,see,unmarshal,sax,source,javax,xml,transform,sax,saxsource,see,unmarshal,stream,source,javax,xml,transform,stream,stream,source;override,public,final,object,unmarshal,source,source,throws,ioexception,xml,mapping,exception,if,source,instanceof,domsource,return,unmarshal,dom,source,domsource,source,else,if,stax,utils,is,stax,source,source,return,unmarshal,stax,source,source,else,if,source,instanceof,saxsource,return,unmarshal,sax,source,saxsource,source,else,if,source,instanceof,stream,source,return,unmarshal,stream,source,stream,source,source,else,throw,new,illegal,argument,exception,unknown,source,type,source,get,class
AbstractMarshaller -> @Override 	public final Object unmarshal(Source source) throws IOException, XmlMappingException;1483750478;Unmarshals the given provided {@code javax.xml.transform.Source} into an object graph._<p>This implementation inspects the given result, and calls {@code unmarshalDomSource},_{@code unmarshalSaxSource}, or {@code unmarshalStreamSource}._@param source the source to marshal from_@return the object graph_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if {@code source} is neither a {@code DOMSource},_a {@code SAXSource}, nor a {@code StreamSource}_@see #unmarshalDomSource(javax.xml.transform.dom.DOMSource)_@see #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)_@see #unmarshalStreamSource(javax.xml.transform.stream.StreamSource);@Override_	public final Object unmarshal(Source source) throws IOException, XmlMappingException {_		if (source instanceof DOMSource) {_			return unmarshalDomSource((DOMSource) source)__		}_		else if (StaxUtils.isStaxSource(source)) {_			return unmarshalStaxSource(source)__		}_		else if (source instanceof SAXSource) {_			return unmarshalSaxSource((SAXSource) source)__		}_		else if (source instanceof StreamSource) {_			return unmarshalStreamSource((StreamSource) source)__		}_		else {_			throw new IllegalArgumentException("Unknown Source type: " + source.getClass())__		}_	};unmarshals,the,given,provided,code,javax,xml,transform,source,into,an,object,graph,p,this,implementation,inspects,the,given,result,and,calls,code,unmarshal,dom,source,code,unmarshal,sax,source,or,code,unmarshal,stream,source,param,source,the,source,to,marshal,from,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,code,source,is,neither,a,code,domsource,a,code,saxsource,nor,a,code,stream,source,see,unmarshal,dom,source,javax,xml,transform,dom,domsource,see,unmarshal,sax,source,javax,xml,transform,sax,saxsource,see,unmarshal,stream,source,javax,xml,transform,stream,stream,source;override,public,final,object,unmarshal,source,source,throws,ioexception,xml,mapping,exception,if,source,instanceof,domsource,return,unmarshal,dom,source,domsource,source,else,if,stax,utils,is,stax,source,source,return,unmarshal,stax,source,source,else,if,source,instanceof,saxsource,return,unmarshal,sax,source,saxsource,source,else,if,source,instanceof,stream,source,return,unmarshal,stream,source,stream,source,source,else,throw,new,illegal,argument,exception,unknown,source,type,source,get,class
AbstractMarshaller -> @Override 	public final Object unmarshal(Source source) throws IOException, XmlMappingException;1484301200;Unmarshals the given provided {@code javax.xml.transform.Source} into an object graph._<p>This implementation inspects the given result, and calls {@code unmarshalDomSource},_{@code unmarshalSaxSource}, or {@code unmarshalStreamSource}._@param source the source to marshal from_@return the object graph_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if {@code source} is neither a {@code DOMSource},_a {@code SAXSource}, nor a {@code StreamSource}_@see #unmarshalDomSource(javax.xml.transform.dom.DOMSource)_@see #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)_@see #unmarshalStreamSource(javax.xml.transform.stream.StreamSource);@Override_	public final Object unmarshal(Source source) throws IOException, XmlMappingException {_		if (source instanceof DOMSource) {_			return unmarshalDomSource((DOMSource) source)__		}_		else if (StaxUtils.isStaxSource(source)) {_			return unmarshalStaxSource(source)__		}_		else if (source instanceof SAXSource) {_			return unmarshalSaxSource((SAXSource) source)__		}_		else if (source instanceof StreamSource) {_			return unmarshalStreamSource((StreamSource) source)__		}_		else {_			throw new IllegalArgumentException("Unknown Source type: " + source.getClass())__		}_	};unmarshals,the,given,provided,code,javax,xml,transform,source,into,an,object,graph,p,this,implementation,inspects,the,given,result,and,calls,code,unmarshal,dom,source,code,unmarshal,sax,source,or,code,unmarshal,stream,source,param,source,the,source,to,marshal,from,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,code,source,is,neither,a,code,domsource,a,code,saxsource,nor,a,code,stream,source,see,unmarshal,dom,source,javax,xml,transform,dom,domsource,see,unmarshal,sax,source,javax,xml,transform,sax,saxsource,see,unmarshal,stream,source,javax,xml,transform,stream,stream,source;override,public,final,object,unmarshal,source,source,throws,ioexception,xml,mapping,exception,if,source,instanceof,domsource,return,unmarshal,dom,source,domsource,source,else,if,stax,utils,is,stax,source,source,return,unmarshal,stax,source,source,else,if,source,instanceof,saxsource,return,unmarshal,sax,source,saxsource,source,else,if,source,instanceof,stream,source,return,unmarshal,stream,source,stream,source,source,else,throw,new,illegal,argument,exception,unknown,source,type,source,get,class
AbstractMarshaller -> @Override 	public final Object unmarshal(Source source) throws IOException, XmlMappingException;1495868221;Unmarshals the given provided {@code javax.xml.transform.Source} into an object graph._<p>This implementation inspects the given result, and calls {@code unmarshalDomSource},_{@code unmarshalSaxSource}, or {@code unmarshalStreamSource}._@param source the source to marshal from_@return the object graph_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if {@code source} is neither a {@code DOMSource},_a {@code SAXSource}, nor a {@code StreamSource}_@see #unmarshalDomSource(javax.xml.transform.dom.DOMSource)_@see #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)_@see #unmarshalStreamSource(javax.xml.transform.stream.StreamSource);@Override_	public final Object unmarshal(Source source) throws IOException, XmlMappingException {_		if (source instanceof DOMSource) {_			return unmarshalDomSource((DOMSource) source)__		}_		else if (StaxUtils.isStaxSource(source)) {_			return unmarshalStaxSource(source)__		}_		else if (source instanceof SAXSource) {_			return unmarshalSaxSource((SAXSource) source)__		}_		else if (source instanceof StreamSource) {_			return unmarshalStreamSource((StreamSource) source)__		}_		else {_			throw new IllegalArgumentException("Unknown Source type: " + source.getClass())__		}_	};unmarshals,the,given,provided,code,javax,xml,transform,source,into,an,object,graph,p,this,implementation,inspects,the,given,result,and,calls,code,unmarshal,dom,source,code,unmarshal,sax,source,or,code,unmarshal,stream,source,param,source,the,source,to,marshal,from,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,code,source,is,neither,a,code,domsource,a,code,saxsource,nor,a,code,stream,source,see,unmarshal,dom,source,javax,xml,transform,dom,domsource,see,unmarshal,sax,source,javax,xml,transform,sax,saxsource,see,unmarshal,stream,source,javax,xml,transform,stream,stream,source;override,public,final,object,unmarshal,source,source,throws,ioexception,xml,mapping,exception,if,source,instanceof,domsource,return,unmarshal,dom,source,domsource,source,else,if,stax,utils,is,stax,source,source,return,unmarshal,stax,source,source,else,if,source,instanceof,saxsource,return,unmarshal,sax,source,saxsource,source,else,if,source,instanceof,stream,source,return,unmarshal,stream,source,stream,source,source,else,throw,new,illegal,argument,exception,unknown,source,type,source,get,class
AbstractMarshaller -> @Override 	public final Object unmarshal(Source source) throws IOException, XmlMappingException;1498780456;Unmarshals the given provided {@code javax.xml.transform.Source} into an object graph._<p>This implementation inspects the given result, and calls {@code unmarshalDomSource},_{@code unmarshalSaxSource}, or {@code unmarshalStreamSource}._@param source the source to marshal from_@return the object graph_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if {@code source} is neither a {@code DOMSource},_a {@code SAXSource}, nor a {@code StreamSource}_@see #unmarshalDomSource(javax.xml.transform.dom.DOMSource)_@see #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)_@see #unmarshalStreamSource(javax.xml.transform.stream.StreamSource);@Override_	public final Object unmarshal(Source source) throws IOException, XmlMappingException {_		if (source instanceof DOMSource) {_			return unmarshalDomSource((DOMSource) source)__		}_		else if (StaxUtils.isStaxSource(source)) {_			return unmarshalStaxSource(source)__		}_		else if (source instanceof SAXSource) {_			return unmarshalSaxSource((SAXSource) source)__		}_		else if (source instanceof StreamSource) {_			return unmarshalStreamSource((StreamSource) source)__		}_		else {_			throw new IllegalArgumentException("Unknown Source type: " + source.getClass())__		}_	};unmarshals,the,given,provided,code,javax,xml,transform,source,into,an,object,graph,p,this,implementation,inspects,the,given,result,and,calls,code,unmarshal,dom,source,code,unmarshal,sax,source,or,code,unmarshal,stream,source,param,source,the,source,to,marshal,from,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,code,source,is,neither,a,code,domsource,a,code,saxsource,nor,a,code,stream,source,see,unmarshal,dom,source,javax,xml,transform,dom,domsource,see,unmarshal,sax,source,javax,xml,transform,sax,saxsource,see,unmarshal,stream,source,javax,xml,transform,stream,stream,source;override,public,final,object,unmarshal,source,source,throws,ioexception,xml,mapping,exception,if,source,instanceof,domsource,return,unmarshal,dom,source,domsource,source,else,if,stax,utils,is,stax,source,source,return,unmarshal,stax,source,source,else,if,source,instanceof,saxsource,return,unmarshal,sax,source,saxsource,source,else,if,source,instanceof,stream,source,return,unmarshal,stream,source,stream,source,source,else,throw,new,illegal,argument,exception,unknown,source,type,source,get,class
AbstractMarshaller -> @Override 	public final Object unmarshal(Source source) throws IOException, XmlMappingException;1518770299;Unmarshals the given provided {@code javax.xml.transform.Source} into an object graph._<p>This implementation inspects the given result, and calls {@code unmarshalDomSource},_{@code unmarshalSaxSource}, or {@code unmarshalStreamSource}._@param source the source to marshal from_@return the object graph_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if {@code source} is neither a {@code DOMSource},_a {@code SAXSource}, nor a {@code StreamSource}_@see #unmarshalDomSource(javax.xml.transform.dom.DOMSource)_@see #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)_@see #unmarshalStreamSource(javax.xml.transform.stream.StreamSource);@Override_	public final Object unmarshal(Source source) throws IOException, XmlMappingException {_		if (source instanceof DOMSource) {_			return unmarshalDomSource((DOMSource) source)__		}_		else if (StaxUtils.isStaxSource(source)) {_			return unmarshalStaxSource(source)__		}_		else if (source instanceof SAXSource) {_			return unmarshalSaxSource((SAXSource) source)__		}_		else if (source instanceof StreamSource) {_			return unmarshalStreamSource((StreamSource) source)__		}_		else {_			throw new IllegalArgumentException("Unknown Source type: " + source.getClass())__		}_	};unmarshals,the,given,provided,code,javax,xml,transform,source,into,an,object,graph,p,this,implementation,inspects,the,given,result,and,calls,code,unmarshal,dom,source,code,unmarshal,sax,source,or,code,unmarshal,stream,source,param,source,the,source,to,marshal,from,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,code,source,is,neither,a,code,domsource,a,code,saxsource,nor,a,code,stream,source,see,unmarshal,dom,source,javax,xml,transform,dom,domsource,see,unmarshal,sax,source,javax,xml,transform,sax,saxsource,see,unmarshal,stream,source,javax,xml,transform,stream,stream,source;override,public,final,object,unmarshal,source,source,throws,ioexception,xml,mapping,exception,if,source,instanceof,domsource,return,unmarshal,dom,source,domsource,source,else,if,stax,utils,is,stax,source,source,return,unmarshal,stax,source,source,else,if,source,instanceof,saxsource,return,unmarshal,sax,source,saxsource,source,else,if,source,instanceof,stream,source,return,unmarshal,stream,source,stream,source,source,else,throw,new,illegal,argument,exception,unknown,source,type,source,get,class
AbstractMarshaller -> @Override 	public final Object unmarshal(Source source) throws IOException, XmlMappingException;1518770299;Unmarshals the given provided {@code javax.xml.transform.Source} into an object graph._<p>This implementation inspects the given result, and calls {@code unmarshalDomSource},_{@code unmarshalSaxSource}, or {@code unmarshalStreamSource}._@param source the source to marshal from_@return the object graph_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if {@code source} is neither a {@code DOMSource},_a {@code SAXSource}, nor a {@code StreamSource}_@see #unmarshalDomSource(javax.xml.transform.dom.DOMSource)_@see #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)_@see #unmarshalStreamSource(javax.xml.transform.stream.StreamSource);@Override_	public final Object unmarshal(Source source) throws IOException, XmlMappingException {_		if (source instanceof DOMSource) {_			return unmarshalDomSource((DOMSource) source)__		}_		else if (StaxUtils.isStaxSource(source)) {_			return unmarshalStaxSource(source)__		}_		else if (source instanceof SAXSource) {_			return unmarshalSaxSource((SAXSource) source)__		}_		else if (source instanceof StreamSource) {_			return unmarshalStreamSource((StreamSource) source)__		}_		else {_			throw new IllegalArgumentException("Unknown Source type: " + source.getClass())__		}_	};unmarshals,the,given,provided,code,javax,xml,transform,source,into,an,object,graph,p,this,implementation,inspects,the,given,result,and,calls,code,unmarshal,dom,source,code,unmarshal,sax,source,or,code,unmarshal,stream,source,param,source,the,source,to,marshal,from,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,code,source,is,neither,a,code,domsource,a,code,saxsource,nor,a,code,stream,source,see,unmarshal,dom,source,javax,xml,transform,dom,domsource,see,unmarshal,sax,source,javax,xml,transform,sax,saxsource,see,unmarshal,stream,source,javax,xml,transform,stream,stream,source;override,public,final,object,unmarshal,source,source,throws,ioexception,xml,mapping,exception,if,source,instanceof,domsource,return,unmarshal,dom,source,domsource,source,else,if,stax,utils,is,stax,source,source,return,unmarshal,stax,source,source,else,if,source,instanceof,saxsource,return,unmarshal,sax,source,saxsource,source,else,if,source,instanceof,stream,source,return,unmarshal,stream,source,stream,source,source,else,throw,new,illegal,argument,exception,unknown,source,type,source,get,class
AbstractMarshaller -> @Override 	public final Object unmarshal(Source source) throws IOException, XmlMappingException;1530174524;Unmarshals the given provided {@code javax.xml.transform.Source} into an object graph._<p>This implementation inspects the given result, and calls {@code unmarshalDomSource},_{@code unmarshalSaxSource}, or {@code unmarshalStreamSource}._@param source the source to marshal from_@return the object graph_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if {@code source} is neither a {@code DOMSource},_a {@code SAXSource}, nor a {@code StreamSource}_@see #unmarshalDomSource(javax.xml.transform.dom.DOMSource)_@see #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)_@see #unmarshalStreamSource(javax.xml.transform.stream.StreamSource);@Override_	public final Object unmarshal(Source source) throws IOException, XmlMappingException {_		if (source instanceof DOMSource) {_			return unmarshalDomSource((DOMSource) source)__		}_		else if (StaxUtils.isStaxSource(source)) {_			return unmarshalStaxSource(source)__		}_		else if (source instanceof SAXSource) {_			return unmarshalSaxSource((SAXSource) source)__		}_		else if (source instanceof StreamSource) {_			return unmarshalStreamSource((StreamSource) source)__		}_		else {_			throw new IllegalArgumentException("Unknown Source type: " + source.getClass())__		}_	};unmarshals,the,given,provided,code,javax,xml,transform,source,into,an,object,graph,p,this,implementation,inspects,the,given,result,and,calls,code,unmarshal,dom,source,code,unmarshal,sax,source,or,code,unmarshal,stream,source,param,source,the,source,to,marshal,from,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,code,source,is,neither,a,code,domsource,a,code,saxsource,nor,a,code,stream,source,see,unmarshal,dom,source,javax,xml,transform,dom,domsource,see,unmarshal,sax,source,javax,xml,transform,sax,saxsource,see,unmarshal,stream,source,javax,xml,transform,stream,stream,source;override,public,final,object,unmarshal,source,source,throws,ioexception,xml,mapping,exception,if,source,instanceof,domsource,return,unmarshal,dom,source,domsource,source,else,if,stax,utils,is,stax,source,source,return,unmarshal,stax,source,source,else,if,source,instanceof,saxsource,return,unmarshal,sax,source,saxsource,source,else,if,source,instanceof,stream,source,return,unmarshal,stream,source,stream,source,source,else,throw,new,illegal,argument,exception,unknown,source,type,source,get,class
AbstractMarshaller -> @Override 	public final Object unmarshal(Source source) throws IOException, XmlMappingException;1530174524;Unmarshals the given provided {@code javax.xml.transform.Source} into an object graph._<p>This implementation inspects the given result, and calls {@code unmarshalDomSource},_{@code unmarshalSaxSource}, or {@code unmarshalStreamSource}._@param source the source to marshal from_@return the object graph_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if {@code source} is neither a {@code DOMSource},_a {@code SAXSource}, nor a {@code StreamSource}_@see #unmarshalDomSource(javax.xml.transform.dom.DOMSource)_@see #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)_@see #unmarshalStreamSource(javax.xml.transform.stream.StreamSource);@Override_	public final Object unmarshal(Source source) throws IOException, XmlMappingException {_		if (source instanceof DOMSource) {_			return unmarshalDomSource((DOMSource) source)__		}_		else if (StaxUtils.isStaxSource(source)) {_			return unmarshalStaxSource(source)__		}_		else if (source instanceof SAXSource) {_			return unmarshalSaxSource((SAXSource) source)__		}_		else if (source instanceof StreamSource) {_			return unmarshalStreamSource((StreamSource) source)__		}_		else {_			throw new IllegalArgumentException("Unknown Source type: " + source.getClass())__		}_	};unmarshals,the,given,provided,code,javax,xml,transform,source,into,an,object,graph,p,this,implementation,inspects,the,given,result,and,calls,code,unmarshal,dom,source,code,unmarshal,sax,source,or,code,unmarshal,stream,source,param,source,the,source,to,marshal,from,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,code,source,is,neither,a,code,domsource,a,code,saxsource,nor,a,code,stream,source,see,unmarshal,dom,source,javax,xml,transform,dom,domsource,see,unmarshal,sax,source,javax,xml,transform,sax,saxsource,see,unmarshal,stream,source,javax,xml,transform,stream,stream,source;override,public,final,object,unmarshal,source,source,throws,ioexception,xml,mapping,exception,if,source,instanceof,domsource,return,unmarshal,dom,source,domsource,source,else,if,stax,utils,is,stax,source,source,return,unmarshal,stax,source,source,else,if,source,instanceof,saxsource,return,unmarshal,sax,source,saxsource,source,else,if,source,instanceof,stream,source,return,unmarshal,stream,source,stream,source,source,else,throw,new,illegal,argument,exception,unknown,source,type,source,get,class
AbstractMarshaller -> protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader) 			throws XmlMappingException_;1328020251;Abstract template method for unmarshalling from a given Stax <code>XMLStreamReader</code>._@param streamReader the <code>XMLStreamReader</code> to read from_@return the object graph_@throws XmlMappingException if the given stream reader cannot be converted to an object;protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlstream,reader,code,param,stream,reader,the,code,xmlstream,reader,code,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,stream,reader,xmlstream,reader,stream,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader) 			throws XmlMappingException_;1356735495;Abstract template method for unmarshalling from a given Stax {@code XMLStreamReader}._@param streamReader the {@code XMLStreamReader} to read from_@return the object graph_@throws XmlMappingException if the given stream reader cannot be converted to an object;protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlstream,reader,param,stream,reader,the,code,xmlstream,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,stream,reader,xmlstream,reader,stream,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader) 			throws XmlMappingException_;1357119239;Abstract template method for unmarshalling from a given Stax {@code XMLStreamReader}._@param streamReader the {@code XMLStreamReader} to read from_@return the object graph_@throws XmlMappingException if the given stream reader cannot be converted to an object;protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlstream,reader,param,stream,reader,the,code,xmlstream,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,stream,reader,xmlstream,reader,stream,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader) 			throws XmlMappingException_;1368482696;Abstract template method for unmarshalling from a given Stax {@code XMLStreamReader}._@param streamReader the {@code XMLStreamReader} to read from_@return the object graph_@throws XmlMappingException if the given stream reader cannot be converted to an object;protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlstream,reader,param,stream,reader,the,code,xmlstream,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,stream,reader,xmlstream,reader,stream,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader) 			throws XmlMappingException_;1376041400;Abstract template method for unmarshalling from a given Stax {@code XMLStreamReader}._@param streamReader the {@code XMLStreamReader} to read from_@return the object graph_@throws XmlMappingException if the given stream reader cannot be converted to an object;protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlstream,reader,param,stream,reader,the,code,xmlstream,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,stream,reader,xmlstream,reader,stream,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader) 			throws XmlMappingException_;1392767670;Abstract template method for unmarshalling from a given Stax {@code XMLStreamReader}._@param streamReader the {@code XMLStreamReader} to read from_@return the object graph_@throws XmlMappingException if the given stream reader cannot be converted to an object;protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlstream,reader,param,stream,reader,the,code,xmlstream,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,stream,reader,xmlstream,reader,stream,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader) 			throws XmlMappingException_;1397058176;Abstract template method for unmarshalling from a given Stax {@code XMLStreamReader}._@param streamReader the {@code XMLStreamReader} to read from_@return the object graph_@throws XmlMappingException if the given stream reader cannot be converted to an object;protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlstream,reader,param,stream,reader,the,code,xmlstream,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,stream,reader,xmlstream,reader,stream,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader) 			throws XmlMappingException_;1397069887;Abstract template method for unmarshalling from a given Stax {@code XMLStreamReader}._@param streamReader the {@code XMLStreamReader} to read from_@return the object graph_@throws XmlMappingException if the given stream reader cannot be converted to an object;protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlstream,reader,param,stream,reader,the,code,xmlstream,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,stream,reader,xmlstream,reader,stream,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader) 			throws XmlMappingException_;1398638859;Abstract template method for unmarshalling from a given Stax {@code XMLStreamReader}._@param streamReader the {@code XMLStreamReader} to read from_@return the object graph_@throws XmlMappingException if the given stream reader cannot be converted to an object;protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlstream,reader,param,stream,reader,the,code,xmlstream,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,stream,reader,xmlstream,reader,stream,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader) 			throws XmlMappingException_;1400553912;Abstract template method for unmarshalling from a given Stax {@code XMLStreamReader}._@param streamReader the {@code XMLStreamReader} to read from_@return the object graph_@throws XmlMappingException if the given stream reader cannot be converted to an object;protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlstream,reader,param,stream,reader,the,code,xmlstream,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,stream,reader,xmlstream,reader,stream,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader) 			throws XmlMappingException_;1435665021;Abstract template method for unmarshalling from a given Stax {@code XMLStreamReader}._@param streamReader the {@code XMLStreamReader} to read from_@return the object graph_@throws XmlMappingException if the given stream reader cannot be converted to an object;protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlstream,reader,param,stream,reader,the,code,xmlstream,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,stream,reader,xmlstream,reader,stream,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader) 			throws XmlMappingException_;1455117733;Abstract template method for unmarshalling from a given Stax {@code XMLStreamReader}._@param streamReader the {@code XMLStreamReader} to read from_@return the object graph_@throws XmlMappingException if the given stream reader cannot be converted to an object;protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlstream,reader,param,stream,reader,the,code,xmlstream,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,stream,reader,xmlstream,reader,stream,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader) 			throws XmlMappingException_;1468948866;Abstract template method for unmarshalling from a given Stax {@code XMLStreamReader}._@param streamReader the {@code XMLStreamReader} to read from_@return the object graph_@throws XmlMappingException if the given stream reader cannot be converted to an object;protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlstream,reader,param,stream,reader,the,code,xmlstream,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,stream,reader,xmlstream,reader,stream,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader) 			throws XmlMappingException_;1483750478;Abstract template method for unmarshalling from a given Stax {@code XMLStreamReader}._@param streamReader the {@code XMLStreamReader} to read from_@return the object graph_@throws XmlMappingException if the given stream reader cannot be converted to an object;protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlstream,reader,param,stream,reader,the,code,xmlstream,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,stream,reader,xmlstream,reader,stream,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader) 			throws XmlMappingException_;1484301200;Abstract template method for unmarshalling from a given Stax {@code XMLStreamReader}._@param streamReader the {@code XMLStreamReader} to read from_@return the object graph_@throws XmlMappingException if the given stream reader cannot be converted to an object;protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlstream,reader,param,stream,reader,the,code,xmlstream,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,stream,reader,xmlstream,reader,stream,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader) 			throws XmlMappingException_;1495868221;Abstract template method for unmarshalling from a given Stax {@code XMLStreamReader}._@param streamReader the {@code XMLStreamReader} to read from_@return the object graph_@throws XmlMappingException if the given stream reader cannot be converted to an object;protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlstream,reader,param,stream,reader,the,code,xmlstream,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,stream,reader,xmlstream,reader,stream,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader) 			throws XmlMappingException_;1498780456;Abstract template method for unmarshalling from a given Stax {@code XMLStreamReader}._@param streamReader the {@code XMLStreamReader} to read from_@return the object graph_@throws XmlMappingException if the given stream reader cannot be converted to an object;protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlstream,reader,param,stream,reader,the,code,xmlstream,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,stream,reader,xmlstream,reader,stream,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader) 			throws XmlMappingException_;1518770299;Abstract template method for unmarshalling from a given Stax {@code XMLStreamReader}._@param streamReader the {@code XMLStreamReader} to read from_@return the object graph_@throws XmlMappingException if the given stream reader cannot be converted to an object;protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlstream,reader,param,stream,reader,the,code,xmlstream,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,stream,reader,xmlstream,reader,stream,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader) 			throws XmlMappingException_;1518770299;Abstract template method for unmarshalling from a given Stax {@code XMLStreamReader}._@param streamReader the {@code XMLStreamReader} to read from_@return the object graph_@throws XmlMappingException if the given stream reader cannot be converted to an object;protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlstream,reader,param,stream,reader,the,code,xmlstream,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,stream,reader,xmlstream,reader,stream,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader) 			throws XmlMappingException_;1530174524;Abstract template method for unmarshalling from a given Stax {@code XMLStreamReader}._@param streamReader the {@code XMLStreamReader} to read from_@return the object graph_@throws XmlMappingException if the given stream reader cannot be converted to an object;protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlstream,reader,param,stream,reader,the,code,xmlstream,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,stream,reader,xmlstream,reader,stream,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader) 			throws XmlMappingException_;1530174524;Abstract template method for unmarshalling from a given Stax {@code XMLStreamReader}._@param streamReader the {@code XMLStreamReader} to read from_@return the object graph_@throws XmlMappingException if the given stream reader cannot be converted to an object;protected abstract Object unmarshalXmlStreamReader(XMLStreamReader streamReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlstream,reader,param,stream,reader,the,code,xmlstream,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,stream,reader,xmlstream,reader,stream,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalDomNode(Object graph, Node node) 			throws XmlMappingException_;1328020251;Abstract template method for marshalling the given object graph to a DOM <code>Node</code>._<p>In practice, node is be a <code>Document</code> node, a <code>DocumentFragment</code> node,_or a <code>Element</code> node. In other words, a node that accepts children._@param graph the root of the object graph to marshal_@param node the DOM node that will contain the result tree_@throws XmlMappingException if the given object cannot be marshalled to the DOM node_@see org.w3c.dom.Document_@see org.w3c.dom.DocumentFragment_@see org.w3c.dom.Element;protected abstract void marshalDomNode(Object graph, Node node)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,dom,code,node,code,p,in,practice,node,is,be,a,code,document,code,node,a,code,document,fragment,code,node,or,a,code,element,code,node,in,other,words,a,node,that,accepts,children,param,graph,the,root,of,the,object,graph,to,marshal,param,node,the,dom,node,that,will,contain,the,result,tree,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node,see,org,w3c,dom,document,see,org,w3c,dom,document,fragment,see,org,w3c,dom,element;protected,abstract,void,marshal,dom,node,object,graph,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalDomNode(Object graph, Node node) 			throws XmlMappingException_;1356735495;Abstract template method for marshalling the given object graph to a DOM {@code Node}._<p>In practice, node is be a {@code Document} node, a {@code DocumentFragment} node,_or a {@code Element} node. In other words, a node that accepts children._@param graph the root of the object graph to marshal_@param node the DOM node that will contain the result tree_@throws XmlMappingException if the given object cannot be marshalled to the DOM node_@see org.w3c.dom.Document_@see org.w3c.dom.DocumentFragment_@see org.w3c.dom.Element;protected abstract void marshalDomNode(Object graph, Node node)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,dom,code,node,p,in,practice,node,is,be,a,code,document,node,a,code,document,fragment,node,or,a,code,element,node,in,other,words,a,node,that,accepts,children,param,graph,the,root,of,the,object,graph,to,marshal,param,node,the,dom,node,that,will,contain,the,result,tree,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node,see,org,w3c,dom,document,see,org,w3c,dom,document,fragment,see,org,w3c,dom,element;protected,abstract,void,marshal,dom,node,object,graph,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalDomNode(Object graph, Node node) 			throws XmlMappingException_;1357119239;Abstract template method for marshalling the given object graph to a DOM {@code Node}._<p>In practice, node is be a {@code Document} node, a {@code DocumentFragment} node,_or a {@code Element} node. In other words, a node that accepts children._@param graph the root of the object graph to marshal_@param node the DOM node that will contain the result tree_@throws XmlMappingException if the given object cannot be marshalled to the DOM node_@see org.w3c.dom.Document_@see org.w3c.dom.DocumentFragment_@see org.w3c.dom.Element;protected abstract void marshalDomNode(Object graph, Node node)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,dom,code,node,p,in,practice,node,is,be,a,code,document,node,a,code,document,fragment,node,or,a,code,element,node,in,other,words,a,node,that,accepts,children,param,graph,the,root,of,the,object,graph,to,marshal,param,node,the,dom,node,that,will,contain,the,result,tree,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node,see,org,w3c,dom,document,see,org,w3c,dom,document,fragment,see,org,w3c,dom,element;protected,abstract,void,marshal,dom,node,object,graph,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalDomNode(Object graph, Node node) 			throws XmlMappingException_;1368482696;Abstract template method for marshalling the given object graph to a DOM {@code Node}._<p>In practice, node is be a {@code Document} node, a {@code DocumentFragment} node,_or a {@code Element} node. In other words, a node that accepts children._@param graph the root of the object graph to marshal_@param node the DOM node that will contain the result tree_@throws XmlMappingException if the given object cannot be marshalled to the DOM node_@see org.w3c.dom.Document_@see org.w3c.dom.DocumentFragment_@see org.w3c.dom.Element;protected abstract void marshalDomNode(Object graph, Node node)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,dom,code,node,p,in,practice,node,is,be,a,code,document,node,a,code,document,fragment,node,or,a,code,element,node,in,other,words,a,node,that,accepts,children,param,graph,the,root,of,the,object,graph,to,marshal,param,node,the,dom,node,that,will,contain,the,result,tree,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node,see,org,w3c,dom,document,see,org,w3c,dom,document,fragment,see,org,w3c,dom,element;protected,abstract,void,marshal,dom,node,object,graph,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalDomNode(Object graph, Node node) 			throws XmlMappingException_;1376041400;Abstract template method for marshalling the given object graph to a DOM {@code Node}._<p>In practice, node is be a {@code Document} node, a {@code DocumentFragment} node,_or a {@code Element} node. In other words, a node that accepts children._@param graph the root of the object graph to marshal_@param node the DOM node that will contain the result tree_@throws XmlMappingException if the given object cannot be marshalled to the DOM node_@see org.w3c.dom.Document_@see org.w3c.dom.DocumentFragment_@see org.w3c.dom.Element;protected abstract void marshalDomNode(Object graph, Node node)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,dom,code,node,p,in,practice,node,is,be,a,code,document,node,a,code,document,fragment,node,or,a,code,element,node,in,other,words,a,node,that,accepts,children,param,graph,the,root,of,the,object,graph,to,marshal,param,node,the,dom,node,that,will,contain,the,result,tree,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node,see,org,w3c,dom,document,see,org,w3c,dom,document,fragment,see,org,w3c,dom,element;protected,abstract,void,marshal,dom,node,object,graph,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalDomNode(Object graph, Node node) 			throws XmlMappingException_;1392767670;Abstract template method for marshalling the given object graph to a DOM {@code Node}._<p>In practice, node is be a {@code Document} node, a {@code DocumentFragment} node,_or a {@code Element} node. In other words, a node that accepts children._@param graph the root of the object graph to marshal_@param node the DOM node that will contain the result tree_@throws XmlMappingException if the given object cannot be marshalled to the DOM node_@see org.w3c.dom.Document_@see org.w3c.dom.DocumentFragment_@see org.w3c.dom.Element;protected abstract void marshalDomNode(Object graph, Node node)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,dom,code,node,p,in,practice,node,is,be,a,code,document,node,a,code,document,fragment,node,or,a,code,element,node,in,other,words,a,node,that,accepts,children,param,graph,the,root,of,the,object,graph,to,marshal,param,node,the,dom,node,that,will,contain,the,result,tree,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node,see,org,w3c,dom,document,see,org,w3c,dom,document,fragment,see,org,w3c,dom,element;protected,abstract,void,marshal,dom,node,object,graph,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalDomNode(Object graph, Node node) 			throws XmlMappingException_;1397058176;Abstract template method for marshalling the given object graph to a DOM {@code Node}._<p>In practice, node is be a {@code Document} node, a {@code DocumentFragment} node,_or a {@code Element} node. In other words, a node that accepts children._@param graph the root of the object graph to marshal_@param node the DOM node that will contain the result tree_@throws XmlMappingException if the given object cannot be marshalled to the DOM node_@see org.w3c.dom.Document_@see org.w3c.dom.DocumentFragment_@see org.w3c.dom.Element;protected abstract void marshalDomNode(Object graph, Node node)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,dom,code,node,p,in,practice,node,is,be,a,code,document,node,a,code,document,fragment,node,or,a,code,element,node,in,other,words,a,node,that,accepts,children,param,graph,the,root,of,the,object,graph,to,marshal,param,node,the,dom,node,that,will,contain,the,result,tree,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node,see,org,w3c,dom,document,see,org,w3c,dom,document,fragment,see,org,w3c,dom,element;protected,abstract,void,marshal,dom,node,object,graph,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalDomNode(Object graph, Node node) 			throws XmlMappingException_;1397069887;Abstract template method for marshalling the given object graph to a DOM {@code Node}._<p>In practice, node is be a {@code Document} node, a {@code DocumentFragment} node,_or a {@code Element} node. In other words, a node that accepts children._@param graph the root of the object graph to marshal_@param node the DOM node that will contain the result tree_@throws XmlMappingException if the given object cannot be marshalled to the DOM node_@see org.w3c.dom.Document_@see org.w3c.dom.DocumentFragment_@see org.w3c.dom.Element;protected abstract void marshalDomNode(Object graph, Node node)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,dom,code,node,p,in,practice,node,is,be,a,code,document,node,a,code,document,fragment,node,or,a,code,element,node,in,other,words,a,node,that,accepts,children,param,graph,the,root,of,the,object,graph,to,marshal,param,node,the,dom,node,that,will,contain,the,result,tree,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node,see,org,w3c,dom,document,see,org,w3c,dom,document,fragment,see,org,w3c,dom,element;protected,abstract,void,marshal,dom,node,object,graph,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalDomNode(Object graph, Node node) 			throws XmlMappingException_;1398638859;Abstract template method for marshalling the given object graph to a DOM {@code Node}._<p>In practice, node is be a {@code Document} node, a {@code DocumentFragment} node,_or a {@code Element} node. In other words, a node that accepts children._@param graph the root of the object graph to marshal_@param node the DOM node that will contain the result tree_@throws XmlMappingException if the given object cannot be marshalled to the DOM node_@see org.w3c.dom.Document_@see org.w3c.dom.DocumentFragment_@see org.w3c.dom.Element;protected abstract void marshalDomNode(Object graph, Node node)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,dom,code,node,p,in,practice,node,is,be,a,code,document,node,a,code,document,fragment,node,or,a,code,element,node,in,other,words,a,node,that,accepts,children,param,graph,the,root,of,the,object,graph,to,marshal,param,node,the,dom,node,that,will,contain,the,result,tree,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node,see,org,w3c,dom,document,see,org,w3c,dom,document,fragment,see,org,w3c,dom,element;protected,abstract,void,marshal,dom,node,object,graph,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalDomNode(Object graph, Node node) 			throws XmlMappingException_;1400553912;Abstract template method for marshalling the given object graph to a DOM {@code Node}._<p>In practice, node is be a {@code Document} node, a {@code DocumentFragment} node,_or a {@code Element} node. In other words, a node that accepts children._@param graph the root of the object graph to marshal_@param node the DOM node that will contain the result tree_@throws XmlMappingException if the given object cannot be marshalled to the DOM node_@see org.w3c.dom.Document_@see org.w3c.dom.DocumentFragment_@see org.w3c.dom.Element;protected abstract void marshalDomNode(Object graph, Node node)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,dom,code,node,p,in,practice,node,is,be,a,code,document,node,a,code,document,fragment,node,or,a,code,element,node,in,other,words,a,node,that,accepts,children,param,graph,the,root,of,the,object,graph,to,marshal,param,node,the,dom,node,that,will,contain,the,result,tree,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node,see,org,w3c,dom,document,see,org,w3c,dom,document,fragment,see,org,w3c,dom,element;protected,abstract,void,marshal,dom,node,object,graph,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalDomNode(Object graph, Node node) 			throws XmlMappingException_;1435665021;Abstract template method for marshalling the given object graph to a DOM {@code Node}._<p>In practice, node is be a {@code Document} node, a {@code DocumentFragment} node,_or a {@code Element} node. In other words, a node that accepts children._@param graph the root of the object graph to marshal_@param node the DOM node that will contain the result tree_@throws XmlMappingException if the given object cannot be marshalled to the DOM node_@see org.w3c.dom.Document_@see org.w3c.dom.DocumentFragment_@see org.w3c.dom.Element;protected abstract void marshalDomNode(Object graph, Node node)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,dom,code,node,p,in,practice,node,is,be,a,code,document,node,a,code,document,fragment,node,or,a,code,element,node,in,other,words,a,node,that,accepts,children,param,graph,the,root,of,the,object,graph,to,marshal,param,node,the,dom,node,that,will,contain,the,result,tree,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node,see,org,w3c,dom,document,see,org,w3c,dom,document,fragment,see,org,w3c,dom,element;protected,abstract,void,marshal,dom,node,object,graph,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalDomNode(Object graph, Node node) 			throws XmlMappingException_;1455117733;Abstract template method for marshalling the given object graph to a DOM {@code Node}._<p>In practice, node is be a {@code Document} node, a {@code DocumentFragment} node,_or a {@code Element} node. In other words, a node that accepts children._@param graph the root of the object graph to marshal_@param node the DOM node that will contain the result tree_@throws XmlMappingException if the given object cannot be marshalled to the DOM node_@see org.w3c.dom.Document_@see org.w3c.dom.DocumentFragment_@see org.w3c.dom.Element;protected abstract void marshalDomNode(Object graph, Node node)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,dom,code,node,p,in,practice,node,is,be,a,code,document,node,a,code,document,fragment,node,or,a,code,element,node,in,other,words,a,node,that,accepts,children,param,graph,the,root,of,the,object,graph,to,marshal,param,node,the,dom,node,that,will,contain,the,result,tree,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node,see,org,w3c,dom,document,see,org,w3c,dom,document,fragment,see,org,w3c,dom,element;protected,abstract,void,marshal,dom,node,object,graph,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalDomNode(Object graph, Node node) 			throws XmlMappingException_;1468948866;Abstract template method for marshalling the given object graph to a DOM {@code Node}._<p>In practice, node is be a {@code Document} node, a {@code DocumentFragment} node,_or a {@code Element} node. In other words, a node that accepts children._@param graph the root of the object graph to marshal_@param node the DOM node that will contain the result tree_@throws XmlMappingException if the given object cannot be marshalled to the DOM node_@see org.w3c.dom.Document_@see org.w3c.dom.DocumentFragment_@see org.w3c.dom.Element;protected abstract void marshalDomNode(Object graph, Node node)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,dom,code,node,p,in,practice,node,is,be,a,code,document,node,a,code,document,fragment,node,or,a,code,element,node,in,other,words,a,node,that,accepts,children,param,graph,the,root,of,the,object,graph,to,marshal,param,node,the,dom,node,that,will,contain,the,result,tree,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node,see,org,w3c,dom,document,see,org,w3c,dom,document,fragment,see,org,w3c,dom,element;protected,abstract,void,marshal,dom,node,object,graph,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalDomNode(Object graph, Node node) 			throws XmlMappingException_;1483750478;Abstract template method for marshalling the given object graph to a DOM {@code Node}._<p>In practice, node is be a {@code Document} node, a {@code DocumentFragment} node,_or a {@code Element} node. In other words, a node that accepts children._@param graph the root of the object graph to marshal_@param node the DOM node that will contain the result tree_@throws XmlMappingException if the given object cannot be marshalled to the DOM node_@see org.w3c.dom.Document_@see org.w3c.dom.DocumentFragment_@see org.w3c.dom.Element;protected abstract void marshalDomNode(Object graph, Node node)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,dom,code,node,p,in,practice,node,is,be,a,code,document,node,a,code,document,fragment,node,or,a,code,element,node,in,other,words,a,node,that,accepts,children,param,graph,the,root,of,the,object,graph,to,marshal,param,node,the,dom,node,that,will,contain,the,result,tree,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node,see,org,w3c,dom,document,see,org,w3c,dom,document,fragment,see,org,w3c,dom,element;protected,abstract,void,marshal,dom,node,object,graph,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalDomNode(Object graph, Node node) 			throws XmlMappingException_;1484301200;Abstract template method for marshalling the given object graph to a DOM {@code Node}._<p>In practice, node is be a {@code Document} node, a {@code DocumentFragment} node,_or a {@code Element} node. In other words, a node that accepts children._@param graph the root of the object graph to marshal_@param node the DOM node that will contain the result tree_@throws XmlMappingException if the given object cannot be marshalled to the DOM node_@see org.w3c.dom.Document_@see org.w3c.dom.DocumentFragment_@see org.w3c.dom.Element;protected abstract void marshalDomNode(Object graph, Node node)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,dom,code,node,p,in,practice,node,is,be,a,code,document,node,a,code,document,fragment,node,or,a,code,element,node,in,other,words,a,node,that,accepts,children,param,graph,the,root,of,the,object,graph,to,marshal,param,node,the,dom,node,that,will,contain,the,result,tree,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node,see,org,w3c,dom,document,see,org,w3c,dom,document,fragment,see,org,w3c,dom,element;protected,abstract,void,marshal,dom,node,object,graph,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalDomNode(Object graph, Node node) 			throws XmlMappingException_;1495868221;Abstract template method for marshalling the given object graph to a DOM {@code Node}._<p>In practice, node is be a {@code Document} node, a {@code DocumentFragment} node,_or a {@code Element} node. In other words, a node that accepts children._@param graph the root of the object graph to marshal_@param node the DOM node that will contain the result tree_@throws XmlMappingException if the given object cannot be marshalled to the DOM node_@see org.w3c.dom.Document_@see org.w3c.dom.DocumentFragment_@see org.w3c.dom.Element;protected abstract void marshalDomNode(Object graph, Node node)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,dom,code,node,p,in,practice,node,is,be,a,code,document,node,a,code,document,fragment,node,or,a,code,element,node,in,other,words,a,node,that,accepts,children,param,graph,the,root,of,the,object,graph,to,marshal,param,node,the,dom,node,that,will,contain,the,result,tree,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node,see,org,w3c,dom,document,see,org,w3c,dom,document,fragment,see,org,w3c,dom,element;protected,abstract,void,marshal,dom,node,object,graph,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalDomNode(Object graph, Node node) 			throws XmlMappingException_;1498780456;Abstract template method for marshalling the given object graph to a DOM {@code Node}._<p>In practice, node is be a {@code Document} node, a {@code DocumentFragment} node,_or a {@code Element} node. In other words, a node that accepts children._@param graph the root of the object graph to marshal_@param node the DOM node that will contain the result tree_@throws XmlMappingException if the given object cannot be marshalled to the DOM node_@see org.w3c.dom.Document_@see org.w3c.dom.DocumentFragment_@see org.w3c.dom.Element;protected abstract void marshalDomNode(Object graph, Node node)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,dom,code,node,p,in,practice,node,is,be,a,code,document,node,a,code,document,fragment,node,or,a,code,element,node,in,other,words,a,node,that,accepts,children,param,graph,the,root,of,the,object,graph,to,marshal,param,node,the,dom,node,that,will,contain,the,result,tree,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node,see,org,w3c,dom,document,see,org,w3c,dom,document,fragment,see,org,w3c,dom,element;protected,abstract,void,marshal,dom,node,object,graph,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalDomNode(Object graph, Node node) 			throws XmlMappingException_;1518770299;Abstract template method for marshalling the given object graph to a DOM {@code Node}._<p>In practice, node is be a {@code Document} node, a {@code DocumentFragment} node,_or a {@code Element} node. In other words, a node that accepts children._@param graph the root of the object graph to marshal_@param node the DOM node that will contain the result tree_@throws XmlMappingException if the given object cannot be marshalled to the DOM node_@see org.w3c.dom.Document_@see org.w3c.dom.DocumentFragment_@see org.w3c.dom.Element;protected abstract void marshalDomNode(Object graph, Node node)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,dom,code,node,p,in,practice,node,is,be,a,code,document,node,a,code,document,fragment,node,or,a,code,element,node,in,other,words,a,node,that,accepts,children,param,graph,the,root,of,the,object,graph,to,marshal,param,node,the,dom,node,that,will,contain,the,result,tree,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node,see,org,w3c,dom,document,see,org,w3c,dom,document,fragment,see,org,w3c,dom,element;protected,abstract,void,marshal,dom,node,object,graph,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalDomNode(Object graph, Node node) 			throws XmlMappingException_;1518770299;Abstract template method for marshalling the given object graph to a DOM {@code Node}._<p>In practice, node is be a {@code Document} node, a {@code DocumentFragment} node,_or a {@code Element} node. In other words, a node that accepts children._@param graph the root of the object graph to marshal_@param node the DOM node that will contain the result tree_@throws XmlMappingException if the given object cannot be marshalled to the DOM node_@see org.w3c.dom.Document_@see org.w3c.dom.DocumentFragment_@see org.w3c.dom.Element;protected abstract void marshalDomNode(Object graph, Node node)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,dom,code,node,p,in,practice,node,is,be,a,code,document,node,a,code,document,fragment,node,or,a,code,element,node,in,other,words,a,node,that,accepts,children,param,graph,the,root,of,the,object,graph,to,marshal,param,node,the,dom,node,that,will,contain,the,result,tree,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node,see,org,w3c,dom,document,see,org,w3c,dom,document,fragment,see,org,w3c,dom,element;protected,abstract,void,marshal,dom,node,object,graph,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalDomNode(Object graph, Node node) 			throws XmlMappingException_;1530174524;Abstract template method for marshalling the given object graph to a DOM {@code Node}._<p>In practice, node is be a {@code Document} node, a {@code DocumentFragment} node,_or a {@code Element} node. In other words, a node that accepts children._@param graph the root of the object graph to marshal_@param node the DOM node that will contain the result tree_@throws XmlMappingException if the given object cannot be marshalled to the DOM node_@see org.w3c.dom.Document_@see org.w3c.dom.DocumentFragment_@see org.w3c.dom.Element;protected abstract void marshalDomNode(Object graph, Node node)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,dom,code,node,p,in,practice,node,is,be,a,code,document,node,a,code,document,fragment,node,or,a,code,element,node,in,other,words,a,node,that,accepts,children,param,graph,the,root,of,the,object,graph,to,marshal,param,node,the,dom,node,that,will,contain,the,result,tree,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node,see,org,w3c,dom,document,see,org,w3c,dom,document,fragment,see,org,w3c,dom,element;protected,abstract,void,marshal,dom,node,object,graph,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalDomNode(Object graph, Node node) 			throws XmlMappingException_;1530174524;Abstract template method for marshalling the given object graph to a DOM {@code Node}._<p>In practice, node is be a {@code Document} node, a {@code DocumentFragment} node,_or a {@code Element} node. In other words, a node that accepts children._@param graph the root of the object graph to marshal_@param node the DOM node that will contain the result tree_@throws XmlMappingException if the given object cannot be marshalled to the DOM node_@see org.w3c.dom.Document_@see org.w3c.dom.DocumentFragment_@see org.w3c.dom.Element;protected abstract void marshalDomNode(Object graph, Node node)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,dom,code,node,p,in,practice,node,is,be,a,code,document,node,a,code,document,fragment,node,or,a,code,element,node,in,other,words,a,node,that,accepts,children,param,graph,the,root,of,the,object,graph,to,marshal,param,node,the,dom,node,that,will,contain,the,result,tree,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node,see,org,w3c,dom,document,see,org,w3c,dom,document,fragment,see,org,w3c,dom,element;protected,abstract,void,marshal,dom,node,object,graph,node,node,throws,xml,mapping,exception
AbstractMarshaller -> public final void marshal(Object graph, Result result) throws IOException, XmlMappingException;1328020251;Marshals the object graph with the given root into the provided <code>javax.xml.transform.Result</code>._<p>This implementation inspects the given result, and calls <code>marshalDomResult</code>,_<code>marshalSaxResult</code>, or <code>marshalStreamResult</code>._@param graph the root of the object graph to marshal_@param result the result to marshal to_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if <code>result</code> if neither a <code>DOMResult</code>,_a <code>SAXResult</code>, nor a <code>StreamResult</code>_@see #marshalDomResult(Object, javax.xml.transform.dom.DOMResult)_@see #marshalSaxResult(Object, javax.xml.transform.sax.SAXResult)_@see #marshalStreamResult(Object, javax.xml.transform.stream.StreamResult);public final void marshal(Object graph, Result result) throws IOException, XmlMappingException {_		if (result instanceof DOMResult) {_			marshalDomResult(graph, (DOMResult) result)__		}_		else if (StaxUtils.isStaxResult(result)) {_			marshalStaxResult(graph, result)__		}_		else if (result instanceof SAXResult) {_			marshalSaxResult(graph, (SAXResult) result)__		}_		else if (result instanceof StreamResult) {_			marshalStreamResult(graph, (StreamResult) result)__		}_		else {_			throw new IllegalArgumentException("Unknown Result type: " + result.getClass())__		}_	};marshals,the,object,graph,with,the,given,root,into,the,provided,code,javax,xml,transform,result,code,p,this,implementation,inspects,the,given,result,and,calls,code,marshal,dom,result,code,code,marshal,sax,result,code,or,code,marshal,stream,result,code,param,graph,the,root,of,the,object,graph,to,marshal,param,result,the,result,to,marshal,to,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,result,code,if,neither,a,code,domresult,code,a,code,saxresult,code,nor,a,code,stream,result,code,see,marshal,dom,result,object,javax,xml,transform,dom,domresult,see,marshal,sax,result,object,javax,xml,transform,sax,saxresult,see,marshal,stream,result,object,javax,xml,transform,stream,stream,result;public,final,void,marshal,object,graph,result,result,throws,ioexception,xml,mapping,exception,if,result,instanceof,domresult,marshal,dom,result,graph,domresult,result,else,if,stax,utils,is,stax,result,result,marshal,stax,result,graph,result,else,if,result,instanceof,saxresult,marshal,sax,result,graph,saxresult,result,else,if,result,instanceof,stream,result,marshal,stream,result,graph,stream,result,result,else,throw,new,illegal,argument,exception,unknown,result,type,result,get,class
AbstractMarshaller -> public final void marshal(Object graph, Result result) throws IOException, XmlMappingException;1357119239;Marshals the object graph with the given root into the provided {@code javax.xml.transform.Result}._<p>This implementation inspects the given result, and calls {@code marshalDomResult},_{@code marshalSaxResult}, or {@code marshalStreamResult}._@param graph the root of the object graph to marshal_@param result the result to marshal to_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code result} if neither a {@code DOMResult},_a {@code SAXResult}, nor a {@code StreamResult}_@see #marshalDomResult(Object, javax.xml.transform.dom.DOMResult)_@see #marshalSaxResult(Object, javax.xml.transform.sax.SAXResult)_@see #marshalStreamResult(Object, javax.xml.transform.stream.StreamResult);public final void marshal(Object graph, Result result) throws IOException, XmlMappingException {_		if (result instanceof DOMResult) {_			marshalDomResult(graph, (DOMResult) result)__		}_		else if (StaxUtils.isStaxResult(result)) {_			marshalStaxResult(graph, result)__		}_		else if (result instanceof SAXResult) {_			marshalSaxResult(graph, (SAXResult) result)__		}_		else if (result instanceof StreamResult) {_			marshalStreamResult(graph, (StreamResult) result)__		}_		else {_			throw new IllegalArgumentException("Unknown Result type: " + result.getClass())__		}_	};marshals,the,object,graph,with,the,given,root,into,the,provided,code,javax,xml,transform,result,p,this,implementation,inspects,the,given,result,and,calls,code,marshal,dom,result,code,marshal,sax,result,or,code,marshal,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,result,the,result,to,marshal,to,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,result,if,neither,a,code,domresult,a,code,saxresult,nor,a,code,stream,result,see,marshal,dom,result,object,javax,xml,transform,dom,domresult,see,marshal,sax,result,object,javax,xml,transform,sax,saxresult,see,marshal,stream,result,object,javax,xml,transform,stream,stream,result;public,final,void,marshal,object,graph,result,result,throws,ioexception,xml,mapping,exception,if,result,instanceof,domresult,marshal,dom,result,graph,domresult,result,else,if,stax,utils,is,stax,result,result,marshal,stax,result,graph,result,else,if,result,instanceof,saxresult,marshal,sax,result,graph,saxresult,result,else,if,result,instanceof,stream,result,marshal,stream,result,graph,stream,result,result,else,throw,new,illegal,argument,exception,unknown,result,type,result,get,class
AbstractMarshaller -> protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException;1328020251;Template method for handling <code>StaxResult</code>s._<p>This implementation delegates to <code>marshalXMLSteamWriter</code> or_<code>marshalXMLEventConsumer</code>, depending on what is contained in the_<code>StaxResult</code>._@param graph	the root of the object graph to marshal_@param staxResult a Spring {@link org.springframework.util.xml.StaxSource} or JAXP 1.4 {@link StAXSource}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the <code>domResult</code> is empty_@see #marshalDomNode(Object,org.w3c.dom.Node);protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException {_		XMLStreamWriter streamWriter = StaxUtils.getXMLStreamWriter(staxResult)__		if (streamWriter != null) {_			marshalXmlStreamWriter(graph, streamWriter)__		}_		else {_			XMLEventWriter eventWriter = StaxUtils.getXMLEventWriter(staxResult)__			if (eventWriter != null) {_				marshalXmlEventWriter(graph, eventWriter)__			}_			else {_				throw new IllegalArgumentException("StaxResult contains neither XMLStreamWriter nor XMLEventConsumer")__			}_		}_	};template,method,for,handling,code,stax,result,code,s,p,this,implementation,delegates,to,code,marshal,xmlsteam,writer,code,or,code,marshal,xmlevent,consumer,code,depending,on,what,is,contained,in,the,code,stax,result,code,param,graph,the,root,of,the,object,graph,to,marshal,param,stax,result,a,spring,link,org,springframework,util,xml,stax,source,or,jaxp,1,4,link,st,axsource,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,code,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,stax,result,object,graph,result,stax,result,throws,xml,mapping,exception,xmlstream,writer,stream,writer,stax,utils,get,xmlstream,writer,stax,result,if,stream,writer,null,marshal,xml,stream,writer,graph,stream,writer,else,xmlevent,writer,event,writer,stax,utils,get,xmlevent,writer,stax,result,if,event,writer,null,marshal,xml,event,writer,graph,event,writer,else,throw,new,illegal,argument,exception,stax,result,contains,neither,xmlstream,writer,nor,xmlevent,consumer
AbstractMarshaller -> protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException;1356735495;Template method for handling {@code StaxResult}s._<p>This implementation delegates to {@code marshalXMLSteamWriter} or_{@code marshalXMLEventConsumer}, depending on what is contained in the_{@code StaxResult}._@param graph    the root of the object graph to marshal_@param staxResult a Spring {@link org.springframework.util.xml.StaxSource} or JAXP 1.4 {@link StAXSource}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException {_		XMLStreamWriter streamWriter = StaxUtils.getXMLStreamWriter(staxResult)__		if (streamWriter != null) {_			marshalXmlStreamWriter(graph, streamWriter)__		}_		else {_			XMLEventWriter eventWriter = StaxUtils.getXMLEventWriter(staxResult)__			if (eventWriter != null) {_				marshalXmlEventWriter(graph, eventWriter)__			}_			else {_				throw new IllegalArgumentException("StaxResult contains neither XMLStreamWriter nor XMLEventConsumer")__			}_		}_	};template,method,for,handling,code,stax,result,s,p,this,implementation,delegates,to,code,marshal,xmlsteam,writer,or,code,marshal,xmlevent,consumer,depending,on,what,is,contained,in,the,code,stax,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stax,result,a,spring,link,org,springframework,util,xml,stax,source,or,jaxp,1,4,link,st,axsource,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,stax,result,object,graph,result,stax,result,throws,xml,mapping,exception,xmlstream,writer,stream,writer,stax,utils,get,xmlstream,writer,stax,result,if,stream,writer,null,marshal,xml,stream,writer,graph,stream,writer,else,xmlevent,writer,event,writer,stax,utils,get,xmlevent,writer,stax,result,if,event,writer,null,marshal,xml,event,writer,graph,event,writer,else,throw,new,illegal,argument,exception,stax,result,contains,neither,xmlstream,writer,nor,xmlevent,consumer
AbstractMarshaller -> protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException;1357119239;Template method for handling {@code StaxResult}s._<p>This implementation delegates to {@code marshalXMLSteamWriter} or_{@code marshalXMLEventConsumer}, depending on what is contained in the_{@code StaxResult}._@param graph    the root of the object graph to marshal_@param staxResult a Spring {@link org.springframework.util.xml.StaxSource} or JAXP 1.4 {@link StAXSource}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException {_		XMLStreamWriter streamWriter = StaxUtils.getXMLStreamWriter(staxResult)__		if (streamWriter != null) {_			marshalXmlStreamWriter(graph, streamWriter)__		}_		else {_			XMLEventWriter eventWriter = StaxUtils.getXMLEventWriter(staxResult)__			if (eventWriter != null) {_				marshalXmlEventWriter(graph, eventWriter)__			}_			else {_				throw new IllegalArgumentException("StaxResult contains neither XMLStreamWriter nor XMLEventConsumer")__			}_		}_	};template,method,for,handling,code,stax,result,s,p,this,implementation,delegates,to,code,marshal,xmlsteam,writer,or,code,marshal,xmlevent,consumer,depending,on,what,is,contained,in,the,code,stax,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stax,result,a,spring,link,org,springframework,util,xml,stax,source,or,jaxp,1,4,link,st,axsource,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,stax,result,object,graph,result,stax,result,throws,xml,mapping,exception,xmlstream,writer,stream,writer,stax,utils,get,xmlstream,writer,stax,result,if,stream,writer,null,marshal,xml,stream,writer,graph,stream,writer,else,xmlevent,writer,event,writer,stax,utils,get,xmlevent,writer,stax,result,if,event,writer,null,marshal,xml,event,writer,graph,event,writer,else,throw,new,illegal,argument,exception,stax,result,contains,neither,xmlstream,writer,nor,xmlevent,consumer
AbstractMarshaller -> protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException;1368482696;Template method for handling {@code StaxResult}s._<p>This implementation delegates to {@code marshalXMLSteamWriter} or_{@code marshalXMLEventConsumer}, depending on what is contained in the_{@code StaxResult}._@param graph    the root of the object graph to marshal_@param staxResult a Spring {@link org.springframework.util.xml.StaxSource} or JAXP 1.4 {@link StAXSource}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException {_		XMLStreamWriter streamWriter = StaxUtils.getXMLStreamWriter(staxResult)__		if (streamWriter != null) {_			marshalXmlStreamWriter(graph, streamWriter)__		}_		else {_			XMLEventWriter eventWriter = StaxUtils.getXMLEventWriter(staxResult)__			if (eventWriter != null) {_				marshalXmlEventWriter(graph, eventWriter)__			}_			else {_				throw new IllegalArgumentException("StaxResult contains neither XMLStreamWriter nor XMLEventConsumer")__			}_		}_	};template,method,for,handling,code,stax,result,s,p,this,implementation,delegates,to,code,marshal,xmlsteam,writer,or,code,marshal,xmlevent,consumer,depending,on,what,is,contained,in,the,code,stax,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stax,result,a,spring,link,org,springframework,util,xml,stax,source,or,jaxp,1,4,link,st,axsource,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,stax,result,object,graph,result,stax,result,throws,xml,mapping,exception,xmlstream,writer,stream,writer,stax,utils,get,xmlstream,writer,stax,result,if,stream,writer,null,marshal,xml,stream,writer,graph,stream,writer,else,xmlevent,writer,event,writer,stax,utils,get,xmlevent,writer,stax,result,if,event,writer,null,marshal,xml,event,writer,graph,event,writer,else,throw,new,illegal,argument,exception,stax,result,contains,neither,xmlstream,writer,nor,xmlevent,consumer
AbstractMarshaller -> protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException;1376041400;Template method for handling {@code StaxResult}s._<p>This implementation delegates to {@code marshalXMLSteamWriter} or_{@code marshalXMLEventConsumer}, depending on what is contained in the_{@code StaxResult}._@param graph the root of the object graph to marshal_@param staxResult a JAXP 1.4 {@link StAXSource}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException {_		XMLStreamWriter streamWriter = StaxUtils.getXMLStreamWriter(staxResult)__		if (streamWriter != null) {_			marshalXmlStreamWriter(graph, streamWriter)__		}_		else {_			XMLEventWriter eventWriter = StaxUtils.getXMLEventWriter(staxResult)__			if (eventWriter != null) {_				marshalXmlEventWriter(graph, eventWriter)__			}_			else {_				throw new IllegalArgumentException("StaxResult contains neither XMLStreamWriter nor XMLEventConsumer")__			}_		}_	};template,method,for,handling,code,stax,result,s,p,this,implementation,delegates,to,code,marshal,xmlsteam,writer,or,code,marshal,xmlevent,consumer,depending,on,what,is,contained,in,the,code,stax,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stax,result,a,jaxp,1,4,link,st,axsource,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,stax,result,object,graph,result,stax,result,throws,xml,mapping,exception,xmlstream,writer,stream,writer,stax,utils,get,xmlstream,writer,stax,result,if,stream,writer,null,marshal,xml,stream,writer,graph,stream,writer,else,xmlevent,writer,event,writer,stax,utils,get,xmlevent,writer,stax,result,if,event,writer,null,marshal,xml,event,writer,graph,event,writer,else,throw,new,illegal,argument,exception,stax,result,contains,neither,xmlstream,writer,nor,xmlevent,consumer
AbstractMarshaller -> protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException;1392767670;Template method for handling {@code StaxResult}s._<p>This implementation delegates to {@code marshalXMLSteamWriter} or_{@code marshalXMLEventConsumer}, depending on what is contained in the_{@code StaxResult}._@param graph the root of the object graph to marshal_@param staxResult a JAXP 1.4 {@link StAXSource}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException {_		XMLStreamWriter streamWriter = StaxUtils.getXMLStreamWriter(staxResult)__		if (streamWriter != null) {_			marshalXmlStreamWriter(graph, streamWriter)__		}_		else {_			XMLEventWriter eventWriter = StaxUtils.getXMLEventWriter(staxResult)__			if (eventWriter != null) {_				marshalXmlEventWriter(graph, eventWriter)__			}_			else {_				throw new IllegalArgumentException("StaxResult contains neither XMLStreamWriter nor XMLEventConsumer")__			}_		}_	};template,method,for,handling,code,stax,result,s,p,this,implementation,delegates,to,code,marshal,xmlsteam,writer,or,code,marshal,xmlevent,consumer,depending,on,what,is,contained,in,the,code,stax,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stax,result,a,jaxp,1,4,link,st,axsource,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,stax,result,object,graph,result,stax,result,throws,xml,mapping,exception,xmlstream,writer,stream,writer,stax,utils,get,xmlstream,writer,stax,result,if,stream,writer,null,marshal,xml,stream,writer,graph,stream,writer,else,xmlevent,writer,event,writer,stax,utils,get,xmlevent,writer,stax,result,if,event,writer,null,marshal,xml,event,writer,graph,event,writer,else,throw,new,illegal,argument,exception,stax,result,contains,neither,xmlstream,writer,nor,xmlevent,consumer
AbstractMarshaller -> protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException;1397058176;Template method for handling {@code StaxResult}s._<p>This implementation delegates to {@code marshalXMLSteamWriter} or_{@code marshalXMLEventConsumer}, depending on what is contained in the_{@code StaxResult}._@param graph the root of the object graph to marshal_@param staxResult a JAXP 1.4 {@link StAXSource}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException {_		XMLStreamWriter streamWriter = StaxUtils.getXMLStreamWriter(staxResult)__		if (streamWriter != null) {_			marshalXmlStreamWriter(graph, streamWriter)__		}_		else {_			XMLEventWriter eventWriter = StaxUtils.getXMLEventWriter(staxResult)__			if (eventWriter != null) {_				marshalXmlEventWriter(graph, eventWriter)__			}_			else {_				throw new IllegalArgumentException("StaxResult contains neither XMLStreamWriter nor XMLEventConsumer")__			}_		}_	};template,method,for,handling,code,stax,result,s,p,this,implementation,delegates,to,code,marshal,xmlsteam,writer,or,code,marshal,xmlevent,consumer,depending,on,what,is,contained,in,the,code,stax,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stax,result,a,jaxp,1,4,link,st,axsource,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,stax,result,object,graph,result,stax,result,throws,xml,mapping,exception,xmlstream,writer,stream,writer,stax,utils,get,xmlstream,writer,stax,result,if,stream,writer,null,marshal,xml,stream,writer,graph,stream,writer,else,xmlevent,writer,event,writer,stax,utils,get,xmlevent,writer,stax,result,if,event,writer,null,marshal,xml,event,writer,graph,event,writer,else,throw,new,illegal,argument,exception,stax,result,contains,neither,xmlstream,writer,nor,xmlevent,consumer
AbstractMarshaller -> protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException;1397069887;Template method for handling {@code StaxResult}s._<p>This implementation delegates to {@code marshalXMLSteamWriter} or_{@code marshalXMLEventConsumer}, depending on what is contained in the_{@code StaxResult}._@param graph the root of the object graph to marshal_@param staxResult a JAXP 1.4 {@link StAXSource}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException {_		XMLStreamWriter streamWriter = StaxUtils.getXMLStreamWriter(staxResult)__		if (streamWriter != null) {_			marshalXmlStreamWriter(graph, streamWriter)__		}_		else {_			XMLEventWriter eventWriter = StaxUtils.getXMLEventWriter(staxResult)__			if (eventWriter != null) {_				marshalXmlEventWriter(graph, eventWriter)__			}_			else {_				throw new IllegalArgumentException("StaxResult contains neither XMLStreamWriter nor XMLEventConsumer")__			}_		}_	};template,method,for,handling,code,stax,result,s,p,this,implementation,delegates,to,code,marshal,xmlsteam,writer,or,code,marshal,xmlevent,consumer,depending,on,what,is,contained,in,the,code,stax,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stax,result,a,jaxp,1,4,link,st,axsource,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,stax,result,object,graph,result,stax,result,throws,xml,mapping,exception,xmlstream,writer,stream,writer,stax,utils,get,xmlstream,writer,stax,result,if,stream,writer,null,marshal,xml,stream,writer,graph,stream,writer,else,xmlevent,writer,event,writer,stax,utils,get,xmlevent,writer,stax,result,if,event,writer,null,marshal,xml,event,writer,graph,event,writer,else,throw,new,illegal,argument,exception,stax,result,contains,neither,xmlstream,writer,nor,xmlevent,consumer
AbstractMarshaller -> protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException;1398638859;Template method for handling {@code StaxResult}s._<p>This implementation delegates to {@code marshalXMLSteamWriter} or_{@code marshalXMLEventConsumer}, depending on what is contained in the_{@code StaxResult}._@param graph the root of the object graph to marshal_@param staxResult a JAXP 1.4 {@link StAXSource}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException {_		XMLStreamWriter streamWriter = StaxUtils.getXMLStreamWriter(staxResult)__		if (streamWriter != null) {_			marshalXmlStreamWriter(graph, streamWriter)__		}_		else {_			XMLEventWriter eventWriter = StaxUtils.getXMLEventWriter(staxResult)__			if (eventWriter != null) {_				marshalXmlEventWriter(graph, eventWriter)__			}_			else {_				throw new IllegalArgumentException("StaxResult contains neither XMLStreamWriter nor XMLEventConsumer")__			}_		}_	};template,method,for,handling,code,stax,result,s,p,this,implementation,delegates,to,code,marshal,xmlsteam,writer,or,code,marshal,xmlevent,consumer,depending,on,what,is,contained,in,the,code,stax,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stax,result,a,jaxp,1,4,link,st,axsource,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,stax,result,object,graph,result,stax,result,throws,xml,mapping,exception,xmlstream,writer,stream,writer,stax,utils,get,xmlstream,writer,stax,result,if,stream,writer,null,marshal,xml,stream,writer,graph,stream,writer,else,xmlevent,writer,event,writer,stax,utils,get,xmlevent,writer,stax,result,if,event,writer,null,marshal,xml,event,writer,graph,event,writer,else,throw,new,illegal,argument,exception,stax,result,contains,neither,xmlstream,writer,nor,xmlevent,consumer
AbstractMarshaller -> protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException;1400553912;Template method for handling {@code StaxResult}s._<p>This implementation delegates to {@code marshalXMLSteamWriter} or_{@code marshalXMLEventConsumer}, depending on what is contained in the_{@code StaxResult}._@param graph the root of the object graph to marshal_@param staxResult a JAXP 1.4 {@link StAXSource}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException {_		XMLStreamWriter streamWriter = StaxUtils.getXMLStreamWriter(staxResult)__		if (streamWriter != null) {_			marshalXmlStreamWriter(graph, streamWriter)__		}_		else {_			XMLEventWriter eventWriter = StaxUtils.getXMLEventWriter(staxResult)__			if (eventWriter != null) {_				marshalXmlEventWriter(graph, eventWriter)__			}_			else {_				throw new IllegalArgumentException("StaxResult contains neither XMLStreamWriter nor XMLEventConsumer")__			}_		}_	};template,method,for,handling,code,stax,result,s,p,this,implementation,delegates,to,code,marshal,xmlsteam,writer,or,code,marshal,xmlevent,consumer,depending,on,what,is,contained,in,the,code,stax,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stax,result,a,jaxp,1,4,link,st,axsource,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,stax,result,object,graph,result,stax,result,throws,xml,mapping,exception,xmlstream,writer,stream,writer,stax,utils,get,xmlstream,writer,stax,result,if,stream,writer,null,marshal,xml,stream,writer,graph,stream,writer,else,xmlevent,writer,event,writer,stax,utils,get,xmlevent,writer,stax,result,if,event,writer,null,marshal,xml,event,writer,graph,event,writer,else,throw,new,illegal,argument,exception,stax,result,contains,neither,xmlstream,writer,nor,xmlevent,consumer
AbstractMarshaller -> protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException;1435665021;Template method for handling {@code StaxResult}s._<p>This implementation delegates to {@code marshalXMLSteamWriter} or_{@code marshalXMLEventConsumer}, depending on what is contained in the_{@code StaxResult}._@param graph the root of the object graph to marshal_@param staxResult a JAXP 1.4 {@link StAXSource}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException {_		XMLStreamWriter streamWriter = StaxUtils.getXMLStreamWriter(staxResult)__		if (streamWriter != null) {_			marshalXmlStreamWriter(graph, streamWriter)__		}_		else {_			XMLEventWriter eventWriter = StaxUtils.getXMLEventWriter(staxResult)__			if (eventWriter != null) {_				marshalXmlEventWriter(graph, eventWriter)__			}_			else {_				throw new IllegalArgumentException("StaxResult contains neither XMLStreamWriter nor XMLEventConsumer")__			}_		}_	};template,method,for,handling,code,stax,result,s,p,this,implementation,delegates,to,code,marshal,xmlsteam,writer,or,code,marshal,xmlevent,consumer,depending,on,what,is,contained,in,the,code,stax,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stax,result,a,jaxp,1,4,link,st,axsource,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,stax,result,object,graph,result,stax,result,throws,xml,mapping,exception,xmlstream,writer,stream,writer,stax,utils,get,xmlstream,writer,stax,result,if,stream,writer,null,marshal,xml,stream,writer,graph,stream,writer,else,xmlevent,writer,event,writer,stax,utils,get,xmlevent,writer,stax,result,if,event,writer,null,marshal,xml,event,writer,graph,event,writer,else,throw,new,illegal,argument,exception,stax,result,contains,neither,xmlstream,writer,nor,xmlevent,consumer
AbstractMarshaller -> protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException;1455117733;Template method for handling {@code StaxResult}s._<p>This implementation delegates to {@code marshalXMLSteamWriter} or_{@code marshalXMLEventConsumer}, depending on what is contained in the_{@code StaxResult}._@param graph the root of the object graph to marshal_@param staxResult a JAXP 1.4 {@link StAXSource}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException {_		XMLStreamWriter streamWriter = StaxUtils.getXMLStreamWriter(staxResult)__		if (streamWriter != null) {_			marshalXmlStreamWriter(graph, streamWriter)__		}_		else {_			XMLEventWriter eventWriter = StaxUtils.getXMLEventWriter(staxResult)__			if (eventWriter != null) {_				marshalXmlEventWriter(graph, eventWriter)__			}_			else {_				throw new IllegalArgumentException("StaxResult contains neither XMLStreamWriter nor XMLEventConsumer")__			}_		}_	};template,method,for,handling,code,stax,result,s,p,this,implementation,delegates,to,code,marshal,xmlsteam,writer,or,code,marshal,xmlevent,consumer,depending,on,what,is,contained,in,the,code,stax,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stax,result,a,jaxp,1,4,link,st,axsource,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,stax,result,object,graph,result,stax,result,throws,xml,mapping,exception,xmlstream,writer,stream,writer,stax,utils,get,xmlstream,writer,stax,result,if,stream,writer,null,marshal,xml,stream,writer,graph,stream,writer,else,xmlevent,writer,event,writer,stax,utils,get,xmlevent,writer,stax,result,if,event,writer,null,marshal,xml,event,writer,graph,event,writer,else,throw,new,illegal,argument,exception,stax,result,contains,neither,xmlstream,writer,nor,xmlevent,consumer
AbstractMarshaller -> protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException;1468948866;Template method for handling {@code StaxResult}s._<p>This implementation delegates to {@code marshalXMLSteamWriter} or_{@code marshalXMLEventConsumer}, depending on what is contained in the_{@code StaxResult}._@param graph the root of the object graph to marshal_@param staxResult a JAXP 1.4 {@link StAXSource}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException {_		XMLStreamWriter streamWriter = StaxUtils.getXMLStreamWriter(staxResult)__		if (streamWriter != null) {_			marshalXmlStreamWriter(graph, streamWriter)__		}_		else {_			XMLEventWriter eventWriter = StaxUtils.getXMLEventWriter(staxResult)__			if (eventWriter != null) {_				marshalXmlEventWriter(graph, eventWriter)__			}_			else {_				throw new IllegalArgumentException("StaxResult contains neither XMLStreamWriter nor XMLEventConsumer")__			}_		}_	};template,method,for,handling,code,stax,result,s,p,this,implementation,delegates,to,code,marshal,xmlsteam,writer,or,code,marshal,xmlevent,consumer,depending,on,what,is,contained,in,the,code,stax,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stax,result,a,jaxp,1,4,link,st,axsource,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,stax,result,object,graph,result,stax,result,throws,xml,mapping,exception,xmlstream,writer,stream,writer,stax,utils,get,xmlstream,writer,stax,result,if,stream,writer,null,marshal,xml,stream,writer,graph,stream,writer,else,xmlevent,writer,event,writer,stax,utils,get,xmlevent,writer,stax,result,if,event,writer,null,marshal,xml,event,writer,graph,event,writer,else,throw,new,illegal,argument,exception,stax,result,contains,neither,xmlstream,writer,nor,xmlevent,consumer
AbstractMarshaller -> protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException;1483750478;Template method for handling {@code StaxResult}s._<p>This implementation delegates to {@code marshalXMLSteamWriter} or_{@code marshalXMLEventConsumer}, depending on what is contained in the_{@code StaxResult}._@param graph the root of the object graph to marshal_@param staxResult a JAXP 1.4 {@link StAXSource}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException {_		XMLStreamWriter streamWriter = StaxUtils.getXMLStreamWriter(staxResult)__		if (streamWriter != null) {_			marshalXmlStreamWriter(graph, streamWriter)__		}_		else {_			XMLEventWriter eventWriter = StaxUtils.getXMLEventWriter(staxResult)__			if (eventWriter != null) {_				marshalXmlEventWriter(graph, eventWriter)__			}_			else {_				throw new IllegalArgumentException("StaxResult contains neither XMLStreamWriter nor XMLEventConsumer")__			}_		}_	};template,method,for,handling,code,stax,result,s,p,this,implementation,delegates,to,code,marshal,xmlsteam,writer,or,code,marshal,xmlevent,consumer,depending,on,what,is,contained,in,the,code,stax,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stax,result,a,jaxp,1,4,link,st,axsource,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,stax,result,object,graph,result,stax,result,throws,xml,mapping,exception,xmlstream,writer,stream,writer,stax,utils,get,xmlstream,writer,stax,result,if,stream,writer,null,marshal,xml,stream,writer,graph,stream,writer,else,xmlevent,writer,event,writer,stax,utils,get,xmlevent,writer,stax,result,if,event,writer,null,marshal,xml,event,writer,graph,event,writer,else,throw,new,illegal,argument,exception,stax,result,contains,neither,xmlstream,writer,nor,xmlevent,consumer
AbstractMarshaller -> protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException;1484301200;Template method for handling {@code StaxResult}s._<p>This implementation delegates to {@code marshalXMLSteamWriter} or_{@code marshalXMLEventConsumer}, depending on what is contained in the_{@code StaxResult}._@param graph the root of the object graph to marshal_@param staxResult a JAXP 1.4 {@link StAXSource}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException {_		XMLStreamWriter streamWriter = StaxUtils.getXMLStreamWriter(staxResult)__		if (streamWriter != null) {_			marshalXmlStreamWriter(graph, streamWriter)__		}_		else {_			XMLEventWriter eventWriter = StaxUtils.getXMLEventWriter(staxResult)__			if (eventWriter != null) {_				marshalXmlEventWriter(graph, eventWriter)__			}_			else {_				throw new IllegalArgumentException("StaxResult contains neither XMLStreamWriter nor XMLEventConsumer")__			}_		}_	};template,method,for,handling,code,stax,result,s,p,this,implementation,delegates,to,code,marshal,xmlsteam,writer,or,code,marshal,xmlevent,consumer,depending,on,what,is,contained,in,the,code,stax,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stax,result,a,jaxp,1,4,link,st,axsource,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,stax,result,object,graph,result,stax,result,throws,xml,mapping,exception,xmlstream,writer,stream,writer,stax,utils,get,xmlstream,writer,stax,result,if,stream,writer,null,marshal,xml,stream,writer,graph,stream,writer,else,xmlevent,writer,event,writer,stax,utils,get,xmlevent,writer,stax,result,if,event,writer,null,marshal,xml,event,writer,graph,event,writer,else,throw,new,illegal,argument,exception,stax,result,contains,neither,xmlstream,writer,nor,xmlevent,consumer
AbstractMarshaller -> protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException;1495868221;Template method for handling {@code StaxResult}s._<p>This implementation delegates to {@code marshalXMLSteamWriter} or_{@code marshalXMLEventConsumer}, depending on what is contained in the_{@code StaxResult}._@param graph the root of the object graph to marshal_@param staxResult a JAXP 1.4 {@link StAXSource}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException {_		XMLStreamWriter streamWriter = StaxUtils.getXMLStreamWriter(staxResult)__		if (streamWriter != null) {_			marshalXmlStreamWriter(graph, streamWriter)__		}_		else {_			XMLEventWriter eventWriter = StaxUtils.getXMLEventWriter(staxResult)__			if (eventWriter != null) {_				marshalXmlEventWriter(graph, eventWriter)__			}_			else {_				throw new IllegalArgumentException("StaxResult contains neither XMLStreamWriter nor XMLEventConsumer")__			}_		}_	};template,method,for,handling,code,stax,result,s,p,this,implementation,delegates,to,code,marshal,xmlsteam,writer,or,code,marshal,xmlevent,consumer,depending,on,what,is,contained,in,the,code,stax,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stax,result,a,jaxp,1,4,link,st,axsource,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,stax,result,object,graph,result,stax,result,throws,xml,mapping,exception,xmlstream,writer,stream,writer,stax,utils,get,xmlstream,writer,stax,result,if,stream,writer,null,marshal,xml,stream,writer,graph,stream,writer,else,xmlevent,writer,event,writer,stax,utils,get,xmlevent,writer,stax,result,if,event,writer,null,marshal,xml,event,writer,graph,event,writer,else,throw,new,illegal,argument,exception,stax,result,contains,neither,xmlstream,writer,nor,xmlevent,consumer
AbstractMarshaller -> protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException;1498780456;Template method for handling {@code StaxResult}s._<p>This implementation delegates to {@code marshalXMLSteamWriter} or_{@code marshalXMLEventConsumer}, depending on what is contained in the_{@code StaxResult}._@param graph the root of the object graph to marshal_@param staxResult a JAXP 1.4 {@link StAXSource}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException {_		XMLStreamWriter streamWriter = StaxUtils.getXMLStreamWriter(staxResult)__		if (streamWriter != null) {_			marshalXmlStreamWriter(graph, streamWriter)__		}_		else {_			XMLEventWriter eventWriter = StaxUtils.getXMLEventWriter(staxResult)__			if (eventWriter != null) {_				marshalXmlEventWriter(graph, eventWriter)__			}_			else {_				throw new IllegalArgumentException("StaxResult contains neither XMLStreamWriter nor XMLEventConsumer")__			}_		}_	};template,method,for,handling,code,stax,result,s,p,this,implementation,delegates,to,code,marshal,xmlsteam,writer,or,code,marshal,xmlevent,consumer,depending,on,what,is,contained,in,the,code,stax,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stax,result,a,jaxp,1,4,link,st,axsource,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,stax,result,object,graph,result,stax,result,throws,xml,mapping,exception,xmlstream,writer,stream,writer,stax,utils,get,xmlstream,writer,stax,result,if,stream,writer,null,marshal,xml,stream,writer,graph,stream,writer,else,xmlevent,writer,event,writer,stax,utils,get,xmlevent,writer,stax,result,if,event,writer,null,marshal,xml,event,writer,graph,event,writer,else,throw,new,illegal,argument,exception,stax,result,contains,neither,xmlstream,writer,nor,xmlevent,consumer
AbstractMarshaller -> protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException;1518770299;Template method for handling {@code StaxResult}s._<p>This implementation delegates to {@code marshalXMLSteamWriter} or_{@code marshalXMLEventConsumer}, depending on what is contained in the_{@code StaxResult}._@param graph the root of the object graph to marshal_@param staxResult a JAXP 1.4 {@link StAXSource}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException {_		XMLStreamWriter streamWriter = StaxUtils.getXMLStreamWriter(staxResult)__		if (streamWriter != null) {_			marshalXmlStreamWriter(graph, streamWriter)__		}_		else {_			XMLEventWriter eventWriter = StaxUtils.getXMLEventWriter(staxResult)__			if (eventWriter != null) {_				marshalXmlEventWriter(graph, eventWriter)__			}_			else {_				throw new IllegalArgumentException("StaxResult contains neither XMLStreamWriter nor XMLEventConsumer")__			}_		}_	};template,method,for,handling,code,stax,result,s,p,this,implementation,delegates,to,code,marshal,xmlsteam,writer,or,code,marshal,xmlevent,consumer,depending,on,what,is,contained,in,the,code,stax,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stax,result,a,jaxp,1,4,link,st,axsource,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,stax,result,object,graph,result,stax,result,throws,xml,mapping,exception,xmlstream,writer,stream,writer,stax,utils,get,xmlstream,writer,stax,result,if,stream,writer,null,marshal,xml,stream,writer,graph,stream,writer,else,xmlevent,writer,event,writer,stax,utils,get,xmlevent,writer,stax,result,if,event,writer,null,marshal,xml,event,writer,graph,event,writer,else,throw,new,illegal,argument,exception,stax,result,contains,neither,xmlstream,writer,nor,xmlevent,consumer
AbstractMarshaller -> protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException;1518770299;Template method for handling {@code StaxResult}s._<p>This implementation delegates to {@code marshalXMLSteamWriter} or_{@code marshalXMLEventConsumer}, depending on what is contained in the_{@code StaxResult}._@param graph the root of the object graph to marshal_@param staxResult a JAXP 1.4 {@link StAXSource}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException {_		XMLStreamWriter streamWriter = StaxUtils.getXMLStreamWriter(staxResult)__		if (streamWriter != null) {_			marshalXmlStreamWriter(graph, streamWriter)__		}_		else {_			XMLEventWriter eventWriter = StaxUtils.getXMLEventWriter(staxResult)__			if (eventWriter != null) {_				marshalXmlEventWriter(graph, eventWriter)__			}_			else {_				throw new IllegalArgumentException("StaxResult contains neither XMLStreamWriter nor XMLEventConsumer")__			}_		}_	};template,method,for,handling,code,stax,result,s,p,this,implementation,delegates,to,code,marshal,xmlsteam,writer,or,code,marshal,xmlevent,consumer,depending,on,what,is,contained,in,the,code,stax,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stax,result,a,jaxp,1,4,link,st,axsource,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,stax,result,object,graph,result,stax,result,throws,xml,mapping,exception,xmlstream,writer,stream,writer,stax,utils,get,xmlstream,writer,stax,result,if,stream,writer,null,marshal,xml,stream,writer,graph,stream,writer,else,xmlevent,writer,event,writer,stax,utils,get,xmlevent,writer,stax,result,if,event,writer,null,marshal,xml,event,writer,graph,event,writer,else,throw,new,illegal,argument,exception,stax,result,contains,neither,xmlstream,writer,nor,xmlevent,consumer
AbstractMarshaller -> protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException;1530174524;Template method for handling {@code StaxResult}s._<p>This implementation delegates to {@code marshalXMLSteamWriter} or_{@code marshalXMLEventConsumer}, depending on what is contained in the_{@code StaxResult}._@param graph the root of the object graph to marshal_@param staxResult a JAXP 1.4 {@link StAXSource}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException {_		XMLStreamWriter streamWriter = StaxUtils.getXMLStreamWriter(staxResult)__		if (streamWriter != null) {_			marshalXmlStreamWriter(graph, streamWriter)__		}_		else {_			XMLEventWriter eventWriter = StaxUtils.getXMLEventWriter(staxResult)__			if (eventWriter != null) {_				marshalXmlEventWriter(graph, eventWriter)__			}_			else {_				throw new IllegalArgumentException("StaxResult contains neither XMLStreamWriter nor XMLEventConsumer")__			}_		}_	};template,method,for,handling,code,stax,result,s,p,this,implementation,delegates,to,code,marshal,xmlsteam,writer,or,code,marshal,xmlevent,consumer,depending,on,what,is,contained,in,the,code,stax,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stax,result,a,jaxp,1,4,link,st,axsource,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,stax,result,object,graph,result,stax,result,throws,xml,mapping,exception,xmlstream,writer,stream,writer,stax,utils,get,xmlstream,writer,stax,result,if,stream,writer,null,marshal,xml,stream,writer,graph,stream,writer,else,xmlevent,writer,event,writer,stax,utils,get,xmlevent,writer,stax,result,if,event,writer,null,marshal,xml,event,writer,graph,event,writer,else,throw,new,illegal,argument,exception,stax,result,contains,neither,xmlstream,writer,nor,xmlevent,consumer
AbstractMarshaller -> protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException;1530174524;Template method for handling {@code StaxResult}s._<p>This implementation delegates to {@code marshalXMLSteamWriter} or_{@code marshalXMLEventConsumer}, depending on what is contained in the_{@code StaxResult}._@param graph the root of the object graph to marshal_@param staxResult a JAXP 1.4 {@link StAXSource}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalStaxResult(Object graph, Result staxResult) throws XmlMappingException {_		XMLStreamWriter streamWriter = StaxUtils.getXMLStreamWriter(staxResult)__		if (streamWriter != null) {_			marshalXmlStreamWriter(graph, streamWriter)__		}_		else {_			XMLEventWriter eventWriter = StaxUtils.getXMLEventWriter(staxResult)__			if (eventWriter != null) {_				marshalXmlEventWriter(graph, eventWriter)__			}_			else {_				throw new IllegalArgumentException("StaxResult contains neither XMLStreamWriter nor XMLEventConsumer")__			}_		}_	};template,method,for,handling,code,stax,result,s,p,this,implementation,delegates,to,code,marshal,xmlsteam,writer,or,code,marshal,xmlevent,consumer,depending,on,what,is,contained,in,the,code,stax,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stax,result,a,jaxp,1,4,link,st,axsource,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,stax,result,object,graph,result,stax,result,throws,xml,mapping,exception,xmlstream,writer,stream,writer,stax,utils,get,xmlstream,writer,stax,result,if,stream,writer,null,marshal,xml,stream,writer,graph,stream,writer,else,xmlevent,writer,event,writer,stax,utils,get,xmlevent,writer,stax,result,if,event,writer,null,marshal,xml,event,writer,graph,event,writer,else,throw,new,illegal,argument,exception,stax,result,contains,neither,xmlstream,writer,nor,xmlevent,consumer
AbstractMarshaller -> protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader) 			throws XmlMappingException_;1328020251;Abstract template method for unmarshalling from a given Stax <code>XMLEventReader</code>._@param eventReader the <code>XMLEventReader</code> to read from_@return the object graph_@throws XmlMappingException if the given event reader cannot be converted to an object;protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlevent,reader,code,param,event,reader,the,code,xmlevent,reader,code,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,event,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,event,reader,xmlevent,reader,event,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader) 			throws XmlMappingException_;1356735495;Abstract template method for unmarshalling from a given Stax {@code XMLEventReader}._@param eventReader the {@code XMLEventReader} to read from_@return the object graph_@throws XmlMappingException if the given event reader cannot be converted to an object;protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlevent,reader,param,event,reader,the,code,xmlevent,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,event,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,event,reader,xmlevent,reader,event,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader) 			throws XmlMappingException_;1357119239;Abstract template method for unmarshalling from a given Stax {@code XMLEventReader}._@param eventReader the {@code XMLEventReader} to read from_@return the object graph_@throws XmlMappingException if the given event reader cannot be converted to an object;protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlevent,reader,param,event,reader,the,code,xmlevent,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,event,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,event,reader,xmlevent,reader,event,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader) 			throws XmlMappingException_;1368482696;Abstract template method for unmarshalling from a given Stax {@code XMLEventReader}._@param eventReader the {@code XMLEventReader} to read from_@return the object graph_@throws XmlMappingException if the given event reader cannot be converted to an object;protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlevent,reader,param,event,reader,the,code,xmlevent,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,event,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,event,reader,xmlevent,reader,event,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader) 			throws XmlMappingException_;1376041400;Abstract template method for unmarshalling from a given Stax {@code XMLEventReader}._@param eventReader the {@code XMLEventReader} to read from_@return the object graph_@throws XmlMappingException if the given event reader cannot be converted to an object;protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlevent,reader,param,event,reader,the,code,xmlevent,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,event,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,event,reader,xmlevent,reader,event,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader) 			throws XmlMappingException_;1392767670;Abstract template method for unmarshalling from a given Stax {@code XMLEventReader}._@param eventReader the {@code XMLEventReader} to read from_@return the object graph_@throws XmlMappingException if the given event reader cannot be converted to an object;protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlevent,reader,param,event,reader,the,code,xmlevent,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,event,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,event,reader,xmlevent,reader,event,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader) 			throws XmlMappingException_;1397058176;Abstract template method for unmarshalling from a given Stax {@code XMLEventReader}._@param eventReader the {@code XMLEventReader} to read from_@return the object graph_@throws XmlMappingException if the given event reader cannot be converted to an object;protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlevent,reader,param,event,reader,the,code,xmlevent,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,event,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,event,reader,xmlevent,reader,event,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader) 			throws XmlMappingException_;1397069887;Abstract template method for unmarshalling from a given Stax {@code XMLEventReader}._@param eventReader the {@code XMLEventReader} to read from_@return the object graph_@throws XmlMappingException if the given event reader cannot be converted to an object;protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlevent,reader,param,event,reader,the,code,xmlevent,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,event,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,event,reader,xmlevent,reader,event,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader) 			throws XmlMappingException_;1398638859;Abstract template method for unmarshalling from a given Stax {@code XMLEventReader}._@param eventReader the {@code XMLEventReader} to read from_@return the object graph_@throws XmlMappingException if the given event reader cannot be converted to an object;protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlevent,reader,param,event,reader,the,code,xmlevent,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,event,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,event,reader,xmlevent,reader,event,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader) 			throws XmlMappingException_;1400553912;Abstract template method for unmarshalling from a given Stax {@code XMLEventReader}._@param eventReader the {@code XMLEventReader} to read from_@return the object graph_@throws XmlMappingException if the given event reader cannot be converted to an object;protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlevent,reader,param,event,reader,the,code,xmlevent,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,event,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,event,reader,xmlevent,reader,event,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader) 			throws XmlMappingException_;1435665021;Abstract template method for unmarshalling from a given Stax {@code XMLEventReader}._@param eventReader the {@code XMLEventReader} to read from_@return the object graph_@throws XmlMappingException if the given event reader cannot be converted to an object;protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlevent,reader,param,event,reader,the,code,xmlevent,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,event,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,event,reader,xmlevent,reader,event,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader) 			throws XmlMappingException_;1455117733;Abstract template method for unmarshalling from a given Stax {@code XMLEventReader}._@param eventReader the {@code XMLEventReader} to read from_@return the object graph_@throws XmlMappingException if the given event reader cannot be converted to an object;protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlevent,reader,param,event,reader,the,code,xmlevent,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,event,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,event,reader,xmlevent,reader,event,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader) 			throws XmlMappingException_;1468948866;Abstract template method for unmarshalling from a given Stax {@code XMLEventReader}._@param eventReader the {@code XMLEventReader} to read from_@return the object graph_@throws XmlMappingException if the given event reader cannot be converted to an object;protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlevent,reader,param,event,reader,the,code,xmlevent,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,event,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,event,reader,xmlevent,reader,event,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader) 			throws XmlMappingException_;1483750478;Abstract template method for unmarshalling from a given Stax {@code XMLEventReader}._@param eventReader the {@code XMLEventReader} to read from_@return the object graph_@throws XmlMappingException if the given event reader cannot be converted to an object;protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlevent,reader,param,event,reader,the,code,xmlevent,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,event,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,event,reader,xmlevent,reader,event,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader) 			throws XmlMappingException_;1484301200;Abstract template method for unmarshalling from a given Stax {@code XMLEventReader}._@param eventReader the {@code XMLEventReader} to read from_@return the object graph_@throws XmlMappingException if the given event reader cannot be converted to an object;protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlevent,reader,param,event,reader,the,code,xmlevent,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,event,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,event,reader,xmlevent,reader,event,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader) 			throws XmlMappingException_;1495868221;Abstract template method for unmarshalling from a given Stax {@code XMLEventReader}._@param eventReader the {@code XMLEventReader} to read from_@return the object graph_@throws XmlMappingException if the given event reader cannot be converted to an object;protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlevent,reader,param,event,reader,the,code,xmlevent,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,event,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,event,reader,xmlevent,reader,event,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader) 			throws XmlMappingException_;1498780456;Abstract template method for unmarshalling from a given Stax {@code XMLEventReader}._@param eventReader the {@code XMLEventReader} to read from_@return the object graph_@throws XmlMappingException if the given event reader cannot be converted to an object;protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlevent,reader,param,event,reader,the,code,xmlevent,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,event,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,event,reader,xmlevent,reader,event,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader) 			throws XmlMappingException_;1518770299;Abstract template method for unmarshalling from a given Stax {@code XMLEventReader}._@param eventReader the {@code XMLEventReader} to read from_@return the object graph_@throws XmlMappingException if the given event reader cannot be converted to an object;protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlevent,reader,param,event,reader,the,code,xmlevent,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,event,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,event,reader,xmlevent,reader,event,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader) 			throws XmlMappingException_;1518770299;Abstract template method for unmarshalling from a given Stax {@code XMLEventReader}._@param eventReader the {@code XMLEventReader} to read from_@return the object graph_@throws XmlMappingException if the given event reader cannot be converted to an object;protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlevent,reader,param,event,reader,the,code,xmlevent,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,event,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,event,reader,xmlevent,reader,event,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader) 			throws XmlMappingException_;1530174524;Abstract template method for unmarshalling from a given Stax {@code XMLEventReader}._@param eventReader the {@code XMLEventReader} to read from_@return the object graph_@throws XmlMappingException if the given event reader cannot be converted to an object;protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlevent,reader,param,event,reader,the,code,xmlevent,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,event,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,event,reader,xmlevent,reader,event,reader,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader) 			throws XmlMappingException_;1530174524;Abstract template method for unmarshalling from a given Stax {@code XMLEventReader}._@param eventReader the {@code XMLEventReader} to read from_@return the object graph_@throws XmlMappingException if the given event reader cannot be converted to an object;protected abstract Object unmarshalXmlEventReader(XMLEventReader eventReader)_			throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,stax,code,xmlevent,reader,param,event,reader,the,code,xmlevent,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,event,reader,cannot,be,converted,to,an,object;protected,abstract,object,unmarshal,xml,event,reader,xmlevent,reader,event,reader,throws,xml,mapping,exception
AbstractMarshaller -> public final Object unmarshal(Source source) throws IOException, XmlMappingException;1328020251;Unmarshals the given provided <code>javax.xml.transform.Source</code> into an object graph._<p>This implementation inspects the given result, and calls <code>unmarshalDomSource</code>,_<code>unmarshalSaxSource</code>, or <code>unmarshalStreamSource</code>._@param source the source to marshal from_@return the object graph_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if <code>source</code> is neither a <code>DOMSource</code>,_a <code>SAXSource</code>, nor a <code>StreamSource</code>_@see #unmarshalDomSource(javax.xml.transform.dom.DOMSource)_@see #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)_@see #unmarshalStreamSource(javax.xml.transform.stream.StreamSource);public final Object unmarshal(Source source) throws IOException, XmlMappingException {_		if (source instanceof DOMSource) {_			return unmarshalDomSource((DOMSource) source)__		}_		else if (StaxUtils.isStaxSource(source)) {_			return unmarshalStaxSource(source)__		}_		else if (source instanceof SAXSource) {_			return unmarshalSaxSource((SAXSource) source)__		}_		else if (source instanceof StreamSource) {_			return unmarshalStreamSource((StreamSource) source)__		}_		else {_			throw new IllegalArgumentException("Unknown Source type: " + source.getClass())__		}_	};unmarshals,the,given,provided,code,javax,xml,transform,source,code,into,an,object,graph,p,this,implementation,inspects,the,given,result,and,calls,code,unmarshal,dom,source,code,code,unmarshal,sax,source,code,or,code,unmarshal,stream,source,code,param,source,the,source,to,marshal,from,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,code,source,code,is,neither,a,code,domsource,code,a,code,saxsource,code,nor,a,code,stream,source,code,see,unmarshal,dom,source,javax,xml,transform,dom,domsource,see,unmarshal,sax,source,javax,xml,transform,sax,saxsource,see,unmarshal,stream,source,javax,xml,transform,stream,stream,source;public,final,object,unmarshal,source,source,throws,ioexception,xml,mapping,exception,if,source,instanceof,domsource,return,unmarshal,dom,source,domsource,source,else,if,stax,utils,is,stax,source,source,return,unmarshal,stax,source,source,else,if,source,instanceof,saxsource,return,unmarshal,sax,source,saxsource,source,else,if,source,instanceof,stream,source,return,unmarshal,stream,source,stream,source,source,else,throw,new,illegal,argument,exception,unknown,source,type,source,get,class
AbstractMarshaller -> public final Object unmarshal(Source source) throws IOException, XmlMappingException;1357119239;Unmarshals the given provided {@code javax.xml.transform.Source} into an object graph._<p>This implementation inspects the given result, and calls {@code unmarshalDomSource},_{@code unmarshalSaxSource}, or {@code unmarshalStreamSource}._@param source the source to marshal from_@return the object graph_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if {@code source} is neither a {@code DOMSource},_a {@code SAXSource}, nor a {@code StreamSource}_@see #unmarshalDomSource(javax.xml.transform.dom.DOMSource)_@see #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)_@see #unmarshalStreamSource(javax.xml.transform.stream.StreamSource);public final Object unmarshal(Source source) throws IOException, XmlMappingException {_		if (source instanceof DOMSource) {_			return unmarshalDomSource((DOMSource) source)__		}_		else if (StaxUtils.isStaxSource(source)) {_			return unmarshalStaxSource(source)__		}_		else if (source instanceof SAXSource) {_			return unmarshalSaxSource((SAXSource) source)__		}_		else if (source instanceof StreamSource) {_			return unmarshalStreamSource((StreamSource) source)__		}_		else {_			throw new IllegalArgumentException("Unknown Source type: " + source.getClass())__		}_	};unmarshals,the,given,provided,code,javax,xml,transform,source,into,an,object,graph,p,this,implementation,inspects,the,given,result,and,calls,code,unmarshal,dom,source,code,unmarshal,sax,source,or,code,unmarshal,stream,source,param,source,the,source,to,marshal,from,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,code,source,is,neither,a,code,domsource,a,code,saxsource,nor,a,code,stream,source,see,unmarshal,dom,source,javax,xml,transform,dom,domsource,see,unmarshal,sax,source,javax,xml,transform,sax,saxsource,see,unmarshal,stream,source,javax,xml,transform,stream,stream,source;public,final,object,unmarshal,source,source,throws,ioexception,xml,mapping,exception,if,source,instanceof,domsource,return,unmarshal,dom,source,domsource,source,else,if,stax,utils,is,stax,source,source,return,unmarshal,stax,source,source,else,if,source,instanceof,saxsource,return,unmarshal,sax,source,saxsource,source,else,if,source,instanceof,stream,source,return,unmarshal,stream,source,stream,source,source,else,throw,new,illegal,argument,exception,unknown,source,type,source,get,class
AbstractMarshaller -> protected void marshalStreamResult(Object graph, StreamResult streamResult) 			throws XmlMappingException, IOException;1328020251;Template method for handling <code>StreamResult</code>s._<p>This implementation delegates to <code>marshalOutputStream</code> or <code>marshalWriter</code>,_depending on what is contained in the <code>StreamResult</code>_@param graph the root of the object graph to marshal_@param streamResult the <code>StreamResult</code>_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if <code>streamResult</code> does neither_contain an <code>OutputStream</code> nor a <code>Writer</code>;protected void marshalStreamResult(Object graph, StreamResult streamResult)_			throws XmlMappingException, IOException {__		if (streamResult.getOutputStream() != null) {_			marshalOutputStream(graph, streamResult.getOutputStream())__		}_		else if (streamResult.getWriter() != null) {_			marshalWriter(graph, streamResult.getWriter())__		}_		else {_			throw new IllegalArgumentException("StreamResult contains neither OutputStream nor Writer")__		}_	};template,method,for,handling,code,stream,result,code,s,p,this,implementation,delegates,to,code,marshal,output,stream,code,or,code,marshal,writer,code,depending,on,what,is,contained,in,the,code,stream,result,code,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,result,the,code,stream,result,code,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,stream,result,code,does,neither,contain,an,code,output,stream,code,nor,a,code,writer,code;protected,void,marshal,stream,result,object,graph,stream,result,stream,result,throws,xml,mapping,exception,ioexception,if,stream,result,get,output,stream,null,marshal,output,stream,graph,stream,result,get,output,stream,else,if,stream,result,get,writer,null,marshal,writer,graph,stream,result,get,writer,else,throw,new,illegal,argument,exception,stream,result,contains,neither,output,stream,nor,writer
AbstractMarshaller -> protected void marshalStreamResult(Object graph, StreamResult streamResult) 			throws XmlMappingException, IOException;1356735495;Template method for handling {@code StreamResult}s._<p>This implementation delegates to {@code marshalOutputStream} or {@code marshalWriter},_depending on what is contained in the {@code StreamResult}_@param graph the root of the object graph to marshal_@param streamResult the {@code StreamResult}_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code streamResult} does neither_contain an {@code OutputStream} nor a {@code Writer};protected void marshalStreamResult(Object graph, StreamResult streamResult)_			throws XmlMappingException, IOException {__		if (streamResult.getOutputStream() != null) {_			marshalOutputStream(graph, streamResult.getOutputStream())__		}_		else if (streamResult.getWriter() != null) {_			marshalWriter(graph, streamResult.getWriter())__		}_		else {_			throw new IllegalArgumentException("StreamResult contains neither OutputStream nor Writer")__		}_	};template,method,for,handling,code,stream,result,s,p,this,implementation,delegates,to,code,marshal,output,stream,or,code,marshal,writer,depending,on,what,is,contained,in,the,code,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,result,the,code,stream,result,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,stream,result,does,neither,contain,an,code,output,stream,nor,a,code,writer;protected,void,marshal,stream,result,object,graph,stream,result,stream,result,throws,xml,mapping,exception,ioexception,if,stream,result,get,output,stream,null,marshal,output,stream,graph,stream,result,get,output,stream,else,if,stream,result,get,writer,null,marshal,writer,graph,stream,result,get,writer,else,throw,new,illegal,argument,exception,stream,result,contains,neither,output,stream,nor,writer
AbstractMarshaller -> protected void marshalStreamResult(Object graph, StreamResult streamResult) 			throws XmlMappingException, IOException;1357119239;Template method for handling {@code StreamResult}s._<p>This implementation delegates to {@code marshalOutputStream} or {@code marshalWriter},_depending on what is contained in the {@code StreamResult}_@param graph the root of the object graph to marshal_@param streamResult the {@code StreamResult}_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code streamResult} does neither_contain an {@code OutputStream} nor a {@code Writer};protected void marshalStreamResult(Object graph, StreamResult streamResult)_			throws XmlMappingException, IOException {__		if (streamResult.getOutputStream() != null) {_			marshalOutputStream(graph, streamResult.getOutputStream())__		}_		else if (streamResult.getWriter() != null) {_			marshalWriter(graph, streamResult.getWriter())__		}_		else {_			throw new IllegalArgumentException("StreamResult contains neither OutputStream nor Writer")__		}_	};template,method,for,handling,code,stream,result,s,p,this,implementation,delegates,to,code,marshal,output,stream,or,code,marshal,writer,depending,on,what,is,contained,in,the,code,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,result,the,code,stream,result,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,stream,result,does,neither,contain,an,code,output,stream,nor,a,code,writer;protected,void,marshal,stream,result,object,graph,stream,result,stream,result,throws,xml,mapping,exception,ioexception,if,stream,result,get,output,stream,null,marshal,output,stream,graph,stream,result,get,output,stream,else,if,stream,result,get,writer,null,marshal,writer,graph,stream,result,get,writer,else,throw,new,illegal,argument,exception,stream,result,contains,neither,output,stream,nor,writer
AbstractMarshaller -> protected void marshalStreamResult(Object graph, StreamResult streamResult) 			throws XmlMappingException, IOException;1368482696;Template method for handling {@code StreamResult}s._<p>This implementation delegates to {@code marshalOutputStream} or {@code marshalWriter},_depending on what is contained in the {@code StreamResult}_@param graph the root of the object graph to marshal_@param streamResult the {@code StreamResult}_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code streamResult} does neither_contain an {@code OutputStream} nor a {@code Writer};protected void marshalStreamResult(Object graph, StreamResult streamResult)_			throws XmlMappingException, IOException {__		if (streamResult.getOutputStream() != null) {_			marshalOutputStream(graph, streamResult.getOutputStream())__		}_		else if (streamResult.getWriter() != null) {_			marshalWriter(graph, streamResult.getWriter())__		}_		else {_			throw new IllegalArgumentException("StreamResult contains neither OutputStream nor Writer")__		}_	};template,method,for,handling,code,stream,result,s,p,this,implementation,delegates,to,code,marshal,output,stream,or,code,marshal,writer,depending,on,what,is,contained,in,the,code,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,result,the,code,stream,result,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,stream,result,does,neither,contain,an,code,output,stream,nor,a,code,writer;protected,void,marshal,stream,result,object,graph,stream,result,stream,result,throws,xml,mapping,exception,ioexception,if,stream,result,get,output,stream,null,marshal,output,stream,graph,stream,result,get,output,stream,else,if,stream,result,get,writer,null,marshal,writer,graph,stream,result,get,writer,else,throw,new,illegal,argument,exception,stream,result,contains,neither,output,stream,nor,writer
AbstractMarshaller -> protected void marshalStreamResult(Object graph, StreamResult streamResult) 			throws XmlMappingException, IOException;1376041400;Template method for handling {@code StreamResult}s._<p>This implementation delegates to {@code marshalOutputStream} or {@code marshalWriter},_depending on what is contained in the {@code StreamResult}_@param graph the root of the object graph to marshal_@param streamResult the {@code StreamResult}_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code streamResult} does neither_contain an {@code OutputStream} nor a {@code Writer};protected void marshalStreamResult(Object graph, StreamResult streamResult)_			throws XmlMappingException, IOException {__		if (streamResult.getOutputStream() != null) {_			marshalOutputStream(graph, streamResult.getOutputStream())__		}_		else if (streamResult.getWriter() != null) {_			marshalWriter(graph, streamResult.getWriter())__		}_		else {_			throw new IllegalArgumentException("StreamResult contains neither OutputStream nor Writer")__		}_	};template,method,for,handling,code,stream,result,s,p,this,implementation,delegates,to,code,marshal,output,stream,or,code,marshal,writer,depending,on,what,is,contained,in,the,code,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,result,the,code,stream,result,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,stream,result,does,neither,contain,an,code,output,stream,nor,a,code,writer;protected,void,marshal,stream,result,object,graph,stream,result,stream,result,throws,xml,mapping,exception,ioexception,if,stream,result,get,output,stream,null,marshal,output,stream,graph,stream,result,get,output,stream,else,if,stream,result,get,writer,null,marshal,writer,graph,stream,result,get,writer,else,throw,new,illegal,argument,exception,stream,result,contains,neither,output,stream,nor,writer
AbstractMarshaller -> protected void marshalStreamResult(Object graph, StreamResult streamResult) 			throws XmlMappingException, IOException;1392767670;Template method for handling {@code StreamResult}s._<p>This implementation delegates to {@code marshalOutputStream} or {@code marshalWriter},_depending on what is contained in the {@code StreamResult}_@param graph the root of the object graph to marshal_@param streamResult the {@code StreamResult}_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code streamResult} does neither_contain an {@code OutputStream} nor a {@code Writer};protected void marshalStreamResult(Object graph, StreamResult streamResult)_			throws XmlMappingException, IOException {__		if (streamResult.getOutputStream() != null) {_			marshalOutputStream(graph, streamResult.getOutputStream())__		}_		else if (streamResult.getWriter() != null) {_			marshalWriter(graph, streamResult.getWriter())__		}_		else {_			throw new IllegalArgumentException("StreamResult contains neither OutputStream nor Writer")__		}_	};template,method,for,handling,code,stream,result,s,p,this,implementation,delegates,to,code,marshal,output,stream,or,code,marshal,writer,depending,on,what,is,contained,in,the,code,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,result,the,code,stream,result,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,stream,result,does,neither,contain,an,code,output,stream,nor,a,code,writer;protected,void,marshal,stream,result,object,graph,stream,result,stream,result,throws,xml,mapping,exception,ioexception,if,stream,result,get,output,stream,null,marshal,output,stream,graph,stream,result,get,output,stream,else,if,stream,result,get,writer,null,marshal,writer,graph,stream,result,get,writer,else,throw,new,illegal,argument,exception,stream,result,contains,neither,output,stream,nor,writer
AbstractMarshaller -> protected void marshalStreamResult(Object graph, StreamResult streamResult) 			throws XmlMappingException, IOException;1397058176;Template method for handling {@code StreamResult}s._<p>This implementation delegates to {@code marshalOutputStream} or {@code marshalWriter},_depending on what is contained in the {@code StreamResult}_@param graph the root of the object graph to marshal_@param streamResult the {@code StreamResult}_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code streamResult} does neither_contain an {@code OutputStream} nor a {@code Writer};protected void marshalStreamResult(Object graph, StreamResult streamResult)_			throws XmlMappingException, IOException {__		if (streamResult.getOutputStream() != null) {_			marshalOutputStream(graph, streamResult.getOutputStream())__		}_		else if (streamResult.getWriter() != null) {_			marshalWriter(graph, streamResult.getWriter())__		}_		else {_			throw new IllegalArgumentException("StreamResult contains neither OutputStream nor Writer")__		}_	};template,method,for,handling,code,stream,result,s,p,this,implementation,delegates,to,code,marshal,output,stream,or,code,marshal,writer,depending,on,what,is,contained,in,the,code,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,result,the,code,stream,result,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,stream,result,does,neither,contain,an,code,output,stream,nor,a,code,writer;protected,void,marshal,stream,result,object,graph,stream,result,stream,result,throws,xml,mapping,exception,ioexception,if,stream,result,get,output,stream,null,marshal,output,stream,graph,stream,result,get,output,stream,else,if,stream,result,get,writer,null,marshal,writer,graph,stream,result,get,writer,else,throw,new,illegal,argument,exception,stream,result,contains,neither,output,stream,nor,writer
AbstractMarshaller -> protected void marshalStreamResult(Object graph, StreamResult streamResult) 			throws XmlMappingException, IOException;1397069887;Template method for handling {@code StreamResult}s._<p>This implementation delegates to {@code marshalOutputStream} or {@code marshalWriter},_depending on what is contained in the {@code StreamResult}_@param graph the root of the object graph to marshal_@param streamResult the {@code StreamResult}_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code streamResult} does neither_contain an {@code OutputStream} nor a {@code Writer};protected void marshalStreamResult(Object graph, StreamResult streamResult)_			throws XmlMappingException, IOException {__		if (streamResult.getOutputStream() != null) {_			marshalOutputStream(graph, streamResult.getOutputStream())__		}_		else if (streamResult.getWriter() != null) {_			marshalWriter(graph, streamResult.getWriter())__		}_		else {_			throw new IllegalArgumentException("StreamResult contains neither OutputStream nor Writer")__		}_	};template,method,for,handling,code,stream,result,s,p,this,implementation,delegates,to,code,marshal,output,stream,or,code,marshal,writer,depending,on,what,is,contained,in,the,code,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,result,the,code,stream,result,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,stream,result,does,neither,contain,an,code,output,stream,nor,a,code,writer;protected,void,marshal,stream,result,object,graph,stream,result,stream,result,throws,xml,mapping,exception,ioexception,if,stream,result,get,output,stream,null,marshal,output,stream,graph,stream,result,get,output,stream,else,if,stream,result,get,writer,null,marshal,writer,graph,stream,result,get,writer,else,throw,new,illegal,argument,exception,stream,result,contains,neither,output,stream,nor,writer
AbstractMarshaller -> protected void marshalStreamResult(Object graph, StreamResult streamResult) 			throws XmlMappingException, IOException;1398638859;Template method for handling {@code StreamResult}s._<p>This implementation delegates to {@code marshalOutputStream} or {@code marshalWriter},_depending on what is contained in the {@code StreamResult}_@param graph the root of the object graph to marshal_@param streamResult the {@code StreamResult}_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code streamResult} does neither_contain an {@code OutputStream} nor a {@code Writer};protected void marshalStreamResult(Object graph, StreamResult streamResult)_			throws XmlMappingException, IOException {__		if (streamResult.getOutputStream() != null) {_			marshalOutputStream(graph, streamResult.getOutputStream())__		}_		else if (streamResult.getWriter() != null) {_			marshalWriter(graph, streamResult.getWriter())__		}_		else {_			throw new IllegalArgumentException("StreamResult contains neither OutputStream nor Writer")__		}_	};template,method,for,handling,code,stream,result,s,p,this,implementation,delegates,to,code,marshal,output,stream,or,code,marshal,writer,depending,on,what,is,contained,in,the,code,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,result,the,code,stream,result,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,stream,result,does,neither,contain,an,code,output,stream,nor,a,code,writer;protected,void,marshal,stream,result,object,graph,stream,result,stream,result,throws,xml,mapping,exception,ioexception,if,stream,result,get,output,stream,null,marshal,output,stream,graph,stream,result,get,output,stream,else,if,stream,result,get,writer,null,marshal,writer,graph,stream,result,get,writer,else,throw,new,illegal,argument,exception,stream,result,contains,neither,output,stream,nor,writer
AbstractMarshaller -> protected void marshalStreamResult(Object graph, StreamResult streamResult) 			throws XmlMappingException, IOException;1400553912;Template method for handling {@code StreamResult}s._<p>This implementation delegates to {@code marshalOutputStream} or {@code marshalWriter},_depending on what is contained in the {@code StreamResult}_@param graph the root of the object graph to marshal_@param streamResult the {@code StreamResult}_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code streamResult} does neither_contain an {@code OutputStream} nor a {@code Writer};protected void marshalStreamResult(Object graph, StreamResult streamResult)_			throws XmlMappingException, IOException {__		if (streamResult.getOutputStream() != null) {_			marshalOutputStream(graph, streamResult.getOutputStream())__		}_		else if (streamResult.getWriter() != null) {_			marshalWriter(graph, streamResult.getWriter())__		}_		else {_			throw new IllegalArgumentException("StreamResult contains neither OutputStream nor Writer")__		}_	};template,method,for,handling,code,stream,result,s,p,this,implementation,delegates,to,code,marshal,output,stream,or,code,marshal,writer,depending,on,what,is,contained,in,the,code,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,result,the,code,stream,result,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,stream,result,does,neither,contain,an,code,output,stream,nor,a,code,writer;protected,void,marshal,stream,result,object,graph,stream,result,stream,result,throws,xml,mapping,exception,ioexception,if,stream,result,get,output,stream,null,marshal,output,stream,graph,stream,result,get,output,stream,else,if,stream,result,get,writer,null,marshal,writer,graph,stream,result,get,writer,else,throw,new,illegal,argument,exception,stream,result,contains,neither,output,stream,nor,writer
AbstractMarshaller -> protected void marshalStreamResult(Object graph, StreamResult streamResult) 			throws XmlMappingException, IOException;1435665021;Template method for handling {@code StreamResult}s._<p>This implementation delegates to {@code marshalOutputStream} or {@code marshalWriter},_depending on what is contained in the {@code StreamResult}_@param graph the root of the object graph to marshal_@param streamResult the {@code StreamResult}_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code streamResult} does neither_contain an {@code OutputStream} nor a {@code Writer};protected void marshalStreamResult(Object graph, StreamResult streamResult)_			throws XmlMappingException, IOException {__		if (streamResult.getOutputStream() != null) {_			marshalOutputStream(graph, streamResult.getOutputStream())__		}_		else if (streamResult.getWriter() != null) {_			marshalWriter(graph, streamResult.getWriter())__		}_		else {_			throw new IllegalArgumentException("StreamResult contains neither OutputStream nor Writer")__		}_	};template,method,for,handling,code,stream,result,s,p,this,implementation,delegates,to,code,marshal,output,stream,or,code,marshal,writer,depending,on,what,is,contained,in,the,code,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,result,the,code,stream,result,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,stream,result,does,neither,contain,an,code,output,stream,nor,a,code,writer;protected,void,marshal,stream,result,object,graph,stream,result,stream,result,throws,xml,mapping,exception,ioexception,if,stream,result,get,output,stream,null,marshal,output,stream,graph,stream,result,get,output,stream,else,if,stream,result,get,writer,null,marshal,writer,graph,stream,result,get,writer,else,throw,new,illegal,argument,exception,stream,result,contains,neither,output,stream,nor,writer
AbstractMarshaller -> protected void marshalStreamResult(Object graph, StreamResult streamResult) 			throws XmlMappingException, IOException;1455117733;Template method for handling {@code StreamResult}s._<p>This implementation delegates to {@code marshalOutputStream} or {@code marshalWriter},_depending on what is contained in the {@code StreamResult}_@param graph the root of the object graph to marshal_@param streamResult the {@code StreamResult}_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code streamResult} does neither_contain an {@code OutputStream} nor a {@code Writer};protected void marshalStreamResult(Object graph, StreamResult streamResult)_			throws XmlMappingException, IOException {__		if (streamResult.getOutputStream() != null) {_			marshalOutputStream(graph, streamResult.getOutputStream())__		}_		else if (streamResult.getWriter() != null) {_			marshalWriter(graph, streamResult.getWriter())__		}_		else {_			throw new IllegalArgumentException("StreamResult contains neither OutputStream nor Writer")__		}_	};template,method,for,handling,code,stream,result,s,p,this,implementation,delegates,to,code,marshal,output,stream,or,code,marshal,writer,depending,on,what,is,contained,in,the,code,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,result,the,code,stream,result,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,stream,result,does,neither,contain,an,code,output,stream,nor,a,code,writer;protected,void,marshal,stream,result,object,graph,stream,result,stream,result,throws,xml,mapping,exception,ioexception,if,stream,result,get,output,stream,null,marshal,output,stream,graph,stream,result,get,output,stream,else,if,stream,result,get,writer,null,marshal,writer,graph,stream,result,get,writer,else,throw,new,illegal,argument,exception,stream,result,contains,neither,output,stream,nor,writer
AbstractMarshaller -> protected void marshalStreamResult(Object graph, StreamResult streamResult) 			throws XmlMappingException, IOException;1468948866;Template method for handling {@code StreamResult}s._<p>This implementation delegates to {@code marshalOutputStream} or {@code marshalWriter},_depending on what is contained in the {@code StreamResult}_@param graph the root of the object graph to marshal_@param streamResult the {@code StreamResult}_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code streamResult} does neither_contain an {@code OutputStream} nor a {@code Writer};protected void marshalStreamResult(Object graph, StreamResult streamResult)_			throws XmlMappingException, IOException {__		if (streamResult.getOutputStream() != null) {_			marshalOutputStream(graph, streamResult.getOutputStream())__		}_		else if (streamResult.getWriter() != null) {_			marshalWriter(graph, streamResult.getWriter())__		}_		else {_			throw new IllegalArgumentException("StreamResult contains neither OutputStream nor Writer")__		}_	};template,method,for,handling,code,stream,result,s,p,this,implementation,delegates,to,code,marshal,output,stream,or,code,marshal,writer,depending,on,what,is,contained,in,the,code,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,result,the,code,stream,result,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,stream,result,does,neither,contain,an,code,output,stream,nor,a,code,writer;protected,void,marshal,stream,result,object,graph,stream,result,stream,result,throws,xml,mapping,exception,ioexception,if,stream,result,get,output,stream,null,marshal,output,stream,graph,stream,result,get,output,stream,else,if,stream,result,get,writer,null,marshal,writer,graph,stream,result,get,writer,else,throw,new,illegal,argument,exception,stream,result,contains,neither,output,stream,nor,writer
AbstractMarshaller -> protected void marshalStreamResult(Object graph, StreamResult streamResult) 			throws XmlMappingException, IOException;1483750478;Template method for handling {@code StreamResult}s._<p>This implementation delegates to {@code marshalOutputStream} or {@code marshalWriter},_depending on what is contained in the {@code StreamResult}_@param graph the root of the object graph to marshal_@param streamResult the {@code StreamResult}_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code streamResult} does neither_contain an {@code OutputStream} nor a {@code Writer};protected void marshalStreamResult(Object graph, StreamResult streamResult)_			throws XmlMappingException, IOException {__		if (streamResult.getOutputStream() != null) {_			marshalOutputStream(graph, streamResult.getOutputStream())__		}_		else if (streamResult.getWriter() != null) {_			marshalWriter(graph, streamResult.getWriter())__		}_		else {_			throw new IllegalArgumentException("StreamResult contains neither OutputStream nor Writer")__		}_	};template,method,for,handling,code,stream,result,s,p,this,implementation,delegates,to,code,marshal,output,stream,or,code,marshal,writer,depending,on,what,is,contained,in,the,code,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,result,the,code,stream,result,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,stream,result,does,neither,contain,an,code,output,stream,nor,a,code,writer;protected,void,marshal,stream,result,object,graph,stream,result,stream,result,throws,xml,mapping,exception,ioexception,if,stream,result,get,output,stream,null,marshal,output,stream,graph,stream,result,get,output,stream,else,if,stream,result,get,writer,null,marshal,writer,graph,stream,result,get,writer,else,throw,new,illegal,argument,exception,stream,result,contains,neither,output,stream,nor,writer
AbstractMarshaller -> protected void marshalStreamResult(Object graph, StreamResult streamResult) 			throws XmlMappingException, IOException;1484301200;Template method for handling {@code StreamResult}s._<p>This implementation delegates to {@code marshalOutputStream} or {@code marshalWriter},_depending on what is contained in the {@code StreamResult}_@param graph the root of the object graph to marshal_@param streamResult the {@code StreamResult}_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code streamResult} does neither_contain an {@code OutputStream} nor a {@code Writer};protected void marshalStreamResult(Object graph, StreamResult streamResult)_			throws XmlMappingException, IOException {__		if (streamResult.getOutputStream() != null) {_			marshalOutputStream(graph, streamResult.getOutputStream())__		}_		else if (streamResult.getWriter() != null) {_			marshalWriter(graph, streamResult.getWriter())__		}_		else {_			throw new IllegalArgumentException("StreamResult contains neither OutputStream nor Writer")__		}_	};template,method,for,handling,code,stream,result,s,p,this,implementation,delegates,to,code,marshal,output,stream,or,code,marshal,writer,depending,on,what,is,contained,in,the,code,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,result,the,code,stream,result,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,stream,result,does,neither,contain,an,code,output,stream,nor,a,code,writer;protected,void,marshal,stream,result,object,graph,stream,result,stream,result,throws,xml,mapping,exception,ioexception,if,stream,result,get,output,stream,null,marshal,output,stream,graph,stream,result,get,output,stream,else,if,stream,result,get,writer,null,marshal,writer,graph,stream,result,get,writer,else,throw,new,illegal,argument,exception,stream,result,contains,neither,output,stream,nor,writer
AbstractMarshaller -> protected void marshalStreamResult(Object graph, StreamResult streamResult) 			throws XmlMappingException, IOException;1495868221;Template method for handling {@code StreamResult}s._<p>This implementation delegates to {@code marshalOutputStream} or {@code marshalWriter},_depending on what is contained in the {@code StreamResult}_@param graph the root of the object graph to marshal_@param streamResult the {@code StreamResult}_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code streamResult} does neither_contain an {@code OutputStream} nor a {@code Writer};protected void marshalStreamResult(Object graph, StreamResult streamResult)_			throws XmlMappingException, IOException {__		if (streamResult.getOutputStream() != null) {_			marshalOutputStream(graph, streamResult.getOutputStream())__		}_		else if (streamResult.getWriter() != null) {_			marshalWriter(graph, streamResult.getWriter())__		}_		else {_			throw new IllegalArgumentException("StreamResult contains neither OutputStream nor Writer")__		}_	};template,method,for,handling,code,stream,result,s,p,this,implementation,delegates,to,code,marshal,output,stream,or,code,marshal,writer,depending,on,what,is,contained,in,the,code,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,result,the,code,stream,result,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,stream,result,does,neither,contain,an,code,output,stream,nor,a,code,writer;protected,void,marshal,stream,result,object,graph,stream,result,stream,result,throws,xml,mapping,exception,ioexception,if,stream,result,get,output,stream,null,marshal,output,stream,graph,stream,result,get,output,stream,else,if,stream,result,get,writer,null,marshal,writer,graph,stream,result,get,writer,else,throw,new,illegal,argument,exception,stream,result,contains,neither,output,stream,nor,writer
AbstractMarshaller -> protected void marshalStreamResult(Object graph, StreamResult streamResult) 			throws XmlMappingException, IOException;1498780456;Template method for handling {@code StreamResult}s._<p>This implementation delegates to {@code marshalOutputStream} or {@code marshalWriter},_depending on what is contained in the {@code StreamResult}_@param graph the root of the object graph to marshal_@param streamResult the {@code StreamResult}_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code streamResult} does neither_contain an {@code OutputStream} nor a {@code Writer};protected void marshalStreamResult(Object graph, StreamResult streamResult)_			throws XmlMappingException, IOException {__		if (streamResult.getOutputStream() != null) {_			marshalOutputStream(graph, streamResult.getOutputStream())__		}_		else if (streamResult.getWriter() != null) {_			marshalWriter(graph, streamResult.getWriter())__		}_		else {_			throw new IllegalArgumentException("StreamResult contains neither OutputStream nor Writer")__		}_	};template,method,for,handling,code,stream,result,s,p,this,implementation,delegates,to,code,marshal,output,stream,or,code,marshal,writer,depending,on,what,is,contained,in,the,code,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,result,the,code,stream,result,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,stream,result,does,neither,contain,an,code,output,stream,nor,a,code,writer;protected,void,marshal,stream,result,object,graph,stream,result,stream,result,throws,xml,mapping,exception,ioexception,if,stream,result,get,output,stream,null,marshal,output,stream,graph,stream,result,get,output,stream,else,if,stream,result,get,writer,null,marshal,writer,graph,stream,result,get,writer,else,throw,new,illegal,argument,exception,stream,result,contains,neither,output,stream,nor,writer
AbstractMarshaller -> protected void marshalStreamResult(Object graph, StreamResult streamResult) 			throws XmlMappingException, IOException;1518770299;Template method for handling {@code StreamResult}s._<p>This implementation delegates to {@code marshalOutputStream} or {@code marshalWriter},_depending on what is contained in the {@code StreamResult}_@param graph the root of the object graph to marshal_@param streamResult the {@code StreamResult}_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code streamResult} does neither_contain an {@code OutputStream} nor a {@code Writer};protected void marshalStreamResult(Object graph, StreamResult streamResult)_			throws XmlMappingException, IOException {__		if (streamResult.getOutputStream() != null) {_			marshalOutputStream(graph, streamResult.getOutputStream())__		}_		else if (streamResult.getWriter() != null) {_			marshalWriter(graph, streamResult.getWriter())__		}_		else {_			throw new IllegalArgumentException("StreamResult contains neither OutputStream nor Writer")__		}_	};template,method,for,handling,code,stream,result,s,p,this,implementation,delegates,to,code,marshal,output,stream,or,code,marshal,writer,depending,on,what,is,contained,in,the,code,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,result,the,code,stream,result,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,stream,result,does,neither,contain,an,code,output,stream,nor,a,code,writer;protected,void,marshal,stream,result,object,graph,stream,result,stream,result,throws,xml,mapping,exception,ioexception,if,stream,result,get,output,stream,null,marshal,output,stream,graph,stream,result,get,output,stream,else,if,stream,result,get,writer,null,marshal,writer,graph,stream,result,get,writer,else,throw,new,illegal,argument,exception,stream,result,contains,neither,output,stream,nor,writer
AbstractMarshaller -> protected void marshalStreamResult(Object graph, StreamResult streamResult) 			throws XmlMappingException, IOException;1518770299;Template method for handling {@code StreamResult}s._<p>This implementation delegates to {@code marshalOutputStream} or {@code marshalWriter},_depending on what is contained in the {@code StreamResult}_@param graph the root of the object graph to marshal_@param streamResult the {@code StreamResult}_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code streamResult} does neither_contain an {@code OutputStream} nor a {@code Writer};protected void marshalStreamResult(Object graph, StreamResult streamResult)_			throws XmlMappingException, IOException {__		if (streamResult.getOutputStream() != null) {_			marshalOutputStream(graph, streamResult.getOutputStream())__		}_		else if (streamResult.getWriter() != null) {_			marshalWriter(graph, streamResult.getWriter())__		}_		else {_			throw new IllegalArgumentException("StreamResult contains neither OutputStream nor Writer")__		}_	};template,method,for,handling,code,stream,result,s,p,this,implementation,delegates,to,code,marshal,output,stream,or,code,marshal,writer,depending,on,what,is,contained,in,the,code,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,result,the,code,stream,result,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,stream,result,does,neither,contain,an,code,output,stream,nor,a,code,writer;protected,void,marshal,stream,result,object,graph,stream,result,stream,result,throws,xml,mapping,exception,ioexception,if,stream,result,get,output,stream,null,marshal,output,stream,graph,stream,result,get,output,stream,else,if,stream,result,get,writer,null,marshal,writer,graph,stream,result,get,writer,else,throw,new,illegal,argument,exception,stream,result,contains,neither,output,stream,nor,writer
AbstractMarshaller -> protected void marshalStreamResult(Object graph, StreamResult streamResult) 			throws XmlMappingException, IOException;1530174524;Template method for handling {@code StreamResult}s._<p>This implementation delegates to {@code marshalOutputStream} or {@code marshalWriter},_depending on what is contained in the {@code StreamResult}_@param graph the root of the object graph to marshal_@param streamResult the {@code StreamResult}_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code streamResult} does neither_contain an {@code OutputStream} nor a {@code Writer};protected void marshalStreamResult(Object graph, StreamResult streamResult)_			throws XmlMappingException, IOException {__		if (streamResult.getOutputStream() != null) {_			marshalOutputStream(graph, streamResult.getOutputStream())__		}_		else if (streamResult.getWriter() != null) {_			marshalWriter(graph, streamResult.getWriter())__		}_		else {_			throw new IllegalArgumentException("StreamResult contains neither OutputStream nor Writer")__		}_	};template,method,for,handling,code,stream,result,s,p,this,implementation,delegates,to,code,marshal,output,stream,or,code,marshal,writer,depending,on,what,is,contained,in,the,code,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,result,the,code,stream,result,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,stream,result,does,neither,contain,an,code,output,stream,nor,a,code,writer;protected,void,marshal,stream,result,object,graph,stream,result,stream,result,throws,xml,mapping,exception,ioexception,if,stream,result,get,output,stream,null,marshal,output,stream,graph,stream,result,get,output,stream,else,if,stream,result,get,writer,null,marshal,writer,graph,stream,result,get,writer,else,throw,new,illegal,argument,exception,stream,result,contains,neither,output,stream,nor,writer
AbstractMarshaller -> protected void marshalStreamResult(Object graph, StreamResult streamResult) 			throws XmlMappingException, IOException;1530174524;Template method for handling {@code StreamResult}s._<p>This implementation delegates to {@code marshalOutputStream} or {@code marshalWriter},_depending on what is contained in the {@code StreamResult}_@param graph the root of the object graph to marshal_@param streamResult the {@code StreamResult}_@throws IOException if an I/O Exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code streamResult} does neither_contain an {@code OutputStream} nor a {@code Writer};protected void marshalStreamResult(Object graph, StreamResult streamResult)_			throws XmlMappingException, IOException {__		if (streamResult.getOutputStream() != null) {_			marshalOutputStream(graph, streamResult.getOutputStream())__		}_		else if (streamResult.getWriter() != null) {_			marshalWriter(graph, streamResult.getWriter())__		}_		else {_			throw new IllegalArgumentException("StreamResult contains neither OutputStream nor Writer")__		}_	};template,method,for,handling,code,stream,result,s,p,this,implementation,delegates,to,code,marshal,output,stream,or,code,marshal,writer,depending,on,what,is,contained,in,the,code,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,result,the,code,stream,result,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,stream,result,does,neither,contain,an,code,output,stream,nor,a,code,writer;protected,void,marshal,stream,result,object,graph,stream,result,stream,result,throws,xml,mapping,exception,ioexception,if,stream,result,get,output,stream,null,marshal,output,stream,graph,stream,result,get,output,stream,else,if,stream,result,get,writer,null,marshal,writer,graph,stream,result,get,writer,else,throw,new,illegal,argument,exception,stream,result,contains,neither,output,stream,nor,writer
AbstractMarshaller -> protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource) 			throws XmlMappingException, IOException_;1328020251;Abstract template method for unmarshalling using a given SAX <code>XMLReader</code>_and <code>InputSource</code>._@param xmlReader the SAX <code>XMLReader</code> to parse with_@param inputSource the input source to parse from_@return the object graph_@throws XmlMappingException if the given reader and input source cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,using,a,given,sax,code,xmlreader,code,and,code,input,source,code,param,xml,reader,the,sax,code,xmlreader,code,to,parse,with,param,input,source,the,input,source,to,parse,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,and,input,source,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,sax,reader,xmlreader,xml,reader,input,source,input,source,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource) 			throws XmlMappingException, IOException_;1356735495;Abstract template method for unmarshalling using a given SAX {@code XMLReader}_and {@code InputSource}._@param xmlReader the SAX {@code XMLReader} to parse with_@param inputSource the input source to parse from_@return the object graph_@throws XmlMappingException if the given reader and input source cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,using,a,given,sax,code,xmlreader,and,code,input,source,param,xml,reader,the,sax,code,xmlreader,to,parse,with,param,input,source,the,input,source,to,parse,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,and,input,source,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,sax,reader,xmlreader,xml,reader,input,source,input,source,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource) 			throws XmlMappingException, IOException_;1357119239;Abstract template method for unmarshalling using a given SAX {@code XMLReader}_and {@code InputSource}._@param xmlReader the SAX {@code XMLReader} to parse with_@param inputSource the input source to parse from_@return the object graph_@throws XmlMappingException if the given reader and input source cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,using,a,given,sax,code,xmlreader,and,code,input,source,param,xml,reader,the,sax,code,xmlreader,to,parse,with,param,input,source,the,input,source,to,parse,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,and,input,source,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,sax,reader,xmlreader,xml,reader,input,source,input,source,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource) 			throws XmlMappingException, IOException_;1368482696;Abstract template method for unmarshalling using a given SAX {@code XMLReader}_and {@code InputSource}._@param xmlReader the SAX {@code XMLReader} to parse with_@param inputSource the input source to parse from_@return the object graph_@throws XmlMappingException if the given reader and input source cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,using,a,given,sax,code,xmlreader,and,code,input,source,param,xml,reader,the,sax,code,xmlreader,to,parse,with,param,input,source,the,input,source,to,parse,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,and,input,source,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,sax,reader,xmlreader,xml,reader,input,source,input,source,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource) 			throws XmlMappingException, IOException_;1376041400;Abstract template method for unmarshalling using a given SAX {@code XMLReader}_and {@code InputSource}._@param xmlReader the SAX {@code XMLReader} to parse with_@param inputSource the input source to parse from_@return the object graph_@throws XmlMappingException if the given reader and input source cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,using,a,given,sax,code,xmlreader,and,code,input,source,param,xml,reader,the,sax,code,xmlreader,to,parse,with,param,input,source,the,input,source,to,parse,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,and,input,source,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,sax,reader,xmlreader,xml,reader,input,source,input,source,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource) 			throws XmlMappingException, IOException_;1392767670;Abstract template method for unmarshalling using a given SAX {@code XMLReader}_and {@code InputSource}._@param xmlReader the SAX {@code XMLReader} to parse with_@param inputSource the input source to parse from_@return the object graph_@throws XmlMappingException if the given reader and input source cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,using,a,given,sax,code,xmlreader,and,code,input,source,param,xml,reader,the,sax,code,xmlreader,to,parse,with,param,input,source,the,input,source,to,parse,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,and,input,source,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,sax,reader,xmlreader,xml,reader,input,source,input,source,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource) 			throws XmlMappingException, IOException_;1397058176;Abstract template method for unmarshalling using a given SAX {@code XMLReader}_and {@code InputSource}._@param xmlReader the SAX {@code XMLReader} to parse with_@param inputSource the input source to parse from_@return the object graph_@throws XmlMappingException if the given reader and input source cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,using,a,given,sax,code,xmlreader,and,code,input,source,param,xml,reader,the,sax,code,xmlreader,to,parse,with,param,input,source,the,input,source,to,parse,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,and,input,source,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,sax,reader,xmlreader,xml,reader,input,source,input,source,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource) 			throws XmlMappingException, IOException_;1397069887;Abstract template method for unmarshalling using a given SAX {@code XMLReader}_and {@code InputSource}._@param xmlReader the SAX {@code XMLReader} to parse with_@param inputSource the input source to parse from_@return the object graph_@throws XmlMappingException if the given reader and input source cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,using,a,given,sax,code,xmlreader,and,code,input,source,param,xml,reader,the,sax,code,xmlreader,to,parse,with,param,input,source,the,input,source,to,parse,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,and,input,source,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,sax,reader,xmlreader,xml,reader,input,source,input,source,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource) 			throws XmlMappingException, IOException_;1398638859;Abstract template method for unmarshalling using a given SAX {@code XMLReader}_and {@code InputSource}._@param xmlReader the SAX {@code XMLReader} to parse with_@param inputSource the input source to parse from_@return the object graph_@throws XmlMappingException if the given reader and input source cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,using,a,given,sax,code,xmlreader,and,code,input,source,param,xml,reader,the,sax,code,xmlreader,to,parse,with,param,input,source,the,input,source,to,parse,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,and,input,source,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,sax,reader,xmlreader,xml,reader,input,source,input,source,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource) 			throws XmlMappingException, IOException_;1400553912;Abstract template method for unmarshalling using a given SAX {@code XMLReader}_and {@code InputSource}._@param xmlReader the SAX {@code XMLReader} to parse with_@param inputSource the input source to parse from_@return the object graph_@throws XmlMappingException if the given reader and input source cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,using,a,given,sax,code,xmlreader,and,code,input,source,param,xml,reader,the,sax,code,xmlreader,to,parse,with,param,input,source,the,input,source,to,parse,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,and,input,source,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,sax,reader,xmlreader,xml,reader,input,source,input,source,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource) 			throws XmlMappingException, IOException_;1435665021;Abstract template method for unmarshalling using a given SAX {@code XMLReader}_and {@code InputSource}._@param xmlReader the SAX {@code XMLReader} to parse with_@param inputSource the input source to parse from_@return the object graph_@throws XmlMappingException if the given reader and input source cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,using,a,given,sax,code,xmlreader,and,code,input,source,param,xml,reader,the,sax,code,xmlreader,to,parse,with,param,input,source,the,input,source,to,parse,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,and,input,source,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,sax,reader,xmlreader,xml,reader,input,source,input,source,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource) 			throws XmlMappingException, IOException_;1455117733;Abstract template method for unmarshalling using a given SAX {@code XMLReader}_and {@code InputSource}._@param xmlReader the SAX {@code XMLReader} to parse with_@param inputSource the input source to parse from_@return the object graph_@throws XmlMappingException if the given reader and input source cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,using,a,given,sax,code,xmlreader,and,code,input,source,param,xml,reader,the,sax,code,xmlreader,to,parse,with,param,input,source,the,input,source,to,parse,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,and,input,source,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,sax,reader,xmlreader,xml,reader,input,source,input,source,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource) 			throws XmlMappingException, IOException_;1468948866;Abstract template method for unmarshalling using a given SAX {@code XMLReader}_and {@code InputSource}._@param xmlReader the SAX {@code XMLReader} to parse with_@param inputSource the input source to parse from_@return the object graph_@throws XmlMappingException if the given reader and input source cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,using,a,given,sax,code,xmlreader,and,code,input,source,param,xml,reader,the,sax,code,xmlreader,to,parse,with,param,input,source,the,input,source,to,parse,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,and,input,source,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,sax,reader,xmlreader,xml,reader,input,source,input,source,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource) 			throws XmlMappingException, IOException_;1483750478;Abstract template method for unmarshalling using a given SAX {@code XMLReader}_and {@code InputSource}._@param xmlReader the SAX {@code XMLReader} to parse with_@param inputSource the input source to parse from_@return the object graph_@throws XmlMappingException if the given reader and input source cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,using,a,given,sax,code,xmlreader,and,code,input,source,param,xml,reader,the,sax,code,xmlreader,to,parse,with,param,input,source,the,input,source,to,parse,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,and,input,source,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,sax,reader,xmlreader,xml,reader,input,source,input,source,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource) 			throws XmlMappingException, IOException_;1484301200;Abstract template method for unmarshalling using a given SAX {@code XMLReader}_and {@code InputSource}._@param xmlReader the SAX {@code XMLReader} to parse with_@param inputSource the input source to parse from_@return the object graph_@throws XmlMappingException if the given reader and input source cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,using,a,given,sax,code,xmlreader,and,code,input,source,param,xml,reader,the,sax,code,xmlreader,to,parse,with,param,input,source,the,input,source,to,parse,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,and,input,source,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,sax,reader,xmlreader,xml,reader,input,source,input,source,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource) 			throws XmlMappingException, IOException_;1495868221;Abstract template method for unmarshalling using a given SAX {@code XMLReader}_and {@code InputSource}._@param xmlReader the SAX {@code XMLReader} to parse with_@param inputSource the input source to parse from_@return the object graph_@throws XmlMappingException if the given reader and input source cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,using,a,given,sax,code,xmlreader,and,code,input,source,param,xml,reader,the,sax,code,xmlreader,to,parse,with,param,input,source,the,input,source,to,parse,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,and,input,source,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,sax,reader,xmlreader,xml,reader,input,source,input,source,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource) 			throws XmlMappingException, IOException_;1498780456;Abstract template method for unmarshalling using a given SAX {@code XMLReader}_and {@code InputSource}._@param xmlReader the SAX {@code XMLReader} to parse with_@param inputSource the input source to parse from_@return the object graph_@throws XmlMappingException if the given reader and input source cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,using,a,given,sax,code,xmlreader,and,code,input,source,param,xml,reader,the,sax,code,xmlreader,to,parse,with,param,input,source,the,input,source,to,parse,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,and,input,source,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,sax,reader,xmlreader,xml,reader,input,source,input,source,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource) 			throws XmlMappingException, IOException_;1518770299;Abstract template method for unmarshalling using a given SAX {@code XMLReader}_and {@code InputSource}._@param xmlReader the SAX {@code XMLReader} to parse with_@param inputSource the input source to parse from_@return the object graph_@throws XmlMappingException if the given reader and input source cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,using,a,given,sax,code,xmlreader,and,code,input,source,param,xml,reader,the,sax,code,xmlreader,to,parse,with,param,input,source,the,input,source,to,parse,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,and,input,source,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,sax,reader,xmlreader,xml,reader,input,source,input,source,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource) 			throws XmlMappingException, IOException_;1518770299;Abstract template method for unmarshalling using a given SAX {@code XMLReader}_and {@code InputSource}._@param xmlReader the SAX {@code XMLReader} to parse with_@param inputSource the input source to parse from_@return the object graph_@throws XmlMappingException if the given reader and input source cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,using,a,given,sax,code,xmlreader,and,code,input,source,param,xml,reader,the,sax,code,xmlreader,to,parse,with,param,input,source,the,input,source,to,parse,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,and,input,source,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,sax,reader,xmlreader,xml,reader,input,source,input,source,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource) 			throws XmlMappingException, IOException_;1530174524;Abstract template method for unmarshalling using a given SAX {@code XMLReader}_and {@code InputSource}._@param xmlReader the SAX {@code XMLReader} to parse with_@param inputSource the input source to parse from_@return the object graph_@throws XmlMappingException if the given reader and input source cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,using,a,given,sax,code,xmlreader,and,code,input,source,param,xml,reader,the,sax,code,xmlreader,to,parse,with,param,input,source,the,input,source,to,parse,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,and,input,source,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,sax,reader,xmlreader,xml,reader,input,source,input,source,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource) 			throws XmlMappingException, IOException_;1530174524;Abstract template method for unmarshalling using a given SAX {@code XMLReader}_and {@code InputSource}._@param xmlReader the SAX {@code XMLReader} to parse with_@param inputSource the input source to parse from_@return the object graph_@throws XmlMappingException if the given reader and input source cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalSaxReader(XMLReader xmlReader, InputSource inputSource)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,using,a,given,sax,code,xmlreader,and,code,input,source,param,xml,reader,the,sax,code,xmlreader,to,parse,with,param,input,source,the,input,source,to,parse,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,and,input,source,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,sax,reader,xmlreader,xml,reader,input,source,input,source,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalReader(Reader reader) 			throws XmlMappingException, IOException_;1328020251;Abstract template method for unmarshalling from a given <code>Reader</code>._@param reader the <code>Reader</code> to read from_@return the object graph_@throws XmlMappingException if the given reader cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalReader(Reader reader)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,reader,code,param,reader,the,code,reader,code,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,reader,reader,reader,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalReader(Reader reader) 			throws XmlMappingException, IOException_;1356735495;Abstract template method for unmarshalling from a given {@code Reader}._@param reader the {@code Reader} to read from_@return the object graph_@throws XmlMappingException if the given reader cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalReader(Reader reader)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,reader,param,reader,the,code,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,reader,reader,reader,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalReader(Reader reader) 			throws XmlMappingException, IOException_;1357119239;Abstract template method for unmarshalling from a given {@code Reader}._@param reader the {@code Reader} to read from_@return the object graph_@throws XmlMappingException if the given reader cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalReader(Reader reader)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,reader,param,reader,the,code,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,reader,reader,reader,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalReader(Reader reader) 			throws XmlMappingException, IOException_;1368482696;Abstract template method for unmarshalling from a given {@code Reader}._@param reader the {@code Reader} to read from_@return the object graph_@throws XmlMappingException if the given reader cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalReader(Reader reader)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,reader,param,reader,the,code,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,reader,reader,reader,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalReader(Reader reader) 			throws XmlMappingException, IOException_;1376041400;Abstract template method for unmarshalling from a given {@code Reader}._@param reader the {@code Reader} to read from_@return the object graph_@throws XmlMappingException if the given reader cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalReader(Reader reader)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,reader,param,reader,the,code,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,reader,reader,reader,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalReader(Reader reader) 			throws XmlMappingException, IOException_;1392767670;Abstract template method for unmarshalling from a given {@code Reader}._@param reader the {@code Reader} to read from_@return the object graph_@throws XmlMappingException if the given reader cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalReader(Reader reader)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,reader,param,reader,the,code,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,reader,reader,reader,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalReader(Reader reader) 			throws XmlMappingException, IOException_;1397058176;Abstract template method for unmarshalling from a given {@code Reader}._@param reader the {@code Reader} to read from_@return the object graph_@throws XmlMappingException if the given reader cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalReader(Reader reader)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,reader,param,reader,the,code,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,reader,reader,reader,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalReader(Reader reader) 			throws XmlMappingException, IOException_;1397069887;Abstract template method for unmarshalling from a given {@code Reader}._@param reader the {@code Reader} to read from_@return the object graph_@throws XmlMappingException if the given reader cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalReader(Reader reader)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,reader,param,reader,the,code,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,reader,reader,reader,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalReader(Reader reader) 			throws XmlMappingException, IOException_;1398638859;Abstract template method for unmarshalling from a given {@code Reader}._@param reader the {@code Reader} to read from_@return the object graph_@throws XmlMappingException if the given reader cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalReader(Reader reader)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,reader,param,reader,the,code,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,reader,reader,reader,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalReader(Reader reader) 			throws XmlMappingException, IOException_;1400553912;Abstract template method for unmarshalling from a given {@code Reader}._@param reader the {@code Reader} to read from_@return the object graph_@throws XmlMappingException if the given reader cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalReader(Reader reader)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,reader,param,reader,the,code,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,reader,reader,reader,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalReader(Reader reader) 			throws XmlMappingException, IOException_;1435665021;Abstract template method for unmarshalling from a given {@code Reader}._@param reader the {@code Reader} to read from_@return the object graph_@throws XmlMappingException if the given reader cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalReader(Reader reader)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,reader,param,reader,the,code,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,reader,reader,reader,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalReader(Reader reader) 			throws XmlMappingException, IOException_;1455117733;Abstract template method for unmarshalling from a given {@code Reader}._@param reader the {@code Reader} to read from_@return the object graph_@throws XmlMappingException if the given reader cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalReader(Reader reader)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,reader,param,reader,the,code,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,reader,reader,reader,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalReader(Reader reader) 			throws XmlMappingException, IOException_;1468948866;Abstract template method for unmarshalling from a given {@code Reader}._@param reader the {@code Reader} to read from_@return the object graph_@throws XmlMappingException if the given reader cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalReader(Reader reader)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,reader,param,reader,the,code,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,reader,reader,reader,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalReader(Reader reader) 			throws XmlMappingException, IOException_;1483750478;Abstract template method for unmarshalling from a given {@code Reader}._@param reader the {@code Reader} to read from_@return the object graph_@throws XmlMappingException if the given reader cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalReader(Reader reader)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,reader,param,reader,the,code,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,reader,reader,reader,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalReader(Reader reader) 			throws XmlMappingException, IOException_;1484301200;Abstract template method for unmarshalling from a given {@code Reader}._@param reader the {@code Reader} to read from_@return the object graph_@throws XmlMappingException if the given reader cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalReader(Reader reader)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,reader,param,reader,the,code,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,reader,reader,reader,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalReader(Reader reader) 			throws XmlMappingException, IOException_;1495868221;Abstract template method for unmarshalling from a given {@code Reader}._@param reader the {@code Reader} to read from_@return the object graph_@throws XmlMappingException if the given reader cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalReader(Reader reader)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,reader,param,reader,the,code,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,reader,reader,reader,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalReader(Reader reader) 			throws XmlMappingException, IOException_;1498780456;Abstract template method for unmarshalling from a given {@code Reader}._@param reader the {@code Reader} to read from_@return the object graph_@throws XmlMappingException if the given reader cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalReader(Reader reader)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,reader,param,reader,the,code,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,reader,reader,reader,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalReader(Reader reader) 			throws XmlMappingException, IOException_;1518770299;Abstract template method for unmarshalling from a given {@code Reader}._@param reader the {@code Reader} to read from_@return the object graph_@throws XmlMappingException if the given reader cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalReader(Reader reader)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,reader,param,reader,the,code,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,reader,reader,reader,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalReader(Reader reader) 			throws XmlMappingException, IOException_;1518770299;Abstract template method for unmarshalling from a given {@code Reader}._@param reader the {@code Reader} to read from_@return the object graph_@throws XmlMappingException if the given reader cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalReader(Reader reader)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,reader,param,reader,the,code,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,reader,reader,reader,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalReader(Reader reader) 			throws XmlMappingException, IOException_;1530174524;Abstract template method for unmarshalling from a given {@code Reader}._@param reader the {@code Reader} to read from_@return the object graph_@throws XmlMappingException if the given reader cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalReader(Reader reader)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,reader,param,reader,the,code,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,reader,reader,reader,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalReader(Reader reader) 			throws XmlMappingException, IOException_;1530174524;Abstract template method for unmarshalling from a given {@code Reader}._@param reader the {@code Reader} to read from_@return the object graph_@throws XmlMappingException if the given reader cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalReader(Reader reader)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,reader,param,reader,the,code,reader,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,reader,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,reader,reader,reader,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalSaxHandlers( 			Object graph, ContentHandler contentHandler, @Nullable LexicalHandler lexicalHandler) 			throws XmlMappingException_;1495868221;Abstract template method for marshalling the given object graph to a SAX {@code ContentHandler}._@param graph the root of the object graph to marshal_@param contentHandler the SAX {@code ContentHandler}_@param lexicalHandler the SAX2 {@code LexicalHandler}. Can be {@code null}._@throws XmlMappingException if the given object cannot be marshalled to the handlers;protected abstract void marshalSaxHandlers(_			Object graph, ContentHandler contentHandler, @Nullable LexicalHandler lexicalHandler)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,sax,code,content,handler,param,graph,the,root,of,the,object,graph,to,marshal,param,content,handler,the,sax,code,content,handler,param,lexical,handler,the,sax2,code,lexical,handler,can,be,code,null,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,handlers;protected,abstract,void,marshal,sax,handlers,object,graph,content,handler,content,handler,nullable,lexical,handler,lexical,handler,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalSaxHandlers( 			Object graph, ContentHandler contentHandler, @Nullable LexicalHandler lexicalHandler) 			throws XmlMappingException_;1498780456;Abstract template method for marshalling the given object graph to a SAX {@code ContentHandler}._@param graph the root of the object graph to marshal_@param contentHandler the SAX {@code ContentHandler}_@param lexicalHandler the SAX2 {@code LexicalHandler}. Can be {@code null}._@throws XmlMappingException if the given object cannot be marshalled to the handlers;protected abstract void marshalSaxHandlers(_			Object graph, ContentHandler contentHandler, @Nullable LexicalHandler lexicalHandler)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,sax,code,content,handler,param,graph,the,root,of,the,object,graph,to,marshal,param,content,handler,the,sax,code,content,handler,param,lexical,handler,the,sax2,code,lexical,handler,can,be,code,null,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,handlers;protected,abstract,void,marshal,sax,handlers,object,graph,content,handler,content,handler,nullable,lexical,handler,lexical,handler,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalSaxHandlers( 			Object graph, ContentHandler contentHandler, @Nullable LexicalHandler lexicalHandler) 			throws XmlMappingException_;1518770299;Abstract template method for marshalling the given object graph to a SAX {@code ContentHandler}._@param graph the root of the object graph to marshal_@param contentHandler the SAX {@code ContentHandler}_@param lexicalHandler the SAX2 {@code LexicalHandler}. Can be {@code null}._@throws XmlMappingException if the given object cannot be marshalled to the handlers;protected abstract void marshalSaxHandlers(_			Object graph, ContentHandler contentHandler, @Nullable LexicalHandler lexicalHandler)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,sax,code,content,handler,param,graph,the,root,of,the,object,graph,to,marshal,param,content,handler,the,sax,code,content,handler,param,lexical,handler,the,sax2,code,lexical,handler,can,be,code,null,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,handlers;protected,abstract,void,marshal,sax,handlers,object,graph,content,handler,content,handler,nullable,lexical,handler,lexical,handler,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalSaxHandlers( 			Object graph, ContentHandler contentHandler, @Nullable LexicalHandler lexicalHandler) 			throws XmlMappingException_;1518770299;Abstract template method for marshalling the given object graph to a SAX {@code ContentHandler}._@param graph the root of the object graph to marshal_@param contentHandler the SAX {@code ContentHandler}_@param lexicalHandler the SAX2 {@code LexicalHandler}. Can be {@code null}._@throws XmlMappingException if the given object cannot be marshalled to the handlers;protected abstract void marshalSaxHandlers(_			Object graph, ContentHandler contentHandler, @Nullable LexicalHandler lexicalHandler)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,sax,code,content,handler,param,graph,the,root,of,the,object,graph,to,marshal,param,content,handler,the,sax,code,content,handler,param,lexical,handler,the,sax2,code,lexical,handler,can,be,code,null,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,handlers;protected,abstract,void,marshal,sax,handlers,object,graph,content,handler,content,handler,nullable,lexical,handler,lexical,handler,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalSaxHandlers( 			Object graph, ContentHandler contentHandler, @Nullable LexicalHandler lexicalHandler) 			throws XmlMappingException_;1530174524;Abstract template method for marshalling the given object graph to a SAX {@code ContentHandler}._@param graph the root of the object graph to marshal_@param contentHandler the SAX {@code ContentHandler}_@param lexicalHandler the SAX2 {@code LexicalHandler}. Can be {@code null}._@throws XmlMappingException if the given object cannot be marshalled to the handlers;protected abstract void marshalSaxHandlers(_			Object graph, ContentHandler contentHandler, @Nullable LexicalHandler lexicalHandler)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,sax,code,content,handler,param,graph,the,root,of,the,object,graph,to,marshal,param,content,handler,the,sax,code,content,handler,param,lexical,handler,the,sax2,code,lexical,handler,can,be,code,null,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,handlers;protected,abstract,void,marshal,sax,handlers,object,graph,content,handler,content,handler,nullable,lexical,handler,lexical,handler,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalSaxHandlers( 			Object graph, ContentHandler contentHandler, @Nullable LexicalHandler lexicalHandler) 			throws XmlMappingException_;1530174524;Abstract template method for marshalling the given object graph to a SAX {@code ContentHandler}._@param graph the root of the object graph to marshal_@param contentHandler the SAX {@code ContentHandler}_@param lexicalHandler the SAX2 {@code LexicalHandler}. Can be {@code null}._@throws XmlMappingException if the given object cannot be marshalled to the handlers;protected abstract void marshalSaxHandlers(_			Object graph, ContentHandler contentHandler, @Nullable LexicalHandler lexicalHandler)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,sax,code,content,handler,param,graph,the,root,of,the,object,graph,to,marshal,param,content,handler,the,sax,code,content,handler,param,lexical,handler,the,sax2,code,lexical,handler,can,be,code,null,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,handlers;protected,abstract,void,marshal,sax,handlers,object,graph,content,handler,content,handler,nullable,lexical,handler,lexical,handler,throws,xml,mapping,exception
AbstractMarshaller -> protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException;1328020251;Create a <code>DocumentBuilder</code> that this marshaller will use for creating_DOM documents when passed an empty <code>DOMSource</code>._<p>The resulting <code>DocumentBuilderFactory</code> is cached, so this method_will only be called once._@return the DocumentBuilderFactory_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException {_		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()__		factory.setValidating(false)__		factory.setNamespaceAware(true)__		return factory__	};create,a,code,document,builder,code,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,code,p,the,resulting,code,document,builder,factory,code,is,cached,so,this,method,will,only,be,called,once,return,the,document,builder,factory,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,factory,create,document,builder,factory,throws,parser,configuration,exception,document,builder,factory,factory,document,builder,factory,new,instance,factory,set,validating,false,factory,set,namespace,aware,true,return,factory
AbstractMarshaller -> protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException;1356735495;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>The resulting {@code DocumentBuilderFactory} is cached, so this method_will only be called once._@return the DocumentBuilderFactory_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException {_		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()__		factory.setValidating(false)__		factory.setNamespaceAware(true)__		return factory__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,the,resulting,code,document,builder,factory,is,cached,so,this,method,will,only,be,called,once,return,the,document,builder,factory,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,factory,create,document,builder,factory,throws,parser,configuration,exception,document,builder,factory,factory,document,builder,factory,new,instance,factory,set,validating,false,factory,set,namespace,aware,true,return,factory
AbstractMarshaller -> protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException;1357119239;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>The resulting {@code DocumentBuilderFactory} is cached, so this method_will only be called once._@return the DocumentBuilderFactory_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException {_		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()__		factory.setValidating(false)__		factory.setNamespaceAware(true)__		return factory__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,the,resulting,code,document,builder,factory,is,cached,so,this,method,will,only,be,called,once,return,the,document,builder,factory,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,factory,create,document,builder,factory,throws,parser,configuration,exception,document,builder,factory,factory,document,builder,factory,new,instance,factory,set,validating,false,factory,set,namespace,aware,true,return,factory
AbstractMarshaller -> protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException;1368482696;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>The resulting {@code DocumentBuilderFactory} is cached, so this method_will only be called once._@return the DocumentBuilderFactory_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException {_		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()__		factory.setValidating(false)__		factory.setNamespaceAware(true)__		return factory__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,the,resulting,code,document,builder,factory,is,cached,so,this,method,will,only,be,called,once,return,the,document,builder,factory,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,factory,create,document,builder,factory,throws,parser,configuration,exception,document,builder,factory,factory,document,builder,factory,new,instance,factory,set,validating,false,factory,set,namespace,aware,true,return,factory
AbstractMarshaller -> protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException;1376041400;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>The resulting {@code DocumentBuilderFactory} is cached, so this method_will only be called once._@return the DocumentBuilderFactory_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException {_		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()__		factory.setValidating(false)__		factory.setNamespaceAware(true)__		return factory__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,the,resulting,code,document,builder,factory,is,cached,so,this,method,will,only,be,called,once,return,the,document,builder,factory,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,factory,create,document,builder,factory,throws,parser,configuration,exception,document,builder,factory,factory,document,builder,factory,new,instance,factory,set,validating,false,factory,set,namespace,aware,true,return,factory
AbstractMarshaller -> protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException;1392767670;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>The resulting {@code DocumentBuilderFactory} is cached, so this method_will only be called once._@return the DocumentBuilderFactory_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException {_		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()__		factory.setValidating(false)__		factory.setNamespaceAware(true)__		return factory__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,the,resulting,code,document,builder,factory,is,cached,so,this,method,will,only,be,called,once,return,the,document,builder,factory,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,factory,create,document,builder,factory,throws,parser,configuration,exception,document,builder,factory,factory,document,builder,factory,new,instance,factory,set,validating,false,factory,set,namespace,aware,true,return,factory
AbstractMarshaller -> protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException;1397058176;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>The resulting {@code DocumentBuilderFactory} is cached, so this method_will only be called once._@return the DocumentBuilderFactory_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException {_		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()__		factory.setValidating(false)__		factory.setNamespaceAware(true)__		return factory__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,the,resulting,code,document,builder,factory,is,cached,so,this,method,will,only,be,called,once,return,the,document,builder,factory,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,factory,create,document,builder,factory,throws,parser,configuration,exception,document,builder,factory,factory,document,builder,factory,new,instance,factory,set,validating,false,factory,set,namespace,aware,true,return,factory
AbstractMarshaller -> protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException;1397069887;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>The resulting {@code DocumentBuilderFactory} is cached, so this method_will only be called once._@return the DocumentBuilderFactory_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException {_		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()__		factory.setValidating(false)__		factory.setNamespaceAware(true)__		return factory__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,the,resulting,code,document,builder,factory,is,cached,so,this,method,will,only,be,called,once,return,the,document,builder,factory,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,factory,create,document,builder,factory,throws,parser,configuration,exception,document,builder,factory,factory,document,builder,factory,new,instance,factory,set,validating,false,factory,set,namespace,aware,true,return,factory
AbstractMarshaller -> protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException;1398638859;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>The resulting {@code DocumentBuilderFactory} is cached, so this method_will only be called once._@return the DocumentBuilderFactory_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException {_		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()__		factory.setValidating(false)__		factory.setNamespaceAware(true)__		return factory__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,the,resulting,code,document,builder,factory,is,cached,so,this,method,will,only,be,called,once,return,the,document,builder,factory,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,factory,create,document,builder,factory,throws,parser,configuration,exception,document,builder,factory,factory,document,builder,factory,new,instance,factory,set,validating,false,factory,set,namespace,aware,true,return,factory
AbstractMarshaller -> protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException;1400553912;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>The resulting {@code DocumentBuilderFactory} is cached, so this method_will only be called once._@return the DocumentBuilderFactory_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException {_		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()__		factory.setValidating(false)__		factory.setNamespaceAware(true)__		return factory__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,the,resulting,code,document,builder,factory,is,cached,so,this,method,will,only,be,called,once,return,the,document,builder,factory,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,factory,create,document,builder,factory,throws,parser,configuration,exception,document,builder,factory,factory,document,builder,factory,new,instance,factory,set,validating,false,factory,set,namespace,aware,true,return,factory
AbstractMarshaller -> protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException;1435665021;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>The resulting {@code DocumentBuilderFactory} is cached, so this method_will only be called once._@return the DocumentBuilderFactory_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException {_		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()__		factory.setValidating(false)__		factory.setNamespaceAware(true)__		factory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", !isSupportDtd())__		factory.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		return factory__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,the,resulting,code,document,builder,factory,is,cached,so,this,method,will,only,be,called,once,return,the,document,builder,factory,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,factory,create,document,builder,factory,throws,parser,configuration,exception,document,builder,factory,factory,document,builder,factory,new,instance,factory,set,validating,false,factory,set,namespace,aware,true,factory,set,feature,http,apache,org,xml,features,disallow,doctype,decl,is,support,dtd,factory,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,return,factory
AbstractMarshaller -> protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException;1455117733;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>The resulting {@code DocumentBuilderFactory} is cached, so this method_will only be called once._@return the DocumentBuilderFactory_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException {_		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()__		factory.setValidating(false)__		factory.setNamespaceAware(true)__		factory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", !isSupportDtd())__		factory.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		return factory__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,the,resulting,code,document,builder,factory,is,cached,so,this,method,will,only,be,called,once,return,the,document,builder,factory,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,factory,create,document,builder,factory,throws,parser,configuration,exception,document,builder,factory,factory,document,builder,factory,new,instance,factory,set,validating,false,factory,set,namespace,aware,true,factory,set,feature,http,apache,org,xml,features,disallow,doctype,decl,is,support,dtd,factory,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,return,factory
AbstractMarshaller -> protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException;1468948866;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>The resulting {@code DocumentBuilderFactory} is cached, so this method_will only be called once._@return the DocumentBuilderFactory_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException {_		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()__		factory.setValidating(false)__		factory.setNamespaceAware(true)__		factory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", !isSupportDtd())__		factory.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		return factory__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,the,resulting,code,document,builder,factory,is,cached,so,this,method,will,only,be,called,once,return,the,document,builder,factory,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,factory,create,document,builder,factory,throws,parser,configuration,exception,document,builder,factory,factory,document,builder,factory,new,instance,factory,set,validating,false,factory,set,namespace,aware,true,factory,set,feature,http,apache,org,xml,features,disallow,doctype,decl,is,support,dtd,factory,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,return,factory
AbstractMarshaller -> protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException;1483750478;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>The resulting {@code DocumentBuilderFactory} is cached, so this method_will only be called once._@return the DocumentBuilderFactory_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException {_		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()__		factory.setValidating(false)__		factory.setNamespaceAware(true)__		factory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", !isSupportDtd())__		factory.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		return factory__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,the,resulting,code,document,builder,factory,is,cached,so,this,method,will,only,be,called,once,return,the,document,builder,factory,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,factory,create,document,builder,factory,throws,parser,configuration,exception,document,builder,factory,factory,document,builder,factory,new,instance,factory,set,validating,false,factory,set,namespace,aware,true,factory,set,feature,http,apache,org,xml,features,disallow,doctype,decl,is,support,dtd,factory,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,return,factory
AbstractMarshaller -> protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException;1484301200;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>The resulting {@code DocumentBuilderFactory} is cached, so this method_will only be called once._@return the DocumentBuilderFactory_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException {_		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()__		factory.setValidating(false)__		factory.setNamespaceAware(true)__		factory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", !isSupportDtd())__		factory.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		return factory__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,the,resulting,code,document,builder,factory,is,cached,so,this,method,will,only,be,called,once,return,the,document,builder,factory,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,factory,create,document,builder,factory,throws,parser,configuration,exception,document,builder,factory,factory,document,builder,factory,new,instance,factory,set,validating,false,factory,set,namespace,aware,true,factory,set,feature,http,apache,org,xml,features,disallow,doctype,decl,is,support,dtd,factory,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,return,factory
AbstractMarshaller -> protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException;1495868221;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>The resulting {@code DocumentBuilderFactory} is cached, so this method_will only be called once._@return the DocumentBuilderFactory_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException {_		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()__		factory.setValidating(false)__		factory.setNamespaceAware(true)__		factory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", !isSupportDtd())__		factory.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		return factory__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,the,resulting,code,document,builder,factory,is,cached,so,this,method,will,only,be,called,once,return,the,document,builder,factory,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,factory,create,document,builder,factory,throws,parser,configuration,exception,document,builder,factory,factory,document,builder,factory,new,instance,factory,set,validating,false,factory,set,namespace,aware,true,factory,set,feature,http,apache,org,xml,features,disallow,doctype,decl,is,support,dtd,factory,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,return,factory
AbstractMarshaller -> protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException;1498780456;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>The resulting {@code DocumentBuilderFactory} is cached, so this method_will only be called once._@return the DocumentBuilderFactory_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException {_		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()__		factory.setValidating(false)__		factory.setNamespaceAware(true)__		factory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", !isSupportDtd())__		factory.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		return factory__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,the,resulting,code,document,builder,factory,is,cached,so,this,method,will,only,be,called,once,return,the,document,builder,factory,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,factory,create,document,builder,factory,throws,parser,configuration,exception,document,builder,factory,factory,document,builder,factory,new,instance,factory,set,validating,false,factory,set,namespace,aware,true,factory,set,feature,http,apache,org,xml,features,disallow,doctype,decl,is,support,dtd,factory,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,return,factory
AbstractMarshaller -> protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException;1518770299;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>The resulting {@code DocumentBuilderFactory} is cached, so this method_will only be called once._@return the DocumentBuilderFactory_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException {_		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()__		factory.setValidating(false)__		factory.setNamespaceAware(true)__		factory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", !isSupportDtd())__		factory.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		return factory__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,the,resulting,code,document,builder,factory,is,cached,so,this,method,will,only,be,called,once,return,the,document,builder,factory,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,factory,create,document,builder,factory,throws,parser,configuration,exception,document,builder,factory,factory,document,builder,factory,new,instance,factory,set,validating,false,factory,set,namespace,aware,true,factory,set,feature,http,apache,org,xml,features,disallow,doctype,decl,is,support,dtd,factory,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,return,factory
AbstractMarshaller -> protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException;1518770299;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>The resulting {@code DocumentBuilderFactory} is cached, so this method_will only be called once._@return the DocumentBuilderFactory_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException {_		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()__		factory.setValidating(false)__		factory.setNamespaceAware(true)__		factory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", !isSupportDtd())__		factory.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		return factory__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,the,resulting,code,document,builder,factory,is,cached,so,this,method,will,only,be,called,once,return,the,document,builder,factory,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,factory,create,document,builder,factory,throws,parser,configuration,exception,document,builder,factory,factory,document,builder,factory,new,instance,factory,set,validating,false,factory,set,namespace,aware,true,factory,set,feature,http,apache,org,xml,features,disallow,doctype,decl,is,support,dtd,factory,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,return,factory
AbstractMarshaller -> protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException;1530174524;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>The resulting {@code DocumentBuilderFactory} is cached, so this method_will only be called once._@return the DocumentBuilderFactory_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException {_		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()__		factory.setValidating(false)__		factory.setNamespaceAware(true)__		factory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", !isSupportDtd())__		factory.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		return factory__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,the,resulting,code,document,builder,factory,is,cached,so,this,method,will,only,be,called,once,return,the,document,builder,factory,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,factory,create,document,builder,factory,throws,parser,configuration,exception,document,builder,factory,factory,document,builder,factory,new,instance,factory,set,validating,false,factory,set,namespace,aware,true,factory,set,feature,http,apache,org,xml,features,disallow,doctype,decl,is,support,dtd,factory,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,return,factory
AbstractMarshaller -> protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException;1530174524;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>The resulting {@code DocumentBuilderFactory} is cached, so this method_will only be called once._@return the DocumentBuilderFactory_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilderFactory createDocumentBuilderFactory() throws ParserConfigurationException {_		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance()__		factory.setValidating(false)__		factory.setNamespaceAware(true)__		factory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", !isSupportDtd())__		factory.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		return factory__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,the,resulting,code,document,builder,factory,is,cached,so,this,method,will,only,be,called,once,return,the,document,builder,factory,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,factory,create,document,builder,factory,throws,parser,configuration,exception,document,builder,factory,factory,document,builder,factory,new,instance,factory,set,validating,false,factory,set,namespace,aware,true,factory,set,feature,http,apache,org,xml,features,disallow,doctype,decl,is,support,dtd,factory,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,return,factory
AbstractMarshaller -> protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException;1328020251;Template method for handling <code>SAXSource</code>s._<p>This implementation delegates to <code>unmarshalSaxReader</code>._@param saxSource the <code>SAXSource</code>_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IOException if an I/O Exception occurs_@see #unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource);protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException {_		if (saxSource.getXMLReader() == null) {_			try {_				saxSource.setXMLReader(createXmlReader())__			}_			catch (SAXException ex) {_				throw new UnmarshallingFailureException("Could not create XMLReader for SAXSource", ex)__			}_		}_		if (saxSource.getInputSource() == null) {_			saxSource.setInputSource(new InputSource())__		}_		return unmarshalSaxReader(saxSource.getXMLReader(), saxSource.getInputSource())__	};template,method,for,handling,code,saxsource,code,s,p,this,implementation,delegates,to,code,unmarshal,sax,reader,code,param,sax,source,the,code,saxsource,code,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,ioexception,if,an,i,o,exception,occurs,see,unmarshal,sax,reader,org,xml,sax,xmlreader,org,xml,sax,input,source;protected,object,unmarshal,sax,source,saxsource,sax,source,throws,xml,mapping,exception,ioexception,if,sax,source,get,xmlreader,null,try,sax,source,set,xmlreader,create,xml,reader,catch,saxexception,ex,throw,new,unmarshalling,failure,exception,could,not,create,xmlreader,for,saxsource,ex,if,sax,source,get,input,source,null,sax,source,set,input,source,new,input,source,return,unmarshal,sax,reader,sax,source,get,xmlreader,sax,source,get,input,source
AbstractMarshaller -> protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException;1356735495;Template method for handling {@code SAXSource}s._<p>This implementation delegates to {@code unmarshalSaxReader}._@param saxSource the {@code SAXSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IOException if an I/O Exception occurs_@see #unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource);protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException {_		if (saxSource.getXMLReader() == null) {_			try {_				saxSource.setXMLReader(createXmlReader())__			}_			catch (SAXException ex) {_				throw new UnmarshallingFailureException("Could not create XMLReader for SAXSource", ex)__			}_		}_		if (saxSource.getInputSource() == null) {_			saxSource.setInputSource(new InputSource())__		}_		return unmarshalSaxReader(saxSource.getXMLReader(), saxSource.getInputSource())__	};template,method,for,handling,code,saxsource,s,p,this,implementation,delegates,to,code,unmarshal,sax,reader,param,sax,source,the,code,saxsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,ioexception,if,an,i,o,exception,occurs,see,unmarshal,sax,reader,org,xml,sax,xmlreader,org,xml,sax,input,source;protected,object,unmarshal,sax,source,saxsource,sax,source,throws,xml,mapping,exception,ioexception,if,sax,source,get,xmlreader,null,try,sax,source,set,xmlreader,create,xml,reader,catch,saxexception,ex,throw,new,unmarshalling,failure,exception,could,not,create,xmlreader,for,saxsource,ex,if,sax,source,get,input,source,null,sax,source,set,input,source,new,input,source,return,unmarshal,sax,reader,sax,source,get,xmlreader,sax,source,get,input,source
AbstractMarshaller -> protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException;1357119239;Template method for handling {@code SAXSource}s._<p>This implementation delegates to {@code unmarshalSaxReader}._@param saxSource the {@code SAXSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IOException if an I/O Exception occurs_@see #unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource);protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException {_		if (saxSource.getXMLReader() == null) {_			try {_				saxSource.setXMLReader(createXmlReader())__			}_			catch (SAXException ex) {_				throw new UnmarshallingFailureException("Could not create XMLReader for SAXSource", ex)__			}_		}_		if (saxSource.getInputSource() == null) {_			saxSource.setInputSource(new InputSource())__		}_		return unmarshalSaxReader(saxSource.getXMLReader(), saxSource.getInputSource())__	};template,method,for,handling,code,saxsource,s,p,this,implementation,delegates,to,code,unmarshal,sax,reader,param,sax,source,the,code,saxsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,ioexception,if,an,i,o,exception,occurs,see,unmarshal,sax,reader,org,xml,sax,xmlreader,org,xml,sax,input,source;protected,object,unmarshal,sax,source,saxsource,sax,source,throws,xml,mapping,exception,ioexception,if,sax,source,get,xmlreader,null,try,sax,source,set,xmlreader,create,xml,reader,catch,saxexception,ex,throw,new,unmarshalling,failure,exception,could,not,create,xmlreader,for,saxsource,ex,if,sax,source,get,input,source,null,sax,source,set,input,source,new,input,source,return,unmarshal,sax,reader,sax,source,get,xmlreader,sax,source,get,input,source
AbstractMarshaller -> protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException;1368482696;Template method for handling {@code SAXSource}s._<p>This implementation delegates to {@code unmarshalSaxReader}._@param saxSource the {@code SAXSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IOException if an I/O Exception occurs_@see #unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource);protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException {_		if (saxSource.getXMLReader() == null) {_			try {_				saxSource.setXMLReader(createXmlReader())__			}_			catch (SAXException ex) {_				throw new UnmarshallingFailureException("Could not create XMLReader for SAXSource", ex)__			}_		}_		if (saxSource.getInputSource() == null) {_			saxSource.setInputSource(new InputSource())__		}_		return unmarshalSaxReader(saxSource.getXMLReader(), saxSource.getInputSource())__	};template,method,for,handling,code,saxsource,s,p,this,implementation,delegates,to,code,unmarshal,sax,reader,param,sax,source,the,code,saxsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,ioexception,if,an,i,o,exception,occurs,see,unmarshal,sax,reader,org,xml,sax,xmlreader,org,xml,sax,input,source;protected,object,unmarshal,sax,source,saxsource,sax,source,throws,xml,mapping,exception,ioexception,if,sax,source,get,xmlreader,null,try,sax,source,set,xmlreader,create,xml,reader,catch,saxexception,ex,throw,new,unmarshalling,failure,exception,could,not,create,xmlreader,for,saxsource,ex,if,sax,source,get,input,source,null,sax,source,set,input,source,new,input,source,return,unmarshal,sax,reader,sax,source,get,xmlreader,sax,source,get,input,source
AbstractMarshaller -> protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException;1376041400;Template method for handling {@code SAXSource}s._<p>This implementation delegates to {@code unmarshalSaxReader}._@param saxSource the {@code SAXSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IOException if an I/O Exception occurs_@see #unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource);protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException {_		if (saxSource.getXMLReader() == null) {_			try {_				saxSource.setXMLReader(createXmlReader())__			}_			catch (SAXException ex) {_				throw new UnmarshallingFailureException("Could not create XMLReader for SAXSource", ex)__			}_		}_		if (saxSource.getInputSource() == null) {_			saxSource.setInputSource(new InputSource())__		}_		return unmarshalSaxReader(saxSource.getXMLReader(), saxSource.getInputSource())__	};template,method,for,handling,code,saxsource,s,p,this,implementation,delegates,to,code,unmarshal,sax,reader,param,sax,source,the,code,saxsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,ioexception,if,an,i,o,exception,occurs,see,unmarshal,sax,reader,org,xml,sax,xmlreader,org,xml,sax,input,source;protected,object,unmarshal,sax,source,saxsource,sax,source,throws,xml,mapping,exception,ioexception,if,sax,source,get,xmlreader,null,try,sax,source,set,xmlreader,create,xml,reader,catch,saxexception,ex,throw,new,unmarshalling,failure,exception,could,not,create,xmlreader,for,saxsource,ex,if,sax,source,get,input,source,null,sax,source,set,input,source,new,input,source,return,unmarshal,sax,reader,sax,source,get,xmlreader,sax,source,get,input,source
AbstractMarshaller -> protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException;1392767670;Template method for handling {@code SAXSource}s._<p>This implementation delegates to {@code unmarshalSaxReader}._@param saxSource the {@code SAXSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IOException if an I/O Exception occurs_@see #unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource);protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException {_		if (saxSource.getXMLReader() == null) {_			try {_				saxSource.setXMLReader(createXmlReader())__			}_			catch (SAXException ex) {_				throw new UnmarshallingFailureException("Could not create XMLReader for SAXSource", ex)__			}_		}_		if (saxSource.getInputSource() == null) {_			saxSource.setInputSource(new InputSource())__		}_		return unmarshalSaxReader(saxSource.getXMLReader(), saxSource.getInputSource())__	};template,method,for,handling,code,saxsource,s,p,this,implementation,delegates,to,code,unmarshal,sax,reader,param,sax,source,the,code,saxsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,ioexception,if,an,i,o,exception,occurs,see,unmarshal,sax,reader,org,xml,sax,xmlreader,org,xml,sax,input,source;protected,object,unmarshal,sax,source,saxsource,sax,source,throws,xml,mapping,exception,ioexception,if,sax,source,get,xmlreader,null,try,sax,source,set,xmlreader,create,xml,reader,catch,saxexception,ex,throw,new,unmarshalling,failure,exception,could,not,create,xmlreader,for,saxsource,ex,if,sax,source,get,input,source,null,sax,source,set,input,source,new,input,source,return,unmarshal,sax,reader,sax,source,get,xmlreader,sax,source,get,input,source
AbstractMarshaller -> protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException;1397058176;Template method for handling {@code SAXSource}s._<p>This implementation delegates to {@code unmarshalSaxReader}._@param saxSource the {@code SAXSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IOException if an I/O Exception occurs_@see #unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource);protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException {_		if (saxSource.getXMLReader() == null) {_			try {_				saxSource.setXMLReader(createXmlReader())__			}_			catch (SAXException ex) {_				throw new UnmarshallingFailureException("Could not create XMLReader for SAXSource", ex)__			}_		}_		if (saxSource.getInputSource() == null) {_			saxSource.setInputSource(new InputSource())__		}_		return unmarshalSaxReader(saxSource.getXMLReader(), saxSource.getInputSource())__	};template,method,for,handling,code,saxsource,s,p,this,implementation,delegates,to,code,unmarshal,sax,reader,param,sax,source,the,code,saxsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,ioexception,if,an,i,o,exception,occurs,see,unmarshal,sax,reader,org,xml,sax,xmlreader,org,xml,sax,input,source;protected,object,unmarshal,sax,source,saxsource,sax,source,throws,xml,mapping,exception,ioexception,if,sax,source,get,xmlreader,null,try,sax,source,set,xmlreader,create,xml,reader,catch,saxexception,ex,throw,new,unmarshalling,failure,exception,could,not,create,xmlreader,for,saxsource,ex,if,sax,source,get,input,source,null,sax,source,set,input,source,new,input,source,return,unmarshal,sax,reader,sax,source,get,xmlreader,sax,source,get,input,source
AbstractMarshaller -> protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException;1397069887;Template method for handling {@code SAXSource}s._<p>This implementation delegates to {@code unmarshalSaxReader}._@param saxSource the {@code SAXSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IOException if an I/O Exception occurs_@see #unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource);protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException {_		if (saxSource.getXMLReader() == null) {_			try {_				saxSource.setXMLReader(createXmlReader())__			}_			catch (SAXException ex) {_				throw new UnmarshallingFailureException("Could not create XMLReader for SAXSource", ex)__			}_		}_		if (saxSource.getInputSource() == null) {_			saxSource.setInputSource(new InputSource())__		}_		return unmarshalSaxReader(saxSource.getXMLReader(), saxSource.getInputSource())__	};template,method,for,handling,code,saxsource,s,p,this,implementation,delegates,to,code,unmarshal,sax,reader,param,sax,source,the,code,saxsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,ioexception,if,an,i,o,exception,occurs,see,unmarshal,sax,reader,org,xml,sax,xmlreader,org,xml,sax,input,source;protected,object,unmarshal,sax,source,saxsource,sax,source,throws,xml,mapping,exception,ioexception,if,sax,source,get,xmlreader,null,try,sax,source,set,xmlreader,create,xml,reader,catch,saxexception,ex,throw,new,unmarshalling,failure,exception,could,not,create,xmlreader,for,saxsource,ex,if,sax,source,get,input,source,null,sax,source,set,input,source,new,input,source,return,unmarshal,sax,reader,sax,source,get,xmlreader,sax,source,get,input,source
AbstractMarshaller -> protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException;1398638859;Template method for handling {@code SAXSource}s._<p>This implementation delegates to {@code unmarshalSaxReader}._@param saxSource the {@code SAXSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IOException if an I/O Exception occurs_@see #unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource);protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException {_		if (saxSource.getXMLReader() == null) {_			try {_				saxSource.setXMLReader(createXmlReader())__			}_			catch (SAXException ex) {_				throw new UnmarshallingFailureException("Could not create XMLReader for SAXSource", ex)__			}_		}_		if (saxSource.getInputSource() == null) {_			saxSource.setInputSource(new InputSource())__		}_		return unmarshalSaxReader(saxSource.getXMLReader(), saxSource.getInputSource())__	};template,method,for,handling,code,saxsource,s,p,this,implementation,delegates,to,code,unmarshal,sax,reader,param,sax,source,the,code,saxsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,ioexception,if,an,i,o,exception,occurs,see,unmarshal,sax,reader,org,xml,sax,xmlreader,org,xml,sax,input,source;protected,object,unmarshal,sax,source,saxsource,sax,source,throws,xml,mapping,exception,ioexception,if,sax,source,get,xmlreader,null,try,sax,source,set,xmlreader,create,xml,reader,catch,saxexception,ex,throw,new,unmarshalling,failure,exception,could,not,create,xmlreader,for,saxsource,ex,if,sax,source,get,input,source,null,sax,source,set,input,source,new,input,source,return,unmarshal,sax,reader,sax,source,get,xmlreader,sax,source,get,input,source
AbstractMarshaller -> protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException;1400553912;Template method for handling {@code SAXSource}s._<p>This implementation delegates to {@code unmarshalSaxReader}._@param saxSource the {@code SAXSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IOException if an I/O Exception occurs_@see #unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource);protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException {_		if (saxSource.getXMLReader() == null) {_			try {_				saxSource.setXMLReader(createXmlReader())__			}_			catch (SAXException ex) {_				throw new UnmarshallingFailureException("Could not create XMLReader for SAXSource", ex)__			}_		}_		if (saxSource.getInputSource() == null) {_			saxSource.setInputSource(new InputSource())__		}_		return unmarshalSaxReader(saxSource.getXMLReader(), saxSource.getInputSource())__	};template,method,for,handling,code,saxsource,s,p,this,implementation,delegates,to,code,unmarshal,sax,reader,param,sax,source,the,code,saxsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,ioexception,if,an,i,o,exception,occurs,see,unmarshal,sax,reader,org,xml,sax,xmlreader,org,xml,sax,input,source;protected,object,unmarshal,sax,source,saxsource,sax,source,throws,xml,mapping,exception,ioexception,if,sax,source,get,xmlreader,null,try,sax,source,set,xmlreader,create,xml,reader,catch,saxexception,ex,throw,new,unmarshalling,failure,exception,could,not,create,xmlreader,for,saxsource,ex,if,sax,source,get,input,source,null,sax,source,set,input,source,new,input,source,return,unmarshal,sax,reader,sax,source,get,xmlreader,sax,source,get,input,source
AbstractMarshaller -> protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException;1435665021;Template method for handling {@code SAXSource}s._<p>This implementation delegates to {@code unmarshalSaxReader}._@param saxSource the {@code SAXSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IOException if an I/O Exception occurs_@see #unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource);protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException {_		if (saxSource.getXMLReader() == null) {_			try {_				saxSource.setXMLReader(createXmlReader())__			}_			catch (SAXException ex) {_				throw new UnmarshallingFailureException("Could not create XMLReader for SAXSource", ex)__			}_		}_		if (saxSource.getInputSource() == null) {_			saxSource.setInputSource(new InputSource())__		}_		try {_			return unmarshalSaxReader(saxSource.getXMLReader(), saxSource.getInputSource())__		}_		catch (NullPointerException ex) {_			if (!isSupportDtd()) {_				throw new UnmarshallingFailureException("NPE while unmarshalling. " +_						"This can happen on JDK 1.6 due to the presence of DTD " +_						"declarations, which are disabled.")__			}_			throw ex__		}_	};template,method,for,handling,code,saxsource,s,p,this,implementation,delegates,to,code,unmarshal,sax,reader,param,sax,source,the,code,saxsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,ioexception,if,an,i,o,exception,occurs,see,unmarshal,sax,reader,org,xml,sax,xmlreader,org,xml,sax,input,source;protected,object,unmarshal,sax,source,saxsource,sax,source,throws,xml,mapping,exception,ioexception,if,sax,source,get,xmlreader,null,try,sax,source,set,xmlreader,create,xml,reader,catch,saxexception,ex,throw,new,unmarshalling,failure,exception,could,not,create,xmlreader,for,saxsource,ex,if,sax,source,get,input,source,null,sax,source,set,input,source,new,input,source,try,return,unmarshal,sax,reader,sax,source,get,xmlreader,sax,source,get,input,source,catch,null,pointer,exception,ex,if,is,support,dtd,throw,new,unmarshalling,failure,exception,npe,while,unmarshalling,this,can,happen,on,jdk,1,6,due,to,the,presence,of,dtd,declarations,which,are,disabled,throw,ex
AbstractMarshaller -> protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException;1455117733;Template method for handling {@code SAXSource}s._<p>This implementation delegates to {@code unmarshalSaxReader}._@param saxSource the {@code SAXSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IOException if an I/O Exception occurs_@see #unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource);protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException {_		if (saxSource.getXMLReader() == null) {_			try {_				saxSource.setXMLReader(createXmlReader())__			}_			catch (SAXException ex) {_				throw new UnmarshallingFailureException("Could not create XMLReader for SAXSource", ex)__			}_		}_		if (saxSource.getInputSource() == null) {_			saxSource.setInputSource(new InputSource())__		}_		try {_			return unmarshalSaxReader(saxSource.getXMLReader(), saxSource.getInputSource())__		}_		catch (NullPointerException ex) {_			if (!isSupportDtd()) {_				throw new UnmarshallingFailureException("NPE while unmarshalling. " +_						"This can happen on JDK 1.6 due to the presence of DTD " +_						"declarations, which are disabled.")__			}_			throw ex__		}_	};template,method,for,handling,code,saxsource,s,p,this,implementation,delegates,to,code,unmarshal,sax,reader,param,sax,source,the,code,saxsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,ioexception,if,an,i,o,exception,occurs,see,unmarshal,sax,reader,org,xml,sax,xmlreader,org,xml,sax,input,source;protected,object,unmarshal,sax,source,saxsource,sax,source,throws,xml,mapping,exception,ioexception,if,sax,source,get,xmlreader,null,try,sax,source,set,xmlreader,create,xml,reader,catch,saxexception,ex,throw,new,unmarshalling,failure,exception,could,not,create,xmlreader,for,saxsource,ex,if,sax,source,get,input,source,null,sax,source,set,input,source,new,input,source,try,return,unmarshal,sax,reader,sax,source,get,xmlreader,sax,source,get,input,source,catch,null,pointer,exception,ex,if,is,support,dtd,throw,new,unmarshalling,failure,exception,npe,while,unmarshalling,this,can,happen,on,jdk,1,6,due,to,the,presence,of,dtd,declarations,which,are,disabled,throw,ex
AbstractMarshaller -> protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException;1468948866;Template method for handling {@code SAXSource}s._<p>This implementation delegates to {@code unmarshalSaxReader}._@param saxSource the {@code SAXSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IOException if an I/O Exception occurs_@see #unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource);protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException {_		if (saxSource.getXMLReader() == null) {_			try {_				saxSource.setXMLReader(createXmlReader())__			}_			catch (SAXException ex) {_				throw new UnmarshallingFailureException("Could not create XMLReader for SAXSource", ex)__			}_		}_		if (saxSource.getInputSource() == null) {_			saxSource.setInputSource(new InputSource())__		}_		try {_			return unmarshalSaxReader(saxSource.getXMLReader(), saxSource.getInputSource())__		}_		catch (NullPointerException ex) {_			if (!isSupportDtd()) {_				throw new UnmarshallingFailureException("NPE while unmarshalling. " +_						"This can happen on JDK 1.6 due to the presence of DTD " +_						"declarations, which are disabled.")__			}_			throw ex__		}_	};template,method,for,handling,code,saxsource,s,p,this,implementation,delegates,to,code,unmarshal,sax,reader,param,sax,source,the,code,saxsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,ioexception,if,an,i,o,exception,occurs,see,unmarshal,sax,reader,org,xml,sax,xmlreader,org,xml,sax,input,source;protected,object,unmarshal,sax,source,saxsource,sax,source,throws,xml,mapping,exception,ioexception,if,sax,source,get,xmlreader,null,try,sax,source,set,xmlreader,create,xml,reader,catch,saxexception,ex,throw,new,unmarshalling,failure,exception,could,not,create,xmlreader,for,saxsource,ex,if,sax,source,get,input,source,null,sax,source,set,input,source,new,input,source,try,return,unmarshal,sax,reader,sax,source,get,xmlreader,sax,source,get,input,source,catch,null,pointer,exception,ex,if,is,support,dtd,throw,new,unmarshalling,failure,exception,npe,while,unmarshalling,this,can,happen,on,jdk,1,6,due,to,the,presence,of,dtd,declarations,which,are,disabled,throw,ex
AbstractMarshaller -> protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException;1483750478;Template method for handling {@code SAXSource}s._<p>This implementation delegates to {@code unmarshalSaxReader}._@param saxSource the {@code SAXSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IOException if an I/O Exception occurs_@see #unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource);protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException {_		if (saxSource.getXMLReader() == null) {_			try {_				saxSource.setXMLReader(createXmlReader())__			}_			catch (SAXException ex) {_				throw new UnmarshallingFailureException("Could not create XMLReader for SAXSource", ex)__			}_		}_		if (saxSource.getInputSource() == null) {_			saxSource.setInputSource(new InputSource())__		}_		try {_			return unmarshalSaxReader(saxSource.getXMLReader(), saxSource.getInputSource())__		}_		catch (NullPointerException ex) {_			if (!isSupportDtd()) {_				throw new UnmarshallingFailureException("NPE while unmarshalling. " +_						"This can happen on JDK 1.6 due to the presence of DTD " +_						"declarations, which are disabled.")__			}_			throw ex__		}_	};template,method,for,handling,code,saxsource,s,p,this,implementation,delegates,to,code,unmarshal,sax,reader,param,sax,source,the,code,saxsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,ioexception,if,an,i,o,exception,occurs,see,unmarshal,sax,reader,org,xml,sax,xmlreader,org,xml,sax,input,source;protected,object,unmarshal,sax,source,saxsource,sax,source,throws,xml,mapping,exception,ioexception,if,sax,source,get,xmlreader,null,try,sax,source,set,xmlreader,create,xml,reader,catch,saxexception,ex,throw,new,unmarshalling,failure,exception,could,not,create,xmlreader,for,saxsource,ex,if,sax,source,get,input,source,null,sax,source,set,input,source,new,input,source,try,return,unmarshal,sax,reader,sax,source,get,xmlreader,sax,source,get,input,source,catch,null,pointer,exception,ex,if,is,support,dtd,throw,new,unmarshalling,failure,exception,npe,while,unmarshalling,this,can,happen,on,jdk,1,6,due,to,the,presence,of,dtd,declarations,which,are,disabled,throw,ex
AbstractMarshaller -> protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException;1484301200;Template method for handling {@code SAXSource}s._<p>This implementation delegates to {@code unmarshalSaxReader}._@param saxSource the {@code SAXSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IOException if an I/O Exception occurs_@see #unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource);protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException {_		if (saxSource.getXMLReader() == null) {_			try {_				saxSource.setXMLReader(createXmlReader())__			}_			catch (SAXException ex) {_				throw new UnmarshallingFailureException("Could not create XMLReader for SAXSource", ex)__			}_		}_		if (saxSource.getInputSource() == null) {_			saxSource.setInputSource(new InputSource())__		}_		try {_			return unmarshalSaxReader(saxSource.getXMLReader(), saxSource.getInputSource())__		}_		catch (NullPointerException ex) {_			if (!isSupportDtd()) {_				throw new UnmarshallingFailureException("NPE while unmarshalling. " +_						"This can happen on JDK 1.6 due to the presence of DTD " +_						"declarations, which are disabled.")__			}_			throw ex__		}_	};template,method,for,handling,code,saxsource,s,p,this,implementation,delegates,to,code,unmarshal,sax,reader,param,sax,source,the,code,saxsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,ioexception,if,an,i,o,exception,occurs,see,unmarshal,sax,reader,org,xml,sax,xmlreader,org,xml,sax,input,source;protected,object,unmarshal,sax,source,saxsource,sax,source,throws,xml,mapping,exception,ioexception,if,sax,source,get,xmlreader,null,try,sax,source,set,xmlreader,create,xml,reader,catch,saxexception,ex,throw,new,unmarshalling,failure,exception,could,not,create,xmlreader,for,saxsource,ex,if,sax,source,get,input,source,null,sax,source,set,input,source,new,input,source,try,return,unmarshal,sax,reader,sax,source,get,xmlreader,sax,source,get,input,source,catch,null,pointer,exception,ex,if,is,support,dtd,throw,new,unmarshalling,failure,exception,npe,while,unmarshalling,this,can,happen,on,jdk,1,6,due,to,the,presence,of,dtd,declarations,which,are,disabled,throw,ex
AbstractMarshaller -> protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException;1495868221;Template method for handling {@code SAXSource}s._<p>This implementation delegates to {@code unmarshalSaxReader}._@param saxSource the {@code SAXSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IOException if an I/O Exception occurs_@see #unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource);protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException {_		if (saxSource.getXMLReader() == null) {_			try {_				saxSource.setXMLReader(createXmlReader())__			}_			catch (SAXException ex) {_				throw new UnmarshallingFailureException("Could not create XMLReader for SAXSource", ex)__			}_		}_		if (saxSource.getInputSource() == null) {_			saxSource.setInputSource(new InputSource())__		}_		try {_			return unmarshalSaxReader(saxSource.getXMLReader(), saxSource.getInputSource())__		}_		catch (NullPointerException ex) {_			if (!isSupportDtd()) {_				throw new UnmarshallingFailureException("NPE while unmarshalling. " +_						"This can happen on JDK 1.6 due to the presence of DTD " +_						"declarations, which are disabled.")__			}_			throw ex__		}_	};template,method,for,handling,code,saxsource,s,p,this,implementation,delegates,to,code,unmarshal,sax,reader,param,sax,source,the,code,saxsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,ioexception,if,an,i,o,exception,occurs,see,unmarshal,sax,reader,org,xml,sax,xmlreader,org,xml,sax,input,source;protected,object,unmarshal,sax,source,saxsource,sax,source,throws,xml,mapping,exception,ioexception,if,sax,source,get,xmlreader,null,try,sax,source,set,xmlreader,create,xml,reader,catch,saxexception,ex,throw,new,unmarshalling,failure,exception,could,not,create,xmlreader,for,saxsource,ex,if,sax,source,get,input,source,null,sax,source,set,input,source,new,input,source,try,return,unmarshal,sax,reader,sax,source,get,xmlreader,sax,source,get,input,source,catch,null,pointer,exception,ex,if,is,support,dtd,throw,new,unmarshalling,failure,exception,npe,while,unmarshalling,this,can,happen,on,jdk,1,6,due,to,the,presence,of,dtd,declarations,which,are,disabled,throw,ex
AbstractMarshaller -> protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException;1498780456;Template method for handling {@code SAXSource}s._<p>This implementation delegates to {@code unmarshalSaxReader}._@param saxSource the {@code SAXSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IOException if an I/O Exception occurs_@see #unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource);protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException {_		if (saxSource.getXMLReader() == null) {_			try {_				saxSource.setXMLReader(createXmlReader())__			}_			catch (SAXException ex) {_				throw new UnmarshallingFailureException("Could not create XMLReader for SAXSource", ex)__			}_		}_		if (saxSource.getInputSource() == null) {_			saxSource.setInputSource(new InputSource())__		}_		try {_			return unmarshalSaxReader(saxSource.getXMLReader(), saxSource.getInputSource())__		}_		catch (NullPointerException ex) {_			if (!isSupportDtd()) {_				throw new UnmarshallingFailureException("NPE while unmarshalling. " +_						"This can happen on JDK 1.6 due to the presence of DTD " +_						"declarations, which are disabled.")__			}_			throw ex__		}_	};template,method,for,handling,code,saxsource,s,p,this,implementation,delegates,to,code,unmarshal,sax,reader,param,sax,source,the,code,saxsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,ioexception,if,an,i,o,exception,occurs,see,unmarshal,sax,reader,org,xml,sax,xmlreader,org,xml,sax,input,source;protected,object,unmarshal,sax,source,saxsource,sax,source,throws,xml,mapping,exception,ioexception,if,sax,source,get,xmlreader,null,try,sax,source,set,xmlreader,create,xml,reader,catch,saxexception,ex,throw,new,unmarshalling,failure,exception,could,not,create,xmlreader,for,saxsource,ex,if,sax,source,get,input,source,null,sax,source,set,input,source,new,input,source,try,return,unmarshal,sax,reader,sax,source,get,xmlreader,sax,source,get,input,source,catch,null,pointer,exception,ex,if,is,support,dtd,throw,new,unmarshalling,failure,exception,npe,while,unmarshalling,this,can,happen,on,jdk,1,6,due,to,the,presence,of,dtd,declarations,which,are,disabled,throw,ex
AbstractMarshaller -> protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException;1518770299;Template method for handling {@code SAXSource}s._<p>This implementation delegates to {@code unmarshalSaxReader}._@param saxSource the {@code SAXSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IOException if an I/O Exception occurs_@see #unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource);protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException {_		if (saxSource.getXMLReader() == null) {_			try {_				saxSource.setXMLReader(createXmlReader())__			}_			catch (SAXException ex) {_				throw new UnmarshallingFailureException("Could not create XMLReader for SAXSource", ex)__			}_		}_		if (saxSource.getInputSource() == null) {_			saxSource.setInputSource(new InputSource())__		}_		try {_			return unmarshalSaxReader(saxSource.getXMLReader(), saxSource.getInputSource())__		}_		catch (NullPointerException ex) {_			if (!isSupportDtd()) {_				throw new UnmarshallingFailureException("NPE while unmarshalling. " +_						"This can happen on JDK 1.6 due to the presence of DTD " +_						"declarations, which are disabled.")__			}_			throw ex__		}_	};template,method,for,handling,code,saxsource,s,p,this,implementation,delegates,to,code,unmarshal,sax,reader,param,sax,source,the,code,saxsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,ioexception,if,an,i,o,exception,occurs,see,unmarshal,sax,reader,org,xml,sax,xmlreader,org,xml,sax,input,source;protected,object,unmarshal,sax,source,saxsource,sax,source,throws,xml,mapping,exception,ioexception,if,sax,source,get,xmlreader,null,try,sax,source,set,xmlreader,create,xml,reader,catch,saxexception,ex,throw,new,unmarshalling,failure,exception,could,not,create,xmlreader,for,saxsource,ex,if,sax,source,get,input,source,null,sax,source,set,input,source,new,input,source,try,return,unmarshal,sax,reader,sax,source,get,xmlreader,sax,source,get,input,source,catch,null,pointer,exception,ex,if,is,support,dtd,throw,new,unmarshalling,failure,exception,npe,while,unmarshalling,this,can,happen,on,jdk,1,6,due,to,the,presence,of,dtd,declarations,which,are,disabled,throw,ex
AbstractMarshaller -> protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException;1518770299;Template method for handling {@code SAXSource}s._<p>This implementation delegates to {@code unmarshalSaxReader}._@param saxSource the {@code SAXSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IOException if an I/O Exception occurs_@see #unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource);protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException {_		if (saxSource.getXMLReader() == null) {_			try {_				saxSource.setXMLReader(createXmlReader())__			}_			catch (SAXException ex) {_				throw new UnmarshallingFailureException("Could not create XMLReader for SAXSource", ex)__			}_		}_		if (saxSource.getInputSource() == null) {_			saxSource.setInputSource(new InputSource())__		}_		try {_			return unmarshalSaxReader(saxSource.getXMLReader(), saxSource.getInputSource())__		}_		catch (NullPointerException ex) {_			if (!isSupportDtd()) {_				throw new UnmarshallingFailureException("NPE while unmarshalling. " +_						"This can happen on JDK 1.6 due to the presence of DTD " +_						"declarations, which are disabled.")__			}_			throw ex__		}_	};template,method,for,handling,code,saxsource,s,p,this,implementation,delegates,to,code,unmarshal,sax,reader,param,sax,source,the,code,saxsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,ioexception,if,an,i,o,exception,occurs,see,unmarshal,sax,reader,org,xml,sax,xmlreader,org,xml,sax,input,source;protected,object,unmarshal,sax,source,saxsource,sax,source,throws,xml,mapping,exception,ioexception,if,sax,source,get,xmlreader,null,try,sax,source,set,xmlreader,create,xml,reader,catch,saxexception,ex,throw,new,unmarshalling,failure,exception,could,not,create,xmlreader,for,saxsource,ex,if,sax,source,get,input,source,null,sax,source,set,input,source,new,input,source,try,return,unmarshal,sax,reader,sax,source,get,xmlreader,sax,source,get,input,source,catch,null,pointer,exception,ex,if,is,support,dtd,throw,new,unmarshalling,failure,exception,npe,while,unmarshalling,this,can,happen,on,jdk,1,6,due,to,the,presence,of,dtd,declarations,which,are,disabled,throw,ex
AbstractMarshaller -> protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException;1530174524;Template method for handling {@code SAXSource}s._<p>This implementation delegates to {@code unmarshalSaxReader}._@param saxSource the {@code SAXSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IOException if an I/O Exception occurs_@see #unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource);protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException {_		if (saxSource.getXMLReader() == null) {_			try {_				saxSource.setXMLReader(createXmlReader())__			}_			catch (SAXException ex) {_				throw new UnmarshallingFailureException("Could not create XMLReader for SAXSource", ex)__			}_		}_		if (saxSource.getInputSource() == null) {_			saxSource.setInputSource(new InputSource())__		}_		try {_			return unmarshalSaxReader(saxSource.getXMLReader(), saxSource.getInputSource())__		}_		catch (NullPointerException ex) {_			if (!isSupportDtd()) {_				throw new UnmarshallingFailureException("NPE while unmarshalling. " +_						"This can happen on JDK 1.6 due to the presence of DTD " +_						"declarations, which are disabled.")__			}_			throw ex__		}_	};template,method,for,handling,code,saxsource,s,p,this,implementation,delegates,to,code,unmarshal,sax,reader,param,sax,source,the,code,saxsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,ioexception,if,an,i,o,exception,occurs,see,unmarshal,sax,reader,org,xml,sax,xmlreader,org,xml,sax,input,source;protected,object,unmarshal,sax,source,saxsource,sax,source,throws,xml,mapping,exception,ioexception,if,sax,source,get,xmlreader,null,try,sax,source,set,xmlreader,create,xml,reader,catch,saxexception,ex,throw,new,unmarshalling,failure,exception,could,not,create,xmlreader,for,saxsource,ex,if,sax,source,get,input,source,null,sax,source,set,input,source,new,input,source,try,return,unmarshal,sax,reader,sax,source,get,xmlreader,sax,source,get,input,source,catch,null,pointer,exception,ex,if,is,support,dtd,throw,new,unmarshalling,failure,exception,npe,while,unmarshalling,this,can,happen,on,jdk,1,6,due,to,the,presence,of,dtd,declarations,which,are,disabled,throw,ex
AbstractMarshaller -> protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException;1530174524;Template method for handling {@code SAXSource}s._<p>This implementation delegates to {@code unmarshalSaxReader}._@param saxSource the {@code SAXSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IOException if an I/O Exception occurs_@see #unmarshalSaxReader(org.xml.sax.XMLReader, org.xml.sax.InputSource);protected Object unmarshalSaxSource(SAXSource saxSource) throws XmlMappingException, IOException {_		if (saxSource.getXMLReader() == null) {_			try {_				saxSource.setXMLReader(createXmlReader())__			}_			catch (SAXException ex) {_				throw new UnmarshallingFailureException("Could not create XMLReader for SAXSource", ex)__			}_		}_		if (saxSource.getInputSource() == null) {_			saxSource.setInputSource(new InputSource())__		}_		try {_			return unmarshalSaxReader(saxSource.getXMLReader(), saxSource.getInputSource())__		}_		catch (NullPointerException ex) {_			if (!isSupportDtd()) {_				throw new UnmarshallingFailureException("NPE while unmarshalling. " +_						"This can happen on JDK 1.6 due to the presence of DTD " +_						"declarations, which are disabled.")__			}_			throw ex__		}_	};template,method,for,handling,code,saxsource,s,p,this,implementation,delegates,to,code,unmarshal,sax,reader,param,sax,source,the,code,saxsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,ioexception,if,an,i,o,exception,occurs,see,unmarshal,sax,reader,org,xml,sax,xmlreader,org,xml,sax,input,source;protected,object,unmarshal,sax,source,saxsource,sax,source,throws,xml,mapping,exception,ioexception,if,sax,source,get,xmlreader,null,try,sax,source,set,xmlreader,create,xml,reader,catch,saxexception,ex,throw,new,unmarshalling,failure,exception,could,not,create,xmlreader,for,saxsource,ex,if,sax,source,get,input,source,null,sax,source,set,input,source,new,input,source,try,return,unmarshal,sax,reader,sax,source,get,xmlreader,sax,source,get,input,source,catch,null,pointer,exception,ex,if,is,support,dtd,throw,new,unmarshalling,failure,exception,npe,while,unmarshalling,this,can,happen,on,jdk,1,6,due,to,the,presence,of,dtd,declarations,which,are,disabled,throw,ex
AbstractMarshaller -> public void setSupportDtd(boolean supportDtd);1435665021;Indicates whether DTD parsing should be supported._<p>Default is {@code false} meaning that DTD is disabled.;public void setSupportDtd(boolean supportDtd) {_		this.supportDtd = supportDtd__	};indicates,whether,dtd,parsing,should,be,supported,p,default,is,code,false,meaning,that,dtd,is,disabled;public,void,set,support,dtd,boolean,support,dtd,this,support,dtd,support,dtd
AbstractMarshaller -> public void setSupportDtd(boolean supportDtd);1455117733;Indicates whether DTD parsing should be supported._<p>Default is {@code false} meaning that DTD is disabled.;public void setSupportDtd(boolean supportDtd) {_		this.supportDtd = supportDtd__	};indicates,whether,dtd,parsing,should,be,supported,p,default,is,code,false,meaning,that,dtd,is,disabled;public,void,set,support,dtd,boolean,support,dtd,this,support,dtd,support,dtd
AbstractMarshaller -> public void setSupportDtd(boolean supportDtd);1468948866;Indicates whether DTD parsing should be supported._<p>Default is {@code false} meaning that DTD is disabled.;public void setSupportDtd(boolean supportDtd) {_		this.supportDtd = supportDtd__	};indicates,whether,dtd,parsing,should,be,supported,p,default,is,code,false,meaning,that,dtd,is,disabled;public,void,set,support,dtd,boolean,support,dtd,this,support,dtd,support,dtd
AbstractMarshaller -> public void setSupportDtd(boolean supportDtd);1483750478;Indicates whether DTD parsing should be supported._<p>Default is {@code false} meaning that DTD is disabled.;public void setSupportDtd(boolean supportDtd) {_		this.supportDtd = supportDtd__	};indicates,whether,dtd,parsing,should,be,supported,p,default,is,code,false,meaning,that,dtd,is,disabled;public,void,set,support,dtd,boolean,support,dtd,this,support,dtd,support,dtd
AbstractMarshaller -> public void setSupportDtd(boolean supportDtd);1484301200;Indicates whether DTD parsing should be supported._<p>Default is {@code false} meaning that DTD is disabled.;public void setSupportDtd(boolean supportDtd) {_		this.supportDtd = supportDtd__	};indicates,whether,dtd,parsing,should,be,supported,p,default,is,code,false,meaning,that,dtd,is,disabled;public,void,set,support,dtd,boolean,support,dtd,this,support,dtd,support,dtd
AbstractMarshaller -> public void setSupportDtd(boolean supportDtd);1495868221;Indicates whether DTD parsing should be supported._<p>Default is {@code false} meaning that DTD is disabled.;public void setSupportDtd(boolean supportDtd) {_		this.supportDtd = supportDtd__	};indicates,whether,dtd,parsing,should,be,supported,p,default,is,code,false,meaning,that,dtd,is,disabled;public,void,set,support,dtd,boolean,support,dtd,this,support,dtd,support,dtd
AbstractMarshaller -> public void setSupportDtd(boolean supportDtd);1498780456;Indicates whether DTD parsing should be supported._<p>Default is {@code false} meaning that DTD is disabled.;public void setSupportDtd(boolean supportDtd) {_		this.supportDtd = supportDtd__	};indicates,whether,dtd,parsing,should,be,supported,p,default,is,code,false,meaning,that,dtd,is,disabled;public,void,set,support,dtd,boolean,support,dtd,this,support,dtd,support,dtd
AbstractMarshaller -> public void setSupportDtd(boolean supportDtd);1518770299;Indicates whether DTD parsing should be supported._<p>Default is {@code false} meaning that DTD is disabled.;public void setSupportDtd(boolean supportDtd) {_		this.supportDtd = supportDtd__	};indicates,whether,dtd,parsing,should,be,supported,p,default,is,code,false,meaning,that,dtd,is,disabled;public,void,set,support,dtd,boolean,support,dtd,this,support,dtd,support,dtd
AbstractMarshaller -> public void setSupportDtd(boolean supportDtd);1518770299;Indicates whether DTD parsing should be supported._<p>Default is {@code false} meaning that DTD is disabled.;public void setSupportDtd(boolean supportDtd) {_		this.supportDtd = supportDtd__	};indicates,whether,dtd,parsing,should,be,supported,p,default,is,code,false,meaning,that,dtd,is,disabled;public,void,set,support,dtd,boolean,support,dtd,this,support,dtd,support,dtd
AbstractMarshaller -> public void setSupportDtd(boolean supportDtd);1530174524;Indicates whether DTD parsing should be supported._<p>Default is {@code false} meaning that DTD is disabled.;public void setSupportDtd(boolean supportDtd) {_		this.supportDtd = supportDtd__	};indicates,whether,dtd,parsing,should,be,supported,p,default,is,code,false,meaning,that,dtd,is,disabled;public,void,set,support,dtd,boolean,support,dtd,this,support,dtd,support,dtd
AbstractMarshaller -> public void setSupportDtd(boolean supportDtd);1530174524;Indicates whether DTD parsing should be supported._<p>Default is {@code false} meaning that DTD is disabled.;public void setSupportDtd(boolean supportDtd) {_		this.supportDtd = supportDtd__	};indicates,whether,dtd,parsing,should,be,supported,p,default,is,code,false,meaning,that,dtd,is,disabled;public,void,set,support,dtd,boolean,support,dtd,this,support,dtd,support,dtd
AbstractMarshaller -> protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException;1328020251;Template method for handling <code>DOMSource</code>s._<p>This implementation delegates to <code>unmarshalDomNode</code>._If the given source is empty, an empty source <code>Document</code>_will be created as a placeholder._@param domSource the <code>DOMSource</code>_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if the <code>domSource</code> is empty_@see #unmarshalDomNode(org.w3c.dom.Node);protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException {_		if (domSource.getNode() == null) {_			try {_				synchronized (this.documentBuilderFactoryMonitor) {_					if (this.documentBuilderFactory == null) {_						this.documentBuilderFactory = createDocumentBuilderFactory()__					}_				}_				DocumentBuilder documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__				domSource.setNode(documentBuilder.newDocument())__			}_			catch (ParserConfigurationException ex) {_				throw new UnmarshallingFailureException(_						"Could not create document placeholder for DOMSource: " + ex.getMessage(), ex)__			}_		}_		return unmarshalDomNode(domSource.getNode())__	};template,method,for,handling,code,domsource,code,s,p,this,implementation,delegates,to,code,unmarshal,dom,node,code,if,the,given,source,is,empty,an,empty,source,code,document,code,will,be,created,as,a,placeholder,param,dom,source,the,code,domsource,code,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,the,code,dom,source,code,is,empty,see,unmarshal,dom,node,org,w3c,dom,node;protected,object,unmarshal,dom,source,domsource,dom,source,throws,xml,mapping,exception,if,dom,source,get,node,null,try,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,document,builder,create,document,builder,this,document,builder,factory,dom,source,set,node,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,for,domsource,ex,get,message,ex,return,unmarshal,dom,node,dom,source,get,node
AbstractMarshaller -> protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException;1356735495;Template method for handling {@code DOMSource}s._<p>This implementation delegates to {@code unmarshalDomNode}._If the given source is empty, an empty source {@code Document}_will be created as a placeholder._@param domSource the {@code DOMSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if the {@code domSource} is empty_@see #unmarshalDomNode(org.w3c.dom.Node);protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException {_		if (domSource.getNode() == null) {_			try {_				synchronized (this.documentBuilderFactoryMonitor) {_					if (this.documentBuilderFactory == null) {_						this.documentBuilderFactory = createDocumentBuilderFactory()__					}_				}_				DocumentBuilder documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__				domSource.setNode(documentBuilder.newDocument())__			}_			catch (ParserConfigurationException ex) {_				throw new UnmarshallingFailureException(_						"Could not create document placeholder for DOMSource: " + ex.getMessage(), ex)__			}_		}_		return unmarshalDomNode(domSource.getNode())__	};template,method,for,handling,code,domsource,s,p,this,implementation,delegates,to,code,unmarshal,dom,node,if,the,given,source,is,empty,an,empty,source,code,document,will,be,created,as,a,placeholder,param,dom,source,the,code,domsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,the,code,dom,source,is,empty,see,unmarshal,dom,node,org,w3c,dom,node;protected,object,unmarshal,dom,source,domsource,dom,source,throws,xml,mapping,exception,if,dom,source,get,node,null,try,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,document,builder,create,document,builder,this,document,builder,factory,dom,source,set,node,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,for,domsource,ex,get,message,ex,return,unmarshal,dom,node,dom,source,get,node
AbstractMarshaller -> protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException;1357119239;Template method for handling {@code DOMSource}s._<p>This implementation delegates to {@code unmarshalDomNode}._If the given source is empty, an empty source {@code Document}_will be created as a placeholder._@param domSource the {@code DOMSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if the {@code domSource} is empty_@see #unmarshalDomNode(org.w3c.dom.Node);protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException {_		if (domSource.getNode() == null) {_			try {_				synchronized (this.documentBuilderFactoryMonitor) {_					if (this.documentBuilderFactory == null) {_						this.documentBuilderFactory = createDocumentBuilderFactory()__					}_				}_				DocumentBuilder documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__				domSource.setNode(documentBuilder.newDocument())__			}_			catch (ParserConfigurationException ex) {_				throw new UnmarshallingFailureException(_						"Could not create document placeholder for DOMSource: " + ex.getMessage(), ex)__			}_		}_		return unmarshalDomNode(domSource.getNode())__	};template,method,for,handling,code,domsource,s,p,this,implementation,delegates,to,code,unmarshal,dom,node,if,the,given,source,is,empty,an,empty,source,code,document,will,be,created,as,a,placeholder,param,dom,source,the,code,domsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,the,code,dom,source,is,empty,see,unmarshal,dom,node,org,w3c,dom,node;protected,object,unmarshal,dom,source,domsource,dom,source,throws,xml,mapping,exception,if,dom,source,get,node,null,try,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,document,builder,create,document,builder,this,document,builder,factory,dom,source,set,node,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,for,domsource,ex,get,message,ex,return,unmarshal,dom,node,dom,source,get,node
AbstractMarshaller -> protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException;1368482696;Template method for handling {@code DOMSource}s._<p>This implementation delegates to {@code unmarshalDomNode}._If the given source is empty, an empty source {@code Document}_will be created as a placeholder._@param domSource the {@code DOMSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if the {@code domSource} is empty_@see #unmarshalDomNode(org.w3c.dom.Node);protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException {_		if (domSource.getNode() == null) {_			try {_				synchronized (this.documentBuilderFactoryMonitor) {_					if (this.documentBuilderFactory == null) {_						this.documentBuilderFactory = createDocumentBuilderFactory()__					}_				}_				DocumentBuilder documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__				domSource.setNode(documentBuilder.newDocument())__			}_			catch (ParserConfigurationException ex) {_				throw new UnmarshallingFailureException(_						"Could not create document placeholder for DOMSource: " + ex.getMessage(), ex)__			}_		}_		return unmarshalDomNode(domSource.getNode())__	};template,method,for,handling,code,domsource,s,p,this,implementation,delegates,to,code,unmarshal,dom,node,if,the,given,source,is,empty,an,empty,source,code,document,will,be,created,as,a,placeholder,param,dom,source,the,code,domsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,the,code,dom,source,is,empty,see,unmarshal,dom,node,org,w3c,dom,node;protected,object,unmarshal,dom,source,domsource,dom,source,throws,xml,mapping,exception,if,dom,source,get,node,null,try,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,document,builder,create,document,builder,this,document,builder,factory,dom,source,set,node,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,for,domsource,ex,get,message,ex,return,unmarshal,dom,node,dom,source,get,node
AbstractMarshaller -> protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException;1376041400;Template method for handling {@code DOMSource}s._<p>This implementation delegates to {@code unmarshalDomNode}._If the given source is empty, an empty source {@code Document}_will be created as a placeholder._@param domSource the {@code DOMSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if the {@code domSource} is empty_@see #unmarshalDomNode(org.w3c.dom.Node);protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException {_		if (domSource.getNode() == null) {_			try {_				synchronized (this.documentBuilderFactoryMonitor) {_					if (this.documentBuilderFactory == null) {_						this.documentBuilderFactory = createDocumentBuilderFactory()__					}_				}_				DocumentBuilder documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__				domSource.setNode(documentBuilder.newDocument())__			}_			catch (ParserConfigurationException ex) {_				throw new UnmarshallingFailureException(_						"Could not create document placeholder for DOMSource: " + ex.getMessage(), ex)__			}_		}_		return unmarshalDomNode(domSource.getNode())__	};template,method,for,handling,code,domsource,s,p,this,implementation,delegates,to,code,unmarshal,dom,node,if,the,given,source,is,empty,an,empty,source,code,document,will,be,created,as,a,placeholder,param,dom,source,the,code,domsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,the,code,dom,source,is,empty,see,unmarshal,dom,node,org,w3c,dom,node;protected,object,unmarshal,dom,source,domsource,dom,source,throws,xml,mapping,exception,if,dom,source,get,node,null,try,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,document,builder,create,document,builder,this,document,builder,factory,dom,source,set,node,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,for,domsource,ex,get,message,ex,return,unmarshal,dom,node,dom,source,get,node
AbstractMarshaller -> protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException;1392767670;Template method for handling {@code DOMSource}s._<p>This implementation delegates to {@code unmarshalDomNode}._If the given source is empty, an empty source {@code Document}_will be created as a placeholder._@param domSource the {@code DOMSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if the {@code domSource} is empty_@see #unmarshalDomNode(org.w3c.dom.Node);protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException {_		if (domSource.getNode() == null) {_			try {_				synchronized (this.documentBuilderFactoryMonitor) {_					if (this.documentBuilderFactory == null) {_						this.documentBuilderFactory = createDocumentBuilderFactory()__					}_				}_				DocumentBuilder documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__				domSource.setNode(documentBuilder.newDocument())__			}_			catch (ParserConfigurationException ex) {_				throw new UnmarshallingFailureException(_						"Could not create document placeholder for DOMSource: " + ex.getMessage(), ex)__			}_		}_		return unmarshalDomNode(domSource.getNode())__	};template,method,for,handling,code,domsource,s,p,this,implementation,delegates,to,code,unmarshal,dom,node,if,the,given,source,is,empty,an,empty,source,code,document,will,be,created,as,a,placeholder,param,dom,source,the,code,domsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,the,code,dom,source,is,empty,see,unmarshal,dom,node,org,w3c,dom,node;protected,object,unmarshal,dom,source,domsource,dom,source,throws,xml,mapping,exception,if,dom,source,get,node,null,try,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,document,builder,create,document,builder,this,document,builder,factory,dom,source,set,node,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,for,domsource,ex,get,message,ex,return,unmarshal,dom,node,dom,source,get,node
AbstractMarshaller -> protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException;1397058176;Template method for handling {@code DOMSource}s._<p>This implementation delegates to {@code unmarshalDomNode}._If the given source is empty, an empty source {@code Document}_will be created as a placeholder._@param domSource the {@code DOMSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if the {@code domSource} is empty_@see #unmarshalDomNode(org.w3c.dom.Node);protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException {_		if (domSource.getNode() == null) {_			domSource.setNode(buildDocument())__		}_		return unmarshalDomNode(domSource.getNode())__	};template,method,for,handling,code,domsource,s,p,this,implementation,delegates,to,code,unmarshal,dom,node,if,the,given,source,is,empty,an,empty,source,code,document,will,be,created,as,a,placeholder,param,dom,source,the,code,domsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,the,code,dom,source,is,empty,see,unmarshal,dom,node,org,w3c,dom,node;protected,object,unmarshal,dom,source,domsource,dom,source,throws,xml,mapping,exception,if,dom,source,get,node,null,dom,source,set,node,build,document,return,unmarshal,dom,node,dom,source,get,node
AbstractMarshaller -> protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException;1397069887;Template method for handling {@code DOMSource}s._<p>This implementation delegates to {@code unmarshalDomNode}._If the given source is empty, an empty source {@code Document}_will be created as a placeholder._@param domSource the {@code DOMSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if the {@code domSource} is empty_@see #unmarshalDomNode(org.w3c.dom.Node);protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException {_		if (domSource.getNode() == null) {_			domSource.setNode(buildDocument())__		}_		return unmarshalDomNode(domSource.getNode())__	};template,method,for,handling,code,domsource,s,p,this,implementation,delegates,to,code,unmarshal,dom,node,if,the,given,source,is,empty,an,empty,source,code,document,will,be,created,as,a,placeholder,param,dom,source,the,code,domsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,the,code,dom,source,is,empty,see,unmarshal,dom,node,org,w3c,dom,node;protected,object,unmarshal,dom,source,domsource,dom,source,throws,xml,mapping,exception,if,dom,source,get,node,null,dom,source,set,node,build,document,return,unmarshal,dom,node,dom,source,get,node
AbstractMarshaller -> protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException;1398638859;Template method for handling {@code DOMSource}s._<p>This implementation delegates to {@code unmarshalDomNode}._If the given source is empty, an empty source {@code Document}_will be created as a placeholder._@param domSource the {@code DOMSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if the {@code domSource} is empty_@see #unmarshalDomNode(org.w3c.dom.Node);protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException {_		if (domSource.getNode() == null) {_			domSource.setNode(buildDocument())__		}_		return unmarshalDomNode(domSource.getNode())__	};template,method,for,handling,code,domsource,s,p,this,implementation,delegates,to,code,unmarshal,dom,node,if,the,given,source,is,empty,an,empty,source,code,document,will,be,created,as,a,placeholder,param,dom,source,the,code,domsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,the,code,dom,source,is,empty,see,unmarshal,dom,node,org,w3c,dom,node;protected,object,unmarshal,dom,source,domsource,dom,source,throws,xml,mapping,exception,if,dom,source,get,node,null,dom,source,set,node,build,document,return,unmarshal,dom,node,dom,source,get,node
AbstractMarshaller -> protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException;1400553912;Template method for handling {@code DOMSource}s._<p>This implementation delegates to {@code unmarshalDomNode}._If the given source is empty, an empty source {@code Document}_will be created as a placeholder._@param domSource the {@code DOMSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if the {@code domSource} is empty_@see #unmarshalDomNode(org.w3c.dom.Node);protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException {_		if (domSource.getNode() == null) {_			domSource.setNode(buildDocument())__		}_		return unmarshalDomNode(domSource.getNode())__	};template,method,for,handling,code,domsource,s,p,this,implementation,delegates,to,code,unmarshal,dom,node,if,the,given,source,is,empty,an,empty,source,code,document,will,be,created,as,a,placeholder,param,dom,source,the,code,domsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,the,code,dom,source,is,empty,see,unmarshal,dom,node,org,w3c,dom,node;protected,object,unmarshal,dom,source,domsource,dom,source,throws,xml,mapping,exception,if,dom,source,get,node,null,dom,source,set,node,build,document,return,unmarshal,dom,node,dom,source,get,node
AbstractMarshaller -> protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException;1435665021;Template method for handling {@code DOMSource}s._<p>This implementation delegates to {@code unmarshalDomNode}._If the given source is empty, an empty source {@code Document}_will be created as a placeholder._@param domSource the {@code DOMSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if the {@code domSource} is empty_@see #unmarshalDomNode(org.w3c.dom.Node);protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException {_		if (domSource.getNode() == null) {_			domSource.setNode(buildDocument())__		}_		try {_			return unmarshalDomNode(domSource.getNode())__		}_		catch (NullPointerException ex) {_			if (!isSupportDtd()) {_				throw new UnmarshallingFailureException("NPE while unmarshalling. " +_						"This can happen on JDK 1.6 due to the presence of DTD " +_						"declarations, which are disabled.", ex)__			}_			throw ex__		}_	};template,method,for,handling,code,domsource,s,p,this,implementation,delegates,to,code,unmarshal,dom,node,if,the,given,source,is,empty,an,empty,source,code,document,will,be,created,as,a,placeholder,param,dom,source,the,code,domsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,the,code,dom,source,is,empty,see,unmarshal,dom,node,org,w3c,dom,node;protected,object,unmarshal,dom,source,domsource,dom,source,throws,xml,mapping,exception,if,dom,source,get,node,null,dom,source,set,node,build,document,try,return,unmarshal,dom,node,dom,source,get,node,catch,null,pointer,exception,ex,if,is,support,dtd,throw,new,unmarshalling,failure,exception,npe,while,unmarshalling,this,can,happen,on,jdk,1,6,due,to,the,presence,of,dtd,declarations,which,are,disabled,ex,throw,ex
AbstractMarshaller -> protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException;1455117733;Template method for handling {@code DOMSource}s._<p>This implementation delegates to {@code unmarshalDomNode}._If the given source is empty, an empty source {@code Document}_will be created as a placeholder._@param domSource the {@code DOMSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if the {@code domSource} is empty_@see #unmarshalDomNode(org.w3c.dom.Node);protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException {_		if (domSource.getNode() == null) {_			domSource.setNode(buildDocument())__		}_		try {_			return unmarshalDomNode(domSource.getNode())__		}_		catch (NullPointerException ex) {_			if (!isSupportDtd()) {_				throw new UnmarshallingFailureException("NPE while unmarshalling. " +_						"This can happen on JDK 1.6 due to the presence of DTD " +_						"declarations, which are disabled.", ex)__			}_			throw ex__		}_	};template,method,for,handling,code,domsource,s,p,this,implementation,delegates,to,code,unmarshal,dom,node,if,the,given,source,is,empty,an,empty,source,code,document,will,be,created,as,a,placeholder,param,dom,source,the,code,domsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,the,code,dom,source,is,empty,see,unmarshal,dom,node,org,w3c,dom,node;protected,object,unmarshal,dom,source,domsource,dom,source,throws,xml,mapping,exception,if,dom,source,get,node,null,dom,source,set,node,build,document,try,return,unmarshal,dom,node,dom,source,get,node,catch,null,pointer,exception,ex,if,is,support,dtd,throw,new,unmarshalling,failure,exception,npe,while,unmarshalling,this,can,happen,on,jdk,1,6,due,to,the,presence,of,dtd,declarations,which,are,disabled,ex,throw,ex
AbstractMarshaller -> protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException;1468948866;Template method for handling {@code DOMSource}s._<p>This implementation delegates to {@code unmarshalDomNode}._If the given source is empty, an empty source {@code Document}_will be created as a placeholder._@param domSource the {@code DOMSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if the {@code domSource} is empty_@see #unmarshalDomNode(org.w3c.dom.Node);protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException {_		if (domSource.getNode() == null) {_			domSource.setNode(buildDocument())__		}_		try {_			return unmarshalDomNode(domSource.getNode())__		}_		catch (NullPointerException ex) {_			if (!isSupportDtd()) {_				throw new UnmarshallingFailureException("NPE while unmarshalling. " +_						"This can happen on JDK 1.6 due to the presence of DTD " +_						"declarations, which are disabled.", ex)__			}_			throw ex__		}_	};template,method,for,handling,code,domsource,s,p,this,implementation,delegates,to,code,unmarshal,dom,node,if,the,given,source,is,empty,an,empty,source,code,document,will,be,created,as,a,placeholder,param,dom,source,the,code,domsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,the,code,dom,source,is,empty,see,unmarshal,dom,node,org,w3c,dom,node;protected,object,unmarshal,dom,source,domsource,dom,source,throws,xml,mapping,exception,if,dom,source,get,node,null,dom,source,set,node,build,document,try,return,unmarshal,dom,node,dom,source,get,node,catch,null,pointer,exception,ex,if,is,support,dtd,throw,new,unmarshalling,failure,exception,npe,while,unmarshalling,this,can,happen,on,jdk,1,6,due,to,the,presence,of,dtd,declarations,which,are,disabled,ex,throw,ex
AbstractMarshaller -> protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException;1483750478;Template method for handling {@code DOMSource}s._<p>This implementation delegates to {@code unmarshalDomNode}._If the given source is empty, an empty source {@code Document}_will be created as a placeholder._@param domSource the {@code DOMSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if the {@code domSource} is empty_@see #unmarshalDomNode(org.w3c.dom.Node);protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException {_		if (domSource.getNode() == null) {_			domSource.setNode(buildDocument())__		}_		try {_			return unmarshalDomNode(domSource.getNode())__		}_		catch (NullPointerException ex) {_			if (!isSupportDtd()) {_				throw new UnmarshallingFailureException("NPE while unmarshalling. " +_						"This can happen on JDK 1.6 due to the presence of DTD " +_						"declarations, which are disabled.", ex)__			}_			throw ex__		}_	};template,method,for,handling,code,domsource,s,p,this,implementation,delegates,to,code,unmarshal,dom,node,if,the,given,source,is,empty,an,empty,source,code,document,will,be,created,as,a,placeholder,param,dom,source,the,code,domsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,the,code,dom,source,is,empty,see,unmarshal,dom,node,org,w3c,dom,node;protected,object,unmarshal,dom,source,domsource,dom,source,throws,xml,mapping,exception,if,dom,source,get,node,null,dom,source,set,node,build,document,try,return,unmarshal,dom,node,dom,source,get,node,catch,null,pointer,exception,ex,if,is,support,dtd,throw,new,unmarshalling,failure,exception,npe,while,unmarshalling,this,can,happen,on,jdk,1,6,due,to,the,presence,of,dtd,declarations,which,are,disabled,ex,throw,ex
AbstractMarshaller -> protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException;1484301200;Template method for handling {@code DOMSource}s._<p>This implementation delegates to {@code unmarshalDomNode}._If the given source is empty, an empty source {@code Document}_will be created as a placeholder._@param domSource the {@code DOMSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if the {@code domSource} is empty_@see #unmarshalDomNode(org.w3c.dom.Node);protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException {_		if (domSource.getNode() == null) {_			domSource.setNode(buildDocument())__		}_		try {_			return unmarshalDomNode(domSource.getNode())__		}_		catch (NullPointerException ex) {_			if (!isSupportDtd()) {_				throw new UnmarshallingFailureException("NPE while unmarshalling. " +_						"This can happen on JDK 1.6 due to the presence of DTD " +_						"declarations, which are disabled.", ex)__			}_			throw ex__		}_	};template,method,for,handling,code,domsource,s,p,this,implementation,delegates,to,code,unmarshal,dom,node,if,the,given,source,is,empty,an,empty,source,code,document,will,be,created,as,a,placeholder,param,dom,source,the,code,domsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,the,code,dom,source,is,empty,see,unmarshal,dom,node,org,w3c,dom,node;protected,object,unmarshal,dom,source,domsource,dom,source,throws,xml,mapping,exception,if,dom,source,get,node,null,dom,source,set,node,build,document,try,return,unmarshal,dom,node,dom,source,get,node,catch,null,pointer,exception,ex,if,is,support,dtd,throw,new,unmarshalling,failure,exception,npe,while,unmarshalling,this,can,happen,on,jdk,1,6,due,to,the,presence,of,dtd,declarations,which,are,disabled,ex,throw,ex
AbstractMarshaller -> protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException;1495868221;Template method for handling {@code DOMSource}s._<p>This implementation delegates to {@code unmarshalDomNode}._If the given source is empty, an empty source {@code Document}_will be created as a placeholder._@param domSource the {@code DOMSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if the {@code domSource} is empty_@see #unmarshalDomNode(org.w3c.dom.Node);protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException {_		if (domSource.getNode() == null) {_			domSource.setNode(buildDocument())__		}_		try {_			return unmarshalDomNode(domSource.getNode())__		}_		catch (NullPointerException ex) {_			if (!isSupportDtd()) {_				throw new UnmarshallingFailureException("NPE while unmarshalling. " +_						"This can happen on JDK 1.6 due to the presence of DTD " +_						"declarations, which are disabled.", ex)__			}_			throw ex__		}_	};template,method,for,handling,code,domsource,s,p,this,implementation,delegates,to,code,unmarshal,dom,node,if,the,given,source,is,empty,an,empty,source,code,document,will,be,created,as,a,placeholder,param,dom,source,the,code,domsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,the,code,dom,source,is,empty,see,unmarshal,dom,node,org,w3c,dom,node;protected,object,unmarshal,dom,source,domsource,dom,source,throws,xml,mapping,exception,if,dom,source,get,node,null,dom,source,set,node,build,document,try,return,unmarshal,dom,node,dom,source,get,node,catch,null,pointer,exception,ex,if,is,support,dtd,throw,new,unmarshalling,failure,exception,npe,while,unmarshalling,this,can,happen,on,jdk,1,6,due,to,the,presence,of,dtd,declarations,which,are,disabled,ex,throw,ex
AbstractMarshaller -> protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException;1498780456;Template method for handling {@code DOMSource}s._<p>This implementation delegates to {@code unmarshalDomNode}._If the given source is empty, an empty source {@code Document}_will be created as a placeholder._@param domSource the {@code DOMSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if the {@code domSource} is empty_@see #unmarshalDomNode(org.w3c.dom.Node);protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException {_		if (domSource.getNode() == null) {_			domSource.setNode(buildDocument())__		}_		try {_			return unmarshalDomNode(domSource.getNode())__		}_		catch (NullPointerException ex) {_			if (!isSupportDtd()) {_				throw new UnmarshallingFailureException("NPE while unmarshalling. " +_						"This can happen on JDK 1.6 due to the presence of DTD " +_						"declarations, which are disabled.", ex)__			}_			throw ex__		}_	};template,method,for,handling,code,domsource,s,p,this,implementation,delegates,to,code,unmarshal,dom,node,if,the,given,source,is,empty,an,empty,source,code,document,will,be,created,as,a,placeholder,param,dom,source,the,code,domsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,the,code,dom,source,is,empty,see,unmarshal,dom,node,org,w3c,dom,node;protected,object,unmarshal,dom,source,domsource,dom,source,throws,xml,mapping,exception,if,dom,source,get,node,null,dom,source,set,node,build,document,try,return,unmarshal,dom,node,dom,source,get,node,catch,null,pointer,exception,ex,if,is,support,dtd,throw,new,unmarshalling,failure,exception,npe,while,unmarshalling,this,can,happen,on,jdk,1,6,due,to,the,presence,of,dtd,declarations,which,are,disabled,ex,throw,ex
AbstractMarshaller -> protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException;1518770299;Template method for handling {@code DOMSource}s._<p>This implementation delegates to {@code unmarshalDomNode}._If the given source is empty, an empty source {@code Document}_will be created as a placeholder._@param domSource the {@code DOMSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if the {@code domSource} is empty_@see #unmarshalDomNode(org.w3c.dom.Node);protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException {_		if (domSource.getNode() == null) {_			domSource.setNode(buildDocument())__		}_		try {_			return unmarshalDomNode(domSource.getNode())__		}_		catch (NullPointerException ex) {_			if (!isSupportDtd()) {_				throw new UnmarshallingFailureException("NPE while unmarshalling. " +_						"This can happen on JDK 1.6 due to the presence of DTD " +_						"declarations, which are disabled.", ex)__			}_			throw ex__		}_	};template,method,for,handling,code,domsource,s,p,this,implementation,delegates,to,code,unmarshal,dom,node,if,the,given,source,is,empty,an,empty,source,code,document,will,be,created,as,a,placeholder,param,dom,source,the,code,domsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,the,code,dom,source,is,empty,see,unmarshal,dom,node,org,w3c,dom,node;protected,object,unmarshal,dom,source,domsource,dom,source,throws,xml,mapping,exception,if,dom,source,get,node,null,dom,source,set,node,build,document,try,return,unmarshal,dom,node,dom,source,get,node,catch,null,pointer,exception,ex,if,is,support,dtd,throw,new,unmarshalling,failure,exception,npe,while,unmarshalling,this,can,happen,on,jdk,1,6,due,to,the,presence,of,dtd,declarations,which,are,disabled,ex,throw,ex
AbstractMarshaller -> protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException;1518770299;Template method for handling {@code DOMSource}s._<p>This implementation delegates to {@code unmarshalDomNode}._If the given source is empty, an empty source {@code Document}_will be created as a placeholder._@param domSource the {@code DOMSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if the {@code domSource} is empty_@see #unmarshalDomNode(org.w3c.dom.Node);protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException {_		if (domSource.getNode() == null) {_			domSource.setNode(buildDocument())__		}_		try {_			return unmarshalDomNode(domSource.getNode())__		}_		catch (NullPointerException ex) {_			if (!isSupportDtd()) {_				throw new UnmarshallingFailureException("NPE while unmarshalling. " +_						"This can happen on JDK 1.6 due to the presence of DTD " +_						"declarations, which are disabled.", ex)__			}_			throw ex__		}_	};template,method,for,handling,code,domsource,s,p,this,implementation,delegates,to,code,unmarshal,dom,node,if,the,given,source,is,empty,an,empty,source,code,document,will,be,created,as,a,placeholder,param,dom,source,the,code,domsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,the,code,dom,source,is,empty,see,unmarshal,dom,node,org,w3c,dom,node;protected,object,unmarshal,dom,source,domsource,dom,source,throws,xml,mapping,exception,if,dom,source,get,node,null,dom,source,set,node,build,document,try,return,unmarshal,dom,node,dom,source,get,node,catch,null,pointer,exception,ex,if,is,support,dtd,throw,new,unmarshalling,failure,exception,npe,while,unmarshalling,this,can,happen,on,jdk,1,6,due,to,the,presence,of,dtd,declarations,which,are,disabled,ex,throw,ex
AbstractMarshaller -> protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException;1530174524;Template method for handling {@code DOMSource}s._<p>This implementation delegates to {@code unmarshalDomNode}._If the given source is empty, an empty source {@code Document}_will be created as a placeholder._@param domSource the {@code DOMSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if the {@code domSource} is empty_@see #unmarshalDomNode(org.w3c.dom.Node);protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException {_		if (domSource.getNode() == null) {_			domSource.setNode(buildDocument())__		}_		try {_			return unmarshalDomNode(domSource.getNode())__		}_		catch (NullPointerException ex) {_			if (!isSupportDtd()) {_				throw new UnmarshallingFailureException("NPE while unmarshalling. " +_						"This can happen on JDK 1.6 due to the presence of DTD " +_						"declarations, which are disabled.", ex)__			}_			throw ex__		}_	};template,method,for,handling,code,domsource,s,p,this,implementation,delegates,to,code,unmarshal,dom,node,if,the,given,source,is,empty,an,empty,source,code,document,will,be,created,as,a,placeholder,param,dom,source,the,code,domsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,the,code,dom,source,is,empty,see,unmarshal,dom,node,org,w3c,dom,node;protected,object,unmarshal,dom,source,domsource,dom,source,throws,xml,mapping,exception,if,dom,source,get,node,null,dom,source,set,node,build,document,try,return,unmarshal,dom,node,dom,source,get,node,catch,null,pointer,exception,ex,if,is,support,dtd,throw,new,unmarshalling,failure,exception,npe,while,unmarshalling,this,can,happen,on,jdk,1,6,due,to,the,presence,of,dtd,declarations,which,are,disabled,ex,throw,ex
AbstractMarshaller -> protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException;1530174524;Template method for handling {@code DOMSource}s._<p>This implementation delegates to {@code unmarshalDomNode}._If the given source is empty, an empty source {@code Document}_will be created as a placeholder._@param domSource the {@code DOMSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object_@throws IllegalArgumentException if the {@code domSource} is empty_@see #unmarshalDomNode(org.w3c.dom.Node);protected Object unmarshalDomSource(DOMSource domSource) throws XmlMappingException {_		if (domSource.getNode() == null) {_			domSource.setNode(buildDocument())__		}_		try {_			return unmarshalDomNode(domSource.getNode())__		}_		catch (NullPointerException ex) {_			if (!isSupportDtd()) {_				throw new UnmarshallingFailureException("NPE while unmarshalling. " +_						"This can happen on JDK 1.6 due to the presence of DTD " +_						"declarations, which are disabled.", ex)__			}_			throw ex__		}_	};template,method,for,handling,code,domsource,s,p,this,implementation,delegates,to,code,unmarshal,dom,node,if,the,given,source,is,empty,an,empty,source,code,document,will,be,created,as,a,placeholder,param,dom,source,the,code,domsource,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,throws,illegal,argument,exception,if,the,code,dom,source,is,empty,see,unmarshal,dom,node,org,w3c,dom,node;protected,object,unmarshal,dom,source,domsource,dom,source,throws,xml,mapping,exception,if,dom,source,get,node,null,dom,source,set,node,build,document,try,return,unmarshal,dom,node,dom,source,get,node,catch,null,pointer,exception,ex,if,is,support,dtd,throw,new,unmarshalling,failure,exception,npe,while,unmarshalling,this,can,happen,on,jdk,1,6,due,to,the,presence,of,dtd,declarations,which,are,disabled,ex,throw,ex
AbstractMarshaller -> @SuppressWarnings("deprecation")   	protected XMLReader createXmlReader() throws SAXException;1484301200;Create an {@code XMLReader} that this marshaller will when passed an empty {@code SAXSource}._@return the XMLReader_@throws SAXException if thrown by JAXP methods;@SuppressWarnings("deprecation")  _	protected XMLReader createXmlReader() throws SAXException {_		XMLReader xmlReader = org.xml.sax.helpers.XMLReaderFactory.createXMLReader()__		xmlReader.setFeature("http://apache.org/xml/features/disallow-doctype-decl", !isSupportDtd())__		xmlReader.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		if (!isProcessExternalEntities()) {_			xmlReader.setEntityResolver(NO_OP_ENTITY_RESOLVER)__		}_		return xmlReader__	};create,an,code,xmlreader,that,this,marshaller,will,when,passed,an,empty,code,saxsource,return,the,xmlreader,throws,saxexception,if,thrown,by,jaxp,methods;suppress,warnings,deprecation,protected,xmlreader,create,xml,reader,throws,saxexception,xmlreader,xml,reader,org,xml,sax,helpers,xmlreader,factory,create,xmlreader,xml,reader,set,feature,http,apache,org,xml,features,disallow,doctype,decl,is,support,dtd,xml,reader,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,if,is,process,external,entities,xml,reader,set,entity,resolver,return,xml,reader
AbstractMarshaller -> @SuppressWarnings("deprecation")   	protected XMLReader createXmlReader() throws SAXException;1495868221;Create an {@code XMLReader} that this marshaller will when passed an empty {@code SAXSource}._@return the XMLReader_@throws SAXException if thrown by JAXP methods;@SuppressWarnings("deprecation")  _	protected XMLReader createXmlReader() throws SAXException {_		XMLReader xmlReader = org.xml.sax.helpers.XMLReaderFactory.createXMLReader()__		xmlReader.setFeature("http://apache.org/xml/features/disallow-doctype-decl", !isSupportDtd())__		xmlReader.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		if (!isProcessExternalEntities()) {_			xmlReader.setEntityResolver(NO_OP_ENTITY_RESOLVER)__		}_		return xmlReader__	};create,an,code,xmlreader,that,this,marshaller,will,when,passed,an,empty,code,saxsource,return,the,xmlreader,throws,saxexception,if,thrown,by,jaxp,methods;suppress,warnings,deprecation,protected,xmlreader,create,xml,reader,throws,saxexception,xmlreader,xml,reader,org,xml,sax,helpers,xmlreader,factory,create,xmlreader,xml,reader,set,feature,http,apache,org,xml,features,disallow,doctype,decl,is,support,dtd,xml,reader,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,if,is,process,external,entities,xml,reader,set,entity,resolver,return,xml,reader
AbstractMarshaller -> @SuppressWarnings("deprecation")   	protected XMLReader createXmlReader() throws SAXException;1498780456;Create an {@code XMLReader} that this marshaller will when passed an empty {@code SAXSource}._@return the XMLReader_@throws SAXException if thrown by JAXP methods;@SuppressWarnings("deprecation")  _	protected XMLReader createXmlReader() throws SAXException {_		XMLReader xmlReader = org.xml.sax.helpers.XMLReaderFactory.createXMLReader()__		xmlReader.setFeature("http://apache.org/xml/features/disallow-doctype-decl", !isSupportDtd())__		xmlReader.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		if (!isProcessExternalEntities()) {_			xmlReader.setEntityResolver(NO_OP_ENTITY_RESOLVER)__		}_		return xmlReader__	};create,an,code,xmlreader,that,this,marshaller,will,when,passed,an,empty,code,saxsource,return,the,xmlreader,throws,saxexception,if,thrown,by,jaxp,methods;suppress,warnings,deprecation,protected,xmlreader,create,xml,reader,throws,saxexception,xmlreader,xml,reader,org,xml,sax,helpers,xmlreader,factory,create,xmlreader,xml,reader,set,feature,http,apache,org,xml,features,disallow,doctype,decl,is,support,dtd,xml,reader,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,if,is,process,external,entities,xml,reader,set,entity,resolver,return,xml,reader
AbstractMarshaller -> @SuppressWarnings("deprecation")   	protected XMLReader createXmlReader() throws SAXException;1518770299;Create an {@code XMLReader} that this marshaller will when passed an empty {@code SAXSource}._@return the XMLReader_@throws SAXException if thrown by JAXP methods;@SuppressWarnings("deprecation")  _	protected XMLReader createXmlReader() throws SAXException {_		XMLReader xmlReader = org.xml.sax.helpers.XMLReaderFactory.createXMLReader()__		xmlReader.setFeature("http://apache.org/xml/features/disallow-doctype-decl", !isSupportDtd())__		xmlReader.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		if (!isProcessExternalEntities()) {_			xmlReader.setEntityResolver(NO_OP_ENTITY_RESOLVER)__		}_		return xmlReader__	};create,an,code,xmlreader,that,this,marshaller,will,when,passed,an,empty,code,saxsource,return,the,xmlreader,throws,saxexception,if,thrown,by,jaxp,methods;suppress,warnings,deprecation,protected,xmlreader,create,xml,reader,throws,saxexception,xmlreader,xml,reader,org,xml,sax,helpers,xmlreader,factory,create,xmlreader,xml,reader,set,feature,http,apache,org,xml,features,disallow,doctype,decl,is,support,dtd,xml,reader,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,if,is,process,external,entities,xml,reader,set,entity,resolver,return,xml,reader
AbstractMarshaller -> @SuppressWarnings("deprecation")   	protected XMLReader createXmlReader() throws SAXException;1518770299;Create an {@code XMLReader} that this marshaller will when passed an empty {@code SAXSource}._@return the XMLReader_@throws SAXException if thrown by JAXP methods;@SuppressWarnings("deprecation")  _	protected XMLReader createXmlReader() throws SAXException {_		XMLReader xmlReader = org.xml.sax.helpers.XMLReaderFactory.createXMLReader()__		xmlReader.setFeature("http://apache.org/xml/features/disallow-doctype-decl", !isSupportDtd())__		xmlReader.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		if (!isProcessExternalEntities()) {_			xmlReader.setEntityResolver(NO_OP_ENTITY_RESOLVER)__		}_		return xmlReader__	};create,an,code,xmlreader,that,this,marshaller,will,when,passed,an,empty,code,saxsource,return,the,xmlreader,throws,saxexception,if,thrown,by,jaxp,methods;suppress,warnings,deprecation,protected,xmlreader,create,xml,reader,throws,saxexception,xmlreader,xml,reader,org,xml,sax,helpers,xmlreader,factory,create,xmlreader,xml,reader,set,feature,http,apache,org,xml,features,disallow,doctype,decl,is,support,dtd,xml,reader,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,if,is,process,external,entities,xml,reader,set,entity,resolver,return,xml,reader
AbstractMarshaller -> @SuppressWarnings("deprecation")   	protected XMLReader createXmlReader() throws SAXException;1530174524;Create an {@code XMLReader} that this marshaller will when passed an empty {@code SAXSource}._@return the XMLReader_@throws SAXException if thrown by JAXP methods;@SuppressWarnings("deprecation")  _	protected XMLReader createXmlReader() throws SAXException {_		XMLReader xmlReader = org.xml.sax.helpers.XMLReaderFactory.createXMLReader()__		xmlReader.setFeature("http://apache.org/xml/features/disallow-doctype-decl", !isSupportDtd())__		xmlReader.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		if (!isProcessExternalEntities()) {_			xmlReader.setEntityResolver(NO_OP_ENTITY_RESOLVER)__		}_		return xmlReader__	};create,an,code,xmlreader,that,this,marshaller,will,when,passed,an,empty,code,saxsource,return,the,xmlreader,throws,saxexception,if,thrown,by,jaxp,methods;suppress,warnings,deprecation,protected,xmlreader,create,xml,reader,throws,saxexception,xmlreader,xml,reader,org,xml,sax,helpers,xmlreader,factory,create,xmlreader,xml,reader,set,feature,http,apache,org,xml,features,disallow,doctype,decl,is,support,dtd,xml,reader,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,if,is,process,external,entities,xml,reader,set,entity,resolver,return,xml,reader
AbstractMarshaller -> @SuppressWarnings("deprecation")   	protected XMLReader createXmlReader() throws SAXException;1530174524;Create an {@code XMLReader} that this marshaller will when passed an empty {@code SAXSource}._@return the XMLReader_@throws SAXException if thrown by JAXP methods;@SuppressWarnings("deprecation")  _	protected XMLReader createXmlReader() throws SAXException {_		XMLReader xmlReader = org.xml.sax.helpers.XMLReaderFactory.createXMLReader()__		xmlReader.setFeature("http://apache.org/xml/features/disallow-doctype-decl", !isSupportDtd())__		xmlReader.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		if (!isProcessExternalEntities()) {_			xmlReader.setEntityResolver(NO_OP_ENTITY_RESOLVER)__		}_		return xmlReader__	};create,an,code,xmlreader,that,this,marshaller,will,when,passed,an,empty,code,saxsource,return,the,xmlreader,throws,saxexception,if,thrown,by,jaxp,methods;suppress,warnings,deprecation,protected,xmlreader,create,xml,reader,throws,saxexception,xmlreader,xml,reader,org,xml,sax,helpers,xmlreader,factory,create,xmlreader,xml,reader,set,feature,http,apache,org,xml,features,disallow,doctype,decl,is,support,dtd,xml,reader,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,if,is,process,external,entities,xml,reader,set,entity,resolver,return,xml,reader
AbstractMarshaller -> protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException;1328020251;Template method for handling <code>SAXResult</code>s._<p>This implementation delegates to <code>marshalSaxHandlers</code>._@param graph	the root of the object graph to marshal_@param saxResult the <code>SAXResult</code>_@throws XmlMappingException if the given object cannot be marshalled to the result_@see #marshalSaxHandlers(Object, org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler);protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException {_		ContentHandler contentHandler = saxResult.getHandler()__		Assert.notNull(contentHandler, "ContentHandler not set on SAXResult")__		LexicalHandler lexicalHandler = saxResult.getLexicalHandler()__		marshalSaxHandlers(graph, contentHandler, lexicalHandler)__	};template,method,for,handling,code,saxresult,code,s,p,this,implementation,delegates,to,code,marshal,sax,handlers,code,param,graph,the,root,of,the,object,graph,to,marshal,param,sax,result,the,code,saxresult,code,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,see,marshal,sax,handlers,object,org,xml,sax,content,handler,org,xml,sax,ext,lexical,handler;protected,void,marshal,sax,result,object,graph,saxresult,sax,result,throws,xml,mapping,exception,content,handler,content,handler,sax,result,get,handler,assert,not,null,content,handler,content,handler,not,set,on,saxresult,lexical,handler,lexical,handler,sax,result,get,lexical,handler,marshal,sax,handlers,graph,content,handler,lexical,handler
AbstractMarshaller -> protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException;1356735495;Template method for handling {@code SAXResult}s._<p>This implementation delegates to {@code marshalSaxHandlers}._@param graph    the root of the object graph to marshal_@param saxResult the {@code SAXResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@see #marshalSaxHandlers(Object, org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler);protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException {_		ContentHandler contentHandler = saxResult.getHandler()__		Assert.notNull(contentHandler, "ContentHandler not set on SAXResult")__		LexicalHandler lexicalHandler = saxResult.getLexicalHandler()__		marshalSaxHandlers(graph, contentHandler, lexicalHandler)__	};template,method,for,handling,code,saxresult,s,p,this,implementation,delegates,to,code,marshal,sax,handlers,param,graph,the,root,of,the,object,graph,to,marshal,param,sax,result,the,code,saxresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,see,marshal,sax,handlers,object,org,xml,sax,content,handler,org,xml,sax,ext,lexical,handler;protected,void,marshal,sax,result,object,graph,saxresult,sax,result,throws,xml,mapping,exception,content,handler,content,handler,sax,result,get,handler,assert,not,null,content,handler,content,handler,not,set,on,saxresult,lexical,handler,lexical,handler,sax,result,get,lexical,handler,marshal,sax,handlers,graph,content,handler,lexical,handler
AbstractMarshaller -> protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException;1357119239;Template method for handling {@code SAXResult}s._<p>This implementation delegates to {@code marshalSaxHandlers}._@param graph    the root of the object graph to marshal_@param saxResult the {@code SAXResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@see #marshalSaxHandlers(Object, org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler);protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException {_		ContentHandler contentHandler = saxResult.getHandler()__		Assert.notNull(contentHandler, "ContentHandler not set on SAXResult")__		LexicalHandler lexicalHandler = saxResult.getLexicalHandler()__		marshalSaxHandlers(graph, contentHandler, lexicalHandler)__	};template,method,for,handling,code,saxresult,s,p,this,implementation,delegates,to,code,marshal,sax,handlers,param,graph,the,root,of,the,object,graph,to,marshal,param,sax,result,the,code,saxresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,see,marshal,sax,handlers,object,org,xml,sax,content,handler,org,xml,sax,ext,lexical,handler;protected,void,marshal,sax,result,object,graph,saxresult,sax,result,throws,xml,mapping,exception,content,handler,content,handler,sax,result,get,handler,assert,not,null,content,handler,content,handler,not,set,on,saxresult,lexical,handler,lexical,handler,sax,result,get,lexical,handler,marshal,sax,handlers,graph,content,handler,lexical,handler
AbstractMarshaller -> protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException;1368482696;Template method for handling {@code SAXResult}s._<p>This implementation delegates to {@code marshalSaxHandlers}._@param graph    the root of the object graph to marshal_@param saxResult the {@code SAXResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@see #marshalSaxHandlers(Object, org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler);protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException {_		ContentHandler contentHandler = saxResult.getHandler()__		Assert.notNull(contentHandler, "ContentHandler not set on SAXResult")__		LexicalHandler lexicalHandler = saxResult.getLexicalHandler()__		marshalSaxHandlers(graph, contentHandler, lexicalHandler)__	};template,method,for,handling,code,saxresult,s,p,this,implementation,delegates,to,code,marshal,sax,handlers,param,graph,the,root,of,the,object,graph,to,marshal,param,sax,result,the,code,saxresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,see,marshal,sax,handlers,object,org,xml,sax,content,handler,org,xml,sax,ext,lexical,handler;protected,void,marshal,sax,result,object,graph,saxresult,sax,result,throws,xml,mapping,exception,content,handler,content,handler,sax,result,get,handler,assert,not,null,content,handler,content,handler,not,set,on,saxresult,lexical,handler,lexical,handler,sax,result,get,lexical,handler,marshal,sax,handlers,graph,content,handler,lexical,handler
AbstractMarshaller -> protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException;1376041400;Template method for handling {@code SAXResult}s._<p>This implementation delegates to {@code marshalSaxHandlers}._@param graph the root of the object graph to marshal_@param saxResult the {@code SAXResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@see #marshalSaxHandlers(Object, org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler);protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException {_		ContentHandler contentHandler = saxResult.getHandler()__		Assert.notNull(contentHandler, "ContentHandler not set on SAXResult")__		LexicalHandler lexicalHandler = saxResult.getLexicalHandler()__		marshalSaxHandlers(graph, contentHandler, lexicalHandler)__	};template,method,for,handling,code,saxresult,s,p,this,implementation,delegates,to,code,marshal,sax,handlers,param,graph,the,root,of,the,object,graph,to,marshal,param,sax,result,the,code,saxresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,see,marshal,sax,handlers,object,org,xml,sax,content,handler,org,xml,sax,ext,lexical,handler;protected,void,marshal,sax,result,object,graph,saxresult,sax,result,throws,xml,mapping,exception,content,handler,content,handler,sax,result,get,handler,assert,not,null,content,handler,content,handler,not,set,on,saxresult,lexical,handler,lexical,handler,sax,result,get,lexical,handler,marshal,sax,handlers,graph,content,handler,lexical,handler
AbstractMarshaller -> protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException;1392767670;Template method for handling {@code SAXResult}s._<p>This implementation delegates to {@code marshalSaxHandlers}._@param graph the root of the object graph to marshal_@param saxResult the {@code SAXResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@see #marshalSaxHandlers(Object, org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler);protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException {_		ContentHandler contentHandler = saxResult.getHandler()__		Assert.notNull(contentHandler, "ContentHandler not set on SAXResult")__		LexicalHandler lexicalHandler = saxResult.getLexicalHandler()__		marshalSaxHandlers(graph, contentHandler, lexicalHandler)__	};template,method,for,handling,code,saxresult,s,p,this,implementation,delegates,to,code,marshal,sax,handlers,param,graph,the,root,of,the,object,graph,to,marshal,param,sax,result,the,code,saxresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,see,marshal,sax,handlers,object,org,xml,sax,content,handler,org,xml,sax,ext,lexical,handler;protected,void,marshal,sax,result,object,graph,saxresult,sax,result,throws,xml,mapping,exception,content,handler,content,handler,sax,result,get,handler,assert,not,null,content,handler,content,handler,not,set,on,saxresult,lexical,handler,lexical,handler,sax,result,get,lexical,handler,marshal,sax,handlers,graph,content,handler,lexical,handler
AbstractMarshaller -> protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException;1397058176;Template method for handling {@code SAXResult}s._<p>This implementation delegates to {@code marshalSaxHandlers}._@param graph the root of the object graph to marshal_@param saxResult the {@code SAXResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@see #marshalSaxHandlers(Object, org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler);protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException {_		ContentHandler contentHandler = saxResult.getHandler()__		Assert.notNull(contentHandler, "ContentHandler not set on SAXResult")__		LexicalHandler lexicalHandler = saxResult.getLexicalHandler()__		marshalSaxHandlers(graph, contentHandler, lexicalHandler)__	};template,method,for,handling,code,saxresult,s,p,this,implementation,delegates,to,code,marshal,sax,handlers,param,graph,the,root,of,the,object,graph,to,marshal,param,sax,result,the,code,saxresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,see,marshal,sax,handlers,object,org,xml,sax,content,handler,org,xml,sax,ext,lexical,handler;protected,void,marshal,sax,result,object,graph,saxresult,sax,result,throws,xml,mapping,exception,content,handler,content,handler,sax,result,get,handler,assert,not,null,content,handler,content,handler,not,set,on,saxresult,lexical,handler,lexical,handler,sax,result,get,lexical,handler,marshal,sax,handlers,graph,content,handler,lexical,handler
AbstractMarshaller -> protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException;1397069887;Template method for handling {@code SAXResult}s._<p>This implementation delegates to {@code marshalSaxHandlers}._@param graph the root of the object graph to marshal_@param saxResult the {@code SAXResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@see #marshalSaxHandlers(Object, org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler);protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException {_		ContentHandler contentHandler = saxResult.getHandler()__		Assert.notNull(contentHandler, "ContentHandler not set on SAXResult")__		LexicalHandler lexicalHandler = saxResult.getLexicalHandler()__		marshalSaxHandlers(graph, contentHandler, lexicalHandler)__	};template,method,for,handling,code,saxresult,s,p,this,implementation,delegates,to,code,marshal,sax,handlers,param,graph,the,root,of,the,object,graph,to,marshal,param,sax,result,the,code,saxresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,see,marshal,sax,handlers,object,org,xml,sax,content,handler,org,xml,sax,ext,lexical,handler;protected,void,marshal,sax,result,object,graph,saxresult,sax,result,throws,xml,mapping,exception,content,handler,content,handler,sax,result,get,handler,assert,not,null,content,handler,content,handler,not,set,on,saxresult,lexical,handler,lexical,handler,sax,result,get,lexical,handler,marshal,sax,handlers,graph,content,handler,lexical,handler
AbstractMarshaller -> protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException;1398638859;Template method for handling {@code SAXResult}s._<p>This implementation delegates to {@code marshalSaxHandlers}._@param graph the root of the object graph to marshal_@param saxResult the {@code SAXResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@see #marshalSaxHandlers(Object, org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler);protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException {_		ContentHandler contentHandler = saxResult.getHandler()__		Assert.notNull(contentHandler, "ContentHandler not set on SAXResult")__		LexicalHandler lexicalHandler = saxResult.getLexicalHandler()__		marshalSaxHandlers(graph, contentHandler, lexicalHandler)__	};template,method,for,handling,code,saxresult,s,p,this,implementation,delegates,to,code,marshal,sax,handlers,param,graph,the,root,of,the,object,graph,to,marshal,param,sax,result,the,code,saxresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,see,marshal,sax,handlers,object,org,xml,sax,content,handler,org,xml,sax,ext,lexical,handler;protected,void,marshal,sax,result,object,graph,saxresult,sax,result,throws,xml,mapping,exception,content,handler,content,handler,sax,result,get,handler,assert,not,null,content,handler,content,handler,not,set,on,saxresult,lexical,handler,lexical,handler,sax,result,get,lexical,handler,marshal,sax,handlers,graph,content,handler,lexical,handler
AbstractMarshaller -> protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException;1400553912;Template method for handling {@code SAXResult}s._<p>This implementation delegates to {@code marshalSaxHandlers}._@param graph the root of the object graph to marshal_@param saxResult the {@code SAXResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@see #marshalSaxHandlers(Object, org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler);protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException {_		ContentHandler contentHandler = saxResult.getHandler()__		Assert.notNull(contentHandler, "ContentHandler not set on SAXResult")__		LexicalHandler lexicalHandler = saxResult.getLexicalHandler()__		marshalSaxHandlers(graph, contentHandler, lexicalHandler)__	};template,method,for,handling,code,saxresult,s,p,this,implementation,delegates,to,code,marshal,sax,handlers,param,graph,the,root,of,the,object,graph,to,marshal,param,sax,result,the,code,saxresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,see,marshal,sax,handlers,object,org,xml,sax,content,handler,org,xml,sax,ext,lexical,handler;protected,void,marshal,sax,result,object,graph,saxresult,sax,result,throws,xml,mapping,exception,content,handler,content,handler,sax,result,get,handler,assert,not,null,content,handler,content,handler,not,set,on,saxresult,lexical,handler,lexical,handler,sax,result,get,lexical,handler,marshal,sax,handlers,graph,content,handler,lexical,handler
AbstractMarshaller -> protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException;1435665021;Template method for handling {@code SAXResult}s._<p>This implementation delegates to {@code marshalSaxHandlers}._@param graph the root of the object graph to marshal_@param saxResult the {@code SAXResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@see #marshalSaxHandlers(Object, org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler);protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException {_		ContentHandler contentHandler = saxResult.getHandler()__		Assert.notNull(contentHandler, "ContentHandler not set on SAXResult")__		LexicalHandler lexicalHandler = saxResult.getLexicalHandler()__		marshalSaxHandlers(graph, contentHandler, lexicalHandler)__	};template,method,for,handling,code,saxresult,s,p,this,implementation,delegates,to,code,marshal,sax,handlers,param,graph,the,root,of,the,object,graph,to,marshal,param,sax,result,the,code,saxresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,see,marshal,sax,handlers,object,org,xml,sax,content,handler,org,xml,sax,ext,lexical,handler;protected,void,marshal,sax,result,object,graph,saxresult,sax,result,throws,xml,mapping,exception,content,handler,content,handler,sax,result,get,handler,assert,not,null,content,handler,content,handler,not,set,on,saxresult,lexical,handler,lexical,handler,sax,result,get,lexical,handler,marshal,sax,handlers,graph,content,handler,lexical,handler
AbstractMarshaller -> protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException;1455117733;Template method for handling {@code SAXResult}s._<p>This implementation delegates to {@code marshalSaxHandlers}._@param graph the root of the object graph to marshal_@param saxResult the {@code SAXResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@see #marshalSaxHandlers(Object, org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler);protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException {_		ContentHandler contentHandler = saxResult.getHandler()__		Assert.notNull(contentHandler, "ContentHandler not set on SAXResult")__		LexicalHandler lexicalHandler = saxResult.getLexicalHandler()__		marshalSaxHandlers(graph, contentHandler, lexicalHandler)__	};template,method,for,handling,code,saxresult,s,p,this,implementation,delegates,to,code,marshal,sax,handlers,param,graph,the,root,of,the,object,graph,to,marshal,param,sax,result,the,code,saxresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,see,marshal,sax,handlers,object,org,xml,sax,content,handler,org,xml,sax,ext,lexical,handler;protected,void,marshal,sax,result,object,graph,saxresult,sax,result,throws,xml,mapping,exception,content,handler,content,handler,sax,result,get,handler,assert,not,null,content,handler,content,handler,not,set,on,saxresult,lexical,handler,lexical,handler,sax,result,get,lexical,handler,marshal,sax,handlers,graph,content,handler,lexical,handler
AbstractMarshaller -> protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException;1468948866;Template method for handling {@code SAXResult}s._<p>This implementation delegates to {@code marshalSaxHandlers}._@param graph the root of the object graph to marshal_@param saxResult the {@code SAXResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@see #marshalSaxHandlers(Object, org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler);protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException {_		ContentHandler contentHandler = saxResult.getHandler()__		Assert.notNull(contentHandler, "ContentHandler not set on SAXResult")__		LexicalHandler lexicalHandler = saxResult.getLexicalHandler()__		marshalSaxHandlers(graph, contentHandler, lexicalHandler)__	};template,method,for,handling,code,saxresult,s,p,this,implementation,delegates,to,code,marshal,sax,handlers,param,graph,the,root,of,the,object,graph,to,marshal,param,sax,result,the,code,saxresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,see,marshal,sax,handlers,object,org,xml,sax,content,handler,org,xml,sax,ext,lexical,handler;protected,void,marshal,sax,result,object,graph,saxresult,sax,result,throws,xml,mapping,exception,content,handler,content,handler,sax,result,get,handler,assert,not,null,content,handler,content,handler,not,set,on,saxresult,lexical,handler,lexical,handler,sax,result,get,lexical,handler,marshal,sax,handlers,graph,content,handler,lexical,handler
AbstractMarshaller -> protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException;1483750478;Template method for handling {@code SAXResult}s._<p>This implementation delegates to {@code marshalSaxHandlers}._@param graph the root of the object graph to marshal_@param saxResult the {@code SAXResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@see #marshalSaxHandlers(Object, org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler);protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException {_		ContentHandler contentHandler = saxResult.getHandler()__		Assert.notNull(contentHandler, "ContentHandler not set on SAXResult")__		LexicalHandler lexicalHandler = saxResult.getLexicalHandler()__		marshalSaxHandlers(graph, contentHandler, lexicalHandler)__	};template,method,for,handling,code,saxresult,s,p,this,implementation,delegates,to,code,marshal,sax,handlers,param,graph,the,root,of,the,object,graph,to,marshal,param,sax,result,the,code,saxresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,see,marshal,sax,handlers,object,org,xml,sax,content,handler,org,xml,sax,ext,lexical,handler;protected,void,marshal,sax,result,object,graph,saxresult,sax,result,throws,xml,mapping,exception,content,handler,content,handler,sax,result,get,handler,assert,not,null,content,handler,content,handler,not,set,on,saxresult,lexical,handler,lexical,handler,sax,result,get,lexical,handler,marshal,sax,handlers,graph,content,handler,lexical,handler
AbstractMarshaller -> protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException;1484301200;Template method for handling {@code SAXResult}s._<p>This implementation delegates to {@code marshalSaxHandlers}._@param graph the root of the object graph to marshal_@param saxResult the {@code SAXResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@see #marshalSaxHandlers(Object, org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler);protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException {_		ContentHandler contentHandler = saxResult.getHandler()__		Assert.notNull(contentHandler, "ContentHandler not set on SAXResult")__		LexicalHandler lexicalHandler = saxResult.getLexicalHandler()__		marshalSaxHandlers(graph, contentHandler, lexicalHandler)__	};template,method,for,handling,code,saxresult,s,p,this,implementation,delegates,to,code,marshal,sax,handlers,param,graph,the,root,of,the,object,graph,to,marshal,param,sax,result,the,code,saxresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,see,marshal,sax,handlers,object,org,xml,sax,content,handler,org,xml,sax,ext,lexical,handler;protected,void,marshal,sax,result,object,graph,saxresult,sax,result,throws,xml,mapping,exception,content,handler,content,handler,sax,result,get,handler,assert,not,null,content,handler,content,handler,not,set,on,saxresult,lexical,handler,lexical,handler,sax,result,get,lexical,handler,marshal,sax,handlers,graph,content,handler,lexical,handler
AbstractMarshaller -> protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException;1495868221;Template method for handling {@code SAXResult}s._<p>This implementation delegates to {@code marshalSaxHandlers}._@param graph the root of the object graph to marshal_@param saxResult the {@code SAXResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@see #marshalSaxHandlers(Object, org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler);protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException {_		ContentHandler contentHandler = saxResult.getHandler()__		Assert.notNull(contentHandler, "ContentHandler not set on SAXResult")__		LexicalHandler lexicalHandler = saxResult.getLexicalHandler()__		marshalSaxHandlers(graph, contentHandler, lexicalHandler)__	};template,method,for,handling,code,saxresult,s,p,this,implementation,delegates,to,code,marshal,sax,handlers,param,graph,the,root,of,the,object,graph,to,marshal,param,sax,result,the,code,saxresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,see,marshal,sax,handlers,object,org,xml,sax,content,handler,org,xml,sax,ext,lexical,handler;protected,void,marshal,sax,result,object,graph,saxresult,sax,result,throws,xml,mapping,exception,content,handler,content,handler,sax,result,get,handler,assert,not,null,content,handler,content,handler,not,set,on,saxresult,lexical,handler,lexical,handler,sax,result,get,lexical,handler,marshal,sax,handlers,graph,content,handler,lexical,handler
AbstractMarshaller -> protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException;1498780456;Template method for handling {@code SAXResult}s._<p>This implementation delegates to {@code marshalSaxHandlers}._@param graph the root of the object graph to marshal_@param saxResult the {@code SAXResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@see #marshalSaxHandlers(Object, org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler);protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException {_		ContentHandler contentHandler = saxResult.getHandler()__		Assert.notNull(contentHandler, "ContentHandler not set on SAXResult")__		LexicalHandler lexicalHandler = saxResult.getLexicalHandler()__		marshalSaxHandlers(graph, contentHandler, lexicalHandler)__	};template,method,for,handling,code,saxresult,s,p,this,implementation,delegates,to,code,marshal,sax,handlers,param,graph,the,root,of,the,object,graph,to,marshal,param,sax,result,the,code,saxresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,see,marshal,sax,handlers,object,org,xml,sax,content,handler,org,xml,sax,ext,lexical,handler;protected,void,marshal,sax,result,object,graph,saxresult,sax,result,throws,xml,mapping,exception,content,handler,content,handler,sax,result,get,handler,assert,not,null,content,handler,content,handler,not,set,on,saxresult,lexical,handler,lexical,handler,sax,result,get,lexical,handler,marshal,sax,handlers,graph,content,handler,lexical,handler
AbstractMarshaller -> protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException;1518770299;Template method for handling {@code SAXResult}s._<p>This implementation delegates to {@code marshalSaxHandlers}._@param graph the root of the object graph to marshal_@param saxResult the {@code SAXResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@see #marshalSaxHandlers(Object, org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler);protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException {_		ContentHandler contentHandler = saxResult.getHandler()__		Assert.notNull(contentHandler, "ContentHandler not set on SAXResult")__		LexicalHandler lexicalHandler = saxResult.getLexicalHandler()__		marshalSaxHandlers(graph, contentHandler, lexicalHandler)__	};template,method,for,handling,code,saxresult,s,p,this,implementation,delegates,to,code,marshal,sax,handlers,param,graph,the,root,of,the,object,graph,to,marshal,param,sax,result,the,code,saxresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,see,marshal,sax,handlers,object,org,xml,sax,content,handler,org,xml,sax,ext,lexical,handler;protected,void,marshal,sax,result,object,graph,saxresult,sax,result,throws,xml,mapping,exception,content,handler,content,handler,sax,result,get,handler,assert,not,null,content,handler,content,handler,not,set,on,saxresult,lexical,handler,lexical,handler,sax,result,get,lexical,handler,marshal,sax,handlers,graph,content,handler,lexical,handler
AbstractMarshaller -> protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException;1518770299;Template method for handling {@code SAXResult}s._<p>This implementation delegates to {@code marshalSaxHandlers}._@param graph the root of the object graph to marshal_@param saxResult the {@code SAXResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@see #marshalSaxHandlers(Object, org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler);protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException {_		ContentHandler contentHandler = saxResult.getHandler()__		Assert.notNull(contentHandler, "ContentHandler not set on SAXResult")__		LexicalHandler lexicalHandler = saxResult.getLexicalHandler()__		marshalSaxHandlers(graph, contentHandler, lexicalHandler)__	};template,method,for,handling,code,saxresult,s,p,this,implementation,delegates,to,code,marshal,sax,handlers,param,graph,the,root,of,the,object,graph,to,marshal,param,sax,result,the,code,saxresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,see,marshal,sax,handlers,object,org,xml,sax,content,handler,org,xml,sax,ext,lexical,handler;protected,void,marshal,sax,result,object,graph,saxresult,sax,result,throws,xml,mapping,exception,content,handler,content,handler,sax,result,get,handler,assert,not,null,content,handler,content,handler,not,set,on,saxresult,lexical,handler,lexical,handler,sax,result,get,lexical,handler,marshal,sax,handlers,graph,content,handler,lexical,handler
AbstractMarshaller -> protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException;1530174524;Template method for handling {@code SAXResult}s._<p>This implementation delegates to {@code marshalSaxHandlers}._@param graph the root of the object graph to marshal_@param saxResult the {@code SAXResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@see #marshalSaxHandlers(Object, org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler);protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException {_		ContentHandler contentHandler = saxResult.getHandler()__		Assert.notNull(contentHandler, "ContentHandler not set on SAXResult")__		LexicalHandler lexicalHandler = saxResult.getLexicalHandler()__		marshalSaxHandlers(graph, contentHandler, lexicalHandler)__	};template,method,for,handling,code,saxresult,s,p,this,implementation,delegates,to,code,marshal,sax,handlers,param,graph,the,root,of,the,object,graph,to,marshal,param,sax,result,the,code,saxresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,see,marshal,sax,handlers,object,org,xml,sax,content,handler,org,xml,sax,ext,lexical,handler;protected,void,marshal,sax,result,object,graph,saxresult,sax,result,throws,xml,mapping,exception,content,handler,content,handler,sax,result,get,handler,assert,not,null,content,handler,content,handler,not,set,on,saxresult,lexical,handler,lexical,handler,sax,result,get,lexical,handler,marshal,sax,handlers,graph,content,handler,lexical,handler
AbstractMarshaller -> protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException;1530174524;Template method for handling {@code SAXResult}s._<p>This implementation delegates to {@code marshalSaxHandlers}._@param graph the root of the object graph to marshal_@param saxResult the {@code SAXResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@see #marshalSaxHandlers(Object, org.xml.sax.ContentHandler, org.xml.sax.ext.LexicalHandler);protected void marshalSaxResult(Object graph, SAXResult saxResult) throws XmlMappingException {_		ContentHandler contentHandler = saxResult.getHandler()__		Assert.notNull(contentHandler, "ContentHandler not set on SAXResult")__		LexicalHandler lexicalHandler = saxResult.getLexicalHandler()__		marshalSaxHandlers(graph, contentHandler, lexicalHandler)__	};template,method,for,handling,code,saxresult,s,p,this,implementation,delegates,to,code,marshal,sax,handlers,param,graph,the,root,of,the,object,graph,to,marshal,param,sax,result,the,code,saxresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,see,marshal,sax,handlers,object,org,xml,sax,content,handler,org,xml,sax,ext,lexical,handler;protected,void,marshal,sax,result,object,graph,saxresult,sax,result,throws,xml,mapping,exception,content,handler,content,handler,sax,result,get,handler,assert,not,null,content,handler,content,handler,not,set,on,saxresult,lexical,handler,lexical,handler,sax,result,get,lexical,handler,marshal,sax,handlers,graph,content,handler,lexical,handler
AbstractMarshaller -> protected String getDefaultEncoding();1397058176;Determine the default encoding to use for marshalling or unmarshalling from_a byte stream, or {@code null} if none.;protected String getDefaultEncoding() {_		return null__	};determine,the,default,encoding,to,use,for,marshalling,or,unmarshalling,from,a,byte,stream,or,code,null,if,none;protected,string,get,default,encoding,return,null
AbstractMarshaller -> protected String getDefaultEncoding();1397069887;Determine the default encoding to use for marshalling or unmarshalling from_a byte stream, or {@code null} if none.;protected String getDefaultEncoding() {_		return null__	};determine,the,default,encoding,to,use,for,marshalling,or,unmarshalling,from,a,byte,stream,or,code,null,if,none;protected,string,get,default,encoding,return,null
AbstractMarshaller -> protected String getDefaultEncoding();1398638859;Determine the default encoding to use for marshalling or unmarshalling from_a byte stream, or {@code null} if none._<p>The default implementation returns {@code null}.;protected String getDefaultEncoding() {_		return null__	};determine,the,default,encoding,to,use,for,marshalling,or,unmarshalling,from,a,byte,stream,or,code,null,if,none,p,the,default,implementation,returns,code,null;protected,string,get,default,encoding,return,null
AbstractMarshaller -> protected String getDefaultEncoding();1400553912;Determine the default encoding to use for marshalling or unmarshalling from_a byte stream, or {@code null} if none._<p>The default implementation returns {@code null}.;protected String getDefaultEncoding() {_		return null__	};determine,the,default,encoding,to,use,for,marshalling,or,unmarshalling,from,a,byte,stream,or,code,null,if,none,p,the,default,implementation,returns,code,null;protected,string,get,default,encoding,return,null
AbstractMarshaller -> protected String getDefaultEncoding();1435665021;Determine the default encoding to use for marshalling or unmarshalling from_a byte stream, or {@code null} if none._<p>The default implementation returns {@code null}.;protected String getDefaultEncoding() {_		return null__	};determine,the,default,encoding,to,use,for,marshalling,or,unmarshalling,from,a,byte,stream,or,code,null,if,none,p,the,default,implementation,returns,code,null;protected,string,get,default,encoding,return,null
AbstractMarshaller -> protected String getDefaultEncoding();1455117733;Determine the default encoding to use for marshalling or unmarshalling from_a byte stream, or {@code null} if none._<p>The default implementation returns {@code null}.;protected String getDefaultEncoding() {_		return null__	};determine,the,default,encoding,to,use,for,marshalling,or,unmarshalling,from,a,byte,stream,or,code,null,if,none,p,the,default,implementation,returns,code,null;protected,string,get,default,encoding,return,null
AbstractMarshaller -> protected String getDefaultEncoding();1468948866;Determine the default encoding to use for marshalling or unmarshalling from_a byte stream, or {@code null} if none._<p>The default implementation returns {@code null}.;protected String getDefaultEncoding() {_		return null__	};determine,the,default,encoding,to,use,for,marshalling,or,unmarshalling,from,a,byte,stream,or,code,null,if,none,p,the,default,implementation,returns,code,null;protected,string,get,default,encoding,return,null
AbstractMarshaller -> protected String getDefaultEncoding();1483750478;Determine the default encoding to use for marshalling or unmarshalling from_a byte stream, or {@code null} if none._<p>The default implementation returns {@code null}.;protected String getDefaultEncoding() {_		return null__	};determine,the,default,encoding,to,use,for,marshalling,or,unmarshalling,from,a,byte,stream,or,code,null,if,none,p,the,default,implementation,returns,code,null;protected,string,get,default,encoding,return,null
AbstractMarshaller -> protected String getDefaultEncoding();1484301200;Determine the default encoding to use for marshalling or unmarshalling from_a byte stream, or {@code null} if none._<p>The default implementation returns {@code null}.;protected String getDefaultEncoding() {_		return null__	};determine,the,default,encoding,to,use,for,marshalling,or,unmarshalling,from,a,byte,stream,or,code,null,if,none,p,the,default,implementation,returns,code,null;protected,string,get,default,encoding,return,null
AbstractMarshaller -> protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory) 			throws ParserConfigurationException;1328020251;Create a <code>DocumentBuilder</code> that this marshaller will use for creating_DOM documents when passed an empty <code>DOMSource</code>._<p>Can be overridden in subclasses, adding further initialization of the builder._@param factory the <code>DocumentBuilderFactory</code> that the DocumentBuilder should be created with_@return the <code>DocumentBuilder</code>_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory)_			throws ParserConfigurationException {__		return factory.newDocumentBuilder()__	};create,a,code,document,builder,code,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,code,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,builder,param,factory,the,code,document,builder,factory,code,that,the,document,builder,should,be,created,with,return,the,code,document,builder,code,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,create,document,builder,document,builder,factory,factory,throws,parser,configuration,exception,return,factory,new,document,builder
AbstractMarshaller -> protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory) 			throws ParserConfigurationException;1356735495;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>Can be overridden in subclasses, adding further initialization of the builder._@param factory the {@code DocumentBuilderFactory} that the DocumentBuilder should be created with_@return the {@code DocumentBuilder}_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory)_			throws ParserConfigurationException {__		return factory.newDocumentBuilder()__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,builder,param,factory,the,code,document,builder,factory,that,the,document,builder,should,be,created,with,return,the,code,document,builder,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,create,document,builder,document,builder,factory,factory,throws,parser,configuration,exception,return,factory,new,document,builder
AbstractMarshaller -> protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory) 			throws ParserConfigurationException;1357119239;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>Can be overridden in subclasses, adding further initialization of the builder._@param factory the {@code DocumentBuilderFactory} that the DocumentBuilder should be created with_@return the {@code DocumentBuilder}_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory)_			throws ParserConfigurationException {__		return factory.newDocumentBuilder()__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,builder,param,factory,the,code,document,builder,factory,that,the,document,builder,should,be,created,with,return,the,code,document,builder,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,create,document,builder,document,builder,factory,factory,throws,parser,configuration,exception,return,factory,new,document,builder
AbstractMarshaller -> protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory) 			throws ParserConfigurationException;1368482696;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>Can be overridden in subclasses, adding further initialization of the builder._@param factory the {@code DocumentBuilderFactory} that the DocumentBuilder should be created with_@return the {@code DocumentBuilder}_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory)_			throws ParserConfigurationException {__		return factory.newDocumentBuilder()__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,builder,param,factory,the,code,document,builder,factory,that,the,document,builder,should,be,created,with,return,the,code,document,builder,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,create,document,builder,document,builder,factory,factory,throws,parser,configuration,exception,return,factory,new,document,builder
AbstractMarshaller -> protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory) 			throws ParserConfigurationException;1376041400;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>Can be overridden in subclasses, adding further initialization of the builder._@param factory the {@code DocumentBuilderFactory} that the DocumentBuilder should be created with_@return the {@code DocumentBuilder}_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory)_			throws ParserConfigurationException {__		return factory.newDocumentBuilder()__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,builder,param,factory,the,code,document,builder,factory,that,the,document,builder,should,be,created,with,return,the,code,document,builder,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,create,document,builder,document,builder,factory,factory,throws,parser,configuration,exception,return,factory,new,document,builder
AbstractMarshaller -> protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory) 			throws ParserConfigurationException;1392767670;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>Can be overridden in subclasses, adding further initialization of the builder._@param factory the {@code DocumentBuilderFactory} that the DocumentBuilder should be created with_@return the {@code DocumentBuilder}_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory)_			throws ParserConfigurationException {__		return factory.newDocumentBuilder()__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,builder,param,factory,the,code,document,builder,factory,that,the,document,builder,should,be,created,with,return,the,code,document,builder,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,create,document,builder,document,builder,factory,factory,throws,parser,configuration,exception,return,factory,new,document,builder
AbstractMarshaller -> protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory) 			throws ParserConfigurationException;1397058176;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>Can be overridden in subclasses, adding further initialization of the builder._@param factory the {@code DocumentBuilderFactory} that the DocumentBuilder should be created with_@return the {@code DocumentBuilder}_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory)_			throws ParserConfigurationException {__		return factory.newDocumentBuilder()__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,builder,param,factory,the,code,document,builder,factory,that,the,document,builder,should,be,created,with,return,the,code,document,builder,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,create,document,builder,document,builder,factory,factory,throws,parser,configuration,exception,return,factory,new,document,builder
AbstractMarshaller -> protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory) 			throws ParserConfigurationException;1397069887;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>Can be overridden in subclasses, adding further initialization of the builder._@param factory the {@code DocumentBuilderFactory} that the DocumentBuilder should be created with_@return the {@code DocumentBuilder}_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory)_			throws ParserConfigurationException {__		return factory.newDocumentBuilder()__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,builder,param,factory,the,code,document,builder,factory,that,the,document,builder,should,be,created,with,return,the,code,document,builder,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,create,document,builder,document,builder,factory,factory,throws,parser,configuration,exception,return,factory,new,document,builder
AbstractMarshaller -> protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory) 			throws ParserConfigurationException;1398638859;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>Can be overridden in subclasses, adding further initialization of the builder._@param factory the {@code DocumentBuilderFactory} that the DocumentBuilder should be created with_@return the {@code DocumentBuilder}_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory)_			throws ParserConfigurationException {__		return factory.newDocumentBuilder()__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,builder,param,factory,the,code,document,builder,factory,that,the,document,builder,should,be,created,with,return,the,code,document,builder,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,create,document,builder,document,builder,factory,factory,throws,parser,configuration,exception,return,factory,new,document,builder
AbstractMarshaller -> protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory) 			throws ParserConfigurationException;1400553912;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>Can be overridden in subclasses, adding further initialization of the builder._@param factory the {@code DocumentBuilderFactory} that the DocumentBuilder should be created with_@return the {@code DocumentBuilder}_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory)_			throws ParserConfigurationException {__		return factory.newDocumentBuilder()__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,builder,param,factory,the,code,document,builder,factory,that,the,document,builder,should,be,created,with,return,the,code,document,builder,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,create,document,builder,document,builder,factory,factory,throws,parser,configuration,exception,return,factory,new,document,builder
AbstractMarshaller -> protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory) 			throws ParserConfigurationException;1435665021;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>Can be overridden in subclasses, adding further initialization of the builder._@param factory the {@code DocumentBuilderFactory} that the DocumentBuilder should be created with_@return the {@code DocumentBuilder}_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory)_			throws ParserConfigurationException {__		DocumentBuilder documentBuilder = factory.newDocumentBuilder()__		if (!isProcessExternalEntities()) {_			documentBuilder.setEntityResolver(NO_OP_ENTITY_RESOLVER)__		}_		return documentBuilder__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,builder,param,factory,the,code,document,builder,factory,that,the,document,builder,should,be,created,with,return,the,code,document,builder,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,create,document,builder,document,builder,factory,factory,throws,parser,configuration,exception,document,builder,document,builder,factory,new,document,builder,if,is,process,external,entities,document,builder,set,entity,resolver,return,document,builder
AbstractMarshaller -> protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory) 			throws ParserConfigurationException;1455117733;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>Can be overridden in subclasses, adding further initialization of the builder._@param factory the {@code DocumentBuilderFactory} that the DocumentBuilder should be created with_@return the {@code DocumentBuilder}_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory)_			throws ParserConfigurationException {__		DocumentBuilder documentBuilder = factory.newDocumentBuilder()__		if (!isProcessExternalEntities()) {_			documentBuilder.setEntityResolver(NO_OP_ENTITY_RESOLVER)__		}_		return documentBuilder__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,builder,param,factory,the,code,document,builder,factory,that,the,document,builder,should,be,created,with,return,the,code,document,builder,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,create,document,builder,document,builder,factory,factory,throws,parser,configuration,exception,document,builder,document,builder,factory,new,document,builder,if,is,process,external,entities,document,builder,set,entity,resolver,return,document,builder
AbstractMarshaller -> protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory) 			throws ParserConfigurationException;1468948866;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>Can be overridden in subclasses, adding further initialization of the builder._@param factory the {@code DocumentBuilderFactory} that the DocumentBuilder should be created with_@return the {@code DocumentBuilder}_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory)_			throws ParserConfigurationException {__		DocumentBuilder documentBuilder = factory.newDocumentBuilder()__		if (!isProcessExternalEntities()) {_			documentBuilder.setEntityResolver(NO_OP_ENTITY_RESOLVER)__		}_		return documentBuilder__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,builder,param,factory,the,code,document,builder,factory,that,the,document,builder,should,be,created,with,return,the,code,document,builder,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,create,document,builder,document,builder,factory,factory,throws,parser,configuration,exception,document,builder,document,builder,factory,new,document,builder,if,is,process,external,entities,document,builder,set,entity,resolver,return,document,builder
AbstractMarshaller -> protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory) 			throws ParserConfigurationException;1483750478;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>Can be overridden in subclasses, adding further initialization of the builder._@param factory the {@code DocumentBuilderFactory} that the DocumentBuilder should be created with_@return the {@code DocumentBuilder}_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory)_			throws ParserConfigurationException {__		DocumentBuilder documentBuilder = factory.newDocumentBuilder()__		if (!isProcessExternalEntities()) {_			documentBuilder.setEntityResolver(NO_OP_ENTITY_RESOLVER)__		}_		return documentBuilder__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,builder,param,factory,the,code,document,builder,factory,that,the,document,builder,should,be,created,with,return,the,code,document,builder,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,create,document,builder,document,builder,factory,factory,throws,parser,configuration,exception,document,builder,document,builder,factory,new,document,builder,if,is,process,external,entities,document,builder,set,entity,resolver,return,document,builder
AbstractMarshaller -> protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory) 			throws ParserConfigurationException;1484301200;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>Can be overridden in subclasses, adding further initialization of the builder._@param factory the {@code DocumentBuilderFactory} that the DocumentBuilder should be created with_@return the {@code DocumentBuilder}_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory)_			throws ParserConfigurationException {__		DocumentBuilder documentBuilder = factory.newDocumentBuilder()__		if (!isProcessExternalEntities()) {_			documentBuilder.setEntityResolver(NO_OP_ENTITY_RESOLVER)__		}_		return documentBuilder__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,builder,param,factory,the,code,document,builder,factory,that,the,document,builder,should,be,created,with,return,the,code,document,builder,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,create,document,builder,document,builder,factory,factory,throws,parser,configuration,exception,document,builder,document,builder,factory,new,document,builder,if,is,process,external,entities,document,builder,set,entity,resolver,return,document,builder
AbstractMarshaller -> protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory) 			throws ParserConfigurationException;1495868221;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>Can be overridden in subclasses, adding further initialization of the builder._@param factory the {@code DocumentBuilderFactory} that the DocumentBuilder should be created with_@return the {@code DocumentBuilder}_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory)_			throws ParserConfigurationException {__		DocumentBuilder documentBuilder = factory.newDocumentBuilder()__		if (!isProcessExternalEntities()) {_			documentBuilder.setEntityResolver(NO_OP_ENTITY_RESOLVER)__		}_		return documentBuilder__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,builder,param,factory,the,code,document,builder,factory,that,the,document,builder,should,be,created,with,return,the,code,document,builder,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,create,document,builder,document,builder,factory,factory,throws,parser,configuration,exception,document,builder,document,builder,factory,new,document,builder,if,is,process,external,entities,document,builder,set,entity,resolver,return,document,builder
AbstractMarshaller -> protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory) 			throws ParserConfigurationException;1498780456;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>Can be overridden in subclasses, adding further initialization of the builder._@param factory the {@code DocumentBuilderFactory} that the DocumentBuilder should be created with_@return the {@code DocumentBuilder}_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory)_			throws ParserConfigurationException {__		DocumentBuilder documentBuilder = factory.newDocumentBuilder()__		if (!isProcessExternalEntities()) {_			documentBuilder.setEntityResolver(NO_OP_ENTITY_RESOLVER)__		}_		return documentBuilder__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,builder,param,factory,the,code,document,builder,factory,that,the,document,builder,should,be,created,with,return,the,code,document,builder,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,create,document,builder,document,builder,factory,factory,throws,parser,configuration,exception,document,builder,document,builder,factory,new,document,builder,if,is,process,external,entities,document,builder,set,entity,resolver,return,document,builder
AbstractMarshaller -> protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory) 			throws ParserConfigurationException;1518770299;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>Can be overridden in subclasses, adding further initialization of the builder._@param factory the {@code DocumentBuilderFactory} that the DocumentBuilder should be created with_@return the {@code DocumentBuilder}_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory)_			throws ParserConfigurationException {__		DocumentBuilder documentBuilder = factory.newDocumentBuilder()__		if (!isProcessExternalEntities()) {_			documentBuilder.setEntityResolver(NO_OP_ENTITY_RESOLVER)__		}_		return documentBuilder__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,builder,param,factory,the,code,document,builder,factory,that,the,document,builder,should,be,created,with,return,the,code,document,builder,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,create,document,builder,document,builder,factory,factory,throws,parser,configuration,exception,document,builder,document,builder,factory,new,document,builder,if,is,process,external,entities,document,builder,set,entity,resolver,return,document,builder
AbstractMarshaller -> protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory) 			throws ParserConfigurationException;1518770299;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>Can be overridden in subclasses, adding further initialization of the builder._@param factory the {@code DocumentBuilderFactory} that the DocumentBuilder should be created with_@return the {@code DocumentBuilder}_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory)_			throws ParserConfigurationException {__		DocumentBuilder documentBuilder = factory.newDocumentBuilder()__		if (!isProcessExternalEntities()) {_			documentBuilder.setEntityResolver(NO_OP_ENTITY_RESOLVER)__		}_		return documentBuilder__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,builder,param,factory,the,code,document,builder,factory,that,the,document,builder,should,be,created,with,return,the,code,document,builder,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,create,document,builder,document,builder,factory,factory,throws,parser,configuration,exception,document,builder,document,builder,factory,new,document,builder,if,is,process,external,entities,document,builder,set,entity,resolver,return,document,builder
AbstractMarshaller -> protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory) 			throws ParserConfigurationException;1530174524;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>Can be overridden in subclasses, adding further initialization of the builder._@param factory the {@code DocumentBuilderFactory} that the DocumentBuilder should be created with_@return the {@code DocumentBuilder}_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory)_			throws ParserConfigurationException {__		DocumentBuilder documentBuilder = factory.newDocumentBuilder()__		if (!isProcessExternalEntities()) {_			documentBuilder.setEntityResolver(NO_OP_ENTITY_RESOLVER)__		}_		return documentBuilder__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,builder,param,factory,the,code,document,builder,factory,that,the,document,builder,should,be,created,with,return,the,code,document,builder,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,create,document,builder,document,builder,factory,factory,throws,parser,configuration,exception,document,builder,document,builder,factory,new,document,builder,if,is,process,external,entities,document,builder,set,entity,resolver,return,document,builder
AbstractMarshaller -> protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory) 			throws ParserConfigurationException;1530174524;Create a {@code DocumentBuilder} that this marshaller will use for creating_DOM documents when passed an empty {@code DOMSource}._<p>Can be overridden in subclasses, adding further initialization of the builder._@param factory the {@code DocumentBuilderFactory} that the DocumentBuilder should be created with_@return the {@code DocumentBuilder}_@throws ParserConfigurationException if thrown by JAXP methods;protected DocumentBuilder createDocumentBuilder(DocumentBuilderFactory factory)_			throws ParserConfigurationException {__		DocumentBuilder documentBuilder = factory.newDocumentBuilder()__		if (!isProcessExternalEntities()) {_			documentBuilder.setEntityResolver(NO_OP_ENTITY_RESOLVER)__		}_		return documentBuilder__	};create,a,code,document,builder,that,this,marshaller,will,use,for,creating,dom,documents,when,passed,an,empty,code,domsource,p,can,be,overridden,in,subclasses,adding,further,initialization,of,the,builder,param,factory,the,code,document,builder,factory,that,the,document,builder,should,be,created,with,return,the,code,document,builder,throws,parser,configuration,exception,if,thrown,by,jaxp,methods;protected,document,builder,create,document,builder,document,builder,factory,factory,throws,parser,configuration,exception,document,builder,document,builder,factory,new,document,builder,if,is,process,external,entities,document,builder,set,entity,resolver,return,document,builder
AbstractMarshaller -> protected abstract Object unmarshalInputStream(InputStream inputStream) 			throws XmlMappingException, IOException_;1328020251;Abstract template method for unmarshalling from a given <code>InputStream</code>._@param inputStream the <code>InputStreamStream</code> to read from_@return the object graph_@throws XmlMappingException if the given stream cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalInputStream(InputStream inputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,input,stream,code,param,input,stream,the,code,input,stream,stream,code,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,input,stream,input,stream,input,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalInputStream(InputStream inputStream) 			throws XmlMappingException, IOException_;1356735495;Abstract template method for unmarshalling from a given {@code InputStream}._@param inputStream the {@code InputStreamStream} to read from_@return the object graph_@throws XmlMappingException if the given stream cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalInputStream(InputStream inputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,input,stream,param,input,stream,the,code,input,stream,stream,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,input,stream,input,stream,input,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalInputStream(InputStream inputStream) 			throws XmlMappingException, IOException_;1357119239;Abstract template method for unmarshalling from a given {@code InputStream}._@param inputStream the {@code InputStreamStream} to read from_@return the object graph_@throws XmlMappingException if the given stream cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalInputStream(InputStream inputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,input,stream,param,input,stream,the,code,input,stream,stream,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,input,stream,input,stream,input,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalInputStream(InputStream inputStream) 			throws XmlMappingException, IOException_;1368482696;Abstract template method for unmarshalling from a given {@code InputStream}._@param inputStream the {@code InputStreamStream} to read from_@return the object graph_@throws XmlMappingException if the given stream cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalInputStream(InputStream inputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,input,stream,param,input,stream,the,code,input,stream,stream,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,input,stream,input,stream,input,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalInputStream(InputStream inputStream) 			throws XmlMappingException, IOException_;1376041400;Abstract template method for unmarshalling from a given {@code InputStream}._@param inputStream the {@code InputStreamStream} to read from_@return the object graph_@throws XmlMappingException if the given stream cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalInputStream(InputStream inputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,input,stream,param,input,stream,the,code,input,stream,stream,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,input,stream,input,stream,input,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalInputStream(InputStream inputStream) 			throws XmlMappingException, IOException_;1392767670;Abstract template method for unmarshalling from a given {@code InputStream}._@param inputStream the {@code InputStreamStream} to read from_@return the object graph_@throws XmlMappingException if the given stream cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalInputStream(InputStream inputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,input,stream,param,input,stream,the,code,input,stream,stream,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,input,stream,input,stream,input,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalInputStream(InputStream inputStream) 			throws XmlMappingException, IOException_;1397058176;Abstract template method for unmarshalling from a given {@code InputStream}._@param inputStream the {@code InputStreamStream} to read from_@return the object graph_@throws XmlMappingException if the given stream cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalInputStream(InputStream inputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,input,stream,param,input,stream,the,code,input,stream,stream,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,input,stream,input,stream,input,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalInputStream(InputStream inputStream) 			throws XmlMappingException, IOException_;1397069887;Abstract template method for unmarshalling from a given {@code InputStream}._@param inputStream the {@code InputStreamStream} to read from_@return the object graph_@throws XmlMappingException if the given stream cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalInputStream(InputStream inputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,input,stream,param,input,stream,the,code,input,stream,stream,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,input,stream,input,stream,input,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalInputStream(InputStream inputStream) 			throws XmlMappingException, IOException_;1398638859;Abstract template method for unmarshalling from a given {@code InputStream}._@param inputStream the {@code InputStreamStream} to read from_@return the object graph_@throws XmlMappingException if the given stream cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalInputStream(InputStream inputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,input,stream,param,input,stream,the,code,input,stream,stream,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,input,stream,input,stream,input,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalInputStream(InputStream inputStream) 			throws XmlMappingException, IOException_;1400553912;Abstract template method for unmarshalling from a given {@code InputStream}._@param inputStream the {@code InputStreamStream} to read from_@return the object graph_@throws XmlMappingException if the given stream cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalInputStream(InputStream inputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,input,stream,param,input,stream,the,code,input,stream,stream,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,input,stream,input,stream,input,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalInputStream(InputStream inputStream) 			throws XmlMappingException, IOException_;1435665021;Abstract template method for unmarshalling from a given {@code InputStream}._@param inputStream the {@code InputStreamStream} to read from_@return the object graph_@throws XmlMappingException if the given stream cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalInputStream(InputStream inputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,input,stream,param,input,stream,the,code,input,stream,stream,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,input,stream,input,stream,input,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalInputStream(InputStream inputStream) 			throws XmlMappingException, IOException_;1455117733;Abstract template method for unmarshalling from a given {@code InputStream}._@param inputStream the {@code InputStreamStream} to read from_@return the object graph_@throws XmlMappingException if the given stream cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalInputStream(InputStream inputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,input,stream,param,input,stream,the,code,input,stream,stream,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,input,stream,input,stream,input,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalInputStream(InputStream inputStream) 			throws XmlMappingException, IOException_;1468948866;Abstract template method for unmarshalling from a given {@code InputStream}._@param inputStream the {@code InputStreamStream} to read from_@return the object graph_@throws XmlMappingException if the given stream cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalInputStream(InputStream inputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,input,stream,param,input,stream,the,code,input,stream,stream,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,input,stream,input,stream,input,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalInputStream(InputStream inputStream) 			throws XmlMappingException, IOException_;1483750478;Abstract template method for unmarshalling from a given {@code InputStream}._@param inputStream the {@code InputStreamStream} to read from_@return the object graph_@throws XmlMappingException if the given stream cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalInputStream(InputStream inputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,input,stream,param,input,stream,the,code,input,stream,stream,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,input,stream,input,stream,input,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalInputStream(InputStream inputStream) 			throws XmlMappingException, IOException_;1484301200;Abstract template method for unmarshalling from a given {@code InputStream}._@param inputStream the {@code InputStreamStream} to read from_@return the object graph_@throws XmlMappingException if the given stream cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalInputStream(InputStream inputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,input,stream,param,input,stream,the,code,input,stream,stream,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,input,stream,input,stream,input,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalInputStream(InputStream inputStream) 			throws XmlMappingException, IOException_;1495868221;Abstract template method for unmarshalling from a given {@code InputStream}._@param inputStream the {@code InputStreamStream} to read from_@return the object graph_@throws XmlMappingException if the given stream cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalInputStream(InputStream inputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,input,stream,param,input,stream,the,code,input,stream,stream,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,input,stream,input,stream,input,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalInputStream(InputStream inputStream) 			throws XmlMappingException, IOException_;1498780456;Abstract template method for unmarshalling from a given {@code InputStream}._@param inputStream the {@code InputStreamStream} to read from_@return the object graph_@throws XmlMappingException if the given stream cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalInputStream(InputStream inputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,input,stream,param,input,stream,the,code,input,stream,stream,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,input,stream,input,stream,input,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalInputStream(InputStream inputStream) 			throws XmlMappingException, IOException_;1518770299;Abstract template method for unmarshalling from a given {@code InputStream}._@param inputStream the {@code InputStreamStream} to read from_@return the object graph_@throws XmlMappingException if the given stream cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalInputStream(InputStream inputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,input,stream,param,input,stream,the,code,input,stream,stream,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,input,stream,input,stream,input,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalInputStream(InputStream inputStream) 			throws XmlMappingException, IOException_;1518770299;Abstract template method for unmarshalling from a given {@code InputStream}._@param inputStream the {@code InputStreamStream} to read from_@return the object graph_@throws XmlMappingException if the given stream cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalInputStream(InputStream inputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,input,stream,param,input,stream,the,code,input,stream,stream,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,input,stream,input,stream,input,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalInputStream(InputStream inputStream) 			throws XmlMappingException, IOException_;1530174524;Abstract template method for unmarshalling from a given {@code InputStream}._@param inputStream the {@code InputStreamStream} to read from_@return the object graph_@throws XmlMappingException if the given stream cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalInputStream(InputStream inputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,input,stream,param,input,stream,the,code,input,stream,stream,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,input,stream,input,stream,input,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract Object unmarshalInputStream(InputStream inputStream) 			throws XmlMappingException, IOException_;1530174524;Abstract template method for unmarshalling from a given {@code InputStream}._@param inputStream the {@code InputStreamStream} to read from_@return the object graph_@throws XmlMappingException if the given stream cannot be converted to an object_@throws IOException if an I/O exception occurs;protected abstract Object unmarshalInputStream(InputStream inputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,unmarshalling,from,a,given,code,input,stream,param,input,stream,the,code,input,stream,stream,to,read,from,return,the,object,graph,throws,xml,mapping,exception,if,the,given,stream,cannot,be,converted,to,an,object,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,object,unmarshal,input,stream,input,stream,input,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected Document buildDocument();1397058176;Build a new {@link Document} from this marshaller's {@link DocumentBuilderFactory}._@see #createDocumentBuilderFactory()_@see #createDocumentBuilder(DocumentBuilderFactory);protected Document buildDocument() {_		try {_			synchronized (this.documentBuilderFactoryMonitor) {_				if (this.documentBuilderFactory == null) {_					this.documentBuilderFactory = createDocumentBuilderFactory()__				}_			}_			DocumentBuilder documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__			return documentBuilder.newDocument()__		}_		catch (ParserConfigurationException ex) {_			throw new UnmarshallingFailureException(_					"Could not create document placeholder for DOMSource: " + ex.getMessage(), ex)__		}_	};build,a,new,link,document,from,this,marshaller,s,link,document,builder,factory,see,create,document,builder,factory,see,create,document,builder,document,builder,factory;protected,document,build,document,try,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,document,builder,create,document,builder,this,document,builder,factory,return,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,for,domsource,ex,get,message,ex
AbstractMarshaller -> protected Document buildDocument();1397069887;Build a new {@link Document} from this marshaller's {@link DocumentBuilderFactory},_as a placeholder for a DOM node._@see #createDocumentBuilderFactory()_@see #createDocumentBuilder(DocumentBuilderFactory);protected Document buildDocument() {_		try {_			synchronized (this.documentBuilderFactoryMonitor) {_				if (this.documentBuilderFactory == null) {_					this.documentBuilderFactory = createDocumentBuilderFactory()__				}_			}_			DocumentBuilder documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__			return documentBuilder.newDocument()__		}_		catch (ParserConfigurationException ex) {_			throw new UnmarshallingFailureException("Could not create document placeholder: " + ex.getMessage(), ex)__		}_	};build,a,new,link,document,from,this,marshaller,s,link,document,builder,factory,as,a,placeholder,for,a,dom,node,see,create,document,builder,factory,see,create,document,builder,document,builder,factory;protected,document,build,document,try,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,document,builder,create,document,builder,this,document,builder,factory,return,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,ex,get,message,ex
AbstractMarshaller -> protected Document buildDocument();1398638859;Build a new {@link Document} from this marshaller's {@link DocumentBuilderFactory},_as a placeholder for a DOM node._@see #createDocumentBuilderFactory()_@see #createDocumentBuilder(DocumentBuilderFactory);protected Document buildDocument() {_		try {_			synchronized (this.documentBuilderFactoryMonitor) {_				if (this.documentBuilderFactory == null) {_					this.documentBuilderFactory = createDocumentBuilderFactory()__				}_			}_			DocumentBuilder documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__			return documentBuilder.newDocument()__		}_		catch (ParserConfigurationException ex) {_			throw new UnmarshallingFailureException("Could not create document placeholder: " + ex.getMessage(), ex)__		}_	};build,a,new,link,document,from,this,marshaller,s,link,document,builder,factory,as,a,placeholder,for,a,dom,node,see,create,document,builder,factory,see,create,document,builder,document,builder,factory;protected,document,build,document,try,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,document,builder,create,document,builder,this,document,builder,factory,return,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,ex,get,message,ex
AbstractMarshaller -> protected Document buildDocument();1400553912;Build a new {@link Document} from this marshaller's {@link DocumentBuilderFactory},_as a placeholder for a DOM node._@see #createDocumentBuilderFactory()_@see #createDocumentBuilder(DocumentBuilderFactory);protected Document buildDocument() {_		try {_			synchronized (this.documentBuilderFactoryMonitor) {_				if (this.documentBuilderFactory == null) {_					this.documentBuilderFactory = createDocumentBuilderFactory()__				}_			}_			DocumentBuilder documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__			return documentBuilder.newDocument()__		}_		catch (ParserConfigurationException ex) {_			throw new UnmarshallingFailureException("Could not create document placeholder: " + ex.getMessage(), ex)__		}_	};build,a,new,link,document,from,this,marshaller,s,link,document,builder,factory,as,a,placeholder,for,a,dom,node,see,create,document,builder,factory,see,create,document,builder,document,builder,factory;protected,document,build,document,try,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,document,builder,create,document,builder,this,document,builder,factory,return,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,ex,get,message,ex
AbstractMarshaller -> protected Document buildDocument();1435665021;Build a new {@link Document} from this marshaller's {@link DocumentBuilderFactory},_as a placeholder for a DOM node._@see #createDocumentBuilderFactory()_@see #createDocumentBuilder(DocumentBuilderFactory);protected Document buildDocument() {_		try {_			synchronized (this.documentBuilderFactoryMonitor) {_				if (this.documentBuilderFactory == null) {_					this.documentBuilderFactory = createDocumentBuilderFactory()__				}_			}_			DocumentBuilder documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__			return documentBuilder.newDocument()__		}_		catch (ParserConfigurationException ex) {_			throw new UnmarshallingFailureException("Could not create document placeholder: " + ex.getMessage(), ex)__		}_	};build,a,new,link,document,from,this,marshaller,s,link,document,builder,factory,as,a,placeholder,for,a,dom,node,see,create,document,builder,factory,see,create,document,builder,document,builder,factory;protected,document,build,document,try,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,document,builder,create,document,builder,this,document,builder,factory,return,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,ex,get,message,ex
AbstractMarshaller -> protected Document buildDocument();1455117733;Build a new {@link Document} from this marshaller's {@link DocumentBuilderFactory},_as a placeholder for a DOM node._@see #createDocumentBuilderFactory()_@see #createDocumentBuilder(DocumentBuilderFactory);protected Document buildDocument() {_		try {_			DocumentBuilder documentBuilder__			synchronized (this.documentBuilderFactoryMonitor) {_				if (this.documentBuilderFactory == null) {_					this.documentBuilderFactory = createDocumentBuilderFactory()__				}_				documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__			}_			return documentBuilder.newDocument()__		}_		catch (ParserConfigurationException ex) {_			throw new UnmarshallingFailureException("Could not create document placeholder: " + ex.getMessage(), ex)__		}_	};build,a,new,link,document,from,this,marshaller,s,link,document,builder,factory,as,a,placeholder,for,a,dom,node,see,create,document,builder,factory,see,create,document,builder,document,builder,factory;protected,document,build,document,try,document,builder,document,builder,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,create,document,builder,this,document,builder,factory,return,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,ex,get,message,ex
AbstractMarshaller -> protected Document buildDocument();1468948866;Build a new {@link Document} from this marshaller's {@link DocumentBuilderFactory},_as a placeholder for a DOM node._@see #createDocumentBuilderFactory()_@see #createDocumentBuilder(DocumentBuilderFactory);protected Document buildDocument() {_		try {_			DocumentBuilder documentBuilder__			synchronized (this.documentBuilderFactoryMonitor) {_				if (this.documentBuilderFactory == null) {_					this.documentBuilderFactory = createDocumentBuilderFactory()__				}_				documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__			}_			return documentBuilder.newDocument()__		}_		catch (ParserConfigurationException ex) {_			throw new UnmarshallingFailureException("Could not create document placeholder: " + ex.getMessage(), ex)__		}_	};build,a,new,link,document,from,this,marshaller,s,link,document,builder,factory,as,a,placeholder,for,a,dom,node,see,create,document,builder,factory,see,create,document,builder,document,builder,factory;protected,document,build,document,try,document,builder,document,builder,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,create,document,builder,this,document,builder,factory,return,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,ex,get,message,ex
AbstractMarshaller -> protected Document buildDocument();1483750478;Build a new {@link Document} from this marshaller's {@link DocumentBuilderFactory},_as a placeholder for a DOM node._@see #createDocumentBuilderFactory()_@see #createDocumentBuilder(DocumentBuilderFactory);protected Document buildDocument() {_		try {_			DocumentBuilder documentBuilder__			synchronized (this.documentBuilderFactoryMonitor) {_				if (this.documentBuilderFactory == null) {_					this.documentBuilderFactory = createDocumentBuilderFactory()__				}_				documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__			}_			return documentBuilder.newDocument()__		}_		catch (ParserConfigurationException ex) {_			throw new UnmarshallingFailureException("Could not create document placeholder: " + ex.getMessage(), ex)__		}_	};build,a,new,link,document,from,this,marshaller,s,link,document,builder,factory,as,a,placeholder,for,a,dom,node,see,create,document,builder,factory,see,create,document,builder,document,builder,factory;protected,document,build,document,try,document,builder,document,builder,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,create,document,builder,this,document,builder,factory,return,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,ex,get,message,ex
AbstractMarshaller -> protected Document buildDocument();1484301200;Build a new {@link Document} from this marshaller's {@link DocumentBuilderFactory},_as a placeholder for a DOM node._@see #createDocumentBuilderFactory()_@see #createDocumentBuilder(DocumentBuilderFactory);protected Document buildDocument() {_		try {_			DocumentBuilder documentBuilder__			synchronized (this.documentBuilderFactoryMonitor) {_				if (this.documentBuilderFactory == null) {_					this.documentBuilderFactory = createDocumentBuilderFactory()__				}_				documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__			}_			return documentBuilder.newDocument()__		}_		catch (ParserConfigurationException ex) {_			throw new UnmarshallingFailureException("Could not create document placeholder: " + ex.getMessage(), ex)__		}_	};build,a,new,link,document,from,this,marshaller,s,link,document,builder,factory,as,a,placeholder,for,a,dom,node,see,create,document,builder,factory,see,create,document,builder,document,builder,factory;protected,document,build,document,try,document,builder,document,builder,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,create,document,builder,this,document,builder,factory,return,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,ex,get,message,ex
AbstractMarshaller -> protected Document buildDocument();1495868221;Build a new {@link Document} from this marshaller's {@link DocumentBuilderFactory},_as a placeholder for a DOM node._@see #createDocumentBuilderFactory()_@see #createDocumentBuilder(DocumentBuilderFactory);protected Document buildDocument() {_		try {_			DocumentBuilder documentBuilder__			synchronized (this.documentBuilderFactoryMonitor) {_				if (this.documentBuilderFactory == null) {_					this.documentBuilderFactory = createDocumentBuilderFactory()__				}_				documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__			}_			return documentBuilder.newDocument()__		}_		catch (ParserConfigurationException ex) {_			throw new UnmarshallingFailureException("Could not create document placeholder: " + ex.getMessage(), ex)__		}_	};build,a,new,link,document,from,this,marshaller,s,link,document,builder,factory,as,a,placeholder,for,a,dom,node,see,create,document,builder,factory,see,create,document,builder,document,builder,factory;protected,document,build,document,try,document,builder,document,builder,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,create,document,builder,this,document,builder,factory,return,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,ex,get,message,ex
AbstractMarshaller -> protected Document buildDocument();1498780456;Build a new {@link Document} from this marshaller's {@link DocumentBuilderFactory},_as a placeholder for a DOM node._@see #createDocumentBuilderFactory()_@see #createDocumentBuilder(DocumentBuilderFactory);protected Document buildDocument() {_		try {_			DocumentBuilder documentBuilder__			synchronized (this.documentBuilderFactoryMonitor) {_				if (this.documentBuilderFactory == null) {_					this.documentBuilderFactory = createDocumentBuilderFactory()__				}_				documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__			}_			return documentBuilder.newDocument()__		}_		catch (ParserConfigurationException ex) {_			throw new UnmarshallingFailureException("Could not create document placeholder: " + ex.getMessage(), ex)__		}_	};build,a,new,link,document,from,this,marshaller,s,link,document,builder,factory,as,a,placeholder,for,a,dom,node,see,create,document,builder,factory,see,create,document,builder,document,builder,factory;protected,document,build,document,try,document,builder,document,builder,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,create,document,builder,this,document,builder,factory,return,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,ex,get,message,ex
AbstractMarshaller -> protected Document buildDocument();1518770299;Build a new {@link Document} from this marshaller's {@link DocumentBuilderFactory},_as a placeholder for a DOM node._@see #createDocumentBuilderFactory()_@see #createDocumentBuilder(DocumentBuilderFactory);protected Document buildDocument() {_		try {_			DocumentBuilder documentBuilder__			synchronized (this.documentBuilderFactoryMonitor) {_				if (this.documentBuilderFactory == null) {_					this.documentBuilderFactory = createDocumentBuilderFactory()__				}_				documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__			}_			return documentBuilder.newDocument()__		}_		catch (ParserConfigurationException ex) {_			throw new UnmarshallingFailureException("Could not create document placeholder: " + ex.getMessage(), ex)__		}_	};build,a,new,link,document,from,this,marshaller,s,link,document,builder,factory,as,a,placeholder,for,a,dom,node,see,create,document,builder,factory,see,create,document,builder,document,builder,factory;protected,document,build,document,try,document,builder,document,builder,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,create,document,builder,this,document,builder,factory,return,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,ex,get,message,ex
AbstractMarshaller -> protected Document buildDocument();1518770299;Build a new {@link Document} from this marshaller's {@link DocumentBuilderFactory},_as a placeholder for a DOM node._@see #createDocumentBuilderFactory()_@see #createDocumentBuilder(DocumentBuilderFactory);protected Document buildDocument() {_		try {_			DocumentBuilder documentBuilder__			synchronized (this.documentBuilderFactoryMonitor) {_				if (this.documentBuilderFactory == null) {_					this.documentBuilderFactory = createDocumentBuilderFactory()__				}_				documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__			}_			return documentBuilder.newDocument()__		}_		catch (ParserConfigurationException ex) {_			throw new UnmarshallingFailureException("Could not create document placeholder: " + ex.getMessage(), ex)__		}_	};build,a,new,link,document,from,this,marshaller,s,link,document,builder,factory,as,a,placeholder,for,a,dom,node,see,create,document,builder,factory,see,create,document,builder,document,builder,factory;protected,document,build,document,try,document,builder,document,builder,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,create,document,builder,this,document,builder,factory,return,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,ex,get,message,ex
AbstractMarshaller -> protected Document buildDocument();1530174524;Build a new {@link Document} from this marshaller's {@link DocumentBuilderFactory},_as a placeholder for a DOM node._@see #createDocumentBuilderFactory()_@see #createDocumentBuilder(DocumentBuilderFactory);protected Document buildDocument() {_		try {_			DocumentBuilder documentBuilder__			synchronized (this.documentBuilderFactoryMonitor) {_				if (this.documentBuilderFactory == null) {_					this.documentBuilderFactory = createDocumentBuilderFactory()__				}_				documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__			}_			return documentBuilder.newDocument()__		}_		catch (ParserConfigurationException ex) {_			throw new UnmarshallingFailureException("Could not create document placeholder: " + ex.getMessage(), ex)__		}_	};build,a,new,link,document,from,this,marshaller,s,link,document,builder,factory,as,a,placeholder,for,a,dom,node,see,create,document,builder,factory,see,create,document,builder,document,builder,factory;protected,document,build,document,try,document,builder,document,builder,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,create,document,builder,this,document,builder,factory,return,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,ex,get,message,ex
AbstractMarshaller -> protected Document buildDocument();1530174524;Build a new {@link Document} from this marshaller's {@link DocumentBuilderFactory},_as a placeholder for a DOM node._@see #createDocumentBuilderFactory()_@see #createDocumentBuilder(DocumentBuilderFactory);protected Document buildDocument() {_		try {_			DocumentBuilder documentBuilder__			synchronized (this.documentBuilderFactoryMonitor) {_				if (this.documentBuilderFactory == null) {_					this.documentBuilderFactory = createDocumentBuilderFactory()__				}_				documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__			}_			return documentBuilder.newDocument()__		}_		catch (ParserConfigurationException ex) {_			throw new UnmarshallingFailureException("Could not create document placeholder: " + ex.getMessage(), ex)__		}_	};build,a,new,link,document,from,this,marshaller,s,link,document,builder,factory,as,a,placeholder,for,a,dom,node,see,create,document,builder,factory,see,create,document,builder,document,builder,factory;protected,document,build,document,try,document,builder,document,builder,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,create,document,builder,this,document,builder,factory,return,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,ex,get,message,ex
AbstractMarshaller -> protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException;1328020251;Template method for handling <code>StaxSource</code>s._<p>This implementation delegates to <code>unmarshalXmlStreamReader</code> or_<code>unmarshalXmlEventReader</code>._@param staxSource the <code>StaxSource</code>_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException {_		XMLStreamReader streamReader = StaxUtils.getXMLStreamReader(staxSource)__		if (streamReader != null) {_			return unmarshalXmlStreamReader(streamReader)__		}_		else {_			XMLEventReader eventReader = StaxUtils.getXMLEventReader(staxSource)__			if (eventReader != null) {_				return unmarshalXmlEventReader(eventReader)__			}_			else {_				throw new IllegalArgumentException("StaxSource contains neither XMLStreamReader nor XMLEventReader")__			}_		}_	};template,method,for,handling,code,stax,source,code,s,p,this,implementation,delegates,to,code,unmarshal,xml,stream,reader,code,or,code,unmarshal,xml,event,reader,code,param,stax,source,the,code,stax,source,code,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stax,source,source,stax,source,throws,xml,mapping,exception,xmlstream,reader,stream,reader,stax,utils,get,xmlstream,reader,stax,source,if,stream,reader,null,return,unmarshal,xml,stream,reader,stream,reader,else,xmlevent,reader,event,reader,stax,utils,get,xmlevent,reader,stax,source,if,event,reader,null,return,unmarshal,xml,event,reader,event,reader,else,throw,new,illegal,argument,exception,stax,source,contains,neither,xmlstream,reader,nor,xmlevent,reader
AbstractMarshaller -> protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException;1356735495;Template method for handling {@code StaxSource}s._<p>This implementation delegates to {@code unmarshalXmlStreamReader} or_{@code unmarshalXmlEventReader}._@param staxSource the {@code StaxSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException {_		XMLStreamReader streamReader = StaxUtils.getXMLStreamReader(staxSource)__		if (streamReader != null) {_			return unmarshalXmlStreamReader(streamReader)__		}_		else {_			XMLEventReader eventReader = StaxUtils.getXMLEventReader(staxSource)__			if (eventReader != null) {_				return unmarshalXmlEventReader(eventReader)__			}_			else {_				throw new IllegalArgumentException("StaxSource contains neither XMLStreamReader nor XMLEventReader")__			}_		}_	};template,method,for,handling,code,stax,source,s,p,this,implementation,delegates,to,code,unmarshal,xml,stream,reader,or,code,unmarshal,xml,event,reader,param,stax,source,the,code,stax,source,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stax,source,source,stax,source,throws,xml,mapping,exception,xmlstream,reader,stream,reader,stax,utils,get,xmlstream,reader,stax,source,if,stream,reader,null,return,unmarshal,xml,stream,reader,stream,reader,else,xmlevent,reader,event,reader,stax,utils,get,xmlevent,reader,stax,source,if,event,reader,null,return,unmarshal,xml,event,reader,event,reader,else,throw,new,illegal,argument,exception,stax,source,contains,neither,xmlstream,reader,nor,xmlevent,reader
AbstractMarshaller -> protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException;1357119239;Template method for handling {@code StaxSource}s._<p>This implementation delegates to {@code unmarshalXmlStreamReader} or_{@code unmarshalXmlEventReader}._@param staxSource the {@code StaxSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException {_		XMLStreamReader streamReader = StaxUtils.getXMLStreamReader(staxSource)__		if (streamReader != null) {_			return unmarshalXmlStreamReader(streamReader)__		}_		else {_			XMLEventReader eventReader = StaxUtils.getXMLEventReader(staxSource)__			if (eventReader != null) {_				return unmarshalXmlEventReader(eventReader)__			}_			else {_				throw new IllegalArgumentException("StaxSource contains neither XMLStreamReader nor XMLEventReader")__			}_		}_	};template,method,for,handling,code,stax,source,s,p,this,implementation,delegates,to,code,unmarshal,xml,stream,reader,or,code,unmarshal,xml,event,reader,param,stax,source,the,code,stax,source,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stax,source,source,stax,source,throws,xml,mapping,exception,xmlstream,reader,stream,reader,stax,utils,get,xmlstream,reader,stax,source,if,stream,reader,null,return,unmarshal,xml,stream,reader,stream,reader,else,xmlevent,reader,event,reader,stax,utils,get,xmlevent,reader,stax,source,if,event,reader,null,return,unmarshal,xml,event,reader,event,reader,else,throw,new,illegal,argument,exception,stax,source,contains,neither,xmlstream,reader,nor,xmlevent,reader
AbstractMarshaller -> protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException;1368482696;Template method for handling {@code StaxSource}s._<p>This implementation delegates to {@code unmarshalXmlStreamReader} or_{@code unmarshalXmlEventReader}._@param staxSource the {@code StaxSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException {_		XMLStreamReader streamReader = StaxUtils.getXMLStreamReader(staxSource)__		if (streamReader != null) {_			return unmarshalXmlStreamReader(streamReader)__		}_		else {_			XMLEventReader eventReader = StaxUtils.getXMLEventReader(staxSource)__			if (eventReader != null) {_				return unmarshalXmlEventReader(eventReader)__			}_			else {_				throw new IllegalArgumentException("StaxSource contains neither XMLStreamReader nor XMLEventReader")__			}_		}_	};template,method,for,handling,code,stax,source,s,p,this,implementation,delegates,to,code,unmarshal,xml,stream,reader,or,code,unmarshal,xml,event,reader,param,stax,source,the,code,stax,source,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stax,source,source,stax,source,throws,xml,mapping,exception,xmlstream,reader,stream,reader,stax,utils,get,xmlstream,reader,stax,source,if,stream,reader,null,return,unmarshal,xml,stream,reader,stream,reader,else,xmlevent,reader,event,reader,stax,utils,get,xmlevent,reader,stax,source,if,event,reader,null,return,unmarshal,xml,event,reader,event,reader,else,throw,new,illegal,argument,exception,stax,source,contains,neither,xmlstream,reader,nor,xmlevent,reader
AbstractMarshaller -> protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException;1376041400;Template method for handling {@code StaxSource}s._<p>This implementation delegates to {@code unmarshalXmlStreamReader} or_{@code unmarshalXmlEventReader}._@param staxSource the {@code StaxSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException {_		XMLStreamReader streamReader = StaxUtils.getXMLStreamReader(staxSource)__		if (streamReader != null) {_			return unmarshalXmlStreamReader(streamReader)__		}_		else {_			XMLEventReader eventReader = StaxUtils.getXMLEventReader(staxSource)__			if (eventReader != null) {_				return unmarshalXmlEventReader(eventReader)__			}_			else {_				throw new IllegalArgumentException("StaxSource contains neither XMLStreamReader nor XMLEventReader")__			}_		}_	};template,method,for,handling,code,stax,source,s,p,this,implementation,delegates,to,code,unmarshal,xml,stream,reader,or,code,unmarshal,xml,event,reader,param,stax,source,the,code,stax,source,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stax,source,source,stax,source,throws,xml,mapping,exception,xmlstream,reader,stream,reader,stax,utils,get,xmlstream,reader,stax,source,if,stream,reader,null,return,unmarshal,xml,stream,reader,stream,reader,else,xmlevent,reader,event,reader,stax,utils,get,xmlevent,reader,stax,source,if,event,reader,null,return,unmarshal,xml,event,reader,event,reader,else,throw,new,illegal,argument,exception,stax,source,contains,neither,xmlstream,reader,nor,xmlevent,reader
AbstractMarshaller -> protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException;1392767670;Template method for handling {@code StaxSource}s._<p>This implementation delegates to {@code unmarshalXmlStreamReader} or_{@code unmarshalXmlEventReader}._@param staxSource the {@code StaxSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException {_		XMLStreamReader streamReader = StaxUtils.getXMLStreamReader(staxSource)__		if (streamReader != null) {_			return unmarshalXmlStreamReader(streamReader)__		}_		else {_			XMLEventReader eventReader = StaxUtils.getXMLEventReader(staxSource)__			if (eventReader != null) {_				return unmarshalXmlEventReader(eventReader)__			}_			else {_				throw new IllegalArgumentException("StaxSource contains neither XMLStreamReader nor XMLEventReader")__			}_		}_	};template,method,for,handling,code,stax,source,s,p,this,implementation,delegates,to,code,unmarshal,xml,stream,reader,or,code,unmarshal,xml,event,reader,param,stax,source,the,code,stax,source,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stax,source,source,stax,source,throws,xml,mapping,exception,xmlstream,reader,stream,reader,stax,utils,get,xmlstream,reader,stax,source,if,stream,reader,null,return,unmarshal,xml,stream,reader,stream,reader,else,xmlevent,reader,event,reader,stax,utils,get,xmlevent,reader,stax,source,if,event,reader,null,return,unmarshal,xml,event,reader,event,reader,else,throw,new,illegal,argument,exception,stax,source,contains,neither,xmlstream,reader,nor,xmlevent,reader
AbstractMarshaller -> protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException;1397058176;Template method for handling {@code StaxSource}s._<p>This implementation delegates to {@code unmarshalXmlStreamReader} or_{@code unmarshalXmlEventReader}._@param staxSource the {@code StaxSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException {_		XMLStreamReader streamReader = StaxUtils.getXMLStreamReader(staxSource)__		if (streamReader != null) {_			return unmarshalXmlStreamReader(streamReader)__		}_		else {_			XMLEventReader eventReader = StaxUtils.getXMLEventReader(staxSource)__			if (eventReader != null) {_				return unmarshalXmlEventReader(eventReader)__			}_			else {_				throw new IllegalArgumentException("StaxSource contains neither XMLStreamReader nor XMLEventReader")__			}_		}_	};template,method,for,handling,code,stax,source,s,p,this,implementation,delegates,to,code,unmarshal,xml,stream,reader,or,code,unmarshal,xml,event,reader,param,stax,source,the,code,stax,source,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stax,source,source,stax,source,throws,xml,mapping,exception,xmlstream,reader,stream,reader,stax,utils,get,xmlstream,reader,stax,source,if,stream,reader,null,return,unmarshal,xml,stream,reader,stream,reader,else,xmlevent,reader,event,reader,stax,utils,get,xmlevent,reader,stax,source,if,event,reader,null,return,unmarshal,xml,event,reader,event,reader,else,throw,new,illegal,argument,exception,stax,source,contains,neither,xmlstream,reader,nor,xmlevent,reader
AbstractMarshaller -> protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException;1397069887;Template method for handling {@code StaxSource}s._<p>This implementation delegates to {@code unmarshalXmlStreamReader} or_{@code unmarshalXmlEventReader}._@param staxSource the {@code StaxSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException {_		XMLStreamReader streamReader = StaxUtils.getXMLStreamReader(staxSource)__		if (streamReader != null) {_			return unmarshalXmlStreamReader(streamReader)__		}_		else {_			XMLEventReader eventReader = StaxUtils.getXMLEventReader(staxSource)__			if (eventReader != null) {_				return unmarshalXmlEventReader(eventReader)__			}_			else {_				throw new IllegalArgumentException("StaxSource contains neither XMLStreamReader nor XMLEventReader")__			}_		}_	};template,method,for,handling,code,stax,source,s,p,this,implementation,delegates,to,code,unmarshal,xml,stream,reader,or,code,unmarshal,xml,event,reader,param,stax,source,the,code,stax,source,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stax,source,source,stax,source,throws,xml,mapping,exception,xmlstream,reader,stream,reader,stax,utils,get,xmlstream,reader,stax,source,if,stream,reader,null,return,unmarshal,xml,stream,reader,stream,reader,else,xmlevent,reader,event,reader,stax,utils,get,xmlevent,reader,stax,source,if,event,reader,null,return,unmarshal,xml,event,reader,event,reader,else,throw,new,illegal,argument,exception,stax,source,contains,neither,xmlstream,reader,nor,xmlevent,reader
AbstractMarshaller -> protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException;1398638859;Template method for handling {@code StaxSource}s._<p>This implementation delegates to {@code unmarshalXmlStreamReader} or_{@code unmarshalXmlEventReader}._@param staxSource the {@code StaxSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException {_		XMLStreamReader streamReader = StaxUtils.getXMLStreamReader(staxSource)__		if (streamReader != null) {_			return unmarshalXmlStreamReader(streamReader)__		}_		else {_			XMLEventReader eventReader = StaxUtils.getXMLEventReader(staxSource)__			if (eventReader != null) {_				return unmarshalXmlEventReader(eventReader)__			}_			else {_				throw new IllegalArgumentException("StaxSource contains neither XMLStreamReader nor XMLEventReader")__			}_		}_	};template,method,for,handling,code,stax,source,s,p,this,implementation,delegates,to,code,unmarshal,xml,stream,reader,or,code,unmarshal,xml,event,reader,param,stax,source,the,code,stax,source,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stax,source,source,stax,source,throws,xml,mapping,exception,xmlstream,reader,stream,reader,stax,utils,get,xmlstream,reader,stax,source,if,stream,reader,null,return,unmarshal,xml,stream,reader,stream,reader,else,xmlevent,reader,event,reader,stax,utils,get,xmlevent,reader,stax,source,if,event,reader,null,return,unmarshal,xml,event,reader,event,reader,else,throw,new,illegal,argument,exception,stax,source,contains,neither,xmlstream,reader,nor,xmlevent,reader
AbstractMarshaller -> protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException;1400553912;Template method for handling {@code StaxSource}s._<p>This implementation delegates to {@code unmarshalXmlStreamReader} or_{@code unmarshalXmlEventReader}._@param staxSource the {@code StaxSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException {_		XMLStreamReader streamReader = StaxUtils.getXMLStreamReader(staxSource)__		if (streamReader != null) {_			return unmarshalXmlStreamReader(streamReader)__		}_		else {_			XMLEventReader eventReader = StaxUtils.getXMLEventReader(staxSource)__			if (eventReader != null) {_				return unmarshalXmlEventReader(eventReader)__			}_			else {_				throw new IllegalArgumentException("StaxSource contains neither XMLStreamReader nor XMLEventReader")__			}_		}_	};template,method,for,handling,code,stax,source,s,p,this,implementation,delegates,to,code,unmarshal,xml,stream,reader,or,code,unmarshal,xml,event,reader,param,stax,source,the,code,stax,source,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stax,source,source,stax,source,throws,xml,mapping,exception,xmlstream,reader,stream,reader,stax,utils,get,xmlstream,reader,stax,source,if,stream,reader,null,return,unmarshal,xml,stream,reader,stream,reader,else,xmlevent,reader,event,reader,stax,utils,get,xmlevent,reader,stax,source,if,event,reader,null,return,unmarshal,xml,event,reader,event,reader,else,throw,new,illegal,argument,exception,stax,source,contains,neither,xmlstream,reader,nor,xmlevent,reader
AbstractMarshaller -> protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException;1435665021;Template method for handling {@code StaxSource}s._<p>This implementation delegates to {@code unmarshalXmlStreamReader} or_{@code unmarshalXmlEventReader}._@param staxSource the {@code StaxSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException {_		XMLStreamReader streamReader = StaxUtils.getXMLStreamReader(staxSource)__		if (streamReader != null) {_			return unmarshalXmlStreamReader(streamReader)__		}_		else {_			XMLEventReader eventReader = StaxUtils.getXMLEventReader(staxSource)__			if (eventReader != null) {_				return unmarshalXmlEventReader(eventReader)__			}_			else {_				throw new IllegalArgumentException("StaxSource contains neither XMLStreamReader nor XMLEventReader")__			}_		}_	};template,method,for,handling,code,stax,source,s,p,this,implementation,delegates,to,code,unmarshal,xml,stream,reader,or,code,unmarshal,xml,event,reader,param,stax,source,the,code,stax,source,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stax,source,source,stax,source,throws,xml,mapping,exception,xmlstream,reader,stream,reader,stax,utils,get,xmlstream,reader,stax,source,if,stream,reader,null,return,unmarshal,xml,stream,reader,stream,reader,else,xmlevent,reader,event,reader,stax,utils,get,xmlevent,reader,stax,source,if,event,reader,null,return,unmarshal,xml,event,reader,event,reader,else,throw,new,illegal,argument,exception,stax,source,contains,neither,xmlstream,reader,nor,xmlevent,reader
AbstractMarshaller -> protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException;1455117733;Template method for handling {@code StaxSource}s._<p>This implementation delegates to {@code unmarshalXmlStreamReader} or_{@code unmarshalXmlEventReader}._@param staxSource the {@code StaxSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException {_		XMLStreamReader streamReader = StaxUtils.getXMLStreamReader(staxSource)__		if (streamReader != null) {_			return unmarshalXmlStreamReader(streamReader)__		}_		else {_			XMLEventReader eventReader = StaxUtils.getXMLEventReader(staxSource)__			if (eventReader != null) {_				return unmarshalXmlEventReader(eventReader)__			}_			else {_				throw new IllegalArgumentException("StaxSource contains neither XMLStreamReader nor XMLEventReader")__			}_		}_	};template,method,for,handling,code,stax,source,s,p,this,implementation,delegates,to,code,unmarshal,xml,stream,reader,or,code,unmarshal,xml,event,reader,param,stax,source,the,code,stax,source,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stax,source,source,stax,source,throws,xml,mapping,exception,xmlstream,reader,stream,reader,stax,utils,get,xmlstream,reader,stax,source,if,stream,reader,null,return,unmarshal,xml,stream,reader,stream,reader,else,xmlevent,reader,event,reader,stax,utils,get,xmlevent,reader,stax,source,if,event,reader,null,return,unmarshal,xml,event,reader,event,reader,else,throw,new,illegal,argument,exception,stax,source,contains,neither,xmlstream,reader,nor,xmlevent,reader
AbstractMarshaller -> protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException;1468948866;Template method for handling {@code StaxSource}s._<p>This implementation delegates to {@code unmarshalXmlStreamReader} or_{@code unmarshalXmlEventReader}._@param staxSource the {@code StaxSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException {_		XMLStreamReader streamReader = StaxUtils.getXMLStreamReader(staxSource)__		if (streamReader != null) {_			return unmarshalXmlStreamReader(streamReader)__		}_		else {_			XMLEventReader eventReader = StaxUtils.getXMLEventReader(staxSource)__			if (eventReader != null) {_				return unmarshalXmlEventReader(eventReader)__			}_			else {_				throw new IllegalArgumentException("StaxSource contains neither XMLStreamReader nor XMLEventReader")__			}_		}_	};template,method,for,handling,code,stax,source,s,p,this,implementation,delegates,to,code,unmarshal,xml,stream,reader,or,code,unmarshal,xml,event,reader,param,stax,source,the,code,stax,source,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stax,source,source,stax,source,throws,xml,mapping,exception,xmlstream,reader,stream,reader,stax,utils,get,xmlstream,reader,stax,source,if,stream,reader,null,return,unmarshal,xml,stream,reader,stream,reader,else,xmlevent,reader,event,reader,stax,utils,get,xmlevent,reader,stax,source,if,event,reader,null,return,unmarshal,xml,event,reader,event,reader,else,throw,new,illegal,argument,exception,stax,source,contains,neither,xmlstream,reader,nor,xmlevent,reader
AbstractMarshaller -> protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException;1483750478;Template method for handling {@code StaxSource}s._<p>This implementation delegates to {@code unmarshalXmlStreamReader} or_{@code unmarshalXmlEventReader}._@param staxSource the {@code StaxSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException {_		XMLStreamReader streamReader = StaxUtils.getXMLStreamReader(staxSource)__		if (streamReader != null) {_			return unmarshalXmlStreamReader(streamReader)__		}_		else {_			XMLEventReader eventReader = StaxUtils.getXMLEventReader(staxSource)__			if (eventReader != null) {_				return unmarshalXmlEventReader(eventReader)__			}_			else {_				throw new IllegalArgumentException("StaxSource contains neither XMLStreamReader nor XMLEventReader")__			}_		}_	};template,method,for,handling,code,stax,source,s,p,this,implementation,delegates,to,code,unmarshal,xml,stream,reader,or,code,unmarshal,xml,event,reader,param,stax,source,the,code,stax,source,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stax,source,source,stax,source,throws,xml,mapping,exception,xmlstream,reader,stream,reader,stax,utils,get,xmlstream,reader,stax,source,if,stream,reader,null,return,unmarshal,xml,stream,reader,stream,reader,else,xmlevent,reader,event,reader,stax,utils,get,xmlevent,reader,stax,source,if,event,reader,null,return,unmarshal,xml,event,reader,event,reader,else,throw,new,illegal,argument,exception,stax,source,contains,neither,xmlstream,reader,nor,xmlevent,reader
AbstractMarshaller -> protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException;1484301200;Template method for handling {@code StaxSource}s._<p>This implementation delegates to {@code unmarshalXmlStreamReader} or_{@code unmarshalXmlEventReader}._@param staxSource the {@code StaxSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException {_		XMLStreamReader streamReader = StaxUtils.getXMLStreamReader(staxSource)__		if (streamReader != null) {_			return unmarshalXmlStreamReader(streamReader)__		}_		else {_			XMLEventReader eventReader = StaxUtils.getXMLEventReader(staxSource)__			if (eventReader != null) {_				return unmarshalXmlEventReader(eventReader)__			}_			else {_				throw new IllegalArgumentException("StaxSource contains neither XMLStreamReader nor XMLEventReader")__			}_		}_	};template,method,for,handling,code,stax,source,s,p,this,implementation,delegates,to,code,unmarshal,xml,stream,reader,or,code,unmarshal,xml,event,reader,param,stax,source,the,code,stax,source,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stax,source,source,stax,source,throws,xml,mapping,exception,xmlstream,reader,stream,reader,stax,utils,get,xmlstream,reader,stax,source,if,stream,reader,null,return,unmarshal,xml,stream,reader,stream,reader,else,xmlevent,reader,event,reader,stax,utils,get,xmlevent,reader,stax,source,if,event,reader,null,return,unmarshal,xml,event,reader,event,reader,else,throw,new,illegal,argument,exception,stax,source,contains,neither,xmlstream,reader,nor,xmlevent,reader
AbstractMarshaller -> protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException;1495868221;Template method for handling {@code StaxSource}s._<p>This implementation delegates to {@code unmarshalXmlStreamReader} or_{@code unmarshalXmlEventReader}._@param staxSource the {@code StaxSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException {_		XMLStreamReader streamReader = StaxUtils.getXMLStreamReader(staxSource)__		if (streamReader != null) {_			return unmarshalXmlStreamReader(streamReader)__		}_		else {_			XMLEventReader eventReader = StaxUtils.getXMLEventReader(staxSource)__			if (eventReader != null) {_				return unmarshalXmlEventReader(eventReader)__			}_			else {_				throw new IllegalArgumentException("StaxSource contains neither XMLStreamReader nor XMLEventReader")__			}_		}_	};template,method,for,handling,code,stax,source,s,p,this,implementation,delegates,to,code,unmarshal,xml,stream,reader,or,code,unmarshal,xml,event,reader,param,stax,source,the,code,stax,source,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stax,source,source,stax,source,throws,xml,mapping,exception,xmlstream,reader,stream,reader,stax,utils,get,xmlstream,reader,stax,source,if,stream,reader,null,return,unmarshal,xml,stream,reader,stream,reader,else,xmlevent,reader,event,reader,stax,utils,get,xmlevent,reader,stax,source,if,event,reader,null,return,unmarshal,xml,event,reader,event,reader,else,throw,new,illegal,argument,exception,stax,source,contains,neither,xmlstream,reader,nor,xmlevent,reader
AbstractMarshaller -> protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException;1498780456;Template method for handling {@code StaxSource}s._<p>This implementation delegates to {@code unmarshalXmlStreamReader} or_{@code unmarshalXmlEventReader}._@param staxSource the {@code StaxSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException {_		XMLStreamReader streamReader = StaxUtils.getXMLStreamReader(staxSource)__		if (streamReader != null) {_			return unmarshalXmlStreamReader(streamReader)__		}_		else {_			XMLEventReader eventReader = StaxUtils.getXMLEventReader(staxSource)__			if (eventReader != null) {_				return unmarshalXmlEventReader(eventReader)__			}_			else {_				throw new IllegalArgumentException("StaxSource contains neither XMLStreamReader nor XMLEventReader")__			}_		}_	};template,method,for,handling,code,stax,source,s,p,this,implementation,delegates,to,code,unmarshal,xml,stream,reader,or,code,unmarshal,xml,event,reader,param,stax,source,the,code,stax,source,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stax,source,source,stax,source,throws,xml,mapping,exception,xmlstream,reader,stream,reader,stax,utils,get,xmlstream,reader,stax,source,if,stream,reader,null,return,unmarshal,xml,stream,reader,stream,reader,else,xmlevent,reader,event,reader,stax,utils,get,xmlevent,reader,stax,source,if,event,reader,null,return,unmarshal,xml,event,reader,event,reader,else,throw,new,illegal,argument,exception,stax,source,contains,neither,xmlstream,reader,nor,xmlevent,reader
AbstractMarshaller -> protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException;1518770299;Template method for handling {@code StaxSource}s._<p>This implementation delegates to {@code unmarshalXmlStreamReader} or_{@code unmarshalXmlEventReader}._@param staxSource the {@code StaxSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException {_		XMLStreamReader streamReader = StaxUtils.getXMLStreamReader(staxSource)__		if (streamReader != null) {_			return unmarshalXmlStreamReader(streamReader)__		}_		else {_			XMLEventReader eventReader = StaxUtils.getXMLEventReader(staxSource)__			if (eventReader != null) {_				return unmarshalXmlEventReader(eventReader)__			}_			else {_				throw new IllegalArgumentException("StaxSource contains neither XMLStreamReader nor XMLEventReader")__			}_		}_	};template,method,for,handling,code,stax,source,s,p,this,implementation,delegates,to,code,unmarshal,xml,stream,reader,or,code,unmarshal,xml,event,reader,param,stax,source,the,code,stax,source,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stax,source,source,stax,source,throws,xml,mapping,exception,xmlstream,reader,stream,reader,stax,utils,get,xmlstream,reader,stax,source,if,stream,reader,null,return,unmarshal,xml,stream,reader,stream,reader,else,xmlevent,reader,event,reader,stax,utils,get,xmlevent,reader,stax,source,if,event,reader,null,return,unmarshal,xml,event,reader,event,reader,else,throw,new,illegal,argument,exception,stax,source,contains,neither,xmlstream,reader,nor,xmlevent,reader
AbstractMarshaller -> protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException;1518770299;Template method for handling {@code StaxSource}s._<p>This implementation delegates to {@code unmarshalXmlStreamReader} or_{@code unmarshalXmlEventReader}._@param staxSource the {@code StaxSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException {_		XMLStreamReader streamReader = StaxUtils.getXMLStreamReader(staxSource)__		if (streamReader != null) {_			return unmarshalXmlStreamReader(streamReader)__		}_		else {_			XMLEventReader eventReader = StaxUtils.getXMLEventReader(staxSource)__			if (eventReader != null) {_				return unmarshalXmlEventReader(eventReader)__			}_			else {_				throw new IllegalArgumentException("StaxSource contains neither XMLStreamReader nor XMLEventReader")__			}_		}_	};template,method,for,handling,code,stax,source,s,p,this,implementation,delegates,to,code,unmarshal,xml,stream,reader,or,code,unmarshal,xml,event,reader,param,stax,source,the,code,stax,source,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stax,source,source,stax,source,throws,xml,mapping,exception,xmlstream,reader,stream,reader,stax,utils,get,xmlstream,reader,stax,source,if,stream,reader,null,return,unmarshal,xml,stream,reader,stream,reader,else,xmlevent,reader,event,reader,stax,utils,get,xmlevent,reader,stax,source,if,event,reader,null,return,unmarshal,xml,event,reader,event,reader,else,throw,new,illegal,argument,exception,stax,source,contains,neither,xmlstream,reader,nor,xmlevent,reader
AbstractMarshaller -> protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException;1530174524;Template method for handling {@code StaxSource}s._<p>This implementation delegates to {@code unmarshalXmlStreamReader} or_{@code unmarshalXmlEventReader}._@param staxSource the {@code StaxSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException {_		XMLStreamReader streamReader = StaxUtils.getXMLStreamReader(staxSource)__		if (streamReader != null) {_			return unmarshalXmlStreamReader(streamReader)__		}_		else {_			XMLEventReader eventReader = StaxUtils.getXMLEventReader(staxSource)__			if (eventReader != null) {_				return unmarshalXmlEventReader(eventReader)__			}_			else {_				throw new IllegalArgumentException("StaxSource contains neither XMLStreamReader nor XMLEventReader")__			}_		}_	};template,method,for,handling,code,stax,source,s,p,this,implementation,delegates,to,code,unmarshal,xml,stream,reader,or,code,unmarshal,xml,event,reader,param,stax,source,the,code,stax,source,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stax,source,source,stax,source,throws,xml,mapping,exception,xmlstream,reader,stream,reader,stax,utils,get,xmlstream,reader,stax,source,if,stream,reader,null,return,unmarshal,xml,stream,reader,stream,reader,else,xmlevent,reader,event,reader,stax,utils,get,xmlevent,reader,stax,source,if,event,reader,null,return,unmarshal,xml,event,reader,event,reader,else,throw,new,illegal,argument,exception,stax,source,contains,neither,xmlstream,reader,nor,xmlevent,reader
AbstractMarshaller -> protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException;1530174524;Template method for handling {@code StaxSource}s._<p>This implementation delegates to {@code unmarshalXmlStreamReader} or_{@code unmarshalXmlEventReader}._@param staxSource the {@code StaxSource}_@return the object graph_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStaxSource(Source staxSource) throws XmlMappingException {_		XMLStreamReader streamReader = StaxUtils.getXMLStreamReader(staxSource)__		if (streamReader != null) {_			return unmarshalXmlStreamReader(streamReader)__		}_		else {_			XMLEventReader eventReader = StaxUtils.getXMLEventReader(staxSource)__			if (eventReader != null) {_				return unmarshalXmlEventReader(eventReader)__			}_			else {_				throw new IllegalArgumentException("StaxSource contains neither XMLStreamReader nor XMLEventReader")__			}_		}_	};template,method,for,handling,code,stax,source,s,p,this,implementation,delegates,to,code,unmarshal,xml,stream,reader,or,code,unmarshal,xml,event,reader,param,stax,source,the,code,stax,source,return,the,object,graph,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stax,source,source,stax,source,throws,xml,mapping,exception,xmlstream,reader,stream,reader,stax,utils,get,xmlstream,reader,stax,source,if,stream,reader,null,return,unmarshal,xml,stream,reader,stream,reader,else,xmlevent,reader,event,reader,stax,utils,get,xmlevent,reader,stax,source,if,event,reader,null,return,unmarshal,xml,event,reader,event,reader,else,throw,new,illegal,argument,exception,stax,source,contains,neither,xmlstream,reader,nor,xmlevent,reader
AbstractMarshaller -> protected abstract void marshalWriter(Object graph, Writer writer) 			throws XmlMappingException, IOException_;1328020251;Abstract template method for marshalling the given object graph to a <code>Writer</code>._@param graph the root of the object graph to marshal_@param writer the <code>Writer</code> to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalWriter(Object graph, Writer writer)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,writer,code,param,graph,the,root,of,the,object,graph,to,marshal,param,writer,the,code,writer,code,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,writer,object,graph,writer,writer,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalWriter(Object graph, Writer writer) 			throws XmlMappingException, IOException_;1356735495;Abstract template method for marshalling the given object graph to a {@code Writer}._@param graph the root of the object graph to marshal_@param writer the {@code Writer} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalWriter(Object graph, Writer writer)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,writer,the,code,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,writer,object,graph,writer,writer,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalWriter(Object graph, Writer writer) 			throws XmlMappingException, IOException_;1357119239;Abstract template method for marshalling the given object graph to a {@code Writer}._@param graph the root of the object graph to marshal_@param writer the {@code Writer} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalWriter(Object graph, Writer writer)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,writer,the,code,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,writer,object,graph,writer,writer,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalWriter(Object graph, Writer writer) 			throws XmlMappingException, IOException_;1368482696;Abstract template method for marshalling the given object graph to a {@code Writer}._@param graph the root of the object graph to marshal_@param writer the {@code Writer} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalWriter(Object graph, Writer writer)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,writer,the,code,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,writer,object,graph,writer,writer,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalWriter(Object graph, Writer writer) 			throws XmlMappingException, IOException_;1376041400;Abstract template method for marshalling the given object graph to a {@code Writer}._@param graph the root of the object graph to marshal_@param writer the {@code Writer} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalWriter(Object graph, Writer writer)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,writer,the,code,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,writer,object,graph,writer,writer,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalWriter(Object graph, Writer writer) 			throws XmlMappingException, IOException_;1392767670;Abstract template method for marshalling the given object graph to a {@code Writer}._@param graph the root of the object graph to marshal_@param writer the {@code Writer} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalWriter(Object graph, Writer writer)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,writer,the,code,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,writer,object,graph,writer,writer,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalWriter(Object graph, Writer writer) 			throws XmlMappingException, IOException_;1397058176;Abstract template method for marshalling the given object graph to a {@code Writer}._@param graph the root of the object graph to marshal_@param writer the {@code Writer} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalWriter(Object graph, Writer writer)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,writer,the,code,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,writer,object,graph,writer,writer,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalWriter(Object graph, Writer writer) 			throws XmlMappingException, IOException_;1397069887;Abstract template method for marshalling the given object graph to a {@code Writer}._@param graph the root of the object graph to marshal_@param writer the {@code Writer} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalWriter(Object graph, Writer writer)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,writer,the,code,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,writer,object,graph,writer,writer,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalWriter(Object graph, Writer writer) 			throws XmlMappingException, IOException_;1398638859;Abstract template method for marshalling the given object graph to a {@code Writer}._@param graph the root of the object graph to marshal_@param writer the {@code Writer} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalWriter(Object graph, Writer writer)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,writer,the,code,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,writer,object,graph,writer,writer,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalWriter(Object graph, Writer writer) 			throws XmlMappingException, IOException_;1400553912;Abstract template method for marshalling the given object graph to a {@code Writer}._@param graph the root of the object graph to marshal_@param writer the {@code Writer} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalWriter(Object graph, Writer writer)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,writer,the,code,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,writer,object,graph,writer,writer,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalWriter(Object graph, Writer writer) 			throws XmlMappingException, IOException_;1435665021;Abstract template method for marshalling the given object graph to a {@code Writer}._@param graph the root of the object graph to marshal_@param writer the {@code Writer} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalWriter(Object graph, Writer writer)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,writer,the,code,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,writer,object,graph,writer,writer,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalWriter(Object graph, Writer writer) 			throws XmlMappingException, IOException_;1455117733;Abstract template method for marshalling the given object graph to a {@code Writer}._@param graph the root of the object graph to marshal_@param writer the {@code Writer} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalWriter(Object graph, Writer writer)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,writer,the,code,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,writer,object,graph,writer,writer,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalWriter(Object graph, Writer writer) 			throws XmlMappingException, IOException_;1468948866;Abstract template method for marshalling the given object graph to a {@code Writer}._@param graph the root of the object graph to marshal_@param writer the {@code Writer} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalWriter(Object graph, Writer writer)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,writer,the,code,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,writer,object,graph,writer,writer,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalWriter(Object graph, Writer writer) 			throws XmlMappingException, IOException_;1483750478;Abstract template method for marshalling the given object graph to a {@code Writer}._@param graph the root of the object graph to marshal_@param writer the {@code Writer} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalWriter(Object graph, Writer writer)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,writer,the,code,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,writer,object,graph,writer,writer,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalWriter(Object graph, Writer writer) 			throws XmlMappingException, IOException_;1484301200;Abstract template method for marshalling the given object graph to a {@code Writer}._@param graph the root of the object graph to marshal_@param writer the {@code Writer} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalWriter(Object graph, Writer writer)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,writer,the,code,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,writer,object,graph,writer,writer,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalWriter(Object graph, Writer writer) 			throws XmlMappingException, IOException_;1495868221;Abstract template method for marshalling the given object graph to a {@code Writer}._@param graph the root of the object graph to marshal_@param writer the {@code Writer} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalWriter(Object graph, Writer writer)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,writer,the,code,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,writer,object,graph,writer,writer,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalWriter(Object graph, Writer writer) 			throws XmlMappingException, IOException_;1498780456;Abstract template method for marshalling the given object graph to a {@code Writer}._@param graph the root of the object graph to marshal_@param writer the {@code Writer} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalWriter(Object graph, Writer writer)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,writer,the,code,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,writer,object,graph,writer,writer,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalWriter(Object graph, Writer writer) 			throws XmlMappingException, IOException_;1518770299;Abstract template method for marshalling the given object graph to a {@code Writer}._@param graph the root of the object graph to marshal_@param writer the {@code Writer} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalWriter(Object graph, Writer writer)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,writer,the,code,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,writer,object,graph,writer,writer,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalWriter(Object graph, Writer writer) 			throws XmlMappingException, IOException_;1518770299;Abstract template method for marshalling the given object graph to a {@code Writer}._@param graph the root of the object graph to marshal_@param writer the {@code Writer} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalWriter(Object graph, Writer writer)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,writer,the,code,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,writer,object,graph,writer,writer,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalWriter(Object graph, Writer writer) 			throws XmlMappingException, IOException_;1530174524;Abstract template method for marshalling the given object graph to a {@code Writer}._@param graph the root of the object graph to marshal_@param writer the {@code Writer} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalWriter(Object graph, Writer writer)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,writer,the,code,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,writer,object,graph,writer,writer,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalWriter(Object graph, Writer writer) 			throws XmlMappingException, IOException_;1530174524;Abstract template method for marshalling the given object graph to a {@code Writer}._@param graph the root of the object graph to marshal_@param writer the {@code Writer} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalWriter(Object graph, Writer writer)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,writer,the,code,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,writer,object,graph,writer,writer,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException;1328020251;Template method for handling <code>DOMResult</code>s._<p>This implementation delegates to <code>marshalDomNode</code>._@param graph	the root of the object graph to marshal_@param domResult the <code>DOMResult</code>_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the <code>domResult</code> is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException {_		if (domResult.getNode() == null) {_			try {_				synchronized (this.documentBuilderFactoryMonitor) {_					if (this.documentBuilderFactory == null) {_						this.documentBuilderFactory = createDocumentBuilderFactory()__					}_				}_				DocumentBuilder documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__				domResult.setNode(documentBuilder.newDocument())__			}_			catch (ParserConfigurationException ex) {_				throw new UnmarshallingFailureException(_						"Could not create document placeholder for DOMResult: " + ex.getMessage(), ex)__			}_		}_		marshalDomNode(graph, domResult.getNode())__	};template,method,for,handling,code,domresult,code,s,p,this,implementation,delegates,to,code,marshal,dom,node,code,param,graph,the,root,of,the,object,graph,to,marshal,param,dom,result,the,code,domresult,code,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,code,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,dom,result,object,graph,domresult,dom,result,throws,xml,mapping,exception,if,dom,result,get,node,null,try,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,document,builder,create,document,builder,this,document,builder,factory,dom,result,set,node,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,for,domresult,ex,get,message,ex,marshal,dom,node,graph,dom,result,get,node
AbstractMarshaller -> protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException;1356735495;Template method for handling {@code DOMResult}s._<p>This implementation delegates to {@code marshalDomNode}._@param graph    the root of the object graph to marshal_@param domResult the {@code DOMResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException {_		if (domResult.getNode() == null) {_			try {_				synchronized (this.documentBuilderFactoryMonitor) {_					if (this.documentBuilderFactory == null) {_						this.documentBuilderFactory = createDocumentBuilderFactory()__					}_				}_				DocumentBuilder documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__				domResult.setNode(documentBuilder.newDocument())__			}_			catch (ParserConfigurationException ex) {_				throw new UnmarshallingFailureException(_						"Could not create document placeholder for DOMResult: " + ex.getMessage(), ex)__			}_		}_		marshalDomNode(graph, domResult.getNode())__	};template,method,for,handling,code,domresult,s,p,this,implementation,delegates,to,code,marshal,dom,node,param,graph,the,root,of,the,object,graph,to,marshal,param,dom,result,the,code,domresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,dom,result,object,graph,domresult,dom,result,throws,xml,mapping,exception,if,dom,result,get,node,null,try,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,document,builder,create,document,builder,this,document,builder,factory,dom,result,set,node,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,for,domresult,ex,get,message,ex,marshal,dom,node,graph,dom,result,get,node
AbstractMarshaller -> protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException;1357119239;Template method for handling {@code DOMResult}s._<p>This implementation delegates to {@code marshalDomNode}._@param graph    the root of the object graph to marshal_@param domResult the {@code DOMResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException {_		if (domResult.getNode() == null) {_			try {_				synchronized (this.documentBuilderFactoryMonitor) {_					if (this.documentBuilderFactory == null) {_						this.documentBuilderFactory = createDocumentBuilderFactory()__					}_				}_				DocumentBuilder documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__				domResult.setNode(documentBuilder.newDocument())__			}_			catch (ParserConfigurationException ex) {_				throw new UnmarshallingFailureException(_						"Could not create document placeholder for DOMResult: " + ex.getMessage(), ex)__			}_		}_		marshalDomNode(graph, domResult.getNode())__	};template,method,for,handling,code,domresult,s,p,this,implementation,delegates,to,code,marshal,dom,node,param,graph,the,root,of,the,object,graph,to,marshal,param,dom,result,the,code,domresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,dom,result,object,graph,domresult,dom,result,throws,xml,mapping,exception,if,dom,result,get,node,null,try,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,document,builder,create,document,builder,this,document,builder,factory,dom,result,set,node,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,for,domresult,ex,get,message,ex,marshal,dom,node,graph,dom,result,get,node
AbstractMarshaller -> protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException;1368482696;Template method for handling {@code DOMResult}s._<p>This implementation delegates to {@code marshalDomNode}._@param graph    the root of the object graph to marshal_@param domResult the {@code DOMResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException {_		if (domResult.getNode() == null) {_			try {_				synchronized (this.documentBuilderFactoryMonitor) {_					if (this.documentBuilderFactory == null) {_						this.documentBuilderFactory = createDocumentBuilderFactory()__					}_				}_				DocumentBuilder documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__				domResult.setNode(documentBuilder.newDocument())__			}_			catch (ParserConfigurationException ex) {_				throw new UnmarshallingFailureException(_						"Could not create document placeholder for DOMResult: " + ex.getMessage(), ex)__			}_		}_		marshalDomNode(graph, domResult.getNode())__	};template,method,for,handling,code,domresult,s,p,this,implementation,delegates,to,code,marshal,dom,node,param,graph,the,root,of,the,object,graph,to,marshal,param,dom,result,the,code,domresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,dom,result,object,graph,domresult,dom,result,throws,xml,mapping,exception,if,dom,result,get,node,null,try,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,document,builder,create,document,builder,this,document,builder,factory,dom,result,set,node,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,for,domresult,ex,get,message,ex,marshal,dom,node,graph,dom,result,get,node
AbstractMarshaller -> protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException;1376041400;Template method for handling {@code DOMResult}s._<p>This implementation delegates to {@code marshalDomNode}._@param graph the root of the object graph to marshal_@param domResult the {@code DOMResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException {_		if (domResult.getNode() == null) {_			try {_				synchronized (this.documentBuilderFactoryMonitor) {_					if (this.documentBuilderFactory == null) {_						this.documentBuilderFactory = createDocumentBuilderFactory()__					}_				}_				DocumentBuilder documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__				domResult.setNode(documentBuilder.newDocument())__			}_			catch (ParserConfigurationException ex) {_				throw new UnmarshallingFailureException(_						"Could not create document placeholder for DOMResult: " + ex.getMessage(), ex)__			}_		}_		marshalDomNode(graph, domResult.getNode())__	};template,method,for,handling,code,domresult,s,p,this,implementation,delegates,to,code,marshal,dom,node,param,graph,the,root,of,the,object,graph,to,marshal,param,dom,result,the,code,domresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,dom,result,object,graph,domresult,dom,result,throws,xml,mapping,exception,if,dom,result,get,node,null,try,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,document,builder,create,document,builder,this,document,builder,factory,dom,result,set,node,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,for,domresult,ex,get,message,ex,marshal,dom,node,graph,dom,result,get,node
AbstractMarshaller -> protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException;1392767670;Template method for handling {@code DOMResult}s._<p>This implementation delegates to {@code marshalDomNode}._@param graph the root of the object graph to marshal_@param domResult the {@code DOMResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException {_		if (domResult.getNode() == null) {_			try {_				synchronized (this.documentBuilderFactoryMonitor) {_					if (this.documentBuilderFactory == null) {_						this.documentBuilderFactory = createDocumentBuilderFactory()__					}_				}_				DocumentBuilder documentBuilder = createDocumentBuilder(this.documentBuilderFactory)__				domResult.setNode(documentBuilder.newDocument())__			}_			catch (ParserConfigurationException ex) {_				throw new UnmarshallingFailureException(_						"Could not create document placeholder for DOMResult: " + ex.getMessage(), ex)__			}_		}_		marshalDomNode(graph, domResult.getNode())__	};template,method,for,handling,code,domresult,s,p,this,implementation,delegates,to,code,marshal,dom,node,param,graph,the,root,of,the,object,graph,to,marshal,param,dom,result,the,code,domresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,dom,result,object,graph,domresult,dom,result,throws,xml,mapping,exception,if,dom,result,get,node,null,try,synchronized,this,document,builder,factory,monitor,if,this,document,builder,factory,null,this,document,builder,factory,create,document,builder,factory,document,builder,document,builder,create,document,builder,this,document,builder,factory,dom,result,set,node,document,builder,new,document,catch,parser,configuration,exception,ex,throw,new,unmarshalling,failure,exception,could,not,create,document,placeholder,for,domresult,ex,get,message,ex,marshal,dom,node,graph,dom,result,get,node
AbstractMarshaller -> protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException;1397058176;Template method for handling {@code DOMResult}s._<p>This implementation delegates to {@code marshalDomNode}._@param graph the root of the object graph to marshal_@param domResult the {@code DOMResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException {_		if (domResult.getNode() == null) {_			domResult.setNode(buildDocument())__		}_		marshalDomNode(graph, domResult.getNode())__	};template,method,for,handling,code,domresult,s,p,this,implementation,delegates,to,code,marshal,dom,node,param,graph,the,root,of,the,object,graph,to,marshal,param,dom,result,the,code,domresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,dom,result,object,graph,domresult,dom,result,throws,xml,mapping,exception,if,dom,result,get,node,null,dom,result,set,node,build,document,marshal,dom,node,graph,dom,result,get,node
AbstractMarshaller -> protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException;1397069887;Template method for handling {@code DOMResult}s._<p>This implementation delegates to {@code marshalDomNode}._@param graph the root of the object graph to marshal_@param domResult the {@code DOMResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException {_		if (domResult.getNode() == null) {_			domResult.setNode(buildDocument())__		}_		marshalDomNode(graph, domResult.getNode())__	};template,method,for,handling,code,domresult,s,p,this,implementation,delegates,to,code,marshal,dom,node,param,graph,the,root,of,the,object,graph,to,marshal,param,dom,result,the,code,domresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,dom,result,object,graph,domresult,dom,result,throws,xml,mapping,exception,if,dom,result,get,node,null,dom,result,set,node,build,document,marshal,dom,node,graph,dom,result,get,node
AbstractMarshaller -> protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException;1398638859;Template method for handling {@code DOMResult}s._<p>This implementation delegates to {@code marshalDomNode}._@param graph the root of the object graph to marshal_@param domResult the {@code DOMResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException {_		if (domResult.getNode() == null) {_			domResult.setNode(buildDocument())__		}_		marshalDomNode(graph, domResult.getNode())__	};template,method,for,handling,code,domresult,s,p,this,implementation,delegates,to,code,marshal,dom,node,param,graph,the,root,of,the,object,graph,to,marshal,param,dom,result,the,code,domresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,dom,result,object,graph,domresult,dom,result,throws,xml,mapping,exception,if,dom,result,get,node,null,dom,result,set,node,build,document,marshal,dom,node,graph,dom,result,get,node
AbstractMarshaller -> protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException;1400553912;Template method for handling {@code DOMResult}s._<p>This implementation delegates to {@code marshalDomNode}._@param graph the root of the object graph to marshal_@param domResult the {@code DOMResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException {_		if (domResult.getNode() == null) {_			domResult.setNode(buildDocument())__		}_		marshalDomNode(graph, domResult.getNode())__	};template,method,for,handling,code,domresult,s,p,this,implementation,delegates,to,code,marshal,dom,node,param,graph,the,root,of,the,object,graph,to,marshal,param,dom,result,the,code,domresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,dom,result,object,graph,domresult,dom,result,throws,xml,mapping,exception,if,dom,result,get,node,null,dom,result,set,node,build,document,marshal,dom,node,graph,dom,result,get,node
AbstractMarshaller -> protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException;1435665021;Template method for handling {@code DOMResult}s._<p>This implementation delegates to {@code marshalDomNode}._@param graph the root of the object graph to marshal_@param domResult the {@code DOMResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException {_		if (domResult.getNode() == null) {_			domResult.setNode(buildDocument())__		}_		marshalDomNode(graph, domResult.getNode())__	};template,method,for,handling,code,domresult,s,p,this,implementation,delegates,to,code,marshal,dom,node,param,graph,the,root,of,the,object,graph,to,marshal,param,dom,result,the,code,domresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,dom,result,object,graph,domresult,dom,result,throws,xml,mapping,exception,if,dom,result,get,node,null,dom,result,set,node,build,document,marshal,dom,node,graph,dom,result,get,node
AbstractMarshaller -> protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException;1455117733;Template method for handling {@code DOMResult}s._<p>This implementation delegates to {@code marshalDomNode}._@param graph the root of the object graph to marshal_@param domResult the {@code DOMResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException {_		if (domResult.getNode() == null) {_			domResult.setNode(buildDocument())__		}_		marshalDomNode(graph, domResult.getNode())__	};template,method,for,handling,code,domresult,s,p,this,implementation,delegates,to,code,marshal,dom,node,param,graph,the,root,of,the,object,graph,to,marshal,param,dom,result,the,code,domresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,dom,result,object,graph,domresult,dom,result,throws,xml,mapping,exception,if,dom,result,get,node,null,dom,result,set,node,build,document,marshal,dom,node,graph,dom,result,get,node
AbstractMarshaller -> protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException;1468948866;Template method for handling {@code DOMResult}s._<p>This implementation delegates to {@code marshalDomNode}._@param graph the root of the object graph to marshal_@param domResult the {@code DOMResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException {_		if (domResult.getNode() == null) {_			domResult.setNode(buildDocument())__		}_		marshalDomNode(graph, domResult.getNode())__	};template,method,for,handling,code,domresult,s,p,this,implementation,delegates,to,code,marshal,dom,node,param,graph,the,root,of,the,object,graph,to,marshal,param,dom,result,the,code,domresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,dom,result,object,graph,domresult,dom,result,throws,xml,mapping,exception,if,dom,result,get,node,null,dom,result,set,node,build,document,marshal,dom,node,graph,dom,result,get,node
AbstractMarshaller -> protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException;1483750478;Template method for handling {@code DOMResult}s._<p>This implementation delegates to {@code marshalDomNode}._@param graph the root of the object graph to marshal_@param domResult the {@code DOMResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException {_		if (domResult.getNode() == null) {_			domResult.setNode(buildDocument())__		}_		marshalDomNode(graph, domResult.getNode())__	};template,method,for,handling,code,domresult,s,p,this,implementation,delegates,to,code,marshal,dom,node,param,graph,the,root,of,the,object,graph,to,marshal,param,dom,result,the,code,domresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,dom,result,object,graph,domresult,dom,result,throws,xml,mapping,exception,if,dom,result,get,node,null,dom,result,set,node,build,document,marshal,dom,node,graph,dom,result,get,node
AbstractMarshaller -> protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException;1484301200;Template method for handling {@code DOMResult}s._<p>This implementation delegates to {@code marshalDomNode}._@param graph the root of the object graph to marshal_@param domResult the {@code DOMResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException {_		if (domResult.getNode() == null) {_			domResult.setNode(buildDocument())__		}_		marshalDomNode(graph, domResult.getNode())__	};template,method,for,handling,code,domresult,s,p,this,implementation,delegates,to,code,marshal,dom,node,param,graph,the,root,of,the,object,graph,to,marshal,param,dom,result,the,code,domresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,dom,result,object,graph,domresult,dom,result,throws,xml,mapping,exception,if,dom,result,get,node,null,dom,result,set,node,build,document,marshal,dom,node,graph,dom,result,get,node
AbstractMarshaller -> protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException;1495868221;Template method for handling {@code DOMResult}s._<p>This implementation delegates to {@code marshalDomNode}._@param graph the root of the object graph to marshal_@param domResult the {@code DOMResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException {_		if (domResult.getNode() == null) {_			domResult.setNode(buildDocument())__		}_		marshalDomNode(graph, domResult.getNode())__	};template,method,for,handling,code,domresult,s,p,this,implementation,delegates,to,code,marshal,dom,node,param,graph,the,root,of,the,object,graph,to,marshal,param,dom,result,the,code,domresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,dom,result,object,graph,domresult,dom,result,throws,xml,mapping,exception,if,dom,result,get,node,null,dom,result,set,node,build,document,marshal,dom,node,graph,dom,result,get,node
AbstractMarshaller -> protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException;1498780456;Template method for handling {@code DOMResult}s._<p>This implementation delegates to {@code marshalDomNode}._@param graph the root of the object graph to marshal_@param domResult the {@code DOMResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException {_		if (domResult.getNode() == null) {_			domResult.setNode(buildDocument())__		}_		marshalDomNode(graph, domResult.getNode())__	};template,method,for,handling,code,domresult,s,p,this,implementation,delegates,to,code,marshal,dom,node,param,graph,the,root,of,the,object,graph,to,marshal,param,dom,result,the,code,domresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,dom,result,object,graph,domresult,dom,result,throws,xml,mapping,exception,if,dom,result,get,node,null,dom,result,set,node,build,document,marshal,dom,node,graph,dom,result,get,node
AbstractMarshaller -> protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException;1518770299;Template method for handling {@code DOMResult}s._<p>This implementation delegates to {@code marshalDomNode}._@param graph the root of the object graph to marshal_@param domResult the {@code DOMResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException {_		if (domResult.getNode() == null) {_			domResult.setNode(buildDocument())__		}_		marshalDomNode(graph, domResult.getNode())__	};template,method,for,handling,code,domresult,s,p,this,implementation,delegates,to,code,marshal,dom,node,param,graph,the,root,of,the,object,graph,to,marshal,param,dom,result,the,code,domresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,dom,result,object,graph,domresult,dom,result,throws,xml,mapping,exception,if,dom,result,get,node,null,dom,result,set,node,build,document,marshal,dom,node,graph,dom,result,get,node
AbstractMarshaller -> protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException;1518770299;Template method for handling {@code DOMResult}s._<p>This implementation delegates to {@code marshalDomNode}._@param graph the root of the object graph to marshal_@param domResult the {@code DOMResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException {_		if (domResult.getNode() == null) {_			domResult.setNode(buildDocument())__		}_		marshalDomNode(graph, domResult.getNode())__	};template,method,for,handling,code,domresult,s,p,this,implementation,delegates,to,code,marshal,dom,node,param,graph,the,root,of,the,object,graph,to,marshal,param,dom,result,the,code,domresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,dom,result,object,graph,domresult,dom,result,throws,xml,mapping,exception,if,dom,result,get,node,null,dom,result,set,node,build,document,marshal,dom,node,graph,dom,result,get,node
AbstractMarshaller -> protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException;1530174524;Template method for handling {@code DOMResult}s._<p>This implementation delegates to {@code marshalDomNode}._@param graph the root of the object graph to marshal_@param domResult the {@code DOMResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException {_		if (domResult.getNode() == null) {_			domResult.setNode(buildDocument())__		}_		marshalDomNode(graph, domResult.getNode())__	};template,method,for,handling,code,domresult,s,p,this,implementation,delegates,to,code,marshal,dom,node,param,graph,the,root,of,the,object,graph,to,marshal,param,dom,result,the,code,domresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,dom,result,object,graph,domresult,dom,result,throws,xml,mapping,exception,if,dom,result,get,node,null,dom,result,set,node,build,document,marshal,dom,node,graph,dom,result,get,node
AbstractMarshaller -> protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException;1530174524;Template method for handling {@code DOMResult}s._<p>This implementation delegates to {@code marshalDomNode}._@param graph the root of the object graph to marshal_@param domResult the {@code DOMResult}_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if the {@code domResult} is empty_@see #marshalDomNode(Object, org.w3c.dom.Node);protected void marshalDomResult(Object graph, DOMResult domResult) throws XmlMappingException {_		if (domResult.getNode() == null) {_			domResult.setNode(buildDocument())__		}_		marshalDomNode(graph, domResult.getNode())__	};template,method,for,handling,code,domresult,s,p,this,implementation,delegates,to,code,marshal,dom,node,param,graph,the,root,of,the,object,graph,to,marshal,param,dom,result,the,code,domresult,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,the,code,dom,result,is,empty,see,marshal,dom,node,object,org,w3c,dom,node;protected,void,marshal,dom,result,object,graph,domresult,dom,result,throws,xml,mapping,exception,if,dom,result,get,node,null,dom,result,set,node,build,document,marshal,dom,node,graph,dom,result,get,node
AbstractMarshaller -> protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) 			throws XmlMappingException_;1328020251;Abstract template method for marshalling the given object to a StAX <code>XMLEventWriter</code>._@param graph	the root of the object graph to marshal_@param eventWriter the <code>XMLEventWriter</code> to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlevent,writer,code,param,graph,the,root,of,the,object,graph,to,marshal,param,event,writer,the,code,xmlevent,writer,code,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,event,writer,object,graph,xmlevent,writer,event,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) 			throws XmlMappingException_;1356735495;Abstract template method for marshalling the given object to a StAX {@code XMLEventWriter}._@param graph    the root of the object graph to marshal_@param eventWriter the {@code XMLEventWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlevent,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,event,writer,the,code,xmlevent,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,event,writer,object,graph,xmlevent,writer,event,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) 			throws XmlMappingException_;1357119239;Abstract template method for marshalling the given object to a StAX {@code XMLEventWriter}._@param graph    the root of the object graph to marshal_@param eventWriter the {@code XMLEventWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlevent,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,event,writer,the,code,xmlevent,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,event,writer,object,graph,xmlevent,writer,event,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) 			throws XmlMappingException_;1368482696;Abstract template method for marshalling the given object to a StAX {@code XMLEventWriter}._@param graph    the root of the object graph to marshal_@param eventWriter the {@code XMLEventWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlevent,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,event,writer,the,code,xmlevent,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,event,writer,object,graph,xmlevent,writer,event,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) 			throws XmlMappingException_;1376041400;Abstract template method for marshalling the given object to a StAX {@code XMLEventWriter}._@param graph the root of the object graph to marshal_@param eventWriter the {@code XMLEventWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlevent,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,event,writer,the,code,xmlevent,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,event,writer,object,graph,xmlevent,writer,event,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) 			throws XmlMappingException_;1392767670;Abstract template method for marshalling the given object to a StAX {@code XMLEventWriter}._@param graph the root of the object graph to marshal_@param eventWriter the {@code XMLEventWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlevent,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,event,writer,the,code,xmlevent,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,event,writer,object,graph,xmlevent,writer,event,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) 			throws XmlMappingException_;1397058176;Abstract template method for marshalling the given object to a StAX {@code XMLEventWriter}._@param graph the root of the object graph to marshal_@param eventWriter the {@code XMLEventWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlevent,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,event,writer,the,code,xmlevent,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,event,writer,object,graph,xmlevent,writer,event,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) 			throws XmlMappingException_;1397069887;Abstract template method for marshalling the given object to a StAX {@code XMLEventWriter}._@param graph the root of the object graph to marshal_@param eventWriter the {@code XMLEventWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlevent,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,event,writer,the,code,xmlevent,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,event,writer,object,graph,xmlevent,writer,event,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) 			throws XmlMappingException_;1398638859;Abstract template method for marshalling the given object to a StAX {@code XMLEventWriter}._@param graph the root of the object graph to marshal_@param eventWriter the {@code XMLEventWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlevent,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,event,writer,the,code,xmlevent,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,event,writer,object,graph,xmlevent,writer,event,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) 			throws XmlMappingException_;1400553912;Abstract template method for marshalling the given object to a StAX {@code XMLEventWriter}._@param graph the root of the object graph to marshal_@param eventWriter the {@code XMLEventWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlevent,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,event,writer,the,code,xmlevent,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,event,writer,object,graph,xmlevent,writer,event,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) 			throws XmlMappingException_;1435665021;Abstract template method for marshalling the given object to a StAX {@code XMLEventWriter}._@param graph the root of the object graph to marshal_@param eventWriter the {@code XMLEventWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlevent,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,event,writer,the,code,xmlevent,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,event,writer,object,graph,xmlevent,writer,event,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) 			throws XmlMappingException_;1455117733;Abstract template method for marshalling the given object to a StAX {@code XMLEventWriter}._@param graph the root of the object graph to marshal_@param eventWriter the {@code XMLEventWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlevent,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,event,writer,the,code,xmlevent,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,event,writer,object,graph,xmlevent,writer,event,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) 			throws XmlMappingException_;1468948866;Abstract template method for marshalling the given object to a StAX {@code XMLEventWriter}._@param graph the root of the object graph to marshal_@param eventWriter the {@code XMLEventWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlevent,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,event,writer,the,code,xmlevent,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,event,writer,object,graph,xmlevent,writer,event,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) 			throws XmlMappingException_;1483750478;Abstract template method for marshalling the given object to a StAX {@code XMLEventWriter}._@param graph the root of the object graph to marshal_@param eventWriter the {@code XMLEventWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlevent,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,event,writer,the,code,xmlevent,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,event,writer,object,graph,xmlevent,writer,event,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) 			throws XmlMappingException_;1484301200;Abstract template method for marshalling the given object to a StAX {@code XMLEventWriter}._@param graph the root of the object graph to marshal_@param eventWriter the {@code XMLEventWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlevent,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,event,writer,the,code,xmlevent,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,event,writer,object,graph,xmlevent,writer,event,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) 			throws XmlMappingException_;1495868221;Abstract template method for marshalling the given object to a StAX {@code XMLEventWriter}._@param graph the root of the object graph to marshal_@param eventWriter the {@code XMLEventWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlevent,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,event,writer,the,code,xmlevent,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,event,writer,object,graph,xmlevent,writer,event,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) 			throws XmlMappingException_;1498780456;Abstract template method for marshalling the given object to a StAX {@code XMLEventWriter}._@param graph the root of the object graph to marshal_@param eventWriter the {@code XMLEventWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlevent,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,event,writer,the,code,xmlevent,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,event,writer,object,graph,xmlevent,writer,event,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) 			throws XmlMappingException_;1518770299;Abstract template method for marshalling the given object to a StAX {@code XMLEventWriter}._@param graph the root of the object graph to marshal_@param eventWriter the {@code XMLEventWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlevent,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,event,writer,the,code,xmlevent,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,event,writer,object,graph,xmlevent,writer,event,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) 			throws XmlMappingException_;1518770299;Abstract template method for marshalling the given object to a StAX {@code XMLEventWriter}._@param graph the root of the object graph to marshal_@param eventWriter the {@code XMLEventWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlevent,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,event,writer,the,code,xmlevent,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,event,writer,object,graph,xmlevent,writer,event,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) 			throws XmlMappingException_;1530174524;Abstract template method for marshalling the given object to a StAX {@code XMLEventWriter}._@param graph the root of the object graph to marshal_@param eventWriter the {@code XMLEventWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlevent,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,event,writer,the,code,xmlevent,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,event,writer,object,graph,xmlevent,writer,event,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter) 			throws XmlMappingException_;1530174524;Abstract template method for marshalling the given object to a StAX {@code XMLEventWriter}._@param graph the root of the object graph to marshal_@param eventWriter the {@code XMLEventWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlEventWriter(Object graph, XMLEventWriter eventWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlevent,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,event,writer,the,code,xmlevent,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,event,writer,object,graph,xmlevent,writer,event,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) 			throws XmlMappingException_;1328020251;Abstract template method for marshalling the given object to a StAX <code>XMLStreamWriter</code>._@param graph the root of the object graph to marshal_@param streamWriter the <code>XMLStreamWriter</code> to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlstream,writer,code,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,writer,the,code,xmlstream,writer,code,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,stream,writer,object,graph,xmlstream,writer,stream,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) 			throws XmlMappingException_;1356735495;Abstract template method for marshalling the given object to a StAX {@code XMLStreamWriter}._@param graph the root of the object graph to marshal_@param streamWriter the {@code XMLStreamWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlstream,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,writer,the,code,xmlstream,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,stream,writer,object,graph,xmlstream,writer,stream,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) 			throws XmlMappingException_;1357119239;Abstract template method for marshalling the given object to a StAX {@code XMLStreamWriter}._@param graph the root of the object graph to marshal_@param streamWriter the {@code XMLStreamWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlstream,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,writer,the,code,xmlstream,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,stream,writer,object,graph,xmlstream,writer,stream,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) 			throws XmlMappingException_;1368482696;Abstract template method for marshalling the given object to a StAX {@code XMLStreamWriter}._@param graph the root of the object graph to marshal_@param streamWriter the {@code XMLStreamWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlstream,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,writer,the,code,xmlstream,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,stream,writer,object,graph,xmlstream,writer,stream,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) 			throws XmlMappingException_;1376041400;Abstract template method for marshalling the given object to a StAX {@code XMLStreamWriter}._@param graph the root of the object graph to marshal_@param streamWriter the {@code XMLStreamWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlstream,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,writer,the,code,xmlstream,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,stream,writer,object,graph,xmlstream,writer,stream,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) 			throws XmlMappingException_;1392767670;Abstract template method for marshalling the given object to a StAX {@code XMLStreamWriter}._@param graph the root of the object graph to marshal_@param streamWriter the {@code XMLStreamWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlstream,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,writer,the,code,xmlstream,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,stream,writer,object,graph,xmlstream,writer,stream,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) 			throws XmlMappingException_;1397058176;Abstract template method for marshalling the given object to a StAX {@code XMLStreamWriter}._@param graph the root of the object graph to marshal_@param streamWriter the {@code XMLStreamWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlstream,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,writer,the,code,xmlstream,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,stream,writer,object,graph,xmlstream,writer,stream,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) 			throws XmlMappingException_;1397069887;Abstract template method for marshalling the given object to a StAX {@code XMLStreamWriter}._@param graph the root of the object graph to marshal_@param streamWriter the {@code XMLStreamWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlstream,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,writer,the,code,xmlstream,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,stream,writer,object,graph,xmlstream,writer,stream,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) 			throws XmlMappingException_;1398638859;Abstract template method for marshalling the given object to a StAX {@code XMLStreamWriter}._@param graph the root of the object graph to marshal_@param streamWriter the {@code XMLStreamWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlstream,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,writer,the,code,xmlstream,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,stream,writer,object,graph,xmlstream,writer,stream,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) 			throws XmlMappingException_;1400553912;Abstract template method for marshalling the given object to a StAX {@code XMLStreamWriter}._@param graph the root of the object graph to marshal_@param streamWriter the {@code XMLStreamWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlstream,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,writer,the,code,xmlstream,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,stream,writer,object,graph,xmlstream,writer,stream,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) 			throws XmlMappingException_;1435665021;Abstract template method for marshalling the given object to a StAX {@code XMLStreamWriter}._@param graph the root of the object graph to marshal_@param streamWriter the {@code XMLStreamWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlstream,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,writer,the,code,xmlstream,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,stream,writer,object,graph,xmlstream,writer,stream,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) 			throws XmlMappingException_;1455117733;Abstract template method for marshalling the given object to a StAX {@code XMLStreamWriter}._@param graph the root of the object graph to marshal_@param streamWriter the {@code XMLStreamWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlstream,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,writer,the,code,xmlstream,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,stream,writer,object,graph,xmlstream,writer,stream,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) 			throws XmlMappingException_;1468948866;Abstract template method for marshalling the given object to a StAX {@code XMLStreamWriter}._@param graph the root of the object graph to marshal_@param streamWriter the {@code XMLStreamWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlstream,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,writer,the,code,xmlstream,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,stream,writer,object,graph,xmlstream,writer,stream,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) 			throws XmlMappingException_;1483750478;Abstract template method for marshalling the given object to a StAX {@code XMLStreamWriter}._@param graph the root of the object graph to marshal_@param streamWriter the {@code XMLStreamWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlstream,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,writer,the,code,xmlstream,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,stream,writer,object,graph,xmlstream,writer,stream,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) 			throws XmlMappingException_;1484301200;Abstract template method for marshalling the given object to a StAX {@code XMLStreamWriter}._@param graph the root of the object graph to marshal_@param streamWriter the {@code XMLStreamWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlstream,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,writer,the,code,xmlstream,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,stream,writer,object,graph,xmlstream,writer,stream,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) 			throws XmlMappingException_;1495868221;Abstract template method for marshalling the given object to a StAX {@code XMLStreamWriter}._@param graph the root of the object graph to marshal_@param streamWriter the {@code XMLStreamWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlstream,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,writer,the,code,xmlstream,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,stream,writer,object,graph,xmlstream,writer,stream,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) 			throws XmlMappingException_;1498780456;Abstract template method for marshalling the given object to a StAX {@code XMLStreamWriter}._@param graph the root of the object graph to marshal_@param streamWriter the {@code XMLStreamWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlstream,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,writer,the,code,xmlstream,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,stream,writer,object,graph,xmlstream,writer,stream,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) 			throws XmlMappingException_;1518770299;Abstract template method for marshalling the given object to a StAX {@code XMLStreamWriter}._@param graph the root of the object graph to marshal_@param streamWriter the {@code XMLStreamWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlstream,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,writer,the,code,xmlstream,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,stream,writer,object,graph,xmlstream,writer,stream,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) 			throws XmlMappingException_;1518770299;Abstract template method for marshalling the given object to a StAX {@code XMLStreamWriter}._@param graph the root of the object graph to marshal_@param streamWriter the {@code XMLStreamWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlstream,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,writer,the,code,xmlstream,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,stream,writer,object,graph,xmlstream,writer,stream,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) 			throws XmlMappingException_;1530174524;Abstract template method for marshalling the given object to a StAX {@code XMLStreamWriter}._@param graph the root of the object graph to marshal_@param streamWriter the {@code XMLStreamWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlstream,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,writer,the,code,xmlstream,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,stream,writer,object,graph,xmlstream,writer,stream,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter) 			throws XmlMappingException_;1530174524;Abstract template method for marshalling the given object to a StAX {@code XMLStreamWriter}._@param graph the root of the object graph to marshal_@param streamWriter the {@code XMLStreamWriter} to write to_@throws XmlMappingException if the given object cannot be marshalled to the DOM node;protected abstract void marshalXmlStreamWriter(Object graph, XMLStreamWriter streamWriter)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,to,a,st,ax,code,xmlstream,writer,param,graph,the,root,of,the,object,graph,to,marshal,param,stream,writer,the,code,xmlstream,writer,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,dom,node;protected,abstract,void,marshal,xml,stream,writer,object,graph,xmlstream,writer,stream,writer,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalOutputStream(Object graph, OutputStream outputStream) 			throws XmlMappingException, IOException_;1328020251;Abstract template method for marshalling the given object graph to a <code>OutputStream</code>._@param graph the root of the object graph to marshal_@param outputStream the <code>OutputStream</code> to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalOutputStream(Object graph, OutputStream outputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,output,stream,code,param,graph,the,root,of,the,object,graph,to,marshal,param,output,stream,the,code,output,stream,code,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,output,stream,object,graph,output,stream,output,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalOutputStream(Object graph, OutputStream outputStream) 			throws XmlMappingException, IOException_;1356735495;Abstract template method for marshalling the given object graph to a {@code OutputStream}._@param graph the root of the object graph to marshal_@param outputStream the {@code OutputStream} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalOutputStream(Object graph, OutputStream outputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,output,stream,param,graph,the,root,of,the,object,graph,to,marshal,param,output,stream,the,code,output,stream,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,output,stream,object,graph,output,stream,output,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalOutputStream(Object graph, OutputStream outputStream) 			throws XmlMappingException, IOException_;1357119239;Abstract template method for marshalling the given object graph to a {@code OutputStream}._@param graph the root of the object graph to marshal_@param outputStream the {@code OutputStream} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalOutputStream(Object graph, OutputStream outputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,output,stream,param,graph,the,root,of,the,object,graph,to,marshal,param,output,stream,the,code,output,stream,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,output,stream,object,graph,output,stream,output,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalOutputStream(Object graph, OutputStream outputStream) 			throws XmlMappingException, IOException_;1368482696;Abstract template method for marshalling the given object graph to a {@code OutputStream}._@param graph the root of the object graph to marshal_@param outputStream the {@code OutputStream} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalOutputStream(Object graph, OutputStream outputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,output,stream,param,graph,the,root,of,the,object,graph,to,marshal,param,output,stream,the,code,output,stream,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,output,stream,object,graph,output,stream,output,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalOutputStream(Object graph, OutputStream outputStream) 			throws XmlMappingException, IOException_;1376041400;Abstract template method for marshalling the given object graph to a {@code OutputStream}._@param graph the root of the object graph to marshal_@param outputStream the {@code OutputStream} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalOutputStream(Object graph, OutputStream outputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,output,stream,param,graph,the,root,of,the,object,graph,to,marshal,param,output,stream,the,code,output,stream,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,output,stream,object,graph,output,stream,output,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalOutputStream(Object graph, OutputStream outputStream) 			throws XmlMappingException, IOException_;1392767670;Abstract template method for marshalling the given object graph to a {@code OutputStream}._@param graph the root of the object graph to marshal_@param outputStream the {@code OutputStream} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalOutputStream(Object graph, OutputStream outputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,output,stream,param,graph,the,root,of,the,object,graph,to,marshal,param,output,stream,the,code,output,stream,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,output,stream,object,graph,output,stream,output,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalOutputStream(Object graph, OutputStream outputStream) 			throws XmlMappingException, IOException_;1397058176;Abstract template method for marshalling the given object graph to a {@code OutputStream}._@param graph the root of the object graph to marshal_@param outputStream the {@code OutputStream} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalOutputStream(Object graph, OutputStream outputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,output,stream,param,graph,the,root,of,the,object,graph,to,marshal,param,output,stream,the,code,output,stream,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,output,stream,object,graph,output,stream,output,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalOutputStream(Object graph, OutputStream outputStream) 			throws XmlMappingException, IOException_;1397069887;Abstract template method for marshalling the given object graph to a {@code OutputStream}._@param graph the root of the object graph to marshal_@param outputStream the {@code OutputStream} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalOutputStream(Object graph, OutputStream outputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,output,stream,param,graph,the,root,of,the,object,graph,to,marshal,param,output,stream,the,code,output,stream,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,output,stream,object,graph,output,stream,output,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalOutputStream(Object graph, OutputStream outputStream) 			throws XmlMappingException, IOException_;1398638859;Abstract template method for marshalling the given object graph to a {@code OutputStream}._@param graph the root of the object graph to marshal_@param outputStream the {@code OutputStream} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalOutputStream(Object graph, OutputStream outputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,output,stream,param,graph,the,root,of,the,object,graph,to,marshal,param,output,stream,the,code,output,stream,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,output,stream,object,graph,output,stream,output,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalOutputStream(Object graph, OutputStream outputStream) 			throws XmlMappingException, IOException_;1400553912;Abstract template method for marshalling the given object graph to a {@code OutputStream}._@param graph the root of the object graph to marshal_@param outputStream the {@code OutputStream} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalOutputStream(Object graph, OutputStream outputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,output,stream,param,graph,the,root,of,the,object,graph,to,marshal,param,output,stream,the,code,output,stream,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,output,stream,object,graph,output,stream,output,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalOutputStream(Object graph, OutputStream outputStream) 			throws XmlMappingException, IOException_;1435665021;Abstract template method for marshalling the given object graph to a {@code OutputStream}._@param graph the root of the object graph to marshal_@param outputStream the {@code OutputStream} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalOutputStream(Object graph, OutputStream outputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,output,stream,param,graph,the,root,of,the,object,graph,to,marshal,param,output,stream,the,code,output,stream,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,output,stream,object,graph,output,stream,output,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalOutputStream(Object graph, OutputStream outputStream) 			throws XmlMappingException, IOException_;1455117733;Abstract template method for marshalling the given object graph to a {@code OutputStream}._@param graph the root of the object graph to marshal_@param outputStream the {@code OutputStream} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalOutputStream(Object graph, OutputStream outputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,output,stream,param,graph,the,root,of,the,object,graph,to,marshal,param,output,stream,the,code,output,stream,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,output,stream,object,graph,output,stream,output,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalOutputStream(Object graph, OutputStream outputStream) 			throws XmlMappingException, IOException_;1468948866;Abstract template method for marshalling the given object graph to a {@code OutputStream}._@param graph the root of the object graph to marshal_@param outputStream the {@code OutputStream} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalOutputStream(Object graph, OutputStream outputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,output,stream,param,graph,the,root,of,the,object,graph,to,marshal,param,output,stream,the,code,output,stream,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,output,stream,object,graph,output,stream,output,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalOutputStream(Object graph, OutputStream outputStream) 			throws XmlMappingException, IOException_;1483750478;Abstract template method for marshalling the given object graph to a {@code OutputStream}._@param graph the root of the object graph to marshal_@param outputStream the {@code OutputStream} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalOutputStream(Object graph, OutputStream outputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,output,stream,param,graph,the,root,of,the,object,graph,to,marshal,param,output,stream,the,code,output,stream,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,output,stream,object,graph,output,stream,output,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalOutputStream(Object graph, OutputStream outputStream) 			throws XmlMappingException, IOException_;1484301200;Abstract template method for marshalling the given object graph to a {@code OutputStream}._@param graph the root of the object graph to marshal_@param outputStream the {@code OutputStream} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalOutputStream(Object graph, OutputStream outputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,output,stream,param,graph,the,root,of,the,object,graph,to,marshal,param,output,stream,the,code,output,stream,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,output,stream,object,graph,output,stream,output,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalOutputStream(Object graph, OutputStream outputStream) 			throws XmlMappingException, IOException_;1495868221;Abstract template method for marshalling the given object graph to a {@code OutputStream}._@param graph the root of the object graph to marshal_@param outputStream the {@code OutputStream} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalOutputStream(Object graph, OutputStream outputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,output,stream,param,graph,the,root,of,the,object,graph,to,marshal,param,output,stream,the,code,output,stream,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,output,stream,object,graph,output,stream,output,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalOutputStream(Object graph, OutputStream outputStream) 			throws XmlMappingException, IOException_;1498780456;Abstract template method for marshalling the given object graph to a {@code OutputStream}._@param graph the root of the object graph to marshal_@param outputStream the {@code OutputStream} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalOutputStream(Object graph, OutputStream outputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,output,stream,param,graph,the,root,of,the,object,graph,to,marshal,param,output,stream,the,code,output,stream,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,output,stream,object,graph,output,stream,output,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalOutputStream(Object graph, OutputStream outputStream) 			throws XmlMappingException, IOException_;1518770299;Abstract template method for marshalling the given object graph to a {@code OutputStream}._@param graph the root of the object graph to marshal_@param outputStream the {@code OutputStream} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalOutputStream(Object graph, OutputStream outputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,output,stream,param,graph,the,root,of,the,object,graph,to,marshal,param,output,stream,the,code,output,stream,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,output,stream,object,graph,output,stream,output,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalOutputStream(Object graph, OutputStream outputStream) 			throws XmlMappingException, IOException_;1518770299;Abstract template method for marshalling the given object graph to a {@code OutputStream}._@param graph the root of the object graph to marshal_@param outputStream the {@code OutputStream} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalOutputStream(Object graph, OutputStream outputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,output,stream,param,graph,the,root,of,the,object,graph,to,marshal,param,output,stream,the,code,output,stream,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,output,stream,object,graph,output,stream,output,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalOutputStream(Object graph, OutputStream outputStream) 			throws XmlMappingException, IOException_;1530174524;Abstract template method for marshalling the given object graph to a {@code OutputStream}._@param graph the root of the object graph to marshal_@param outputStream the {@code OutputStream} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalOutputStream(Object graph, OutputStream outputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,output,stream,param,graph,the,root,of,the,object,graph,to,marshal,param,output,stream,the,code,output,stream,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,output,stream,object,graph,output,stream,output,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> protected abstract void marshalOutputStream(Object graph, OutputStream outputStream) 			throws XmlMappingException, IOException_;1530174524;Abstract template method for marshalling the given object graph to a {@code OutputStream}._@param graph the root of the object graph to marshal_@param outputStream the {@code OutputStream} to write to_@throws XmlMappingException if the given object cannot be marshalled to the writer_@throws IOException if an I/O exception occurs;protected abstract void marshalOutputStream(Object graph, OutputStream outputStream)_			throws XmlMappingException, IOException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,code,output,stream,param,graph,the,root,of,the,object,graph,to,marshal,param,output,stream,the,code,output,stream,to,write,to,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,writer,throws,ioexception,if,an,i,o,exception,occurs;protected,abstract,void,marshal,output,stream,object,graph,output,stream,output,stream,throws,xml,mapping,exception,ioexception
AbstractMarshaller -> public boolean isProcessExternalEntities();1392767670;@return the configured value for whether XML external entities are allowed.;public boolean isProcessExternalEntities() {_		return this.processExternalEntities__	};return,the,configured,value,for,whether,xml,external,entities,are,allowed;public,boolean,is,process,external,entities,return,this,process,external,entities
AbstractMarshaller -> public boolean isProcessExternalEntities();1397058176;Returns the configured value for whether XML external entities are allowed._@see #createXmlReader();public boolean isProcessExternalEntities() {_		return this.processExternalEntities__	};returns,the,configured,value,for,whether,xml,external,entities,are,allowed,see,create,xml,reader;public,boolean,is,process,external,entities,return,this,process,external,entities
AbstractMarshaller -> public boolean isProcessExternalEntities();1397069887;Returns the configured value for whether XML external entities are allowed._@see #createXmlReader();public boolean isProcessExternalEntities() {_		return this.processExternalEntities__	};returns,the,configured,value,for,whether,xml,external,entities,are,allowed,see,create,xml,reader;public,boolean,is,process,external,entities,return,this,process,external,entities
AbstractMarshaller -> public boolean isProcessExternalEntities();1398638859;Returns the configured value for whether XML external entities are allowed._@see #createXmlReader();public boolean isProcessExternalEntities() {_		return this.processExternalEntities__	};returns,the,configured,value,for,whether,xml,external,entities,are,allowed,see,create,xml,reader;public,boolean,is,process,external,entities,return,this,process,external,entities
AbstractMarshaller -> public boolean isProcessExternalEntities();1400553912;Returns the configured value for whether XML external entities are allowed._@see #createXmlReader();public boolean isProcessExternalEntities() {_		return this.processExternalEntities__	};returns,the,configured,value,for,whether,xml,external,entities,are,allowed,see,create,xml,reader;public,boolean,is,process,external,entities,return,this,process,external,entities
AbstractMarshaller -> public boolean isProcessExternalEntities();1435665021;Returns the configured value for whether XML external entities are allowed._@see #createXmlReader();public boolean isProcessExternalEntities() {_		return this.processExternalEntities__	};returns,the,configured,value,for,whether,xml,external,entities,are,allowed,see,create,xml,reader;public,boolean,is,process,external,entities,return,this,process,external,entities
AbstractMarshaller -> public boolean isProcessExternalEntities();1455117733;Returns the configured value for whether XML external entities are allowed._@see #createXmlReader();public boolean isProcessExternalEntities() {_		return this.processExternalEntities__	};returns,the,configured,value,for,whether,xml,external,entities,are,allowed,see,create,xml,reader;public,boolean,is,process,external,entities,return,this,process,external,entities
AbstractMarshaller -> public boolean isProcessExternalEntities();1468948866;Returns the configured value for whether XML external entities are allowed._@see #createXmlReader();public boolean isProcessExternalEntities() {_		return this.processExternalEntities__	};returns,the,configured,value,for,whether,xml,external,entities,are,allowed,see,create,xml,reader;public,boolean,is,process,external,entities,return,this,process,external,entities
AbstractMarshaller -> public boolean isProcessExternalEntities();1483750478;Returns the configured value for whether XML external entities are allowed._@see #createXmlReader();public boolean isProcessExternalEntities() {_		return this.processExternalEntities__	};returns,the,configured,value,for,whether,xml,external,entities,are,allowed,see,create,xml,reader;public,boolean,is,process,external,entities,return,this,process,external,entities
AbstractMarshaller -> public boolean isProcessExternalEntities();1484301200;Returns the configured value for whether XML external entities are allowed._@see #createXmlReader();public boolean isProcessExternalEntities() {_		return this.processExternalEntities__	};returns,the,configured,value,for,whether,xml,external,entities,are,allowed,see,create,xml,reader;public,boolean,is,process,external,entities,return,this,process,external,entities
AbstractMarshaller -> public boolean isProcessExternalEntities();1495868221;Returns the configured value for whether XML external entities are allowed._@see #createXmlReader();public boolean isProcessExternalEntities() {_		return this.processExternalEntities__	};returns,the,configured,value,for,whether,xml,external,entities,are,allowed,see,create,xml,reader;public,boolean,is,process,external,entities,return,this,process,external,entities
AbstractMarshaller -> public boolean isProcessExternalEntities();1498780456;Returns the configured value for whether XML external entities are allowed._@see #createXmlReader();public boolean isProcessExternalEntities() {_		return this.processExternalEntities__	};returns,the,configured,value,for,whether,xml,external,entities,are,allowed,see,create,xml,reader;public,boolean,is,process,external,entities,return,this,process,external,entities
AbstractMarshaller -> public boolean isProcessExternalEntities();1518770299;Returns the configured value for whether XML external entities are allowed._@see #createXmlReader();public boolean isProcessExternalEntities() {_		return this.processExternalEntities__	};returns,the,configured,value,for,whether,xml,external,entities,are,allowed,see,create,xml,reader;public,boolean,is,process,external,entities,return,this,process,external,entities
AbstractMarshaller -> public boolean isProcessExternalEntities();1518770299;Returns the configured value for whether XML external entities are allowed._@see #createXmlReader();public boolean isProcessExternalEntities() {_		return this.processExternalEntities__	};returns,the,configured,value,for,whether,xml,external,entities,are,allowed,see,create,xml,reader;public,boolean,is,process,external,entities,return,this,process,external,entities
AbstractMarshaller -> public boolean isProcessExternalEntities();1530174524;Returns the configured value for whether XML external entities are allowed._@see #createXmlReader();public boolean isProcessExternalEntities() {_		return this.processExternalEntities__	};returns,the,configured,value,for,whether,xml,external,entities,are,allowed,see,create,xml,reader;public,boolean,is,process,external,entities,return,this,process,external,entities
AbstractMarshaller -> public boolean isProcessExternalEntities();1530174524;Returns the configured value for whether XML external entities are allowed._@see #createXmlReader();public boolean isProcessExternalEntities() {_		return this.processExternalEntities__	};returns,the,configured,value,for,whether,xml,external,entities,are,allowed,see,create,xml,reader;public,boolean,is,process,external,entities,return,this,process,external,entities
AbstractMarshaller -> protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException;1328020251;Template method for handling <code>StreamSource</code>s._<p>This implementation defers to <code>unmarshalInputStream</code> or <code>unmarshalReader</code>._@param streamSource the <code>StreamSource</code>_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException {_		if (streamSource.getInputStream() != null) {_			return unmarshalInputStream(streamSource.getInputStream())__		}_		else if (streamSource.getReader() != null) {_			return unmarshalReader(streamSource.getReader())__		}_		else {_			throw new IllegalArgumentException("StreamSource contains neither InputStream nor Reader")__		}_	};template,method,for,handling,code,stream,source,code,s,p,this,implementation,defers,to,code,unmarshal,input,stream,code,or,code,unmarshal,reader,code,param,stream,source,the,code,stream,source,code,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stream,source,stream,source,stream,source,throws,xml,mapping,exception,ioexception,if,stream,source,get,input,stream,null,return,unmarshal,input,stream,stream,source,get,input,stream,else,if,stream,source,get,reader,null,return,unmarshal,reader,stream,source,get,reader,else,throw,new,illegal,argument,exception,stream,source,contains,neither,input,stream,nor,reader
AbstractMarshaller -> protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException;1356735495;Template method for handling {@code StreamSource}s._<p>This implementation defers to {@code unmarshalInputStream} or {@code unmarshalReader}._@param streamSource the {@code StreamSource}_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException {_		if (streamSource.getInputStream() != null) {_			return unmarshalInputStream(streamSource.getInputStream())__		}_		else if (streamSource.getReader() != null) {_			return unmarshalReader(streamSource.getReader())__		}_		else {_			throw new IllegalArgumentException("StreamSource contains neither InputStream nor Reader")__		}_	};template,method,for,handling,code,stream,source,s,p,this,implementation,defers,to,code,unmarshal,input,stream,or,code,unmarshal,reader,param,stream,source,the,code,stream,source,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stream,source,stream,source,stream,source,throws,xml,mapping,exception,ioexception,if,stream,source,get,input,stream,null,return,unmarshal,input,stream,stream,source,get,input,stream,else,if,stream,source,get,reader,null,return,unmarshal,reader,stream,source,get,reader,else,throw,new,illegal,argument,exception,stream,source,contains,neither,input,stream,nor,reader
AbstractMarshaller -> protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException;1357119239;Template method for handling {@code StreamSource}s._<p>This implementation defers to {@code unmarshalInputStream} or {@code unmarshalReader}._@param streamSource the {@code StreamSource}_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException {_		if (streamSource.getInputStream() != null) {_			return unmarshalInputStream(streamSource.getInputStream())__		}_		else if (streamSource.getReader() != null) {_			return unmarshalReader(streamSource.getReader())__		}_		else {_			throw new IllegalArgumentException("StreamSource contains neither InputStream nor Reader")__		}_	};template,method,for,handling,code,stream,source,s,p,this,implementation,defers,to,code,unmarshal,input,stream,or,code,unmarshal,reader,param,stream,source,the,code,stream,source,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stream,source,stream,source,stream,source,throws,xml,mapping,exception,ioexception,if,stream,source,get,input,stream,null,return,unmarshal,input,stream,stream,source,get,input,stream,else,if,stream,source,get,reader,null,return,unmarshal,reader,stream,source,get,reader,else,throw,new,illegal,argument,exception,stream,source,contains,neither,input,stream,nor,reader
AbstractMarshaller -> protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException;1368482696;Template method for handling {@code StreamSource}s._<p>This implementation defers to {@code unmarshalInputStream} or {@code unmarshalReader}._@param streamSource the {@code StreamSource}_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException {_		if (streamSource.getInputStream() != null) {_			return unmarshalInputStream(streamSource.getInputStream())__		}_		else if (streamSource.getReader() != null) {_			return unmarshalReader(streamSource.getReader())__		}_		else {_			throw new IllegalArgumentException("StreamSource contains neither InputStream nor Reader")__		}_	};template,method,for,handling,code,stream,source,s,p,this,implementation,defers,to,code,unmarshal,input,stream,or,code,unmarshal,reader,param,stream,source,the,code,stream,source,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stream,source,stream,source,stream,source,throws,xml,mapping,exception,ioexception,if,stream,source,get,input,stream,null,return,unmarshal,input,stream,stream,source,get,input,stream,else,if,stream,source,get,reader,null,return,unmarshal,reader,stream,source,get,reader,else,throw,new,illegal,argument,exception,stream,source,contains,neither,input,stream,nor,reader
AbstractMarshaller -> protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException;1376041400;Template method for handling {@code StreamSource}s._<p>This implementation defers to {@code unmarshalInputStream} or {@code unmarshalReader}._@param streamSource the {@code StreamSource}_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException {_		if (streamSource.getInputStream() != null) {_			return unmarshalInputStream(streamSource.getInputStream())__		}_		else if (streamSource.getReader() != null) {_			return unmarshalReader(streamSource.getReader())__		}_		else {_			throw new IllegalArgumentException("StreamSource contains neither InputStream nor Reader")__		}_	};template,method,for,handling,code,stream,source,s,p,this,implementation,defers,to,code,unmarshal,input,stream,or,code,unmarshal,reader,param,stream,source,the,code,stream,source,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stream,source,stream,source,stream,source,throws,xml,mapping,exception,ioexception,if,stream,source,get,input,stream,null,return,unmarshal,input,stream,stream,source,get,input,stream,else,if,stream,source,get,reader,null,return,unmarshal,reader,stream,source,get,reader,else,throw,new,illegal,argument,exception,stream,source,contains,neither,input,stream,nor,reader
AbstractMarshaller -> protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException;1392767670;Template method for handling {@code StreamSource}s._<p>This implementation defers to {@code unmarshalInputStream} or {@code unmarshalReader}._<p>As of 3.2.8 and 4.0.2 this method is no longer invoked from_{@link #unmarshal(javax.xml.transform.Source)}. The method invoked instead is_{@link #unmarshalStreamSourceNoExternalEntitities(javax.xml.transform.stream.StreamSource)}.__@param streamSource the {@code StreamSource}_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException {_		if (streamSource.getInputStream() != null) {_			return unmarshalInputStream(streamSource.getInputStream())__		}_		else if (streamSource.getReader() != null) {_			return unmarshalReader(streamSource.getReader())__		}_		else {_			throw new IllegalArgumentException("StreamSource contains neither InputStream nor Reader")__		}_	};template,method,for,handling,code,stream,source,s,p,this,implementation,defers,to,code,unmarshal,input,stream,or,code,unmarshal,reader,p,as,of,3,2,8,and,4,0,2,this,method,is,no,longer,invoked,from,link,unmarshal,javax,xml,transform,source,the,method,invoked,instead,is,link,unmarshal,stream,source,no,external,entitities,javax,xml,transform,stream,stream,source,param,stream,source,the,code,stream,source,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stream,source,stream,source,stream,source,throws,xml,mapping,exception,ioexception,if,stream,source,get,input,stream,null,return,unmarshal,input,stream,stream,source,get,input,stream,else,if,stream,source,get,reader,null,return,unmarshal,reader,stream,source,get,reader,else,throw,new,illegal,argument,exception,stream,source,contains,neither,input,stream,nor,reader
AbstractMarshaller -> protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException;1397058176;Template method for handling {@code StreamSource}s._<p>This implementation defers to {@code unmarshalInputStream} or {@code unmarshalReader}._<p>As of Spring 3.2.8, this method is no longer invoked from_{@link #unmarshal(javax.xml.transform.Source)}. The method invoked instead is_{@link #unmarshalStreamSourceNoExternalEntitities(javax.xml.transform.stream.StreamSource)}._@param streamSource the {@code StreamSource}_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException {_		if (streamSource.getInputStream() != null) {_			return unmarshalInputStream(streamSource.getInputStream())__		}_		else if (streamSource.getReader() != null) {_			return unmarshalReader(streamSource.getReader())__		}_		else {_			throw new IllegalArgumentException("StreamSource contains neither InputStream nor Reader")__		}_	};template,method,for,handling,code,stream,source,s,p,this,implementation,defers,to,code,unmarshal,input,stream,or,code,unmarshal,reader,p,as,of,spring,3,2,8,this,method,is,no,longer,invoked,from,link,unmarshal,javax,xml,transform,source,the,method,invoked,instead,is,link,unmarshal,stream,source,no,external,entitities,javax,xml,transform,stream,stream,source,param,stream,source,the,code,stream,source,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stream,source,stream,source,stream,source,throws,xml,mapping,exception,ioexception,if,stream,source,get,input,stream,null,return,unmarshal,input,stream,stream,source,get,input,stream,else,if,stream,source,get,reader,null,return,unmarshal,reader,stream,source,get,reader,else,throw,new,illegal,argument,exception,stream,source,contains,neither,input,stream,nor,reader
AbstractMarshaller -> protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException;1397069887;Template method for handling {@code StreamSource}s._<p>This implementation defers to {@code unmarshalInputStream} or {@code unmarshalReader}._<p>As of Spring 3.2.8, this method is no longer invoked from_{@link #unmarshal(javax.xml.transform.Source)}. The method invoked instead is_{@link #unmarshalStreamSourceNoExternalEntitities(javax.xml.transform.stream.StreamSource)}._@param streamSource the {@code StreamSource}_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException {_		if (streamSource.getInputStream() != null) {_			return unmarshalInputStream(streamSource.getInputStream())__		}_		else if (streamSource.getReader() != null) {_			return unmarshalReader(streamSource.getReader())__		}_		else {_			throw new IllegalArgumentException("StreamSource contains neither InputStream nor Reader")__		}_	};template,method,for,handling,code,stream,source,s,p,this,implementation,defers,to,code,unmarshal,input,stream,or,code,unmarshal,reader,p,as,of,spring,3,2,8,this,method,is,no,longer,invoked,from,link,unmarshal,javax,xml,transform,source,the,method,invoked,instead,is,link,unmarshal,stream,source,no,external,entitities,javax,xml,transform,stream,stream,source,param,stream,source,the,code,stream,source,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stream,source,stream,source,stream,source,throws,xml,mapping,exception,ioexception,if,stream,source,get,input,stream,null,return,unmarshal,input,stream,stream,source,get,input,stream,else,if,stream,source,get,reader,null,return,unmarshal,reader,stream,source,get,reader,else,throw,new,illegal,argument,exception,stream,source,contains,neither,input,stream,nor,reader
AbstractMarshaller -> protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException;1398638859;Template method for handling {@code StreamSource}s._<p>This implementation delegates to {@code unmarshalInputStream} or {@code unmarshalReader}._@param streamSource the {@code StreamSource}_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException {_		if (streamSource.getInputStream() != null) {_			if (isProcessExternalEntities()) {_				return unmarshalInputStream(streamSource.getInputStream())__			}_			else {_				InputSource inputSource = new InputSource(streamSource.getInputStream())__				inputSource.setEncoding(getDefaultEncoding())__				return unmarshalSaxSource(new SAXSource(inputSource))__			}_		}_		else if (streamSource.getReader() != null) {_			if (isProcessExternalEntities()) {_				return unmarshalReader(streamSource.getReader())__			}_			else {_				return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getReader())))__			}_		}_		else {_			return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getSystemId())))__		}_	};template,method,for,handling,code,stream,source,s,p,this,implementation,delegates,to,code,unmarshal,input,stream,or,code,unmarshal,reader,param,stream,source,the,code,stream,source,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stream,source,stream,source,stream,source,throws,xml,mapping,exception,ioexception,if,stream,source,get,input,stream,null,if,is,process,external,entities,return,unmarshal,input,stream,stream,source,get,input,stream,else,input,source,input,source,new,input,source,stream,source,get,input,stream,input,source,set,encoding,get,default,encoding,return,unmarshal,sax,source,new,saxsource,input,source,else,if,stream,source,get,reader,null,if,is,process,external,entities,return,unmarshal,reader,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,system,id
AbstractMarshaller -> protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException;1400553912;Template method for handling {@code StreamSource}s._<p>This implementation delegates to {@code unmarshalInputStream} or {@code unmarshalReader}._@param streamSource the {@code StreamSource}_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException {_		if (streamSource.getInputStream() != null) {_			if (isProcessExternalEntities()) {_				return unmarshalInputStream(streamSource.getInputStream())__			}_			else {_				InputSource inputSource = new InputSource(streamSource.getInputStream())__				inputSource.setEncoding(getDefaultEncoding())__				return unmarshalSaxSource(new SAXSource(inputSource))__			}_		}_		else if (streamSource.getReader() != null) {_			if (isProcessExternalEntities()) {_				return unmarshalReader(streamSource.getReader())__			}_			else {_				return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getReader())))__			}_		}_		else {_			return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getSystemId())))__		}_	};template,method,for,handling,code,stream,source,s,p,this,implementation,delegates,to,code,unmarshal,input,stream,or,code,unmarshal,reader,param,stream,source,the,code,stream,source,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stream,source,stream,source,stream,source,throws,xml,mapping,exception,ioexception,if,stream,source,get,input,stream,null,if,is,process,external,entities,return,unmarshal,input,stream,stream,source,get,input,stream,else,input,source,input,source,new,input,source,stream,source,get,input,stream,input,source,set,encoding,get,default,encoding,return,unmarshal,sax,source,new,saxsource,input,source,else,if,stream,source,get,reader,null,if,is,process,external,entities,return,unmarshal,reader,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,system,id
AbstractMarshaller -> protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException;1435665021;Template method for handling {@code StreamSource}s._<p>This implementation delegates to {@code unmarshalInputStream} or {@code unmarshalReader}._@param streamSource the {@code StreamSource}_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException {_		if (streamSource.getInputStream() != null) {_			if (isProcessExternalEntities() && isSupportDtd()) {_				return unmarshalInputStream(streamSource.getInputStream())__			}_			else {_				InputSource inputSource = new InputSource(streamSource.getInputStream())__				inputSource.setEncoding(getDefaultEncoding())__				return unmarshalSaxSource(new SAXSource(inputSource))__			}_		}_		else if (streamSource.getReader() != null) {_			if (isProcessExternalEntities() && isSupportDtd()) {_				return unmarshalReader(streamSource.getReader())__			}_			else {_				return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getReader())))__			}_		}_		else {_			return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getSystemId())))__		}_	};template,method,for,handling,code,stream,source,s,p,this,implementation,delegates,to,code,unmarshal,input,stream,or,code,unmarshal,reader,param,stream,source,the,code,stream,source,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stream,source,stream,source,stream,source,throws,xml,mapping,exception,ioexception,if,stream,source,get,input,stream,null,if,is,process,external,entities,is,support,dtd,return,unmarshal,input,stream,stream,source,get,input,stream,else,input,source,input,source,new,input,source,stream,source,get,input,stream,input,source,set,encoding,get,default,encoding,return,unmarshal,sax,source,new,saxsource,input,source,else,if,stream,source,get,reader,null,if,is,process,external,entities,is,support,dtd,return,unmarshal,reader,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,system,id
AbstractMarshaller -> protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException;1455117733;Template method for handling {@code StreamSource}s._<p>This implementation delegates to {@code unmarshalInputStream} or {@code unmarshalReader}._@param streamSource the {@code StreamSource}_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException {_		if (streamSource.getInputStream() != null) {_			if (isProcessExternalEntities() && isSupportDtd()) {_				return unmarshalInputStream(streamSource.getInputStream())__			}_			else {_				InputSource inputSource = new InputSource(streamSource.getInputStream())__				inputSource.setEncoding(getDefaultEncoding())__				return unmarshalSaxSource(new SAXSource(inputSource))__			}_		}_		else if (streamSource.getReader() != null) {_			if (isProcessExternalEntities() && isSupportDtd()) {_				return unmarshalReader(streamSource.getReader())__			}_			else {_				return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getReader())))__			}_		}_		else {_			return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getSystemId())))__		}_	};template,method,for,handling,code,stream,source,s,p,this,implementation,delegates,to,code,unmarshal,input,stream,or,code,unmarshal,reader,param,stream,source,the,code,stream,source,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stream,source,stream,source,stream,source,throws,xml,mapping,exception,ioexception,if,stream,source,get,input,stream,null,if,is,process,external,entities,is,support,dtd,return,unmarshal,input,stream,stream,source,get,input,stream,else,input,source,input,source,new,input,source,stream,source,get,input,stream,input,source,set,encoding,get,default,encoding,return,unmarshal,sax,source,new,saxsource,input,source,else,if,stream,source,get,reader,null,if,is,process,external,entities,is,support,dtd,return,unmarshal,reader,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,system,id
AbstractMarshaller -> protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException;1468948866;Template method for handling {@code StreamSource}s._<p>This implementation delegates to {@code unmarshalInputStream} or {@code unmarshalReader}._@param streamSource the {@code StreamSource}_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException {_		if (streamSource.getInputStream() != null) {_			if (isProcessExternalEntities() && isSupportDtd()) {_				return unmarshalInputStream(streamSource.getInputStream())__			}_			else {_				InputSource inputSource = new InputSource(streamSource.getInputStream())__				inputSource.setEncoding(getDefaultEncoding())__				return unmarshalSaxSource(new SAXSource(inputSource))__			}_		}_		else if (streamSource.getReader() != null) {_			if (isProcessExternalEntities() && isSupportDtd()) {_				return unmarshalReader(streamSource.getReader())__			}_			else {_				return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getReader())))__			}_		}_		else {_			return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getSystemId())))__		}_	};template,method,for,handling,code,stream,source,s,p,this,implementation,delegates,to,code,unmarshal,input,stream,or,code,unmarshal,reader,param,stream,source,the,code,stream,source,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stream,source,stream,source,stream,source,throws,xml,mapping,exception,ioexception,if,stream,source,get,input,stream,null,if,is,process,external,entities,is,support,dtd,return,unmarshal,input,stream,stream,source,get,input,stream,else,input,source,input,source,new,input,source,stream,source,get,input,stream,input,source,set,encoding,get,default,encoding,return,unmarshal,sax,source,new,saxsource,input,source,else,if,stream,source,get,reader,null,if,is,process,external,entities,is,support,dtd,return,unmarshal,reader,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,system,id
AbstractMarshaller -> protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException;1483750478;Template method for handling {@code StreamSource}s._<p>This implementation delegates to {@code unmarshalInputStream} or {@code unmarshalReader}._@param streamSource the {@code StreamSource}_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException {_		if (streamSource.getInputStream() != null) {_			if (isProcessExternalEntities() && isSupportDtd()) {_				return unmarshalInputStream(streamSource.getInputStream())__			}_			else {_				InputSource inputSource = new InputSource(streamSource.getInputStream())__				inputSource.setEncoding(getDefaultEncoding())__				return unmarshalSaxSource(new SAXSource(inputSource))__			}_		}_		else if (streamSource.getReader() != null) {_			if (isProcessExternalEntities() && isSupportDtd()) {_				return unmarshalReader(streamSource.getReader())__			}_			else {_				return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getReader())))__			}_		}_		else {_			return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getSystemId())))__		}_	};template,method,for,handling,code,stream,source,s,p,this,implementation,delegates,to,code,unmarshal,input,stream,or,code,unmarshal,reader,param,stream,source,the,code,stream,source,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stream,source,stream,source,stream,source,throws,xml,mapping,exception,ioexception,if,stream,source,get,input,stream,null,if,is,process,external,entities,is,support,dtd,return,unmarshal,input,stream,stream,source,get,input,stream,else,input,source,input,source,new,input,source,stream,source,get,input,stream,input,source,set,encoding,get,default,encoding,return,unmarshal,sax,source,new,saxsource,input,source,else,if,stream,source,get,reader,null,if,is,process,external,entities,is,support,dtd,return,unmarshal,reader,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,system,id
AbstractMarshaller -> protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException;1484301200;Template method for handling {@code StreamSource}s._<p>This implementation delegates to {@code unmarshalInputStream} or {@code unmarshalReader}._@param streamSource the {@code StreamSource}_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException {_		if (streamSource.getInputStream() != null) {_			if (isProcessExternalEntities() && isSupportDtd()) {_				return unmarshalInputStream(streamSource.getInputStream())__			}_			else {_				InputSource inputSource = new InputSource(streamSource.getInputStream())__				inputSource.setEncoding(getDefaultEncoding())__				return unmarshalSaxSource(new SAXSource(inputSource))__			}_		}_		else if (streamSource.getReader() != null) {_			if (isProcessExternalEntities() && isSupportDtd()) {_				return unmarshalReader(streamSource.getReader())__			}_			else {_				return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getReader())))__			}_		}_		else {_			return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getSystemId())))__		}_	};template,method,for,handling,code,stream,source,s,p,this,implementation,delegates,to,code,unmarshal,input,stream,or,code,unmarshal,reader,param,stream,source,the,code,stream,source,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stream,source,stream,source,stream,source,throws,xml,mapping,exception,ioexception,if,stream,source,get,input,stream,null,if,is,process,external,entities,is,support,dtd,return,unmarshal,input,stream,stream,source,get,input,stream,else,input,source,input,source,new,input,source,stream,source,get,input,stream,input,source,set,encoding,get,default,encoding,return,unmarshal,sax,source,new,saxsource,input,source,else,if,stream,source,get,reader,null,if,is,process,external,entities,is,support,dtd,return,unmarshal,reader,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,system,id
AbstractMarshaller -> protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException;1495868221;Template method for handling {@code StreamSource}s._<p>This implementation delegates to {@code unmarshalInputStream} or {@code unmarshalReader}._@param streamSource the {@code StreamSource}_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException {_		if (streamSource.getInputStream() != null) {_			if (isProcessExternalEntities() && isSupportDtd()) {_				return unmarshalInputStream(streamSource.getInputStream())__			}_			else {_				InputSource inputSource = new InputSource(streamSource.getInputStream())__				inputSource.setEncoding(getDefaultEncoding())__				return unmarshalSaxSource(new SAXSource(inputSource))__			}_		}_		else if (streamSource.getReader() != null) {_			if (isProcessExternalEntities() && isSupportDtd()) {_				return unmarshalReader(streamSource.getReader())__			}_			else {_				return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getReader())))__			}_		}_		else {_			return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getSystemId())))__		}_	};template,method,for,handling,code,stream,source,s,p,this,implementation,delegates,to,code,unmarshal,input,stream,or,code,unmarshal,reader,param,stream,source,the,code,stream,source,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stream,source,stream,source,stream,source,throws,xml,mapping,exception,ioexception,if,stream,source,get,input,stream,null,if,is,process,external,entities,is,support,dtd,return,unmarshal,input,stream,stream,source,get,input,stream,else,input,source,input,source,new,input,source,stream,source,get,input,stream,input,source,set,encoding,get,default,encoding,return,unmarshal,sax,source,new,saxsource,input,source,else,if,stream,source,get,reader,null,if,is,process,external,entities,is,support,dtd,return,unmarshal,reader,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,system,id
AbstractMarshaller -> protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException;1498780456;Template method for handling {@code StreamSource}s._<p>This implementation delegates to {@code unmarshalInputStream} or {@code unmarshalReader}._@param streamSource the {@code StreamSource}_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException {_		if (streamSource.getInputStream() != null) {_			if (isProcessExternalEntities() && isSupportDtd()) {_				return unmarshalInputStream(streamSource.getInputStream())__			}_			else {_				InputSource inputSource = new InputSource(streamSource.getInputStream())__				inputSource.setEncoding(getDefaultEncoding())__				return unmarshalSaxSource(new SAXSource(inputSource))__			}_		}_		else if (streamSource.getReader() != null) {_			if (isProcessExternalEntities() && isSupportDtd()) {_				return unmarshalReader(streamSource.getReader())__			}_			else {_				return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getReader())))__			}_		}_		else {_			return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getSystemId())))__		}_	};template,method,for,handling,code,stream,source,s,p,this,implementation,delegates,to,code,unmarshal,input,stream,or,code,unmarshal,reader,param,stream,source,the,code,stream,source,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stream,source,stream,source,stream,source,throws,xml,mapping,exception,ioexception,if,stream,source,get,input,stream,null,if,is,process,external,entities,is,support,dtd,return,unmarshal,input,stream,stream,source,get,input,stream,else,input,source,input,source,new,input,source,stream,source,get,input,stream,input,source,set,encoding,get,default,encoding,return,unmarshal,sax,source,new,saxsource,input,source,else,if,stream,source,get,reader,null,if,is,process,external,entities,is,support,dtd,return,unmarshal,reader,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,system,id
AbstractMarshaller -> protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException;1518770299;Template method for handling {@code StreamSource}s._<p>This implementation delegates to {@code unmarshalInputStream} or {@code unmarshalReader}._@param streamSource the {@code StreamSource}_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException {_		if (streamSource.getInputStream() != null) {_			if (isProcessExternalEntities() && isSupportDtd()) {_				return unmarshalInputStream(streamSource.getInputStream())__			}_			else {_				InputSource inputSource = new InputSource(streamSource.getInputStream())__				inputSource.setEncoding(getDefaultEncoding())__				return unmarshalSaxSource(new SAXSource(inputSource))__			}_		}_		else if (streamSource.getReader() != null) {_			if (isProcessExternalEntities() && isSupportDtd()) {_				return unmarshalReader(streamSource.getReader())__			}_			else {_				return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getReader())))__			}_		}_		else {_			return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getSystemId())))__		}_	};template,method,for,handling,code,stream,source,s,p,this,implementation,delegates,to,code,unmarshal,input,stream,or,code,unmarshal,reader,param,stream,source,the,code,stream,source,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stream,source,stream,source,stream,source,throws,xml,mapping,exception,ioexception,if,stream,source,get,input,stream,null,if,is,process,external,entities,is,support,dtd,return,unmarshal,input,stream,stream,source,get,input,stream,else,input,source,input,source,new,input,source,stream,source,get,input,stream,input,source,set,encoding,get,default,encoding,return,unmarshal,sax,source,new,saxsource,input,source,else,if,stream,source,get,reader,null,if,is,process,external,entities,is,support,dtd,return,unmarshal,reader,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,system,id
AbstractMarshaller -> protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException;1518770299;Template method for handling {@code StreamSource}s._<p>This implementation delegates to {@code unmarshalInputStream} or {@code unmarshalReader}._@param streamSource the {@code StreamSource}_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException {_		if (streamSource.getInputStream() != null) {_			if (isProcessExternalEntities() && isSupportDtd()) {_				return unmarshalInputStream(streamSource.getInputStream())__			}_			else {_				InputSource inputSource = new InputSource(streamSource.getInputStream())__				inputSource.setEncoding(getDefaultEncoding())__				return unmarshalSaxSource(new SAXSource(inputSource))__			}_		}_		else if (streamSource.getReader() != null) {_			if (isProcessExternalEntities() && isSupportDtd()) {_				return unmarshalReader(streamSource.getReader())__			}_			else {_				return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getReader())))__			}_		}_		else {_			return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getSystemId())))__		}_	};template,method,for,handling,code,stream,source,s,p,this,implementation,delegates,to,code,unmarshal,input,stream,or,code,unmarshal,reader,param,stream,source,the,code,stream,source,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stream,source,stream,source,stream,source,throws,xml,mapping,exception,ioexception,if,stream,source,get,input,stream,null,if,is,process,external,entities,is,support,dtd,return,unmarshal,input,stream,stream,source,get,input,stream,else,input,source,input,source,new,input,source,stream,source,get,input,stream,input,source,set,encoding,get,default,encoding,return,unmarshal,sax,source,new,saxsource,input,source,else,if,stream,source,get,reader,null,if,is,process,external,entities,is,support,dtd,return,unmarshal,reader,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,system,id
AbstractMarshaller -> protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException;1530174524;Template method for handling {@code StreamSource}s._<p>This implementation delegates to {@code unmarshalInputStream} or {@code unmarshalReader}._@param streamSource the {@code StreamSource}_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException {_		if (streamSource.getInputStream() != null) {_			if (isProcessExternalEntities() && isSupportDtd()) {_				return unmarshalInputStream(streamSource.getInputStream())__			}_			else {_				InputSource inputSource = new InputSource(streamSource.getInputStream())__				inputSource.setEncoding(getDefaultEncoding())__				return unmarshalSaxSource(new SAXSource(inputSource))__			}_		}_		else if (streamSource.getReader() != null) {_			if (isProcessExternalEntities() && isSupportDtd()) {_				return unmarshalReader(streamSource.getReader())__			}_			else {_				return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getReader())))__			}_		}_		else {_			return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getSystemId())))__		}_	};template,method,for,handling,code,stream,source,s,p,this,implementation,delegates,to,code,unmarshal,input,stream,or,code,unmarshal,reader,param,stream,source,the,code,stream,source,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stream,source,stream,source,stream,source,throws,xml,mapping,exception,ioexception,if,stream,source,get,input,stream,null,if,is,process,external,entities,is,support,dtd,return,unmarshal,input,stream,stream,source,get,input,stream,else,input,source,input,source,new,input,source,stream,source,get,input,stream,input,source,set,encoding,get,default,encoding,return,unmarshal,sax,source,new,saxsource,input,source,else,if,stream,source,get,reader,null,if,is,process,external,entities,is,support,dtd,return,unmarshal,reader,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,system,id
AbstractMarshaller -> protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException;1530174524;Template method for handling {@code StreamSource}s._<p>This implementation delegates to {@code unmarshalInputStream} or {@code unmarshalReader}._@param streamSource the {@code StreamSource}_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object;protected Object unmarshalStreamSource(StreamSource streamSource) throws XmlMappingException, IOException {_		if (streamSource.getInputStream() != null) {_			if (isProcessExternalEntities() && isSupportDtd()) {_				return unmarshalInputStream(streamSource.getInputStream())__			}_			else {_				InputSource inputSource = new InputSource(streamSource.getInputStream())__				inputSource.setEncoding(getDefaultEncoding())__				return unmarshalSaxSource(new SAXSource(inputSource))__			}_		}_		else if (streamSource.getReader() != null) {_			if (isProcessExternalEntities() && isSupportDtd()) {_				return unmarshalReader(streamSource.getReader())__			}_			else {_				return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getReader())))__			}_		}_		else {_			return unmarshalSaxSource(new SAXSource(new InputSource(streamSource.getSystemId())))__		}_	};template,method,for,handling,code,stream,source,s,p,this,implementation,delegates,to,code,unmarshal,input,stream,or,code,unmarshal,reader,param,stream,source,the,code,stream,source,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object;protected,object,unmarshal,stream,source,stream,source,stream,source,throws,xml,mapping,exception,ioexception,if,stream,source,get,input,stream,null,if,is,process,external,entities,is,support,dtd,return,unmarshal,input,stream,stream,source,get,input,stream,else,input,source,input,source,new,input,source,stream,source,get,input,stream,input,source,set,encoding,get,default,encoding,return,unmarshal,sax,source,new,saxsource,input,source,else,if,stream,source,get,reader,null,if,is,process,external,entities,is,support,dtd,return,unmarshal,reader,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,reader,else,return,unmarshal,sax,source,new,saxsource,new,input,source,stream,source,get,system,id
AbstractMarshaller -> protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;1328020251;Abstract template method for unmarshalling from a given DOM <code>Node</code>._@param node the DOM node that contains the objects to be unmarshalled_@return the object graph_@throws XmlMappingException if the given DOM node cannot be mapped to an object;protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,dom,code,node,code,param,node,the,dom,node,that,contains,the,objects,to,be,unmarshalled,return,the,object,graph,throws,xml,mapping,exception,if,the,given,dom,node,cannot,be,mapped,to,an,object;protected,abstract,object,unmarshal,dom,node,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;1356735495;Abstract template method for unmarshalling from a given DOM {@code Node}._@param node the DOM node that contains the objects to be unmarshalled_@return the object graph_@throws XmlMappingException if the given DOM node cannot be mapped to an object;protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,dom,code,node,param,node,the,dom,node,that,contains,the,objects,to,be,unmarshalled,return,the,object,graph,throws,xml,mapping,exception,if,the,given,dom,node,cannot,be,mapped,to,an,object;protected,abstract,object,unmarshal,dom,node,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;1357119239;Abstract template method for unmarshalling from a given DOM {@code Node}._@param node the DOM node that contains the objects to be unmarshalled_@return the object graph_@throws XmlMappingException if the given DOM node cannot be mapped to an object;protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,dom,code,node,param,node,the,dom,node,that,contains,the,objects,to,be,unmarshalled,return,the,object,graph,throws,xml,mapping,exception,if,the,given,dom,node,cannot,be,mapped,to,an,object;protected,abstract,object,unmarshal,dom,node,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;1368482696;Abstract template method for unmarshalling from a given DOM {@code Node}._@param node the DOM node that contains the objects to be unmarshalled_@return the object graph_@throws XmlMappingException if the given DOM node cannot be mapped to an object;protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,dom,code,node,param,node,the,dom,node,that,contains,the,objects,to,be,unmarshalled,return,the,object,graph,throws,xml,mapping,exception,if,the,given,dom,node,cannot,be,mapped,to,an,object;protected,abstract,object,unmarshal,dom,node,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;1376041400;Abstract template method for unmarshalling from a given DOM {@code Node}._@param node the DOM node that contains the objects to be unmarshalled_@return the object graph_@throws XmlMappingException if the given DOM node cannot be mapped to an object;protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,dom,code,node,param,node,the,dom,node,that,contains,the,objects,to,be,unmarshalled,return,the,object,graph,throws,xml,mapping,exception,if,the,given,dom,node,cannot,be,mapped,to,an,object;protected,abstract,object,unmarshal,dom,node,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;1392767670;Abstract template method for unmarshalling from a given DOM {@code Node}._@param node the DOM node that contains the objects to be unmarshalled_@return the object graph_@throws XmlMappingException if the given DOM node cannot be mapped to an object;protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,dom,code,node,param,node,the,dom,node,that,contains,the,objects,to,be,unmarshalled,return,the,object,graph,throws,xml,mapping,exception,if,the,given,dom,node,cannot,be,mapped,to,an,object;protected,abstract,object,unmarshal,dom,node,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;1397058176;Abstract template method for unmarshalling from a given DOM {@code Node}._@param node the DOM node that contains the objects to be unmarshalled_@return the object graph_@throws XmlMappingException if the given DOM node cannot be mapped to an object;protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,dom,code,node,param,node,the,dom,node,that,contains,the,objects,to,be,unmarshalled,return,the,object,graph,throws,xml,mapping,exception,if,the,given,dom,node,cannot,be,mapped,to,an,object;protected,abstract,object,unmarshal,dom,node,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;1397069887;Abstract template method for unmarshalling from a given DOM {@code Node}._@param node the DOM node that contains the objects to be unmarshalled_@return the object graph_@throws XmlMappingException if the given DOM node cannot be mapped to an object;protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,dom,code,node,param,node,the,dom,node,that,contains,the,objects,to,be,unmarshalled,return,the,object,graph,throws,xml,mapping,exception,if,the,given,dom,node,cannot,be,mapped,to,an,object;protected,abstract,object,unmarshal,dom,node,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;1398638859;Abstract template method for unmarshalling from a given DOM {@code Node}._@param node the DOM node that contains the objects to be unmarshalled_@return the object graph_@throws XmlMappingException if the given DOM node cannot be mapped to an object;protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,dom,code,node,param,node,the,dom,node,that,contains,the,objects,to,be,unmarshalled,return,the,object,graph,throws,xml,mapping,exception,if,the,given,dom,node,cannot,be,mapped,to,an,object;protected,abstract,object,unmarshal,dom,node,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;1400553912;Abstract template method for unmarshalling from a given DOM {@code Node}._@param node the DOM node that contains the objects to be unmarshalled_@return the object graph_@throws XmlMappingException if the given DOM node cannot be mapped to an object;protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,dom,code,node,param,node,the,dom,node,that,contains,the,objects,to,be,unmarshalled,return,the,object,graph,throws,xml,mapping,exception,if,the,given,dom,node,cannot,be,mapped,to,an,object;protected,abstract,object,unmarshal,dom,node,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;1435665021;Abstract template method for unmarshalling from a given DOM {@code Node}._@param node the DOM node that contains the objects to be unmarshalled_@return the object graph_@throws XmlMappingException if the given DOM node cannot be mapped to an object;protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,dom,code,node,param,node,the,dom,node,that,contains,the,objects,to,be,unmarshalled,return,the,object,graph,throws,xml,mapping,exception,if,the,given,dom,node,cannot,be,mapped,to,an,object;protected,abstract,object,unmarshal,dom,node,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;1455117733;Abstract template method for unmarshalling from a given DOM {@code Node}._@param node the DOM node that contains the objects to be unmarshalled_@return the object graph_@throws XmlMappingException if the given DOM node cannot be mapped to an object;protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,dom,code,node,param,node,the,dom,node,that,contains,the,objects,to,be,unmarshalled,return,the,object,graph,throws,xml,mapping,exception,if,the,given,dom,node,cannot,be,mapped,to,an,object;protected,abstract,object,unmarshal,dom,node,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;1468948866;Abstract template method for unmarshalling from a given DOM {@code Node}._@param node the DOM node that contains the objects to be unmarshalled_@return the object graph_@throws XmlMappingException if the given DOM node cannot be mapped to an object;protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,dom,code,node,param,node,the,dom,node,that,contains,the,objects,to,be,unmarshalled,return,the,object,graph,throws,xml,mapping,exception,if,the,given,dom,node,cannot,be,mapped,to,an,object;protected,abstract,object,unmarshal,dom,node,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;1483750478;Abstract template method for unmarshalling from a given DOM {@code Node}._@param node the DOM node that contains the objects to be unmarshalled_@return the object graph_@throws XmlMappingException if the given DOM node cannot be mapped to an object;protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,dom,code,node,param,node,the,dom,node,that,contains,the,objects,to,be,unmarshalled,return,the,object,graph,throws,xml,mapping,exception,if,the,given,dom,node,cannot,be,mapped,to,an,object;protected,abstract,object,unmarshal,dom,node,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;1484301200;Abstract template method for unmarshalling from a given DOM {@code Node}._@param node the DOM node that contains the objects to be unmarshalled_@return the object graph_@throws XmlMappingException if the given DOM node cannot be mapped to an object;protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,dom,code,node,param,node,the,dom,node,that,contains,the,objects,to,be,unmarshalled,return,the,object,graph,throws,xml,mapping,exception,if,the,given,dom,node,cannot,be,mapped,to,an,object;protected,abstract,object,unmarshal,dom,node,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;1495868221;Abstract template method for unmarshalling from a given DOM {@code Node}._@param node the DOM node that contains the objects to be unmarshalled_@return the object graph_@throws XmlMappingException if the given DOM node cannot be mapped to an object;protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,dom,code,node,param,node,the,dom,node,that,contains,the,objects,to,be,unmarshalled,return,the,object,graph,throws,xml,mapping,exception,if,the,given,dom,node,cannot,be,mapped,to,an,object;protected,abstract,object,unmarshal,dom,node,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;1498780456;Abstract template method for unmarshalling from a given DOM {@code Node}._@param node the DOM node that contains the objects to be unmarshalled_@return the object graph_@throws XmlMappingException if the given DOM node cannot be mapped to an object;protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,dom,code,node,param,node,the,dom,node,that,contains,the,objects,to,be,unmarshalled,return,the,object,graph,throws,xml,mapping,exception,if,the,given,dom,node,cannot,be,mapped,to,an,object;protected,abstract,object,unmarshal,dom,node,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;1518770299;Abstract template method for unmarshalling from a given DOM {@code Node}._@param node the DOM node that contains the objects to be unmarshalled_@return the object graph_@throws XmlMappingException if the given DOM node cannot be mapped to an object;protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,dom,code,node,param,node,the,dom,node,that,contains,the,objects,to,be,unmarshalled,return,the,object,graph,throws,xml,mapping,exception,if,the,given,dom,node,cannot,be,mapped,to,an,object;protected,abstract,object,unmarshal,dom,node,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;1518770299;Abstract template method for unmarshalling from a given DOM {@code Node}._@param node the DOM node that contains the objects to be unmarshalled_@return the object graph_@throws XmlMappingException if the given DOM node cannot be mapped to an object;protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,dom,code,node,param,node,the,dom,node,that,contains,the,objects,to,be,unmarshalled,return,the,object,graph,throws,xml,mapping,exception,if,the,given,dom,node,cannot,be,mapped,to,an,object;protected,abstract,object,unmarshal,dom,node,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;1530174524;Abstract template method for unmarshalling from a given DOM {@code Node}._@param node the DOM node that contains the objects to be unmarshalled_@return the object graph_@throws XmlMappingException if the given DOM node cannot be mapped to an object;protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,dom,code,node,param,node,the,dom,node,that,contains,the,objects,to,be,unmarshalled,return,the,object,graph,throws,xml,mapping,exception,if,the,given,dom,node,cannot,be,mapped,to,an,object;protected,abstract,object,unmarshal,dom,node,node,node,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;1530174524;Abstract template method for unmarshalling from a given DOM {@code Node}._@param node the DOM node that contains the objects to be unmarshalled_@return the object graph_@throws XmlMappingException if the given DOM node cannot be mapped to an object;protected abstract Object unmarshalDomNode(Node node) throws XmlMappingException_;abstract,template,method,for,unmarshalling,from,a,given,dom,code,node,param,node,the,dom,node,that,contains,the,objects,to,be,unmarshalled,return,the,object,graph,throws,xml,mapping,exception,if,the,given,dom,node,cannot,be,mapped,to,an,object;protected,abstract,object,unmarshal,dom,node,node,node,throws,xml,mapping,exception
AbstractMarshaller -> @Override 	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException;1356735495;Marshals the object graph with the given root into the provided {@code javax.xml.transform.Result}._<p>This implementation inspects the given result, and calls {@code marshalDomResult},_{@code marshalSaxResult}, or {@code marshalStreamResult}._@param graph the root of the object graph to marshal_@param result the result to marshal to_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code result} if neither a {@code DOMResult},_a {@code SAXResult}, nor a {@code StreamResult}_@see #marshalDomResult(Object, javax.xml.transform.dom.DOMResult)_@see #marshalSaxResult(Object, javax.xml.transform.sax.SAXResult)_@see #marshalStreamResult(Object, javax.xml.transform.stream.StreamResult);@Override_	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException {_		if (result instanceof DOMResult) {_			marshalDomResult(graph, (DOMResult) result)__		}_		else if (StaxUtils.isStaxResult(result)) {_			marshalStaxResult(graph, result)__		}_		else if (result instanceof SAXResult) {_			marshalSaxResult(graph, (SAXResult) result)__		}_		else if (result instanceof StreamResult) {_			marshalStreamResult(graph, (StreamResult) result)__		}_		else {_			throw new IllegalArgumentException("Unknown Result type: " + result.getClass())__		}_	};marshals,the,object,graph,with,the,given,root,into,the,provided,code,javax,xml,transform,result,p,this,implementation,inspects,the,given,result,and,calls,code,marshal,dom,result,code,marshal,sax,result,or,code,marshal,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,result,the,result,to,marshal,to,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,result,if,neither,a,code,domresult,a,code,saxresult,nor,a,code,stream,result,see,marshal,dom,result,object,javax,xml,transform,dom,domresult,see,marshal,sax,result,object,javax,xml,transform,sax,saxresult,see,marshal,stream,result,object,javax,xml,transform,stream,stream,result;override,public,final,void,marshal,object,graph,result,result,throws,ioexception,xml,mapping,exception,if,result,instanceof,domresult,marshal,dom,result,graph,domresult,result,else,if,stax,utils,is,stax,result,result,marshal,stax,result,graph,result,else,if,result,instanceof,saxresult,marshal,sax,result,graph,saxresult,result,else,if,result,instanceof,stream,result,marshal,stream,result,graph,stream,result,result,else,throw,new,illegal,argument,exception,unknown,result,type,result,get,class
AbstractMarshaller -> @Override 	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException;1368482696;Marshals the object graph with the given root into the provided {@code javax.xml.transform.Result}._<p>This implementation inspects the given result, and calls {@code marshalDomResult},_{@code marshalSaxResult}, or {@code marshalStreamResult}._@param graph the root of the object graph to marshal_@param result the result to marshal to_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code result} if neither a {@code DOMResult},_a {@code SAXResult}, nor a {@code StreamResult}_@see #marshalDomResult(Object, javax.xml.transform.dom.DOMResult)_@see #marshalSaxResult(Object, javax.xml.transform.sax.SAXResult)_@see #marshalStreamResult(Object, javax.xml.transform.stream.StreamResult);@Override_	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException {_		if (result instanceof DOMResult) {_			marshalDomResult(graph, (DOMResult) result)__		}_		else if (StaxUtils.isStaxResult(result)) {_			marshalStaxResult(graph, result)__		}_		else if (result instanceof SAXResult) {_			marshalSaxResult(graph, (SAXResult) result)__		}_		else if (result instanceof StreamResult) {_			marshalStreamResult(graph, (StreamResult) result)__		}_		else {_			throw new IllegalArgumentException("Unknown Result type: " + result.getClass())__		}_	};marshals,the,object,graph,with,the,given,root,into,the,provided,code,javax,xml,transform,result,p,this,implementation,inspects,the,given,result,and,calls,code,marshal,dom,result,code,marshal,sax,result,or,code,marshal,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,result,the,result,to,marshal,to,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,result,if,neither,a,code,domresult,a,code,saxresult,nor,a,code,stream,result,see,marshal,dom,result,object,javax,xml,transform,dom,domresult,see,marshal,sax,result,object,javax,xml,transform,sax,saxresult,see,marshal,stream,result,object,javax,xml,transform,stream,stream,result;override,public,final,void,marshal,object,graph,result,result,throws,ioexception,xml,mapping,exception,if,result,instanceof,domresult,marshal,dom,result,graph,domresult,result,else,if,stax,utils,is,stax,result,result,marshal,stax,result,graph,result,else,if,result,instanceof,saxresult,marshal,sax,result,graph,saxresult,result,else,if,result,instanceof,stream,result,marshal,stream,result,graph,stream,result,result,else,throw,new,illegal,argument,exception,unknown,result,type,result,get,class
AbstractMarshaller -> @Override 	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException;1376041400;Marshals the object graph with the given root into the provided {@code javax.xml.transform.Result}._<p>This implementation inspects the given result, and calls {@code marshalDomResult},_{@code marshalSaxResult}, or {@code marshalStreamResult}._@param graph the root of the object graph to marshal_@param result the result to marshal to_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code result} if neither a {@code DOMResult},_a {@code SAXResult}, nor a {@code StreamResult}_@see #marshalDomResult(Object, javax.xml.transform.dom.DOMResult)_@see #marshalSaxResult(Object, javax.xml.transform.sax.SAXResult)_@see #marshalStreamResult(Object, javax.xml.transform.stream.StreamResult);@Override_	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException {_		if (result instanceof DOMResult) {_			marshalDomResult(graph, (DOMResult) result)__		}_		else if (StaxUtils.isStaxResult(result)) {_			marshalStaxResult(graph, result)__		}_		else if (result instanceof SAXResult) {_			marshalSaxResult(graph, (SAXResult) result)__		}_		else if (result instanceof StreamResult) {_			marshalStreamResult(graph, (StreamResult) result)__		}_		else {_			throw new IllegalArgumentException("Unknown Result type: " + result.getClass())__		}_	};marshals,the,object,graph,with,the,given,root,into,the,provided,code,javax,xml,transform,result,p,this,implementation,inspects,the,given,result,and,calls,code,marshal,dom,result,code,marshal,sax,result,or,code,marshal,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,result,the,result,to,marshal,to,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,result,if,neither,a,code,domresult,a,code,saxresult,nor,a,code,stream,result,see,marshal,dom,result,object,javax,xml,transform,dom,domresult,see,marshal,sax,result,object,javax,xml,transform,sax,saxresult,see,marshal,stream,result,object,javax,xml,transform,stream,stream,result;override,public,final,void,marshal,object,graph,result,result,throws,ioexception,xml,mapping,exception,if,result,instanceof,domresult,marshal,dom,result,graph,domresult,result,else,if,stax,utils,is,stax,result,result,marshal,stax,result,graph,result,else,if,result,instanceof,saxresult,marshal,sax,result,graph,saxresult,result,else,if,result,instanceof,stream,result,marshal,stream,result,graph,stream,result,result,else,throw,new,illegal,argument,exception,unknown,result,type,result,get,class
AbstractMarshaller -> @Override 	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException;1392767670;Marshals the object graph with the given root into the provided {@code javax.xml.transform.Result}._<p>This implementation inspects the given result, and calls {@code marshalDomResult},_{@code marshalSaxResult}, or {@code marshalStreamResult}._@param graph the root of the object graph to marshal_@param result the result to marshal to_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code result} if neither a {@code DOMResult},_a {@code SAXResult}, nor a {@code StreamResult}_@see #marshalDomResult(Object, javax.xml.transform.dom.DOMResult)_@see #marshalSaxResult(Object, javax.xml.transform.sax.SAXResult)_@see #marshalStreamResult(Object, javax.xml.transform.stream.StreamResult);@Override_	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException {_		if (result instanceof DOMResult) {_			marshalDomResult(graph, (DOMResult) result)__		}_		else if (StaxUtils.isStaxResult(result)) {_			marshalStaxResult(graph, result)__		}_		else if (result instanceof SAXResult) {_			marshalSaxResult(graph, (SAXResult) result)__		}_		else if (result instanceof StreamResult) {_			marshalStreamResult(graph, (StreamResult) result)__		}_		else {_			throw new IllegalArgumentException("Unknown Result type: " + result.getClass())__		}_	};marshals,the,object,graph,with,the,given,root,into,the,provided,code,javax,xml,transform,result,p,this,implementation,inspects,the,given,result,and,calls,code,marshal,dom,result,code,marshal,sax,result,or,code,marshal,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,result,the,result,to,marshal,to,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,result,if,neither,a,code,domresult,a,code,saxresult,nor,a,code,stream,result,see,marshal,dom,result,object,javax,xml,transform,dom,domresult,see,marshal,sax,result,object,javax,xml,transform,sax,saxresult,see,marshal,stream,result,object,javax,xml,transform,stream,stream,result;override,public,final,void,marshal,object,graph,result,result,throws,ioexception,xml,mapping,exception,if,result,instanceof,domresult,marshal,dom,result,graph,domresult,result,else,if,stax,utils,is,stax,result,result,marshal,stax,result,graph,result,else,if,result,instanceof,saxresult,marshal,sax,result,graph,saxresult,result,else,if,result,instanceof,stream,result,marshal,stream,result,graph,stream,result,result,else,throw,new,illegal,argument,exception,unknown,result,type,result,get,class
AbstractMarshaller -> @Override 	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException;1397058176;Marshals the object graph with the given root into the provided {@code javax.xml.transform.Result}._<p>This implementation inspects the given result, and calls {@code marshalDomResult},_{@code marshalSaxResult}, or {@code marshalStreamResult}._@param graph the root of the object graph to marshal_@param result the result to marshal to_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code result} if neither a {@code DOMResult},_a {@code SAXResult}, nor a {@code StreamResult}_@see #marshalDomResult(Object, javax.xml.transform.dom.DOMResult)_@see #marshalSaxResult(Object, javax.xml.transform.sax.SAXResult)_@see #marshalStreamResult(Object, javax.xml.transform.stream.StreamResult);@Override_	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException {_		if (result instanceof DOMResult) {_			marshalDomResult(graph, (DOMResult) result)__		}_		else if (StaxUtils.isStaxResult(result)) {_			marshalStaxResult(graph, result)__		}_		else if (result instanceof SAXResult) {_			marshalSaxResult(graph, (SAXResult) result)__		}_		else if (result instanceof StreamResult) {_			marshalStreamResult(graph, (StreamResult) result)__		}_		else {_			throw new IllegalArgumentException("Unknown Result type: " + result.getClass())__		}_	};marshals,the,object,graph,with,the,given,root,into,the,provided,code,javax,xml,transform,result,p,this,implementation,inspects,the,given,result,and,calls,code,marshal,dom,result,code,marshal,sax,result,or,code,marshal,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,result,the,result,to,marshal,to,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,result,if,neither,a,code,domresult,a,code,saxresult,nor,a,code,stream,result,see,marshal,dom,result,object,javax,xml,transform,dom,domresult,see,marshal,sax,result,object,javax,xml,transform,sax,saxresult,see,marshal,stream,result,object,javax,xml,transform,stream,stream,result;override,public,final,void,marshal,object,graph,result,result,throws,ioexception,xml,mapping,exception,if,result,instanceof,domresult,marshal,dom,result,graph,domresult,result,else,if,stax,utils,is,stax,result,result,marshal,stax,result,graph,result,else,if,result,instanceof,saxresult,marshal,sax,result,graph,saxresult,result,else,if,result,instanceof,stream,result,marshal,stream,result,graph,stream,result,result,else,throw,new,illegal,argument,exception,unknown,result,type,result,get,class
AbstractMarshaller -> @Override 	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException;1397069887;Marshals the object graph with the given root into the provided {@code javax.xml.transform.Result}._<p>This implementation inspects the given result, and calls {@code marshalDomResult},_{@code marshalSaxResult}, or {@code marshalStreamResult}._@param graph the root of the object graph to marshal_@param result the result to marshal to_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code result} if neither a {@code DOMResult},_a {@code SAXResult}, nor a {@code StreamResult}_@see #marshalDomResult(Object, javax.xml.transform.dom.DOMResult)_@see #marshalSaxResult(Object, javax.xml.transform.sax.SAXResult)_@see #marshalStreamResult(Object, javax.xml.transform.stream.StreamResult);@Override_	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException {_		if (result instanceof DOMResult) {_			marshalDomResult(graph, (DOMResult) result)__		}_		else if (StaxUtils.isStaxResult(result)) {_			marshalStaxResult(graph, result)__		}_		else if (result instanceof SAXResult) {_			marshalSaxResult(graph, (SAXResult) result)__		}_		else if (result instanceof StreamResult) {_			marshalStreamResult(graph, (StreamResult) result)__		}_		else {_			throw new IllegalArgumentException("Unknown Result type: " + result.getClass())__		}_	};marshals,the,object,graph,with,the,given,root,into,the,provided,code,javax,xml,transform,result,p,this,implementation,inspects,the,given,result,and,calls,code,marshal,dom,result,code,marshal,sax,result,or,code,marshal,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,result,the,result,to,marshal,to,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,result,if,neither,a,code,domresult,a,code,saxresult,nor,a,code,stream,result,see,marshal,dom,result,object,javax,xml,transform,dom,domresult,see,marshal,sax,result,object,javax,xml,transform,sax,saxresult,see,marshal,stream,result,object,javax,xml,transform,stream,stream,result;override,public,final,void,marshal,object,graph,result,result,throws,ioexception,xml,mapping,exception,if,result,instanceof,domresult,marshal,dom,result,graph,domresult,result,else,if,stax,utils,is,stax,result,result,marshal,stax,result,graph,result,else,if,result,instanceof,saxresult,marshal,sax,result,graph,saxresult,result,else,if,result,instanceof,stream,result,marshal,stream,result,graph,stream,result,result,else,throw,new,illegal,argument,exception,unknown,result,type,result,get,class
AbstractMarshaller -> @Override 	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException;1398638859;Marshals the object graph with the given root into the provided {@code javax.xml.transform.Result}._<p>This implementation inspects the given result, and calls {@code marshalDomResult},_{@code marshalSaxResult}, or {@code marshalStreamResult}._@param graph the root of the object graph to marshal_@param result the result to marshal to_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code result} if neither a {@code DOMResult},_a {@code SAXResult}, nor a {@code StreamResult}_@see #marshalDomResult(Object, javax.xml.transform.dom.DOMResult)_@see #marshalSaxResult(Object, javax.xml.transform.sax.SAXResult)_@see #marshalStreamResult(Object, javax.xml.transform.stream.StreamResult);@Override_	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException {_		if (result instanceof DOMResult) {_			marshalDomResult(graph, (DOMResult) result)__		}_		else if (StaxUtils.isStaxResult(result)) {_			marshalStaxResult(graph, result)__		}_		else if (result instanceof SAXResult) {_			marshalSaxResult(graph, (SAXResult) result)__		}_		else if (result instanceof StreamResult) {_			marshalStreamResult(graph, (StreamResult) result)__		}_		else {_			throw new IllegalArgumentException("Unknown Result type: " + result.getClass())__		}_	};marshals,the,object,graph,with,the,given,root,into,the,provided,code,javax,xml,transform,result,p,this,implementation,inspects,the,given,result,and,calls,code,marshal,dom,result,code,marshal,sax,result,or,code,marshal,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,result,the,result,to,marshal,to,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,result,if,neither,a,code,domresult,a,code,saxresult,nor,a,code,stream,result,see,marshal,dom,result,object,javax,xml,transform,dom,domresult,see,marshal,sax,result,object,javax,xml,transform,sax,saxresult,see,marshal,stream,result,object,javax,xml,transform,stream,stream,result;override,public,final,void,marshal,object,graph,result,result,throws,ioexception,xml,mapping,exception,if,result,instanceof,domresult,marshal,dom,result,graph,domresult,result,else,if,stax,utils,is,stax,result,result,marshal,stax,result,graph,result,else,if,result,instanceof,saxresult,marshal,sax,result,graph,saxresult,result,else,if,result,instanceof,stream,result,marshal,stream,result,graph,stream,result,result,else,throw,new,illegal,argument,exception,unknown,result,type,result,get,class
AbstractMarshaller -> @Override 	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException;1400553912;Marshals the object graph with the given root into the provided {@code javax.xml.transform.Result}._<p>This implementation inspects the given result, and calls {@code marshalDomResult},_{@code marshalSaxResult}, or {@code marshalStreamResult}._@param graph the root of the object graph to marshal_@param result the result to marshal to_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code result} if neither a {@code DOMResult},_a {@code SAXResult}, nor a {@code StreamResult}_@see #marshalDomResult(Object, javax.xml.transform.dom.DOMResult)_@see #marshalSaxResult(Object, javax.xml.transform.sax.SAXResult)_@see #marshalStreamResult(Object, javax.xml.transform.stream.StreamResult);@Override_	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException {_		if (result instanceof DOMResult) {_			marshalDomResult(graph, (DOMResult) result)__		}_		else if (StaxUtils.isStaxResult(result)) {_			marshalStaxResult(graph, result)__		}_		else if (result instanceof SAXResult) {_			marshalSaxResult(graph, (SAXResult) result)__		}_		else if (result instanceof StreamResult) {_			marshalStreamResult(graph, (StreamResult) result)__		}_		else {_			throw new IllegalArgumentException("Unknown Result type: " + result.getClass())__		}_	};marshals,the,object,graph,with,the,given,root,into,the,provided,code,javax,xml,transform,result,p,this,implementation,inspects,the,given,result,and,calls,code,marshal,dom,result,code,marshal,sax,result,or,code,marshal,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,result,the,result,to,marshal,to,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,result,if,neither,a,code,domresult,a,code,saxresult,nor,a,code,stream,result,see,marshal,dom,result,object,javax,xml,transform,dom,domresult,see,marshal,sax,result,object,javax,xml,transform,sax,saxresult,see,marshal,stream,result,object,javax,xml,transform,stream,stream,result;override,public,final,void,marshal,object,graph,result,result,throws,ioexception,xml,mapping,exception,if,result,instanceof,domresult,marshal,dom,result,graph,domresult,result,else,if,stax,utils,is,stax,result,result,marshal,stax,result,graph,result,else,if,result,instanceof,saxresult,marshal,sax,result,graph,saxresult,result,else,if,result,instanceof,stream,result,marshal,stream,result,graph,stream,result,result,else,throw,new,illegal,argument,exception,unknown,result,type,result,get,class
AbstractMarshaller -> @Override 	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException;1435665021;Marshals the object graph with the given root into the provided {@code javax.xml.transform.Result}._<p>This implementation inspects the given result, and calls {@code marshalDomResult},_{@code marshalSaxResult}, or {@code marshalStreamResult}._@param graph the root of the object graph to marshal_@param result the result to marshal to_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code result} if neither a {@code DOMResult},_a {@code SAXResult}, nor a {@code StreamResult}_@see #marshalDomResult(Object, javax.xml.transform.dom.DOMResult)_@see #marshalSaxResult(Object, javax.xml.transform.sax.SAXResult)_@see #marshalStreamResult(Object, javax.xml.transform.stream.StreamResult);@Override_	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException {_		if (result instanceof DOMResult) {_			marshalDomResult(graph, (DOMResult) result)__		}_		else if (StaxUtils.isStaxResult(result)) {_			marshalStaxResult(graph, result)__		}_		else if (result instanceof SAXResult) {_			marshalSaxResult(graph, (SAXResult) result)__		}_		else if (result instanceof StreamResult) {_			marshalStreamResult(graph, (StreamResult) result)__		}_		else {_			throw new IllegalArgumentException("Unknown Result type: " + result.getClass())__		}_	};marshals,the,object,graph,with,the,given,root,into,the,provided,code,javax,xml,transform,result,p,this,implementation,inspects,the,given,result,and,calls,code,marshal,dom,result,code,marshal,sax,result,or,code,marshal,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,result,the,result,to,marshal,to,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,result,if,neither,a,code,domresult,a,code,saxresult,nor,a,code,stream,result,see,marshal,dom,result,object,javax,xml,transform,dom,domresult,see,marshal,sax,result,object,javax,xml,transform,sax,saxresult,see,marshal,stream,result,object,javax,xml,transform,stream,stream,result;override,public,final,void,marshal,object,graph,result,result,throws,ioexception,xml,mapping,exception,if,result,instanceof,domresult,marshal,dom,result,graph,domresult,result,else,if,stax,utils,is,stax,result,result,marshal,stax,result,graph,result,else,if,result,instanceof,saxresult,marshal,sax,result,graph,saxresult,result,else,if,result,instanceof,stream,result,marshal,stream,result,graph,stream,result,result,else,throw,new,illegal,argument,exception,unknown,result,type,result,get,class
AbstractMarshaller -> @Override 	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException;1455117733;Marshals the object graph with the given root into the provided {@code javax.xml.transform.Result}._<p>This implementation inspects the given result, and calls {@code marshalDomResult},_{@code marshalSaxResult}, or {@code marshalStreamResult}._@param graph the root of the object graph to marshal_@param result the result to marshal to_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code result} if neither a {@code DOMResult},_a {@code SAXResult}, nor a {@code StreamResult}_@see #marshalDomResult(Object, javax.xml.transform.dom.DOMResult)_@see #marshalSaxResult(Object, javax.xml.transform.sax.SAXResult)_@see #marshalStreamResult(Object, javax.xml.transform.stream.StreamResult);@Override_	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException {_		if (result instanceof DOMResult) {_			marshalDomResult(graph, (DOMResult) result)__		}_		else if (StaxUtils.isStaxResult(result)) {_			marshalStaxResult(graph, result)__		}_		else if (result instanceof SAXResult) {_			marshalSaxResult(graph, (SAXResult) result)__		}_		else if (result instanceof StreamResult) {_			marshalStreamResult(graph, (StreamResult) result)__		}_		else {_			throw new IllegalArgumentException("Unknown Result type: " + result.getClass())__		}_	};marshals,the,object,graph,with,the,given,root,into,the,provided,code,javax,xml,transform,result,p,this,implementation,inspects,the,given,result,and,calls,code,marshal,dom,result,code,marshal,sax,result,or,code,marshal,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,result,the,result,to,marshal,to,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,result,if,neither,a,code,domresult,a,code,saxresult,nor,a,code,stream,result,see,marshal,dom,result,object,javax,xml,transform,dom,domresult,see,marshal,sax,result,object,javax,xml,transform,sax,saxresult,see,marshal,stream,result,object,javax,xml,transform,stream,stream,result;override,public,final,void,marshal,object,graph,result,result,throws,ioexception,xml,mapping,exception,if,result,instanceof,domresult,marshal,dom,result,graph,domresult,result,else,if,stax,utils,is,stax,result,result,marshal,stax,result,graph,result,else,if,result,instanceof,saxresult,marshal,sax,result,graph,saxresult,result,else,if,result,instanceof,stream,result,marshal,stream,result,graph,stream,result,result,else,throw,new,illegal,argument,exception,unknown,result,type,result,get,class
AbstractMarshaller -> @Override 	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException;1468948866;Marshals the object graph with the given root into the provided {@code javax.xml.transform.Result}._<p>This implementation inspects the given result, and calls {@code marshalDomResult},_{@code marshalSaxResult}, or {@code marshalStreamResult}._@param graph the root of the object graph to marshal_@param result the result to marshal to_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code result} if neither a {@code DOMResult},_a {@code SAXResult}, nor a {@code StreamResult}_@see #marshalDomResult(Object, javax.xml.transform.dom.DOMResult)_@see #marshalSaxResult(Object, javax.xml.transform.sax.SAXResult)_@see #marshalStreamResult(Object, javax.xml.transform.stream.StreamResult);@Override_	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException {_		if (result instanceof DOMResult) {_			marshalDomResult(graph, (DOMResult) result)__		}_		else if (StaxUtils.isStaxResult(result)) {_			marshalStaxResult(graph, result)__		}_		else if (result instanceof SAXResult) {_			marshalSaxResult(graph, (SAXResult) result)__		}_		else if (result instanceof StreamResult) {_			marshalStreamResult(graph, (StreamResult) result)__		}_		else {_			throw new IllegalArgumentException("Unknown Result type: " + result.getClass())__		}_	};marshals,the,object,graph,with,the,given,root,into,the,provided,code,javax,xml,transform,result,p,this,implementation,inspects,the,given,result,and,calls,code,marshal,dom,result,code,marshal,sax,result,or,code,marshal,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,result,the,result,to,marshal,to,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,result,if,neither,a,code,domresult,a,code,saxresult,nor,a,code,stream,result,see,marshal,dom,result,object,javax,xml,transform,dom,domresult,see,marshal,sax,result,object,javax,xml,transform,sax,saxresult,see,marshal,stream,result,object,javax,xml,transform,stream,stream,result;override,public,final,void,marshal,object,graph,result,result,throws,ioexception,xml,mapping,exception,if,result,instanceof,domresult,marshal,dom,result,graph,domresult,result,else,if,stax,utils,is,stax,result,result,marshal,stax,result,graph,result,else,if,result,instanceof,saxresult,marshal,sax,result,graph,saxresult,result,else,if,result,instanceof,stream,result,marshal,stream,result,graph,stream,result,result,else,throw,new,illegal,argument,exception,unknown,result,type,result,get,class
AbstractMarshaller -> @Override 	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException;1483750478;Marshals the object graph with the given root into the provided {@code javax.xml.transform.Result}._<p>This implementation inspects the given result, and calls {@code marshalDomResult},_{@code marshalSaxResult}, or {@code marshalStreamResult}._@param graph the root of the object graph to marshal_@param result the result to marshal to_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code result} if neither a {@code DOMResult},_a {@code SAXResult}, nor a {@code StreamResult}_@see #marshalDomResult(Object, javax.xml.transform.dom.DOMResult)_@see #marshalSaxResult(Object, javax.xml.transform.sax.SAXResult)_@see #marshalStreamResult(Object, javax.xml.transform.stream.StreamResult);@Override_	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException {_		if (result instanceof DOMResult) {_			marshalDomResult(graph, (DOMResult) result)__		}_		else if (StaxUtils.isStaxResult(result)) {_			marshalStaxResult(graph, result)__		}_		else if (result instanceof SAXResult) {_			marshalSaxResult(graph, (SAXResult) result)__		}_		else if (result instanceof StreamResult) {_			marshalStreamResult(graph, (StreamResult) result)__		}_		else {_			throw new IllegalArgumentException("Unknown Result type: " + result.getClass())__		}_	};marshals,the,object,graph,with,the,given,root,into,the,provided,code,javax,xml,transform,result,p,this,implementation,inspects,the,given,result,and,calls,code,marshal,dom,result,code,marshal,sax,result,or,code,marshal,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,result,the,result,to,marshal,to,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,result,if,neither,a,code,domresult,a,code,saxresult,nor,a,code,stream,result,see,marshal,dom,result,object,javax,xml,transform,dom,domresult,see,marshal,sax,result,object,javax,xml,transform,sax,saxresult,see,marshal,stream,result,object,javax,xml,transform,stream,stream,result;override,public,final,void,marshal,object,graph,result,result,throws,ioexception,xml,mapping,exception,if,result,instanceof,domresult,marshal,dom,result,graph,domresult,result,else,if,stax,utils,is,stax,result,result,marshal,stax,result,graph,result,else,if,result,instanceof,saxresult,marshal,sax,result,graph,saxresult,result,else,if,result,instanceof,stream,result,marshal,stream,result,graph,stream,result,result,else,throw,new,illegal,argument,exception,unknown,result,type,result,get,class
AbstractMarshaller -> @Override 	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException;1484301200;Marshals the object graph with the given root into the provided {@code javax.xml.transform.Result}._<p>This implementation inspects the given result, and calls {@code marshalDomResult},_{@code marshalSaxResult}, or {@code marshalStreamResult}._@param graph the root of the object graph to marshal_@param result the result to marshal to_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code result} if neither a {@code DOMResult},_a {@code SAXResult}, nor a {@code StreamResult}_@see #marshalDomResult(Object, javax.xml.transform.dom.DOMResult)_@see #marshalSaxResult(Object, javax.xml.transform.sax.SAXResult)_@see #marshalStreamResult(Object, javax.xml.transform.stream.StreamResult);@Override_	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException {_		if (result instanceof DOMResult) {_			marshalDomResult(graph, (DOMResult) result)__		}_		else if (StaxUtils.isStaxResult(result)) {_			marshalStaxResult(graph, result)__		}_		else if (result instanceof SAXResult) {_			marshalSaxResult(graph, (SAXResult) result)__		}_		else if (result instanceof StreamResult) {_			marshalStreamResult(graph, (StreamResult) result)__		}_		else {_			throw new IllegalArgumentException("Unknown Result type: " + result.getClass())__		}_	};marshals,the,object,graph,with,the,given,root,into,the,provided,code,javax,xml,transform,result,p,this,implementation,inspects,the,given,result,and,calls,code,marshal,dom,result,code,marshal,sax,result,or,code,marshal,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,result,the,result,to,marshal,to,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,result,if,neither,a,code,domresult,a,code,saxresult,nor,a,code,stream,result,see,marshal,dom,result,object,javax,xml,transform,dom,domresult,see,marshal,sax,result,object,javax,xml,transform,sax,saxresult,see,marshal,stream,result,object,javax,xml,transform,stream,stream,result;override,public,final,void,marshal,object,graph,result,result,throws,ioexception,xml,mapping,exception,if,result,instanceof,domresult,marshal,dom,result,graph,domresult,result,else,if,stax,utils,is,stax,result,result,marshal,stax,result,graph,result,else,if,result,instanceof,saxresult,marshal,sax,result,graph,saxresult,result,else,if,result,instanceof,stream,result,marshal,stream,result,graph,stream,result,result,else,throw,new,illegal,argument,exception,unknown,result,type,result,get,class
AbstractMarshaller -> @Override 	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException;1495868221;Marshals the object graph with the given root into the provided {@code javax.xml.transform.Result}._<p>This implementation inspects the given result, and calls {@code marshalDomResult},_{@code marshalSaxResult}, or {@code marshalStreamResult}._@param graph the root of the object graph to marshal_@param result the result to marshal to_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code result} if neither a {@code DOMResult},_a {@code SAXResult}, nor a {@code StreamResult}_@see #marshalDomResult(Object, javax.xml.transform.dom.DOMResult)_@see #marshalSaxResult(Object, javax.xml.transform.sax.SAXResult)_@see #marshalStreamResult(Object, javax.xml.transform.stream.StreamResult);@Override_	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException {_		if (result instanceof DOMResult) {_			marshalDomResult(graph, (DOMResult) result)__		}_		else if (StaxUtils.isStaxResult(result)) {_			marshalStaxResult(graph, result)__		}_		else if (result instanceof SAXResult) {_			marshalSaxResult(graph, (SAXResult) result)__		}_		else if (result instanceof StreamResult) {_			marshalStreamResult(graph, (StreamResult) result)__		}_		else {_			throw new IllegalArgumentException("Unknown Result type: " + result.getClass())__		}_	};marshals,the,object,graph,with,the,given,root,into,the,provided,code,javax,xml,transform,result,p,this,implementation,inspects,the,given,result,and,calls,code,marshal,dom,result,code,marshal,sax,result,or,code,marshal,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,result,the,result,to,marshal,to,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,result,if,neither,a,code,domresult,a,code,saxresult,nor,a,code,stream,result,see,marshal,dom,result,object,javax,xml,transform,dom,domresult,see,marshal,sax,result,object,javax,xml,transform,sax,saxresult,see,marshal,stream,result,object,javax,xml,transform,stream,stream,result;override,public,final,void,marshal,object,graph,result,result,throws,ioexception,xml,mapping,exception,if,result,instanceof,domresult,marshal,dom,result,graph,domresult,result,else,if,stax,utils,is,stax,result,result,marshal,stax,result,graph,result,else,if,result,instanceof,saxresult,marshal,sax,result,graph,saxresult,result,else,if,result,instanceof,stream,result,marshal,stream,result,graph,stream,result,result,else,throw,new,illegal,argument,exception,unknown,result,type,result,get,class
AbstractMarshaller -> @Override 	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException;1498780456;Marshals the object graph with the given root into the provided {@code javax.xml.transform.Result}._<p>This implementation inspects the given result, and calls {@code marshalDomResult},_{@code marshalSaxResult}, or {@code marshalStreamResult}._@param graph the root of the object graph to marshal_@param result the result to marshal to_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code result} if neither a {@code DOMResult},_a {@code SAXResult}, nor a {@code StreamResult}_@see #marshalDomResult(Object, javax.xml.transform.dom.DOMResult)_@see #marshalSaxResult(Object, javax.xml.transform.sax.SAXResult)_@see #marshalStreamResult(Object, javax.xml.transform.stream.StreamResult);@Override_	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException {_		if (result instanceof DOMResult) {_			marshalDomResult(graph, (DOMResult) result)__		}_		else if (StaxUtils.isStaxResult(result)) {_			marshalStaxResult(graph, result)__		}_		else if (result instanceof SAXResult) {_			marshalSaxResult(graph, (SAXResult) result)__		}_		else if (result instanceof StreamResult) {_			marshalStreamResult(graph, (StreamResult) result)__		}_		else {_			throw new IllegalArgumentException("Unknown Result type: " + result.getClass())__		}_	};marshals,the,object,graph,with,the,given,root,into,the,provided,code,javax,xml,transform,result,p,this,implementation,inspects,the,given,result,and,calls,code,marshal,dom,result,code,marshal,sax,result,or,code,marshal,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,result,the,result,to,marshal,to,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,result,if,neither,a,code,domresult,a,code,saxresult,nor,a,code,stream,result,see,marshal,dom,result,object,javax,xml,transform,dom,domresult,see,marshal,sax,result,object,javax,xml,transform,sax,saxresult,see,marshal,stream,result,object,javax,xml,transform,stream,stream,result;override,public,final,void,marshal,object,graph,result,result,throws,ioexception,xml,mapping,exception,if,result,instanceof,domresult,marshal,dom,result,graph,domresult,result,else,if,stax,utils,is,stax,result,result,marshal,stax,result,graph,result,else,if,result,instanceof,saxresult,marshal,sax,result,graph,saxresult,result,else,if,result,instanceof,stream,result,marshal,stream,result,graph,stream,result,result,else,throw,new,illegal,argument,exception,unknown,result,type,result,get,class
AbstractMarshaller -> @Override 	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException;1518770299;Marshals the object graph with the given root into the provided {@code javax.xml.transform.Result}._<p>This implementation inspects the given result, and calls {@code marshalDomResult},_{@code marshalSaxResult}, or {@code marshalStreamResult}._@param graph the root of the object graph to marshal_@param result the result to marshal to_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code result} if neither a {@code DOMResult},_a {@code SAXResult}, nor a {@code StreamResult}_@see #marshalDomResult(Object, javax.xml.transform.dom.DOMResult)_@see #marshalSaxResult(Object, javax.xml.transform.sax.SAXResult)_@see #marshalStreamResult(Object, javax.xml.transform.stream.StreamResult);@Override_	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException {_		if (result instanceof DOMResult) {_			marshalDomResult(graph, (DOMResult) result)__		}_		else if (StaxUtils.isStaxResult(result)) {_			marshalStaxResult(graph, result)__		}_		else if (result instanceof SAXResult) {_			marshalSaxResult(graph, (SAXResult) result)__		}_		else if (result instanceof StreamResult) {_			marshalStreamResult(graph, (StreamResult) result)__		}_		else {_			throw new IllegalArgumentException("Unknown Result type: " + result.getClass())__		}_	};marshals,the,object,graph,with,the,given,root,into,the,provided,code,javax,xml,transform,result,p,this,implementation,inspects,the,given,result,and,calls,code,marshal,dom,result,code,marshal,sax,result,or,code,marshal,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,result,the,result,to,marshal,to,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,result,if,neither,a,code,domresult,a,code,saxresult,nor,a,code,stream,result,see,marshal,dom,result,object,javax,xml,transform,dom,domresult,see,marshal,sax,result,object,javax,xml,transform,sax,saxresult,see,marshal,stream,result,object,javax,xml,transform,stream,stream,result;override,public,final,void,marshal,object,graph,result,result,throws,ioexception,xml,mapping,exception,if,result,instanceof,domresult,marshal,dom,result,graph,domresult,result,else,if,stax,utils,is,stax,result,result,marshal,stax,result,graph,result,else,if,result,instanceof,saxresult,marshal,sax,result,graph,saxresult,result,else,if,result,instanceof,stream,result,marshal,stream,result,graph,stream,result,result,else,throw,new,illegal,argument,exception,unknown,result,type,result,get,class
AbstractMarshaller -> @Override 	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException;1518770299;Marshals the object graph with the given root into the provided {@code javax.xml.transform.Result}._<p>This implementation inspects the given result, and calls {@code marshalDomResult},_{@code marshalSaxResult}, or {@code marshalStreamResult}._@param graph the root of the object graph to marshal_@param result the result to marshal to_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code result} if neither a {@code DOMResult},_a {@code SAXResult}, nor a {@code StreamResult}_@see #marshalDomResult(Object, javax.xml.transform.dom.DOMResult)_@see #marshalSaxResult(Object, javax.xml.transform.sax.SAXResult)_@see #marshalStreamResult(Object, javax.xml.transform.stream.StreamResult);@Override_	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException {_		if (result instanceof DOMResult) {_			marshalDomResult(graph, (DOMResult) result)__		}_		else if (StaxUtils.isStaxResult(result)) {_			marshalStaxResult(graph, result)__		}_		else if (result instanceof SAXResult) {_			marshalSaxResult(graph, (SAXResult) result)__		}_		else if (result instanceof StreamResult) {_			marshalStreamResult(graph, (StreamResult) result)__		}_		else {_			throw new IllegalArgumentException("Unknown Result type: " + result.getClass())__		}_	};marshals,the,object,graph,with,the,given,root,into,the,provided,code,javax,xml,transform,result,p,this,implementation,inspects,the,given,result,and,calls,code,marshal,dom,result,code,marshal,sax,result,or,code,marshal,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,result,the,result,to,marshal,to,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,result,if,neither,a,code,domresult,a,code,saxresult,nor,a,code,stream,result,see,marshal,dom,result,object,javax,xml,transform,dom,domresult,see,marshal,sax,result,object,javax,xml,transform,sax,saxresult,see,marshal,stream,result,object,javax,xml,transform,stream,stream,result;override,public,final,void,marshal,object,graph,result,result,throws,ioexception,xml,mapping,exception,if,result,instanceof,domresult,marshal,dom,result,graph,domresult,result,else,if,stax,utils,is,stax,result,result,marshal,stax,result,graph,result,else,if,result,instanceof,saxresult,marshal,sax,result,graph,saxresult,result,else,if,result,instanceof,stream,result,marshal,stream,result,graph,stream,result,result,else,throw,new,illegal,argument,exception,unknown,result,type,result,get,class
AbstractMarshaller -> @Override 	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException;1530174524;Marshals the object graph with the given root into the provided {@code javax.xml.transform.Result}._<p>This implementation inspects the given result, and calls {@code marshalDomResult},_{@code marshalSaxResult}, or {@code marshalStreamResult}._@param graph the root of the object graph to marshal_@param result the result to marshal to_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code result} if neither a {@code DOMResult},_a {@code SAXResult}, nor a {@code StreamResult}_@see #marshalDomResult(Object, javax.xml.transform.dom.DOMResult)_@see #marshalSaxResult(Object, javax.xml.transform.sax.SAXResult)_@see #marshalStreamResult(Object, javax.xml.transform.stream.StreamResult);@Override_	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException {_		if (result instanceof DOMResult) {_			marshalDomResult(graph, (DOMResult) result)__		}_		else if (StaxUtils.isStaxResult(result)) {_			marshalStaxResult(graph, result)__		}_		else if (result instanceof SAXResult) {_			marshalSaxResult(graph, (SAXResult) result)__		}_		else if (result instanceof StreamResult) {_			marshalStreamResult(graph, (StreamResult) result)__		}_		else {_			throw new IllegalArgumentException("Unknown Result type: " + result.getClass())__		}_	};marshals,the,object,graph,with,the,given,root,into,the,provided,code,javax,xml,transform,result,p,this,implementation,inspects,the,given,result,and,calls,code,marshal,dom,result,code,marshal,sax,result,or,code,marshal,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,result,the,result,to,marshal,to,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,result,if,neither,a,code,domresult,a,code,saxresult,nor,a,code,stream,result,see,marshal,dom,result,object,javax,xml,transform,dom,domresult,see,marshal,sax,result,object,javax,xml,transform,sax,saxresult,see,marshal,stream,result,object,javax,xml,transform,stream,stream,result;override,public,final,void,marshal,object,graph,result,result,throws,ioexception,xml,mapping,exception,if,result,instanceof,domresult,marshal,dom,result,graph,domresult,result,else,if,stax,utils,is,stax,result,result,marshal,stax,result,graph,result,else,if,result,instanceof,saxresult,marshal,sax,result,graph,saxresult,result,else,if,result,instanceof,stream,result,marshal,stream,result,graph,stream,result,result,else,throw,new,illegal,argument,exception,unknown,result,type,result,get,class
AbstractMarshaller -> @Override 	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException;1530174524;Marshals the object graph with the given root into the provided {@code javax.xml.transform.Result}._<p>This implementation inspects the given result, and calls {@code marshalDomResult},_{@code marshalSaxResult}, or {@code marshalStreamResult}._@param graph the root of the object graph to marshal_@param result the result to marshal to_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given object cannot be marshalled to the result_@throws IllegalArgumentException if {@code result} if neither a {@code DOMResult},_a {@code SAXResult}, nor a {@code StreamResult}_@see #marshalDomResult(Object, javax.xml.transform.dom.DOMResult)_@see #marshalSaxResult(Object, javax.xml.transform.sax.SAXResult)_@see #marshalStreamResult(Object, javax.xml.transform.stream.StreamResult);@Override_	public final void marshal(Object graph, Result result) throws IOException, XmlMappingException {_		if (result instanceof DOMResult) {_			marshalDomResult(graph, (DOMResult) result)__		}_		else if (StaxUtils.isStaxResult(result)) {_			marshalStaxResult(graph, result)__		}_		else if (result instanceof SAXResult) {_			marshalSaxResult(graph, (SAXResult) result)__		}_		else if (result instanceof StreamResult) {_			marshalStreamResult(graph, (StreamResult) result)__		}_		else {_			throw new IllegalArgumentException("Unknown Result type: " + result.getClass())__		}_	};marshals,the,object,graph,with,the,given,root,into,the,provided,code,javax,xml,transform,result,p,this,implementation,inspects,the,given,result,and,calls,code,marshal,dom,result,code,marshal,sax,result,or,code,marshal,stream,result,param,graph,the,root,of,the,object,graph,to,marshal,param,result,the,result,to,marshal,to,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,result,throws,illegal,argument,exception,if,code,result,if,neither,a,code,domresult,a,code,saxresult,nor,a,code,stream,result,see,marshal,dom,result,object,javax,xml,transform,dom,domresult,see,marshal,sax,result,object,javax,xml,transform,sax,saxresult,see,marshal,stream,result,object,javax,xml,transform,stream,stream,result;override,public,final,void,marshal,object,graph,result,result,throws,ioexception,xml,mapping,exception,if,result,instanceof,domresult,marshal,dom,result,graph,domresult,result,else,if,stax,utils,is,stax,result,result,marshal,stax,result,graph,result,else,if,result,instanceof,saxresult,marshal,sax,result,graph,saxresult,result,else,if,result,instanceof,stream,result,marshal,stream,result,graph,stream,result,result,else,throw,new,illegal,argument,exception,unknown,result,type,result,get,class
AbstractMarshaller -> public boolean isSupportDtd();1435665021;Whether DTD parsing is supported.;public boolean isSupportDtd() {_		return this.supportDtd__	};whether,dtd,parsing,is,supported;public,boolean,is,support,dtd,return,this,support,dtd
AbstractMarshaller -> public boolean isSupportDtd();1455117733;Whether DTD parsing is supported.;public boolean isSupportDtd() {_		return this.supportDtd__	};whether,dtd,parsing,is,supported;public,boolean,is,support,dtd,return,this,support,dtd
AbstractMarshaller -> public boolean isSupportDtd();1468948866;Whether DTD parsing is supported.;public boolean isSupportDtd() {_		return this.supportDtd__	};whether,dtd,parsing,is,supported;public,boolean,is,support,dtd,return,this,support,dtd
AbstractMarshaller -> public boolean isSupportDtd();1483750478;Whether DTD parsing is supported.;public boolean isSupportDtd() {_		return this.supportDtd__	};whether,dtd,parsing,is,supported;public,boolean,is,support,dtd,return,this,support,dtd
AbstractMarshaller -> public boolean isSupportDtd();1484301200;Whether DTD parsing is supported.;public boolean isSupportDtd() {_		return this.supportDtd__	};whether,dtd,parsing,is,supported;public,boolean,is,support,dtd,return,this,support,dtd
AbstractMarshaller -> public boolean isSupportDtd();1495868221;Whether DTD parsing is supported.;public boolean isSupportDtd() {_		return this.supportDtd__	};whether,dtd,parsing,is,supported;public,boolean,is,support,dtd,return,this,support,dtd
AbstractMarshaller -> public boolean isSupportDtd();1498780456;Whether DTD parsing is supported.;public boolean isSupportDtd() {_		return this.supportDtd__	};whether,dtd,parsing,is,supported;public,boolean,is,support,dtd,return,this,support,dtd
AbstractMarshaller -> public boolean isSupportDtd();1518770299;Whether DTD parsing is supported.;public boolean isSupportDtd() {_		return this.supportDtd__	};whether,dtd,parsing,is,supported;public,boolean,is,support,dtd,return,this,support,dtd
AbstractMarshaller -> public boolean isSupportDtd();1518770299;Whether DTD parsing is supported.;public boolean isSupportDtd() {_		return this.supportDtd__	};whether,dtd,parsing,is,supported;public,boolean,is,support,dtd,return,this,support,dtd
AbstractMarshaller -> public boolean isSupportDtd();1530174524;Whether DTD parsing is supported.;public boolean isSupportDtd() {_		return this.supportDtd__	};whether,dtd,parsing,is,supported;public,boolean,is,support,dtd,return,this,support,dtd
AbstractMarshaller -> public boolean isSupportDtd();1530174524;Whether DTD parsing is supported.;public boolean isSupportDtd() {_		return this.supportDtd__	};whether,dtd,parsing,is,supported;public,boolean,is,support,dtd,return,this,support,dtd
AbstractMarshaller -> protected abstract void marshalSaxHandlers( 			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler) 			throws XmlMappingException_;1328020251;Abstract template method for marshalling the given object graph to a SAX <code>ContentHandler</code>._@param graph the root of the object graph to marshal_@param contentHandler the SAX <code>ContentHandler</code>_@param lexicalHandler the SAX2 <code>LexicalHandler</code>. Can be <code>null</code>._@throws XmlMappingException if the given object cannot be marshalled to the handlers;protected abstract void marshalSaxHandlers(_			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,sax,code,content,handler,code,param,graph,the,root,of,the,object,graph,to,marshal,param,content,handler,the,sax,code,content,handler,code,param,lexical,handler,the,sax2,code,lexical,handler,code,can,be,code,null,code,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,handlers;protected,abstract,void,marshal,sax,handlers,object,graph,content,handler,content,handler,lexical,handler,lexical,handler,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalSaxHandlers( 			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler) 			throws XmlMappingException_;1356735495;Abstract template method for marshalling the given object graph to a SAX {@code ContentHandler}._@param graph the root of the object graph to marshal_@param contentHandler the SAX {@code ContentHandler}_@param lexicalHandler the SAX2 {@code LexicalHandler}. Can be {@code null}._@throws XmlMappingException if the given object cannot be marshalled to the handlers;protected abstract void marshalSaxHandlers(_			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,sax,code,content,handler,param,graph,the,root,of,the,object,graph,to,marshal,param,content,handler,the,sax,code,content,handler,param,lexical,handler,the,sax2,code,lexical,handler,can,be,code,null,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,handlers;protected,abstract,void,marshal,sax,handlers,object,graph,content,handler,content,handler,lexical,handler,lexical,handler,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalSaxHandlers( 			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler) 			throws XmlMappingException_;1357119239;Abstract template method for marshalling the given object graph to a SAX {@code ContentHandler}._@param graph the root of the object graph to marshal_@param contentHandler the SAX {@code ContentHandler}_@param lexicalHandler the SAX2 {@code LexicalHandler}. Can be {@code null}._@throws XmlMappingException if the given object cannot be marshalled to the handlers;protected abstract void marshalSaxHandlers(_			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,sax,code,content,handler,param,graph,the,root,of,the,object,graph,to,marshal,param,content,handler,the,sax,code,content,handler,param,lexical,handler,the,sax2,code,lexical,handler,can,be,code,null,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,handlers;protected,abstract,void,marshal,sax,handlers,object,graph,content,handler,content,handler,lexical,handler,lexical,handler,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalSaxHandlers( 			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler) 			throws XmlMappingException_;1368482696;Abstract template method for marshalling the given object graph to a SAX {@code ContentHandler}._@param graph the root of the object graph to marshal_@param contentHandler the SAX {@code ContentHandler}_@param lexicalHandler the SAX2 {@code LexicalHandler}. Can be {@code null}._@throws XmlMappingException if the given object cannot be marshalled to the handlers;protected abstract void marshalSaxHandlers(_			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,sax,code,content,handler,param,graph,the,root,of,the,object,graph,to,marshal,param,content,handler,the,sax,code,content,handler,param,lexical,handler,the,sax2,code,lexical,handler,can,be,code,null,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,handlers;protected,abstract,void,marshal,sax,handlers,object,graph,content,handler,content,handler,lexical,handler,lexical,handler,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalSaxHandlers( 			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler) 			throws XmlMappingException_;1376041400;Abstract template method for marshalling the given object graph to a SAX {@code ContentHandler}._@param graph the root of the object graph to marshal_@param contentHandler the SAX {@code ContentHandler}_@param lexicalHandler the SAX2 {@code LexicalHandler}. Can be {@code null}._@throws XmlMappingException if the given object cannot be marshalled to the handlers;protected abstract void marshalSaxHandlers(_			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,sax,code,content,handler,param,graph,the,root,of,the,object,graph,to,marshal,param,content,handler,the,sax,code,content,handler,param,lexical,handler,the,sax2,code,lexical,handler,can,be,code,null,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,handlers;protected,abstract,void,marshal,sax,handlers,object,graph,content,handler,content,handler,lexical,handler,lexical,handler,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalSaxHandlers( 			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler) 			throws XmlMappingException_;1392767670;Abstract template method for marshalling the given object graph to a SAX {@code ContentHandler}._@param graph the root of the object graph to marshal_@param contentHandler the SAX {@code ContentHandler}_@param lexicalHandler the SAX2 {@code LexicalHandler}. Can be {@code null}._@throws XmlMappingException if the given object cannot be marshalled to the handlers;protected abstract void marshalSaxHandlers(_			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,sax,code,content,handler,param,graph,the,root,of,the,object,graph,to,marshal,param,content,handler,the,sax,code,content,handler,param,lexical,handler,the,sax2,code,lexical,handler,can,be,code,null,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,handlers;protected,abstract,void,marshal,sax,handlers,object,graph,content,handler,content,handler,lexical,handler,lexical,handler,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalSaxHandlers( 			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler) 			throws XmlMappingException_;1397058176;Abstract template method for marshalling the given object graph to a SAX {@code ContentHandler}._@param graph the root of the object graph to marshal_@param contentHandler the SAX {@code ContentHandler}_@param lexicalHandler the SAX2 {@code LexicalHandler}. Can be {@code null}._@throws XmlMappingException if the given object cannot be marshalled to the handlers;protected abstract void marshalSaxHandlers(_			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,sax,code,content,handler,param,graph,the,root,of,the,object,graph,to,marshal,param,content,handler,the,sax,code,content,handler,param,lexical,handler,the,sax2,code,lexical,handler,can,be,code,null,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,handlers;protected,abstract,void,marshal,sax,handlers,object,graph,content,handler,content,handler,lexical,handler,lexical,handler,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalSaxHandlers( 			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler) 			throws XmlMappingException_;1397069887;Abstract template method for marshalling the given object graph to a SAX {@code ContentHandler}._@param graph the root of the object graph to marshal_@param contentHandler the SAX {@code ContentHandler}_@param lexicalHandler the SAX2 {@code LexicalHandler}. Can be {@code null}._@throws XmlMappingException if the given object cannot be marshalled to the handlers;protected abstract void marshalSaxHandlers(_			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,sax,code,content,handler,param,graph,the,root,of,the,object,graph,to,marshal,param,content,handler,the,sax,code,content,handler,param,lexical,handler,the,sax2,code,lexical,handler,can,be,code,null,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,handlers;protected,abstract,void,marshal,sax,handlers,object,graph,content,handler,content,handler,lexical,handler,lexical,handler,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalSaxHandlers( 			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler) 			throws XmlMappingException_;1398638859;Abstract template method for marshalling the given object graph to a SAX {@code ContentHandler}._@param graph the root of the object graph to marshal_@param contentHandler the SAX {@code ContentHandler}_@param lexicalHandler the SAX2 {@code LexicalHandler}. Can be {@code null}._@throws XmlMappingException if the given object cannot be marshalled to the handlers;protected abstract void marshalSaxHandlers(_			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,sax,code,content,handler,param,graph,the,root,of,the,object,graph,to,marshal,param,content,handler,the,sax,code,content,handler,param,lexical,handler,the,sax2,code,lexical,handler,can,be,code,null,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,handlers;protected,abstract,void,marshal,sax,handlers,object,graph,content,handler,content,handler,lexical,handler,lexical,handler,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalSaxHandlers( 			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler) 			throws XmlMappingException_;1400553912;Abstract template method for marshalling the given object graph to a SAX {@code ContentHandler}._@param graph the root of the object graph to marshal_@param contentHandler the SAX {@code ContentHandler}_@param lexicalHandler the SAX2 {@code LexicalHandler}. Can be {@code null}._@throws XmlMappingException if the given object cannot be marshalled to the handlers;protected abstract void marshalSaxHandlers(_			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,sax,code,content,handler,param,graph,the,root,of,the,object,graph,to,marshal,param,content,handler,the,sax,code,content,handler,param,lexical,handler,the,sax2,code,lexical,handler,can,be,code,null,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,handlers;protected,abstract,void,marshal,sax,handlers,object,graph,content,handler,content,handler,lexical,handler,lexical,handler,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalSaxHandlers( 			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler) 			throws XmlMappingException_;1435665021;Abstract template method for marshalling the given object graph to a SAX {@code ContentHandler}._@param graph the root of the object graph to marshal_@param contentHandler the SAX {@code ContentHandler}_@param lexicalHandler the SAX2 {@code LexicalHandler}. Can be {@code null}._@throws XmlMappingException if the given object cannot be marshalled to the handlers;protected abstract void marshalSaxHandlers(_			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,sax,code,content,handler,param,graph,the,root,of,the,object,graph,to,marshal,param,content,handler,the,sax,code,content,handler,param,lexical,handler,the,sax2,code,lexical,handler,can,be,code,null,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,handlers;protected,abstract,void,marshal,sax,handlers,object,graph,content,handler,content,handler,lexical,handler,lexical,handler,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalSaxHandlers( 			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler) 			throws XmlMappingException_;1455117733;Abstract template method for marshalling the given object graph to a SAX {@code ContentHandler}._@param graph the root of the object graph to marshal_@param contentHandler the SAX {@code ContentHandler}_@param lexicalHandler the SAX2 {@code LexicalHandler}. Can be {@code null}._@throws XmlMappingException if the given object cannot be marshalled to the handlers;protected abstract void marshalSaxHandlers(_			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,sax,code,content,handler,param,graph,the,root,of,the,object,graph,to,marshal,param,content,handler,the,sax,code,content,handler,param,lexical,handler,the,sax2,code,lexical,handler,can,be,code,null,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,handlers;protected,abstract,void,marshal,sax,handlers,object,graph,content,handler,content,handler,lexical,handler,lexical,handler,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalSaxHandlers( 			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler) 			throws XmlMappingException_;1468948866;Abstract template method for marshalling the given object graph to a SAX {@code ContentHandler}._@param graph the root of the object graph to marshal_@param contentHandler the SAX {@code ContentHandler}_@param lexicalHandler the SAX2 {@code LexicalHandler}. Can be {@code null}._@throws XmlMappingException if the given object cannot be marshalled to the handlers;protected abstract void marshalSaxHandlers(_			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,sax,code,content,handler,param,graph,the,root,of,the,object,graph,to,marshal,param,content,handler,the,sax,code,content,handler,param,lexical,handler,the,sax2,code,lexical,handler,can,be,code,null,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,handlers;protected,abstract,void,marshal,sax,handlers,object,graph,content,handler,content,handler,lexical,handler,lexical,handler,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalSaxHandlers( 			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler) 			throws XmlMappingException_;1483750478;Abstract template method for marshalling the given object graph to a SAX {@code ContentHandler}._@param graph the root of the object graph to marshal_@param contentHandler the SAX {@code ContentHandler}_@param lexicalHandler the SAX2 {@code LexicalHandler}. Can be {@code null}._@throws XmlMappingException if the given object cannot be marshalled to the handlers;protected abstract void marshalSaxHandlers(_			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,sax,code,content,handler,param,graph,the,root,of,the,object,graph,to,marshal,param,content,handler,the,sax,code,content,handler,param,lexical,handler,the,sax2,code,lexical,handler,can,be,code,null,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,handlers;protected,abstract,void,marshal,sax,handlers,object,graph,content,handler,content,handler,lexical,handler,lexical,handler,throws,xml,mapping,exception
AbstractMarshaller -> protected abstract void marshalSaxHandlers( 			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler) 			throws XmlMappingException_;1484301200;Abstract template method for marshalling the given object graph to a SAX {@code ContentHandler}._@param graph the root of the object graph to marshal_@param contentHandler the SAX {@code ContentHandler}_@param lexicalHandler the SAX2 {@code LexicalHandler}. Can be {@code null}._@throws XmlMappingException if the given object cannot be marshalled to the handlers;protected abstract void marshalSaxHandlers(_			Object graph, ContentHandler contentHandler, LexicalHandler lexicalHandler)_			throws XmlMappingException_;abstract,template,method,for,marshalling,the,given,object,graph,to,a,sax,code,content,handler,param,graph,the,root,of,the,object,graph,to,marshal,param,content,handler,the,sax,code,content,handler,param,lexical,handler,the,sax2,code,lexical,handler,can,be,code,null,throws,xml,mapping,exception,if,the,given,object,cannot,be,marshalled,to,the,handlers;protected,abstract,void,marshal,sax,handlers,object,graph,content,handler,content,handler,lexical,handler,lexical,handler,throws,xml,mapping,exception
AbstractMarshaller -> protected Object unmarshalStreamSourceNoExternalEntitities(StreamSource streamSource) 			throws XmlMappingException, IOException;1397058176;Template method for handling {@code StreamSource}s with protection against_the XML External Entity (XXE) processing vulnerability taking into account_the value of the {@link #setProcessExternalEntities(boolean)} property._<p>The default implementation wraps the StreamSource as a SAXSource and delegates_to {@link #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)}._@param streamSource the {@code StreamSource}_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@see <a href="https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Processing">XML_External_Entity_(XXE)_Processing</a>;protected Object unmarshalStreamSourceNoExternalEntitities(StreamSource streamSource)_			throws XmlMappingException, IOException {__		InputSource inputSource__		if (streamSource.getInputStream() != null) {_			inputSource = new InputSource(streamSource.getInputStream())__			inputSource.setEncoding(getDefaultEncoding())__		}_		else if (streamSource.getReader() != null) {_			inputSource = new InputSource(streamSource.getReader())__		}_		else {_			inputSource = new InputSource(streamSource.getSystemId())__		}_		return unmarshalSaxSource(new SAXSource(inputSource))__	};template,method,for,handling,code,stream,source,s,with,protection,against,the,xml,external,entity,xxe,processing,vulnerability,taking,into,account,the,value,of,the,link,set,process,external,entities,boolean,property,p,the,default,implementation,wraps,the,stream,source,as,a,saxsource,and,delegates,to,link,unmarshal,sax,source,javax,xml,transform,sax,saxsource,param,stream,source,the,code,stream,source,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,see,a,href,https,www,owasp,org,index,php,xxe,xxe,a;protected,object,unmarshal,stream,source,no,external,entitities,stream,source,stream,source,throws,xml,mapping,exception,ioexception,input,source,input,source,if,stream,source,get,input,stream,null,input,source,new,input,source,stream,source,get,input,stream,input,source,set,encoding,get,default,encoding,else,if,stream,source,get,reader,null,input,source,new,input,source,stream,source,get,reader,else,input,source,new,input,source,stream,source,get,system,id,return,unmarshal,sax,source,new,saxsource,input,source
AbstractMarshaller -> protected Object unmarshalStreamSourceNoExternalEntitities(StreamSource streamSource) 			throws XmlMappingException, IOException;1397069887;Template method for handling {@code StreamSource}s with protection against_the XML External Entity (XXE) processing vulnerability taking into account_the value of the {@link #setProcessExternalEntities(boolean)} property._<p>The default implementation wraps the StreamSource as a SAXSource and delegates_to {@link #unmarshalSaxSource(javax.xml.transform.sax.SAXSource)}._@param streamSource the {@code StreamSource}_@return the object graph_@throws IOException if an I/O exception occurs_@throws XmlMappingException if the given source cannot be mapped to an object_@see <a href="https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Processing">XML_External_Entity_(XXE)_Processing</a>;protected Object unmarshalStreamSourceNoExternalEntitities(StreamSource streamSource)_			throws XmlMappingException, IOException {__		InputSource inputSource__		if (streamSource.getInputStream() != null) {_			inputSource = new InputSource(streamSource.getInputStream())__			inputSource.setEncoding(getDefaultEncoding())__		}_		else if (streamSource.getReader() != null) {_			inputSource = new InputSource(streamSource.getReader())__		}_		else {_			inputSource = new InputSource(streamSource.getSystemId())__		}_		return unmarshalSaxSource(new SAXSource(inputSource))__	};template,method,for,handling,code,stream,source,s,with,protection,against,the,xml,external,entity,xxe,processing,vulnerability,taking,into,account,the,value,of,the,link,set,process,external,entities,boolean,property,p,the,default,implementation,wraps,the,stream,source,as,a,saxsource,and,delegates,to,link,unmarshal,sax,source,javax,xml,transform,sax,saxsource,param,stream,source,the,code,stream,source,return,the,object,graph,throws,ioexception,if,an,i,o,exception,occurs,throws,xml,mapping,exception,if,the,given,source,cannot,be,mapped,to,an,object,see,a,href,https,www,owasp,org,index,php,xxe,xxe,a;protected,object,unmarshal,stream,source,no,external,entitities,stream,source,stream,source,throws,xml,mapping,exception,ioexception,input,source,input,source,if,stream,source,get,input,stream,null,input,source,new,input,source,stream,source,get,input,stream,input,source,set,encoding,get,default,encoding,else,if,stream,source,get,reader,null,input,source,new,input,source,stream,source,get,reader,else,input,source,new,input,source,stream,source,get,system,id,return,unmarshal,sax,source,new,saxsource,input,source
AbstractMarshaller -> public void setProcessExternalEntities(boolean processExternalEntities);1392767670;Indicates whether external XML entities are processed when unmarshalling._<p>Default is {@code false}, meaning that external entities are not resolved._Note that processing of external entities will only be enabled/disabled when the_{@code Source} passed to {@link #unmarshal(Source)} is a {@link SAXSource} or_{@link StreamSource}. It has no effect for {@link DOMSource} or {@link StAXSource}_instances.;public void setProcessExternalEntities(boolean processExternalEntities) {_		this.processExternalEntities = processExternalEntities__	};indicates,whether,external,xml,entities,are,processed,when,unmarshalling,p,default,is,code,false,meaning,that,external,entities,are,not,resolved,note,that,processing,of,external,entities,will,only,be,enabled,disabled,when,the,code,source,passed,to,link,unmarshal,source,is,a,link,saxsource,or,link,stream,source,it,has,no,effect,for,link,domsource,or,link,st,axsource,instances;public,void,set,process,external,entities,boolean,process,external,entities,this,process,external,entities,process,external,entities
AbstractMarshaller -> public void setProcessExternalEntities(boolean processExternalEntities);1397058176;Indicates whether external XML entities are processed when unmarshalling._<p>Default is {@code false}, meaning that external entities are not resolved._Note that processing of external entities will only be enabled/disabled when the_{@code Source} passed to {@link #unmarshal(Source)} is a {@link SAXSource} or_{@link StreamSource}. It has no effect for {@link DOMSource} or {@link StAXSource}_instances.;public void setProcessExternalEntities(boolean processExternalEntities) {_		this.processExternalEntities = processExternalEntities__	};indicates,whether,external,xml,entities,are,processed,when,unmarshalling,p,default,is,code,false,meaning,that,external,entities,are,not,resolved,note,that,processing,of,external,entities,will,only,be,enabled,disabled,when,the,code,source,passed,to,link,unmarshal,source,is,a,link,saxsource,or,link,stream,source,it,has,no,effect,for,link,domsource,or,link,st,axsource,instances;public,void,set,process,external,entities,boolean,process,external,entities,this,process,external,entities,process,external,entities
AbstractMarshaller -> public void setProcessExternalEntities(boolean processExternalEntities);1397069887;Indicates whether external XML entities are processed when unmarshalling._<p>Default is {@code false}, meaning that external entities are not resolved._Note that processing of external entities will only be enabled/disabled when the_{@code Source} passed to {@link #unmarshal(Source)} is a {@link SAXSource} or_{@link StreamSource}. It has no effect for {@link DOMSource} or {@link StAXSource}_instances.;public void setProcessExternalEntities(boolean processExternalEntities) {_		this.processExternalEntities = processExternalEntities__	};indicates,whether,external,xml,entities,are,processed,when,unmarshalling,p,default,is,code,false,meaning,that,external,entities,are,not,resolved,note,that,processing,of,external,entities,will,only,be,enabled,disabled,when,the,code,source,passed,to,link,unmarshal,source,is,a,link,saxsource,or,link,stream,source,it,has,no,effect,for,link,domsource,or,link,st,axsource,instances;public,void,set,process,external,entities,boolean,process,external,entities,this,process,external,entities,process,external,entities
AbstractMarshaller -> public void setProcessExternalEntities(boolean processExternalEntities);1398638859;Indicates whether external XML entities are processed when unmarshalling._<p>Default is {@code false}, meaning that external entities are not resolved._Note that processing of external entities will only be enabled/disabled when the_{@code Source} passed to {@link #unmarshal(Source)} is a {@link SAXSource} or_{@link StreamSource}. It has no effect for {@link DOMSource} or {@link StAXSource}_instances.;public void setProcessExternalEntities(boolean processExternalEntities) {_		this.processExternalEntities = processExternalEntities__	};indicates,whether,external,xml,entities,are,processed,when,unmarshalling,p,default,is,code,false,meaning,that,external,entities,are,not,resolved,note,that,processing,of,external,entities,will,only,be,enabled,disabled,when,the,code,source,passed,to,link,unmarshal,source,is,a,link,saxsource,or,link,stream,source,it,has,no,effect,for,link,domsource,or,link,st,axsource,instances;public,void,set,process,external,entities,boolean,process,external,entities,this,process,external,entities,process,external,entities
AbstractMarshaller -> public void setProcessExternalEntities(boolean processExternalEntities);1400553912;Indicates whether external XML entities are processed when unmarshalling._<p>Default is {@code false}, meaning that external entities are not resolved._Note that processing of external entities will only be enabled/disabled when the_{@code Source} passed to {@link #unmarshal(Source)} is a {@link SAXSource} or_{@link StreamSource}. It has no effect for {@link DOMSource} or {@link StAXSource}_instances.;public void setProcessExternalEntities(boolean processExternalEntities) {_		this.processExternalEntities = processExternalEntities__	};indicates,whether,external,xml,entities,are,processed,when,unmarshalling,p,default,is,code,false,meaning,that,external,entities,are,not,resolved,note,that,processing,of,external,entities,will,only,be,enabled,disabled,when,the,code,source,passed,to,link,unmarshal,source,is,a,link,saxsource,or,link,stream,source,it,has,no,effect,for,link,domsource,or,link,st,axsource,instances;public,void,set,process,external,entities,boolean,process,external,entities,this,process,external,entities,process,external,entities
AbstractMarshaller -> public void setProcessExternalEntities(boolean processExternalEntities);1435665021;Indicates whether external XML entities are processed when unmarshalling._<p>Default is {@code false}, meaning that external entities are not resolved._Note that processing of external entities will only be enabled/disabled when the_{@code Source} passed to {@link #unmarshal(Source)} is a {@link SAXSource} or_{@link StreamSource}. It has no effect for {@link DOMSource} or {@link StAXSource}_instances._<p><strong>Note:</strong> setting this option to {@code true} also_automatically sets {@link #setSupportDtd} to {@code true}.;public void setProcessExternalEntities(boolean processExternalEntities) {_		this.processExternalEntities = processExternalEntities__		if (processExternalEntities) {_			setSupportDtd(true)__		}_	};indicates,whether,external,xml,entities,are,processed,when,unmarshalling,p,default,is,code,false,meaning,that,external,entities,are,not,resolved,note,that,processing,of,external,entities,will,only,be,enabled,disabled,when,the,code,source,passed,to,link,unmarshal,source,is,a,link,saxsource,or,link,stream,source,it,has,no,effect,for,link,domsource,or,link,st,axsource,instances,p,strong,note,strong,setting,this,option,to,code,true,also,automatically,sets,link,set,support,dtd,to,code,true;public,void,set,process,external,entities,boolean,process,external,entities,this,process,external,entities,process,external,entities,if,process,external,entities,set,support,dtd,true
AbstractMarshaller -> public void setProcessExternalEntities(boolean processExternalEntities);1455117733;Indicates whether external XML entities are processed when unmarshalling._<p>Default is {@code false}, meaning that external entities are not resolved._Note that processing of external entities will only be enabled/disabled when the_{@code Source} passed to {@link #unmarshal(Source)} is a {@link SAXSource} or_{@link StreamSource}. It has no effect for {@link DOMSource} or {@link StAXSource}_instances._<p><strong>Note:</strong> setting this option to {@code true} also_automatically sets {@link #setSupportDtd} to {@code true}.;public void setProcessExternalEntities(boolean processExternalEntities) {_		this.processExternalEntities = processExternalEntities__		if (processExternalEntities) {_			setSupportDtd(true)__		}_	};indicates,whether,external,xml,entities,are,processed,when,unmarshalling,p,default,is,code,false,meaning,that,external,entities,are,not,resolved,note,that,processing,of,external,entities,will,only,be,enabled,disabled,when,the,code,source,passed,to,link,unmarshal,source,is,a,link,saxsource,or,link,stream,source,it,has,no,effect,for,link,domsource,or,link,st,axsource,instances,p,strong,note,strong,setting,this,option,to,code,true,also,automatically,sets,link,set,support,dtd,to,code,true;public,void,set,process,external,entities,boolean,process,external,entities,this,process,external,entities,process,external,entities,if,process,external,entities,set,support,dtd,true
AbstractMarshaller -> public void setProcessExternalEntities(boolean processExternalEntities);1468948866;Indicates whether external XML entities are processed when unmarshalling._<p>Default is {@code false}, meaning that external entities are not resolved._Note that processing of external entities will only be enabled/disabled when the_{@code Source} passed to {@link #unmarshal(Source)} is a {@link SAXSource} or_{@link StreamSource}. It has no effect for {@link DOMSource} or {@link StAXSource}_instances._<p><strong>Note:</strong> setting this option to {@code true} also_automatically sets {@link #setSupportDtd} to {@code true}.;public void setProcessExternalEntities(boolean processExternalEntities) {_		this.processExternalEntities = processExternalEntities__		if (processExternalEntities) {_			setSupportDtd(true)__		}_	};indicates,whether,external,xml,entities,are,processed,when,unmarshalling,p,default,is,code,false,meaning,that,external,entities,are,not,resolved,note,that,processing,of,external,entities,will,only,be,enabled,disabled,when,the,code,source,passed,to,link,unmarshal,source,is,a,link,saxsource,or,link,stream,source,it,has,no,effect,for,link,domsource,or,link,st,axsource,instances,p,strong,note,strong,setting,this,option,to,code,true,also,automatically,sets,link,set,support,dtd,to,code,true;public,void,set,process,external,entities,boolean,process,external,entities,this,process,external,entities,process,external,entities,if,process,external,entities,set,support,dtd,true
AbstractMarshaller -> public void setProcessExternalEntities(boolean processExternalEntities);1483750478;Indicates whether external XML entities are processed when unmarshalling._<p>Default is {@code false}, meaning that external entities are not resolved._Note that processing of external entities will only be enabled/disabled when the_{@code Source} passed to {@link #unmarshal(Source)} is a {@link SAXSource} or_{@link StreamSource}. It has no effect for {@link DOMSource} or {@link StAXSource}_instances._<p><strong>Note:</strong> setting this option to {@code true} also_automatically sets {@link #setSupportDtd} to {@code true}.;public void setProcessExternalEntities(boolean processExternalEntities) {_		this.processExternalEntities = processExternalEntities__		if (processExternalEntities) {_			setSupportDtd(true)__		}_	};indicates,whether,external,xml,entities,are,processed,when,unmarshalling,p,default,is,code,false,meaning,that,external,entities,are,not,resolved,note,that,processing,of,external,entities,will,only,be,enabled,disabled,when,the,code,source,passed,to,link,unmarshal,source,is,a,link,saxsource,or,link,stream,source,it,has,no,effect,for,link,domsource,or,link,st,axsource,instances,p,strong,note,strong,setting,this,option,to,code,true,also,automatically,sets,link,set,support,dtd,to,code,true;public,void,set,process,external,entities,boolean,process,external,entities,this,process,external,entities,process,external,entities,if,process,external,entities,set,support,dtd,true
AbstractMarshaller -> public void setProcessExternalEntities(boolean processExternalEntities);1484301200;Indicates whether external XML entities are processed when unmarshalling._<p>Default is {@code false}, meaning that external entities are not resolved._Note that processing of external entities will only be enabled/disabled when the_{@code Source} passed to {@link #unmarshal(Source)} is a {@link SAXSource} or_{@link StreamSource}. It has no effect for {@link DOMSource} or {@link StAXSource}_instances._<p><strong>Note:</strong> setting this option to {@code true} also_automatically sets {@link #setSupportDtd} to {@code true}.;public void setProcessExternalEntities(boolean processExternalEntities) {_		this.processExternalEntities = processExternalEntities__		if (processExternalEntities) {_			setSupportDtd(true)__		}_	};indicates,whether,external,xml,entities,are,processed,when,unmarshalling,p,default,is,code,false,meaning,that,external,entities,are,not,resolved,note,that,processing,of,external,entities,will,only,be,enabled,disabled,when,the,code,source,passed,to,link,unmarshal,source,is,a,link,saxsource,or,link,stream,source,it,has,no,effect,for,link,domsource,or,link,st,axsource,instances,p,strong,note,strong,setting,this,option,to,code,true,also,automatically,sets,link,set,support,dtd,to,code,true;public,void,set,process,external,entities,boolean,process,external,entities,this,process,external,entities,process,external,entities,if,process,external,entities,set,support,dtd,true
AbstractMarshaller -> public void setProcessExternalEntities(boolean processExternalEntities);1495868221;Indicates whether external XML entities are processed when unmarshalling._<p>Default is {@code false}, meaning that external entities are not resolved._Note that processing of external entities will only be enabled/disabled when the_{@code Source} passed to {@link #unmarshal(Source)} is a {@link SAXSource} or_{@link StreamSource}. It has no effect for {@link DOMSource} or {@link StAXSource}_instances._<p><strong>Note:</strong> setting this option to {@code true} also_automatically sets {@link #setSupportDtd} to {@code true}.;public void setProcessExternalEntities(boolean processExternalEntities) {_		this.processExternalEntities = processExternalEntities__		if (processExternalEntities) {_			setSupportDtd(true)__		}_	};indicates,whether,external,xml,entities,are,processed,when,unmarshalling,p,default,is,code,false,meaning,that,external,entities,are,not,resolved,note,that,processing,of,external,entities,will,only,be,enabled,disabled,when,the,code,source,passed,to,link,unmarshal,source,is,a,link,saxsource,or,link,stream,source,it,has,no,effect,for,link,domsource,or,link,st,axsource,instances,p,strong,note,strong,setting,this,option,to,code,true,also,automatically,sets,link,set,support,dtd,to,code,true;public,void,set,process,external,entities,boolean,process,external,entities,this,process,external,entities,process,external,entities,if,process,external,entities,set,support,dtd,true
AbstractMarshaller -> public void setProcessExternalEntities(boolean processExternalEntities);1498780456;Indicates whether external XML entities are processed when unmarshalling._<p>Default is {@code false}, meaning that external entities are not resolved._Note that processing of external entities will only be enabled/disabled when the_{@code Source} passed to {@link #unmarshal(Source)} is a {@link SAXSource} or_{@link StreamSource}. It has no effect for {@link DOMSource} or {@link StAXSource}_instances._<p><strong>Note:</strong> setting this option to {@code true} also_automatically sets {@link #setSupportDtd} to {@code true}.;public void setProcessExternalEntities(boolean processExternalEntities) {_		this.processExternalEntities = processExternalEntities__		if (processExternalEntities) {_			setSupportDtd(true)__		}_	};indicates,whether,external,xml,entities,are,processed,when,unmarshalling,p,default,is,code,false,meaning,that,external,entities,are,not,resolved,note,that,processing,of,external,entities,will,only,be,enabled,disabled,when,the,code,source,passed,to,link,unmarshal,source,is,a,link,saxsource,or,link,stream,source,it,has,no,effect,for,link,domsource,or,link,st,axsource,instances,p,strong,note,strong,setting,this,option,to,code,true,also,automatically,sets,link,set,support,dtd,to,code,true;public,void,set,process,external,entities,boolean,process,external,entities,this,process,external,entities,process,external,entities,if,process,external,entities,set,support,dtd,true
AbstractMarshaller -> public void setProcessExternalEntities(boolean processExternalEntities);1518770299;Indicates whether external XML entities are processed when unmarshalling._<p>Default is {@code false}, meaning that external entities are not resolved._Note that processing of external entities will only be enabled/disabled when the_{@code Source} passed to {@link #unmarshal(Source)} is a {@link SAXSource} or_{@link StreamSource}. It has no effect for {@link DOMSource} or {@link StAXSource}_instances._<p><strong>Note:</strong> setting this option to {@code true} also_automatically sets {@link #setSupportDtd} to {@code true}.;public void setProcessExternalEntities(boolean processExternalEntities) {_		this.processExternalEntities = processExternalEntities__		if (processExternalEntities) {_			setSupportDtd(true)__		}_	};indicates,whether,external,xml,entities,are,processed,when,unmarshalling,p,default,is,code,false,meaning,that,external,entities,are,not,resolved,note,that,processing,of,external,entities,will,only,be,enabled,disabled,when,the,code,source,passed,to,link,unmarshal,source,is,a,link,saxsource,or,link,stream,source,it,has,no,effect,for,link,domsource,or,link,st,axsource,instances,p,strong,note,strong,setting,this,option,to,code,true,also,automatically,sets,link,set,support,dtd,to,code,true;public,void,set,process,external,entities,boolean,process,external,entities,this,process,external,entities,process,external,entities,if,process,external,entities,set,support,dtd,true
AbstractMarshaller -> public void setProcessExternalEntities(boolean processExternalEntities);1518770299;Indicates whether external XML entities are processed when unmarshalling._<p>Default is {@code false}, meaning that external entities are not resolved._Note that processing of external entities will only be enabled/disabled when the_{@code Source} passed to {@link #unmarshal(Source)} is a {@link SAXSource} or_{@link StreamSource}. It has no effect for {@link DOMSource} or {@link StAXSource}_instances._<p><strong>Note:</strong> setting this option to {@code true} also_automatically sets {@link #setSupportDtd} to {@code true}.;public void setProcessExternalEntities(boolean processExternalEntities) {_		this.processExternalEntities = processExternalEntities__		if (processExternalEntities) {_			setSupportDtd(true)__		}_	};indicates,whether,external,xml,entities,are,processed,when,unmarshalling,p,default,is,code,false,meaning,that,external,entities,are,not,resolved,note,that,processing,of,external,entities,will,only,be,enabled,disabled,when,the,code,source,passed,to,link,unmarshal,source,is,a,link,saxsource,or,link,stream,source,it,has,no,effect,for,link,domsource,or,link,st,axsource,instances,p,strong,note,strong,setting,this,option,to,code,true,also,automatically,sets,link,set,support,dtd,to,code,true;public,void,set,process,external,entities,boolean,process,external,entities,this,process,external,entities,process,external,entities,if,process,external,entities,set,support,dtd,true
AbstractMarshaller -> public void setProcessExternalEntities(boolean processExternalEntities);1530174524;Indicates whether external XML entities are processed when unmarshalling._<p>Default is {@code false}, meaning that external entities are not resolved._Note that processing of external entities will only be enabled/disabled when the_{@code Source} passed to {@link #unmarshal(Source)} is a {@link SAXSource} or_{@link StreamSource}. It has no effect for {@link DOMSource} or {@link StAXSource}_instances._<p><strong>Note:</strong> setting this option to {@code true} also_automatically sets {@link #setSupportDtd} to {@code true}.;public void setProcessExternalEntities(boolean processExternalEntities) {_		this.processExternalEntities = processExternalEntities__		if (processExternalEntities) {_			setSupportDtd(true)__		}_	};indicates,whether,external,xml,entities,are,processed,when,unmarshalling,p,default,is,code,false,meaning,that,external,entities,are,not,resolved,note,that,processing,of,external,entities,will,only,be,enabled,disabled,when,the,code,source,passed,to,link,unmarshal,source,is,a,link,saxsource,or,link,stream,source,it,has,no,effect,for,link,domsource,or,link,st,axsource,instances,p,strong,note,strong,setting,this,option,to,code,true,also,automatically,sets,link,set,support,dtd,to,code,true;public,void,set,process,external,entities,boolean,process,external,entities,this,process,external,entities,process,external,entities,if,process,external,entities,set,support,dtd,true
AbstractMarshaller -> public void setProcessExternalEntities(boolean processExternalEntities);1530174524;Indicates whether external XML entities are processed when unmarshalling._<p>Default is {@code false}, meaning that external entities are not resolved._Note that processing of external entities will only be enabled/disabled when the_{@code Source} passed to {@link #unmarshal(Source)} is a {@link SAXSource} or_{@link StreamSource}. It has no effect for {@link DOMSource} or {@link StAXSource}_instances._<p><strong>Note:</strong> setting this option to {@code true} also_automatically sets {@link #setSupportDtd} to {@code true}.;public void setProcessExternalEntities(boolean processExternalEntities) {_		this.processExternalEntities = processExternalEntities__		if (processExternalEntities) {_			setSupportDtd(true)__		}_	};indicates,whether,external,xml,entities,are,processed,when,unmarshalling,p,default,is,code,false,meaning,that,external,entities,are,not,resolved,note,that,processing,of,external,entities,will,only,be,enabled,disabled,when,the,code,source,passed,to,link,unmarshal,source,is,a,link,saxsource,or,link,stream,source,it,has,no,effect,for,link,domsource,or,link,st,axsource,instances,p,strong,note,strong,setting,this,option,to,code,true,also,automatically,sets,link,set,support,dtd,to,code,true;public,void,set,process,external,entities,boolean,process,external,entities,this,process,external,entities,process,external,entities,if,process,external,entities,set,support,dtd,true
AbstractMarshaller -> @Nullable 	protected String getDefaultEncoding();1495868221;Determine the default encoding to use for marshalling or unmarshalling from_a byte stream, or {@code null} if none._<p>The default implementation returns {@code null}.;@Nullable_	protected String getDefaultEncoding() {_		return null__	};determine,the,default,encoding,to,use,for,marshalling,or,unmarshalling,from,a,byte,stream,or,code,null,if,none,p,the,default,implementation,returns,code,null;nullable,protected,string,get,default,encoding,return,null
AbstractMarshaller -> @Nullable 	protected String getDefaultEncoding();1498780456;Determine the default encoding to use for marshalling or unmarshalling from_a byte stream, or {@code null} if none._<p>The default implementation returns {@code null}.;@Nullable_	protected String getDefaultEncoding() {_		return null__	};determine,the,default,encoding,to,use,for,marshalling,or,unmarshalling,from,a,byte,stream,or,code,null,if,none,p,the,default,implementation,returns,code,null;nullable,protected,string,get,default,encoding,return,null
AbstractMarshaller -> @Nullable 	protected String getDefaultEncoding();1518770299;Determine the default encoding to use for marshalling or unmarshalling from_a byte stream, or {@code null} if none._<p>The default implementation returns {@code null}.;@Nullable_	protected String getDefaultEncoding() {_		return null__	};determine,the,default,encoding,to,use,for,marshalling,or,unmarshalling,from,a,byte,stream,or,code,null,if,none,p,the,default,implementation,returns,code,null;nullable,protected,string,get,default,encoding,return,null
AbstractMarshaller -> @Nullable 	protected String getDefaultEncoding();1518770299;Determine the default encoding to use for marshalling or unmarshalling from_a byte stream, or {@code null} if none._<p>The default implementation returns {@code null}.;@Nullable_	protected String getDefaultEncoding() {_		return null__	};determine,the,default,encoding,to,use,for,marshalling,or,unmarshalling,from,a,byte,stream,or,code,null,if,none,p,the,default,implementation,returns,code,null;nullable,protected,string,get,default,encoding,return,null
AbstractMarshaller -> @Nullable 	protected String getDefaultEncoding();1530174524;Determine the default encoding to use for marshalling or unmarshalling from_a byte stream, or {@code null} if none._<p>The default implementation returns {@code null}.;@Nullable_	protected String getDefaultEncoding() {_		return null__	};determine,the,default,encoding,to,use,for,marshalling,or,unmarshalling,from,a,byte,stream,or,code,null,if,none,p,the,default,implementation,returns,code,null;nullable,protected,string,get,default,encoding,return,null
AbstractMarshaller -> @Nullable 	protected String getDefaultEncoding();1530174524;Determine the default encoding to use for marshalling or unmarshalling from_a byte stream, or {@code null} if none._<p>The default implementation returns {@code null}.;@Nullable_	protected String getDefaultEncoding() {_		return null__	};determine,the,default,encoding,to,use,for,marshalling,or,unmarshalling,from,a,byte,stream,or,code,null,if,none,p,the,default,implementation,returns,code,null;nullable,protected,string,get,default,encoding,return,null
AbstractMarshaller -> protected XMLReader createXmlReader() throws SAXException;1328020251;Create a <code>XMLReader</code> that this marshaller will when passed an empty <code>SAXSource</code>._@return the XMLReader_@throws SAXException if thrown by JAXP methods;protected XMLReader createXmlReader() throws SAXException {_		return XMLReaderFactory.createXMLReader()__	};create,a,code,xmlreader,code,that,this,marshaller,will,when,passed,an,empty,code,saxsource,code,return,the,xmlreader,throws,saxexception,if,thrown,by,jaxp,methods;protected,xmlreader,create,xml,reader,throws,saxexception,return,xmlreader,factory,create,xmlreader
AbstractMarshaller -> protected XMLReader createXmlReader() throws SAXException;1356735495;Create a {@code XMLReader} that this marshaller will when passed an empty {@code SAXSource}._@return the XMLReader_@throws SAXException if thrown by JAXP methods;protected XMLReader createXmlReader() throws SAXException {_		return XMLReaderFactory.createXMLReader()__	};create,a,code,xmlreader,that,this,marshaller,will,when,passed,an,empty,code,saxsource,return,the,xmlreader,throws,saxexception,if,thrown,by,jaxp,methods;protected,xmlreader,create,xml,reader,throws,saxexception,return,xmlreader,factory,create,xmlreader
AbstractMarshaller -> protected XMLReader createXmlReader() throws SAXException;1357119239;Create a {@code XMLReader} that this marshaller will when passed an empty {@code SAXSource}._@return the XMLReader_@throws SAXException if thrown by JAXP methods;protected XMLReader createXmlReader() throws SAXException {_		return XMLReaderFactory.createXMLReader()__	};create,a,code,xmlreader,that,this,marshaller,will,when,passed,an,empty,code,saxsource,return,the,xmlreader,throws,saxexception,if,thrown,by,jaxp,methods;protected,xmlreader,create,xml,reader,throws,saxexception,return,xmlreader,factory,create,xmlreader
AbstractMarshaller -> protected XMLReader createXmlReader() throws SAXException;1368482696;Create a {@code XMLReader} that this marshaller will when passed an empty {@code SAXSource}._@return the XMLReader_@throws SAXException if thrown by JAXP methods;protected XMLReader createXmlReader() throws SAXException {_		return XMLReaderFactory.createXMLReader()__	};create,a,code,xmlreader,that,this,marshaller,will,when,passed,an,empty,code,saxsource,return,the,xmlreader,throws,saxexception,if,thrown,by,jaxp,methods;protected,xmlreader,create,xml,reader,throws,saxexception,return,xmlreader,factory,create,xmlreader
AbstractMarshaller -> protected XMLReader createXmlReader() throws SAXException;1376041400;Create an {@code XMLReader} that this marshaller will when passed an empty {@code SAXSource}._@return the XMLReader_@throws SAXException if thrown by JAXP methods;protected XMLReader createXmlReader() throws SAXException {_		return XMLReaderFactory.createXMLReader()__	};create,an,code,xmlreader,that,this,marshaller,will,when,passed,an,empty,code,saxsource,return,the,xmlreader,throws,saxexception,if,thrown,by,jaxp,methods;protected,xmlreader,create,xml,reader,throws,saxexception,return,xmlreader,factory,create,xmlreader
AbstractMarshaller -> protected XMLReader createXmlReader() throws SAXException;1392767670;Create an {@code XMLReader} that this marshaller will when passed an empty {@code SAXSource}._@return the XMLReader_@throws SAXException if thrown by JAXP methods;protected XMLReader createXmlReader() throws SAXException {_		XMLReader xmlReader = XMLReaderFactory.createXMLReader()__		xmlReader.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		return xmlReader__	};create,an,code,xmlreader,that,this,marshaller,will,when,passed,an,empty,code,saxsource,return,the,xmlreader,throws,saxexception,if,thrown,by,jaxp,methods;protected,xmlreader,create,xml,reader,throws,saxexception,xmlreader,xml,reader,xmlreader,factory,create,xmlreader,xml,reader,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,return,xml,reader
AbstractMarshaller -> protected XMLReader createXmlReader() throws SAXException;1397058176;Create an {@code XMLReader} that this marshaller will when passed an empty {@code SAXSource}._@return the XMLReader_@throws SAXException if thrown by JAXP methods;protected XMLReader createXmlReader() throws SAXException {_		XMLReader xmlReader = XMLReaderFactory.createXMLReader()__		xmlReader.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		return xmlReader__	};create,an,code,xmlreader,that,this,marshaller,will,when,passed,an,empty,code,saxsource,return,the,xmlreader,throws,saxexception,if,thrown,by,jaxp,methods;protected,xmlreader,create,xml,reader,throws,saxexception,xmlreader,xml,reader,xmlreader,factory,create,xmlreader,xml,reader,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,return,xml,reader
AbstractMarshaller -> protected XMLReader createXmlReader() throws SAXException;1397069887;Create an {@code XMLReader} that this marshaller will when passed an empty {@code SAXSource}._@return the XMLReader_@throws SAXException if thrown by JAXP methods;protected XMLReader createXmlReader() throws SAXException {_		XMLReader xmlReader = XMLReaderFactory.createXMLReader()__		xmlReader.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		return xmlReader__	};create,an,code,xmlreader,that,this,marshaller,will,when,passed,an,empty,code,saxsource,return,the,xmlreader,throws,saxexception,if,thrown,by,jaxp,methods;protected,xmlreader,create,xml,reader,throws,saxexception,xmlreader,xml,reader,xmlreader,factory,create,xmlreader,xml,reader,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,return,xml,reader
AbstractMarshaller -> protected XMLReader createXmlReader() throws SAXException;1398638859;Create an {@code XMLReader} that this marshaller will when passed an empty {@code SAXSource}._@return the XMLReader_@throws SAXException if thrown by JAXP methods;protected XMLReader createXmlReader() throws SAXException {_		XMLReader xmlReader = XMLReaderFactory.createXMLReader()__		xmlReader.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		return xmlReader__	};create,an,code,xmlreader,that,this,marshaller,will,when,passed,an,empty,code,saxsource,return,the,xmlreader,throws,saxexception,if,thrown,by,jaxp,methods;protected,xmlreader,create,xml,reader,throws,saxexception,xmlreader,xml,reader,xmlreader,factory,create,xmlreader,xml,reader,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,return,xml,reader
AbstractMarshaller -> protected XMLReader createXmlReader() throws SAXException;1400553912;Create an {@code XMLReader} that this marshaller will when passed an empty {@code SAXSource}._@return the XMLReader_@throws SAXException if thrown by JAXP methods;protected XMLReader createXmlReader() throws SAXException {_		XMLReader xmlReader = XMLReaderFactory.createXMLReader()__		xmlReader.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		if (!isProcessExternalEntities()) {_			xmlReader.setEntityResolver(NO_OP_ENTITY_RESOLVER)__		}_		return xmlReader__	};create,an,code,xmlreader,that,this,marshaller,will,when,passed,an,empty,code,saxsource,return,the,xmlreader,throws,saxexception,if,thrown,by,jaxp,methods;protected,xmlreader,create,xml,reader,throws,saxexception,xmlreader,xml,reader,xmlreader,factory,create,xmlreader,xml,reader,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,if,is,process,external,entities,xml,reader,set,entity,resolver,return,xml,reader
AbstractMarshaller -> protected XMLReader createXmlReader() throws SAXException;1435665021;Create an {@code XMLReader} that this marshaller will when passed an empty {@code SAXSource}._@return the XMLReader_@throws SAXException if thrown by JAXP methods;protected XMLReader createXmlReader() throws SAXException {_		XMLReader xmlReader = XMLReaderFactory.createXMLReader()__		xmlReader.setFeature("http://apache.org/xml/features/disallow-doctype-decl", !isSupportDtd())__		xmlReader.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		if (!isProcessExternalEntities()) {_			xmlReader.setEntityResolver(NO_OP_ENTITY_RESOLVER)__		}_		return xmlReader__	};create,an,code,xmlreader,that,this,marshaller,will,when,passed,an,empty,code,saxsource,return,the,xmlreader,throws,saxexception,if,thrown,by,jaxp,methods;protected,xmlreader,create,xml,reader,throws,saxexception,xmlreader,xml,reader,xmlreader,factory,create,xmlreader,xml,reader,set,feature,http,apache,org,xml,features,disallow,doctype,decl,is,support,dtd,xml,reader,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,if,is,process,external,entities,xml,reader,set,entity,resolver,return,xml,reader
AbstractMarshaller -> protected XMLReader createXmlReader() throws SAXException;1455117733;Create an {@code XMLReader} that this marshaller will when passed an empty {@code SAXSource}._@return the XMLReader_@throws SAXException if thrown by JAXP methods;protected XMLReader createXmlReader() throws SAXException {_		XMLReader xmlReader = XMLReaderFactory.createXMLReader()__		xmlReader.setFeature("http://apache.org/xml/features/disallow-doctype-decl", !isSupportDtd())__		xmlReader.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		if (!isProcessExternalEntities()) {_			xmlReader.setEntityResolver(NO_OP_ENTITY_RESOLVER)__		}_		return xmlReader__	};create,an,code,xmlreader,that,this,marshaller,will,when,passed,an,empty,code,saxsource,return,the,xmlreader,throws,saxexception,if,thrown,by,jaxp,methods;protected,xmlreader,create,xml,reader,throws,saxexception,xmlreader,xml,reader,xmlreader,factory,create,xmlreader,xml,reader,set,feature,http,apache,org,xml,features,disallow,doctype,decl,is,support,dtd,xml,reader,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,if,is,process,external,entities,xml,reader,set,entity,resolver,return,xml,reader
AbstractMarshaller -> protected XMLReader createXmlReader() throws SAXException;1483750478;Create an {@code XMLReader} that this marshaller will when passed an empty {@code SAXSource}._@return the XMLReader_@throws SAXException if thrown by JAXP methods;protected XMLReader createXmlReader() throws SAXException {_		XMLReader xmlReader = org.xml.sax.helpers.XMLReaderFactory.createXMLReader()__		xmlReader.setFeature("http://apache.org/xml/features/disallow-doctype-decl", !isSupportDtd())__		xmlReader.setFeature("http://xml.org/sax/features/external-general-entities", isProcessExternalEntities())__		if (!isProcessExternalEntities()) {_			xmlReader.setEntityResolver(NO_OP_ENTITY_RESOLVER)__		}_		return xmlReader__	};create,an,code,xmlreader,that,this,marshaller,will,when,passed,an,empty,code,saxsource,return,the,xmlreader,throws,saxexception,if,thrown,by,jaxp,methods;protected,xmlreader,create,xml,reader,throws,saxexception,xmlreader,xml,reader,org,xml,sax,helpers,xmlreader,factory,create,xmlreader,xml,reader,set,feature,http,apache,org,xml,features,disallow,doctype,decl,is,support,dtd,xml,reader,set,feature,http,xml,org,sax,features,external,general,entities,is,process,external,entities,if,is,process,external,entities,xml,reader,set,entity,resolver,return,xml,reader
