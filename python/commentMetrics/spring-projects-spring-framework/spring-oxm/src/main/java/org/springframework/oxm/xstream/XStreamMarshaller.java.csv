# id;timestamp;commentText;codeText;commentWords;codeWords
XStreamMarshaller -> public void setMode(int mode);1328020251;Set the XStream mode._@see XStream#XPATH_REFERENCES_@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.getXStream().setMode(mode)__	};set,the,xstream,mode,see,xstream,see,xstream,see,xstream;public,void,set,mode,int,mode,this,get,xstream,set,mode,mode
XStreamMarshaller -> public void setMode(int mode);1340616891;Set the XStream mode._@see XStream#XPATH_REFERENCES_@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.getXStream().setMode(mode)__	};set,the,xstream,mode,see,xstream,see,xstream,see,xstream;public,void,set,mode,int,mode,this,get,xstream,set,mode,mode
XStreamMarshaller -> public void setMode(int mode);1340627225;Set the XStream mode._@see XStream#XPATH_REFERENCES_@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.getXStream().setMode(mode)__	};set,the,xstream,mode,see,xstream,see,xstream,see,xstream;public,void,set,mode,int,mode,this,get,xstream,set,mode,mode
XStreamMarshaller -> public void setMode(int mode);1341435537;Set the XStream mode._@see XStream#XPATH_REFERENCES_@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.getXStream().setMode(mode)__	};set,the,xstream,mode,see,xstream,see,xstream,see,xstream;public,void,set,mode,int,mode,this,get,xstream,set,mode,mode
XStreamMarshaller -> public void setMode(int mode);1344858496;Set the XStream mode._@see XStream#XPATH_REFERENCES_@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.getXStream().setMode(mode)__	};set,the,xstream,mode,see,xstream,see,xstream,see,xstream;public,void,set,mode,int,mode,this,get,xstream,set,mode,mode
XStreamMarshaller -> public void setMode(int mode);1356735495;Set the XStream mode._@see XStream#XPATH_REFERENCES_@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.getXStream().setMode(mode)__	};set,the,xstream,mode,see,xstream,see,xstream,see,xstream;public,void,set,mode,int,mode,this,get,xstream,set,mode,mode
XStreamMarshaller -> public void setMode(int mode);1357119239;Set the XStream mode._@see XStream#XPATH_REFERENCES_@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.getXStream().setMode(mode)__	};set,the,xstream,mode,see,xstream,see,xstream,see,xstream;public,void,set,mode,int,mode,this,get,xstream,set,mode,mode
XStreamMarshaller -> public void setMode(int mode);1362408075;Set the XStream mode._@see XStream#XPATH_REFERENCES_@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.xstream.setMode(mode)__	};set,the,xstream,mode,see,xstream,see,xstream,see,xstream;public,void,set,mode,int,mode,this,xstream,set,mode,mode
XStreamMarshaller -> public void setMode(int mode);1368482696;Set the XStream mode._@see XStream#XPATH_REFERENCES_@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.xstream.setMode(mode)__	};set,the,xstream,mode,see,xstream,see,xstream,see,xstream;public,void,set,mode,int,mode,this,xstream,set,mode,mode
XStreamMarshaller -> public void setMode(int mode);1374675853;Set the XStream mode._@see XStream#XPATH_REFERENCES_@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.xstream.setMode(mode)__	};set,the,xstream,mode,see,xstream,see,xstream,see,xstream;public,void,set,mode,int,mode,this,xstream,set,mode,mode
XStreamMarshaller -> public void setMode(int mode);1375718683;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1375733584;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1375739444;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1376041312;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1376303194;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1385412762;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1385423968;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1386625636;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1389187678;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1390654998;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1390659987;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1392767670;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1394814861;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1395777538;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1397058165;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1397682512;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1398638859;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1447323728;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1450368890;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1467730834;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1485810955;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1496242568;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1496259743;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1496837955;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1497362807;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1498780456;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1530174524;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setMode(int mode);1530174524;Set the XStream mode to use._@see XStream#ID_REFERENCES_@see XStream#NO_REFERENCES;public void setMode(int mode) {_		this.mode = mode__	};set,the,xstream,mode,to,use,see,xstream,see,xstream;public,void,set,mode,int,mode,this,mode,mode
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases) throws ClassNotFoundException;1328020251;Sets an alias/type map, consisting of string aliases mapped to classes. Keys are aliases_ values are either_{@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) throws ClassNotFoundException {_		Map<String, Class<?>> classMap = toClassMap(aliases)___		for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_			this.getXStream().alias(entry.getKey(), entry.getValue())__		}_	};sets,an,alias,type,map,consisting,of,string,aliases,mapped,to,classes,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,throws,class,not,found,exception,map,string,class,class,map,to,class,map,aliases,for,map,entry,string,class,entry,class,map,entry,set,this,get,xstream,alias,entry,get,key,entry,get,value
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases) throws ClassNotFoundException;1340616891;Sets an alias/type map, consisting of string aliases mapped to classes. Keys are aliases_ values are either_{@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) throws ClassNotFoundException {_		Map<String, Class<?>> classMap = toClassMap(aliases)___		for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_			this.getXStream().alias(entry.getKey(), entry.getValue())__		}_	};sets,an,alias,type,map,consisting,of,string,aliases,mapped,to,classes,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,throws,class,not,found,exception,map,string,class,class,map,to,class,map,aliases,for,map,entry,string,class,entry,class,map,entry,set,this,get,xstream,alias,entry,get,key,entry,get,value
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases) throws ClassNotFoundException;1340627225;Sets an alias/type map, consisting of string aliases mapped to classes. Keys are aliases_ values are either_{@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) throws ClassNotFoundException {_		Map<String, Class<?>> classMap = toClassMap(aliases)___		for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_			this.getXStream().alias(entry.getKey(), entry.getValue())__		}_	};sets,an,alias,type,map,consisting,of,string,aliases,mapped,to,classes,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,throws,class,not,found,exception,map,string,class,class,map,to,class,map,aliases,for,map,entry,string,class,entry,class,map,entry,set,this,get,xstream,alias,entry,get,key,entry,get,value
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases) throws ClassNotFoundException;1341435537;Sets an alias/type map, consisting of string aliases mapped to classes. Keys are aliases_ values are either_{@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) throws ClassNotFoundException {_		Map<String, Class<?>> classMap = toClassMap(aliases)___		for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_			this.getXStream().alias(entry.getKey(), entry.getValue())__		}_	};sets,an,alias,type,map,consisting,of,string,aliases,mapped,to,classes,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,throws,class,not,found,exception,map,string,class,class,map,to,class,map,aliases,for,map,entry,string,class,entry,class,map,entry,set,this,get,xstream,alias,entry,get,key,entry,get,value
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases) throws ClassNotFoundException;1344858496;Sets an alias/type map, consisting of string aliases mapped to classes. Keys are aliases_ values are either_{@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) throws ClassNotFoundException {_		Map<String, Class<?>> classMap = toClassMap(aliases)___		for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_			this.getXStream().alias(entry.getKey(), entry.getValue())__		}_	};sets,an,alias,type,map,consisting,of,string,aliases,mapped,to,classes,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,throws,class,not,found,exception,map,string,class,class,map,to,class,map,aliases,for,map,entry,string,class,entry,class,map,entry,set,this,get,xstream,alias,entry,get,key,entry,get,value
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases) throws ClassNotFoundException;1356735495;Sets an alias/type map, consisting of string aliases mapped to classes. Keys are aliases_ values are either_{@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) throws ClassNotFoundException {_		Map<String, Class<?>> classMap = toClassMap(aliases)___		for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_			this.getXStream().alias(entry.getKey(), entry.getValue())__		}_	};sets,an,alias,type,map,consisting,of,string,aliases,mapped,to,classes,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,throws,class,not,found,exception,map,string,class,class,map,to,class,map,aliases,for,map,entry,string,class,entry,class,map,entry,set,this,get,xstream,alias,entry,get,key,entry,get,value
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases) throws ClassNotFoundException;1357119239;Sets an alias/type map, consisting of string aliases mapped to classes. Keys are aliases_ values are either_{@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) throws ClassNotFoundException {_		Map<String, Class<?>> classMap = toClassMap(aliases)___		for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_			this.getXStream().alias(entry.getKey(), entry.getValue())__		}_	};sets,an,alias,type,map,consisting,of,string,aliases,mapped,to,classes,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,throws,class,not,found,exception,map,string,class,class,map,to,class,map,aliases,for,map,entry,string,class,entry,class,map,entry,set,this,get,xstream,alias,entry,get,key,entry,get,value
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases) throws ClassNotFoundException;1362408075;Sets an alias/type map, consisting of string aliases mapped to classes. Keys are aliases_ values are either_{@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) throws ClassNotFoundException {_		Map<String, Class<?>> classMap = toClassMap(aliases)__		for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_			this.xstream.alias(entry.getKey(), entry.getValue())__		}_	};sets,an,alias,type,map,consisting,of,string,aliases,mapped,to,classes,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,throws,class,not,found,exception,map,string,class,class,map,to,class,map,aliases,for,map,entry,string,class,entry,class,map,entry,set,this,xstream,alias,entry,get,key,entry,get,value
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases) throws ClassNotFoundException;1368482696;Sets an alias/type map, consisting of string aliases mapped to classes. Keys are aliases_ values are either_{@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) throws ClassNotFoundException {_		Map<String, Class<?>> classMap = toClassMap(aliases)__		for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_			this.xstream.alias(entry.getKey(), entry.getValue())__		}_	};sets,an,alias,type,map,consisting,of,string,aliases,mapped,to,classes,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,throws,class,not,found,exception,map,string,class,class,map,to,class,map,aliases,for,map,entry,string,class,entry,class,map,entry,set,this,xstream,alias,entry,get,key,entry,get,value
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases) throws ClassNotFoundException;1374675853;Sets an alias/type map, consisting of string aliases mapped to classes. Keys are aliases_ values are either_{@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) throws ClassNotFoundException {_		Map<String, Class<?>> classMap = toClassMap(aliases)__		for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_			this.xstream.alias(entry.getKey(), entry.getValue())__		}_	};sets,an,alias,type,map,consisting,of,string,aliases,mapped,to,classes,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,throws,class,not,found,exception,map,string,class,class,map,to,class,map,aliases,for,map,entry,string,class,entry,class,map,entry,set,this,xstream,alias,entry,get,key,entry,get,value
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1328020251;Template to allow for customizing of the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,of,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1340616891;Template to allow for customizing of the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,of,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1340627225;Template to allow for customizing of the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,of,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1341435537;Template to allow for customizing of the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,of,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1344858496;Template to allow for customizing of the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,of,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1356735495;Template to allow for customizing of the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,of,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1357119239;Template to allow for customizing of the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,of,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1362408075;Template to allow for customizing of the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,of,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1368482696;Template to allow for customizing of the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,of,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1374675853;Template to allow for customizing of the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,of,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1375718683;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1375733584;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1375739444;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1376041312;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1376303194;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1385412762;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1385423968;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1386625636;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1389187678;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1390654998;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1390659987;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1392767670;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1394814861;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1395777538;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1397058165;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1397682512;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1398638859;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1447323728;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1450368890;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1467730834;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1485810955;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1496242568;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1496259743;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1496837955;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1497362807;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1498780456;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1530174524;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void customizeXStream(XStream xstream);1530174524;Template to allow for customizing the given {@link XStream}._<p>The default implementation is empty._@param xstream the {@code XStream} instance;protected void customizeXStream(XStream xstream) {_	};template,to,allow,for,customizing,the,given,link,xstream,p,the,default,implementation,is,empty,param,xstream,the,code,xstream,instance;protected,void,customize,xstream,xstream,xstream
XStreamMarshaller -> protected void configureXStream(XStream xstream);1376041312;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						List listValue = (List) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(this.autodetectAnnotations)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,list,value,list,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,this,autodetect,annotations
XStreamMarshaller -> protected void configureXStream(XStream xstream);1376303194;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						List listValue = (List) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(this.autodetectAnnotations)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,list,value,list,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,this,autodetect,annotations
XStreamMarshaller -> protected void configureXStream(XStream xstream);1385412762;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(this.autodetectAnnotations)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,this,autodetect,annotations
XStreamMarshaller -> protected void configureXStream(XStream xstream);1385423968;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(this.autodetectAnnotations)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,this,autodetect,annotations
XStreamMarshaller -> protected void configureXStream(XStream xstream);1386625636;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(this.autodetectAnnotations)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,this,autodetect,annotations
XStreamMarshaller -> protected void configureXStream(XStream xstream);1389187678;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(this.autodetectAnnotations)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,this,autodetect,annotations
XStreamMarshaller -> protected void configureXStream(XStream xstream);1390654998;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(this.autodetectAnnotations)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,this,autodetect,annotations
XStreamMarshaller -> protected void configureXStream(XStream xstream);1390659987;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(this.autodetectAnnotations)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,this,autodetect,annotations
XStreamMarshaller -> protected void configureXStream(XStream xstream);1392767670;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(this.autodetectAnnotations)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,this,autodetect,annotations
XStreamMarshaller -> protected void configureXStream(XStream xstream);1394814861;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(this.autodetectAnnotations)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,this,autodetect,annotations
XStreamMarshaller -> protected void configureXStream(XStream xstream);1395777538;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(this.autodetectAnnotations)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,this,autodetect,annotations
XStreamMarshaller -> protected void configureXStream(XStream xstream);1397058165;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(true)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,true
XStreamMarshaller -> protected void configureXStream(XStream xstream);1397682512;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(true)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,true
XStreamMarshaller -> protected void configureXStream(XStream xstream);1398638859;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(true)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,true
XStreamMarshaller -> protected void configureXStream(XStream xstream);1447323728;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(true)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,true
XStreamMarshaller -> protected void configureXStream(XStream xstream);1450368890;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(true)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,true
XStreamMarshaller -> protected void configureXStream(XStream xstream);1467730834;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(true)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,true
XStreamMarshaller -> protected void configureXStream(XStream xstream);1485810955;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(true)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,true
XStreamMarshaller -> protected void configureXStream(XStream xstream);1496242568;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(true)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,true
XStreamMarshaller -> protected void configureXStream(XStream xstream);1496259743;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(true)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,true
XStreamMarshaller -> protected void configureXStream(XStream xstream);1496837955;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(true)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,true
XStreamMarshaller -> protected void configureXStream(XStream xstream);1497362807;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				classMap.forEach(xstream::alias)__			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				classMap.forEach(xstream::aliasType)__			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			this.implicitCollections.forEach((key, fields) -> {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(fields)__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(key, collectionField)__				}_			})__		}_		if (this.omittedFields != null) {_			this.omittedFields.forEach((key, value) -> {_				String[] fields = StringUtils.commaDelimitedListToStringArray(value)__				for (String field : fields) {_					xstream.omitField(key, field)__				}_			})__		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(true)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,class,map,for,each,xstream,alias,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,class,map,for,each,xstream,alias,type,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,this,implicit,collections,for,each,key,fields,string,collection,fields,string,utils,comma,delimited,list,to,string,array,fields,for,string,collection,field,collection,fields,xstream,add,implicit,collection,key,collection,field,if,this,omitted,fields,null,this,omitted,fields,for,each,key,value,string,fields,string,utils,comma,delimited,list,to,string,array,value,for,string,field,fields,xstream,omit,field,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,true
XStreamMarshaller -> protected void configureXStream(XStream xstream);1498780456;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				classMap.forEach(xstream::alias)__			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				classMap.forEach(xstream::aliasType)__			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			this.implicitCollections.forEach((key, fields) -> {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(fields)__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(key, collectionField)__				}_			})__		}_		if (this.omittedFields != null) {_			this.omittedFields.forEach((key, value) -> {_				String[] fields = StringUtils.commaDelimitedListToStringArray(value)__				for (String field : fields) {_					xstream.omitField(key, field)__				}_			})__		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(true)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,class,map,for,each,xstream,alias,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,class,map,for,each,xstream,alias,type,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,this,implicit,collections,for,each,key,fields,string,collection,fields,string,utils,comma,delimited,list,to,string,array,fields,for,string,collection,field,collection,fields,xstream,add,implicit,collection,key,collection,field,if,this,omitted,fields,null,this,omitted,fields,for,each,key,value,string,fields,string,utils,comma,delimited,list,to,string,array,value,for,string,field,fields,xstream,omit,field,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,true
XStreamMarshaller -> protected void configureXStream(XStream xstream);1530174524;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				classMap.forEach(xstream::alias)__			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				classMap.forEach(xstream::aliasType)__			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			this.implicitCollections.forEach((key, fields) -> {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(fields)__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(key, collectionField)__				}_			})__		}_		if (this.omittedFields != null) {_			this.omittedFields.forEach((key, value) -> {_				String[] fields = StringUtils.commaDelimitedListToStringArray(value)__				for (String field : fields) {_					xstream.omitField(key, field)__				}_			})__		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(true)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,class,map,for,each,xstream,alias,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,class,map,for,each,xstream,alias,type,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,this,implicit,collections,for,each,key,fields,string,collection,fields,string,utils,comma,delimited,list,to,string,array,fields,for,string,collection,field,collection,fields,xstream,add,implicit,collection,key,collection,field,if,this,omitted,fields,null,this,omitted,fields,for,each,key,value,string,fields,string,utils,comma,delimited,list,to,string,array,value,for,string,field,fields,xstream,omit,field,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,true
XStreamMarshaller -> protected void configureXStream(XStream xstream);1530174524;Configure the XStream instance with this marshaller's bean properties._@param xstream the {@code XStream} instance;protected void configureXStream(XStream xstream) {_		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				classMap.forEach(xstream::alias)__			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				classMap.forEach(xstream::aliasType)__			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class<?>) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						@SuppressWarnings("unchecked")_						List<Object> listValue = (List<Object>) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			this.implicitCollections.forEach((key, fields) -> {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(fields)__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(key, collectionField)__				}_			})__		}_		if (this.omittedFields != null) {_			this.omittedFields.forEach((key, value) -> {_				String[] fields = StringUtils.commaDelimitedListToStringArray(value)__				for (String field : fields) {_					xstream.omitField(key, field)__				}_			})__		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(true)__		}_	};configure,the,xstream,instance,with,this,marshaller,s,bean,properties,param,xstream,the,code,xstream,instance;protected,void,configure,xstream,xstream,xstream,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,class,map,for,each,xstream,alias,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,class,map,for,each,xstream,alias,type,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,suppress,warnings,unchecked,list,object,list,value,list,object,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,this,implicit,collections,for,each,key,fields,string,collection,fields,string,utils,comma,delimited,list,to,string,array,fields,for,string,collection,field,collection,fields,xstream,add,implicit,collection,key,collection,field,if,this,omitted,fields,null,this,omitted,fields,for,each,key,value,string,fields,string,utils,comma,delimited,list,to,string,array,value,for,string,field,fields,xstream,omit,field,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,true
XStreamMarshaller -> public void setConverters(ConverterMatcher[] converters);1328020251;Set the <code>Converters</code> or <code>SingleValueConverters</code> to be registered_with the <code>XStream</code> instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher[] converters) {_		for (int i = 0_ i < converters.length_ i++) {_			if (converters[i] instanceof Converter) {_				this.getXStream().registerConverter((Converter) converters[i], i)__			}_			else if (converters[i] instanceof SingleValueConverter) {_				this.getXStream().registerConverter((SingleValueConverter) converters[i], i)__			}_			else {_				throw new IllegalArgumentException("Invalid ConverterMatcher [" + converters[i] + "]")__			}_		}_	};set,the,code,converters,code,or,code,single,value,converters,code,to,be,registered,with,the,code,xstream,code,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,for,int,i,0,i,converters,length,i,if,converters,i,instanceof,converter,this,get,xstream,register,converter,converter,converters,i,i,else,if,converters,i,instanceof,single,value,converter,this,get,xstream,register,converter,single,value,converter,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,converters,i
XStreamMarshaller -> public void setConverters(ConverterMatcher[] converters);1340616891;Set the <code>Converters</code> or <code>SingleValueConverters</code> to be registered_with the <code>XStream</code> instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher[] converters) {_		for (int i = 0_ i < converters.length_ i++) {_			if (converters[i] instanceof Converter) {_				this.getXStream().registerConverter((Converter) converters[i], i)__			}_			else if (converters[i] instanceof SingleValueConverter) {_				this.getXStream().registerConverter((SingleValueConverter) converters[i], i)__			}_			else {_				throw new IllegalArgumentException("Invalid ConverterMatcher [" + converters[i] + "]")__			}_		}_	};set,the,code,converters,code,or,code,single,value,converters,code,to,be,registered,with,the,code,xstream,code,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,for,int,i,0,i,converters,length,i,if,converters,i,instanceof,converter,this,get,xstream,register,converter,converter,converters,i,i,else,if,converters,i,instanceof,single,value,converter,this,get,xstream,register,converter,single,value,converter,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,converters,i
XStreamMarshaller -> public void setConverters(ConverterMatcher[] converters);1340627225;Set the <code>Converters</code> or <code>SingleValueConverters</code> to be registered_with the <code>XStream</code> instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher[] converters) {_		for (int i = 0_ i < converters.length_ i++) {_			if (converters[i] instanceof Converter) {_				this.getXStream().registerConverter((Converter) converters[i], i)__			}_			else if (converters[i] instanceof SingleValueConverter) {_				this.getXStream().registerConverter((SingleValueConverter) converters[i], i)__			}_			else {_				throw new IllegalArgumentException("Invalid ConverterMatcher [" + converters[i] + "]")__			}_		}_	};set,the,code,converters,code,or,code,single,value,converters,code,to,be,registered,with,the,code,xstream,code,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,for,int,i,0,i,converters,length,i,if,converters,i,instanceof,converter,this,get,xstream,register,converter,converter,converters,i,i,else,if,converters,i,instanceof,single,value,converter,this,get,xstream,register,converter,single,value,converter,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,converters,i
XStreamMarshaller -> public void setConverters(ConverterMatcher[] converters);1341435537;Set the <code>Converters</code> or <code>SingleValueConverters</code> to be registered_with the <code>XStream</code> instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher[] converters) {_		for (int i = 0_ i < converters.length_ i++) {_			if (converters[i] instanceof Converter) {_				this.getXStream().registerConverter((Converter) converters[i], i)__			}_			else if (converters[i] instanceof SingleValueConverter) {_				this.getXStream().registerConverter((SingleValueConverter) converters[i], i)__			}_			else {_				throw new IllegalArgumentException("Invalid ConverterMatcher [" + converters[i] + "]")__			}_		}_	};set,the,code,converters,code,or,code,single,value,converters,code,to,be,registered,with,the,code,xstream,code,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,for,int,i,0,i,converters,length,i,if,converters,i,instanceof,converter,this,get,xstream,register,converter,converter,converters,i,i,else,if,converters,i,instanceof,single,value,converter,this,get,xstream,register,converter,single,value,converter,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,converters,i
XStreamMarshaller -> public void setConverters(ConverterMatcher[] converters);1344858496;Set the <code>Converters</code> or <code>SingleValueConverters</code> to be registered_with the <code>XStream</code> instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher[] converters) {_		for (int i = 0_ i < converters.length_ i++) {_			if (converters[i] instanceof Converter) {_				this.getXStream().registerConverter((Converter) converters[i], i)__			}_			else if (converters[i] instanceof SingleValueConverter) {_				this.getXStream().registerConverter((SingleValueConverter) converters[i], i)__			}_			else {_				throw new IllegalArgumentException("Invalid ConverterMatcher [" + converters[i] + "]")__			}_		}_	};set,the,code,converters,code,or,code,single,value,converters,code,to,be,registered,with,the,code,xstream,code,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,for,int,i,0,i,converters,length,i,if,converters,i,instanceof,converter,this,get,xstream,register,converter,converter,converters,i,i,else,if,converters,i,instanceof,single,value,converter,this,get,xstream,register,converter,single,value,converter,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,converters,i
XStreamMarshaller -> public void setConverters(ConverterMatcher[] converters);1356735495;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher[] converters) {_		for (int i = 0_ i < converters.length_ i++) {_			if (converters[i] instanceof Converter) {_				this.getXStream().registerConverter((Converter) converters[i], i)__			}_			else if (converters[i] instanceof SingleValueConverter) {_				this.getXStream().registerConverter((SingleValueConverter) converters[i], i)__			}_			else {_				throw new IllegalArgumentException("Invalid ConverterMatcher [" + converters[i] + "]")__			}_		}_	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,for,int,i,0,i,converters,length,i,if,converters,i,instanceof,converter,this,get,xstream,register,converter,converter,converters,i,i,else,if,converters,i,instanceof,single,value,converter,this,get,xstream,register,converter,single,value,converter,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,converters,i
XStreamMarshaller -> public void setConverters(ConverterMatcher[] converters);1357119239;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher[] converters) {_		for (int i = 0_ i < converters.length_ i++) {_			if (converters[i] instanceof Converter) {_				this.getXStream().registerConverter((Converter) converters[i], i)__			}_			else if (converters[i] instanceof SingleValueConverter) {_				this.getXStream().registerConverter((SingleValueConverter) converters[i], i)__			}_			else {_				throw new IllegalArgumentException("Invalid ConverterMatcher [" + converters[i] + "]")__			}_		}_	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,for,int,i,0,i,converters,length,i,if,converters,i,instanceof,converter,this,get,xstream,register,converter,converter,converters,i,i,else,if,converters,i,instanceof,single,value,converter,this,get,xstream,register,converter,single,value,converter,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,converters,i
XStreamMarshaller -> public void setConverters(ConverterMatcher[] converters);1362408075;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher[] converters) {_		for (int i = 0_ i < converters.length_ i++) {_			if (converters[i] instanceof Converter) {_				this.xstream.registerConverter((Converter) converters[i], i)__			}_			else if (converters[i] instanceof SingleValueConverter) {_				this.xstream.registerConverter((SingleValueConverter) converters[i], i)__			}_			else {_				throw new IllegalArgumentException("Invalid ConverterMatcher [" + converters[i] + "]")__			}_		}_	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,for,int,i,0,i,converters,length,i,if,converters,i,instanceof,converter,this,xstream,register,converter,converter,converters,i,i,else,if,converters,i,instanceof,single,value,converter,this,xstream,register,converter,single,value,converter,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,converters,i
XStreamMarshaller -> public void setConverters(ConverterMatcher[] converters);1368482696;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher[] converters) {_		for (int i = 0_ i < converters.length_ i++) {_			if (converters[i] instanceof Converter) {_				this.xstream.registerConverter((Converter) converters[i], i)__			}_			else if (converters[i] instanceof SingleValueConverter) {_				this.xstream.registerConverter((SingleValueConverter) converters[i], i)__			}_			else {_				throw new IllegalArgumentException("Invalid ConverterMatcher [" + converters[i] + "]")__			}_		}_	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,for,int,i,0,i,converters,length,i,if,converters,i,instanceof,converter,this,xstream,register,converter,converter,converters,i,i,else,if,converters,i,instanceof,single,value,converter,this,xstream,register,converter,single,value,converter,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,converters,i
XStreamMarshaller -> public void setConverters(ConverterMatcher[] converters);1374675853;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher[] converters) {_		for (int i = 0_ i < converters.length_ i++) {_			if (converters[i] instanceof Converter) {_				this.xstream.registerConverter((Converter) converters[i], i)__			}_			else if (converters[i] instanceof SingleValueConverter) {_				this.xstream.registerConverter((SingleValueConverter) converters[i], i)__			}_			else {_				throw new IllegalArgumentException("Invalid ConverterMatcher [" + converters[i] + "]")__			}_		}_	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,for,int,i,0,i,converters,length,i,if,converters,i,instanceof,converter,this,xstream,register,converter,converter,converters,i,i,else,if,converters,i,instanceof,single,value,converter,this,xstream,register,converter,single,value,converter,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,converters,i
XStreamMarshaller -> public void setFieldAliases(Map<String, String> aliases) throws ClassNotFoundException, NoSuchFieldException;1328020251;Sets a field alias/type map, consiting of field names_@param aliases_@throws ClassNotFoundException_@throws NoSuchFieldException_@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> aliases) throws ClassNotFoundException, NoSuchFieldException {_		for (Map.Entry<String, String> entry : aliases.entrySet()) {_			String alias = entry.getValue()__			String field = entry.getKey()__			int idx = field.lastIndexOf('.')__			if (idx != -1) {_				String className = field.substring(0, idx)__				Class clazz = ClassUtils.forName(className, classLoader)__				String fieldName = field.substring(idx + 1)__				this.getXStream().aliasField(alias, clazz, fieldName)__			} else {_				throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__			}_		}_	};sets,a,field,alias,type,map,consiting,of,field,names,param,aliases,throws,class,not,found,exception,throws,no,such,field,exception,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,aliases,throws,class,not,found,exception,no,such,field,exception,for,map,entry,string,string,entry,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,class,loader,string,field,name,field,substring,idx,1,this,get,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain
XStreamMarshaller -> public void setFieldAliases(Map<String, String> aliases) throws ClassNotFoundException, NoSuchFieldException;1340616891;Sets a field alias/type map, consiting of field names_@param aliases_@throws ClassNotFoundException_@throws NoSuchFieldException_@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> aliases) throws ClassNotFoundException, NoSuchFieldException {_		for (Map.Entry<String, String> entry : aliases.entrySet()) {_			String alias = entry.getValue()__			String field = entry.getKey()__			int idx = field.lastIndexOf('.')__			if (idx != -1) {_				String className = field.substring(0, idx)__				Class clazz = ClassUtils.forName(className, classLoader)__				String fieldName = field.substring(idx + 1)__				this.getXStream().aliasField(alias, clazz, fieldName)__			} else {_				throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__			}_		}_	};sets,a,field,alias,type,map,consiting,of,field,names,param,aliases,throws,class,not,found,exception,throws,no,such,field,exception,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,aliases,throws,class,not,found,exception,no,such,field,exception,for,map,entry,string,string,entry,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,class,loader,string,field,name,field,substring,idx,1,this,get,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain
XStreamMarshaller -> public void setFieldAliases(Map<String, String> aliases) throws ClassNotFoundException, NoSuchFieldException;1340627225;Sets a field alias/type map, consiting of field names_@param aliases_@throws ClassNotFoundException_@throws NoSuchFieldException_@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> aliases) throws ClassNotFoundException, NoSuchFieldException {_		for (Map.Entry<String, String> entry : aliases.entrySet()) {_			String alias = entry.getValue()__			String field = entry.getKey()__			int idx = field.lastIndexOf('.')__			if (idx != -1) {_				String className = field.substring(0, idx)__				Class clazz = ClassUtils.forName(className, classLoader)__				String fieldName = field.substring(idx + 1)__				this.getXStream().aliasField(alias, clazz, fieldName)__			} else {_				throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__			}_		}_	};sets,a,field,alias,type,map,consiting,of,field,names,param,aliases,throws,class,not,found,exception,throws,no,such,field,exception,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,aliases,throws,class,not,found,exception,no,such,field,exception,for,map,entry,string,string,entry,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,class,loader,string,field,name,field,substring,idx,1,this,get,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain
XStreamMarshaller -> public void setFieldAliases(Map<String, String> aliases) throws ClassNotFoundException, NoSuchFieldException;1341435537;Sets a field alias/type map, consiting of field names_@param aliases_@throws ClassNotFoundException_@throws NoSuchFieldException_@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> aliases) throws ClassNotFoundException, NoSuchFieldException {_		for (Map.Entry<String, String> entry : aliases.entrySet()) {_			String alias = entry.getValue()__			String field = entry.getKey()__			int idx = field.lastIndexOf('.')__			if (idx != -1) {_				String className = field.substring(0, idx)__				Class clazz = ClassUtils.forName(className, classLoader)__				String fieldName = field.substring(idx + 1)__				this.getXStream().aliasField(alias, clazz, fieldName)__			} else {_				throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__			}_		}_	};sets,a,field,alias,type,map,consiting,of,field,names,param,aliases,throws,class,not,found,exception,throws,no,such,field,exception,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,aliases,throws,class,not,found,exception,no,such,field,exception,for,map,entry,string,string,entry,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,class,loader,string,field,name,field,substring,idx,1,this,get,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain
XStreamMarshaller -> public void setFieldAliases(Map<String, String> aliases) throws ClassNotFoundException, NoSuchFieldException;1344858496;Sets a field alias/type map, consiting of field names_@param aliases_@throws ClassNotFoundException_@throws NoSuchFieldException_@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> aliases) throws ClassNotFoundException, NoSuchFieldException {_		for (Map.Entry<String, String> entry : aliases.entrySet()) {_			String alias = entry.getValue()__			String field = entry.getKey()__			int idx = field.lastIndexOf('.')__			if (idx != -1) {_				String className = field.substring(0, idx)__				Class clazz = ClassUtils.forName(className, classLoader)__				String fieldName = field.substring(idx + 1)__				this.getXStream().aliasField(alias, clazz, fieldName)__			} else {_				throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__			}_		}_	};sets,a,field,alias,type,map,consiting,of,field,names,param,aliases,throws,class,not,found,exception,throws,no,such,field,exception,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,aliases,throws,class,not,found,exception,no,such,field,exception,for,map,entry,string,string,entry,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,class,loader,string,field,name,field,substring,idx,1,this,get,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain
XStreamMarshaller -> public void setFieldAliases(Map<String, String> aliases) throws ClassNotFoundException, NoSuchFieldException;1356735495;Sets a field alias/type map, consiting of field names_@param aliases_@throws ClassNotFoundException_@throws NoSuchFieldException_@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> aliases) throws ClassNotFoundException, NoSuchFieldException {_		for (Map.Entry<String, String> entry : aliases.entrySet()) {_			String alias = entry.getValue()__			String field = entry.getKey()__			int idx = field.lastIndexOf('.')__			if (idx != -1) {_				String className = field.substring(0, idx)__				Class clazz = ClassUtils.forName(className, classLoader)__				String fieldName = field.substring(idx + 1)__				this.getXStream().aliasField(alias, clazz, fieldName)__			} else {_				throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__			}_		}_	};sets,a,field,alias,type,map,consiting,of,field,names,param,aliases,throws,class,not,found,exception,throws,no,such,field,exception,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,aliases,throws,class,not,found,exception,no,such,field,exception,for,map,entry,string,string,entry,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,class,loader,string,field,name,field,substring,idx,1,this,get,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain
XStreamMarshaller -> public void setFieldAliases(Map<String, String> aliases) throws ClassNotFoundException, NoSuchFieldException;1357119239;Sets a field alias/type map, consiting of field names_@param aliases_@throws ClassNotFoundException_@throws NoSuchFieldException_@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> aliases) throws ClassNotFoundException, NoSuchFieldException {_		for (Map.Entry<String, String> entry : aliases.entrySet()) {_			String alias = entry.getValue()__			String field = entry.getKey()__			int idx = field.lastIndexOf('.')__			if (idx != -1) {_				String className = field.substring(0, idx)__				Class clazz = ClassUtils.forName(className, classLoader)__				String fieldName = field.substring(idx + 1)__				this.getXStream().aliasField(alias, clazz, fieldName)__			} else {_				throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__			}_		}_	};sets,a,field,alias,type,map,consiting,of,field,names,param,aliases,throws,class,not,found,exception,throws,no,such,field,exception,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,aliases,throws,class,not,found,exception,no,such,field,exception,for,map,entry,string,string,entry,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,class,loader,string,field,name,field,substring,idx,1,this,get,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain
XStreamMarshaller -> public void setFieldAliases(Map<String, String> aliases) throws ClassNotFoundException, NoSuchFieldException;1362408075;Set a field alias/type map, consiting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> aliases) throws ClassNotFoundException, NoSuchFieldException {_		for (Map.Entry<String, String> entry : aliases.entrySet()) {_			String alias = entry.getValue()__			String field = entry.getKey()__			int idx = field.lastIndexOf('.')__			if (idx != -1) {_				String className = field.substring(0, idx)__				Class clazz = ClassUtils.forName(className, classLoader)__				String fieldName = field.substring(idx + 1)__				this.xstream.aliasField(alias, clazz, fieldName)__			}_			else {_				throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__			}_		}_	};set,a,field,alias,type,map,consiting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,aliases,throws,class,not,found,exception,no,such,field,exception,for,map,entry,string,string,entry,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,class,loader,string,field,name,field,substring,idx,1,this,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain
XStreamMarshaller -> public void setFieldAliases(Map<String, String> aliases) throws ClassNotFoundException, NoSuchFieldException;1368482696;Set a field alias/type map, consiting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> aliases) throws ClassNotFoundException, NoSuchFieldException {_		for (Map.Entry<String, String> entry : aliases.entrySet()) {_			String alias = entry.getValue()__			String field = entry.getKey()__			int idx = field.lastIndexOf('.')__			if (idx != -1) {_				String className = field.substring(0, idx)__				Class clazz = ClassUtils.forName(className, classLoader)__				String fieldName = field.substring(idx + 1)__				this.xstream.aliasField(alias, clazz, fieldName)__			}_			else {_				throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__			}_		}_	};set,a,field,alias,type,map,consiting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,aliases,throws,class,not,found,exception,no,such,field,exception,for,map,entry,string,string,entry,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,class,loader,string,field,name,field,substring,idx,1,this,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain
XStreamMarshaller -> public void setFieldAliases(Map<String, String> aliases) throws ClassNotFoundException, NoSuchFieldException;1374675853;Set a field alias/type map, consiting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> aliases) throws ClassNotFoundException, NoSuchFieldException {_		for (Map.Entry<String, String> entry : aliases.entrySet()) {_			String alias = entry.getValue()__			String field = entry.getKey()__			int idx = field.lastIndexOf('.')__			if (idx != -1) {_				String className = field.substring(0, idx)__				Class clazz = ClassUtils.forName(className, classLoader)__				String fieldName = field.substring(idx + 1)__				this.xstream.aliasField(alias, clazz, fieldName)__			}_			else {_				throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__			}_		}_	};set,a,field,alias,type,map,consiting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,aliases,throws,class,not,found,exception,no,such,field,exception,for,map,entry,string,string,entry,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,class,loader,string,field,name,field,substring,idx,1,this,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain
XStreamMarshaller -> public void setSupportedClasses(Class[] supportedClasses);1328020251;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class[] supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class[] supportedClasses);1340616891;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class[] supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class[] supportedClasses);1340627225;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class[] supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class[] supportedClasses);1341435537;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class[] supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class[] supportedClasses);1344858496;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class[] supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class[] supportedClasses);1356735495;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class[] supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class[] supportedClasses);1357119239;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class[] supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class[] supportedClasses);1362408075;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class[] supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class[] supportedClasses);1368482696;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class[] supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class[] supportedClasses);1374675853;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class[] supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder);1376041312;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder);1376303194;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder);1385412762;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder);1385423968;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder);1386625636;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder);1389187678;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder);1390654998;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder);1390659987;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder);1392767670;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder);1394814861;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder);1395777538;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder);1397058165;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder);1397682512;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder);1398638859;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder);1447323728;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder);1450368890;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder);1467730834;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder);1485810955;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder);1496242568;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliases) throws ClassNotFoundException;1328020251;Sets the aliases by type map, consisting of string aliases mapped to classes. Any class that is assignable to_this type will be aliased to the same name. Keys are aliases_ values are either_{@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliases) throws ClassNotFoundException {_		Map<String, Class<?>> classMap = toClassMap(aliases)___		for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_			this.getXStream().aliasType(entry.getKey(), entry.getValue())__		}_	};sets,the,aliases,by,type,map,consisting,of,string,aliases,mapped,to,classes,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,throws,class,not,found,exception,map,string,class,class,map,to,class,map,aliases,for,map,entry,string,class,entry,class,map,entry,set,this,get,xstream,alias,type,entry,get,key,entry,get,value
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliases) throws ClassNotFoundException;1340616891;Sets the aliases by type map, consisting of string aliases mapped to classes. Any class that is assignable to_this type will be aliased to the same name. Keys are aliases_ values are either_{@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliases) throws ClassNotFoundException {_		Map<String, Class<?>> classMap = toClassMap(aliases)___		for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_			this.getXStream().aliasType(entry.getKey(), entry.getValue())__		}_	};sets,the,aliases,by,type,map,consisting,of,string,aliases,mapped,to,classes,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,throws,class,not,found,exception,map,string,class,class,map,to,class,map,aliases,for,map,entry,string,class,entry,class,map,entry,set,this,get,xstream,alias,type,entry,get,key,entry,get,value
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliases) throws ClassNotFoundException;1340627225;Sets the aliases by type map, consisting of string aliases mapped to classes. Any class that is assignable to_this type will be aliased to the same name. Keys are aliases_ values are either_{@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliases) throws ClassNotFoundException {_		Map<String, Class<?>> classMap = toClassMap(aliases)___		for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_			this.getXStream().aliasType(entry.getKey(), entry.getValue())__		}_	};sets,the,aliases,by,type,map,consisting,of,string,aliases,mapped,to,classes,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,throws,class,not,found,exception,map,string,class,class,map,to,class,map,aliases,for,map,entry,string,class,entry,class,map,entry,set,this,get,xstream,alias,type,entry,get,key,entry,get,value
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliases) throws ClassNotFoundException;1341435537;Sets the aliases by type map, consisting of string aliases mapped to classes. Any class that is assignable to_this type will be aliased to the same name. Keys are aliases_ values are either_{@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliases) throws ClassNotFoundException {_		Map<String, Class<?>> classMap = toClassMap(aliases)___		for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_			this.getXStream().aliasType(entry.getKey(), entry.getValue())__		}_	};sets,the,aliases,by,type,map,consisting,of,string,aliases,mapped,to,classes,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,throws,class,not,found,exception,map,string,class,class,map,to,class,map,aliases,for,map,entry,string,class,entry,class,map,entry,set,this,get,xstream,alias,type,entry,get,key,entry,get,value
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliases) throws ClassNotFoundException;1344858496;Sets the aliases by type map, consisting of string aliases mapped to classes. Any class that is assignable to_this type will be aliased to the same name. Keys are aliases_ values are either_{@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliases) throws ClassNotFoundException {_		Map<String, Class<?>> classMap = toClassMap(aliases)___		for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_			this.getXStream().aliasType(entry.getKey(), entry.getValue())__		}_	};sets,the,aliases,by,type,map,consisting,of,string,aliases,mapped,to,classes,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,throws,class,not,found,exception,map,string,class,class,map,to,class,map,aliases,for,map,entry,string,class,entry,class,map,entry,set,this,get,xstream,alias,type,entry,get,key,entry,get,value
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliases) throws ClassNotFoundException;1356735495;Sets the aliases by type map, consisting of string aliases mapped to classes. Any class that is assignable to_this type will be aliased to the same name. Keys are aliases_ values are either_{@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliases) throws ClassNotFoundException {_		Map<String, Class<?>> classMap = toClassMap(aliases)___		for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_			this.getXStream().aliasType(entry.getKey(), entry.getValue())__		}_	};sets,the,aliases,by,type,map,consisting,of,string,aliases,mapped,to,classes,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,throws,class,not,found,exception,map,string,class,class,map,to,class,map,aliases,for,map,entry,string,class,entry,class,map,entry,set,this,get,xstream,alias,type,entry,get,key,entry,get,value
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliases) throws ClassNotFoundException;1357119239;Sets the aliases by type map, consisting of string aliases mapped to classes. Any class that is assignable to_this type will be aliased to the same name. Keys are aliases_ values are either_{@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliases) throws ClassNotFoundException {_		Map<String, Class<?>> classMap = toClassMap(aliases)___		for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_			this.getXStream().aliasType(entry.getKey(), entry.getValue())__		}_	};sets,the,aliases,by,type,map,consisting,of,string,aliases,mapped,to,classes,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,throws,class,not,found,exception,map,string,class,class,map,to,class,map,aliases,for,map,entry,string,class,entry,class,map,entry,set,this,get,xstream,alias,type,entry,get,key,entry,get,value
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliases) throws ClassNotFoundException;1362408075;Sets the aliases by type map, consisting of string aliases mapped to classes. Any class that is assignable to_this type will be aliased to the same name. Keys are aliases_ values are either_{@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliases) throws ClassNotFoundException {_		Map<String, Class<?>> classMap = toClassMap(aliases)__		for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_			this.xstream.aliasType(entry.getKey(), entry.getValue())__		}_	};sets,the,aliases,by,type,map,consisting,of,string,aliases,mapped,to,classes,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,throws,class,not,found,exception,map,string,class,class,map,to,class,map,aliases,for,map,entry,string,class,entry,class,map,entry,set,this,xstream,alias,type,entry,get,key,entry,get,value
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliases) throws ClassNotFoundException;1368482696;Sets the aliases by type map, consisting of string aliases mapped to classes. Any class that is assignable to_this type will be aliased to the same name. Keys are aliases_ values are either_{@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliases) throws ClassNotFoundException {_		Map<String, Class<?>> classMap = toClassMap(aliases)__		for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_			this.xstream.aliasType(entry.getKey(), entry.getValue())__		}_	};sets,the,aliases,by,type,map,consisting,of,string,aliases,mapped,to,classes,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,throws,class,not,found,exception,map,string,class,class,map,to,class,map,aliases,for,map,entry,string,class,entry,class,map,entry,set,this,xstream,alias,type,entry,get,key,entry,get,value
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliases) throws ClassNotFoundException;1374675853;Sets the aliases by type map, consisting of string aliases mapped to classes. Any class that is assignable to_this type will be aliased to the same name. Keys are aliases_ values are either_{@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliases) throws ClassNotFoundException {_		Map<String, Class<?>> classMap = toClassMap(aliases)__		for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_			this.xstream.aliasType(entry.getKey(), entry.getValue())__		}_	};sets,the,aliases,by,type,map,consisting,of,string,aliases,mapped,to,classes,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,throws,class,not,found,exception,map,string,class,class,map,to,class,map,aliases,for,map,entry,string,class,entry,class,map,entry,set,this,xstream,alias,type,entry,get,key,entry,get,value
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1328020251;Specify omitted fields, as a Map consisting of <code>Class</code> instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		for (Map.Entry<Class<?>, String> entry : omittedFields.entrySet()) {_			String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__			for (String field : fields) {_				this.getXStream().omitField(entry.getKey(), field)__			}_		}_	};specify,omitted,fields,as,a,map,consisting,of,code,class,code,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,for,map,entry,class,string,entry,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,this,get,xstream,omit,field,entry,get,key,field
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1340616891;Specify omitted fields, as a Map consisting of <code>Class</code> instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		for (Map.Entry<Class<?>, String> entry : omittedFields.entrySet()) {_			String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__			for (String field : fields) {_				this.getXStream().omitField(entry.getKey(), field)__			}_		}_	};specify,omitted,fields,as,a,map,consisting,of,code,class,code,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,for,map,entry,class,string,entry,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,this,get,xstream,omit,field,entry,get,key,field
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1340627225;Specify omitted fields, as a Map consisting of <code>Class</code> instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		for (Map.Entry<Class<?>, String> entry : omittedFields.entrySet()) {_			String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__			for (String field : fields) {_				this.getXStream().omitField(entry.getKey(), field)__			}_		}_	};specify,omitted,fields,as,a,map,consisting,of,code,class,code,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,for,map,entry,class,string,entry,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,this,get,xstream,omit,field,entry,get,key,field
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1341435537;Specify omitted fields, as a Map consisting of <code>Class</code> instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		for (Map.Entry<Class<?>, String> entry : omittedFields.entrySet()) {_			String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__			for (String field : fields) {_				this.getXStream().omitField(entry.getKey(), field)__			}_		}_	};specify,omitted,fields,as,a,map,consisting,of,code,class,code,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,for,map,entry,class,string,entry,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,this,get,xstream,omit,field,entry,get,key,field
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1344858496;Specify omitted fields, as a Map consisting of <code>Class</code> instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		for (Map.Entry<Class<?>, String> entry : omittedFields.entrySet()) {_			String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__			for (String field : fields) {_				this.getXStream().omitField(entry.getKey(), field)__			}_		}_	};specify,omitted,fields,as,a,map,consisting,of,code,class,code,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,for,map,entry,class,string,entry,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,this,get,xstream,omit,field,entry,get,key,field
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1356735495;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		for (Map.Entry<Class<?>, String> entry : omittedFields.entrySet()) {_			String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__			for (String field : fields) {_				this.getXStream().omitField(entry.getKey(), field)__			}_		}_	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,for,map,entry,class,string,entry,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,this,get,xstream,omit,field,entry,get,key,field
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1357119239;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		for (Map.Entry<Class<?>, String> entry : omittedFields.entrySet()) {_			String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__			for (String field : fields) {_				this.getXStream().omitField(entry.getKey(), field)__			}_		}_	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,for,map,entry,class,string,entry,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,this,get,xstream,omit,field,entry,get,key,field
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1362408075;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		for (Map.Entry<Class<?>, String> entry : omittedFields.entrySet()) {_			String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__			for (String field : fields) {_				this.xstream.omitField(entry.getKey(), field)__			}_		}_	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,for,map,entry,class,string,entry,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,this,xstream,omit,field,entry,get,key,field
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1368482696;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		for (Map.Entry<Class<?>, String> entry : omittedFields.entrySet()) {_			String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__			for (String field : fields) {_				this.xstream.omitField(entry.getKey(), field)__			}_		}_	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,for,map,entry,class,string,entry,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,this,xstream,omit,field,entry,get,key,field
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1374675853;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		for (Map.Entry<Class<?>, String> entry : omittedFields.entrySet()) {_			String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__			for (String field : fields) {_				this.xstream.omitField(entry.getKey(), field)__			}_		}_	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,for,map,entry,class,string,entry,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,this,xstream,omit,field,entry,get,key,field
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1375718683;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1375733584;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1375739444;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1376041312;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1376303194;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1385412762;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1385423968;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1386625636;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1389187678;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1390654998;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1390659987;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1392767670;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1394814861;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1395777538;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1397058165;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1397682512;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1398638859;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1447323728;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1450368890;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1467730834;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1485810955;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1496242568;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1496259743;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1496837955;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1497362807;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1498780456;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1530174524;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setOmittedFields(Map<Class<?>, String> omittedFields);1530174524;Specify omitted fields, as a Map consisting of {@code Class} instances_mapped to comma separated field names._@see XStream#omitField(Class, String);public void setOmittedFields(Map<Class<?>, String> omittedFields) {_		this.omittedFields = omittedFields__	};specify,omitted,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,field,names,see,xstream,omit,field,class,string;public,void,set,omitted,fields,map,class,string,omitted,fields,this,omitted,fields,omitted,fields
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1375718683;Sets the aliases by type map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};sets,the,aliases,by,type,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1375733584;Sets the aliases by type map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};sets,the,aliases,by,type,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1375739444;Sets the aliases by type map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};sets,the,aliases,by,type,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1376041312;Sets the aliases by type map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};sets,the,aliases,by,type,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1376303194;Sets the aliases by type map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};sets,the,aliases,by,type,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1385412762;Sets the aliases by type map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};sets,the,aliases,by,type,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1385423968;Sets the aliases by type map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};sets,the,aliases,by,type,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1386625636;Sets the aliases by type map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};sets,the,aliases,by,type,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1389187678;Sets the aliases by type map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};sets,the,aliases,by,type,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1390654998;Set the <em>aliases by type</em> map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};set,the,em,aliases,by,type,em,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1390659987;Set the <em>aliases by type</em> map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};set,the,em,aliases,by,type,em,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1392767670;Set the <em>aliases by type</em> map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};set,the,em,aliases,by,type,em,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1394814861;Set the <em>aliases by type</em> map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};set,the,em,aliases,by,type,em,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1395777538;Set the <em>aliases by type</em> map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};set,the,em,aliases,by,type,em,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1397058165;Set the <em>aliases by type</em> map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};set,the,em,aliases,by,type,em,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1397682512;Set the <em>aliases by type</em> map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};set,the,em,aliases,by,type,em,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1398638859;Set the <em>aliases by type</em> map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};set,the,em,aliases,by,type,em,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1447323728;Set the <em>aliases by type</em> map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};set,the,em,aliases,by,type,em,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1450368890;Set the <em>aliases by type</em> map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};set,the,em,aliases,by,type,em,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1467730834;Set the <em>aliases by type</em> map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};set,the,em,aliases,by,type,em,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1485810955;Set the <em>aliases by type</em> map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};set,the,em,aliases,by,type,em,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1496242568;Set the <em>aliases by type</em> map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};set,the,em,aliases,by,type,em,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1496259743;Set the <em>aliases by type</em> map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};set,the,em,aliases,by,type,em,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1496837955;Set the <em>aliases by type</em> map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};set,the,em,aliases,by,type,em,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1497362807;Set the <em>aliases by type</em> map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};set,the,em,aliases,by,type,em,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1498780456;Set the <em>aliases by type</em> map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};set,the,em,aliases,by,type,em,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1530174524;Set the <em>aliases by type</em> map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};set,the,em,aliases,by,type,em,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setAliasesByType(Map<String, ?> aliasesByType);1530174524;Set the <em>aliases by type</em> map, consisting of string aliases mapped to classes._<p>Any class that is assignable to this type will be aliased to the same name._Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#aliasType(String, Class);public void setAliasesByType(Map<String, ?> aliasesByType) {_		this.aliasesByType = aliasesByType__	};set,the,em,aliases,by,type,em,map,consisting,of,string,aliases,mapped,to,classes,p,any,class,that,is,assignable,to,this,type,will,be,aliased,to,the,same,name,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,type,string,class;public,void,set,aliases,by,type,map,string,aliases,by,type,this,aliases,by,type,aliases,by,type
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1375733584;Set the types to use XML attributes for. The given map can contain_either {@code &lt_String, Class&gt_} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code &lt_Class, String&gt_}_or {@code &lt_Class, List&lt_String&gt_&gt_} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,lt,string,class,gt,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,lt,class,string,gt,or,code,lt,class,list,lt,string,gt,gt,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1375739444;Set the types to use XML attributes for. The given map can contain_either {@code &lt_String, Class&gt_} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code &lt_Class, String&gt_}_or {@code &lt_Class, List&lt_String&gt_&gt_} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,lt,string,class,gt,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,lt,class,string,gt,or,code,lt,class,list,lt,string,gt,gt,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1376041312;Set the types to use XML attributes for. The given map can contain_either {@code &lt_String, Class&gt_} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code &lt_Class, String&gt_}_or {@code &lt_Class, List&lt_String&gt_&gt_} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,lt,string,class,gt,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,lt,class,string,gt,or,code,lt,class,list,lt,string,gt,gt,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1376303194;Set the types to use XML attributes for. The given map can contain_either {@code &lt_String, Class&gt_} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code &lt_Class, String&gt_}_or {@code &lt_Class, List&lt_String&gt_&gt_} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,lt,string,class,gt,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,lt,class,string,gt,or,code,lt,class,list,lt,string,gt,gt,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1385412762;Set the types to use XML attributes for. The given map can contain_either {@code &lt_String, Class&gt_} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code &lt_Class, String&gt_}_or {@code &lt_Class, List&lt_String&gt_&gt_} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,lt,string,class,gt,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,lt,class,string,gt,or,code,lt,class,list,lt,string,gt,gt,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1385423968;Set the types to use XML attributes for. The given map can contain_either {@code &lt_String, Class&gt_} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code &lt_Class, String&gt_}_or {@code &lt_Class, List&lt_String&gt_&gt_} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,lt,string,class,gt,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,lt,class,string,gt,or,code,lt,class,list,lt,string,gt,gt,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1386625636;Set the types to use XML attributes for. The given map can contain_either {@code &lt_String, Class&gt_} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code &lt_Class, String&gt_}_or {@code &lt_Class, List&lt_String&gt_&gt_} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,lt,string,class,gt,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,lt,class,string,gt,or,code,lt,class,list,lt,string,gt,gt,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1389187678;Set the types to use XML attributes for. The given map can contain_either {@code &lt_String, Class&gt_} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code &lt_Class, String&gt_}_or {@code &lt_Class, List&lt_String&gt_&gt_} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,lt,string,class,gt,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,lt,class,string,gt,or,code,lt,class,list,lt,string,gt,gt,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1390654998;Set the types to use XML attributes for. The given map can contain_either {@code &lt_String, Class&gt_} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code &lt_Class, String&gt_}_or {@code &lt_Class, List&lt_String&gt_&gt_} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,lt,string,class,gt,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,lt,class,string,gt,or,code,lt,class,list,lt,string,gt,gt,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1390659987;Set the types to use XML attributes for. The given map can contain_either {@code &lt_String, Class&gt_} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code &lt_Class, String&gt_}_or {@code &lt_Class, List&lt_String&gt_&gt_} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,lt,string,class,gt,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,lt,class,string,gt,or,code,lt,class,list,lt,string,gt,gt,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1392767670;Set the types to use XML attributes for. The given map can contain_either {@code &lt_String, Class&gt_} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code &lt_Class, String&gt_}_or {@code &lt_Class, List&lt_String&gt_&gt_} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,lt,string,class,gt,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,lt,class,string,gt,or,code,lt,class,list,lt,string,gt,gt,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1394814861;Set the types to use XML attributes for. The given map can contain_either {@code &lt_String, Class&gt_} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code &lt_Class, String&gt_}_or {@code &lt_Class, List&lt_String&gt_&gt_} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,lt,string,class,gt,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,lt,class,string,gt,or,code,lt,class,list,lt,string,gt,gt,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1395777538;Set the types to use XML attributes for. The given map can contain_either {@code &lt_String, Class&gt_} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code &lt_Class, String&gt_}_or {@code &lt_Class, List&lt_String&gt_&gt_} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,lt,string,class,gt,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,lt,class,string,gt,or,code,lt,class,list,lt,string,gt,gt,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1397058165;Set the types to use XML attributes for. The given map can contain_either {@code &lt_String, Class&gt_} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code &lt_Class, String&gt_}_or {@code &lt_Class, List&lt_String&gt_&gt_} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,lt,string,class,gt,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,lt,class,string,gt,or,code,lt,class,list,lt,string,gt,gt,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1397682512;Set the types to use XML attributes for. The given map can contain_either {@code &lt_String, Class&gt_} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code &lt_Class, String&gt_}_or {@code &lt_Class, List&lt_String&gt_&gt_} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,lt,string,class,gt,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,lt,class,string,gt,or,code,lt,class,list,lt,string,gt,gt,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1398638859;Set the types to use XML attributes for. The given map can contain_either {@code &lt_String, Class&gt_} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code &lt_Class, String&gt_}_or {@code &lt_Class, List&lt_String&gt_&gt_} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,lt,string,class,gt,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,lt,class,string,gt,or,code,lt,class,list,lt,string,gt,gt,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1447323728;Set the types to use XML attributes for. The given map can contain_either {@code <String, Class>} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code <Class, String>}_or {@code <Class, List<String>>} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,string,class,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,class,string,or,code,class,list,string,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1450368890;Set the types to use XML attributes for. The given map can contain_either {@code <String, Class>} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code <Class, String>}_or {@code <Class, List<String>>} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,string,class,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,class,string,or,code,class,list,string,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1467730834;Set the types to use XML attributes for. The given map can contain_either {@code <String, Class>} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code <Class, String>}_or {@code <Class, List<String>>} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,string,class,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,class,string,or,code,class,list,string,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1485810955;Set the types to use XML attributes for. The given map can contain_either {@code <String, Class>} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code <Class, String>}_or {@code <Class, List<String>>} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,string,class,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,class,string,or,code,class,list,string,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1496242568;Set the types to use XML attributes for. The given map can contain_either {@code <String, Class>} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code <Class, String>}_or {@code <Class, List<String>>} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,string,class,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,class,string,or,code,class,list,string,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1496259743;Set the types to use XML attributes for. The given map can contain_either {@code <String, Class>} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code <Class, String>}_or {@code <Class, List<String>>} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,string,class,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,class,string,or,code,class,list,string,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1496837955;Set the types to use XML attributes for. The given map can contain_either {@code <String, Class>} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code <Class, String>}_or {@code <Class, List<String>>} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,string,class,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,class,string,or,code,class,list,string,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1497362807;Set the types to use XML attributes for. The given map can contain_either {@code <String, Class>} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code <Class, String>}_or {@code <Class, List<String>>} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,string,class,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,class,string,or,code,class,list,string,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1498780456;Set the types to use XML attributes for. The given map can contain_either {@code <String, Class>} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code <Class, String>}_or {@code <Class, List<String>>} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,string,class,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,class,string,or,code,class,list,string,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1530174524;Set the types to use XML attributes for. The given map can contain_either {@code <String, Class>} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code <Class, String>}_or {@code <Class, List<String>>} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,string,class,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,class,string,or,code,class,list,string,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> useAttributeFor);1530174524;Set the types to use XML attributes for. The given map can contain_either {@code <String, Class>} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code <Class, String>}_or {@code <Class, List<String>>} pairs, which results_in {@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> useAttributeFor) {_		this.useAttributeFor = useAttributeFor__	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,string,class,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,class,string,or,code,class,list,string,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,use,attribute,for,this,use,attribute,for,use,attribute,for
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1375718683;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1375733584;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1375739444;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1376041312;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1376303194;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1385412762;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1385423968;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1386625636;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1389187678;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1390654998;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1390659987;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1392767670;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1394814861;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1395777538;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1397058165;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1397682512;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1398638859;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1447323728;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1450368890;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1467730834;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1485810955;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1496242568;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1496259743;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1496837955;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1497362807;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1498780456;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1530174524;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setConverters(ConverterMatcher... converters);1530174524;Set the {@code Converters} or {@code SingleValueConverters} to be registered_with the {@code XStream} instance._@see Converter_@see SingleValueConverter;public void setConverters(ConverterMatcher... converters) {_		this.converters = converters__	};set,the,code,converters,or,code,single,value,converters,to,be,registered,with,the,code,xstream,instance,see,converter,see,single,value,converter;public,void,set,converters,converter,matcher,converters,this,converters,converters
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1375718683;Set an alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,an,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1375733584;Set an alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,an,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1375739444;Set an alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,an,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1376041312;Set an alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,an,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1376303194;Set an alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,an,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1385412762;Set an alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,an,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1385423968;Set an alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,an,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1386625636;Set an alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,an,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1389187678;Set an alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,an,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1390654998;Set the alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,the,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1390659987;Set the alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,the,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1392767670;Set the alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,the,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1394814861;Set the alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,the,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1395777538;Set the alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,the,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1397058165;Set the alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,the,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1397682512;Set the alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,the,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1398638859;Set the alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,the,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1447323728;Set the alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,the,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1450368890;Set the alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,the,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1467730834;Set the alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,the,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1485810955;Set the alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,the,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1496242568;Set the alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,the,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1496259743;Set the alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,the,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1496837955;Set the alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,the,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1497362807;Set the alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,the,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1498780456;Set the alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,the,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1530174524;Set the alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,the,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public void setAliases(Map<String, ?> aliases);1530174524;Set the alias/type map, consisting of string aliases mapped to classes._<p>Keys are aliases_ values are either {@code Class} instances, or String class names._@see XStream#alias(String, Class);public void setAliases(Map<String, ?> aliases) {_		this.aliases = aliases__	};set,the,alias,type,map,consisting,of,string,aliases,mapped,to,classes,p,keys,are,aliases,values,are,either,code,class,instances,or,string,class,names,see,xstream,alias,string,class;public,void,set,aliases,map,string,aliases,this,aliases,aliases
XStreamMarshaller -> public final XStream getXStream();1362408075;Returns the XStream instance used by this marshaller.;public final XStream getXStream() {_		return this.xstream__	};returns,the,xstream,instance,used,by,this,marshaller;public,final,xstream,get,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1368482696;Returns the XStream instance used by this marshaller.;public final XStream getXStream() {_		return this.xstream__	};returns,the,xstream,instance,used,by,this,marshaller;public,final,xstream,get,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1374675853;Returns the XStream instance used by this marshaller.;public final XStream getXStream() {_		return this.xstream__	};returns,the,xstream,instance,used,by,this,marshaller;public,final,xstream,get,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1375718683;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1375733584;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1375739444;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1376041312;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1376303194;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1385412762;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1385423968;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1386625636;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1389187678;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1390654998;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1390659987;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1392767670;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1394814861;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1395777538;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1397058165;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1397682512;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1398638859;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1447323728;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1450368890;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1467730834;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1485810955;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1496242568;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1496259743;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1496837955;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1497362807;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1498780456;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1530174524;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public final XStream getXStream();1530174524;Return the native XStream delegate used by this marshaller._<p><b>NOTE: This method has been marked as final as of Spring 4.0.</b>_It can be used to access the fully configured XStream for marshalling_but not configuration purposes anymore.;public final XStream getXStream() {_		if (this.xstream == null) {_			this.xstream = buildXStream()__		}_		return this.xstream__	};return,the,native,xstream,delegate,used,by,this,marshaller,p,b,note,this,method,has,been,marked,as,final,as,of,spring,4,0,b,it,can,be,used,to,access,the,fully,configured,xstream,for,marshalling,but,not,configuration,purposes,anymore;public,final,xstream,get,xstream,if,this,xstream,null,this,xstream,build,xstream,return,this,xstream
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1375718683;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1375733584;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1375739444;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1376041312;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1376303194;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1385412762;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1385423968;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1386625636;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1389187678;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1390654998;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1390659987;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1392767670;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1394814861;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1395777538;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1397058165;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1397682512;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1398638859;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1447323728;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1450368890;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1467730834;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1485810955;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1496242568;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1496259743;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1496837955;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1497362807;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1498780456;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1530174524;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> public void setSupportedClasses(Class<?>... supportedClasses);1530174524;Set the classes supported by this marshaller._<p>If this property is empty (the default), all classes are supported._@see #supports(Class);public void setSupportedClasses(Class<?>... supportedClasses) {_		this.supportedClasses = supportedClasses__	};set,the,classes,supported,by,this,marshaller,p,if,this,property,is,empty,the,default,all,classes,are,supported,see,supports,class;public,void,set,supported,classes,class,supported,classes,this,supported,classes,supported,classes
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder);1376041312;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder);1376303194;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder);1385412762;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder);1385423968;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder);1386625636;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder);1389187678;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder);1390654998;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder);1390659987;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder);1392767670;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder);1394814861;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder);1395777538;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder);1397058165;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder);1397682512;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder);1398638859;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder);1447323728;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder);1450368890;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder);1467730834;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder);1485810955;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder);1496242568;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> public void setEncoding(String encoding);1328020251;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1340616891;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1340627225;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1341435537;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1344858496;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1356735495;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1357119239;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1362408075;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1368482696;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1374675853;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1375718683;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1375733584;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1375739444;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1376041312;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1376303194;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1385412762;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1385423968;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1386625636;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1389187678;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1390654998;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1390659987;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1392767670;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1394814861;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1395777538;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1397058165;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1397682512;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1398638859;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1447323728;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1450368890;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1467730834;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1485810955;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1496242568;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1496259743;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1496837955;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1497362807;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1498780456;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1530174524;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setEncoding(String encoding);1530174524;Set the encoding to be used for stream access._@see #DEFAULT_ENCODING;public void setEncoding(String encoding) {_		this.encoding = encoding__	};set,the,encoding,to,be,used,for,stream,access,see;public,void,set,encoding,string,encoding,this,encoding,encoding
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1375718683;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1375733584;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1375739444;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1376041312;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1376303194;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1385412762;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1385423968;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1386625636;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1389187678;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1390654998;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1390659987;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1392767670;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1394814861;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1395777538;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1397058165;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1397682512;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1398638859;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1447323728;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1450368890;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1467730834;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1485810955;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1496242568;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1496259743;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1496837955;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1497362807;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1498780456;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1530174524;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setUseAttributeForTypes(Class<?>... useAttributeForTypes);1530174524;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class<?>... useAttributeForTypes) {_		this.useAttributeForTypes = useAttributeForTypes__	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,use,attribute,for,types,this,use,attribute,for,types,use,attribute,for,types
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1375733584;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1375739444;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1376041312;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1376303194;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1385412762;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1385423968;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1386625636;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1389187678;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1390654998;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1390659987;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1392767670;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1394814861;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1395777538;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1397058165;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1397682512;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1398638859;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1447323728;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1450368890;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1467730834;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1485810955;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1496242568;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1496259743;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1496837955;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1497362807;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1498780456;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1530174524;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterRegistry(ConverterRegistry converterRegistry);1530174524;Set a custom XStream {@link ConverterRegistry} to use._@since 4.0_@see #setConverterLookup_@see DefaultConverterLookup;public void setConverterRegistry(ConverterRegistry converterRegistry) {_		this.converterRegistry = converterRegistry__	};set,a,custom,xstream,link,converter,registry,to,use,since,4,0,see,set,converter,lookup,see,default,converter,lookup;public,void,set,converter,registry,converter,registry,converter,registry,this,converter,registry,converter,registry
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1375733584;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1375739444;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1376041312;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1376303194;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1385412762;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1385423968;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1386625636;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__		if (converterLookup instanceof ConverterRegistry) {_			this.converterRegistry = (ConverterRegistry) converterLookup__		}_	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup,if,converter,lookup,instanceof,converter,registry,this,converter,registry,converter,registry,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1389187678;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__		if (converterLookup instanceof ConverterRegistry) {_			this.converterRegistry = (ConverterRegistry) converterLookup__		}_	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup,if,converter,lookup,instanceof,converter,registry,this,converter,registry,converter,registry,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1390654998;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__		if (converterLookup instanceof ConverterRegistry) {_			this.converterRegistry = (ConverterRegistry) converterLookup__		}_	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup,if,converter,lookup,instanceof,converter,registry,this,converter,registry,converter,registry,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1390659987;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__		if (converterLookup instanceof ConverterRegistry) {_			this.converterRegistry = (ConverterRegistry) converterLookup__		}_	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup,if,converter,lookup,instanceof,converter,registry,this,converter,registry,converter,registry,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1392767670;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__		if (converterLookup instanceof ConverterRegistry) {_			this.converterRegistry = (ConverterRegistry) converterLookup__		}_	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup,if,converter,lookup,instanceof,converter,registry,this,converter,registry,converter,registry,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1394814861;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__		if (converterLookup instanceof ConverterRegistry) {_			this.converterRegistry = (ConverterRegistry) converterLookup__		}_	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup,if,converter,lookup,instanceof,converter,registry,this,converter,registry,converter,registry,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1395777538;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__		if (converterLookup instanceof ConverterRegistry) {_			this.converterRegistry = (ConverterRegistry) converterLookup__		}_	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup,if,converter,lookup,instanceof,converter,registry,this,converter,registry,converter,registry,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1397058165;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__		if (converterLookup instanceof ConverterRegistry) {_			this.converterRegistry = (ConverterRegistry) converterLookup__		}_	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup,if,converter,lookup,instanceof,converter,registry,this,converter,registry,converter,registry,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1397682512;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__		if (converterLookup instanceof ConverterRegistry) {_			this.converterRegistry = (ConverterRegistry) converterLookup__		}_	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup,if,converter,lookup,instanceof,converter,registry,this,converter,registry,converter,registry,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1398638859;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__		if (converterLookup instanceof ConverterRegistry) {_			this.converterRegistry = (ConverterRegistry) converterLookup__		}_	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup,if,converter,lookup,instanceof,converter,registry,this,converter,registry,converter,registry,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1447323728;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__		if (converterLookup instanceof ConverterRegistry) {_			this.converterRegistry = (ConverterRegistry) converterLookup__		}_	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup,if,converter,lookup,instanceof,converter,registry,this,converter,registry,converter,registry,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1450368890;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__		if (converterLookup instanceof ConverterRegistry) {_			this.converterRegistry = (ConverterRegistry) converterLookup__		}_	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup,if,converter,lookup,instanceof,converter,registry,this,converter,registry,converter,registry,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1467730834;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__		if (converterLookup instanceof ConverterRegistry) {_			this.converterRegistry = (ConverterRegistry) converterLookup__		}_	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup,if,converter,lookup,instanceof,converter,registry,this,converter,registry,converter,registry,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1485810955;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__		if (converterLookup instanceof ConverterRegistry) {_			this.converterRegistry = (ConverterRegistry) converterLookup__		}_	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup,if,converter,lookup,instanceof,converter,registry,this,converter,registry,converter,registry,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1496242568;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__		if (converterLookup instanceof ConverterRegistry) {_			this.converterRegistry = (ConverterRegistry) converterLookup__		}_	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup,if,converter,lookup,instanceof,converter,registry,this,converter,registry,converter,registry,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1496259743;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__		if (converterLookup instanceof ConverterRegistry) {_			this.converterRegistry = (ConverterRegistry) converterLookup__		}_	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup,if,converter,lookup,instanceof,converter,registry,this,converter,registry,converter,registry,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1496837955;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__		if (converterLookup instanceof ConverterRegistry) {_			this.converterRegistry = (ConverterRegistry) converterLookup__		}_	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup,if,converter,lookup,instanceof,converter,registry,this,converter,registry,converter,registry,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1497362807;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__		if (converterLookup instanceof ConverterRegistry) {_			this.converterRegistry = (ConverterRegistry) converterLookup__		}_	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup,if,converter,lookup,instanceof,converter,registry,this,converter,registry,converter,registry,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1498780456;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__		if (converterLookup instanceof ConverterRegistry) {_			this.converterRegistry = (ConverterRegistry) converterLookup__		}_	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup,if,converter,lookup,instanceof,converter,registry,this,converter,registry,converter,registry,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1530174524;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__		if (converterLookup instanceof ConverterRegistry) {_			this.converterRegistry = (ConverterRegistry) converterLookup__		}_	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup,if,converter,lookup,instanceof,converter,registry,this,converter,registry,converter,registry,converter,lookup
XStreamMarshaller -> public void setConverterLookup(ConverterLookup converterLookup);1530174524;Set a custom XStream {@link ConverterLookup} to use._Also used as {@link ConverterRegistry} if the given reference implements it as well._@since 4.0_@see DefaultConverterLookup;public void setConverterLookup(ConverterLookup converterLookup) {_		this.converterLookup = converterLookup__		if (converterLookup instanceof ConverterRegistry) {_			this.converterRegistry = (ConverterRegistry) converterLookup__		}_	};set,a,custom,xstream,link,converter,lookup,to,use,also,used,as,link,converter,registry,if,the,given,reference,implements,it,as,well,since,4,0,see,default,converter,lookup;public,void,set,converter,lookup,converter,lookup,converter,lookup,this,converter,lookup,converter,lookup,if,converter,lookup,instanceof,converter,registry,this,converter,registry,converter,registry,converter,lookup
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1375718683;Set a field alias/type map, consiting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,a,field,alias,type,map,consiting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1375733584;Set a field alias/type map, consiting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,a,field,alias,type,map,consiting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1375739444;Set a field alias/type map, consiting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,a,field,alias,type,map,consiting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1376041312;Set a field alias/type map, consiting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,a,field,alias,type,map,consiting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1376303194;Set a field alias/type map, consiting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,a,field,alias,type,map,consiting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1385412762;Set a field alias/type map, consiting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,a,field,alias,type,map,consiting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1385423968;Set a field alias/type map, consiting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,a,field,alias,type,map,consiting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1386625636;Set a field alias/type map, consiting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,a,field,alias,type,map,consiting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1389187678;Set a field alias/type map, consiting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,a,field,alias,type,map,consiting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1390654998;Set the field alias/type map, consisting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,the,field,alias,type,map,consisting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1390659987;Set the field alias/type map, consisting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,the,field,alias,type,map,consisting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1392767670;Set the field alias/type map, consisting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,the,field,alias,type,map,consisting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1394814861;Set the field alias/type map, consisting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,the,field,alias,type,map,consisting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1395777538;Set the field alias/type map, consisting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,the,field,alias,type,map,consisting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1397058165;Set the field alias/type map, consisting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,the,field,alias,type,map,consisting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1397682512;Set the field alias/type map, consisting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,the,field,alias,type,map,consisting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1398638859;Set the field alias/type map, consisting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,the,field,alias,type,map,consisting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1447323728;Set the field alias/type map, consisting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,the,field,alias,type,map,consisting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1450368890;Set the field alias/type map, consisting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,the,field,alias,type,map,consisting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1467730834;Set the field alias/type map, consisting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,the,field,alias,type,map,consisting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1485810955;Set the field alias/type map, consisting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,the,field,alias,type,map,consisting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1496242568;Set the field alias/type map, consisting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,the,field,alias,type,map,consisting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1496259743;Set the field alias/type map, consisting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,the,field,alias,type,map,consisting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1496837955;Set the field alias/type map, consisting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,the,field,alias,type,map,consisting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1497362807;Set the field alias/type map, consisting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,the,field,alias,type,map,consisting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1498780456;Set the field alias/type map, consisting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,the,field,alias,type,map,consisting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1530174524;Set the field alias/type map, consisting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,the,field,alias,type,map,consisting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setFieldAliases(Map<String, String> fieldAliases);1530174524;Set the field alias/type map, consisting of field names._@see XStream#aliasField(String, Class, String);public void setFieldAliases(Map<String, String> fieldAliases) {_		this.fieldAliases = fieldAliases__	};set,the,field,alias,type,map,consisting,of,field,names,see,xstream,alias,field,string,class,string;public,void,set,field,aliases,map,string,string,field,aliases,this,field,aliases,field,aliases
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1375733584;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1375739444;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1376041312;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1376303194;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1385412762;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1385423968;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1386625636;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1389187678;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1390654998;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1390659987;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1392767670;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1394814861;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1395777538;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1397058165;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1397682512;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1398638859;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1447323728;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1450368890;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1467730834;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1485810955;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1496242568;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1496259743;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1496837955;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1497362807;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1498780456;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1530174524;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> public void setReflectionProvider(ReflectionProvider reflectionProvider);1530174524;Set a custom XStream {@link ReflectionProvider} to use._@since 4.0;public void setReflectionProvider(ReflectionProvider reflectionProvider) {_		this.reflectionProvider = reflectionProvider__	};set,a,custom,xstream,link,reflection,provider,to,use,since,4,0;public,void,set,reflection,provider,reflection,provider,reflection,provider,this,reflection,provider,reflection,provider
XStreamMarshaller -> protected XStream constructXStream();1376041312;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;protected XStream constructXStream() {_		return new XStream(this.reflectionProvider, this.streamDriver,_				this.beanClassLoader, this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<?> mapperWrapper : mapperWrappers) {_						Assert.isAssignable(MapperWrapper.class, mapperWrapper)__						Constructor<?> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = (MapperWrapper) ctor.newInstance(mapperToWrap)__						}_						catch (Exception ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,this,stream,driver,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,mapper,wrapper,mapper,wrappers,assert,is,assignable,mapper,wrapper,class,mapper,wrapper,constructor,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,mapper,wrapper,ctor,new,instance,mapper,to,wrap,catch,exception,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> protected XStream constructXStream();1376303194;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;protected XStream constructXStream() {_		return new XStream(this.reflectionProvider, this.streamDriver,_				this.beanClassLoader, this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<?> mapperWrapper : mapperWrappers) {_						Assert.isAssignable(MapperWrapper.class, mapperWrapper)__						Constructor<?> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = (MapperWrapper) ctor.newInstance(mapperToWrap)__						}_						catch (Exception ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,this,stream,driver,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,mapper,wrapper,mapper,wrappers,assert,is,assignable,mapper,wrapper,class,mapper,wrapper,constructor,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,mapper,wrapper,ctor,new,instance,mapper,to,wrap,catch,exception,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> protected XStream constructXStream();1385412762;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;protected XStream constructXStream() {_		return new XStream(this.reflectionProvider, this.streamDriver,_				this.beanClassLoader, this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<?> mapperWrapper : mapperWrappers) {_						Assert.isAssignable(MapperWrapper.class, mapperWrapper)__						Constructor<?> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = (MapperWrapper) ctor.newInstance(mapperToWrap)__						}_						catch (Exception ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,this,stream,driver,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,mapper,wrapper,mapper,wrappers,assert,is,assignable,mapper,wrapper,class,mapper,wrapper,constructor,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,mapper,wrapper,ctor,new,instance,mapper,to,wrap,catch,exception,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> protected XStream constructXStream();1385423968;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;protected XStream constructXStream() {_		return new XStream(this.reflectionProvider, this.streamDriver,_				this.beanClassLoader, this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<?> mapperWrapper : mapperWrappers) {_						Assert.isAssignable(MapperWrapper.class, mapperWrapper)__						Constructor<?> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = (MapperWrapper) ctor.newInstance(mapperToWrap)__						}_						catch (Exception ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,this,stream,driver,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,mapper,wrapper,mapper,wrappers,assert,is,assignable,mapper,wrapper,class,mapper,wrapper,constructor,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,mapper,wrapper,ctor,new,instance,mapper,to,wrap,catch,exception,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> protected XStream constructXStream();1450368890;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;protected XStream constructXStream() {_		return new XStream(this.reflectionProvider, getDefaultDriver(), new ClassLoaderReference(this.beanClassLoader),_				this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<?> mapperWrapper : mapperWrappers) {_						Assert.isAssignable(MapperWrapper.class, mapperWrapper)__						Constructor<?> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = (MapperWrapper) ctor.newInstance(mapperToWrap)__						}_						catch (Exception ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,get,default,driver,new,class,loader,reference,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,mapper,wrapper,mapper,wrappers,assert,is,assignable,mapper,wrapper,class,mapper,wrapper,constructor,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,mapper,wrapper,ctor,new,instance,mapper,to,wrap,catch,exception,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> protected XStream constructXStream();1467730834;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;protected XStream constructXStream() {_		return new XStream(this.reflectionProvider, getDefaultDriver(), new ClassLoaderReference(this.beanClassLoader),_				this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<?> mapperWrapper : mapperWrappers) {_						Assert.isAssignable(MapperWrapper.class, mapperWrapper)__						Constructor<?> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = (MapperWrapper) ctor.newInstance(mapperToWrap)__						}_						catch (Exception ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,get,default,driver,new,class,loader,reference,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,mapper,wrapper,mapper,wrappers,assert,is,assignable,mapper,wrapper,class,mapper,wrapper,constructor,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,mapper,wrapper,ctor,new,instance,mapper,to,wrap,catch,exception,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> protected XStream constructXStream();1485810955;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;protected XStream constructXStream() {_		return new XStream(this.reflectionProvider, getDefaultDriver(), new ClassLoaderReference(this.beanClassLoader),_				this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<? extends MapperWrapper> mapperWrapper : mapperWrappers) {_						Constructor<? extends MapperWrapper> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = ctor.newInstance(mapperToWrap)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,get,default,driver,new,class,loader,reference,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,extends,mapper,wrapper,mapper,wrapper,mapper,wrappers,constructor,extends,mapper,wrapper,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,ctor,new,instance,mapper,to,wrap,catch,throwable,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> protected XStream constructXStream();1496242568;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;protected XStream constructXStream() {_		return new XStream(this.reflectionProvider, getDefaultDriver(), new ClassLoaderReference(this.beanClassLoader),_				this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<? extends MapperWrapper> mapperWrapper : mapperWrappers) {_						Constructor<? extends MapperWrapper> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = ctor.newInstance(mapperToWrap)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,get,default,driver,new,class,loader,reference,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,extends,mapper,wrapper,mapper,wrapper,mapper,wrappers,constructor,extends,mapper,wrapper,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,ctor,new,instance,mapper,to,wrap,catch,throwable,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> protected XStream constructXStream();1496259743;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;protected XStream constructXStream() {_		return new XStream(this.reflectionProvider, getDefaultDriver(), new ClassLoaderReference(this.beanClassLoader),_				this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<? extends MapperWrapper> mapperWrapper : mapperWrappers) {_						Constructor<? extends MapperWrapper> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = ctor.newInstance(mapperToWrap)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,get,default,driver,new,class,loader,reference,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,extends,mapper,wrapper,mapper,wrapper,mapper,wrappers,constructor,extends,mapper,wrapper,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,ctor,new,instance,mapper,to,wrap,catch,throwable,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> protected XStream constructXStream();1496837955;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;protected XStream constructXStream() {_		return new XStream(this.reflectionProvider, getDefaultDriver(), new ClassLoaderReference(this.beanClassLoader),_				this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<? extends MapperWrapper> mapperWrapper : mapperWrappers) {_						Constructor<? extends MapperWrapper> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = ctor.newInstance(mapperToWrap)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,get,default,driver,new,class,loader,reference,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,extends,mapper,wrapper,mapper,wrapper,mapper,wrappers,constructor,extends,mapper,wrapper,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,ctor,new,instance,mapper,to,wrap,catch,throwable,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> protected XStream constructXStream();1497362807;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;protected XStream constructXStream() {_		return new XStream(this.reflectionProvider, getDefaultDriver(), new ClassLoaderReference(this.beanClassLoader),_				this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<? extends MapperWrapper> mapperWrapper : mapperWrappers) {_						Constructor<? extends MapperWrapper> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = ctor.newInstance(mapperToWrap)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,get,default,driver,new,class,loader,reference,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,extends,mapper,wrapper,mapper,wrapper,mapper,wrappers,constructor,extends,mapper,wrapper,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,ctor,new,instance,mapper,to,wrap,catch,throwable,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> protected XStream constructXStream();1498780456;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;protected XStream constructXStream() {_		return new XStream(this.reflectionProvider, getDefaultDriver(), new ClassLoaderReference(this.beanClassLoader),_				this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<? extends MapperWrapper> mapperWrapper : mapperWrappers) {_						Constructor<? extends MapperWrapper> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = ctor.newInstance(mapperToWrap)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,get,default,driver,new,class,loader,reference,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,extends,mapper,wrapper,mapper,wrapper,mapper,wrappers,constructor,extends,mapper,wrapper,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,ctor,new,instance,mapper,to,wrap,catch,throwable,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> protected XStream constructXStream();1530174524;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;protected XStream constructXStream() {_		return new XStream(this.reflectionProvider, getDefaultDriver(), new ClassLoaderReference(this.beanClassLoader),_				this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<? extends MapperWrapper> mapperWrapper : mapperWrappers) {_						Constructor<? extends MapperWrapper> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = ctor.newInstance(mapperToWrap)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,get,default,driver,new,class,loader,reference,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,extends,mapper,wrapper,mapper,wrapper,mapper,wrappers,constructor,extends,mapper,wrapper,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,ctor,new,instance,mapper,to,wrap,catch,throwable,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> protected XStream constructXStream();1530174524;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;protected XStream constructXStream() {_		return new XStream(this.reflectionProvider, getDefaultDriver(), new ClassLoaderReference(this.beanClassLoader),_				this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<? extends MapperWrapper> mapperWrapper : mapperWrappers) {_						Constructor<? extends MapperWrapper> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = ctor.newInstance(mapperToWrap)__						}_						catch (Throwable ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,get,default,driver,new,class,loader,reference,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,extends,mapper,wrapper,mapper,wrapper,mapper,wrappers,constructor,extends,mapper,wrapper,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,ctor,new,instance,mapper,to,wrap,catch,throwable,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> attributes);1328020251;Set the types to use XML attributes for. The given map can contain_either {@code <String, Class>} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code <Class, String>}_or {@code <Class, List<String>>} pairs, which results in_{@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> attributes) {_		for (Map.Entry<?, ?> entry : attributes.entrySet()) {_			if (entry.getKey() instanceof String) {_				if (entry.getValue() instanceof Class) {_					this.getXStream().useAttributeFor((String) entry.getKey(), (Class) entry.getValue())__				}_				else {_					throw new IllegalArgumentException(_							"Invalid argument 'attributes'. 'useAttributesFor' property takes map of <String, Class>," +_									" when using a map key of type String")__				}_			}_			else if (entry.getKey() instanceof Class) {_				Class<?> key = (Class<?>) entry.getKey()__				if (entry.getValue() instanceof String) {_					this.getXStream().useAttributeFor(key, (String) entry.getValue())__				}_				else if (entry.getValue() instanceof List) {_					List list = (List) entry.getValue()___					for (Object o : list) {_						if (o instanceof String) {_							this.getXStream().useAttributeFor(key, (String) o)__						}_					}_				}_				else {_					throw new IllegalArgumentException("Invalid argument 'attributes'. " +_							"'useAttributesFor' property takes either <Class, String> or <Class, List<String>> map," +_							" when using a map key of type Class")__				}_			}_			else {_				throw new IllegalArgumentException("Invalid argument 'attributes. " +_						"'useAttributesFor' property takes either a map key of type String or Class")__			}_		}_	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,string,class,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,class,string,or,code,class,list,string,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,attributes,for,map,entry,entry,attributes,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,this,get,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,map,of,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,this,get,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,list,list,entry,get,value,for,object,o,list,if,o,instanceof,string,this,get,xstream,use,attribute,for,key,string,o,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,class,string,or,class,list,string,map,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> attributes);1340616891;Set the types to use XML attributes for. The given map can contain_either {@code <String, Class>} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code <Class, String>}_or {@code <Class, List<String>>} pairs, which results in_{@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> attributes) {_		for (Map.Entry<?, ?> entry : attributes.entrySet()) {_			if (entry.getKey() instanceof String) {_				if (entry.getValue() instanceof Class) {_					this.getXStream().useAttributeFor((String) entry.getKey(), (Class) entry.getValue())__				}_				else {_					throw new IllegalArgumentException(_							"Invalid argument 'attributes'. 'useAttributesFor' property takes map of <String, Class>," +_									" when using a map key of type String")__				}_			}_			else if (entry.getKey() instanceof Class) {_				Class<?> key = (Class<?>) entry.getKey()__				if (entry.getValue() instanceof String) {_					this.getXStream().useAttributeFor(key, (String) entry.getValue())__				}_				else if (entry.getValue() instanceof List) {_					List list = (List) entry.getValue()___					for (Object o : list) {_						if (o instanceof String) {_							this.getXStream().useAttributeFor(key, (String) o)__						}_					}_				}_				else {_					throw new IllegalArgumentException("Invalid argument 'attributes'. " +_							"'useAttributesFor' property takes either <Class, String> or <Class, List<String>> map," +_							" when using a map key of type Class")__				}_			}_			else {_				throw new IllegalArgumentException("Invalid argument 'attributes. " +_						"'useAttributesFor' property takes either a map key of type String or Class")__			}_		}_	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,string,class,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,class,string,or,code,class,list,string,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,attributes,for,map,entry,entry,attributes,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,this,get,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,map,of,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,this,get,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,list,list,entry,get,value,for,object,o,list,if,o,instanceof,string,this,get,xstream,use,attribute,for,key,string,o,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,class,string,or,class,list,string,map,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> attributes);1340627225;Set the types to use XML attributes for. The given map can contain_either {@code <String, Class>} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code <Class, String>}_or {@code <Class, List<String>>} pairs, which results in_{@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> attributes) {_		for (Map.Entry<?, ?> entry : attributes.entrySet()) {_			if (entry.getKey() instanceof String) {_				if (entry.getValue() instanceof Class) {_					this.getXStream().useAttributeFor((String) entry.getKey(), (Class) entry.getValue())__				}_				else {_					throw new IllegalArgumentException(_							"Invalid argument 'attributes'. 'useAttributesFor' property takes map of <String, Class>," +_									" when using a map key of type String")__				}_			}_			else if (entry.getKey() instanceof Class) {_				Class<?> key = (Class<?>) entry.getKey()__				if (entry.getValue() instanceof String) {_					this.getXStream().useAttributeFor(key, (String) entry.getValue())__				}_				else if (entry.getValue() instanceof List) {_					List list = (List) entry.getValue()___					for (Object o : list) {_						if (o instanceof String) {_							this.getXStream().useAttributeFor(key, (String) o)__						}_					}_				}_				else {_					throw new IllegalArgumentException("Invalid argument 'attributes'. " +_							"'useAttributesFor' property takes either <Class, String> or <Class, List<String>> map," +_							" when using a map key of type Class")__				}_			}_			else {_				throw new IllegalArgumentException("Invalid argument 'attributes. " +_						"'useAttributesFor' property takes either a map key of type String or Class")__			}_		}_	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,string,class,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,class,string,or,code,class,list,string,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,attributes,for,map,entry,entry,attributes,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,this,get,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,map,of,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,this,get,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,list,list,entry,get,value,for,object,o,list,if,o,instanceof,string,this,get,xstream,use,attribute,for,key,string,o,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,class,string,or,class,list,string,map,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> attributes);1341435537;Set the types to use XML attributes for. The given map can contain_either {@code <String, Class>} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code <Class, String>}_or {@code <Class, List<String>>} pairs, which results in_{@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> attributes) {_		for (Map.Entry<?, ?> entry : attributes.entrySet()) {_			if (entry.getKey() instanceof String) {_				if (entry.getValue() instanceof Class) {_					this.getXStream().useAttributeFor((String) entry.getKey(), (Class) entry.getValue())__				}_				else {_					throw new IllegalArgumentException(_							"Invalid argument 'attributes'. 'useAttributesFor' property takes map of <String, Class>," +_									" when using a map key of type String")__				}_			}_			else if (entry.getKey() instanceof Class) {_				Class<?> key = (Class<?>) entry.getKey()__				if (entry.getValue() instanceof String) {_					this.getXStream().useAttributeFor(key, (String) entry.getValue())__				}_				else if (entry.getValue() instanceof List) {_					List list = (List) entry.getValue()___					for (Object o : list) {_						if (o instanceof String) {_							this.getXStream().useAttributeFor(key, (String) o)__						}_					}_				}_				else {_					throw new IllegalArgumentException("Invalid argument 'attributes'. " +_							"'useAttributesFor' property takes either <Class, String> or <Class, List<String>> map," +_							" when using a map key of type Class")__				}_			}_			else {_				throw new IllegalArgumentException("Invalid argument 'attributes. " +_						"'useAttributesFor' property takes either a map key of type String or Class")__			}_		}_	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,string,class,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,class,string,or,code,class,list,string,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,attributes,for,map,entry,entry,attributes,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,this,get,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,map,of,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,this,get,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,list,list,entry,get,value,for,object,o,list,if,o,instanceof,string,this,get,xstream,use,attribute,for,key,string,o,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,class,string,or,class,list,string,map,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> attributes);1344858496;Set the types to use XML attributes for. The given map can contain_either {@code <String, Class>} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code <Class, String>}_or {@code <Class, List<String>>} pairs, which results in_{@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> attributes) {_		for (Map.Entry<?, ?> entry : attributes.entrySet()) {_			if (entry.getKey() instanceof String) {_				if (entry.getValue() instanceof Class) {_					this.getXStream().useAttributeFor((String) entry.getKey(), (Class) entry.getValue())__				}_				else {_					throw new IllegalArgumentException(_							"Invalid argument 'attributes'. 'useAttributesFor' property takes map of <String, Class>," +_									" when using a map key of type String")__				}_			}_			else if (entry.getKey() instanceof Class) {_				Class<?> key = (Class<?>) entry.getKey()__				if (entry.getValue() instanceof String) {_					this.getXStream().useAttributeFor(key, (String) entry.getValue())__				}_				else if (entry.getValue() instanceof List) {_					List list = (List) entry.getValue()___					for (Object o : list) {_						if (o instanceof String) {_							this.getXStream().useAttributeFor(key, (String) o)__						}_					}_				}_				else {_					throw new IllegalArgumentException("Invalid argument 'attributes'. " +_							"'useAttributesFor' property takes either <Class, String> or <Class, List<String>> map," +_							" when using a map key of type Class")__				}_			}_			else {_				throw new IllegalArgumentException("Invalid argument 'attributes. " +_						"'useAttributesFor' property takes either a map key of type String or Class")__			}_		}_	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,string,class,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,class,string,or,code,class,list,string,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,attributes,for,map,entry,entry,attributes,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,this,get,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,map,of,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,this,get,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,list,list,entry,get,value,for,object,o,list,if,o,instanceof,string,this,get,xstream,use,attribute,for,key,string,o,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,class,string,or,class,list,string,map,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> attributes);1356735495;Set the types to use XML attributes for. The given map can contain_either {@code <String, Class>} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code <Class, String>}_or {@code <Class, List<String>>} pairs, which results in_{@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> attributes) {_		for (Map.Entry<?, ?> entry : attributes.entrySet()) {_			if (entry.getKey() instanceof String) {_				if (entry.getValue() instanceof Class) {_					this.getXStream().useAttributeFor((String) entry.getKey(), (Class) entry.getValue())__				}_				else {_					throw new IllegalArgumentException(_							"Invalid argument 'attributes'. 'useAttributesFor' property takes map of <String, Class>," +_									" when using a map key of type String")__				}_			}_			else if (entry.getKey() instanceof Class) {_				Class<?> key = (Class<?>) entry.getKey()__				if (entry.getValue() instanceof String) {_					this.getXStream().useAttributeFor(key, (String) entry.getValue())__				}_				else if (entry.getValue() instanceof List) {_					List list = (List) entry.getValue()___					for (Object o : list) {_						if (o instanceof String) {_							this.getXStream().useAttributeFor(key, (String) o)__						}_					}_				}_				else {_					throw new IllegalArgumentException("Invalid argument 'attributes'. " +_							"'useAttributesFor' property takes either <Class, String> or <Class, List<String>> map," +_							" when using a map key of type Class")__				}_			}_			else {_				throw new IllegalArgumentException("Invalid argument 'attributes. " +_						"'useAttributesFor' property takes either a map key of type String or Class")__			}_		}_	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,string,class,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,class,string,or,code,class,list,string,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,attributes,for,map,entry,entry,attributes,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,this,get,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,map,of,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,this,get,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,list,list,entry,get,value,for,object,o,list,if,o,instanceof,string,this,get,xstream,use,attribute,for,key,string,o,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,class,string,or,class,list,string,map,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> attributes);1357119239;Set the types to use XML attributes for. The given map can contain_either {@code <String, Class>} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code <Class, String>}_or {@code <Class, List<String>>} pairs, which results in_{@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> attributes) {_		for (Map.Entry<?, ?> entry : attributes.entrySet()) {_			if (entry.getKey() instanceof String) {_				if (entry.getValue() instanceof Class) {_					this.getXStream().useAttributeFor((String) entry.getKey(), (Class) entry.getValue())__				}_				else {_					throw new IllegalArgumentException(_							"Invalid argument 'attributes'. 'useAttributesFor' property takes map of <String, Class>," +_									" when using a map key of type String")__				}_			}_			else if (entry.getKey() instanceof Class) {_				Class<?> key = (Class<?>) entry.getKey()__				if (entry.getValue() instanceof String) {_					this.getXStream().useAttributeFor(key, (String) entry.getValue())__				}_				else if (entry.getValue() instanceof List) {_					List list = (List) entry.getValue()___					for (Object o : list) {_						if (o instanceof String) {_							this.getXStream().useAttributeFor(key, (String) o)__						}_					}_				}_				else {_					throw new IllegalArgumentException("Invalid argument 'attributes'. " +_							"'useAttributesFor' property takes either <Class, String> or <Class, List<String>> map," +_							" when using a map key of type Class")__				}_			}_			else {_				throw new IllegalArgumentException("Invalid argument 'attributes. " +_						"'useAttributesFor' property takes either a map key of type String or Class")__			}_		}_	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,string,class,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,class,string,or,code,class,list,string,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,attributes,for,map,entry,entry,attributes,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,this,get,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,map,of,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,this,get,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,list,list,entry,get,value,for,object,o,list,if,o,instanceof,string,this,get,xstream,use,attribute,for,key,string,o,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,class,string,or,class,list,string,map,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> attributes);1362408075;Set the types to use XML attributes for. The given map can contain_either {@code <String, Class>} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code <Class, String>}_or {@code <Class, List<String>>} pairs, which results in_{@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> attributes) {_		for (Map.Entry<?, ?> entry : attributes.entrySet()) {_			if (entry.getKey() instanceof String) {_				if (entry.getValue() instanceof Class) {_					this.xstream.useAttributeFor((String) entry.getKey(), (Class) entry.getValue())__				}_				else {_					throw new IllegalArgumentException(_							"Invalid argument 'attributes'. 'useAttributesFor' property takes map of <String, Class>," +_									" when using a map key of type String")__				}_			}_			else if (entry.getKey() instanceof Class) {_				Class<?> key = (Class<?>) entry.getKey()__				if (entry.getValue() instanceof String) {_					this.xstream.useAttributeFor(key, (String) entry.getValue())__				}_				else if (entry.getValue() instanceof List) {_					List list = (List) entry.getValue()___					for (Object o : list) {_						if (o instanceof String) {_							this.xstream.useAttributeFor(key, (String) o)__						}_					}_				}_				else {_					throw new IllegalArgumentException("Invalid argument 'attributes'. " +_							"'useAttributesFor' property takes either <Class, String> or <Class, List<String>> map," +_							" when using a map key of type Class")__				}_			}_			else {_				throw new IllegalArgumentException("Invalid argument 'attributes. " +_						"'useAttributesFor' property takes either a map key of type String or Class")__			}_		}_	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,string,class,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,class,string,or,code,class,list,string,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,attributes,for,map,entry,entry,attributes,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,this,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,map,of,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,this,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,list,list,entry,get,value,for,object,o,list,if,o,instanceof,string,this,xstream,use,attribute,for,key,string,o,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,class,string,or,class,list,string,map,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> attributes);1368482696;Set the types to use XML attributes for. The given map can contain_either {@code <String, Class>} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code <Class, String>}_or {@code <Class, List<String>>} pairs, which results in_{@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> attributes) {_		for (Map.Entry<?, ?> entry : attributes.entrySet()) {_			if (entry.getKey() instanceof String) {_				if (entry.getValue() instanceof Class) {_					this.xstream.useAttributeFor((String) entry.getKey(), (Class) entry.getValue())__				}_				else {_					throw new IllegalArgumentException(_							"Invalid argument 'attributes'. 'useAttributesFor' property takes map of <String, Class>," +_									" when using a map key of type String")__				}_			}_			else if (entry.getKey() instanceof Class) {_				Class<?> key = (Class<?>) entry.getKey()__				if (entry.getValue() instanceof String) {_					this.xstream.useAttributeFor(key, (String) entry.getValue())__				}_				else if (entry.getValue() instanceof List) {_					List list = (List) entry.getValue()___					for (Object o : list) {_						if (o instanceof String) {_							this.xstream.useAttributeFor(key, (String) o)__						}_					}_				}_				else {_					throw new IllegalArgumentException("Invalid argument 'attributes'. " +_							"'useAttributesFor' property takes either <Class, String> or <Class, List<String>> map," +_							" when using a map key of type Class")__				}_			}_			else {_				throw new IllegalArgumentException("Invalid argument 'attributes. " +_						"'useAttributesFor' property takes either a map key of type String or Class")__			}_		}_	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,string,class,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,class,string,or,code,class,list,string,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,attributes,for,map,entry,entry,attributes,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,this,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,map,of,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,this,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,list,list,entry,get,value,for,object,o,list,if,o,instanceof,string,this,xstream,use,attribute,for,key,string,o,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,class,string,or,class,list,string,map,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class
XStreamMarshaller -> public void setUseAttributeFor(Map<?, ?> attributes);1374675853;Set the types to use XML attributes for. The given map can contain_either {@code <String, Class>} pairs, in which case_{@link XStream#useAttributeFor(String, Class)} is called._Alternatively, the map can contain {@code <Class, String>}_or {@code <Class, List<String>>} pairs, which results in_{@link XStream#useAttributeFor(Class, String)} calls.;public void setUseAttributeFor(Map<?, ?> attributes) {_		for (Map.Entry<?, ?> entry : attributes.entrySet()) {_			if (entry.getKey() instanceof String) {_				if (entry.getValue() instanceof Class) {_					this.xstream.useAttributeFor((String) entry.getKey(), (Class) entry.getValue())__				}_				else {_					throw new IllegalArgumentException(_							"Invalid argument 'attributes'. 'useAttributesFor' property takes map of <String, Class>," +_									" when using a map key of type String")__				}_			}_			else if (entry.getKey() instanceof Class) {_				Class<?> key = (Class<?>) entry.getKey()__				if (entry.getValue() instanceof String) {_					this.xstream.useAttributeFor(key, (String) entry.getValue())__				}_				else if (entry.getValue() instanceof List) {_					List list = (List) entry.getValue()___					for (Object o : list) {_						if (o instanceof String) {_							this.xstream.useAttributeFor(key, (String) o)__						}_					}_				}_				else {_					throw new IllegalArgumentException("Invalid argument 'attributes'. " +_							"'useAttributesFor' property takes either <Class, String> or <Class, List<String>> map," +_							" when using a map key of type Class")__				}_			}_			else {_				throw new IllegalArgumentException("Invalid argument 'attributes. " +_						"'useAttributesFor' property takes either a map key of type String or Class")__			}_		}_	};set,the,types,to,use,xml,attributes,for,the,given,map,can,contain,either,code,string,class,pairs,in,which,case,link,xstream,use,attribute,for,string,class,is,called,alternatively,the,map,can,contain,code,class,string,or,code,class,list,string,pairs,which,results,in,link,xstream,use,attribute,for,class,string,calls;public,void,set,use,attribute,for,map,attributes,for,map,entry,entry,attributes,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,this,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,map,of,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,this,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,list,list,entry,get,value,for,object,o,list,if,o,instanceof,string,this,xstream,use,attribute,for,key,string,o,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,class,string,or,class,list,string,map,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>[] annotatedClasses);1328020251;Set annotated classes for which aliases will be read from class-level JDK 1.5+ annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>[] annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "'annotatedClasses' must not be empty")__		this.getXStream().processAnnotations(annotatedClasses)__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,jdk,1,5,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,assert,not,empty,annotated,classes,annotated,classes,must,not,be,empty,this,get,xstream,process,annotations,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>[] annotatedClasses);1340616891;Set annotated classes for which aliases will be read from class-level JDK 1.5+ annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>[] annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "'annotatedClasses' must not be empty")__		this.getXStream().processAnnotations(annotatedClasses)__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,jdk,1,5,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,assert,not,empty,annotated,classes,annotated,classes,must,not,be,empty,this,get,xstream,process,annotations,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>[] annotatedClasses);1340627225;Set annotated classes for which aliases will be read from class-level JDK 1.5+ annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>[] annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "'annotatedClasses' must not be empty")__		this.getXStream().processAnnotations(annotatedClasses)__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,jdk,1,5,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,assert,not,empty,annotated,classes,annotated,classes,must,not,be,empty,this,get,xstream,process,annotations,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>[] annotatedClasses);1341435537;Set annotated classes for which aliases will be read from class-level JDK 1.5+ annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>[] annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "'annotatedClasses' must not be empty")__		this.getXStream().processAnnotations(annotatedClasses)__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,jdk,1,5,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,assert,not,empty,annotated,classes,annotated,classes,must,not,be,empty,this,get,xstream,process,annotations,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>[] annotatedClasses);1344858496;Set annotated classes for which aliases will be read from class-level JDK 1.5+ annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>[] annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "'annotatedClasses' must not be empty")__		this.getXStream().processAnnotations(annotatedClasses)__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,jdk,1,5,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,assert,not,empty,annotated,classes,annotated,classes,must,not,be,empty,this,get,xstream,process,annotations,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>[] annotatedClasses);1356735495;Set annotated classes for which aliases will be read from class-level JDK 1.5+ annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>[] annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "'annotatedClasses' must not be empty")__		this.getXStream().processAnnotations(annotatedClasses)__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,jdk,1,5,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,assert,not,empty,annotated,classes,annotated,classes,must,not,be,empty,this,get,xstream,process,annotations,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>[] annotatedClasses);1357119239;Set annotated classes for which aliases will be read from class-level JDK 1.5+ annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>[] annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "'annotatedClasses' must not be empty")__		this.getXStream().processAnnotations(annotatedClasses)__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,jdk,1,5,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,assert,not,empty,annotated,classes,annotated,classes,must,not,be,empty,this,get,xstream,process,annotations,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>[] annotatedClasses);1362408075;Set annotated classes for which aliases will be read from class-level JDK 1.5+ annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>[] annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "'annotatedClasses' must not be empty")__		this.xstream.processAnnotations(annotatedClasses)__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,jdk,1,5,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,assert,not,empty,annotated,classes,annotated,classes,must,not,be,empty,this,xstream,process,annotations,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>[] annotatedClasses);1368482696;Set annotated classes for which aliases will be read from class-level JDK 1.5+ annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>[] annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "'annotatedClasses' must not be empty")__		this.xstream.processAnnotations(annotatedClasses)__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,jdk,1,5,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,assert,not,empty,annotated,classes,annotated,classes,must,not,be,empty,this,xstream,process,annotations,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>[] annotatedClasses);1374675853;Set annotated classes for which aliases will be read from class-level JDK 1.5+ annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>[] annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "'annotatedClasses' must not be empty")__		this.xstream.processAnnotations(annotatedClasses)__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,jdk,1,5,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,assert,not,empty,annotated,classes,annotated,classes,must,not,be,empty,this,xstream,process,annotations,annotated,classes
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1328020251;Convert the given XStream exception to an appropriate exception from the_<code>org.springframework.oxm</code> hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occured_@param marshalling indicates whether the exception occurs during marshalling (<code>true</code>),_or unmarshalling (<code>false</code>)_@return the corresponding <code>XmlMappingException</code>;protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,code,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occured,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,code,or,unmarshalling,code,false,code,return,the,corresponding,code,xml,mapping,exception,code;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1340616891;Convert the given XStream exception to an appropriate exception from the_<code>org.springframework.oxm</code> hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occured_@param marshalling indicates whether the exception occurs during marshalling (<code>true</code>),_or unmarshalling (<code>false</code>)_@return the corresponding <code>XmlMappingException</code>;protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,code,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occured,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,code,or,unmarshalling,code,false,code,return,the,corresponding,code,xml,mapping,exception,code;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1340627225;Convert the given XStream exception to an appropriate exception from the_<code>org.springframework.oxm</code> hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occured_@param marshalling indicates whether the exception occurs during marshalling (<code>true</code>),_or unmarshalling (<code>false</code>)_@return the corresponding <code>XmlMappingException</code>;protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,code,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occured,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,code,or,unmarshalling,code,false,code,return,the,corresponding,code,xml,mapping,exception,code;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1341435537;Convert the given XStream exception to an appropriate exception from the_<code>org.springframework.oxm</code> hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occured_@param marshalling indicates whether the exception occurs during marshalling (<code>true</code>),_or unmarshalling (<code>false</code>)_@return the corresponding <code>XmlMappingException</code>;protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,code,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occured,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,code,or,unmarshalling,code,false,code,return,the,corresponding,code,xml,mapping,exception,code;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1344858496;Convert the given XStream exception to an appropriate exception from the_<code>org.springframework.oxm</code> hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occured_@param marshalling indicates whether the exception occurs during marshalling (<code>true</code>),_or unmarshalling (<code>false</code>)_@return the corresponding <code>XmlMappingException</code>;protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,code,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occured,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,code,or,unmarshalling,code,false,code,return,the,corresponding,code,xml,mapping,exception,code;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1356735495;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occured_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occured,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1357119239;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occured_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occured,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1362408075;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occured_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occured,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1368482696;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occured_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occured,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1374675853;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occured_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occured,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1375718683;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occured_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occured,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1375733584;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occured_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occured,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1375739444;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occured_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occured,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1376041312;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occured_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occured,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1376303194;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occured_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occured,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1385412762;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occured_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occured,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1385423968;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occurred_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occurred,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1386625636;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occurred_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occurred,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1389187678;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occurred_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occurred,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1390654998;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occurred_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occurred,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1390659987;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occurred_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occurred,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1392767670;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occurred_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occurred,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1394814861;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occurred_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occurred,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1395777538;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occurred_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occurred,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1397058165;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occurred_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occurred,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1397682512;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occurred_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occurred,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1398638859;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occurred_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occurred,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1447323728;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occurred_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occurred,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1450368890;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occurred_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occurred,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1467730834;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occurred_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occurred,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1485810955;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occurred_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occurred,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1496242568;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occurred_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occurred,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1496259743;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occurred_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occurred,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1496837955;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occurred_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occurred,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1497362807;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occurred_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occurred,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1498780456;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex XStream exception that occurred_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,xstream,exception,that,occurred,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1530174524;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex the XStream exception that occurred_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,the,xstream,exception,that,occurred,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling);1530174524;Convert the given XStream exception to an appropriate exception from the_{@code org.springframework.oxm} hierarchy._<p>A boolean flag is used to indicate whether this exception occurs during marshalling or_unmarshalling, since XStream itself does not make this distinction in its exception hierarchy._@param ex the XStream exception that occurred_@param marshalling indicates whether the exception occurs during marshalling ({@code true}),_or unmarshalling ({@code false})_@return the corresponding {@code XmlMappingException};protected XmlMappingException convertXStreamException(Exception ex, boolean marshalling) {_		if (ex instanceof StreamException || ex instanceof CannotResolveClassException ||_				ex instanceof ConversionException) {_			if (marshalling) {_				return new MarshallingFailureException("XStream marshalling exception",  ex)__			}_			else {_				return new UnmarshallingFailureException("XStream unmarshalling exception", ex)__			}_		}_		else {_			_			return new UncategorizedMappingException("Unknown XStream exception", ex)__		}_	};convert,the,given,xstream,exception,to,an,appropriate,exception,from,the,code,org,springframework,oxm,hierarchy,p,a,boolean,flag,is,used,to,indicate,whether,this,exception,occurs,during,marshalling,or,unmarshalling,since,xstream,itself,does,not,make,this,distinction,in,its,exception,hierarchy,param,ex,the,xstream,exception,that,occurred,param,marshalling,indicates,whether,the,exception,occurs,during,marshalling,code,true,or,unmarshalling,code,false,return,the,corresponding,code,xml,mapping,exception;protected,xml,mapping,exception,convert,xstream,exception,exception,ex,boolean,marshalling,if,ex,instanceof,stream,exception,ex,instanceof,cannot,resolve,class,exception,ex,instanceof,conversion,exception,if,marshalling,return,new,marshalling,failure,exception,xstream,marshalling,exception,ex,else,return,new,unmarshalling,failure,exception,xstream,unmarshalling,exception,ex,else,return,new,uncategorized,mapping,exception,unknown,xstream,exception,ex
XStreamMarshaller -> @SuppressWarnings("deprecation") 	protected XStream constructXStream();1386625636;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;@SuppressWarnings("deprecation")_	protected XStream constructXStream() {_		_		_		return new XStream(this.reflectionProvider, this.streamDriver,_				this.beanClassLoader, this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<?> mapperWrapper : mapperWrappers) {_						Assert.isAssignable(MapperWrapper.class, mapperWrapper)__						Constructor<?> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = (MapperWrapper) ctor.newInstance(mapperToWrap)__						}_						catch (Exception ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;suppress,warnings,deprecation,protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,this,stream,driver,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,mapper,wrapper,mapper,wrappers,assert,is,assignable,mapper,wrapper,class,mapper,wrapper,constructor,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,mapper,wrapper,ctor,new,instance,mapper,to,wrap,catch,exception,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> @SuppressWarnings("deprecation") 	protected XStream constructXStream();1389187678;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;@SuppressWarnings("deprecation")_	protected XStream constructXStream() {_		_		_		return new XStream(this.reflectionProvider, this.streamDriver,_				this.beanClassLoader, this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<?> mapperWrapper : mapperWrappers) {_						Assert.isAssignable(MapperWrapper.class, mapperWrapper)__						Constructor<?> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = (MapperWrapper) ctor.newInstance(mapperToWrap)__						}_						catch (Exception ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;suppress,warnings,deprecation,protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,this,stream,driver,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,mapper,wrapper,mapper,wrappers,assert,is,assignable,mapper,wrapper,class,mapper,wrapper,constructor,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,mapper,wrapper,ctor,new,instance,mapper,to,wrap,catch,exception,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> @SuppressWarnings("deprecation") 	protected XStream constructXStream();1390654998;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;@SuppressWarnings("deprecation")_	protected XStream constructXStream() {_		_		_		return new XStream(this.reflectionProvider, this.streamDriver,_				this.beanClassLoader, this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<?> mapperWrapper : mapperWrappers) {_						Assert.isAssignable(MapperWrapper.class, mapperWrapper)__						Constructor<?> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = (MapperWrapper) ctor.newInstance(mapperToWrap)__						}_						catch (Exception ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;suppress,warnings,deprecation,protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,this,stream,driver,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,mapper,wrapper,mapper,wrappers,assert,is,assignable,mapper,wrapper,class,mapper,wrapper,constructor,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,mapper,wrapper,ctor,new,instance,mapper,to,wrap,catch,exception,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> @SuppressWarnings("deprecation") 	protected XStream constructXStream();1390659987;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;@SuppressWarnings("deprecation")_	protected XStream constructXStream() {_		_		_		return new XStream(this.reflectionProvider, this.streamDriver,_				this.beanClassLoader, this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<?> mapperWrapper : mapperWrappers) {_						Assert.isAssignable(MapperWrapper.class, mapperWrapper)__						Constructor<?> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = (MapperWrapper) ctor.newInstance(mapperToWrap)__						}_						catch (Exception ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;suppress,warnings,deprecation,protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,this,stream,driver,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,mapper,wrapper,mapper,wrappers,assert,is,assignable,mapper,wrapper,class,mapper,wrapper,constructor,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,mapper,wrapper,ctor,new,instance,mapper,to,wrap,catch,exception,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> @SuppressWarnings("deprecation") 	protected XStream constructXStream();1392767670;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;@SuppressWarnings("deprecation")_	protected XStream constructXStream() {_		_		_		return new XStream(this.reflectionProvider, this.streamDriver,_				this.beanClassLoader, this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<?> mapperWrapper : mapperWrappers) {_						Assert.isAssignable(MapperWrapper.class, mapperWrapper)__						Constructor<?> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = (MapperWrapper) ctor.newInstance(mapperToWrap)__						}_						catch (Exception ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;suppress,warnings,deprecation,protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,this,stream,driver,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,mapper,wrapper,mapper,wrappers,assert,is,assignable,mapper,wrapper,class,mapper,wrapper,constructor,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,mapper,wrapper,ctor,new,instance,mapper,to,wrap,catch,exception,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> @SuppressWarnings("deprecation") 	protected XStream constructXStream();1394814861;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;@SuppressWarnings("deprecation")_	protected XStream constructXStream() {_		_		_		return new XStream(this.reflectionProvider, this.streamDriver,_				this.beanClassLoader, this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<?> mapperWrapper : mapperWrappers) {_						Assert.isAssignable(MapperWrapper.class, mapperWrapper)__						Constructor<?> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = (MapperWrapper) ctor.newInstance(mapperToWrap)__						}_						catch (Exception ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;suppress,warnings,deprecation,protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,this,stream,driver,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,mapper,wrapper,mapper,wrappers,assert,is,assignable,mapper,wrapper,class,mapper,wrapper,constructor,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,mapper,wrapper,ctor,new,instance,mapper,to,wrap,catch,exception,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> @SuppressWarnings("deprecation") 	protected XStream constructXStream();1395777538;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;@SuppressWarnings("deprecation")_	protected XStream constructXStream() {_		_		_		return new XStream(this.reflectionProvider, this.streamDriver,_				this.beanClassLoader, this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<?> mapperWrapper : mapperWrappers) {_						Assert.isAssignable(MapperWrapper.class, mapperWrapper)__						Constructor<?> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = (MapperWrapper) ctor.newInstance(mapperToWrap)__						}_						catch (Exception ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;suppress,warnings,deprecation,protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,this,stream,driver,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,mapper,wrapper,mapper,wrappers,assert,is,assignable,mapper,wrapper,class,mapper,wrapper,constructor,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,mapper,wrapper,ctor,new,instance,mapper,to,wrap,catch,exception,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> @SuppressWarnings("deprecation") 	protected XStream constructXStream();1397058165;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;@SuppressWarnings("deprecation")_	protected XStream constructXStream() {_		_		_		return new XStream(this.reflectionProvider, getDefaultDriver(),_				this.beanClassLoader, this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<?> mapperWrapper : mapperWrappers) {_						Assert.isAssignable(MapperWrapper.class, mapperWrapper)__						Constructor<?> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = (MapperWrapper) ctor.newInstance(mapperToWrap)__						}_						catch (Exception ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;suppress,warnings,deprecation,protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,get,default,driver,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,mapper,wrapper,mapper,wrappers,assert,is,assignable,mapper,wrapper,class,mapper,wrapper,constructor,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,mapper,wrapper,ctor,new,instance,mapper,to,wrap,catch,exception,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> @SuppressWarnings("deprecation") 	protected XStream constructXStream();1397682512;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;@SuppressWarnings("deprecation")_	protected XStream constructXStream() {_		_		_		return new XStream(this.reflectionProvider, getDefaultDriver(),_				this.beanClassLoader, this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<?> mapperWrapper : mapperWrappers) {_						Assert.isAssignable(MapperWrapper.class, mapperWrapper)__						Constructor<?> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = (MapperWrapper) ctor.newInstance(mapperToWrap)__						}_						catch (Exception ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;suppress,warnings,deprecation,protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,get,default,driver,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,mapper,wrapper,mapper,wrappers,assert,is,assignable,mapper,wrapper,class,mapper,wrapper,constructor,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,mapper,wrapper,ctor,new,instance,mapper,to,wrap,catch,exception,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> @SuppressWarnings("deprecation") 	protected XStream constructXStream();1398638859;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;@SuppressWarnings("deprecation")_	protected XStream constructXStream() {_		_		_		return new XStream(this.reflectionProvider, getDefaultDriver(),_				this.beanClassLoader, this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<?> mapperWrapper : mapperWrappers) {_						Assert.isAssignable(MapperWrapper.class, mapperWrapper)__						Constructor<?> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = (MapperWrapper) ctor.newInstance(mapperToWrap)__						}_						catch (Exception ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;suppress,warnings,deprecation,protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,get,default,driver,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,mapper,wrapper,mapper,wrappers,assert,is,assignable,mapper,wrapper,class,mapper,wrapper,constructor,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,mapper,wrapper,ctor,new,instance,mapper,to,wrap,catch,exception,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> @SuppressWarnings("deprecation") 	protected XStream constructXStream();1447323728;Construct an XStream instance, either using one of the_standard constructors or creating a custom subclass._@return the {@code XStream} instance;@SuppressWarnings("deprecation")_	protected XStream constructXStream() {_		_		_		return new XStream(this.reflectionProvider, getDefaultDriver(),_				this.beanClassLoader, this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<?> mapperWrapper : mapperWrappers) {_						Assert.isAssignable(MapperWrapper.class, mapperWrapper)__						Constructor<?> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = (MapperWrapper) ctor.newInstance(mapperToWrap)__						}_						catch (Exception ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}__	};construct,an,xstream,instance,either,using,one,of,the,standard,constructors,or,creating,a,custom,subclass,return,the,code,xstream,instance;suppress,warnings,deprecation,protected,xstream,construct,xstream,return,new,xstream,this,reflection,provider,get,default,driver,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,mapper,wrapper,mapper,wrappers,assert,is,assignable,mapper,wrapper,class,mapper,wrapper,constructor,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,mapper,wrapper,ctor,new,instance,mapper,to,wrap,catch,exception,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap
XStreamMarshaller -> public void setUseAttributeForTypes(Class[] types);1328020251;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class[] types) {_		for (Class type : types) {_			this.getXStream().useAttributeFor(type)__		}_	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,types,for,class,type,types,this,get,xstream,use,attribute,for,type
XStreamMarshaller -> public void setUseAttributeForTypes(Class[] types);1340616891;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class[] types) {_		for (Class type : types) {_			this.getXStream().useAttributeFor(type)__		}_	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,types,for,class,type,types,this,get,xstream,use,attribute,for,type
XStreamMarshaller -> public void setUseAttributeForTypes(Class[] types);1340627225;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class[] types) {_		for (Class type : types) {_			this.getXStream().useAttributeFor(type)__		}_	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,types,for,class,type,types,this,get,xstream,use,attribute,for,type
XStreamMarshaller -> public void setUseAttributeForTypes(Class[] types);1341435537;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class[] types) {_		for (Class type : types) {_			this.getXStream().useAttributeFor(type)__		}_	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,types,for,class,type,types,this,get,xstream,use,attribute,for,type
XStreamMarshaller -> public void setUseAttributeForTypes(Class[] types);1344858496;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class[] types) {_		for (Class type : types) {_			this.getXStream().useAttributeFor(type)__		}_	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,types,for,class,type,types,this,get,xstream,use,attribute,for,type
XStreamMarshaller -> public void setUseAttributeForTypes(Class[] types);1356735495;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class[] types) {_		for (Class type : types) {_			this.getXStream().useAttributeFor(type)__		}_	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,types,for,class,type,types,this,get,xstream,use,attribute,for,type
XStreamMarshaller -> public void setUseAttributeForTypes(Class[] types);1357119239;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class[] types) {_		for (Class type : types) {_			this.getXStream().useAttributeFor(type)__		}_	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,types,for,class,type,types,this,get,xstream,use,attribute,for,type
XStreamMarshaller -> public void setUseAttributeForTypes(Class[] types);1362408075;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class[] types) {_		for (Class type : types) {_			this.xstream.useAttributeFor(type)__		}_	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,types,for,class,type,types,this,xstream,use,attribute,for,type
XStreamMarshaller -> public void setUseAttributeForTypes(Class[] types);1368482696;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class[] types) {_		for (Class type : types) {_			this.xstream.useAttributeFor(type)__		}_	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,types,for,class,type,types,this,xstream,use,attribute,for,type
XStreamMarshaller -> public void setUseAttributeForTypes(Class[] types);1374675853;Set types to use XML attributes for._@see XStream#useAttributeFor(Class);public void setUseAttributeForTypes(Class[] types) {_		for (Class type : types) {_			this.xstream.useAttributeFor(type)__		}_	};set,types,to,use,xml,attributes,for,see,xstream,use,attribute,for,class;public,void,set,use,attribute,for,types,class,types,for,class,type,types,this,xstream,use,attribute,for,type
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1328020251;Set the autodetection mode of XStream._<p><strong>Note</strong> that auto-detection implies that the XStream is configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.getXStream().autodetectAnnotations(autodetectAnnotations)__	};set,the,autodetection,mode,of,xstream,p,strong,note,strong,that,auto,detection,implies,that,the,xstream,is,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,get,xstream,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1340616891;Set the autodetection mode of XStream._<p><strong>Note</strong> that auto-detection implies that the XStream is configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.getXStream().autodetectAnnotations(autodetectAnnotations)__	};set,the,autodetection,mode,of,xstream,p,strong,note,strong,that,auto,detection,implies,that,the,xstream,is,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,get,xstream,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1340627225;Set the autodetection mode of XStream._<p><strong>Note</strong> that auto-detection implies that the XStream is configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.getXStream().autodetectAnnotations(autodetectAnnotations)__	};set,the,autodetection,mode,of,xstream,p,strong,note,strong,that,auto,detection,implies,that,the,xstream,is,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,get,xstream,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1341435537;Set the autodetection mode of XStream._<p><strong>Note</strong> that auto-detection implies that the XStream is configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.getXStream().autodetectAnnotations(autodetectAnnotations)__	};set,the,autodetection,mode,of,xstream,p,strong,note,strong,that,auto,detection,implies,that,the,xstream,is,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,get,xstream,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1344858496;Set the autodetection mode of XStream._<p><strong>Note</strong> that auto-detection implies that the XStream is configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.getXStream().autodetectAnnotations(autodetectAnnotations)__	};set,the,autodetection,mode,of,xstream,p,strong,note,strong,that,auto,detection,implies,that,the,xstream,is,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,get,xstream,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1356735495;Set the autodetection mode of XStream._<p><strong>Note</strong> that auto-detection implies that the XStream is configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.getXStream().autodetectAnnotations(autodetectAnnotations)__	};set,the,autodetection,mode,of,xstream,p,strong,note,strong,that,auto,detection,implies,that,the,xstream,is,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,get,xstream,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1357119239;Set the autodetection mode of XStream._<p><strong>Note</strong> that auto-detection implies that the XStream is configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.getXStream().autodetectAnnotations(autodetectAnnotations)__	};set,the,autodetection,mode,of,xstream,p,strong,note,strong,that,auto,detection,implies,that,the,xstream,is,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,get,xstream,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1362408075;Set the autodetection mode of XStream._<p><strong>Note</strong> that auto-detection implies that the XStream is configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.xstream.autodetectAnnotations(autodetectAnnotations)__	};set,the,autodetection,mode,of,xstream,p,strong,note,strong,that,auto,detection,implies,that,the,xstream,is,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,xstream,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1368482696;Set the autodetection mode of XStream._<p><strong>Note</strong> that auto-detection implies that the XStream is configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.xstream.autodetectAnnotations(autodetectAnnotations)__	};set,the,autodetection,mode,of,xstream,p,strong,note,strong,that,auto,detection,implies,that,the,xstream,is,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,xstream,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1374675853;Set the autodetection mode of XStream._<p><strong>Note</strong> that auto-detection implies that the XStream is configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.xstream.autodetectAnnotations(autodetectAnnotations)__	};set,the,autodetection,mode,of,xstream,p,strong,note,strong,that,auto,detection,implies,that,the,xstream,is,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,xstream,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1375718683;Activate the autodetection mode of XStream._<p><b>Note</b> that auto-detection implies that the XStream is configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,the,autodetection,mode,of,xstream,p,b,note,b,that,auto,detection,implies,that,the,xstream,is,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1375733584;Activate the autodetection mode of XStream._<p><b>Note</b> that auto-detection implies that the XStream is configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,the,autodetection,mode,of,xstream,p,b,note,b,that,auto,detection,implies,that,the,xstream,is,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1375739444;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1376041312;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1376303194;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1385412762;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1385423968;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1386625636;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1389187678;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1390654998;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1390659987;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1392767670;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1394814861;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1395777538;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1397058165;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1397682512;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1398638859;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1447323728;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1450368890;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1467730834;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1485810955;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1496242568;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1496259743;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1496837955;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1497362807;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1498780456;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1530174524;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAutodetectAnnotations(boolean autodetectAnnotations);1530174524;Activate XStream's autodetection mode._<p><b>Note</b>: Autodetection implies that the XStream instance is being configured while_it is processing the XML streams, and thus introduces a potential concurrency problem._@see XStream#autodetectAnnotations(boolean);public void setAutodetectAnnotations(boolean autodetectAnnotations) {_		this.autodetectAnnotations = autodetectAnnotations__	};activate,xstream,s,autodetection,mode,p,b,note,b,autodetection,implies,that,the,xstream,instance,is,being,configured,while,it,is,processing,the,xml,streams,and,thus,introduces,a,potential,concurrency,problem,see,xstream,autodetect,annotations,boolean;public,void,set,autodetect,annotations,boolean,autodetect,annotations,this,autodetect,annotations,autodetect,annotations
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1375718683;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1375733584;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1375739444;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1376041312;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1376303194;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1385412762;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1385423968;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1386625636;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1389187678;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1390654998;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1390659987;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1392767670;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1394814861;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1395777538;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1397058165;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1397682512;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1398638859;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1447323728;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1450368890;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1467730834;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1485810955;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1496242568;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1496259743;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1496837955;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1497362807;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1498780456;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1530174524;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1530174524;Set annotated classes for which aliases will be read from class-level annotation metadata._@see XStream#processAnnotations(Class[]);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};set,annotated,classes,for,which,aliases,will,be,read,from,class,level,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1375733584;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1375739444;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1376041312;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1376303194;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1385412762;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1385423968;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1386625636;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1389187678;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1390654998;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1390659987;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1392767670;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1394814861;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1395777538;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1397058165;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1397682512;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1398638859;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1447323728;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1450368890;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1467730834;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1485810955;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1496242568;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1496259743;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1496837955;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1497362807;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1498780456;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1530174524;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy);1530174524;Set a custom XStream {@link MarshallingStrategy} to use._@since 4.0;public void setMarshallingStrategy(MarshallingStrategy marshallingStrategy) {_		this.marshallingStrategy = marshallingStrategy__	};set,a,custom,xstream,link,marshalling,strategy,to,use,since,4,0;public,void,set,marshalling,strategy,marshalling,strategy,marshalling,strategy,this,marshalling,strategy,marshalling,strategy
XStreamMarshaller -> public void setMapper(Mapper mapper);1375718683;Set a custom XStream Mapper to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1375733584;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1375739444;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1376041312;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1376303194;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1385412762;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1385423968;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1386625636;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1389187678;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1390654998;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1390659987;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1392767670;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1394814861;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1395777538;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1397058165;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1397682512;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1398638859;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1447323728;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1450368890;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1467730834;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1485810955;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1496242568;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1496259743;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1496837955;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1497362807;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1498780456;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1530174524;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> public void setMapper(Mapper mapper);1530174524;Set a custom XStream {@link Mapper} to use._@since 4.0;public void setMapper(Mapper mapper) {_		this.mapper = mapper__	};set,a,custom,xstream,link,mapper,to,use,since,4,0;public,void,set,mapper,mapper,mapper,this,mapper,mapper
XStreamMarshaller -> private void marshal(Object graph, HierarchicalStreamWriter streamWriter);1328020251;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void marshal(Object graph, HierarchicalStreamWriter streamWriter) {_		try {_			getXStream().marshal(graph, streamWriter)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,marshal,object,graph,hierarchical,stream,writer,stream,writer,try,get,xstream,marshal,graph,stream,writer,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void marshal(Object graph, HierarchicalStreamWriter streamWriter);1340616891;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void marshal(Object graph, HierarchicalStreamWriter streamWriter) {_		try {_			getXStream().marshal(graph, streamWriter)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,marshal,object,graph,hierarchical,stream,writer,stream,writer,try,get,xstream,marshal,graph,stream,writer,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void marshal(Object graph, HierarchicalStreamWriter streamWriter);1340627225;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void marshal(Object graph, HierarchicalStreamWriter streamWriter) {_		try {_			getXStream().marshal(graph, streamWriter)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,marshal,object,graph,hierarchical,stream,writer,stream,writer,try,get,xstream,marshal,graph,stream,writer,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void marshal(Object graph, HierarchicalStreamWriter streamWriter);1341435537;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void marshal(Object graph, HierarchicalStreamWriter streamWriter) {_		try {_			getXStream().marshal(graph, streamWriter)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,marshal,object,graph,hierarchical,stream,writer,stream,writer,try,get,xstream,marshal,graph,stream,writer,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void marshal(Object graph, HierarchicalStreamWriter streamWriter);1344858496;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void marshal(Object graph, HierarchicalStreamWriter streamWriter) {_		try {_			getXStream().marshal(graph, streamWriter)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,marshal,object,graph,hierarchical,stream,writer,stream,writer,try,get,xstream,marshal,graph,stream,writer,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void marshal(Object graph, HierarchicalStreamWriter streamWriter);1356735495;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void marshal(Object graph, HierarchicalStreamWriter streamWriter) {_		try {_			getXStream().marshal(graph, streamWriter)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,marshal,object,graph,hierarchical,stream,writer,stream,writer,try,get,xstream,marshal,graph,stream,writer,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void marshal(Object graph, HierarchicalStreamWriter streamWriter);1357119239;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void marshal(Object graph, HierarchicalStreamWriter streamWriter) {_		try {_			getXStream().marshal(graph, streamWriter)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,marshal,object,graph,hierarchical,stream,writer,stream,writer,try,get,xstream,marshal,graph,stream,writer,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void marshal(Object graph, HierarchicalStreamWriter streamWriter);1362408075;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void marshal(Object graph, HierarchicalStreamWriter streamWriter) {_		try {_			this.xstream.marshal(graph, streamWriter)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,marshal,object,graph,hierarchical,stream,writer,stream,writer,try,this,xstream,marshal,graph,stream,writer,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void marshal(Object graph, HierarchicalStreamWriter streamWriter);1368482696;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void marshal(Object graph, HierarchicalStreamWriter streamWriter) {_		try {_			this.xstream.marshal(graph, streamWriter)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,marshal,object,graph,hierarchical,stream,writer,stream,writer,try,this,xstream,marshal,graph,stream,writer,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void marshal(Object graph, HierarchicalStreamWriter streamWriter);1374675853;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void marshal(Object graph, HierarchicalStreamWriter streamWriter) {_		try {_			this.xstream.marshal(graph, streamWriter)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,marshal,object,graph,hierarchical,stream,writer,stream,writer,try,this,xstream,marshal,graph,stream,writer,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void marshal(Object graph, HierarchicalStreamWriter streamWriter);1375718683;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void marshal(Object graph, HierarchicalStreamWriter streamWriter) {_		try {_			getXStream().marshal(graph, streamWriter)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,marshal,object,graph,hierarchical,stream,writer,stream,writer,try,get,xstream,marshal,graph,stream,writer,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void marshal(Object graph, HierarchicalStreamWriter streamWriter);1375733584;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void marshal(Object graph, HierarchicalStreamWriter streamWriter) {_		try {_			getXStream().marshal(graph, streamWriter)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,marshal,object,graph,hierarchical,stream,writer,stream,writer,try,get,xstream,marshal,graph,stream,writer,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void marshal(Object graph, HierarchicalStreamWriter streamWriter);1375739444;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void marshal(Object graph, HierarchicalStreamWriter streamWriter) {_		try {_			getXStream().marshal(graph, streamWriter)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,marshal,object,graph,hierarchical,stream,writer,stream,writer,try,get,xstream,marshal,graph,stream,writer,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, @Nullable DataHolder dataHolder);1496259743;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, @Nullable DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,nullable,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, @Nullable DataHolder dataHolder);1496837955;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, @Nullable DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,nullable,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, @Nullable DataHolder dataHolder);1497362807;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, @Nullable DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,nullable,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, @Nullable DataHolder dataHolder);1498780456;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, @Nullable DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,nullable,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, @Nullable DataHolder dataHolder);1530174524;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, @Nullable DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,nullable,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, @Nullable DataHolder dataHolder);1530174524;Marshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private void doMarshal(Object graph, HierarchicalStreamWriter streamWriter, @Nullable DataHolder dataHolder) {_		try {_			getXStream().marshal(graph, streamWriter, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, true)__		}_		finally {_			try {_				streamWriter.flush()__			}_			catch (Exception ex) {_				logger.debug("Could not flush HierarchicalStreamWriter", ex)__			}_		}_	};marshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,void,do,marshal,object,graph,hierarchical,stream,writer,stream,writer,nullable,data,holder,data,holder,try,get,xstream,marshal,graph,stream,writer,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,true,finally,try,stream,writer,flush,catch,exception,ex,logger,debug,could,not,flush,hierarchical,stream,writer,ex
XStreamMarshaller -> public void setNameCoder(NameCoder nameCoder);1397682512;Set a custom XStream {@link NameCoder} to use._The default is an {@link XmlFriendlyNameCoder}._@since 4.0.4;public void setNameCoder(NameCoder nameCoder) {_		this.nameCoder = nameCoder__	};set,a,custom,xstream,link,name,coder,to,use,the,default,is,an,link,xml,friendly,name,coder,since,4,0,4;public,void,set,name,coder,name,coder,name,coder,this,name,coder,name,coder
XStreamMarshaller -> public void setNameCoder(NameCoder nameCoder);1398638859;Set a custom XStream {@link NameCoder} to use._The default is an {@link XmlFriendlyNameCoder}._@since 4.0.4;public void setNameCoder(NameCoder nameCoder) {_		this.nameCoder = nameCoder__	};set,a,custom,xstream,link,name,coder,to,use,the,default,is,an,link,xml,friendly,name,coder,since,4,0,4;public,void,set,name,coder,name,coder,name,coder,this,name,coder,name,coder
XStreamMarshaller -> public void setNameCoder(NameCoder nameCoder);1447323728;Set a custom XStream {@link NameCoder} to use._The default is an {@link XmlFriendlyNameCoder}._@since 4.0.4;public void setNameCoder(NameCoder nameCoder) {_		this.nameCoder = nameCoder__	};set,a,custom,xstream,link,name,coder,to,use,the,default,is,an,link,xml,friendly,name,coder,since,4,0,4;public,void,set,name,coder,name,coder,name,coder,this,name,coder,name,coder
XStreamMarshaller -> public void setNameCoder(NameCoder nameCoder);1450368890;Set a custom XStream {@link NameCoder} to use._The default is an {@link XmlFriendlyNameCoder}._@since 4.0.4;public void setNameCoder(NameCoder nameCoder) {_		this.nameCoder = nameCoder__	};set,a,custom,xstream,link,name,coder,to,use,the,default,is,an,link,xml,friendly,name,coder,since,4,0,4;public,void,set,name,coder,name,coder,name,coder,this,name,coder,name,coder
XStreamMarshaller -> public void setNameCoder(NameCoder nameCoder);1467730834;Set a custom XStream {@link NameCoder} to use._The default is an {@link XmlFriendlyNameCoder}._@since 4.0.4;public void setNameCoder(NameCoder nameCoder) {_		this.nameCoder = nameCoder__	};set,a,custom,xstream,link,name,coder,to,use,the,default,is,an,link,xml,friendly,name,coder,since,4,0,4;public,void,set,name,coder,name,coder,name,coder,this,name,coder,name,coder
XStreamMarshaller -> public void setNameCoder(NameCoder nameCoder);1485810955;Set a custom XStream {@link NameCoder} to use._The default is an {@link XmlFriendlyNameCoder}._@since 4.0.4;public void setNameCoder(NameCoder nameCoder) {_		this.nameCoder = nameCoder__	};set,a,custom,xstream,link,name,coder,to,use,the,default,is,an,link,xml,friendly,name,coder,since,4,0,4;public,void,set,name,coder,name,coder,name,coder,this,name,coder,name,coder
XStreamMarshaller -> public void setNameCoder(NameCoder nameCoder);1496242568;Set a custom XStream {@link NameCoder} to use._The default is an {@link XmlFriendlyNameCoder}._@since 4.0.4;public void setNameCoder(NameCoder nameCoder) {_		this.nameCoder = nameCoder__	};set,a,custom,xstream,link,name,coder,to,use,the,default,is,an,link,xml,friendly,name,coder,since,4,0,4;public,void,set,name,coder,name,coder,name,coder,this,name,coder,name,coder
XStreamMarshaller -> public void setNameCoder(NameCoder nameCoder);1496259743;Set a custom XStream {@link NameCoder} to use._The default is an {@link XmlFriendlyNameCoder}._@since 4.0.4;public void setNameCoder(NameCoder nameCoder) {_		this.nameCoder = nameCoder__	};set,a,custom,xstream,link,name,coder,to,use,the,default,is,an,link,xml,friendly,name,coder,since,4,0,4;public,void,set,name,coder,name,coder,name,coder,this,name,coder,name,coder
XStreamMarshaller -> public void setNameCoder(NameCoder nameCoder);1496837955;Set a custom XStream {@link NameCoder} to use._The default is an {@link XmlFriendlyNameCoder}._@since 4.0.4;public void setNameCoder(NameCoder nameCoder) {_		this.nameCoder = nameCoder__	};set,a,custom,xstream,link,name,coder,to,use,the,default,is,an,link,xml,friendly,name,coder,since,4,0,4;public,void,set,name,coder,name,coder,name,coder,this,name,coder,name,coder
XStreamMarshaller -> public void setNameCoder(NameCoder nameCoder);1497362807;Set a custom XStream {@link NameCoder} to use._The default is an {@link XmlFriendlyNameCoder}._@since 4.0.4;public void setNameCoder(NameCoder nameCoder) {_		this.nameCoder = nameCoder__	};set,a,custom,xstream,link,name,coder,to,use,the,default,is,an,link,xml,friendly,name,coder,since,4,0,4;public,void,set,name,coder,name,coder,name,coder,this,name,coder,name,coder
XStreamMarshaller -> public void setNameCoder(NameCoder nameCoder);1498780456;Set a custom XStream {@link NameCoder} to use._The default is an {@link XmlFriendlyNameCoder}._@since 4.0.4;public void setNameCoder(NameCoder nameCoder) {_		this.nameCoder = nameCoder__	};set,a,custom,xstream,link,name,coder,to,use,the,default,is,an,link,xml,friendly,name,coder,since,4,0,4;public,void,set,name,coder,name,coder,name,coder,this,name,coder,name,coder
XStreamMarshaller -> public void setNameCoder(NameCoder nameCoder);1530174524;Set a custom XStream {@link NameCoder} to use._The default is an {@link XmlFriendlyNameCoder}._@since 4.0.4;public void setNameCoder(NameCoder nameCoder) {_		this.nameCoder = nameCoder__	};set,a,custom,xstream,link,name,coder,to,use,the,default,is,an,link,xml,friendly,name,coder,since,4,0,4;public,void,set,name,coder,name,coder,name,coder,this,name,coder,name,coder
XStreamMarshaller -> public void setNameCoder(NameCoder nameCoder);1530174524;Set a custom XStream {@link NameCoder} to use._The default is an {@link XmlFriendlyNameCoder}._@since 4.0.4;public void setNameCoder(NameCoder nameCoder) {_		this.nameCoder = nameCoder__	};set,a,custom,xstream,link,name,coder,to,use,the,default,is,an,link,xml,friendly,name,coder,since,4,0,4;public,void,set,name,coder,name,coder,name,coder,this,name,coder,name,coder
XStreamMarshaller -> public XStream getXStream();1328020251;Returns the XStream instance used by this marshaller.;public XStream getXStream() {_		return this.xstream__	};returns,the,xstream,instance,used,by,this,marshaller;public,xstream,get,xstream,return,this,xstream
XStreamMarshaller -> public XStream getXStream();1340616891;Returns the XStream instance used by this marshaller.;public XStream getXStream() {_		return this.xstream__	};returns,the,xstream,instance,used,by,this,marshaller;public,xstream,get,xstream,return,this,xstream
XStreamMarshaller -> public XStream getXStream();1340627225;Returns the XStream instance used by this marshaller.;public XStream getXStream() {_		return this.xstream__	};returns,the,xstream,instance,used,by,this,marshaller;public,xstream,get,xstream,return,this,xstream
XStreamMarshaller -> public XStream getXStream();1341435537;Returns the XStream instance used by this marshaller.;public XStream getXStream() {_		return this.xstream__	};returns,the,xstream,instance,used,by,this,marshaller;public,xstream,get,xstream,return,this,xstream
XStreamMarshaller -> public XStream getXStream();1344858496;Returns the XStream instance used by this marshaller.;public XStream getXStream() {_		return this.xstream__	};returns,the,xstream,instance,used,by,this,marshaller;public,xstream,get,xstream,return,this,xstream
XStreamMarshaller -> public XStream getXStream();1356735495;Returns the XStream instance used by this marshaller.;public XStream getXStream() {_		return this.xstream__	};returns,the,xstream,instance,used,by,this,marshaller;public,xstream,get,xstream,return,this,xstream
XStreamMarshaller -> public XStream getXStream();1357119239;Returns the XStream instance used by this marshaller.;public XStream getXStream() {_		return this.xstream__	};returns,the,xstream,instance,used,by,this,marshaller;public,xstream,get,xstream,return,this,xstream
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1328020251;Specify implicit collection fields, as a Map consisting of <code>Class</code> instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		for (Map.Entry<Class<?>, String> entry : implicitCollections.entrySet()) {_			String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__			for (String collectionField : collectionFields) {_				this.getXStream().addImplicitCollection(entry.getKey(), collectionField)__			}_		}_	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,code,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,for,map,entry,class,string,entry,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,this,get,xstream,add,implicit,collection,entry,get,key,collection,field
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1340616891;Specify implicit collection fields, as a Map consisting of <code>Class</code> instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		for (Map.Entry<Class<?>, String> entry : implicitCollections.entrySet()) {_			String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__			for (String collectionField : collectionFields) {_				this.getXStream().addImplicitCollection(entry.getKey(), collectionField)__			}_		}_	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,code,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,for,map,entry,class,string,entry,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,this,get,xstream,add,implicit,collection,entry,get,key,collection,field
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1340627225;Specify implicit collection fields, as a Map consisting of <code>Class</code> instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		for (Map.Entry<Class<?>, String> entry : implicitCollections.entrySet()) {_			String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__			for (String collectionField : collectionFields) {_				this.getXStream().addImplicitCollection(entry.getKey(), collectionField)__			}_		}_	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,code,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,for,map,entry,class,string,entry,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,this,get,xstream,add,implicit,collection,entry,get,key,collection,field
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1341435537;Specify implicit collection fields, as a Map consisting of <code>Class</code> instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		for (Map.Entry<Class<?>, String> entry : implicitCollections.entrySet()) {_			String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__			for (String collectionField : collectionFields) {_				this.getXStream().addImplicitCollection(entry.getKey(), collectionField)__			}_		}_	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,code,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,for,map,entry,class,string,entry,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,this,get,xstream,add,implicit,collection,entry,get,key,collection,field
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1344858496;Specify implicit collection fields, as a Map consisting of <code>Class</code> instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		for (Map.Entry<Class<?>, String> entry : implicitCollections.entrySet()) {_			String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__			for (String collectionField : collectionFields) {_				this.getXStream().addImplicitCollection(entry.getKey(), collectionField)__			}_		}_	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,code,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,for,map,entry,class,string,entry,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,this,get,xstream,add,implicit,collection,entry,get,key,collection,field
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1356735495;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		for (Map.Entry<Class<?>, String> entry : implicitCollections.entrySet()) {_			String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__			for (String collectionField : collectionFields) {_				this.getXStream().addImplicitCollection(entry.getKey(), collectionField)__			}_		}_	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,for,map,entry,class,string,entry,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,this,get,xstream,add,implicit,collection,entry,get,key,collection,field
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1357119239;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		for (Map.Entry<Class<?>, String> entry : implicitCollections.entrySet()) {_			String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__			for (String collectionField : collectionFields) {_				this.getXStream().addImplicitCollection(entry.getKey(), collectionField)__			}_		}_	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,for,map,entry,class,string,entry,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,this,get,xstream,add,implicit,collection,entry,get,key,collection,field
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1362408075;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		for (Map.Entry<Class<?>, String> entry : implicitCollections.entrySet()) {_			String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__			for (String collectionField : collectionFields) {_				this.xstream.addImplicitCollection(entry.getKey(), collectionField)__			}_		}_	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,for,map,entry,class,string,entry,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,this,xstream,add,implicit,collection,entry,get,key,collection,field
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1368482696;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		for (Map.Entry<Class<?>, String> entry : implicitCollections.entrySet()) {_			String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__			for (String collectionField : collectionFields) {_				this.xstream.addImplicitCollection(entry.getKey(), collectionField)__			}_		}_	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,for,map,entry,class,string,entry,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,this,xstream,add,implicit,collection,entry,get,key,collection,field
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1374675853;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		for (Map.Entry<Class<?>, String> entry : implicitCollections.entrySet()) {_			String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__			for (String collectionField : collectionFields) {_				this.xstream.addImplicitCollection(entry.getKey(), collectionField)__			}_		}_	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,for,map,entry,class,string,entry,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,this,xstream,add,implicit,collection,entry,get,key,collection,field
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1375718683;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1375733584;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1375739444;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1376041312;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1376303194;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1385412762;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1385423968;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1386625636;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1389187678;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1390654998;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1390659987;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1392767670;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1394814861;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1395777538;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1397058165;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1397682512;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1398638859;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1447323728;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1450368890;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1467730834;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1485810955;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1496242568;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1496259743;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1496837955;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1497362807;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1498780456;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1530174524;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setImplicitCollections(Map<Class<?>, String> implicitCollections);1530174524;Specify implicit collection fields, as a Map consisting of {@code Class} instances_mapped to comma separated collection field names._@see XStream#addImplicitCollection(Class, String);public void setImplicitCollections(Map<Class<?>, String> implicitCollections) {_		this.implicitCollections = implicitCollections__	};specify,implicit,collection,fields,as,a,map,consisting,of,code,class,instances,mapped,to,comma,separated,collection,field,names,see,xstream,add,implicit,collection,class,string;public,void,set,implicit,collections,map,class,string,implicit,collections,this,implicit,collections,implicit,collections
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1328020251;Set the XStream hierarchical stream driver to be used with stream readers and writers.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,the,xstream,hierarchical,stream,driver,to,be,used,with,stream,readers,and,writers;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1340616891;Set the XStream hierarchical stream driver to be used with stream readers and writers.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,the,xstream,hierarchical,stream,driver,to,be,used,with,stream,readers,and,writers;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1340627225;Set the XStream hierarchical stream driver to be used with stream readers and writers.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,the,xstream,hierarchical,stream,driver,to,be,used,with,stream,readers,and,writers;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1341435537;Set the XStream hierarchical stream driver to be used with stream readers and writers.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,the,xstream,hierarchical,stream,driver,to,be,used,with,stream,readers,and,writers;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1344858496;Set the XStream hierarchical stream driver to be used with stream readers and writers.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,the,xstream,hierarchical,stream,driver,to,be,used,with,stream,readers,and,writers;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1356735495;Set the XStream hierarchical stream driver to be used with stream readers and writers.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,the,xstream,hierarchical,stream,driver,to,be,used,with,stream,readers,and,writers;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1357119239;Set the XStream hierarchical stream driver to be used with stream readers and writers.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,the,xstream,hierarchical,stream,driver,to,be,used,with,stream,readers,and,writers;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1362408075;Set the XStream hierarchical stream driver to be used with stream readers and writers.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,the,xstream,hierarchical,stream,driver,to,be,used,with,stream,readers,and,writers;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1368482696;Set the XStream hierarchical stream driver to be used with stream readers and writers.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,the,xstream,hierarchical,stream,driver,to,be,used,with,stream,readers,and,writers;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1374675853;Set the XStream hierarchical stream driver to be used with stream readers and writers.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,the,xstream,hierarchical,stream,driver,to,be,used,with,stream,readers,and,writers;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1375718683;Set the XStream hierarchical stream driver to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,the,xstream,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1375733584;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1375739444;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1376041312;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1376303194;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1385412762;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1385423968;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1386625636;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1389187678;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1390654998;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1390659987;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1392767670;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1394814861;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1395777538;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1397058165;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__		this.defaultDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver,this,default,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1397682512;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__		this.defaultDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver,this,default,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1398638859;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__		this.defaultDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver,this,default,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1447323728;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__		this.defaultDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver,this,default,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1450368890;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__		this.defaultDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver,this,default,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1467730834;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__		this.defaultDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver,this,default,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1485810955;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__		this.defaultDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver,this,default,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1496242568;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__		this.defaultDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver,this,default,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1496259743;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__		this.defaultDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver,this,default,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1496837955;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__		this.defaultDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver,this,default,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1497362807;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__		this.defaultDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver,this,default,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1498780456;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__		this.defaultDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver,this,default,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1530174524;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__		this.defaultDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver,this,default,driver,stream,driver
XStreamMarshaller -> public void setStreamDriver(HierarchicalStreamDriver streamDriver);1530174524;Set a XStream {@link HierarchicalStreamDriver} to be used for readers and writers._<p>As of Spring 4.0, this stream driver will also be passed to the {@link XStream}_constructor and therefore used by streaming-related native API methods themselves.;public void setStreamDriver(HierarchicalStreamDriver streamDriver) {_		this.streamDriver = streamDriver__		this.defaultDriver = streamDriver__	};set,a,xstream,link,hierarchical,stream,driver,to,be,used,for,readers,and,writers,p,as,of,spring,4,0,this,stream,driver,will,also,be,passed,to,the,link,xstream,constructor,and,therefore,used,by,streaming,related,native,api,methods,themselves;public,void,set,stream,driver,hierarchical,stream,driver,stream,driver,this,stream,driver,stream,driver,this,default,driver,stream,driver
XStreamMarshaller -> @SuppressWarnings("unchecked") 	public void setMapperWrappers(Class<? extends MapperWrapper>... mapperWrappers);1485810955;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;@SuppressWarnings("unchecked")_	public void setMapperWrappers(Class<? extends MapperWrapper>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;suppress,warnings,unchecked,public,void,set,mapper,wrappers,class,extends,mapper,wrapper,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> @SuppressWarnings("unchecked") 	public void setMapperWrappers(Class<? extends MapperWrapper>... mapperWrappers);1496242568;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;@SuppressWarnings("unchecked")_	public void setMapperWrappers(Class<? extends MapperWrapper>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;suppress,warnings,unchecked,public,void,set,mapper,wrappers,class,extends,mapper,wrapper,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> @SuppressWarnings("unchecked") 	public void setMapperWrappers(Class<? extends MapperWrapper>... mapperWrappers);1496259743;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;@SuppressWarnings("unchecked")_	public void setMapperWrappers(Class<? extends MapperWrapper>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;suppress,warnings,unchecked,public,void,set,mapper,wrappers,class,extends,mapper,wrapper,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> @SuppressWarnings("unchecked") 	public void setMapperWrappers(Class<? extends MapperWrapper>... mapperWrappers);1496837955;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;@SuppressWarnings("unchecked")_	public void setMapperWrappers(Class<? extends MapperWrapper>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;suppress,warnings,unchecked,public,void,set,mapper,wrappers,class,extends,mapper,wrapper,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> @SuppressWarnings("unchecked") 	public void setMapperWrappers(Class<? extends MapperWrapper>... mapperWrappers);1497362807;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;@SuppressWarnings("unchecked")_	public void setMapperWrappers(Class<? extends MapperWrapper>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;suppress,warnings,unchecked,public,void,set,mapper,wrappers,class,extends,mapper,wrapper,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> @SuppressWarnings("unchecked") 	public void setMapperWrappers(Class<? extends MapperWrapper>... mapperWrappers);1498780456;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;@SuppressWarnings("unchecked")_	public void setMapperWrappers(Class<? extends MapperWrapper>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;suppress,warnings,unchecked,public,void,set,mapper,wrappers,class,extends,mapper,wrapper,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> @SuppressWarnings("unchecked") 	public void setMapperWrappers(Class<? extends MapperWrapper>... mapperWrappers);1530174524;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;@SuppressWarnings("unchecked")_	public void setMapperWrappers(Class<? extends MapperWrapper>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;suppress,warnings,unchecked,public,void,set,mapper,wrappers,class,extends,mapper,wrapper,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> @SuppressWarnings("unchecked") 	public void setMapperWrappers(Class<? extends MapperWrapper>... mapperWrappers);1530174524;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;@SuppressWarnings("unchecked")_	public void setMapperWrappers(Class<? extends MapperWrapper>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;suppress,warnings,unchecked,public,void,set,mapper,wrappers,class,extends,mapper,wrapper,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> private Object unmarshal(HierarchicalStreamReader streamReader);1344858496;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object unmarshal(HierarchicalStreamReader streamReader) {_        try {_            return getXStream().unmarshal(streamReader)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,unmarshal,hierarchical,stream,reader,stream,reader,try,return,get,xstream,unmarshal,stream,reader,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object unmarshal(HierarchicalStreamReader streamReader);1356735495;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object unmarshal(HierarchicalStreamReader streamReader) {_        try {_            return getXStream().unmarshal(streamReader)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,unmarshal,hierarchical,stream,reader,stream,reader,try,return,get,xstream,unmarshal,stream,reader,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object unmarshal(HierarchicalStreamReader streamReader);1357119239;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object unmarshal(HierarchicalStreamReader streamReader) {_        try {_            return getXStream().unmarshal(streamReader)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,unmarshal,hierarchical,stream,reader,stream,reader,try,return,get,xstream,unmarshal,stream,reader,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object unmarshal(HierarchicalStreamReader streamReader);1362408075;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object unmarshal(HierarchicalStreamReader streamReader) {_        try {_            return this.xstream.unmarshal(streamReader)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,unmarshal,hierarchical,stream,reader,stream,reader,try,return,this,xstream,unmarshal,stream,reader,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object unmarshal(HierarchicalStreamReader streamReader);1368482696;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object unmarshal(HierarchicalStreamReader streamReader) {_        try {_            return this.xstream.unmarshal(streamReader)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,unmarshal,hierarchical,stream,reader,stream,reader,try,return,this,xstream,unmarshal,stream,reader,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object unmarshal(HierarchicalStreamReader streamReader);1374675853;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object unmarshal(HierarchicalStreamReader streamReader) {_        try {_            return this.xstream.unmarshal(streamReader)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,unmarshal,hierarchical,stream,reader,stream,reader,try,return,this,xstream,unmarshal,stream,reader,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object unmarshal(HierarchicalStreamReader streamReader);1375718683;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object unmarshal(HierarchicalStreamReader streamReader) {_        try {_            return getXStream().unmarshal(streamReader)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,unmarshal,hierarchical,stream,reader,stream,reader,try,return,get,xstream,unmarshal,stream,reader,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object unmarshal(HierarchicalStreamReader streamReader);1375733584;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object unmarshal(HierarchicalStreamReader streamReader) {_        try {_            return getXStream().unmarshal(streamReader)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,unmarshal,hierarchical,stream,reader,stream,reader,try,return,get,xstream,unmarshal,stream,reader,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object unmarshal(HierarchicalStreamReader streamReader);1375739444;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object unmarshal(HierarchicalStreamReader streamReader) {_        try {_            return getXStream().unmarshal(streamReader)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,unmarshal,hierarchical,stream,reader,stream,reader,try,return,get,xstream,unmarshal,stream,reader,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> public void setAnnotatedClass(Class<?> annotatedClass);1328020251;Set the classes for which mappings will be read from class-level JDK 1.5+ annotation metadata._@see XStream#processAnnotations(Class);public void setAnnotatedClass(Class<?> annotatedClass) {_		Assert.notNull(annotatedClass, "'annotatedClass' must not be null")__		this.getXStream().processAnnotations(annotatedClass)__	};set,the,classes,for,which,mappings,will,be,read,from,class,level,jdk,1,5,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,class,class,annotated,class,assert,not,null,annotated,class,annotated,class,must,not,be,null,this,get,xstream,process,annotations,annotated,class
XStreamMarshaller -> public void setAnnotatedClass(Class<?> annotatedClass);1340616891;Set the classes for which mappings will be read from class-level JDK 1.5+ annotation metadata._@see XStream#processAnnotations(Class);public void setAnnotatedClass(Class<?> annotatedClass) {_		Assert.notNull(annotatedClass, "'annotatedClass' must not be null")__		this.getXStream().processAnnotations(annotatedClass)__	};set,the,classes,for,which,mappings,will,be,read,from,class,level,jdk,1,5,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,class,class,annotated,class,assert,not,null,annotated,class,annotated,class,must,not,be,null,this,get,xstream,process,annotations,annotated,class
XStreamMarshaller -> public void setAnnotatedClass(Class<?> annotatedClass);1340627225;Set the classes for which mappings will be read from class-level JDK 1.5+ annotation metadata._@see XStream#processAnnotations(Class);public void setAnnotatedClass(Class<?> annotatedClass) {_		Assert.notNull(annotatedClass, "'annotatedClass' must not be null")__		this.getXStream().processAnnotations(annotatedClass)__	};set,the,classes,for,which,mappings,will,be,read,from,class,level,jdk,1,5,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,class,class,annotated,class,assert,not,null,annotated,class,annotated,class,must,not,be,null,this,get,xstream,process,annotations,annotated,class
XStreamMarshaller -> public void setAnnotatedClass(Class<?> annotatedClass);1341435537;Set the classes for which mappings will be read from class-level JDK 1.5+ annotation metadata._@see XStream#processAnnotations(Class);public void setAnnotatedClass(Class<?> annotatedClass) {_		Assert.notNull(annotatedClass, "'annotatedClass' must not be null")__		this.getXStream().processAnnotations(annotatedClass)__	};set,the,classes,for,which,mappings,will,be,read,from,class,level,jdk,1,5,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,class,class,annotated,class,assert,not,null,annotated,class,annotated,class,must,not,be,null,this,get,xstream,process,annotations,annotated,class
XStreamMarshaller -> public void setAnnotatedClass(Class<?> annotatedClass);1344858496;Set the classes for which mappings will be read from class-level JDK 1.5+ annotation metadata._@see XStream#processAnnotations(Class);public void setAnnotatedClass(Class<?> annotatedClass) {_		Assert.notNull(annotatedClass, "'annotatedClass' must not be null")__		this.getXStream().processAnnotations(annotatedClass)__	};set,the,classes,for,which,mappings,will,be,read,from,class,level,jdk,1,5,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,class,class,annotated,class,assert,not,null,annotated,class,annotated,class,must,not,be,null,this,get,xstream,process,annotations,annotated,class
XStreamMarshaller -> public void setAnnotatedClass(Class<?> annotatedClass);1356735495;Set the classes for which mappings will be read from class-level JDK 1.5+ annotation metadata._@see XStream#processAnnotations(Class);public void setAnnotatedClass(Class<?> annotatedClass) {_		Assert.notNull(annotatedClass, "'annotatedClass' must not be null")__		this.getXStream().processAnnotations(annotatedClass)__	};set,the,classes,for,which,mappings,will,be,read,from,class,level,jdk,1,5,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,class,class,annotated,class,assert,not,null,annotated,class,annotated,class,must,not,be,null,this,get,xstream,process,annotations,annotated,class
XStreamMarshaller -> public void setAnnotatedClass(Class<?> annotatedClass);1357119239;Set the classes for which mappings will be read from class-level JDK 1.5+ annotation metadata._@see XStream#processAnnotations(Class);public void setAnnotatedClass(Class<?> annotatedClass) {_		Assert.notNull(annotatedClass, "'annotatedClass' must not be null")__		this.getXStream().processAnnotations(annotatedClass)__	};set,the,classes,for,which,mappings,will,be,read,from,class,level,jdk,1,5,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,class,class,annotated,class,assert,not,null,annotated,class,annotated,class,must,not,be,null,this,get,xstream,process,annotations,annotated,class
XStreamMarshaller -> public void setAnnotatedClass(Class<?> annotatedClass);1362408075;Set the classes for which mappings will be read from class-level JDK 1.5+ annotation metadata._@see XStream#processAnnotations(Class);public void setAnnotatedClass(Class<?> annotatedClass) {_		Assert.notNull(annotatedClass, "'annotatedClass' must not be null")__		this.xstream.processAnnotations(annotatedClass)__	};set,the,classes,for,which,mappings,will,be,read,from,class,level,jdk,1,5,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,class,class,annotated,class,assert,not,null,annotated,class,annotated,class,must,not,be,null,this,xstream,process,annotations,annotated,class
XStreamMarshaller -> public void setAnnotatedClass(Class<?> annotatedClass);1368482696;Set the classes for which mappings will be read from class-level JDK 1.5+ annotation metadata._@see XStream#processAnnotations(Class);public void setAnnotatedClass(Class<?> annotatedClass) {_		Assert.notNull(annotatedClass, "'annotatedClass' must not be null")__		this.xstream.processAnnotations(annotatedClass)__	};set,the,classes,for,which,mappings,will,be,read,from,class,level,jdk,1,5,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,class,class,annotated,class,assert,not,null,annotated,class,annotated,class,must,not,be,null,this,xstream,process,annotations,annotated,class
XStreamMarshaller -> public void setAnnotatedClass(Class<?> annotatedClass);1374675853;Set the classes for which mappings will be read from class-level JDK 1.5+ annotation metadata._@see XStream#processAnnotations(Class);public void setAnnotatedClass(Class<?> annotatedClass) {_		Assert.notNull(annotatedClass, "'annotatedClass' must not be null")__		this.xstream.processAnnotations(annotatedClass)__	};set,the,classes,for,which,mappings,will,be,read,from,class,level,jdk,1,5,annotation,metadata,see,xstream,process,annotations,class;public,void,set,annotated,class,class,annotated,class,assert,not,null,annotated,class,annotated,class,must,not,be,null,this,xstream,process,annotations,annotated,class
XStreamMarshaller -> protected XStream buildXStream();1375718683;Build the native XStream delegate to be used by this marshaller.;protected XStream buildXStream() {_		XStream xstream = new XStream(null, this.streamDriver, this.beanClassLoader, this.mapper)__		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributesFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributesFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"Invalid argument 'attributes'. 'useAttributesFor' property takes map of <String, Class>," +_										" when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						List list = (List) entry.getValue()___						for (Object o : list) {_							if (o instanceof String) {_								xstream.useAttributeFor(key, (String) o)__							}_						}_					}_					else {_						throw new IllegalArgumentException("Invalid argument 'attributes'. " +_								"'useAttributesFor' property takes either <Class, String> or <Class, List<String>> map," +_								" when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException("Invalid argument 'attributes. " +_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(this.autodetectAnnotations)__		}__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller;protected,xstream,build,xstream,xstream,xstream,new,xstream,null,this,stream,driver,this,bean,class,loader,this,mapper,if,this,mode,null,xstream,set,mode,this,mode,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attributes,for,null,for,map,entry,entry,this,use,attributes,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,map,of,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,list,list,entry,get,value,for,object,o,list,if,o,instanceof,string,xstream,use,attribute,for,key,string,o,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,class,string,or,class,list,string,map,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,this,autodetect,annotations,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1375733584;Build the native XStream delegate to be used by this marshaller.;protected XStream buildXStream() {_		XStream xstream = new XStream(this.reflectionProvider, this.streamDriver,_				this.beanClassLoader, this.mapper, this.converterLookup, this.converterRegistry)___		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"Invalid argument 'attributes'. 'useAttributesFor' property takes map of <String, Class>," +_										" when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						List list = (List) entry.getValue()___						for (Object o : list) {_							if (o instanceof String) {_								xstream.useAttributeFor(key, (String) o)__							}_						}_					}_					else {_						throw new IllegalArgumentException("Invalid argument 'attributes'. " +_								"'useAttributesFor' property takes either <Class, String> or <Class, List<String>> map," +_								" when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException("Invalid argument 'attributes. " +_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(this.autodetectAnnotations)__		}__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller;protected,xstream,build,xstream,xstream,xstream,new,xstream,this,reflection,provider,this,stream,driver,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,map,of,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,list,list,entry,get,value,for,object,o,list,if,o,instanceof,string,xstream,use,attribute,for,key,string,o,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,class,string,or,class,list,string,map,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,invalid,argument,attributes,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,this,autodetect,annotations,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1375739444;Build the native XStream delegate to be used by this marshaller.;protected XStream buildXStream() {_		XStream xstream = new XStream(this.reflectionProvider, this.streamDriver,_				this.beanClassLoader, this.mapper, this.converterLookup, this.converterRegistry) {_			@Override_			protected MapperWrapper wrapMapper(MapperWrapper next) {_				MapperWrapper mapperToWrap = next__				if (mapperWrappers != null) {_					for (Class<?> mapperWrapper : mapperWrappers) {_						Assert.isAssignable(MapperWrapper.class, mapperWrapper)__						Constructor<?> ctor__						try {_							ctor = mapperWrapper.getConstructor(Mapper.class)__						}_						catch (NoSuchMethodException ex) {_							try {_								ctor = mapperWrapper.getConstructor(MapperWrapper.class)__							}_							catch (NoSuchMethodException ex2) {_								throw new IllegalStateException("No appropriate MapperWrapper constructor found: " + mapperWrapper)__							}_						}_						try {_							mapperToWrap = (MapperWrapper) ctor.newInstance(mapperToWrap)__						}_						catch (Exception ex) {_							throw new IllegalStateException("Failed to construct MapperWrapper: " + mapperWrapper)__						}_					}_				}_				return mapperToWrap__			}_		}___		if (this.converters != null) {_			for (int i = 0_ i < this.converters.length_ i++) {_				if (this.converters[i] instanceof Converter) {_					xstream.registerConverter((Converter) this.converters[i], i)__				}_				else if (this.converters[i] instanceof SingleValueConverter) {_					xstream.registerConverter((SingleValueConverter) this.converters[i], i)__				}_				else {_					throw new IllegalArgumentException("Invalid ConverterMatcher [" + this.converters[i] + "]")__				}_			}_		}__		if (this.marshallingStrategy != null) {_			xstream.setMarshallingStrategy(this.marshallingStrategy)__		}_		if (this.mode != null) {_			xstream.setMode(this.mode)__		}__		try {_			if (this.aliases != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliases)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.alias(entry.getKey(), entry.getValue())__				}_			}_			if (this.aliasesByType != null) {_				Map<String, Class<?>> classMap = toClassMap(this.aliasesByType)__				for (Map.Entry<String, Class<?>> entry : classMap.entrySet()) {_					xstream.aliasType(entry.getKey(), entry.getValue())__				}_			}_			if (this.fieldAliases != null) {_				for (Map.Entry<String, String> entry : this.fieldAliases.entrySet()) {_					String alias = entry.getValue()__					String field = entry.getKey()__					int idx = field.lastIndexOf('.')__					if (idx != -1) {_						String className = field.substring(0, idx)__						Class<?> clazz = ClassUtils.forName(className, this.beanClassLoader)__						String fieldName = field.substring(idx + 1)__						xstream.aliasField(alias, clazz, fieldName)__					}_					else {_						throw new IllegalArgumentException("Field name [" + field + "] does not contain '.'")__					}_				}_			}_		}_		catch (ClassNotFoundException ex) {_			throw new IllegalStateException("Failed to load specified alias class", ex)__		}__		if (this.useAttributeForTypes != null) {_			for (Class<?> type : this.useAttributeForTypes) {_				xstream.useAttributeFor(type)__			}_		}_		if (this.useAttributeFor != null) {_			for (Map.Entry<?, ?> entry : this.useAttributeFor.entrySet()) {_				if (entry.getKey() instanceof String) {_					if (entry.getValue() instanceof Class) {_						xstream.useAttributeFor((String) entry.getKey(), (Class) entry.getValue())__					}_					else {_						throw new IllegalArgumentException(_								"'useAttributesFor' takes Map<String, Class> when using a map key of type String")__					}_				}_				else if (entry.getKey() instanceof Class) {_					Class<?> key = (Class<?>) entry.getKey()__					if (entry.getValue() instanceof String) {_						xstream.useAttributeFor(key, (String) entry.getValue())__					}_					else if (entry.getValue() instanceof List) {_						List listValue = (List) entry.getValue()__						for (Object element : listValue) {_							if (element instanceof String) {_								xstream.useAttributeFor(key, (String) element)__							}_						}_					}_					else {_						throw new IllegalArgumentException("'useAttributesFor' property takes either Map<Class, String> " +_								"or Map<Class, List<String>> when using a map key of type Class")__					}_				}_				else {_					throw new IllegalArgumentException(_							"'useAttributesFor' property takes either a map key of type String or Class")__				}_			}_		}__		if (this.implicitCollections != null) {_			for (Map.Entry<Class<?>, String> entry : this.implicitCollections.entrySet()) {_				String[] collectionFields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String collectionField : collectionFields) {_					xstream.addImplicitCollection(entry.getKey(), collectionField)__				}_			}_		}_		if (this.omittedFields != null) {_			for (Map.Entry<Class<?>, String> entry : this.omittedFields.entrySet()) {_				String[] fields = StringUtils.commaDelimitedListToStringArray(entry.getValue())__				for (String field : fields) {_					xstream.omitField(entry.getKey(), field)__				}_			}_		}__		if (this.annotatedClasses != null) {_			xstream.processAnnotations(this.annotatedClasses)__		}_		if (this.autodetectAnnotations) {_			xstream.autodetectAnnotations(this.autodetectAnnotations)__		}__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller;protected,xstream,build,xstream,xstream,xstream,new,xstream,this,reflection,provider,this,stream,driver,this,bean,class,loader,this,mapper,this,converter,lookup,this,converter,registry,override,protected,mapper,wrapper,wrap,mapper,mapper,wrapper,next,mapper,wrapper,mapper,to,wrap,next,if,mapper,wrappers,null,for,class,mapper,wrapper,mapper,wrappers,assert,is,assignable,mapper,wrapper,class,mapper,wrapper,constructor,ctor,try,ctor,mapper,wrapper,get,constructor,mapper,class,catch,no,such,method,exception,ex,try,ctor,mapper,wrapper,get,constructor,mapper,wrapper,class,catch,no,such,method,exception,ex2,throw,new,illegal,state,exception,no,appropriate,mapper,wrapper,constructor,found,mapper,wrapper,try,mapper,to,wrap,mapper,wrapper,ctor,new,instance,mapper,to,wrap,catch,exception,ex,throw,new,illegal,state,exception,failed,to,construct,mapper,wrapper,mapper,wrapper,return,mapper,to,wrap,if,this,converters,null,for,int,i,0,i,this,converters,length,i,if,this,converters,i,instanceof,converter,xstream,register,converter,converter,this,converters,i,i,else,if,this,converters,i,instanceof,single,value,converter,xstream,register,converter,single,value,converter,this,converters,i,i,else,throw,new,illegal,argument,exception,invalid,converter,matcher,this,converters,i,if,this,marshalling,strategy,null,xstream,set,marshalling,strategy,this,marshalling,strategy,if,this,mode,null,xstream,set,mode,this,mode,try,if,this,aliases,null,map,string,class,class,map,to,class,map,this,aliases,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,entry,get,key,entry,get,value,if,this,aliases,by,type,null,map,string,class,class,map,to,class,map,this,aliases,by,type,for,map,entry,string,class,entry,class,map,entry,set,xstream,alias,type,entry,get,key,entry,get,value,if,this,field,aliases,null,for,map,entry,string,string,entry,this,field,aliases,entry,set,string,alias,entry,get,value,string,field,entry,get,key,int,idx,field,last,index,of,if,idx,1,string,class,name,field,substring,0,idx,class,clazz,class,utils,for,name,class,name,this,bean,class,loader,string,field,name,field,substring,idx,1,xstream,alias,field,alias,clazz,field,name,else,throw,new,illegal,argument,exception,field,name,field,does,not,contain,catch,class,not,found,exception,ex,throw,new,illegal,state,exception,failed,to,load,specified,alias,class,ex,if,this,use,attribute,for,types,null,for,class,type,this,use,attribute,for,types,xstream,use,attribute,for,type,if,this,use,attribute,for,null,for,map,entry,entry,this,use,attribute,for,entry,set,if,entry,get,key,instanceof,string,if,entry,get,value,instanceof,class,xstream,use,attribute,for,string,entry,get,key,class,entry,get,value,else,throw,new,illegal,argument,exception,use,attributes,for,takes,map,string,class,when,using,a,map,key,of,type,string,else,if,entry,get,key,instanceof,class,class,key,class,entry,get,key,if,entry,get,value,instanceof,string,xstream,use,attribute,for,key,string,entry,get,value,else,if,entry,get,value,instanceof,list,list,list,value,list,entry,get,value,for,object,element,list,value,if,element,instanceof,string,xstream,use,attribute,for,key,string,element,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,map,class,string,or,map,class,list,string,when,using,a,map,key,of,type,class,else,throw,new,illegal,argument,exception,use,attributes,for,property,takes,either,a,map,key,of,type,string,or,class,if,this,implicit,collections,null,for,map,entry,class,string,entry,this,implicit,collections,entry,set,string,collection,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,collection,field,collection,fields,xstream,add,implicit,collection,entry,get,key,collection,field,if,this,omitted,fields,null,for,map,entry,class,string,entry,this,omitted,fields,entry,set,string,fields,string,utils,comma,delimited,list,to,string,array,entry,get,value,for,string,field,fields,xstream,omit,field,entry,get,key,field,if,this,annotated,classes,null,xstream,process,annotations,this,annotated,classes,if,this,autodetect,annotations,xstream,autodetect,annotations,this,autodetect,annotations,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1376041312;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1376303194;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1385412762;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1385423968;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1386625636;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1389187678;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1390654998;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1390659987;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1392767670;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1394814861;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1395777538;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1397058165;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1397682512;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1398638859;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1447323728;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1450368890;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1467730834;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1485810955;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1496242568;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1496259743;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1496837955;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1497362807;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1498780456;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1530174524;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> protected XStream buildXStream();1530174524;Build the native XStream delegate to be used by this marshaller,_delegating to {@link #constructXStream()}, {@link #configureXStream}_and {@link #customizeXStream}.;protected XStream buildXStream() {_		XStream xstream = constructXStream()__		configureXStream(xstream)__		customizeXStream(xstream)__		return xstream__	};build,the,native,xstream,delegate,to,be,used,by,this,marshaller,delegating,to,link,construct,xstream,link,configure,xstream,and,link,customize,xstream;protected,xstream,build,xstream,xstream,xstream,construct,xstream,configure,xstream,xstream,customize,xstream,xstream,return,xstream
XStreamMarshaller -> public void setMapperWrappers(Class<?>... mapperWrappers);1375739444;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;public void setMapperWrappers(Class<?>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;public,void,set,mapper,wrappers,class,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> public void setMapperWrappers(Class<?>... mapperWrappers);1376041312;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;public void setMapperWrappers(Class<?>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;public,void,set,mapper,wrappers,class,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> public void setMapperWrappers(Class<?>... mapperWrappers);1376303194;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;public void setMapperWrappers(Class<?>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;public,void,set,mapper,wrappers,class,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> public void setMapperWrappers(Class<?>... mapperWrappers);1385412762;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;public void setMapperWrappers(Class<?>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;public,void,set,mapper,wrappers,class,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> public void setMapperWrappers(Class<?>... mapperWrappers);1385423968;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;public void setMapperWrappers(Class<?>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;public,void,set,mapper,wrappers,class,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> public void setMapperWrappers(Class<?>... mapperWrappers);1386625636;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;public void setMapperWrappers(Class<?>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;public,void,set,mapper,wrappers,class,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> public void setMapperWrappers(Class<?>... mapperWrappers);1389187678;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;public void setMapperWrappers(Class<?>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;public,void,set,mapper,wrappers,class,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> public void setMapperWrappers(Class<?>... mapperWrappers);1390654998;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;public void setMapperWrappers(Class<?>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;public,void,set,mapper,wrappers,class,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> public void setMapperWrappers(Class<?>... mapperWrappers);1390659987;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;public void setMapperWrappers(Class<?>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;public,void,set,mapper,wrappers,class,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> public void setMapperWrappers(Class<?>... mapperWrappers);1392767670;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;public void setMapperWrappers(Class<?>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;public,void,set,mapper,wrappers,class,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> public void setMapperWrappers(Class<?>... mapperWrappers);1394814861;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;public void setMapperWrappers(Class<?>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;public,void,set,mapper,wrappers,class,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> public void setMapperWrappers(Class<?>... mapperWrappers);1395777538;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;public void setMapperWrappers(Class<?>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;public,void,set,mapper,wrappers,class,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> public void setMapperWrappers(Class<?>... mapperWrappers);1397058165;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;public void setMapperWrappers(Class<?>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;public,void,set,mapper,wrappers,class,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> public void setMapperWrappers(Class<?>... mapperWrappers);1397682512;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;public void setMapperWrappers(Class<?>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;public,void,set,mapper,wrappers,class,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> public void setMapperWrappers(Class<?>... mapperWrappers);1398638859;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;public void setMapperWrappers(Class<?>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;public,void,set,mapper,wrappers,class,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> public void setMapperWrappers(Class<?>... mapperWrappers);1447323728;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;public void setMapperWrappers(Class<?>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;public,void,set,mapper,wrappers,class,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> public void setMapperWrappers(Class<?>... mapperWrappers);1450368890;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;public void setMapperWrappers(Class<?>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;public,void,set,mapper,wrappers,class,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> public void setMapperWrappers(Class<?>... mapperWrappers);1467730834;Set one or more custom XStream {@link MapperWrapper} classes._Each of those classes needs to have a constructor with a single argument_of type {@link Mapper} or {@link MapperWrapper}._@since 4.0;public void setMapperWrappers(Class<?>... mapperWrappers) {_		this.mapperWrappers = mapperWrappers__	};set,one,or,more,custom,xstream,link,mapper,wrapper,classes,each,of,those,classes,needs,to,have,a,constructor,with,a,single,argument,of,type,link,mapper,or,link,mapper,wrapper,since,4,0;public,void,set,mapper,wrappers,class,mapper,wrappers,this,mapper,wrappers,mapper,wrappers
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, @Nullable DataHolder dataHolder);1496259743;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, @Nullable DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,nullable,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, @Nullable DataHolder dataHolder);1496837955;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, @Nullable DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,nullable,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, @Nullable DataHolder dataHolder);1497362807;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, @Nullable DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,nullable,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, @Nullable DataHolder dataHolder);1498780456;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, @Nullable DataHolder dataHolder) {_        try {_            return getXStream().unmarshal(streamReader, null, dataHolder)__        }_        catch (Exception ex) {_            throw convertXStreamException(ex, false)__        }_    };unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,nullable,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, @Nullable DataHolder dataHolder);1530174524;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, @Nullable DataHolder dataHolder) {_		try {_			return getXStream().unmarshal(streamReader, null, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, false)__		}_	};unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,nullable,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
XStreamMarshaller -> private Object doUnmarshal(HierarchicalStreamReader streamReader, @Nullable DataHolder dataHolder);1530174524;Unmarshals the given graph to the given XStream HierarchicalStreamWriter._Converts exceptions using {@link #convertXStreamException}.;private Object doUnmarshal(HierarchicalStreamReader streamReader, @Nullable DataHolder dataHolder) {_		try {_			return getXStream().unmarshal(streamReader, null, dataHolder)__		}_		catch (Exception ex) {_			throw convertXStreamException(ex, false)__		}_	};unmarshals,the,given,graph,to,the,given,xstream,hierarchical,stream,writer,converts,exceptions,using,link,convert,xstream,exception;private,object,do,unmarshal,hierarchical,stream,reader,stream,reader,nullable,data,holder,data,holder,try,return,get,xstream,unmarshal,stream,reader,null,data,holder,catch,exception,ex,throw,convert,xstream,exception,ex,false
