commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public Configuration getConfiguration() {     return configuration. }
false;public;1;4;;@Override public void addRunOptions(Options baseOptions) { // nothing to add here }
false;public;1;5;;@Override public void addGeneralOptions(Options baseOptions) {     baseOptions.addOption(addressOption).     baseOptions.addOption(zookeeperNamespaceOption). }
true;protected;1;16;/**  * Override configuration settings by specified command line options.  *  * @param commandLine containing the overriding values  * @return Effective configuration with the overridden configuration settings  */ ;/**  * Override configuration settings by specified command line options.  *  * @param commandLine containing the overriding values  * @return Effective configuration with the overridden configuration settings  */ protected Configuration applyCommandLineOptionsToConfiguration(CommandLine commandLine) throws FlinkException {     final Configuration resultingConfiguration = new Configuration(configuration).     if (commandLine.hasOption(addressOption.getOpt())) {         String addressWithPort = commandLine.getOptionValue(addressOption.getOpt()).         InetSocketAddress jobManagerAddress = ClientUtils.parseHostPortAddress(addressWithPort).         setJobManagerAddressInConfig(resultingConfiguration, jobManagerAddress).     }     if (commandLine.hasOption(zookeeperNamespaceOption.getOpt())) {         String zkNamespace = commandLine.getOptionValue(zookeeperNamespaceOption.getOpt()).         resultingConfiguration.setString(HighAvailabilityOptions.HA_CLUSTER_ID, zkNamespace).     }     return resultingConfiguration. }
