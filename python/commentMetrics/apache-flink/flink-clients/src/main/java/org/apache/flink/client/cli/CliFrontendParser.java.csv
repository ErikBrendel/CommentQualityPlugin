# id;timestamp;commentText;codeText;commentWords;codeWords
CliFrontendParser -> public static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB);1522066224;Merges the given {@link Options} into a new Options object.__@param optionsA options to merge, can be null if none_@param optionsB options to merge, can be null if none_@return;public static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB) {_		final Options resultOptions = new Options()__		if (optionsA != null) {_			for (Option option : optionsA.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		if (optionsB != null) {_			for (Option option : optionsB.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		return resultOptions__	};merges,the,given,link,options,into,a,new,options,object,param,options,a,options,to,merge,can,be,null,if,none,param,options,b,options,to,merge,can,be,null,if,none,return;public,static,options,merge,options,nullable,options,options,a,nullable,options,options,b,final,options,result,options,new,options,if,options,a,null,for,option,option,options,a,get,options,result,options,add,option,option,if,options,b,null,for,option,option,options,b,get,options,result,options,add,option,option,return,result,options
CliFrontendParser -> public static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB);1523641106;Merges the given {@link Options} into a new Options object.__@param optionsA options to merge, can be null if none_@param optionsB options to merge, can be null if none_@return;public static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB) {_		final Options resultOptions = new Options()__		if (optionsA != null) {_			for (Option option : optionsA.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		if (optionsB != null) {_			for (Option option : optionsB.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		return resultOptions__	};merges,the,given,link,options,into,a,new,options,object,param,options,a,options,to,merge,can,be,null,if,none,param,options,b,options,to,merge,can,be,null,if,none,return;public,static,options,merge,options,nullable,options,options,a,nullable,options,options,b,final,options,result,options,new,options,if,options,a,null,for,option,option,options,a,get,options,result,options,add,option,option,if,options,b,null,for,option,option,options,b,get,options,result,options,add,option,option,return,result,options
CliFrontendParser -> public static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB);1528796078;Merges the given {@link Options} into a new Options object.__@param optionsA options to merge, can be null if none_@param optionsB options to merge, can be null if none_@return;public static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB) {_		final Options resultOptions = new Options()__		if (optionsA != null) {_			for (Option option : optionsA.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		if (optionsB != null) {_			for (Option option : optionsB.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		return resultOptions__	};merges,the,given,link,options,into,a,new,options,object,param,options,a,options,to,merge,can,be,null,if,none,param,options,b,options,to,merge,can,be,null,if,none,return;public,static,options,merge,options,nullable,options,options,a,nullable,options,options,b,final,options,result,options,new,options,if,options,a,null,for,option,option,options,a,get,options,result,options,add,option,option,if,options,b,null,for,option,option,options,b,get,options,result,options,add,option,option,return,result,options
CliFrontendParser -> public static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB);1534945233;Merges the given {@link Options} into a new Options object.__@param optionsA options to merge, can be null if none_@param optionsB options to merge, can be null if none_@return;public static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB) {_		final Options resultOptions = new Options()__		if (optionsA != null) {_			for (Option option : optionsA.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		if (optionsB != null) {_			for (Option option : optionsB.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		return resultOptions__	};merges,the,given,link,options,into,a,new,options,object,param,options,a,options,to,merge,can,be,null,if,none,param,options,b,options,to,merge,can,be,null,if,none,return;public,static,options,merge,options,nullable,options,options,a,nullable,options,options,b,final,options,result,options,new,options,if,options,a,null,for,option,option,options,a,get,options,result,options,add,option,option,if,options,b,null,for,option,option,options,b,get,options,result,options,add,option,option,return,result,options
CliFrontendParser -> public static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB);1537963459;Merges the given {@link Options} into a new Options object.__@param optionsA options to merge, can be null if none_@param optionsB options to merge, can be null if none_@return;public static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB) {_		final Options resultOptions = new Options()__		if (optionsA != null) {_			for (Option option : optionsA.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		if (optionsB != null) {_			for (Option option : optionsB.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		return resultOptions__	};merges,the,given,link,options,into,a,new,options,object,param,options,a,options,to,merge,can,be,null,if,none,param,options,b,options,to,merge,can,be,null,if,none,return;public,static,options,merge,options,nullable,options,options,a,nullable,options,options,b,final,options,result,options,new,options,if,options,a,null,for,option,option,options,a,get,options,result,options,add,option,option,if,options,b,null,for,option,option,options,b,get,options,result,options,add,option,option,return,result,options
CliFrontendParser -> private static void printCustomCliOptions( 			Collection<CustomCommandLine<?>> customCommandLines, 			HelpFormatter formatter, 			boolean runOptions);1515699597;Prints custom cli options._@param formatter The formatter to use for printing_@param runOptions True if the run options should be printed, False to print only general options;private static void printCustomCliOptions(_			Collection<CustomCommandLine<?>> customCommandLines,_			HelpFormatter formatter,_			boolean runOptions) {_		_		for (CustomCommandLine cli: customCommandLines) {_			if (cli.getId() != null) {_				formatter.setSyntaxPrefix("  Options for " + cli.getId() + " mode:")__				Options customOpts = new Options()__				cli.addGeneralOptions(customOpts)__				if (runOptions) {_					cli.addRunOptions(customOpts)__				}_				formatter.printHelp(" ", customOpts)__				System.out.println()__			}_		}_	};prints,custom,cli,options,param,formatter,the,formatter,to,use,for,printing,param,run,options,true,if,the,run,options,should,be,printed,false,to,print,only,general,options;private,static,void,print,custom,cli,options,collection,custom,command,line,custom,command,lines,help,formatter,formatter,boolean,run,options,for,custom,command,line,cli,custom,command,lines,if,cli,get,id,null,formatter,set,syntax,prefix,options,for,cli,get,id,mode,options,custom,opts,new,options,cli,add,general,options,custom,opts,if,run,options,cli,add,run,options,custom,opts,formatter,print,help,custom,opts,system,out,println
CliFrontendParser -> private static void printCustomCliOptions( 			Collection<CustomCommandLine<?>> customCommandLines, 			HelpFormatter formatter, 			boolean runOptions);1515699606;Prints custom cli options._@param formatter The formatter to use for printing_@param runOptions True if the run options should be printed, False to print only general options;private static void printCustomCliOptions(_			Collection<CustomCommandLine<?>> customCommandLines,_			HelpFormatter formatter,_			boolean runOptions) {_		_		for (CustomCommandLine cli: customCommandLines) {_			if (cli.getId() != null) {_				formatter.setSyntaxPrefix("  Options for " + cli.getId() + " mode:")__				Options customOpts = new Options()__				cli.addGeneralOptions(customOpts)__				if (runOptions) {_					cli.addRunOptions(customOpts)__				}_				formatter.printHelp(" ", customOpts)__				System.out.println()__			}_		}_	};prints,custom,cli,options,param,formatter,the,formatter,to,use,for,printing,param,run,options,true,if,the,run,options,should,be,printed,false,to,print,only,general,options;private,static,void,print,custom,cli,options,collection,custom,command,line,custom,command,lines,help,formatter,formatter,boolean,run,options,for,custom,command,line,cli,custom,command,lines,if,cli,get,id,null,formatter,set,syntax,prefix,options,for,cli,get,id,mode,options,custom,opts,new,options,cli,add,general,options,custom,opts,if,run,options,cli,add,run,options,custom,opts,formatter,print,help,custom,opts,system,out,println
CliFrontendParser -> private static void printCustomCliOptions( 			Collection<CustomCommandLine<?>> customCommandLines, 			HelpFormatter formatter, 			boolean runOptions);1515770044;Prints custom cli options._@param formatter The formatter to use for printing_@param runOptions True if the run options should be printed, False to print only general options;private static void printCustomCliOptions(_			Collection<CustomCommandLine<?>> customCommandLines,_			HelpFormatter formatter,_			boolean runOptions) {_		_		for (CustomCommandLine cli: customCommandLines) {_			if (cli.getId() != null) {_				formatter.setSyntaxPrefix("  Options for " + cli.getId() + " mode:")__				Options customOpts = new Options()__				cli.addGeneralOptions(customOpts)__				if (runOptions) {_					cli.addRunOptions(customOpts)__				}_				formatter.printHelp(" ", customOpts)__				System.out.println()__			}_		}_	};prints,custom,cli,options,param,formatter,the,formatter,to,use,for,printing,param,run,options,true,if,the,run,options,should,be,printed,false,to,print,only,general,options;private,static,void,print,custom,cli,options,collection,custom,command,line,custom,command,lines,help,formatter,formatter,boolean,run,options,for,custom,command,line,cli,custom,command,lines,if,cli,get,id,null,formatter,set,syntax,prefix,options,for,cli,get,id,mode,options,custom,opts,new,options,cli,add,general,options,custom,opts,if,run,options,cli,add,run,options,custom,opts,formatter,print,help,custom,opts,system,out,println
CliFrontendParser -> private static void printCustomCliOptions( 			Collection<CustomCommandLine<?>> customCommandLines, 			HelpFormatter formatter, 			boolean runOptions);1515770045;Prints custom cli options._@param formatter The formatter to use for printing_@param runOptions True if the run options should be printed, False to print only general options;private static void printCustomCliOptions(_			Collection<CustomCommandLine<?>> customCommandLines,_			HelpFormatter formatter,_			boolean runOptions) {_		_		for (CustomCommandLine cli: customCommandLines) {_			formatter.setSyntaxPrefix("  Options for " + cli.getId() + " mode:")__			Options customOpts = new Options()__			cli.addGeneralOptions(customOpts)__			if (runOptions) {_				cli.addRunOptions(customOpts)__			}_			formatter.printHelp(" ", customOpts)__			System.out.println()__		}_	};prints,custom,cli,options,param,formatter,the,formatter,to,use,for,printing,param,run,options,true,if,the,run,options,should,be,printed,false,to,print,only,general,options;private,static,void,print,custom,cli,options,collection,custom,command,line,custom,command,lines,help,formatter,formatter,boolean,run,options,for,custom,command,line,cli,custom,command,lines,formatter,set,syntax,prefix,options,for,cli,get,id,mode,options,custom,opts,new,options,cli,add,general,options,custom,opts,if,run,options,cli,add,run,options,custom,opts,formatter,print,help,custom,opts,system,out,println
CliFrontendParser -> private static void printCustomCliOptions( 			Collection<CustomCommandLine<?>> customCommandLines, 			HelpFormatter formatter, 			boolean runOptions);1516295283;Prints custom cli options._@param formatter The formatter to use for printing_@param runOptions True if the run options should be printed, False to print only general options;private static void printCustomCliOptions(_			Collection<CustomCommandLine<?>> customCommandLines,_			HelpFormatter formatter,_			boolean runOptions) {_		_		for (CustomCommandLine cli: customCommandLines) {_			formatter.setSyntaxPrefix("  Options for " + cli.getId() + " mode:")__			Options customOpts = new Options()__			cli.addGeneralOptions(customOpts)__			if (runOptions) {_				cli.addRunOptions(customOpts)__			}_			formatter.printHelp(" ", customOpts)__			System.out.println()__		}_	};prints,custom,cli,options,param,formatter,the,formatter,to,use,for,printing,param,run,options,true,if,the,run,options,should,be,printed,false,to,print,only,general,options;private,static,void,print,custom,cli,options,collection,custom,command,line,custom,command,lines,help,formatter,formatter,boolean,run,options,for,custom,command,line,cli,custom,command,lines,formatter,set,syntax,prefix,options,for,cli,get,id,mode,options,custom,opts,new,options,cli,add,general,options,custom,opts,if,run,options,cli,add,run,options,custom,opts,formatter,print,help,custom,opts,system,out,println
CliFrontendParser -> private static void printCustomCliOptions( 			Collection<CustomCommandLine<?>> customCommandLines, 			HelpFormatter formatter, 			boolean runOptions);1519317159;Prints custom cli options._@param formatter The formatter to use for printing_@param runOptions True if the run options should be printed, False to print only general options;private static void printCustomCliOptions(_			Collection<CustomCommandLine<?>> customCommandLines,_			HelpFormatter formatter,_			boolean runOptions) {_		_		for (CustomCommandLine cli: customCommandLines) {_			formatter.setSyntaxPrefix("  Options for " + cli.getId() + " mode:")__			Options customOpts = new Options()__			cli.addGeneralOptions(customOpts)__			if (runOptions) {_				cli.addRunOptions(customOpts)__			}_			formatter.printHelp(" ", customOpts)__			System.out.println()__		}_	};prints,custom,cli,options,param,formatter,the,formatter,to,use,for,printing,param,run,options,true,if,the,run,options,should,be,printed,false,to,print,only,general,options;private,static,void,print,custom,cli,options,collection,custom,command,line,custom,command,lines,help,formatter,formatter,boolean,run,options,for,custom,command,line,cli,custom,command,lines,formatter,set,syntax,prefix,options,for,cli,get,id,mode,options,custom,opts,new,options,cli,add,general,options,custom,opts,if,run,options,cli,add,run,options,custom,opts,formatter,print,help,custom,opts,system,out,println
CliFrontendParser -> private static void printCustomCliOptions( 			Collection<CustomCommandLine<?>> customCommandLines, 			HelpFormatter formatter, 			boolean runOptions);1522066224;Prints custom cli options._@param formatter The formatter to use for printing_@param runOptions True if the run options should be printed, False to print only general options;private static void printCustomCliOptions(_			Collection<CustomCommandLine<?>> customCommandLines,_			HelpFormatter formatter,_			boolean runOptions) {_		_		for (CustomCommandLine cli: customCommandLines) {_			formatter.setSyntaxPrefix("  Options for " + cli.getId() + " mode:")__			Options customOpts = new Options()__			cli.addGeneralOptions(customOpts)__			if (runOptions) {_				cli.addRunOptions(customOpts)__			}_			formatter.printHelp(" ", customOpts)__			System.out.println()__		}_	};prints,custom,cli,options,param,formatter,the,formatter,to,use,for,printing,param,run,options,true,if,the,run,options,should,be,printed,false,to,print,only,general,options;private,static,void,print,custom,cli,options,collection,custom,command,line,custom,command,lines,help,formatter,formatter,boolean,run,options,for,custom,command,line,cli,custom,command,lines,formatter,set,syntax,prefix,options,for,cli,get,id,mode,options,custom,opts,new,options,cli,add,general,options,custom,opts,if,run,options,cli,add,run,options,custom,opts,formatter,print,help,custom,opts,system,out,println
CliFrontendParser -> private static void printCustomCliOptions( 			Collection<CustomCommandLine<?>> customCommandLines, 			HelpFormatter formatter, 			boolean runOptions);1523641106;Prints custom cli options._@param formatter The formatter to use for printing_@param runOptions True if the run options should be printed, False to print only general options;private static void printCustomCliOptions(_			Collection<CustomCommandLine<?>> customCommandLines,_			HelpFormatter formatter,_			boolean runOptions) {_		_		for (CustomCommandLine cli: customCommandLines) {_			formatter.setSyntaxPrefix("  Options for " + cli.getId() + " mode:")__			Options customOpts = new Options()__			cli.addGeneralOptions(customOpts)__			if (runOptions) {_				cli.addRunOptions(customOpts)__			}_			formatter.printHelp(" ", customOpts)__			System.out.println()__		}_	};prints,custom,cli,options,param,formatter,the,formatter,to,use,for,printing,param,run,options,true,if,the,run,options,should,be,printed,false,to,print,only,general,options;private,static,void,print,custom,cli,options,collection,custom,command,line,custom,command,lines,help,formatter,formatter,boolean,run,options,for,custom,command,line,cli,custom,command,lines,formatter,set,syntax,prefix,options,for,cli,get,id,mode,options,custom,opts,new,options,cli,add,general,options,custom,opts,if,run,options,cli,add,run,options,custom,opts,formatter,print,help,custom,opts,system,out,println
CliFrontendParser -> private static void printCustomCliOptions( 			Collection<CustomCommandLine<?>> customCommandLines, 			HelpFormatter formatter, 			boolean runOptions);1528796078;Prints custom cli options._@param formatter The formatter to use for printing_@param runOptions True if the run options should be printed, False to print only general options;private static void printCustomCliOptions(_			Collection<CustomCommandLine<?>> customCommandLines,_			HelpFormatter formatter,_			boolean runOptions) {_		_		for (CustomCommandLine cli: customCommandLines) {_			formatter.setSyntaxPrefix("  Options for " + cli.getId() + " mode:")__			Options customOpts = new Options()__			cli.addGeneralOptions(customOpts)__			if (runOptions) {_				cli.addRunOptions(customOpts)__			}_			formatter.printHelp(" ", customOpts)__			System.out.println()__		}_	};prints,custom,cli,options,param,formatter,the,formatter,to,use,for,printing,param,run,options,true,if,the,run,options,should,be,printed,false,to,print,only,general,options;private,static,void,print,custom,cli,options,collection,custom,command,line,custom,command,lines,help,formatter,formatter,boolean,run,options,for,custom,command,line,cli,custom,command,lines,formatter,set,syntax,prefix,options,for,cli,get,id,mode,options,custom,opts,new,options,cli,add,general,options,custom,opts,if,run,options,cli,add,run,options,custom,opts,formatter,print,help,custom,opts,system,out,println
CliFrontendParser -> private static void printCustomCliOptions( 			Collection<CustomCommandLine<?>> customCommandLines, 			HelpFormatter formatter, 			boolean runOptions);1534945233;Prints custom cli options._@param formatter The formatter to use for printing_@param runOptions True if the run options should be printed, False to print only general options;private static void printCustomCliOptions(_			Collection<CustomCommandLine<?>> customCommandLines,_			HelpFormatter formatter,_			boolean runOptions) {_		_		for (CustomCommandLine cli: customCommandLines) {_			formatter.setSyntaxPrefix("  Options for " + cli.getId() + " mode:")__			Options customOpts = new Options()__			cli.addGeneralOptions(customOpts)__			if (runOptions) {_				cli.addRunOptions(customOpts)__			}_			formatter.printHelp(" ", customOpts)__			System.out.println()__		}_	};prints,custom,cli,options,param,formatter,the,formatter,to,use,for,printing,param,run,options,true,if,the,run,options,should,be,printed,false,to,print,only,general,options;private,static,void,print,custom,cli,options,collection,custom,command,line,custom,command,lines,help,formatter,formatter,boolean,run,options,for,custom,command,line,cli,custom,command,lines,formatter,set,syntax,prefix,options,for,cli,get,id,mode,options,custom,opts,new,options,cli,add,general,options,custom,opts,if,run,options,cli,add,run,options,custom,opts,formatter,print,help,custom,opts,system,out,println
CliFrontendParser -> private static void printCustomCliOptions( 			Collection<CustomCommandLine<?>> customCommandLines, 			HelpFormatter formatter, 			boolean runOptions);1537963459;Prints custom cli options._@param formatter The formatter to use for printing_@param runOptions True if the run options should be printed, False to print only general options;private static void printCustomCliOptions(_			Collection<CustomCommandLine<?>> customCommandLines,_			HelpFormatter formatter,_			boolean runOptions) {_		_		for (CustomCommandLine cli: customCommandLines) {_			formatter.setSyntaxPrefix("  Options for " + cli.getId() + " mode:")__			Options customOpts = new Options()__			cli.addGeneralOptions(customOpts)__			if (runOptions) {_				cli.addRunOptions(customOpts)__			}_			formatter.printHelp(" ", customOpts)__			System.out.println()__		}_	};prints,custom,cli,options,param,formatter,the,formatter,to,use,for,printing,param,run,options,true,if,the,run,options,should,be,printed,false,to,print,only,general,options;private,static,void,print,custom,cli,options,collection,custom,command,line,custom,command,lines,help,formatter,formatter,boolean,run,options,for,custom,command,line,cli,custom,command,lines,formatter,set,syntax,prefix,options,for,cli,get,id,mode,options,custom,opts,new,options,cli,add,general,options,custom,opts,if,run,options,cli,add,run,options,custom,opts,formatter,print,help,custom,opts,system,out,println
CliFrontendParser -> public static void printHelp();1425489636;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForCancel()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,cancel,system,out,println
CliFrontendParser -> public static void printHelp();1437568776;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForCancel()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,cancel,system,out,println
CliFrontendParser -> public static void printHelp();1438350542;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForCancel()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,cancel,system,out,println
CliFrontendParser -> public static void printHelp();1438529893;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForCancel()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,cancel,system,out,println
CliFrontendParser -> public static void printHelp();1443786519;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForCancel()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,cancel,system,out,println
CliFrontendParser -> public static void printHelp();1444312509;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForCancel()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,cancel,system,out,println
CliFrontendParser -> public static void printHelp();1447428518;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForCancel()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,cancel,system,out,println
CliFrontendParser -> public static void printHelp();1452526263;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForCancel()__		printHelpForSavepoint()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,cancel,print,help,for,savepoint,system,out,println
CliFrontendParser -> public static void printHelp();1452633665;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForCancel()__		printHelpForSavepoint()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,cancel,print,help,for,savepoint,system,out,println
CliFrontendParser -> public static void printHelp();1455549373;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForStop()__		printHelpForCancel()__		printHelpForSavepoint()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,stop,print,help,for,cancel,print,help,for,savepoint,system,out,println
CliFrontendParser -> public static void printHelp();1464630565;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForStop()__		printHelpForCancel()__		printHelpForSavepoint()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,stop,print,help,for,cancel,print,help,for,savepoint,system,out,println
CliFrontendParser -> public static void printHelp();1466152678;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForStop()__		printHelpForCancel()__		printHelpForSavepoint()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,stop,print,help,for,cancel,print,help,for,savepoint,system,out,println
CliFrontendParser -> public static void printHelp();1466152678;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForStop()__		printHelpForCancel()__		printHelpForSavepoint()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,stop,print,help,for,cancel,print,help,for,savepoint,system,out,println
CliFrontendParser -> public static void printHelp();1466152678;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForStop()__		printHelpForCancel()__		printHelpForSavepoint()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,stop,print,help,for,cancel,print,help,for,savepoint,system,out,println
CliFrontendParser -> public static void printHelp();1466787219;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForStop()__		printHelpForCancel()__		printHelpForSavepoint()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,stop,print,help,for,cancel,print,help,for,savepoint,system,out,println
CliFrontendParser -> public static void printHelp();1468854249;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForStop()__		printHelpForCancel()__		printHelpForSavepoint()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,stop,print,help,for,cancel,print,help,for,savepoint,system,out,println
CliFrontendParser -> public static void printHelp();1468944021;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForStop()__		printHelpForCancel()__		printHelpForSavepoint()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,stop,print,help,for,cancel,print,help,for,savepoint,system,out,println
CliFrontendParser -> public static void printHelp();1476432306;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForStop()__		printHelpForCancel()__		printHelpForSavepoint()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,stop,print,help,for,cancel,print,help,for,savepoint,system,out,println
CliFrontendParser -> public static void printHelp();1476432429;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForStop()__		printHelpForCancel()__		printHelpForSavepoint()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,stop,print,help,for,cancel,print,help,for,savepoint,system,out,println
CliFrontendParser -> public static void printHelp();1478068438;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForStop()__		printHelpForCancel()__		printHelpForSavepoint()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,stop,print,help,for,cancel,print,help,for,savepoint,system,out,println
CliFrontendParser -> public static void printHelp();1495778594;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForStop()__		printHelpForCancel()__		printHelpForSavepoint()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,stop,print,help,for,cancel,print,help,for,savepoint,system,out,println
CliFrontendParser -> public static void printHelp();1499314317;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForStop()__		printHelpForCancel()__		printHelpForSavepoint()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,stop,print,help,for,cancel,print,help,for,savepoint,system,out,println
CliFrontendParser -> public static void printHelp();1515699581;Prints the help for the client.;public static void printHelp() {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun()__		printHelpForInfo()__		printHelpForList()__		printHelpForStop()__		printHelpForCancel()__		printHelpForSavepoint()___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,print,help,for,info,print,help,for,list,print,help,for,stop,print,help,for,cancel,print,help,for,savepoint,system,out,println
CliFrontendParser -> public static CustomCommandLine getActiveCustomCommandLine(String identifier);1466152678;Gets the custom command-line for this identifier._@param identifier The unique identifier for this command-line implementation._@return CustomCommandLine or null if none was found;public static CustomCommandLine getActiveCustomCommandLine(String identifier) {_		return CliFrontendParser.getAllCustomCommandLine().get(identifier)__	};gets,the,custom,command,line,for,this,identifier,param,identifier,the,unique,identifier,for,this,command,line,implementation,return,custom,command,line,or,null,if,none,was,found;public,static,custom,command,line,get,active,custom,command,line,string,identifier,return,cli,frontend,parser,get,all,custom,command,line,get,identifier
CliFrontendParser -> public static CustomCommandLine getActiveCustomCommandLine(String identifier);1466152678;Gets the custom command-line for this identifier._@param identifier The unique identifier for this command-line implementation._@return CustomCommandLine or null if none was found;public static CustomCommandLine getActiveCustomCommandLine(String identifier) {_		return CliFrontendParser.getAllCustomCommandLine().get(identifier)__	};gets,the,custom,command,line,for,this,identifier,param,identifier,the,unique,identifier,for,this,command,line,implementation,return,custom,command,line,or,null,if,none,was,found;public,static,custom,command,line,get,active,custom,command,line,string,identifier,return,cli,frontend,parser,get,all,custom,command,line,get,identifier
CliFrontendParser -> private static Options addCustomCliOptions(Options options, boolean runOptions);1466152678;Adds custom cli options_@param options The options to add options to_@param runOptions Whether to include run options_@return Options with additions;private static Options addCustomCliOptions(Options options, boolean runOptions) {_		for (CustomCommandLine cli: CliFrontend.getCustomCommandLineList()) {_			cli.addGeneralOptions(options)__			if (runOptions) {_				cli.addRunOptions(options)__			}_		}_		return options__	};adds,custom,cli,options,param,options,the,options,to,add,options,to,param,run,options,whether,to,include,run,options,return,options,with,additions;private,static,options,add,custom,cli,options,options,options,boolean,run,options,for,custom,command,line,cli,cli,frontend,get,custom,command,line,list,cli,add,general,options,options,if,run,options,cli,add,run,options,options,return,options
CliFrontendParser -> private static Options addCustomCliOptions(Options options, boolean runOptions);1466787219;Adds custom cli options_@param options The options to add options to_@param runOptions Whether to include run options_@return Options with additions;private static Options addCustomCliOptions(Options options, boolean runOptions) {_		for (CustomCommandLine cli: CliFrontend.getCustomCommandLineList()) {_			cli.addGeneralOptions(options)__			if (runOptions) {_				cli.addRunOptions(options)__			}_		}_		return options__	};adds,custom,cli,options,param,options,the,options,to,add,options,to,param,run,options,whether,to,include,run,options,return,options,with,additions;private,static,options,add,custom,cli,options,options,options,boolean,run,options,for,custom,command,line,cli,cli,frontend,get,custom,command,line,list,cli,add,general,options,options,if,run,options,cli,add,run,options,options,return,options
CliFrontendParser -> private static Options addCustomCliOptions(Options options, boolean runOptions);1468854249;Adds custom cli options_@param options The options to add options to_@param runOptions Whether to include run options_@return Options with additions;private static Options addCustomCliOptions(Options options, boolean runOptions) {_		for (CustomCommandLine cli: CliFrontend.getCustomCommandLineList()) {_			cli.addGeneralOptions(options)__			if (runOptions) {_				cli.addRunOptions(options)__			}_		}_		return options__	};adds,custom,cli,options,param,options,the,options,to,add,options,to,param,run,options,whether,to,include,run,options,return,options,with,additions;private,static,options,add,custom,cli,options,options,options,boolean,run,options,for,custom,command,line,cli,cli,frontend,get,custom,command,line,list,cli,add,general,options,options,if,run,options,cli,add,run,options,options,return,options
CliFrontendParser -> private static Options addCustomCliOptions(Options options, boolean runOptions);1468944021;Adds custom cli options_@param options The options to add options to_@param runOptions Whether to include run options_@return Options with additions;private static Options addCustomCliOptions(Options options, boolean runOptions) {_		for (CustomCommandLine cli: CliFrontend.getCustomCommandLineList()) {_			cli.addGeneralOptions(options)__			if (runOptions) {_				cli.addRunOptions(options)__			}_		}_		return options__	};adds,custom,cli,options,param,options,the,options,to,add,options,to,param,run,options,whether,to,include,run,options,return,options,with,additions;private,static,options,add,custom,cli,options,options,options,boolean,run,options,for,custom,command,line,cli,cli,frontend,get,custom,command,line,list,cli,add,general,options,options,if,run,options,cli,add,run,options,options,return,options
CliFrontendParser -> private static Options addCustomCliOptions(Options options, boolean runOptions);1476432306;Adds custom cli options_@param options The options to add options to_@param runOptions Whether to include run options_@return Options with additions;private static Options addCustomCliOptions(Options options, boolean runOptions) {_		for (CustomCommandLine cli: CliFrontend.getCustomCommandLineList()) {_			cli.addGeneralOptions(options)__			if (runOptions) {_				cli.addRunOptions(options)__			}_		}_		return options__	};adds,custom,cli,options,param,options,the,options,to,add,options,to,param,run,options,whether,to,include,run,options,return,options,with,additions;private,static,options,add,custom,cli,options,options,options,boolean,run,options,for,custom,command,line,cli,cli,frontend,get,custom,command,line,list,cli,add,general,options,options,if,run,options,cli,add,run,options,options,return,options
CliFrontendParser -> private static Options addCustomCliOptions(Options options, boolean runOptions);1476432429;Adds custom cli options_@param options The options to add options to_@param runOptions Whether to include run options_@return Options with additions;private static Options addCustomCliOptions(Options options, boolean runOptions) {_		for (CustomCommandLine cli: CliFrontend.getCustomCommandLineList()) {_			cli.addGeneralOptions(options)__			if (runOptions) {_				cli.addRunOptions(options)__			}_		}_		return options__	};adds,custom,cli,options,param,options,the,options,to,add,options,to,param,run,options,whether,to,include,run,options,return,options,with,additions;private,static,options,add,custom,cli,options,options,options,boolean,run,options,for,custom,command,line,cli,cli,frontend,get,custom,command,line,list,cli,add,general,options,options,if,run,options,cli,add,run,options,options,return,options
CliFrontendParser -> private static Options addCustomCliOptions(Options options, boolean runOptions);1478068438;Adds custom cli options_@param options The options to add options to_@param runOptions Whether to include run options_@return Options with additions;private static Options addCustomCliOptions(Options options, boolean runOptions) {_		for (CustomCommandLine cli: CliFrontend.getCustomCommandLineList()) {_			cli.addGeneralOptions(options)__			if (runOptions) {_				cli.addRunOptions(options)__			}_		}_		return options__	};adds,custom,cli,options,param,options,the,options,to,add,options,to,param,run,options,whether,to,include,run,options,return,options,with,additions;private,static,options,add,custom,cli,options,options,options,boolean,run,options,for,custom,command,line,cli,cli,frontend,get,custom,command,line,list,cli,add,general,options,options,if,run,options,cli,add,run,options,options,return,options
CliFrontendParser -> private static Options addCustomCliOptions(Options options, boolean runOptions);1495778594;Adds custom cli options._@param options The options to add options to_@param runOptions Whether to include run options_@return Options with additions;private static Options addCustomCliOptions(Options options, boolean runOptions) {_		for (CustomCommandLine cli: CliFrontend.getCustomCommandLineList()) {_			cli.addGeneralOptions(options)__			if (runOptions) {_				cli.addRunOptions(options)__			}_		}_		return options__	};adds,custom,cli,options,param,options,the,options,to,add,options,to,param,run,options,whether,to,include,run,options,return,options,with,additions;private,static,options,add,custom,cli,options,options,options,boolean,run,options,for,custom,command,line,cli,cli,frontend,get,custom,command,line,list,cli,add,general,options,options,if,run,options,cli,add,run,options,options,return,options
CliFrontendParser -> private static Options addCustomCliOptions(Options options, boolean runOptions);1499314317;Adds custom cli options._@param options The options to add options to_@param runOptions Whether to include run options_@return Options with additions;private static Options addCustomCliOptions(Options options, boolean runOptions) {_		for (CustomCommandLine cli: CliFrontend.getCustomCommandLineList()) {_			cli.addGeneralOptions(options)__			if (runOptions) {_				cli.addRunOptions(options)__			}_		}_		return options__	};adds,custom,cli,options,param,options,the,options,to,add,options,to,param,run,options,whether,to,include,run,options,return,options,with,additions;private,static,options,add,custom,cli,options,options,options,boolean,run,options,for,custom,command,line,cli,cli,frontend,get,custom,command,line,list,cli,add,general,options,options,if,run,options,cli,add,run,options,options,return,options
CliFrontendParser -> private static Options addCustomCliOptions(Options options, boolean runOptions);1515699581;Adds custom cli options._@param options The options to add options to_@param runOptions Whether to include run options_@return Options with additions;private static Options addCustomCliOptions(Options options, boolean runOptions) {_		for (CustomCommandLine cli: CliFrontend.getCustomCommandLineList()) {_			cli.addGeneralOptions(options)__			if (runOptions) {_				cli.addRunOptions(options)__			}_		}_		return options__	};adds,custom,cli,options,param,options,the,options,to,add,options,to,param,run,options,whether,to,include,run,options,return,options,with,additions;private,static,options,add,custom,cli,options,options,options,boolean,run,options,for,custom,command,line,cli,cli,frontend,get,custom,command,line,list,cli,add,general,options,options,if,run,options,cli,add,run,options,options,return,options
CliFrontendParser -> public static void printHelp(Collection<CustomCommandLine<?>> customCommandLines);1515699597;Prints the help for the client.;public static void printHelp(Collection<CustomCommandLine<?>> customCommandLines) {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun(customCommandLines)__		printHelpForInfo()__		printHelpForList(customCommandLines)__		printHelpForStop(customCommandLines)__		printHelpForCancel(customCommandLines)__		printHelpForSavepoint(customCommandLines)___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,collection,custom,command,line,custom,command,lines,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,custom,command,lines,print,help,for,info,print,help,for,list,custom,command,lines,print,help,for,stop,custom,command,lines,print,help,for,cancel,custom,command,lines,print,help,for,savepoint,custom,command,lines,system,out,println
CliFrontendParser -> public static void printHelp(Collection<CustomCommandLine<?>> customCommandLines);1515699606;Prints the help for the client.;public static void printHelp(Collection<CustomCommandLine<?>> customCommandLines) {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun(customCommandLines)__		printHelpForInfo()__		printHelpForList(customCommandLines)__		printHelpForStop(customCommandLines)__		printHelpForCancel(customCommandLines)__		printHelpForSavepoint(customCommandLines)___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,collection,custom,command,line,custom,command,lines,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,custom,command,lines,print,help,for,info,print,help,for,list,custom,command,lines,print,help,for,stop,custom,command,lines,print,help,for,cancel,custom,command,lines,print,help,for,savepoint,custom,command,lines,system,out,println
CliFrontendParser -> public static void printHelp(Collection<CustomCommandLine<?>> customCommandLines);1515770044;Prints the help for the client.;public static void printHelp(Collection<CustomCommandLine<?>> customCommandLines) {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun(customCommandLines)__		printHelpForInfo()__		printHelpForList(customCommandLines)__		printHelpForStop(customCommandLines)__		printHelpForCancel(customCommandLines)__		printHelpForSavepoint(customCommandLines)___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,collection,custom,command,line,custom,command,lines,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,custom,command,lines,print,help,for,info,print,help,for,list,custom,command,lines,print,help,for,stop,custom,command,lines,print,help,for,cancel,custom,command,lines,print,help,for,savepoint,custom,command,lines,system,out,println
CliFrontendParser -> public static void printHelp(Collection<CustomCommandLine<?>> customCommandLines);1515770045;Prints the help for the client.;public static void printHelp(Collection<CustomCommandLine<?>> customCommandLines) {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun(customCommandLines)__		printHelpForInfo()__		printHelpForList(customCommandLines)__		printHelpForStop(customCommandLines)__		printHelpForCancel(customCommandLines)__		printHelpForSavepoint(customCommandLines)___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,collection,custom,command,line,custom,command,lines,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,custom,command,lines,print,help,for,info,print,help,for,list,custom,command,lines,print,help,for,stop,custom,command,lines,print,help,for,cancel,custom,command,lines,print,help,for,savepoint,custom,command,lines,system,out,println
CliFrontendParser -> public static void printHelp(Collection<CustomCommandLine<?>> customCommandLines);1516295283;Prints the help for the client.;public static void printHelp(Collection<CustomCommandLine<?>> customCommandLines) {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun(customCommandLines)__		printHelpForInfo()__		printHelpForList(customCommandLines)__		printHelpForStop(customCommandLines)__		printHelpForCancel(customCommandLines)__		printHelpForSavepoint(customCommandLines)___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,collection,custom,command,line,custom,command,lines,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,custom,command,lines,print,help,for,info,print,help,for,list,custom,command,lines,print,help,for,stop,custom,command,lines,print,help,for,cancel,custom,command,lines,print,help,for,savepoint,custom,command,lines,system,out,println
CliFrontendParser -> public static void printHelp(Collection<CustomCommandLine<?>> customCommandLines);1519317159;Prints the help for the client.;public static void printHelp(Collection<CustomCommandLine<?>> customCommandLines) {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun(customCommandLines)__		printHelpForInfo()__		printHelpForList(customCommandLines)__		printHelpForStop(customCommandLines)__		printHelpForCancel(customCommandLines)__		printHelpForSavepoint(customCommandLines)__		printHelpForModify(customCommandLines)___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,collection,custom,command,line,custom,command,lines,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,custom,command,lines,print,help,for,info,print,help,for,list,custom,command,lines,print,help,for,stop,custom,command,lines,print,help,for,cancel,custom,command,lines,print,help,for,savepoint,custom,command,lines,print,help,for,modify,custom,command,lines,system,out,println
CliFrontendParser -> public static void printHelp(Collection<CustomCommandLine<?>> customCommandLines);1522066224;Prints the help for the client.;public static void printHelp(Collection<CustomCommandLine<?>> customCommandLines) {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun(customCommandLines)__		printHelpForInfo()__		printHelpForList(customCommandLines)__		printHelpForStop(customCommandLines)__		printHelpForCancel(customCommandLines)__		printHelpForSavepoint(customCommandLines)__		printHelpForModify(customCommandLines)___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,collection,custom,command,line,custom,command,lines,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,custom,command,lines,print,help,for,info,print,help,for,list,custom,command,lines,print,help,for,stop,custom,command,lines,print,help,for,cancel,custom,command,lines,print,help,for,savepoint,custom,command,lines,print,help,for,modify,custom,command,lines,system,out,println
CliFrontendParser -> public static void printHelp(Collection<CustomCommandLine<?>> customCommandLines);1523641106;Prints the help for the client.;public static void printHelp(Collection<CustomCommandLine<?>> customCommandLines) {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun(customCommandLines)__		printHelpForInfo()__		printHelpForList(customCommandLines)__		printHelpForStop(customCommandLines)__		printHelpForCancel(customCommandLines)__		printHelpForSavepoint(customCommandLines)__		printHelpForModify(customCommandLines)___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,collection,custom,command,line,custom,command,lines,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,custom,command,lines,print,help,for,info,print,help,for,list,custom,command,lines,print,help,for,stop,custom,command,lines,print,help,for,cancel,custom,command,lines,print,help,for,savepoint,custom,command,lines,print,help,for,modify,custom,command,lines,system,out,println
CliFrontendParser -> public static void printHelp(Collection<CustomCommandLine<?>> customCommandLines);1528796078;Prints the help for the client.;public static void printHelp(Collection<CustomCommandLine<?>> customCommandLines) {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun(customCommandLines)__		printHelpForInfo()__		printHelpForList(customCommandLines)__		printHelpForStop(customCommandLines)__		printHelpForCancel(customCommandLines)__		printHelpForSavepoint(customCommandLines)__		printHelpForModify(customCommandLines)___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,collection,custom,command,line,custom,command,lines,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,custom,command,lines,print,help,for,info,print,help,for,list,custom,command,lines,print,help,for,stop,custom,command,lines,print,help,for,cancel,custom,command,lines,print,help,for,savepoint,custom,command,lines,print,help,for,modify,custom,command,lines,system,out,println
CliFrontendParser -> public static void printHelp(Collection<CustomCommandLine<?>> customCommandLines);1534945233;Prints the help for the client.;public static void printHelp(Collection<CustomCommandLine<?>> customCommandLines) {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun(customCommandLines)__		printHelpForInfo()__		printHelpForList(customCommandLines)__		printHelpForStop(customCommandLines)__		printHelpForCancel(customCommandLines)__		printHelpForSavepoint(customCommandLines)__		printHelpForModify(customCommandLines)___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,collection,custom,command,line,custom,command,lines,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,custom,command,lines,print,help,for,info,print,help,for,list,custom,command,lines,print,help,for,stop,custom,command,lines,print,help,for,cancel,custom,command,lines,print,help,for,savepoint,custom,command,lines,print,help,for,modify,custom,command,lines,system,out,println
CliFrontendParser -> public static void printHelp(Collection<CustomCommandLine<?>> customCommandLines);1537963459;Prints the help for the client.;public static void printHelp(Collection<CustomCommandLine<?>> customCommandLines) {_		System.out.println("./flink <ACTION> [OPTIONS] [ARGUMENTS]")__		System.out.println()__		System.out.println("The following actions are available:")___		printHelpForRun(customCommandLines)__		printHelpForInfo()__		printHelpForList(customCommandLines)__		printHelpForStop(customCommandLines)__		printHelpForCancel(customCommandLines)__		printHelpForSavepoint(customCommandLines)__		printHelpForModify(customCommandLines)___		System.out.println()__	};prints,the,help,for,the,client;public,static,void,print,help,collection,custom,command,line,custom,command,lines,system,out,println,flink,action,options,arguments,system,out,println,system,out,println,the,following,actions,are,available,print,help,for,run,custom,command,lines,print,help,for,info,print,help,for,list,custom,command,lines,print,help,for,stop,custom,command,lines,print,help,for,cancel,custom,command,lines,print,help,for,savepoint,custom,command,lines,print,help,for,modify,custom,command,lines,system,out,println
CliFrontendParser -> static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB);1515699597;Merges the given {@link Options} into a new Options object.__@param optionsA options to merge, can be null if none_@param optionsB options to merge, can be null if none_@return;static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB) {_		final Options resultOptions = new Options()__		if (optionsA != null) {_			for (Option option : optionsA.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		if (optionsB != null) {_			for (Option option : optionsB.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		return resultOptions__	};merges,the,given,link,options,into,a,new,options,object,param,options,a,options,to,merge,can,be,null,if,none,param,options,b,options,to,merge,can,be,null,if,none,return;static,options,merge,options,nullable,options,options,a,nullable,options,options,b,final,options,result,options,new,options,if,options,a,null,for,option,option,options,a,get,options,result,options,add,option,option,if,options,b,null,for,option,option,options,b,get,options,result,options,add,option,option,return,result,options
CliFrontendParser -> static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB);1515699606;Merges the given {@link Options} into a new Options object.__@param optionsA options to merge, can be null if none_@param optionsB options to merge, can be null if none_@return;static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB) {_		final Options resultOptions = new Options()__		if (optionsA != null) {_			for (Option option : optionsA.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		if (optionsB != null) {_			for (Option option : optionsB.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		return resultOptions__	};merges,the,given,link,options,into,a,new,options,object,param,options,a,options,to,merge,can,be,null,if,none,param,options,b,options,to,merge,can,be,null,if,none,return;static,options,merge,options,nullable,options,options,a,nullable,options,options,b,final,options,result,options,new,options,if,options,a,null,for,option,option,options,a,get,options,result,options,add,option,option,if,options,b,null,for,option,option,options,b,get,options,result,options,add,option,option,return,result,options
CliFrontendParser -> static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB);1515770043;Merges the given {@link Options} into a new Options object.__@param optionsA options to merge, can be null if none_@param optionsB options to merge, can be null if none_@return;static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB) {_		final Options resultOptions = new Options()__		if (optionsA != null) {_			for (Option option : optionsA.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		if (optionsB != null) {_			for (Option option : optionsB.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		return resultOptions__	};merges,the,given,link,options,into,a,new,options,object,param,options,a,options,to,merge,can,be,null,if,none,param,options,b,options,to,merge,can,be,null,if,none,return;static,options,merge,options,nullable,options,options,a,nullable,options,options,b,final,options,result,options,new,options,if,options,a,null,for,option,option,options,a,get,options,result,options,add,option,option,if,options,b,null,for,option,option,options,b,get,options,result,options,add,option,option,return,result,options
CliFrontendParser -> static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB);1515770044;Merges the given {@link Options} into a new Options object.__@param optionsA options to merge, can be null if none_@param optionsB options to merge, can be null if none_@return;static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB) {_		final Options resultOptions = new Options()__		if (optionsA != null) {_			for (Option option : optionsA.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		if (optionsB != null) {_			for (Option option : optionsB.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		return resultOptions__	};merges,the,given,link,options,into,a,new,options,object,param,options,a,options,to,merge,can,be,null,if,none,param,options,b,options,to,merge,can,be,null,if,none,return;static,options,merge,options,nullable,options,options,a,nullable,options,options,b,final,options,result,options,new,options,if,options,a,null,for,option,option,options,a,get,options,result,options,add,option,option,if,options,b,null,for,option,option,options,b,get,options,result,options,add,option,option,return,result,options
CliFrontendParser -> static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB);1515770045;Merges the given {@link Options} into a new Options object.__@param optionsA options to merge, can be null if none_@param optionsB options to merge, can be null if none_@return;static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB) {_		final Options resultOptions = new Options()__		if (optionsA != null) {_			for (Option option : optionsA.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		if (optionsB != null) {_			for (Option option : optionsB.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		return resultOptions__	};merges,the,given,link,options,into,a,new,options,object,param,options,a,options,to,merge,can,be,null,if,none,param,options,b,options,to,merge,can,be,null,if,none,return;static,options,merge,options,nullable,options,options,a,nullable,options,options,b,final,options,result,options,new,options,if,options,a,null,for,option,option,options,a,get,options,result,options,add,option,option,if,options,b,null,for,option,option,options,b,get,options,result,options,add,option,option,return,result,options
CliFrontendParser -> static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB);1516295283;Merges the given {@link Options} into a new Options object.__@param optionsA options to merge, can be null if none_@param optionsB options to merge, can be null if none_@return;static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB) {_		final Options resultOptions = new Options()__		if (optionsA != null) {_			for (Option option : optionsA.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		if (optionsB != null) {_			for (Option option : optionsB.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		return resultOptions__	};merges,the,given,link,options,into,a,new,options,object,param,options,a,options,to,merge,can,be,null,if,none,param,options,b,options,to,merge,can,be,null,if,none,return;static,options,merge,options,nullable,options,options,a,nullable,options,options,b,final,options,result,options,new,options,if,options,a,null,for,option,option,options,a,get,options,result,options,add,option,option,if,options,b,null,for,option,option,options,b,get,options,result,options,add,option,option,return,result,options
CliFrontendParser -> static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB);1519317159;Merges the given {@link Options} into a new Options object.__@param optionsA options to merge, can be null if none_@param optionsB options to merge, can be null if none_@return;static Options mergeOptions(@Nullable Options optionsA, @Nullable Options optionsB) {_		final Options resultOptions = new Options()__		if (optionsA != null) {_			for (Option option : optionsA.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		if (optionsB != null) {_			for (Option option : optionsB.getOptions()) {_				resultOptions.addOption(option)__			}_		}__		return resultOptions__	};merges,the,given,link,options,into,a,new,options,object,param,options,a,options,to,merge,can,be,null,if,none,param,options,b,options,to,merge,can,be,null,if,none,return;static,options,merge,options,nullable,options,options,a,nullable,options,options,b,final,options,result,options,new,options,if,options,a,null,for,option,option,options,a,get,options,result,options,add,option,option,if,options,b,null,for,option,option,options,b,get,options,result,options,add,option,option,return,result,options
CliFrontendParser -> private static void printCustomCliOptions(HelpFormatter formatter, boolean runOptions);1466152678;Prints custom cli options_@param formatter The formatter to use for printing_@param runOptions True if the run options should be printed, False to print only general options;private static void printCustomCliOptions(HelpFormatter formatter, boolean runOptions) {_		_		for (CustomCommandLine cli: CliFrontend.getCustomCommandLineList()) {_			if (cli.getId() != null) {_				formatter.setSyntaxPrefix("  Options for " + cli.getId() + " mode:")__				Options customOpts = new Options()__				cli.addGeneralOptions(customOpts)__				if (runOptions) {_					cli.addRunOptions(customOpts)__				}_				formatter.printHelp(" ", customOpts)__				System.out.println()__			}_		}_	};prints,custom,cli,options,param,formatter,the,formatter,to,use,for,printing,param,run,options,true,if,the,run,options,should,be,printed,false,to,print,only,general,options;private,static,void,print,custom,cli,options,help,formatter,formatter,boolean,run,options,for,custom,command,line,cli,cli,frontend,get,custom,command,line,list,if,cli,get,id,null,formatter,set,syntax,prefix,options,for,cli,get,id,mode,options,custom,opts,new,options,cli,add,general,options,custom,opts,if,run,options,cli,add,run,options,custom,opts,formatter,print,help,custom,opts,system,out,println
CliFrontendParser -> private static void printCustomCliOptions(HelpFormatter formatter, boolean runOptions);1466787219;Prints custom cli options_@param formatter The formatter to use for printing_@param runOptions True if the run options should be printed, False to print only general options;private static void printCustomCliOptions(HelpFormatter formatter, boolean runOptions) {_		_		for (CustomCommandLine cli: CliFrontend.getCustomCommandLineList()) {_			if (cli.getId() != null) {_				formatter.setSyntaxPrefix("  Options for " + cli.getId() + " mode:")__				Options customOpts = new Options()__				cli.addGeneralOptions(customOpts)__				if (runOptions) {_					cli.addRunOptions(customOpts)__				}_				formatter.printHelp(" ", customOpts)__				System.out.println()__			}_		}_	};prints,custom,cli,options,param,formatter,the,formatter,to,use,for,printing,param,run,options,true,if,the,run,options,should,be,printed,false,to,print,only,general,options;private,static,void,print,custom,cli,options,help,formatter,formatter,boolean,run,options,for,custom,command,line,cli,cli,frontend,get,custom,command,line,list,if,cli,get,id,null,formatter,set,syntax,prefix,options,for,cli,get,id,mode,options,custom,opts,new,options,cli,add,general,options,custom,opts,if,run,options,cli,add,run,options,custom,opts,formatter,print,help,custom,opts,system,out,println
CliFrontendParser -> private static void printCustomCliOptions(HelpFormatter formatter, boolean runOptions);1468854249;Prints custom cli options_@param formatter The formatter to use for printing_@param runOptions True if the run options should be printed, False to print only general options;private static void printCustomCliOptions(HelpFormatter formatter, boolean runOptions) {_		_		for (CustomCommandLine cli: CliFrontend.getCustomCommandLineList()) {_			if (cli.getId() != null) {_				formatter.setSyntaxPrefix("  Options for " + cli.getId() + " mode:")__				Options customOpts = new Options()__				cli.addGeneralOptions(customOpts)__				if (runOptions) {_					cli.addRunOptions(customOpts)__				}_				formatter.printHelp(" ", customOpts)__				System.out.println()__			}_		}_	};prints,custom,cli,options,param,formatter,the,formatter,to,use,for,printing,param,run,options,true,if,the,run,options,should,be,printed,false,to,print,only,general,options;private,static,void,print,custom,cli,options,help,formatter,formatter,boolean,run,options,for,custom,command,line,cli,cli,frontend,get,custom,command,line,list,if,cli,get,id,null,formatter,set,syntax,prefix,options,for,cli,get,id,mode,options,custom,opts,new,options,cli,add,general,options,custom,opts,if,run,options,cli,add,run,options,custom,opts,formatter,print,help,custom,opts,system,out,println
CliFrontendParser -> private static void printCustomCliOptions(HelpFormatter formatter, boolean runOptions);1468944021;Prints custom cli options_@param formatter The formatter to use for printing_@param runOptions True if the run options should be printed, False to print only general options;private static void printCustomCliOptions(HelpFormatter formatter, boolean runOptions) {_		_		for (CustomCommandLine cli: CliFrontend.getCustomCommandLineList()) {_			if (cli.getId() != null) {_				formatter.setSyntaxPrefix("  Options for " + cli.getId() + " mode:")__				Options customOpts = new Options()__				cli.addGeneralOptions(customOpts)__				if (runOptions) {_					cli.addRunOptions(customOpts)__				}_				formatter.printHelp(" ", customOpts)__				System.out.println()__			}_		}_	};prints,custom,cli,options,param,formatter,the,formatter,to,use,for,printing,param,run,options,true,if,the,run,options,should,be,printed,false,to,print,only,general,options;private,static,void,print,custom,cli,options,help,formatter,formatter,boolean,run,options,for,custom,command,line,cli,cli,frontend,get,custom,command,line,list,if,cli,get,id,null,formatter,set,syntax,prefix,options,for,cli,get,id,mode,options,custom,opts,new,options,cli,add,general,options,custom,opts,if,run,options,cli,add,run,options,custom,opts,formatter,print,help,custom,opts,system,out,println
CliFrontendParser -> private static void printCustomCliOptions(HelpFormatter formatter, boolean runOptions);1476432306;Prints custom cli options_@param formatter The formatter to use for printing_@param runOptions True if the run options should be printed, False to print only general options;private static void printCustomCliOptions(HelpFormatter formatter, boolean runOptions) {_		_		for (CustomCommandLine cli: CliFrontend.getCustomCommandLineList()) {_			if (cli.getId() != null) {_				formatter.setSyntaxPrefix("  Options for " + cli.getId() + " mode:")__				Options customOpts = new Options()__				cli.addGeneralOptions(customOpts)__				if (runOptions) {_					cli.addRunOptions(customOpts)__				}_				formatter.printHelp(" ", customOpts)__				System.out.println()__			}_		}_	};prints,custom,cli,options,param,formatter,the,formatter,to,use,for,printing,param,run,options,true,if,the,run,options,should,be,printed,false,to,print,only,general,options;private,static,void,print,custom,cli,options,help,formatter,formatter,boolean,run,options,for,custom,command,line,cli,cli,frontend,get,custom,command,line,list,if,cli,get,id,null,formatter,set,syntax,prefix,options,for,cli,get,id,mode,options,custom,opts,new,options,cli,add,general,options,custom,opts,if,run,options,cli,add,run,options,custom,opts,formatter,print,help,custom,opts,system,out,println
CliFrontendParser -> private static void printCustomCliOptions(HelpFormatter formatter, boolean runOptions);1476432429;Prints custom cli options_@param formatter The formatter to use for printing_@param runOptions True if the run options should be printed, False to print only general options;private static void printCustomCliOptions(HelpFormatter formatter, boolean runOptions) {_		_		for (CustomCommandLine cli: CliFrontend.getCustomCommandLineList()) {_			if (cli.getId() != null) {_				formatter.setSyntaxPrefix("  Options for " + cli.getId() + " mode:")__				Options customOpts = new Options()__				cli.addGeneralOptions(customOpts)__				if (runOptions) {_					cli.addRunOptions(customOpts)__				}_				formatter.printHelp(" ", customOpts)__				System.out.println()__			}_		}_	};prints,custom,cli,options,param,formatter,the,formatter,to,use,for,printing,param,run,options,true,if,the,run,options,should,be,printed,false,to,print,only,general,options;private,static,void,print,custom,cli,options,help,formatter,formatter,boolean,run,options,for,custom,command,line,cli,cli,frontend,get,custom,command,line,list,if,cli,get,id,null,formatter,set,syntax,prefix,options,for,cli,get,id,mode,options,custom,opts,new,options,cli,add,general,options,custom,opts,if,run,options,cli,add,run,options,custom,opts,formatter,print,help,custom,opts,system,out,println
CliFrontendParser -> private static void printCustomCliOptions(HelpFormatter formatter, boolean runOptions);1478068438;Prints custom cli options_@param formatter The formatter to use for printing_@param runOptions True if the run options should be printed, False to print only general options;private static void printCustomCliOptions(HelpFormatter formatter, boolean runOptions) {_		_		for (CustomCommandLine cli: CliFrontend.getCustomCommandLineList()) {_			if (cli.getId() != null) {_				formatter.setSyntaxPrefix("  Options for " + cli.getId() + " mode:")__				Options customOpts = new Options()__				cli.addGeneralOptions(customOpts)__				if (runOptions) {_					cli.addRunOptions(customOpts)__				}_				formatter.printHelp(" ", customOpts)__				System.out.println()__			}_		}_	};prints,custom,cli,options,param,formatter,the,formatter,to,use,for,printing,param,run,options,true,if,the,run,options,should,be,printed,false,to,print,only,general,options;private,static,void,print,custom,cli,options,help,formatter,formatter,boolean,run,options,for,custom,command,line,cli,cli,frontend,get,custom,command,line,list,if,cli,get,id,null,formatter,set,syntax,prefix,options,for,cli,get,id,mode,options,custom,opts,new,options,cli,add,general,options,custom,opts,if,run,options,cli,add,run,options,custom,opts,formatter,print,help,custom,opts,system,out,println
CliFrontendParser -> private static void printCustomCliOptions(HelpFormatter formatter, boolean runOptions);1495778594;Prints custom cli options._@param formatter The formatter to use for printing_@param runOptions True if the run options should be printed, False to print only general options;private static void printCustomCliOptions(HelpFormatter formatter, boolean runOptions) {_		_		for (CustomCommandLine cli: CliFrontend.getCustomCommandLineList()) {_			if (cli.getId() != null) {_				formatter.setSyntaxPrefix("  Options for " + cli.getId() + " mode:")__				Options customOpts = new Options()__				cli.addGeneralOptions(customOpts)__				if (runOptions) {_					cli.addRunOptions(customOpts)__				}_				formatter.printHelp(" ", customOpts)__				System.out.println()__			}_		}_	};prints,custom,cli,options,param,formatter,the,formatter,to,use,for,printing,param,run,options,true,if,the,run,options,should,be,printed,false,to,print,only,general,options;private,static,void,print,custom,cli,options,help,formatter,formatter,boolean,run,options,for,custom,command,line,cli,cli,frontend,get,custom,command,line,list,if,cli,get,id,null,formatter,set,syntax,prefix,options,for,cli,get,id,mode,options,custom,opts,new,options,cli,add,general,options,custom,opts,if,run,options,cli,add,run,options,custom,opts,formatter,print,help,custom,opts,system,out,println
CliFrontendParser -> private static void printCustomCliOptions(HelpFormatter formatter, boolean runOptions);1499314317;Prints custom cli options._@param formatter The formatter to use for printing_@param runOptions True if the run options should be printed, False to print only general options;private static void printCustomCliOptions(HelpFormatter formatter, boolean runOptions) {_		_		for (CustomCommandLine cli: CliFrontend.getCustomCommandLineList()) {_			if (cli.getId() != null) {_				formatter.setSyntaxPrefix("  Options for " + cli.getId() + " mode:")__				Options customOpts = new Options()__				cli.addGeneralOptions(customOpts)__				if (runOptions) {_					cli.addRunOptions(customOpts)__				}_				formatter.printHelp(" ", customOpts)__				System.out.println()__			}_		}_	};prints,custom,cli,options,param,formatter,the,formatter,to,use,for,printing,param,run,options,true,if,the,run,options,should,be,printed,false,to,print,only,general,options;private,static,void,print,custom,cli,options,help,formatter,formatter,boolean,run,options,for,custom,command,line,cli,cli,frontend,get,custom,command,line,list,if,cli,get,id,null,formatter,set,syntax,prefix,options,for,cli,get,id,mode,options,custom,opts,new,options,cli,add,general,options,custom,opts,if,run,options,cli,add,run,options,custom,opts,formatter,print,help,custom,opts,system,out,println
CliFrontendParser -> private static void printCustomCliOptions(HelpFormatter formatter, boolean runOptions);1515699581;Prints custom cli options._@param formatter The formatter to use for printing_@param runOptions True if the run options should be printed, False to print only general options;private static void printCustomCliOptions(HelpFormatter formatter, boolean runOptions) {_		_		for (CustomCommandLine cli: CliFrontend.getCustomCommandLineList()) {_			if (cli.getId() != null) {_				formatter.setSyntaxPrefix("  Options for " + cli.getId() + " mode:")__				Options customOpts = new Options()__				cli.addGeneralOptions(customOpts)__				if (runOptions) {_					cli.addRunOptions(customOpts)__				}_				formatter.printHelp(" ", customOpts)__				System.out.println()__			}_		}_	};prints,custom,cli,options,param,formatter,the,formatter,to,use,for,printing,param,run,options,true,if,the,run,options,should,be,printed,false,to,print,only,general,options;private,static,void,print,custom,cli,options,help,formatter,formatter,boolean,run,options,for,custom,command,line,cli,cli,frontend,get,custom,command,line,list,if,cli,get,id,null,formatter,set,syntax,prefix,options,for,cli,get,id,mode,options,custom,opts,new,options,cli,add,general,options,custom,opts,if,run,options,cli,add,run,options,custom,opts,formatter,print,help,custom,opts,system,out,println
