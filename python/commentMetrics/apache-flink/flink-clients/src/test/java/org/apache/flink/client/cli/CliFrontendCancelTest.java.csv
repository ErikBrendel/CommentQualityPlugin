# id;timestamp;commentText;codeText;commentWords;codeWords
CliFrontendCancelTest -> @Test 	public void testCancelWithSavepoint() throws Exception;1515699581;Tests cancelling with the savepoint option.;@Test_	public void testCancelWithSavepoint() throws Exception {_		{_			_			JobID jid = new JobID()___			String[] parameters = { "-s", jid.toString() }__			CancelTestCliFrontend testFrontend = new CancelTestCliFrontend(false)__			assertEquals(0, testFrontend.cancel(parameters))___			Mockito.verify(testFrontend.client, times(1))_				.cancelWithSavepoint(any(JobID.class), isNull(String.class))__		}__		{_			_			JobID jid = new JobID()___			String[] parameters = { "-s", "targetDirectory", jid.toString() }__			CancelTestCliFrontend testFrontend = new CancelTestCliFrontend(false)__			assertEquals(0, testFrontend.cancel(parameters))___			Mockito.verify(testFrontend.client, times(1))_				.cancelWithSavepoint(any(JobID.class), notNull(String.class))__		}_	};tests,cancelling,with,the,savepoint,option;test,public,void,test,cancel,with,savepoint,throws,exception,job,id,jid,new,job,id,string,parameters,s,jid,to,string,cancel,test,cli,frontend,test,frontend,new,cancel,test,cli,frontend,false,assert,equals,0,test,frontend,cancel,parameters,mockito,verify,test,frontend,client,times,1,cancel,with,savepoint,any,job,id,class,is,null,string,class,job,id,jid,new,job,id,string,parameters,s,target,directory,jid,to,string,cancel,test,cli,frontend,test,frontend,new,cancel,test,cli,frontend,false,assert,equals,0,test,frontend,cancel,parameters,mockito,verify,test,frontend,client,times,1,cancel,with,savepoint,any,job,id,class,not,null,string,class
CliFrontendCancelTest -> @Test 	public void testCancelWithSavepoint() throws Exception;1515699597;Tests cancelling with the savepoint option.;@Test_	public void testCancelWithSavepoint() throws Exception {_		{_			_			JobID jid = new JobID()___			String[] parameters = { "-s", jid.toString() }__			final ClusterClient clusterClient = createClusterClient()__			MockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient)__			assertEquals(0, testFrontend.cancel(parameters))___			Mockito.verify(clusterClient, times(1))_				.cancelWithSavepoint(any(JobID.class), isNull(String.class))__		}__		{_			_			JobID jid = new JobID()___			String[] parameters = { "-s", "targetDirectory", jid.toString() }__			final ClusterClient clusterClient = createClusterClient()__			MockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient)__			assertEquals(0, testFrontend.cancel(parameters))___			Mockito.verify(clusterClient, times(1))_				.cancelWithSavepoint(any(JobID.class), notNull(String.class))__		}_	};tests,cancelling,with,the,savepoint,option;test,public,void,test,cancel,with,savepoint,throws,exception,job,id,jid,new,job,id,string,parameters,s,jid,to,string,final,cluster,client,cluster,client,create,cluster,client,mocked,cli,frontend,test,frontend,new,mocked,cli,frontend,cluster,client,assert,equals,0,test,frontend,cancel,parameters,mockito,verify,cluster,client,times,1,cancel,with,savepoint,any,job,id,class,is,null,string,class,job,id,jid,new,job,id,string,parameters,s,target,directory,jid,to,string,final,cluster,client,cluster,client,create,cluster,client,mocked,cli,frontend,test,frontend,new,mocked,cli,frontend,cluster,client,assert,equals,0,test,frontend,cancel,parameters,mockito,verify,cluster,client,times,1,cancel,with,savepoint,any,job,id,class,not,null,string,class
CliFrontendCancelTest -> @Test 	public void testCancelWithSavepoint() throws Exception;1515699606;Tests cancelling with the savepoint option.;@Test_	public void testCancelWithSavepoint() throws Exception {_		{_			_			JobID jid = new JobID()___			String[] parameters = { "-s", jid.toString() }__			final ClusterClient clusterClient = createClusterClient()__			MockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient)__			testFrontend.cancel(parameters)___			Mockito.verify(clusterClient, times(1))_				.cancelWithSavepoint(any(JobID.class), isNull(String.class))__		}__		{_			_			JobID jid = new JobID()___			String[] parameters = { "-s", "targetDirectory", jid.toString() }__			final ClusterClient clusterClient = createClusterClient()__			MockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient)__			testFrontend.cancel(parameters)___			Mockito.verify(clusterClient, times(1))_				.cancelWithSavepoint(any(JobID.class), notNull(String.class))__		}_	};tests,cancelling,with,the,savepoint,option;test,public,void,test,cancel,with,savepoint,throws,exception,job,id,jid,new,job,id,string,parameters,s,jid,to,string,final,cluster,client,cluster,client,create,cluster,client,mocked,cli,frontend,test,frontend,new,mocked,cli,frontend,cluster,client,test,frontend,cancel,parameters,mockito,verify,cluster,client,times,1,cancel,with,savepoint,any,job,id,class,is,null,string,class,job,id,jid,new,job,id,string,parameters,s,target,directory,jid,to,string,final,cluster,client,cluster,client,create,cluster,client,mocked,cli,frontend,test,frontend,new,mocked,cli,frontend,cluster,client,test,frontend,cancel,parameters,mockito,verify,cluster,client,times,1,cancel,with,savepoint,any,job,id,class,not,null,string,class
CliFrontendCancelTest -> @Test 	public void testCancelWithSavepoint() throws Exception;1515770042;Tests cancelling with the savepoint option.;@Test_	public void testCancelWithSavepoint() throws Exception {_		{_			_			JobID jid = new JobID()___			String[] parameters = { "-s", jid.toString() }__			final ClusterClient clusterClient = createClusterClient()__			MockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient)__			testFrontend.cancel(parameters)___			Mockito.verify(clusterClient, times(1))_				.cancelWithSavepoint(any(JobID.class), isNull(String.class))__		}__		{_			_			JobID jid = new JobID()___			String[] parameters = { "-s", "targetDirectory", jid.toString() }__			final ClusterClient clusterClient = createClusterClient()__			MockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient)__			testFrontend.cancel(parameters)___			Mockito.verify(clusterClient, times(1))_				.cancelWithSavepoint(any(JobID.class), notNull(String.class))__		}_	};tests,cancelling,with,the,savepoint,option;test,public,void,test,cancel,with,savepoint,throws,exception,job,id,jid,new,job,id,string,parameters,s,jid,to,string,final,cluster,client,cluster,client,create,cluster,client,mocked,cli,frontend,test,frontend,new,mocked,cli,frontend,cluster,client,test,frontend,cancel,parameters,mockito,verify,cluster,client,times,1,cancel,with,savepoint,any,job,id,class,is,null,string,class,job,id,jid,new,job,id,string,parameters,s,target,directory,jid,to,string,final,cluster,client,cluster,client,create,cluster,client,mocked,cli,frontend,test,frontend,new,mocked,cli,frontend,cluster,client,test,frontend,cancel,parameters,mockito,verify,cluster,client,times,1,cancel,with,savepoint,any,job,id,class,not,null,string,class
CliFrontendCancelTest -> @Test 	public void testCancelWithSavepoint() throws Exception;1515770044;Tests cancelling with the savepoint option.;@Test_	public void testCancelWithSavepoint() throws Exception {_		{_			_			JobID jid = new JobID()___			String[] parameters = { "-s", jid.toString() }__			final ClusterClient<String> clusterClient = createClusterClient()__			MockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient)__			testFrontend.cancel(parameters)___			Mockito.verify(clusterClient, times(1))_				.cancelWithSavepoint(any(JobID.class), isNull(String.class))__		}__		{_			_			JobID jid = new JobID()___			String[] parameters = { "-s", "targetDirectory", jid.toString() }__			final ClusterClient<String> clusterClient = createClusterClient()__			MockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient)__			testFrontend.cancel(parameters)___			Mockito.verify(clusterClient, times(1))_				.cancelWithSavepoint(any(JobID.class), notNull(String.class))__		}_	};tests,cancelling,with,the,savepoint,option;test,public,void,test,cancel,with,savepoint,throws,exception,job,id,jid,new,job,id,string,parameters,s,jid,to,string,final,cluster,client,string,cluster,client,create,cluster,client,mocked,cli,frontend,test,frontend,new,mocked,cli,frontend,cluster,client,test,frontend,cancel,parameters,mockito,verify,cluster,client,times,1,cancel,with,savepoint,any,job,id,class,is,null,string,class,job,id,jid,new,job,id,string,parameters,s,target,directory,jid,to,string,final,cluster,client,string,cluster,client,create,cluster,client,mocked,cli,frontend,test,frontend,new,mocked,cli,frontend,cluster,client,test,frontend,cancel,parameters,mockito,verify,cluster,client,times,1,cancel,with,savepoint,any,job,id,class,not,null,string,class
CliFrontendCancelTest -> @Test 	public void testCancelWithSavepoint() throws Exception;1521056783;Tests cancelling with the savepoint option.;@Test_	public void testCancelWithSavepoint() throws Exception {_		{_			_			JobID jid = new JobID()___			String[] parameters = { "-s", jid.toString() }__			final ClusterClient<String> clusterClient = createClusterClient()__			MockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient)__			testFrontend.cancel(parameters)___			Mockito.verify(clusterClient, times(1))_				.cancelWithSavepoint(any(JobID.class), isNull(String.class))__		}__		{_			_			JobID jid = new JobID()___			String[] parameters = { "-s", "targetDirectory", jid.toString() }__			final ClusterClient<String> clusterClient = createClusterClient()__			MockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient)__			testFrontend.cancel(parameters)___			Mockito.verify(clusterClient, times(1))_				.cancelWithSavepoint(any(JobID.class), notNull(String.class))__		}_	};tests,cancelling,with,the,savepoint,option;test,public,void,test,cancel,with,savepoint,throws,exception,job,id,jid,new,job,id,string,parameters,s,jid,to,string,final,cluster,client,string,cluster,client,create,cluster,client,mocked,cli,frontend,test,frontend,new,mocked,cli,frontend,cluster,client,test,frontend,cancel,parameters,mockito,verify,cluster,client,times,1,cancel,with,savepoint,any,job,id,class,is,null,string,class,job,id,jid,new,job,id,string,parameters,s,target,directory,jid,to,string,final,cluster,client,string,cluster,client,create,cluster,client,mocked,cli,frontend,test,frontend,new,mocked,cli,frontend,cluster,client,test,frontend,cancel,parameters,mockito,verify,cluster,client,times,1,cancel,with,savepoint,any,job,id,class,not,null,string,class
CliFrontendCancelTest -> @Test 	public void testCancelWithSavepoint() throws Exception;1521396722;Tests cancelling with the savepoint option.;@Test_	public void testCancelWithSavepoint() throws Exception {_		{_			_			JobID jid = new JobID()___			String[] parameters = { "-s", jid.toString() }__			final ClusterClient<String> clusterClient = createClusterClient()__			MockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient)__			testFrontend.cancel(parameters)___			Mockito.verify(clusterClient, times(1))_				.cancelWithSavepoint(any(JobID.class), isNull(String.class))__		}__		{_			_			JobID jid = new JobID()___			String[] parameters = { "-s", "targetDirectory", jid.toString() }__			final ClusterClient<String> clusterClient = createClusterClient()__			MockedCliFrontend testFrontend = new MockedCliFrontend(clusterClient)__			testFrontend.cancel(parameters)___			Mockito.verify(clusterClient, times(1))_				.cancelWithSavepoint(any(JobID.class), notNull(String.class))__		}_	};tests,cancelling,with,the,savepoint,option;test,public,void,test,cancel,with,savepoint,throws,exception,job,id,jid,new,job,id,string,parameters,s,jid,to,string,final,cluster,client,string,cluster,client,create,cluster,client,mocked,cli,frontend,test,frontend,new,mocked,cli,frontend,cluster,client,test,frontend,cancel,parameters,mockito,verify,cluster,client,times,1,cancel,with,savepoint,any,job,id,class,is,null,string,class,job,id,jid,new,job,id,string,parameters,s,target,directory,jid,to,string,final,cluster,client,string,cluster,client,create,cluster,client,mocked,cli,frontend,test,frontend,new,mocked,cli,frontend,cluster,client,test,frontend,cancel,parameters,mockito,verify,cluster,client,times,1,cancel,with,savepoint,any,job,id,class,not,null,string,class
