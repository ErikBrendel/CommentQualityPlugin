# id;timestamp;commentText;codeText;commentWords;codeWords
DefaultCLITest -> @Test 	public void testConfigurationPassing() throws Exception;1515699606;Tests that the configuration is properly passed via the DefaultCLI to the_created ClusterDescriptor.;@Test_	public void testConfigurationPassing() throws Exception {_		final DefaultCLI defaultCLI = new DefaultCLI()___		final String configurationDirectory = temporaryFolder.newFolder().getAbsolutePath()__		final String[] args = {}___		CommandLine commandLine = defaultCLI.parseCommandLineOptions(args, false)___		final String localhost = "localhost"__		final int port = 1234__		final Configuration configuration = new Configuration()___		configuration.setString(JobManagerOptions.ADDRESS, localhost)__		configuration.setInteger(JobManagerOptions.PORT, port)___		final InetSocketAddress expectedAddress = new InetSocketAddress(localhost, port)___		final ClusterDescriptor<?> clusterDescriptor = defaultCLI.createClusterDescriptor(_			configuration,_			configurationDirectory,_			commandLine)___		final ClusterClient clusterClient = clusterDescriptor.retrieve(defaultCLI.getClusterId(_			configuration,_			commandLine))___		Assert.assertEquals(expectedAddress, clusterClient.getJobManagerAddress())__	};tests,that,the,configuration,is,properly,passed,via,the,default,cli,to,the,created,cluster,descriptor;test,public,void,test,configuration,passing,throws,exception,final,default,cli,default,cli,new,default,cli,final,string,configuration,directory,temporary,folder,new,folder,get,absolute,path,final,string,args,command,line,command,line,default,cli,parse,command,line,options,args,false,final,string,localhost,localhost,final,int,port,1234,final,configuration,configuration,new,configuration,configuration,set,string,job,manager,options,address,localhost,configuration,set,integer,job,manager,options,port,port,final,inet,socket,address,expected,address,new,inet,socket,address,localhost,port,final,cluster,descriptor,cluster,descriptor,default,cli,create,cluster,descriptor,configuration,configuration,directory,command,line,final,cluster,client,cluster,client,cluster,descriptor,retrieve,default,cli,get,cluster,id,configuration,command,line,assert,assert,equals,expected,address,cluster,client,get,job,manager,address
DefaultCLITest -> @Test 	public void testConfigurationPassing() throws Exception;1515770042;Tests that the configuration is properly passed via the DefaultCLI to the_created ClusterDescriptor.;@Test_	public void testConfigurationPassing() throws Exception {_		final Configuration configuration = new Configuration()___		final String localhost = "localhost"__		final int port = 1234___		configuration.setString(JobManagerOptions.ADDRESS, localhost)__		configuration.setInteger(JobManagerOptions.PORT, port)___		final DefaultCLI defaultCLI = new DefaultCLI(configuration)___		final String[] args = {}___		CommandLine commandLine = defaultCLI.parseCommandLineOptions(args, false)___		final InetSocketAddress expectedAddress = new InetSocketAddress(localhost, port)___		final ClusterDescriptor<?> clusterDescriptor = defaultCLI.createClusterDescriptor(commandLine)___		final ClusterClient clusterClient = clusterDescriptor.retrieve(defaultCLI.getClusterId(commandLine))___		Assert.assertEquals(expectedAddress, clusterClient.getJobManagerAddress())__	};tests,that,the,configuration,is,properly,passed,via,the,default,cli,to,the,created,cluster,descriptor;test,public,void,test,configuration,passing,throws,exception,final,configuration,configuration,new,configuration,final,string,localhost,localhost,final,int,port,1234,configuration,set,string,job,manager,options,address,localhost,configuration,set,integer,job,manager,options,port,port,final,default,cli,default,cli,new,default,cli,configuration,final,string,args,command,line,command,line,default,cli,parse,command,line,options,args,false,final,inet,socket,address,expected,address,new,inet,socket,address,localhost,port,final,cluster,descriptor,cluster,descriptor,default,cli,create,cluster,descriptor,command,line,final,cluster,client,cluster,client,cluster,descriptor,retrieve,default,cli,get,cluster,id,command,line,assert,assert,equals,expected,address,cluster,client,get,job,manager,address
DefaultCLITest -> @Test 	public void testConfigurationPassing() throws Exception;1515770043;Tests that the configuration is properly passed via the DefaultCLI to the_created ClusterDescriptor.;@Test_	public void testConfigurationPassing() throws Exception {_		final Configuration configuration = new Configuration()___		final String localhost = "localhost"__		final int port = 1234___		configuration.setString(JobManagerOptions.ADDRESS, localhost)__		configuration.setInteger(JobManagerOptions.PORT, port)___		final DefaultCLI defaultCLI = new DefaultCLI(configuration)___		final String[] args = {}___		CommandLine commandLine = defaultCLI.parseCommandLineOptions(args, false)___		final InetSocketAddress expectedAddress = new InetSocketAddress(localhost, port)___		final ClusterDescriptor clusterDescriptor = defaultCLI.createClusterDescriptor(commandLine)___		final ClusterClient clusterClient = clusterDescriptor.retrieve(defaultCLI.getClusterId(commandLine))___		Assert.assertEquals(expectedAddress, clusterClient.getJobManagerAddress())__	};tests,that,the,configuration,is,properly,passed,via,the,default,cli,to,the,created,cluster,descriptor;test,public,void,test,configuration,passing,throws,exception,final,configuration,configuration,new,configuration,final,string,localhost,localhost,final,int,port,1234,configuration,set,string,job,manager,options,address,localhost,configuration,set,integer,job,manager,options,port,port,final,default,cli,default,cli,new,default,cli,configuration,final,string,args,command,line,command,line,default,cli,parse,command,line,options,args,false,final,inet,socket,address,expected,address,new,inet,socket,address,localhost,port,final,cluster,descriptor,cluster,descriptor,default,cli,create,cluster,descriptor,command,line,final,cluster,client,cluster,client,cluster,descriptor,retrieve,default,cli,get,cluster,id,command,line,assert,assert,equals,expected,address,cluster,client,get,job,manager,address
DefaultCLITest -> @Test 	public void testConfigurationPassing() throws Exception;1515770044;Tests that the configuration is properly passed via the DefaultCLI to the_created ClusterDescriptor.;@Test_	public void testConfigurationPassing() throws Exception {_		final Configuration configuration = new Configuration()___		final String localhost = "localhost"__		final int port = 1234___		configuration.setString(JobManagerOptions.ADDRESS, localhost)__		configuration.setInteger(JobManagerOptions.PORT, port)___		final DefaultCLI defaultCLI = new DefaultCLI(configuration)___		final String[] args = {}___		CommandLine commandLine = defaultCLI.parseCommandLineOptions(args, false)___		final InetSocketAddress expectedAddress = new InetSocketAddress(localhost, port)___		final StandaloneClusterDescriptor clusterDescriptor = defaultCLI.createClusterDescriptor(commandLine)___		final ClusterClient<?> clusterClient = clusterDescriptor.retrieve(defaultCLI.getClusterId(commandLine))___		Assert.assertEquals(expectedAddress, clusterClient.getJobManagerAddress())__	};tests,that,the,configuration,is,properly,passed,via,the,default,cli,to,the,created,cluster,descriptor;test,public,void,test,configuration,passing,throws,exception,final,configuration,configuration,new,configuration,final,string,localhost,localhost,final,int,port,1234,configuration,set,string,job,manager,options,address,localhost,configuration,set,integer,job,manager,options,port,port,final,default,cli,default,cli,new,default,cli,configuration,final,string,args,command,line,command,line,default,cli,parse,command,line,options,args,false,final,inet,socket,address,expected,address,new,inet,socket,address,localhost,port,final,standalone,cluster,descriptor,cluster,descriptor,default,cli,create,cluster,descriptor,command,line,final,cluster,client,cluster,client,cluster,descriptor,retrieve,default,cli,get,cluster,id,command,line,assert,assert,equals,expected,address,cluster,client,get,job,manager,address
DefaultCLITest -> @Test 	public void testConfigurationPassing() throws Exception;1517237717;Tests that the configuration is properly passed via the DefaultCLI to the_created ClusterDescriptor.;@Test_	public void testConfigurationPassing() throws Exception {_		final Configuration configuration = new Configuration()___		final String localhost = "localhost"__		final int port = 1234___		configuration.setString(JobManagerOptions.ADDRESS, localhost)__		configuration.setInteger(JobManagerOptions.PORT, port)___		final DefaultCLI defaultCLI = new DefaultCLI(configuration)___		final String[] args = {}___		CommandLine commandLine = defaultCLI.parseCommandLineOptions(args, false)___		final StandaloneClusterDescriptor clusterDescriptor = defaultCLI.createClusterDescriptor(commandLine)___		final ClusterClient<?> clusterClient = clusterDescriptor.retrieve(defaultCLI.getClusterId(commandLine))___		final LeaderConnectionInfo clusterConnectionInfo = clusterClient.getClusterConnectionInfo()___		assertThat(clusterConnectionInfo.getHostname(), Matchers.equalTo(localhost))__		assertThat(clusterConnectionInfo.getPort(), Matchers.equalTo(port))__	};tests,that,the,configuration,is,properly,passed,via,the,default,cli,to,the,created,cluster,descriptor;test,public,void,test,configuration,passing,throws,exception,final,configuration,configuration,new,configuration,final,string,localhost,localhost,final,int,port,1234,configuration,set,string,job,manager,options,address,localhost,configuration,set,integer,job,manager,options,port,port,final,default,cli,default,cli,new,default,cli,configuration,final,string,args,command,line,command,line,default,cli,parse,command,line,options,args,false,final,standalone,cluster,descriptor,cluster,descriptor,default,cli,create,cluster,descriptor,command,line,final,cluster,client,cluster,client,cluster,descriptor,retrieve,default,cli,get,cluster,id,command,line,final,leader,connection,info,cluster,connection,info,cluster,client,get,cluster,connection,info,assert,that,cluster,connection,info,get,hostname,matchers,equal,to,localhost,assert,that,cluster,connection,info,get,port,matchers,equal,to,port
DefaultCLITest -> @Test 	public void testConfigurationPassing() throws Exception;1521396722;Tests that the configuration is properly passed via the DefaultCLI to the_created ClusterDescriptor.;@Test_	public void testConfigurationPassing() throws Exception {_		final Configuration configuration = getConfiguration()___		final String localhost = "localhost"__		final int port = 1234___		configuration.setString(JobManagerOptions.ADDRESS, localhost)__		configuration.setInteger(JobManagerOptions.PORT, port)___		@SuppressWarnings("unchecked")_		final AbstractCustomCommandLine<StandaloneClusterId> defaultCLI =_			(AbstractCustomCommandLine<StandaloneClusterId>) getCli(configuration)___		final String[] args = {}___		CommandLine commandLine = defaultCLI.parseCommandLineOptions(args, false)___		final ClusterDescriptor<StandaloneClusterId> clusterDescriptor =_			defaultCLI.createClusterDescriptor(commandLine)___		final ClusterClient<?> clusterClient = clusterDescriptor.retrieve(defaultCLI.getClusterId(commandLine))___		final LeaderConnectionInfo clusterConnectionInfo = clusterClient.getClusterConnectionInfo()___		assertThat(clusterConnectionInfo.getHostname(), Matchers.equalTo(localhost))__		assertThat(clusterConnectionInfo.getPort(), Matchers.equalTo(port))__	};tests,that,the,configuration,is,properly,passed,via,the,default,cli,to,the,created,cluster,descriptor;test,public,void,test,configuration,passing,throws,exception,final,configuration,configuration,get,configuration,final,string,localhost,localhost,final,int,port,1234,configuration,set,string,job,manager,options,address,localhost,configuration,set,integer,job,manager,options,port,port,suppress,warnings,unchecked,final,abstract,custom,command,line,standalone,cluster,id,default,cli,abstract,custom,command,line,standalone,cluster,id,get,cli,configuration,final,string,args,command,line,command,line,default,cli,parse,command,line,options,args,false,final,cluster,descriptor,standalone,cluster,id,cluster,descriptor,default,cli,create,cluster,descriptor,command,line,final,cluster,client,cluster,client,cluster,descriptor,retrieve,default,cli,get,cluster,id,command,line,final,leader,connection,info,cluster,connection,info,cluster,client,get,cluster,connection,info,assert,that,cluster,connection,info,get,hostname,matchers,equal,to,localhost,assert,that,cluster,connection,info,get,port,matchers,equal,to,port
DefaultCLITest -> @Test 	public void testConfigurationPassing() throws Exception;1522681180;Tests that the configuration is properly passed via the DefaultCLI to the_created ClusterDescriptor.;@Test_	public void testConfigurationPassing() throws Exception {_		final Configuration configuration = getConfiguration()___		final String localhost = "localhost"__		final int port = 1234___		configuration.setString(JobManagerOptions.ADDRESS, localhost)__		configuration.setInteger(JobManagerOptions.PORT, port)___		@SuppressWarnings("unchecked")_		final AbstractCustomCommandLine<StandaloneClusterId> defaultCLI =_			(AbstractCustomCommandLine<StandaloneClusterId>) getCli(configuration)___		final String[] args = {}___		CommandLine commandLine = defaultCLI.parseCommandLineOptions(args, false)___		final ClusterDescriptor<StandaloneClusterId> clusterDescriptor =_			defaultCLI.createClusterDescriptor(commandLine)___		final ClusterClient<?> clusterClient = clusterDescriptor.retrieve(defaultCLI.getClusterId(commandLine))___		final LeaderConnectionInfo clusterConnectionInfo = clusterClient.getClusterConnectionInfo()___		assertThat(clusterConnectionInfo.getHostname(), Matchers.equalTo(localhost))__		assertThat(clusterConnectionInfo.getPort(), Matchers.equalTo(port))__	};tests,that,the,configuration,is,properly,passed,via,the,default,cli,to,the,created,cluster,descriptor;test,public,void,test,configuration,passing,throws,exception,final,configuration,configuration,get,configuration,final,string,localhost,localhost,final,int,port,1234,configuration,set,string,job,manager,options,address,localhost,configuration,set,integer,job,manager,options,port,port,suppress,warnings,unchecked,final,abstract,custom,command,line,standalone,cluster,id,default,cli,abstract,custom,command,line,standalone,cluster,id,get,cli,configuration,final,string,args,command,line,command,line,default,cli,parse,command,line,options,args,false,final,cluster,descriptor,standalone,cluster,id,cluster,descriptor,default,cli,create,cluster,descriptor,command,line,final,cluster,client,cluster,client,cluster,descriptor,retrieve,default,cli,get,cluster,id,command,line,final,leader,connection,info,cluster,connection,info,cluster,client,get,cluster,connection,info,assert,that,cluster,connection,info,get,hostname,matchers,equal,to,localhost,assert,that,cluster,connection,info,get,port,matchers,equal,to,port
DefaultCLITest -> @Test 	public void testConfigurationPassing() throws Exception;1539695715;Tests that the configuration is properly passed via the DefaultCLI to the_created ClusterDescriptor.;@Test_	public void testConfigurationPassing() throws Exception {_		final Configuration configuration = getConfiguration()___		final String localhost = "localhost"__		final int port = 1234___		configuration.setString(JobManagerOptions.ADDRESS, localhost)__		configuration.setInteger(JobManagerOptions.PORT, port)___		@SuppressWarnings("unchecked")_		final AbstractCustomCommandLine<StandaloneClusterId> defaultCLI =_			(AbstractCustomCommandLine<StandaloneClusterId>) getCli(configuration)___		final String[] args = {}___		CommandLine commandLine = defaultCLI.parseCommandLineOptions(args, false)___		final ClusterDescriptor<StandaloneClusterId> clusterDescriptor =_			defaultCLI.createClusterDescriptor(commandLine)___		final ClusterClient<?> clusterClient = clusterDescriptor.retrieve(defaultCLI.getClusterId(commandLine))___		final LeaderConnectionInfo clusterConnectionInfo = clusterClient.getClusterConnectionInfo()___		assertThat(clusterConnectionInfo.getHostname(), Matchers.equalTo(localhost))__		assertThat(clusterConnectionInfo.getPort(), Matchers.equalTo(port))__	};tests,that,the,configuration,is,properly,passed,via,the,default,cli,to,the,created,cluster,descriptor;test,public,void,test,configuration,passing,throws,exception,final,configuration,configuration,get,configuration,final,string,localhost,localhost,final,int,port,1234,configuration,set,string,job,manager,options,address,localhost,configuration,set,integer,job,manager,options,port,port,suppress,warnings,unchecked,final,abstract,custom,command,line,standalone,cluster,id,default,cli,abstract,custom,command,line,standalone,cluster,id,get,cli,configuration,final,string,args,command,line,command,line,default,cli,parse,command,line,options,args,false,final,cluster,descriptor,standalone,cluster,id,cluster,descriptor,default,cli,create,cluster,descriptor,command,line,final,cluster,client,cluster,client,cluster,descriptor,retrieve,default,cli,get,cluster,id,command,line,final,leader,connection,info,cluster,connection,info,cluster,client,get,cluster,connection,info,assert,that,cluster,connection,info,get,hostname,matchers,equal,to,localhost,assert,that,cluster,connection,info,get,port,matchers,equal,to,port
DefaultCLITest -> @Test 	public void testManualConfigurationOverride() throws Exception;1515699606;Tests that command line options override the configuration settings.;@Test_	public void testManualConfigurationOverride() throws Exception {_		final DefaultCLI defaultCLI = new DefaultCLI()___		final String manualHostname = "123.123.123.123"__		final int manualPort = 4321__		final String configurationDirectory = temporaryFolder.newFolder().getAbsolutePath()__		final String[] args = {"-m", manualHostname + ':' + manualPort}___		CommandLine commandLine = defaultCLI.parseCommandLineOptions(args, false)___		final String localhost = "localhost"__		final int port = 1234__		final Configuration configuration = new Configuration()___		configuration.setString(JobManagerOptions.ADDRESS, localhost)__		configuration.setInteger(JobManagerOptions.PORT, port)___		final ClusterDescriptor<?> clusterDescriptor = defaultCLI.createClusterDescriptor(_			configuration,_			configurationDirectory,_			commandLine)___		final ClusterClient clusterClient = clusterDescriptor.retrieve(defaultCLI.getClusterId(_			configuration,_			commandLine))___		final InetSocketAddress expectedAddress = new InetSocketAddress(manualHostname, manualPort)___		Assert.assertEquals(expectedAddress, clusterClient.getJobManagerAddress())__	};tests,that,command,line,options,override,the,configuration,settings;test,public,void,test,manual,configuration,override,throws,exception,final,default,cli,default,cli,new,default,cli,final,string,manual,hostname,123,123,123,123,final,int,manual,port,4321,final,string,configuration,directory,temporary,folder,new,folder,get,absolute,path,final,string,args,m,manual,hostname,manual,port,command,line,command,line,default,cli,parse,command,line,options,args,false,final,string,localhost,localhost,final,int,port,1234,final,configuration,configuration,new,configuration,configuration,set,string,job,manager,options,address,localhost,configuration,set,integer,job,manager,options,port,port,final,cluster,descriptor,cluster,descriptor,default,cli,create,cluster,descriptor,configuration,configuration,directory,command,line,final,cluster,client,cluster,client,cluster,descriptor,retrieve,default,cli,get,cluster,id,configuration,command,line,final,inet,socket,address,expected,address,new,inet,socket,address,manual,hostname,manual,port,assert,assert,equals,expected,address,cluster,client,get,job,manager,address
DefaultCLITest -> @Test 	public void testManualConfigurationOverride() throws Exception;1515770042;Tests that command line options override the configuration settings.;@Test_	public void testManualConfigurationOverride() throws Exception {_		final String localhost = "localhost"__		final int port = 1234__		final Configuration configuration = new Configuration()___		configuration.setString(JobManagerOptions.ADDRESS, localhost)__		configuration.setInteger(JobManagerOptions.PORT, port)___		final DefaultCLI defaultCLI = new DefaultCLI(configuration)___		final String manualHostname = "123.123.123.123"__		final int manualPort = 4321__		final String[] args = {"-m", manualHostname + ':' + manualPort}___		CommandLine commandLine = defaultCLI.parseCommandLineOptions(args, false)___		final ClusterDescriptor<?> clusterDescriptor = defaultCLI.createClusterDescriptor(commandLine)___		final ClusterClient clusterClient = clusterDescriptor.retrieve(defaultCLI.getClusterId(commandLine))___		final InetSocketAddress expectedAddress = new InetSocketAddress(manualHostname, manualPort)___		Assert.assertEquals(expectedAddress, clusterClient.getJobManagerAddress())__	};tests,that,command,line,options,override,the,configuration,settings;test,public,void,test,manual,configuration,override,throws,exception,final,string,localhost,localhost,final,int,port,1234,final,configuration,configuration,new,configuration,configuration,set,string,job,manager,options,address,localhost,configuration,set,integer,job,manager,options,port,port,final,default,cli,default,cli,new,default,cli,configuration,final,string,manual,hostname,123,123,123,123,final,int,manual,port,4321,final,string,args,m,manual,hostname,manual,port,command,line,command,line,default,cli,parse,command,line,options,args,false,final,cluster,descriptor,cluster,descriptor,default,cli,create,cluster,descriptor,command,line,final,cluster,client,cluster,client,cluster,descriptor,retrieve,default,cli,get,cluster,id,command,line,final,inet,socket,address,expected,address,new,inet,socket,address,manual,hostname,manual,port,assert,assert,equals,expected,address,cluster,client,get,job,manager,address
DefaultCLITest -> @Test 	public void testManualConfigurationOverride() throws Exception;1515770043;Tests that command line options override the configuration settings.;@Test_	public void testManualConfigurationOverride() throws Exception {_		final String localhost = "localhost"__		final int port = 1234__		final Configuration configuration = new Configuration()___		configuration.setString(JobManagerOptions.ADDRESS, localhost)__		configuration.setInteger(JobManagerOptions.PORT, port)___		final DefaultCLI defaultCLI = new DefaultCLI(configuration)___		final String manualHostname = "123.123.123.123"__		final int manualPort = 4321__		final String[] args = {"-m", manualHostname + ':' + manualPort}___		CommandLine commandLine = defaultCLI.parseCommandLineOptions(args, false)___		final ClusterDescriptor clusterDescriptor = defaultCLI.createClusterDescriptor(commandLine)___		final ClusterClient clusterClient = clusterDescriptor.retrieve(defaultCLI.getClusterId(commandLine))___		final InetSocketAddress expectedAddress = new InetSocketAddress(manualHostname, manualPort)___		Assert.assertEquals(expectedAddress, clusterClient.getJobManagerAddress())__	};tests,that,command,line,options,override,the,configuration,settings;test,public,void,test,manual,configuration,override,throws,exception,final,string,localhost,localhost,final,int,port,1234,final,configuration,configuration,new,configuration,configuration,set,string,job,manager,options,address,localhost,configuration,set,integer,job,manager,options,port,port,final,default,cli,default,cli,new,default,cli,configuration,final,string,manual,hostname,123,123,123,123,final,int,manual,port,4321,final,string,args,m,manual,hostname,manual,port,command,line,command,line,default,cli,parse,command,line,options,args,false,final,cluster,descriptor,cluster,descriptor,default,cli,create,cluster,descriptor,command,line,final,cluster,client,cluster,client,cluster,descriptor,retrieve,default,cli,get,cluster,id,command,line,final,inet,socket,address,expected,address,new,inet,socket,address,manual,hostname,manual,port,assert,assert,equals,expected,address,cluster,client,get,job,manager,address
DefaultCLITest -> @Test 	public void testManualConfigurationOverride() throws Exception;1515770044;Tests that command line options override the configuration settings.;@Test_	public void testManualConfigurationOverride() throws Exception {_		final String localhost = "localhost"__		final int port = 1234__		final Configuration configuration = new Configuration()___		configuration.setString(JobManagerOptions.ADDRESS, localhost)__		configuration.setInteger(JobManagerOptions.PORT, port)___		final DefaultCLI defaultCLI = new DefaultCLI(configuration)___		final String manualHostname = "123.123.123.123"__		final int manualPort = 4321__		final String[] args = {"-m", manualHostname + ':' + manualPort}___		CommandLine commandLine = defaultCLI.parseCommandLineOptions(args, false)___		final StandaloneClusterDescriptor clusterDescriptor = defaultCLI.createClusterDescriptor(commandLine)___		final ClusterClient<?> clusterClient = clusterDescriptor.retrieve(defaultCLI.getClusterId(commandLine))___		final InetSocketAddress expectedAddress = new InetSocketAddress(manualHostname, manualPort)___		Assert.assertEquals(expectedAddress, clusterClient.getJobManagerAddress())__	};tests,that,command,line,options,override,the,configuration,settings;test,public,void,test,manual,configuration,override,throws,exception,final,string,localhost,localhost,final,int,port,1234,final,configuration,configuration,new,configuration,configuration,set,string,job,manager,options,address,localhost,configuration,set,integer,job,manager,options,port,port,final,default,cli,default,cli,new,default,cli,configuration,final,string,manual,hostname,123,123,123,123,final,int,manual,port,4321,final,string,args,m,manual,hostname,manual,port,command,line,command,line,default,cli,parse,command,line,options,args,false,final,standalone,cluster,descriptor,cluster,descriptor,default,cli,create,cluster,descriptor,command,line,final,cluster,client,cluster,client,cluster,descriptor,retrieve,default,cli,get,cluster,id,command,line,final,inet,socket,address,expected,address,new,inet,socket,address,manual,hostname,manual,port,assert,assert,equals,expected,address,cluster,client,get,job,manager,address
DefaultCLITest -> @Test 	public void testManualConfigurationOverride() throws Exception;1517237717;Tests that command line options override the configuration settings.;@Test_	public void testManualConfigurationOverride() throws Exception {_		final String localhost = "localhost"__		final int port = 1234__		final Configuration configuration = new Configuration()___		configuration.setString(JobManagerOptions.ADDRESS, localhost)__		configuration.setInteger(JobManagerOptions.PORT, port)___		final DefaultCLI defaultCLI = new DefaultCLI(configuration)___		final String manualHostname = "123.123.123.123"__		final int manualPort = 4321__		final String[] args = {"-m", manualHostname + ':' + manualPort}___		CommandLine commandLine = defaultCLI.parseCommandLineOptions(args, false)___		final StandaloneClusterDescriptor clusterDescriptor = defaultCLI.createClusterDescriptor(commandLine)___		final ClusterClient<?> clusterClient = clusterDescriptor.retrieve(defaultCLI.getClusterId(commandLine))___		final LeaderConnectionInfo clusterConnectionInfo = clusterClient.getClusterConnectionInfo()___		assertThat(clusterConnectionInfo.getHostname(), Matchers.equalTo(manualHostname))__		assertThat(clusterConnectionInfo.getPort(), Matchers.equalTo(manualPort))__	};tests,that,command,line,options,override,the,configuration,settings;test,public,void,test,manual,configuration,override,throws,exception,final,string,localhost,localhost,final,int,port,1234,final,configuration,configuration,new,configuration,configuration,set,string,job,manager,options,address,localhost,configuration,set,integer,job,manager,options,port,port,final,default,cli,default,cli,new,default,cli,configuration,final,string,manual,hostname,123,123,123,123,final,int,manual,port,4321,final,string,args,m,manual,hostname,manual,port,command,line,command,line,default,cli,parse,command,line,options,args,false,final,standalone,cluster,descriptor,cluster,descriptor,default,cli,create,cluster,descriptor,command,line,final,cluster,client,cluster,client,cluster,descriptor,retrieve,default,cli,get,cluster,id,command,line,final,leader,connection,info,cluster,connection,info,cluster,client,get,cluster,connection,info,assert,that,cluster,connection,info,get,hostname,matchers,equal,to,manual,hostname,assert,that,cluster,connection,info,get,port,matchers,equal,to,manual,port
DefaultCLITest -> @Test 	public void testManualConfigurationOverride() throws Exception;1521396722;Tests that command line options override the configuration settings.;@Test_	public void testManualConfigurationOverride() throws Exception {_		final String localhost = "localhost"__		final int port = 1234__		final Configuration configuration = getConfiguration()___		configuration.setString(JobManagerOptions.ADDRESS, localhost)__		configuration.setInteger(JobManagerOptions.PORT, port)___		@SuppressWarnings("unchecked")_		final AbstractCustomCommandLine<StandaloneClusterId> defaultCLI =_			(AbstractCustomCommandLine<StandaloneClusterId>) getCli(configuration)___		final String manualHostname = "123.123.123.123"__		final int manualPort = 4321__		final String[] args = {"-m", manualHostname + ':' + manualPort}___		CommandLine commandLine = defaultCLI.parseCommandLineOptions(args, false)___		final ClusterDescriptor<StandaloneClusterId> clusterDescriptor =_			defaultCLI.createClusterDescriptor(commandLine)___		final ClusterClient<?> clusterClient = clusterDescriptor.retrieve(defaultCLI.getClusterId(commandLine))___		final LeaderConnectionInfo clusterConnectionInfo = clusterClient.getClusterConnectionInfo()___		assertThat(clusterConnectionInfo.getHostname(), Matchers.equalTo(manualHostname))__		assertThat(clusterConnectionInfo.getPort(), Matchers.equalTo(manualPort))__	};tests,that,command,line,options,override,the,configuration,settings;test,public,void,test,manual,configuration,override,throws,exception,final,string,localhost,localhost,final,int,port,1234,final,configuration,configuration,get,configuration,configuration,set,string,job,manager,options,address,localhost,configuration,set,integer,job,manager,options,port,port,suppress,warnings,unchecked,final,abstract,custom,command,line,standalone,cluster,id,default,cli,abstract,custom,command,line,standalone,cluster,id,get,cli,configuration,final,string,manual,hostname,123,123,123,123,final,int,manual,port,4321,final,string,args,m,manual,hostname,manual,port,command,line,command,line,default,cli,parse,command,line,options,args,false,final,cluster,descriptor,standalone,cluster,id,cluster,descriptor,default,cli,create,cluster,descriptor,command,line,final,cluster,client,cluster,client,cluster,descriptor,retrieve,default,cli,get,cluster,id,command,line,final,leader,connection,info,cluster,connection,info,cluster,client,get,cluster,connection,info,assert,that,cluster,connection,info,get,hostname,matchers,equal,to,manual,hostname,assert,that,cluster,connection,info,get,port,matchers,equal,to,manual,port
DefaultCLITest -> @Test 	public void testManualConfigurationOverride() throws Exception;1522681180;Tests that command line options override the configuration settings.;@Test_	public void testManualConfigurationOverride() throws Exception {_		final String localhost = "localhost"__		final int port = 1234__		final Configuration configuration = getConfiguration()___		configuration.setString(JobManagerOptions.ADDRESS, localhost)__		configuration.setInteger(JobManagerOptions.PORT, port)___		@SuppressWarnings("unchecked")_		final AbstractCustomCommandLine<StandaloneClusterId> defaultCLI =_			(AbstractCustomCommandLine<StandaloneClusterId>) getCli(configuration)___		final String manualHostname = "123.123.123.123"__		final int manualPort = 4321__		final String[] args = {"-m", manualHostname + ':' + manualPort}___		CommandLine commandLine = defaultCLI.parseCommandLineOptions(args, false)___		final ClusterDescriptor<StandaloneClusterId> clusterDescriptor =_			defaultCLI.createClusterDescriptor(commandLine)___		final ClusterClient<?> clusterClient = clusterDescriptor.retrieve(defaultCLI.getClusterId(commandLine))___		final LeaderConnectionInfo clusterConnectionInfo = clusterClient.getClusterConnectionInfo()___		assertThat(clusterConnectionInfo.getHostname(), Matchers.equalTo(manualHostname))__		assertThat(clusterConnectionInfo.getPort(), Matchers.equalTo(manualPort))__	};tests,that,command,line,options,override,the,configuration,settings;test,public,void,test,manual,configuration,override,throws,exception,final,string,localhost,localhost,final,int,port,1234,final,configuration,configuration,get,configuration,configuration,set,string,job,manager,options,address,localhost,configuration,set,integer,job,manager,options,port,port,suppress,warnings,unchecked,final,abstract,custom,command,line,standalone,cluster,id,default,cli,abstract,custom,command,line,standalone,cluster,id,get,cli,configuration,final,string,manual,hostname,123,123,123,123,final,int,manual,port,4321,final,string,args,m,manual,hostname,manual,port,command,line,command,line,default,cli,parse,command,line,options,args,false,final,cluster,descriptor,standalone,cluster,id,cluster,descriptor,default,cli,create,cluster,descriptor,command,line,final,cluster,client,cluster,client,cluster,descriptor,retrieve,default,cli,get,cluster,id,command,line,final,leader,connection,info,cluster,connection,info,cluster,client,get,cluster,connection,info,assert,that,cluster,connection,info,get,hostname,matchers,equal,to,manual,hostname,assert,that,cluster,connection,info,get,port,matchers,equal,to,manual,port
DefaultCLITest -> @Test 	public void testManualConfigurationOverride() throws Exception;1539695715;Tests that command line options override the configuration settings.;@Test_	public void testManualConfigurationOverride() throws Exception {_		final String localhost = "localhost"__		final int port = 1234__		final Configuration configuration = getConfiguration()___		configuration.setString(JobManagerOptions.ADDRESS, localhost)__		configuration.setInteger(JobManagerOptions.PORT, port)___		@SuppressWarnings("unchecked")_		final AbstractCustomCommandLine<StandaloneClusterId> defaultCLI =_			(AbstractCustomCommandLine<StandaloneClusterId>) getCli(configuration)___		final String manualHostname = "123.123.123.123"__		final int manualPort = 4321__		final String[] args = {"-m", manualHostname + ':' + manualPort}___		CommandLine commandLine = defaultCLI.parseCommandLineOptions(args, false)___		final ClusterDescriptor<StandaloneClusterId> clusterDescriptor =_			defaultCLI.createClusterDescriptor(commandLine)___		final ClusterClient<?> clusterClient = clusterDescriptor.retrieve(defaultCLI.getClusterId(commandLine))___		final LeaderConnectionInfo clusterConnectionInfo = clusterClient.getClusterConnectionInfo()___		assertThat(clusterConnectionInfo.getHostname(), Matchers.equalTo(manualHostname))__		assertThat(clusterConnectionInfo.getPort(), Matchers.equalTo(manualPort))__	};tests,that,command,line,options,override,the,configuration,settings;test,public,void,test,manual,configuration,override,throws,exception,final,string,localhost,localhost,final,int,port,1234,final,configuration,configuration,get,configuration,configuration,set,string,job,manager,options,address,localhost,configuration,set,integer,job,manager,options,port,port,suppress,warnings,unchecked,final,abstract,custom,command,line,standalone,cluster,id,default,cli,abstract,custom,command,line,standalone,cluster,id,get,cli,configuration,final,string,manual,hostname,123,123,123,123,final,int,manual,port,4321,final,string,args,m,manual,hostname,manual,port,command,line,command,line,default,cli,parse,command,line,options,args,false,final,cluster,descriptor,standalone,cluster,id,cluster,descriptor,default,cli,create,cluster,descriptor,command,line,final,cluster,client,cluster,client,cluster,descriptor,retrieve,default,cli,get,cluster,id,command,line,final,leader,connection,info,cluster,connection,info,cluster,client,get,cluster,connection,info,assert,that,cluster,connection,info,get,hostname,matchers,equal,to,manual,hostname,assert,that,cluster,connection,info,get,port,matchers,equal,to,manual,port
