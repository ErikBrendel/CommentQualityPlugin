# id;timestamp;commentText;codeText;commentWords;codeWords
CliFrontendSavepointTest -> @Test 	public void testTriggerSavepointCustomTarget() throws Exception;1515699581;Tests that a CLI call with a custom savepoint directory target is_forwarded correctly to the cluster client.;@Test_	public void testTriggerSavepointCustomTarget() throws Exception {_		replaceStdOutAndStdErr()___		JobID jobId = new JobID()___		String savepointDirectory = "customTargetDirectory"___		final ClusterClient clusterClient = createClusterClient(savepointDirectory)___		try {_			MockedCliFrontend frontend = new MockedCliFrontend(clusterClient)___			String[] parameters = { jobId.toString(), savepointDirectory }__			int returnCode = frontend.savepoint(parameters)___			assertEquals(0, returnCode)__			verify(clusterClient, times(1))_				.triggerSavepoint(eq(jobId), eq(savepointDirectory))___			assertTrue(buffer.toString().contains(savepointDirectory))__		}_		finally {_			clusterClient.shutdown()___			restoreStdOutAndStdErr()__		}_	};tests,that,a,cli,call,with,a,custom,savepoint,directory,target,is,forwarded,correctly,to,the,cluster,client;test,public,void,test,trigger,savepoint,custom,target,throws,exception,replace,std,out,and,std,err,job,id,job,id,new,job,id,string,savepoint,directory,custom,target,directory,final,cluster,client,cluster,client,create,cluster,client,savepoint,directory,try,mocked,cli,frontend,frontend,new,mocked,cli,frontend,cluster,client,string,parameters,job,id,to,string,savepoint,directory,int,return,code,frontend,savepoint,parameters,assert,equals,0,return,code,verify,cluster,client,times,1,trigger,savepoint,eq,job,id,eq,savepoint,directory,assert,true,buffer,to,string,contains,savepoint,directory,finally,cluster,client,shutdown,restore,std,out,and,std,err
CliFrontendSavepointTest -> @Test 	public void testTriggerSavepointCustomTarget() throws Exception;1515699597;Tests that a CLI call with a custom savepoint directory target is_forwarded correctly to the cluster client.;@Test_	public void testTriggerSavepointCustomTarget() throws Exception {_		replaceStdOutAndStdErr()___		JobID jobId = new JobID()___		String savepointDirectory = "customTargetDirectory"___		final ClusterClient clusterClient = createClusterClient(savepointDirectory)___		try {_			MockedCliFrontend frontend = new MockedCliFrontend(clusterClient)___			String[] parameters = { jobId.toString(), savepointDirectory }__			int returnCode = frontend.savepoint(parameters)___			assertEquals(0, returnCode)__			verify(clusterClient, times(1))_				.triggerSavepoint(eq(jobId), eq(savepointDirectory))___			assertTrue(buffer.toString().contains(savepointDirectory))__		}_		finally {_			clusterClient.shutdown()___			restoreStdOutAndStdErr()__		}_	};tests,that,a,cli,call,with,a,custom,savepoint,directory,target,is,forwarded,correctly,to,the,cluster,client;test,public,void,test,trigger,savepoint,custom,target,throws,exception,replace,std,out,and,std,err,job,id,job,id,new,job,id,string,savepoint,directory,custom,target,directory,final,cluster,client,cluster,client,create,cluster,client,savepoint,directory,try,mocked,cli,frontend,frontend,new,mocked,cli,frontend,cluster,client,string,parameters,job,id,to,string,savepoint,directory,int,return,code,frontend,savepoint,parameters,assert,equals,0,return,code,verify,cluster,client,times,1,trigger,savepoint,eq,job,id,eq,savepoint,directory,assert,true,buffer,to,string,contains,savepoint,directory,finally,cluster,client,shutdown,restore,std,out,and,std,err
CliFrontendSavepointTest -> @Test 	public void testTriggerSavepointCustomTarget() throws Exception;1515699606;Tests that a CLI call with a custom savepoint directory target is_forwarded correctly to the cluster client.;@Test_	public void testTriggerSavepointCustomTarget() throws Exception {_		replaceStdOutAndStdErr()___		JobID jobId = new JobID()___		String savepointDirectory = "customTargetDirectory"___		final ClusterClient clusterClient = createClusterClient(savepointDirectory)___		try {_			MockedCliFrontend frontend = new MockedCliFrontend(clusterClient)___			String[] parameters = { jobId.toString(), savepointDirectory }__			frontend.savepoint(parameters)___			verify(clusterClient, times(1))_				.triggerSavepoint(eq(jobId), eq(savepointDirectory))___			assertTrue(buffer.toString().contains(savepointDirectory))__		}_		finally {_			clusterClient.shutdown()___			restoreStdOutAndStdErr()__		}_	};tests,that,a,cli,call,with,a,custom,savepoint,directory,target,is,forwarded,correctly,to,the,cluster,client;test,public,void,test,trigger,savepoint,custom,target,throws,exception,replace,std,out,and,std,err,job,id,job,id,new,job,id,string,savepoint,directory,custom,target,directory,final,cluster,client,cluster,client,create,cluster,client,savepoint,directory,try,mocked,cli,frontend,frontend,new,mocked,cli,frontend,cluster,client,string,parameters,job,id,to,string,savepoint,directory,frontend,savepoint,parameters,verify,cluster,client,times,1,trigger,savepoint,eq,job,id,eq,savepoint,directory,assert,true,buffer,to,string,contains,savepoint,directory,finally,cluster,client,shutdown,restore,std,out,and,std,err
CliFrontendSavepointTest -> @Test 	public void testTriggerSavepointCustomTarget() throws Exception;1515770044;Tests that a CLI call with a custom savepoint directory target is_forwarded correctly to the cluster client.;@Test_	public void testTriggerSavepointCustomTarget() throws Exception {_		replaceStdOutAndStdErr()___		JobID jobId = new JobID()___		String savepointDirectory = "customTargetDirectory"___		final ClusterClient<String> clusterClient = createClusterClient(savepointDirectory)___		try {_			MockedCliFrontend frontend = new MockedCliFrontend(clusterClient)___			String[] parameters = { jobId.toString(), savepointDirectory }__			frontend.savepoint(parameters)___			verify(clusterClient, times(1))_				.triggerSavepoint(eq(jobId), eq(savepointDirectory))___			assertTrue(buffer.toString().contains(savepointDirectory))__		}_		finally {_			clusterClient.shutdown()___			restoreStdOutAndStdErr()__		}_	};tests,that,a,cli,call,with,a,custom,savepoint,directory,target,is,forwarded,correctly,to,the,cluster,client;test,public,void,test,trigger,savepoint,custom,target,throws,exception,replace,std,out,and,std,err,job,id,job,id,new,job,id,string,savepoint,directory,custom,target,directory,final,cluster,client,string,cluster,client,create,cluster,client,savepoint,directory,try,mocked,cli,frontend,frontend,new,mocked,cli,frontend,cluster,client,string,parameters,job,id,to,string,savepoint,directory,frontend,savepoint,parameters,verify,cluster,client,times,1,trigger,savepoint,eq,job,id,eq,savepoint,directory,assert,true,buffer,to,string,contains,savepoint,directory,finally,cluster,client,shutdown,restore,std,out,and,std,err
CliFrontendSavepointTest -> @Test 	public void testTriggerSavepointCustomTarget() throws Exception;1519977153;Tests that a CLI call with a custom savepoint directory target is_forwarded correctly to the cluster client.;@Test_	public void testTriggerSavepointCustomTarget() throws Exception {_		replaceStdOutAndStdErr()___		JobID jobId = new JobID()___		String savepointDirectory = "customTargetDirectory"___		final ClusterClient<String> clusterClient = createClusterClient(savepointDirectory)___		try {_			MockedCliFrontend frontend = new MockedCliFrontend(clusterClient)___			String[] parameters = { jobId.toString(), savepointDirectory }__			frontend.savepoint(parameters)___			verify(clusterClient, times(1))_				.triggerSavepoint(eq(jobId), eq(savepointDirectory))___			assertTrue(buffer.toString().contains(savepointDirectory))__		}_		finally {_			clusterClient.shutdown()___			restoreStdOutAndStdErr()__		}_	};tests,that,a,cli,call,with,a,custom,savepoint,directory,target,is,forwarded,correctly,to,the,cluster,client;test,public,void,test,trigger,savepoint,custom,target,throws,exception,replace,std,out,and,std,err,job,id,job,id,new,job,id,string,savepoint,directory,custom,target,directory,final,cluster,client,string,cluster,client,create,cluster,client,savepoint,directory,try,mocked,cli,frontend,frontend,new,mocked,cli,frontend,cluster,client,string,parameters,job,id,to,string,savepoint,directory,frontend,savepoint,parameters,verify,cluster,client,times,1,trigger,savepoint,eq,job,id,eq,savepoint,directory,assert,true,buffer,to,string,contains,savepoint,directory,finally,cluster,client,shutdown,restore,std,out,and,std,err
CliFrontendSavepointTest -> @Test 	public void testTriggerSavepointCustomTarget() throws Exception;1521396722;Tests that a CLI call with a custom savepoint directory target is_forwarded correctly to the cluster client.;@Test_	public void testTriggerSavepointCustomTarget() throws Exception {_		replaceStdOutAndStdErr()___		JobID jobId = new JobID()___		String savepointDirectory = "customTargetDirectory"___		final ClusterClient<String> clusterClient = createClusterClient(savepointDirectory)___		try {_			MockedCliFrontend frontend = new MockedCliFrontend(clusterClient)___			String[] parameters = { jobId.toString(), savepointDirectory }__			frontend.savepoint(parameters)___			verify(clusterClient, times(1))_				.triggerSavepoint(eq(jobId), eq(savepointDirectory))___			assertTrue(buffer.toString().contains(savepointDirectory))__		}_		finally {_			clusterClient.shutdown()___			restoreStdOutAndStdErr()__		}_	};tests,that,a,cli,call,with,a,custom,savepoint,directory,target,is,forwarded,correctly,to,the,cluster,client;test,public,void,test,trigger,savepoint,custom,target,throws,exception,replace,std,out,and,std,err,job,id,job,id,new,job,id,string,savepoint,directory,custom,target,directory,final,cluster,client,string,cluster,client,create,cluster,client,savepoint,directory,try,mocked,cli,frontend,frontend,new,mocked,cli,frontend,cluster,client,string,parameters,job,id,to,string,savepoint,directory,frontend,savepoint,parameters,verify,cluster,client,times,1,trigger,savepoint,eq,job,id,eq,savepoint,directory,assert,true,buffer,to,string,contains,savepoint,directory,finally,cluster,client,shutdown,restore,std,out,and,std,err
CliFrontendSavepointTest -> @Test 	public void testTriggerSavepointCustomTarget() throws Exception;1522132482;Tests that a CLI call with a custom savepoint directory target is_forwarded correctly to the cluster client.;@Test_	public void testTriggerSavepointCustomTarget() throws Exception {_		replaceStdOutAndStdErr()___		JobID jobId = new JobID()___		String savepointDirectory = "customTargetDirectory"___		final ClusterClient<String> clusterClient = createClusterClient(savepointDirectory)___		try {_			MockedCliFrontend frontend = new MockedCliFrontend(clusterClient)___			String[] parameters = { jobId.toString(), savepointDirectory }__			frontend.savepoint(parameters)___			verify(clusterClient, times(1))_				.triggerSavepoint(eq(jobId), eq(savepointDirectory))___			assertTrue(buffer.toString().contains(savepointDirectory))__		}_		finally {_			clusterClient.shutdown()___			restoreStdOutAndStdErr()__		}_	};tests,that,a,cli,call,with,a,custom,savepoint,directory,target,is,forwarded,correctly,to,the,cluster,client;test,public,void,test,trigger,savepoint,custom,target,throws,exception,replace,std,out,and,std,err,job,id,job,id,new,job,id,string,savepoint,directory,custom,target,directory,final,cluster,client,string,cluster,client,create,cluster,client,savepoint,directory,try,mocked,cli,frontend,frontend,new,mocked,cli,frontend,cluster,client,string,parameters,job,id,to,string,savepoint,directory,frontend,savepoint,parameters,verify,cluster,client,times,1,trigger,savepoint,eq,job,id,eq,savepoint,directory,assert,true,buffer,to,string,contains,savepoint,directory,finally,cluster,client,shutdown,restore,std,out,and,std,err
CliFrontendSavepointTest -> @Test 	public void testTriggerSavepointCustomTarget() throws Exception;1538998760;Tests that a CLI call with a custom savepoint directory target is_forwarded correctly to the cluster client.;@Test_	public void testTriggerSavepointCustomTarget() throws Exception {_		replaceStdOutAndStdErr()___		JobID jobId = new JobID()___		String savepointDirectory = "customTargetDirectory"___		final ClusterClient<String> clusterClient = createClusterClient(savepointDirectory)___		try {_			MockedCliFrontend frontend = new MockedCliFrontend(clusterClient)___			String[] parameters = { jobId.toString(), savepointDirectory }__			frontend.savepoint(parameters)___			verify(clusterClient, times(1))_				.triggerSavepoint(eq(jobId), eq(savepointDirectory))___			assertTrue(buffer.toString().contains(savepointDirectory))__		}_		finally {_			clusterClient.shutdown()___			restoreStdOutAndStdErr()__		}_	};tests,that,a,cli,call,with,a,custom,savepoint,directory,target,is,forwarded,correctly,to,the,cluster,client;test,public,void,test,trigger,savepoint,custom,target,throws,exception,replace,std,out,and,std,err,job,id,job,id,new,job,id,string,savepoint,directory,custom,target,directory,final,cluster,client,string,cluster,client,create,cluster,client,savepoint,directory,try,mocked,cli,frontend,frontend,new,mocked,cli,frontend,cluster,client,string,parameters,job,id,to,string,savepoint,directory,frontend,savepoint,parameters,verify,cluster,client,times,1,trigger,savepoint,eq,job,id,eq,savepoint,directory,assert,true,buffer,to,string,contains,savepoint,directory,finally,cluster,client,shutdown,restore,std,out,and,std,err
CliFrontendSavepointTest -> @Test 	public void testTriggerSavepointCustomTarget() throws Exception;1549458282;Tests that a CLI call with a custom savepoint directory target is_forwarded correctly to the cluster client.;@Test_	public void testTriggerSavepointCustomTarget() throws Exception {_		replaceStdOutAndStdErr()___		JobID jobId = new JobID()___		String savepointDirectory = "customTargetDirectory"___		final ClusterClient<String> clusterClient = createClusterClient(savepointDirectory)___		try {_			MockedCliFrontend frontend = new MockedCliFrontend(clusterClient)___			String[] parameters = { jobId.toString(), savepointDirectory }__			frontend.savepoint(parameters)___			verify(clusterClient, times(1))_				.triggerSavepoint(eq(jobId), eq(savepointDirectory))___			assertTrue(buffer.toString().contains(savepointDirectory))__		}_		finally {_			clusterClient.shutdown()___			restoreStdOutAndStdErr()__		}_	};tests,that,a,cli,call,with,a,custom,savepoint,directory,target,is,forwarded,correctly,to,the,cluster,client;test,public,void,test,trigger,savepoint,custom,target,throws,exception,replace,std,out,and,std,err,job,id,job,id,new,job,id,string,savepoint,directory,custom,target,directory,final,cluster,client,string,cluster,client,create,cluster,client,savepoint,directory,try,mocked,cli,frontend,frontend,new,mocked,cli,frontend,cluster,client,string,parameters,job,id,to,string,savepoint,directory,frontend,savepoint,parameters,verify,cluster,client,times,1,trigger,savepoint,eq,job,id,eq,savepoint,directory,assert,true,buffer,to,string,contains,savepoint,directory,finally,cluster,client,shutdown,restore,std,out,and,std,err
CliFrontendSavepointTest -> @Test 	public void testDisposeWithJar() throws Exception;1515699581;Tests disposal with a JAR file.;@Test_	public void testDisposeWithJar() throws Exception {_		replaceStdOutAndStdErr()___		final CompletableFuture<String> disposeSavepointFuture = new CompletableFuture<>()___		final ClusterClient clusterClient = new DisposeSavepointClusterClient(_			(String savepointPath, Time timeout) -> {_				disposeSavepointFuture.complete(savepointPath)__				return CompletableFuture.completedFuture(Acknowledge.get())__			})___		try {_			CliFrontend frontend = new MockedCliFrontend(clusterClient)___			_			File f = tmp.newFile()__			ZipOutputStream out = new ZipOutputStream(new FileOutputStream(f))__			out.close()___			final String disposePath = "any-path"__			String[] parameters = { "-d", disposePath, "-j", f.getAbsolutePath() }___			frontend.savepoint(parameters)___			final String actualSavepointPath = disposeSavepointFuture.get()___			assertEquals(disposePath, actualSavepointPath)__		} finally {_			clusterClient.shutdown()__			restoreStdOutAndStdErr()__		}_	};tests,disposal,with,a,jar,file;test,public,void,test,dispose,with,jar,throws,exception,replace,std,out,and,std,err,final,completable,future,string,dispose,savepoint,future,new,completable,future,final,cluster,client,cluster,client,new,dispose,savepoint,cluster,client,string,savepoint,path,time,timeout,dispose,savepoint,future,complete,savepoint,path,return,completable,future,completed,future,acknowledge,get,try,cli,frontend,frontend,new,mocked,cli,frontend,cluster,client,file,f,tmp,new,file,zip,output,stream,out,new,zip,output,stream,new,file,output,stream,f,out,close,final,string,dispose,path,any,path,string,parameters,d,dispose,path,j,f,get,absolute,path,frontend,savepoint,parameters,final,string,actual,savepoint,path,dispose,savepoint,future,get,assert,equals,dispose,path,actual,savepoint,path,finally,cluster,client,shutdown,restore,std,out,and,std,err
CliFrontendSavepointTest -> @Test 	public void testDisposeWithJar() throws Exception;1515699597;Tests disposal with a JAR file.;@Test_	public void testDisposeWithJar() throws Exception {_		replaceStdOutAndStdErr()___		final CompletableFuture<String> disposeSavepointFuture = new CompletableFuture<>()___		final ClusterClient clusterClient = new DisposeSavepointClusterClient(_			(String savepointPath, Time timeout) -> {_				disposeSavepointFuture.complete(savepointPath)__				return CompletableFuture.completedFuture(Acknowledge.get())__			})___		try {_			CliFrontend frontend = new MockedCliFrontend(clusterClient)___			_			File f = tmp.newFile()__			ZipOutputStream out = new ZipOutputStream(new FileOutputStream(f))__			out.close()___			final String disposePath = "any-path"__			String[] parameters = { "-d", disposePath, "-j", f.getAbsolutePath() }___			frontend.savepoint(parameters)___			final String actualSavepointPath = disposeSavepointFuture.get()___			assertEquals(disposePath, actualSavepointPath)__		} finally {_			clusterClient.shutdown()__			restoreStdOutAndStdErr()__		}_	};tests,disposal,with,a,jar,file;test,public,void,test,dispose,with,jar,throws,exception,replace,std,out,and,std,err,final,completable,future,string,dispose,savepoint,future,new,completable,future,final,cluster,client,cluster,client,new,dispose,savepoint,cluster,client,string,savepoint,path,time,timeout,dispose,savepoint,future,complete,savepoint,path,return,completable,future,completed,future,acknowledge,get,try,cli,frontend,frontend,new,mocked,cli,frontend,cluster,client,file,f,tmp,new,file,zip,output,stream,out,new,zip,output,stream,new,file,output,stream,f,out,close,final,string,dispose,path,any,path,string,parameters,d,dispose,path,j,f,get,absolute,path,frontend,savepoint,parameters,final,string,actual,savepoint,path,dispose,savepoint,future,get,assert,equals,dispose,path,actual,savepoint,path,finally,cluster,client,shutdown,restore,std,out,and,std,err
CliFrontendSavepointTest -> @Test 	public void testDisposeWithJar() throws Exception;1515699606;Tests disposal with a JAR file.;@Test_	public void testDisposeWithJar() throws Exception {_		replaceStdOutAndStdErr()___		final CompletableFuture<String> disposeSavepointFuture = new CompletableFuture<>()___		final ClusterClient clusterClient = new DisposeSavepointClusterClient(_			(String savepointPath, Time timeout) -> {_				disposeSavepointFuture.complete(savepointPath)__				return CompletableFuture.completedFuture(Acknowledge.get())__			})___		try {_			CliFrontend frontend = new MockedCliFrontend(clusterClient)___			_			File f = tmp.newFile()__			ZipOutputStream out = new ZipOutputStream(new FileOutputStream(f))__			out.close()___			final String disposePath = "any-path"__			String[] parameters = { "-d", disposePath, "-j", f.getAbsolutePath() }___			frontend.savepoint(parameters)___			final String actualSavepointPath = disposeSavepointFuture.get()___			assertEquals(disposePath, actualSavepointPath)__		} finally {_			clusterClient.shutdown()__			restoreStdOutAndStdErr()__		}_	};tests,disposal,with,a,jar,file;test,public,void,test,dispose,with,jar,throws,exception,replace,std,out,and,std,err,final,completable,future,string,dispose,savepoint,future,new,completable,future,final,cluster,client,cluster,client,new,dispose,savepoint,cluster,client,string,savepoint,path,time,timeout,dispose,savepoint,future,complete,savepoint,path,return,completable,future,completed,future,acknowledge,get,try,cli,frontend,frontend,new,mocked,cli,frontend,cluster,client,file,f,tmp,new,file,zip,output,stream,out,new,zip,output,stream,new,file,output,stream,f,out,close,final,string,dispose,path,any,path,string,parameters,d,dispose,path,j,f,get,absolute,path,frontend,savepoint,parameters,final,string,actual,savepoint,path,dispose,savepoint,future,get,assert,equals,dispose,path,actual,savepoint,path,finally,cluster,client,shutdown,restore,std,out,and,std,err
CliFrontendSavepointTest -> @Test 	public void testDisposeWithJar() throws Exception;1515770044;Tests disposal with a JAR file.;@Test_	public void testDisposeWithJar() throws Exception {_		replaceStdOutAndStdErr()___		final CompletableFuture<String> disposeSavepointFuture = new CompletableFuture<>()___		final DisposeSavepointClusterClient clusterClient = new DisposeSavepointClusterClient(_			(String savepointPath, Time timeout) -> {_				disposeSavepointFuture.complete(savepointPath)__				return CompletableFuture.completedFuture(Acknowledge.get())__			})___		try {_			CliFrontend frontend = new MockedCliFrontend(clusterClient)___			_			File f = tmp.newFile()__			ZipOutputStream out = new ZipOutputStream(new FileOutputStream(f))__			out.close()___			final String disposePath = "any-path"__			String[] parameters = { "-d", disposePath, "-j", f.getAbsolutePath() }___			frontend.savepoint(parameters)___			final String actualSavepointPath = disposeSavepointFuture.get()___			assertEquals(disposePath, actualSavepointPath)__		} finally {_			clusterClient.shutdown()__			restoreStdOutAndStdErr()__		}_	};tests,disposal,with,a,jar,file;test,public,void,test,dispose,with,jar,throws,exception,replace,std,out,and,std,err,final,completable,future,string,dispose,savepoint,future,new,completable,future,final,dispose,savepoint,cluster,client,cluster,client,new,dispose,savepoint,cluster,client,string,savepoint,path,time,timeout,dispose,savepoint,future,complete,savepoint,path,return,completable,future,completed,future,acknowledge,get,try,cli,frontend,frontend,new,mocked,cli,frontend,cluster,client,file,f,tmp,new,file,zip,output,stream,out,new,zip,output,stream,new,file,output,stream,f,out,close,final,string,dispose,path,any,path,string,parameters,d,dispose,path,j,f,get,absolute,path,frontend,savepoint,parameters,final,string,actual,savepoint,path,dispose,savepoint,future,get,assert,equals,dispose,path,actual,savepoint,path,finally,cluster,client,shutdown,restore,std,out,and,std,err
CliFrontendSavepointTest -> @Test 	public void testDisposeWithJar() throws Exception;1519977153;Tests disposal with a JAR file.;@Test_	public void testDisposeWithJar() throws Exception {_		replaceStdOutAndStdErr()___		final CompletableFuture<String> disposeSavepointFuture = new CompletableFuture<>()___		final DisposeSavepointClusterClient clusterClient = new DisposeSavepointClusterClient(_			(String savepointPath, Time timeout) -> {_				disposeSavepointFuture.complete(savepointPath)__				return CompletableFuture.completedFuture(Acknowledge.get())__			})___		try {_			CliFrontend frontend = new MockedCliFrontend(clusterClient)___			_			File f = tmp.newFile()__			ZipOutputStream out = new ZipOutputStream(new FileOutputStream(f))__			out.close()___			final String disposePath = "any-path"__			String[] parameters = { "-d", disposePath, "-j", f.getAbsolutePath() }___			frontend.savepoint(parameters)___			final String actualSavepointPath = disposeSavepointFuture.get()___			assertEquals(disposePath, actualSavepointPath)__		} finally {_			clusterClient.shutdown()__			restoreStdOutAndStdErr()__		}_	};tests,disposal,with,a,jar,file;test,public,void,test,dispose,with,jar,throws,exception,replace,std,out,and,std,err,final,completable,future,string,dispose,savepoint,future,new,completable,future,final,dispose,savepoint,cluster,client,cluster,client,new,dispose,savepoint,cluster,client,string,savepoint,path,time,timeout,dispose,savepoint,future,complete,savepoint,path,return,completable,future,completed,future,acknowledge,get,try,cli,frontend,frontend,new,mocked,cli,frontend,cluster,client,file,f,tmp,new,file,zip,output,stream,out,new,zip,output,stream,new,file,output,stream,f,out,close,final,string,dispose,path,any,path,string,parameters,d,dispose,path,j,f,get,absolute,path,frontend,savepoint,parameters,final,string,actual,savepoint,path,dispose,savepoint,future,get,assert,equals,dispose,path,actual,savepoint,path,finally,cluster,client,shutdown,restore,std,out,and,std,err
CliFrontendSavepointTest -> @Test 	public void testDisposeWithJar() throws Exception;1521396722;Tests disposal with a JAR file.;@Test_	public void testDisposeWithJar() throws Exception {_		replaceStdOutAndStdErr()___		final CompletableFuture<String> disposeSavepointFuture = new CompletableFuture<>()___		final DisposeSavepointClusterClient clusterClient = new DisposeSavepointClusterClient(_			(String savepointPath, Time timeout) -> {_				disposeSavepointFuture.complete(savepointPath)__				return CompletableFuture.completedFuture(Acknowledge.get())__			}, getConfiguration())___		try {_			CliFrontend frontend = new MockedCliFrontend(clusterClient)___			_			File f = tmp.newFile()__			ZipOutputStream out = new ZipOutputStream(new FileOutputStream(f))__			out.close()___			final String disposePath = "any-path"__			String[] parameters = { "-d", disposePath, "-j", f.getAbsolutePath() }___			frontend.savepoint(parameters)___			final String actualSavepointPath = disposeSavepointFuture.get()___			assertEquals(disposePath, actualSavepointPath)__		} finally {_			clusterClient.shutdown()__			restoreStdOutAndStdErr()__		}_	};tests,disposal,with,a,jar,file;test,public,void,test,dispose,with,jar,throws,exception,replace,std,out,and,std,err,final,completable,future,string,dispose,savepoint,future,new,completable,future,final,dispose,savepoint,cluster,client,cluster,client,new,dispose,savepoint,cluster,client,string,savepoint,path,time,timeout,dispose,savepoint,future,complete,savepoint,path,return,completable,future,completed,future,acknowledge,get,get,configuration,try,cli,frontend,frontend,new,mocked,cli,frontend,cluster,client,file,f,tmp,new,file,zip,output,stream,out,new,zip,output,stream,new,file,output,stream,f,out,close,final,string,dispose,path,any,path,string,parameters,d,dispose,path,j,f,get,absolute,path,frontend,savepoint,parameters,final,string,actual,savepoint,path,dispose,savepoint,future,get,assert,equals,dispose,path,actual,savepoint,path,finally,cluster,client,shutdown,restore,std,out,and,std,err
CliFrontendSavepointTest -> @Test 	public void testDisposeWithJar() throws Exception;1522132482;Tests disposal with a JAR file.;@Test_	public void testDisposeWithJar() throws Exception {_		replaceStdOutAndStdErr()___		final CompletableFuture<String> disposeSavepointFuture = new CompletableFuture<>()___		final DisposeSavepointClusterClient clusterClient = new DisposeSavepointClusterClient(_			(String savepointPath) -> {_				disposeSavepointFuture.complete(savepointPath)__				return CompletableFuture.completedFuture(Acknowledge.get())__			}, getConfiguration())___		try {_			CliFrontend frontend = new MockedCliFrontend(clusterClient)___			_			File f = tmp.newFile()__			ZipOutputStream out = new ZipOutputStream(new FileOutputStream(f))__			out.close()___			final String disposePath = "any-path"__			String[] parameters = { "-d", disposePath, "-j", f.getAbsolutePath() }___			frontend.savepoint(parameters)___			final String actualSavepointPath = disposeSavepointFuture.get()___			assertEquals(disposePath, actualSavepointPath)__		} finally {_			clusterClient.shutdown()__			restoreStdOutAndStdErr()__		}_	};tests,disposal,with,a,jar,file;test,public,void,test,dispose,with,jar,throws,exception,replace,std,out,and,std,err,final,completable,future,string,dispose,savepoint,future,new,completable,future,final,dispose,savepoint,cluster,client,cluster,client,new,dispose,savepoint,cluster,client,string,savepoint,path,dispose,savepoint,future,complete,savepoint,path,return,completable,future,completed,future,acknowledge,get,get,configuration,try,cli,frontend,frontend,new,mocked,cli,frontend,cluster,client,file,f,tmp,new,file,zip,output,stream,out,new,zip,output,stream,new,file,output,stream,f,out,close,final,string,dispose,path,any,path,string,parameters,d,dispose,path,j,f,get,absolute,path,frontend,savepoint,parameters,final,string,actual,savepoint,path,dispose,savepoint,future,get,assert,equals,dispose,path,actual,savepoint,path,finally,cluster,client,shutdown,restore,std,out,and,std,err
CliFrontendSavepointTest -> @Test 	public void testDisposeWithJar() throws Exception;1538998760;Tests disposal with a JAR file.;@Test_	public void testDisposeWithJar() throws Exception {_		replaceStdOutAndStdErr()___		final CompletableFuture<String> disposeSavepointFuture = new CompletableFuture<>()___		final DisposeSavepointClusterClient clusterClient = new DisposeSavepointClusterClient(_			(String savepointPath) -> {_				disposeSavepointFuture.complete(savepointPath)__				return CompletableFuture.completedFuture(Acknowledge.get())__			}, getConfiguration())___		try {_			CliFrontend frontend = new MockedCliFrontend(clusterClient)___			_			File f = tmp.newFile()__			ZipOutputStream out = new ZipOutputStream(new FileOutputStream(f))__			out.close()___			final String disposePath = "any-path"__			String[] parameters = { "-d", disposePath, "-j", f.getAbsolutePath() }___			frontend.savepoint(parameters)___			final String actualSavepointPath = disposeSavepointFuture.get()___			assertEquals(disposePath, actualSavepointPath)__		} finally {_			clusterClient.shutdown()__			restoreStdOutAndStdErr()__		}_	};tests,disposal,with,a,jar,file;test,public,void,test,dispose,with,jar,throws,exception,replace,std,out,and,std,err,final,completable,future,string,dispose,savepoint,future,new,completable,future,final,dispose,savepoint,cluster,client,cluster,client,new,dispose,savepoint,cluster,client,string,savepoint,path,dispose,savepoint,future,complete,savepoint,path,return,completable,future,completed,future,acknowledge,get,get,configuration,try,cli,frontend,frontend,new,mocked,cli,frontend,cluster,client,file,f,tmp,new,file,zip,output,stream,out,new,zip,output,stream,new,file,output,stream,f,out,close,final,string,dispose,path,any,path,string,parameters,d,dispose,path,j,f,get,absolute,path,frontend,savepoint,parameters,final,string,actual,savepoint,path,dispose,savepoint,future,get,assert,equals,dispose,path,actual,savepoint,path,finally,cluster,client,shutdown,restore,std,out,and,std,err
CliFrontendSavepointTest -> @Test 	public void testDisposeWithJar() throws Exception;1549458282;Tests disposal with a JAR file.;@Test_	public void testDisposeWithJar() throws Exception {_		replaceStdOutAndStdErr()___		final CompletableFuture<String> disposeSavepointFuture = new CompletableFuture<>()___		final DisposeSavepointClusterClient clusterClient = new DisposeSavepointClusterClient(_			(String savepointPath) -> {_				disposeSavepointFuture.complete(savepointPath)__				return CompletableFuture.completedFuture(Acknowledge.get())__			}, getConfiguration())___		try {_			CliFrontend frontend = new MockedCliFrontend(clusterClient)___			_			File f = tmp.newFile()__			ZipOutputStream out = new ZipOutputStream(new FileOutputStream(f))__			out.close()___			final String disposePath = "any-path"__			String[] parameters = { "-d", disposePath, "-j", f.getAbsolutePath() }___			frontend.savepoint(parameters)___			final String actualSavepointPath = disposeSavepointFuture.get()___			assertEquals(disposePath, actualSavepointPath)__		} finally {_			clusterClient.shutdown()__			restoreStdOutAndStdErr()__		}_	};tests,disposal,with,a,jar,file;test,public,void,test,dispose,with,jar,throws,exception,replace,std,out,and,std,err,final,completable,future,string,dispose,savepoint,future,new,completable,future,final,dispose,savepoint,cluster,client,cluster,client,new,dispose,savepoint,cluster,client,string,savepoint,path,dispose,savepoint,future,complete,savepoint,path,return,completable,future,completed,future,acknowledge,get,get,configuration,try,cli,frontend,frontend,new,mocked,cli,frontend,cluster,client,file,f,tmp,new,file,zip,output,stream,out,new,zip,output,stream,new,file,output,stream,f,out,close,final,string,dispose,path,any,path,string,parameters,d,dispose,path,j,f,get,absolute,path,frontend,savepoint,parameters,final,string,actual,savepoint,path,dispose,savepoint,future,get,assert,equals,dispose,path,actual,savepoint,path,finally,cluster,client,shutdown,restore,std,out,and,std,err
