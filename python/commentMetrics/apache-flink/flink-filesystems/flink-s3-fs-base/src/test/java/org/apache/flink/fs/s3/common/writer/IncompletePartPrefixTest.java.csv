commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Test(expected = NullPointerException.class) public void nullObjectNameShouldThroughException() {     RecoverableMultiPartUploadImpl.createIncompletePartObjectNamePrefix(null). }
false;public;0;5;;@Test public void emptyInitialNameShouldSucceed() {     String objectNamePrefix = RecoverableMultiPartUploadImpl.createIncompletePartObjectNamePrefix("").     Assert.assertEquals("_tmp_", objectNamePrefix). }
false;public;0;5;;@Test public void nameWithoutSlashShouldSucceed() {     String objectNamePrefix = RecoverableMultiPartUploadImpl.createIncompletePartObjectNamePrefix("no_slash_path").     Assert.assertEquals("_no_slash_path_tmp_", objectNamePrefix). }
false;public;0;5;;@Test public void nameWithOnlySlashShouldSucceed() {     String objectNamePrefix = RecoverableMultiPartUploadImpl.createIncompletePartObjectNamePrefix("/").     Assert.assertEquals("/_tmp_", objectNamePrefix). }
false;public;0;5;;@Test public void normalPathShouldSucceed() {     String objectNamePrefix = RecoverableMultiPartUploadImpl.createIncompletePartObjectNamePrefix("/root/home/test-file").     Assert.assertEquals("/root/home/_test-file_tmp_", objectNamePrefix). }
