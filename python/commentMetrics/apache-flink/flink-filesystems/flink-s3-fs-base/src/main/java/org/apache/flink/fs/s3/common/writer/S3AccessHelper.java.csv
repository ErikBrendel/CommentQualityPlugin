# id;timestamp;commentText;codeText;commentWords;codeWords
S3AccessHelper -> CompleteMultipartUploadResult commitMultiPartUpload(String key, String uploadId, List<PartETag> partETags, long length, AtomicInteger errorCount) throws IOException_;1543940454;Finalizes a Multi-Part Upload.__@param key the key identifying the object we finished uploading._@param uploadId the id of the MPU._@param partETags the list of {@link PartETag ETags} associated with this MPU._@param length the size of the uploaded object._@param errorCount a counter that will be used to count any failed attempts to commit the MPU._@return The {@link CompleteMultipartUploadResult result} of the attempt to finalize the MPU._@throws IOException;CompleteMultipartUploadResult commitMultiPartUpload(String key, String uploadId, List<PartETag> partETags, long length, AtomicInteger errorCount) throws IOException_;finalizes,a,multi,part,upload,param,key,the,key,identifying,the,object,we,finished,uploading,param,upload,id,the,id,of,the,mpu,param,part,etags,the,list,of,link,part,etag,etags,associated,with,this,mpu,param,length,the,size,of,the,uploaded,object,param,error,count,a,counter,that,will,be,used,to,count,any,failed,attempts,to,commit,the,mpu,return,the,link,complete,multipart,upload,result,result,of,the,attempt,to,finalize,the,mpu,throws,ioexception;complete,multipart,upload,result,commit,multi,part,upload,string,key,string,upload,id,list,part,etag,part,etags,long,length,atomic,integer,error,count,throws,ioexception
S3AccessHelper -> CompleteMultipartUploadResult commitMultiPartUpload(String key, String uploadId, List<PartETag> partETags, long length, AtomicInteger errorCount) throws IOException_;1543940462;Finalizes a Multi-Part Upload.__@param key the key identifying the object we finished uploading._@param uploadId the id of the MPU._@param partETags the list of {@link PartETag ETags} associated with this MPU._@param length the size of the uploaded object._@param errorCount a counter that will be used to count any failed attempts to commit the MPU._@return The {@link CompleteMultipartUploadResult result} of the attempt to finalize the MPU._@throws IOException;CompleteMultipartUploadResult commitMultiPartUpload(String key, String uploadId, List<PartETag> partETags, long length, AtomicInteger errorCount) throws IOException_;finalizes,a,multi,part,upload,param,key,the,key,identifying,the,object,we,finished,uploading,param,upload,id,the,id,of,the,mpu,param,part,etags,the,list,of,link,part,etag,etags,associated,with,this,mpu,param,length,the,size,of,the,uploaded,object,param,error,count,a,counter,that,will,be,used,to,count,any,failed,attempts,to,commit,the,mpu,return,the,link,complete,multipart,upload,result,result,of,the,attempt,to,finalize,the,mpu,throws,ioexception;complete,multipart,upload,result,commit,multi,part,upload,string,key,string,upload,id,list,part,etag,part,etags,long,length,atomic,integer,error,count,throws,ioexception
S3AccessHelper -> CompleteMultipartUploadResult commitMultiPartUpload(String key, String uploadId, List<PartETag> partETags, long length, AtomicInteger errorCount) throws IOException_;1543940476;Finalizes a Multi-Part Upload.__@param key the key identifying the object we finished uploading._@param uploadId the id of the MPU._@param partETags the list of {@link PartETag ETags} associated with this MPU._@param length the size of the uploaded object._@param errorCount a counter that will be used to count any failed attempts to commit the MPU._@return The {@link CompleteMultipartUploadResult result} of the attempt to finalize the MPU._@throws IOException;CompleteMultipartUploadResult commitMultiPartUpload(String key, String uploadId, List<PartETag> partETags, long length, AtomicInteger errorCount) throws IOException_;finalizes,a,multi,part,upload,param,key,the,key,identifying,the,object,we,finished,uploading,param,upload,id,the,id,of,the,mpu,param,part,etags,the,list,of,link,part,etag,etags,associated,with,this,mpu,param,length,the,size,of,the,uploaded,object,param,error,count,a,counter,that,will,be,used,to,count,any,failed,attempts,to,commit,the,mpu,return,the,link,complete,multipart,upload,result,result,of,the,attempt,to,finalize,the,mpu,throws,ioexception;complete,multipart,upload,result,commit,multi,part,upload,string,key,string,upload,id,list,part,etag,part,etags,long,length,atomic,integer,error,count,throws,ioexception
S3AccessHelper -> CompleteMultipartUploadResult commitMultiPartUpload(String key, String uploadId, List<PartETag> partETags, long length, AtomicInteger errorCount) throws IOException_;1547635808;Finalizes a Multi-Part Upload.__@param key the key identifying the object we finished uploading._@param uploadId the id of the MPU._@param partETags the list of {@link PartETag ETags} associated with this MPU._@param length the size of the uploaded object._@param errorCount a counter that will be used to count any failed attempts to commit the MPU._@return The {@link CompleteMultipartUploadResult result} of the attempt to finalize the MPU._@throws IOException;CompleteMultipartUploadResult commitMultiPartUpload(String key, String uploadId, List<PartETag> partETags, long length, AtomicInteger errorCount) throws IOException_;finalizes,a,multi,part,upload,param,key,the,key,identifying,the,object,we,finished,uploading,param,upload,id,the,id,of,the,mpu,param,part,etags,the,list,of,link,part,etag,etags,associated,with,this,mpu,param,length,the,size,of,the,uploaded,object,param,error,count,a,counter,that,will,be,used,to,count,any,failed,attempts,to,commit,the,mpu,return,the,link,complete,multipart,upload,result,result,of,the,attempt,to,finalize,the,mpu,throws,ioexception;complete,multipart,upload,result,commit,multi,part,upload,string,key,string,upload,id,list,part,etag,part,etags,long,length,atomic,integer,error,count,throws,ioexception
S3AccessHelper -> long getObject(String key, File targetLocation) throws IOException_;1543940462;Gets the object associated with the provided {@code key} from S3 and_puts it in the provided {@code targetLocation}.__@param key the key of the object to fetch._@param targetLocation the file to read the object to._@return The number of bytes read._@throws IOException;long getObject(String key, File targetLocation) throws IOException_;gets,the,object,associated,with,the,provided,code,key,from,s3,and,puts,it,in,the,provided,code,target,location,param,key,the,key,of,the,object,to,fetch,param,target,location,the,file,to,read,the,object,to,return,the,number,of,bytes,read,throws,ioexception;long,get,object,string,key,file,target,location,throws,ioexception
S3AccessHelper -> long getObject(String key, File targetLocation) throws IOException_;1543940476;Gets the object associated with the provided {@code key} from S3 and_puts it in the provided {@code targetLocation}.__@param key the key of the object to fetch._@param targetLocation the file to read the object to._@return The number of bytes read._@throws IOException;long getObject(String key, File targetLocation) throws IOException_;gets,the,object,associated,with,the,provided,code,key,from,s3,and,puts,it,in,the,provided,code,target,location,param,key,the,key,of,the,object,to,fetch,param,target,location,the,file,to,read,the,object,to,return,the,number,of,bytes,read,throws,ioexception;long,get,object,string,key,file,target,location,throws,ioexception
S3AccessHelper -> long getObject(String key, File targetLocation) throws IOException_;1547635808;Gets the object associated with the provided {@code key} from S3 and_puts it in the provided {@code targetLocation}.__@param key the key of the object to fetch._@param targetLocation the file to read the object to._@return The number of bytes read._@throws IOException;long getObject(String key, File targetLocation) throws IOException_;gets,the,object,associated,with,the,provided,code,key,from,s3,and,puts,it,in,the,provided,code,target,location,param,key,the,key,of,the,object,to,fetch,param,target,location,the,file,to,read,the,object,to,return,the,number,of,bytes,read,throws,ioexception;long,get,object,string,key,file,target,location,throws,ioexception
S3AccessHelper -> UploadPartResult uploadPart(String key, String uploadId, int partNumber, InputStream file, long length) throws IOException_;1543940454;Uploads a part and associates it with the MPU with the provided {@code uploadId}.__@param key the key this MPU is associated with._@param uploadId the id of the MPU._@param partNumber the number of the part being uploaded (has to be in [1 ... 10000])._@param file the (local) file holding the part to be uploaded._@param length the length of the part._@return The {@link UploadPartResult result} of the attempt to upload the part._@throws IOException;UploadPartResult uploadPart(String key, String uploadId, int partNumber, InputStream file, long length) throws IOException_;uploads,a,part,and,associates,it,with,the,mpu,with,the,provided,code,upload,id,param,key,the,key,this,mpu,is,associated,with,param,upload,id,the,id,of,the,mpu,param,part,number,the,number,of,the,part,being,uploaded,has,to,be,in,1,10000,param,file,the,local,file,holding,the,part,to,be,uploaded,param,length,the,length,of,the,part,return,the,link,upload,part,result,result,of,the,attempt,to,upload,the,part,throws,ioexception;upload,part,result,upload,part,string,key,string,upload,id,int,part,number,input,stream,file,long,length,throws,ioexception
S3AccessHelper -> UploadPartResult uploadPart(String key, String uploadId, int partNumber, InputStream file, long length) throws IOException_;1543940462;Uploads a part and associates it with the MPU with the provided {@code uploadId}.__@param key the key this MPU is associated with._@param uploadId the id of the MPU._@param partNumber the number of the part being uploaded (has to be in [1 ... 10000])._@param file the (local) file holding the part to be uploaded._@param length the length of the part._@return The {@link UploadPartResult result} of the attempt to upload the part._@throws IOException;UploadPartResult uploadPart(String key, String uploadId, int partNumber, InputStream file, long length) throws IOException_;uploads,a,part,and,associates,it,with,the,mpu,with,the,provided,code,upload,id,param,key,the,key,this,mpu,is,associated,with,param,upload,id,the,id,of,the,mpu,param,part,number,the,number,of,the,part,being,uploaded,has,to,be,in,1,10000,param,file,the,local,file,holding,the,part,to,be,uploaded,param,length,the,length,of,the,part,return,the,link,upload,part,result,result,of,the,attempt,to,upload,the,part,throws,ioexception;upload,part,result,upload,part,string,key,string,upload,id,int,part,number,input,stream,file,long,length,throws,ioexception
S3AccessHelper -> UploadPartResult uploadPart(String key, String uploadId, int partNumber, InputStream file, long length) throws IOException_;1543940476;Uploads a part and associates it with the MPU with the provided {@code uploadId}.__@param key the key this MPU is associated with._@param uploadId the id of the MPU._@param partNumber the number of the part being uploaded (has to be in [1 ... 10000])._@param file the (local) file holding the part to be uploaded._@param length the length of the part._@return The {@link UploadPartResult result} of the attempt to upload the part._@throws IOException;UploadPartResult uploadPart(String key, String uploadId, int partNumber, InputStream file, long length) throws IOException_;uploads,a,part,and,associates,it,with,the,mpu,with,the,provided,code,upload,id,param,key,the,key,this,mpu,is,associated,with,param,upload,id,the,id,of,the,mpu,param,part,number,the,number,of,the,part,being,uploaded,has,to,be,in,1,10000,param,file,the,local,file,holding,the,part,to,be,uploaded,param,length,the,length,of,the,part,return,the,link,upload,part,result,result,of,the,attempt,to,upload,the,part,throws,ioexception;upload,part,result,upload,part,string,key,string,upload,id,int,part,number,input,stream,file,long,length,throws,ioexception
S3AccessHelper -> boolean deleteObject(String key) throws IOException_;1543940476;Deletes the object associated with the provided key.__@param key The key to be deleted._@return {@code true} if the resources were successfully freed, {@code false} otherwise_(e.g. the file to be deleted was not there)._@throws IOException;boolean deleteObject(String key) throws IOException_;deletes,the,object,associated,with,the,provided,key,param,key,the,key,to,be,deleted,return,code,true,if,the,resources,were,successfully,freed,code,false,otherwise,e,g,the,file,to,be,deleted,was,not,there,throws,ioexception;boolean,delete,object,string,key,throws,ioexception
S3AccessHelper -> boolean deleteObject(String key) throws IOException_;1547635808;Deletes the object associated with the provided key.__@param key The key to be deleted._@return {@code true} if the resources were successfully freed, {@code false} otherwise_(e.g. the file to be deleted was not there)._@throws IOException;boolean deleteObject(String key) throws IOException_;deletes,the,object,associated,with,the,provided,key,param,key,the,key,to,be,deleted,return,code,true,if,the,resources,were,successfully,freed,code,false,otherwise,e,g,the,file,to,be,deleted,was,not,there,throws,ioexception;boolean,delete,object,string,key,throws,ioexception
S3AccessHelper -> PutObjectResult putObject(String key, InputStream file, long length) throws IOException_;1543940462;Uploads an object to S3. Contrary to the {@link #uploadPart(String, String, int, InputStream, long)} method,_this object is not going to be associated to any MPU and, as such, it is not subject to the garbage collection_policies specified for your S3 bucket.__@param key the key used to identify this part._@param file the (local) file holding the data to be uploaded._@param length the size of the data to be uploaded._@return The {@link PutObjectResult result} of the attempt to stage the incomplete part._@throws IOException;PutObjectResult putObject(String key, InputStream file, long length) throws IOException_;uploads,an,object,to,s3,contrary,to,the,link,upload,part,string,string,int,input,stream,long,method,this,object,is,not,going,to,be,associated,to,any,mpu,and,as,such,it,is,not,subject,to,the,garbage,collection,policies,specified,for,your,s3,bucket,param,key,the,key,used,to,identify,this,part,param,file,the,local,file,holding,the,data,to,be,uploaded,param,length,the,size,of,the,data,to,be,uploaded,return,the,link,put,object,result,result,of,the,attempt,to,stage,the,incomplete,part,throws,ioexception;put,object,result,put,object,string,key,input,stream,file,long,length,throws,ioexception
S3AccessHelper -> PutObjectResult putObject(String key, InputStream file, long length) throws IOException_;1543940476;Uploads an object to S3. Contrary to the {@link #uploadPart(String, String, int, InputStream, long)} method,_this object is not going to be associated to any MPU and, as such, it is not subject to the garbage collection_policies specified for your S3 bucket.__@param key the key used to identify this part._@param file the (local) file holding the data to be uploaded._@param length the size of the data to be uploaded._@return The {@link PutObjectResult result} of the attempt to stage the incomplete part._@throws IOException;PutObjectResult putObject(String key, InputStream file, long length) throws IOException_;uploads,an,object,to,s3,contrary,to,the,link,upload,part,string,string,int,input,stream,long,method,this,object,is,not,going,to,be,associated,to,any,mpu,and,as,such,it,is,not,subject,to,the,garbage,collection,policies,specified,for,your,s3,bucket,param,key,the,key,used,to,identify,this,part,param,file,the,local,file,holding,the,data,to,be,uploaded,param,length,the,size,of,the,data,to,be,uploaded,return,the,link,put,object,result,result,of,the,attempt,to,stage,the,incomplete,part,throws,ioexception;put,object,result,put,object,string,key,input,stream,file,long,length,throws,ioexception
S3AccessHelper -> String startMultiPartUpload(String key) throws IOException_;1543940454;Initializes a Multi-Part Upload.__@param key the key whose value we want to upload in parts._@return The id of the initiated Multi-Part Upload which will be used during the uploading of the parts._@throws IOException;String startMultiPartUpload(String key) throws IOException_;initializes,a,multi,part,upload,param,key,the,key,whose,value,we,want,to,upload,in,parts,return,the,id,of,the,initiated,multi,part,upload,which,will,be,used,during,the,uploading,of,the,parts,throws,ioexception;string,start,multi,part,upload,string,key,throws,ioexception
S3AccessHelper -> String startMultiPartUpload(String key) throws IOException_;1543940462;Initializes a Multi-Part Upload.__@param key the key whose value we want to upload in parts._@return The id of the initiated Multi-Part Upload which will be used during the uploading of the parts._@throws IOException;String startMultiPartUpload(String key) throws IOException_;initializes,a,multi,part,upload,param,key,the,key,whose,value,we,want,to,upload,in,parts,return,the,id,of,the,initiated,multi,part,upload,which,will,be,used,during,the,uploading,of,the,parts,throws,ioexception;string,start,multi,part,upload,string,key,throws,ioexception
S3AccessHelper -> String startMultiPartUpload(String key) throws IOException_;1543940476;Initializes a Multi-Part Upload.__@param key the key whose value we want to upload in parts._@return The id of the initiated Multi-Part Upload which will be used during the uploading of the parts._@throws IOException;String startMultiPartUpload(String key) throws IOException_;initializes,a,multi,part,upload,param,key,the,key,whose,value,we,want,to,upload,in,parts,return,the,id,of,the,initiated,multi,part,upload,which,will,be,used,during,the,uploading,of,the,parts,throws,ioexception;string,start,multi,part,upload,string,key,throws,ioexception
S3AccessHelper -> String startMultiPartUpload(String key) throws IOException_;1547635808;Initializes a Multi-Part Upload.__@param key the key whose value we want to upload in parts._@return The id of the initiated Multi-Part Upload which will be used during the uploading of the parts._@throws IOException;String startMultiPartUpload(String key) throws IOException_;initializes,a,multi,part,upload,param,key,the,key,whose,value,we,want,to,upload,in,parts,return,the,id,of,the,initiated,multi,part,upload,which,will,be,used,during,the,uploading,of,the,parts,throws,ioexception;string,start,multi,part,upload,string,key,throws,ioexception
S3AccessHelper -> ObjectMetadata getObjectMetadata(String key) throws IOException_;1543940454;Fetches the metadata associated with a given key on S3.__@param key the key._@return The associated {@link ObjectMetadata}._@throws IOException;ObjectMetadata getObjectMetadata(String key) throws IOException_;fetches,the,metadata,associated,with,a,given,key,on,s3,param,key,the,key,return,the,associated,link,object,metadata,throws,ioexception;object,metadata,get,object,metadata,string,key,throws,ioexception
S3AccessHelper -> ObjectMetadata getObjectMetadata(String key) throws IOException_;1543940462;Fetches the metadata associated with a given key on S3.__@param key the key._@return The associated {@link ObjectMetadata}._@throws IOException;ObjectMetadata getObjectMetadata(String key) throws IOException_;fetches,the,metadata,associated,with,a,given,key,on,s3,param,key,the,key,return,the,associated,link,object,metadata,throws,ioexception;object,metadata,get,object,metadata,string,key,throws,ioexception
S3AccessHelper -> ObjectMetadata getObjectMetadata(String key) throws IOException_;1543940476;Fetches the metadata associated with a given key on S3.__@param key the key._@return The associated {@link ObjectMetadata}._@throws IOException;ObjectMetadata getObjectMetadata(String key) throws IOException_;fetches,the,metadata,associated,with,a,given,key,on,s3,param,key,the,key,return,the,associated,link,object,metadata,throws,ioexception;object,metadata,get,object,metadata,string,key,throws,ioexception
S3AccessHelper -> ObjectMetadata getObjectMetadata(String key) throws IOException_;1547635808;Fetches the metadata associated with a given key on S3.__@param key the key._@return The associated {@link ObjectMetadata}._@throws IOException;ObjectMetadata getObjectMetadata(String key) throws IOException_;fetches,the,metadata,associated,with,a,given,key,on,s3,param,key,the,key,return,the,associated,link,object,metadata,throws,ioexception;object,metadata,get,object,metadata,string,key,throws,ioexception
