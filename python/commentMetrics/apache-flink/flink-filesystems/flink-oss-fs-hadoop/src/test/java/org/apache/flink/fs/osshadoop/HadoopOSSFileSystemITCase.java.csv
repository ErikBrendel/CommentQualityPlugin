commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;13;;@BeforeClass public static void setup() throws IOException {     OSSTestCredentials.assumeCredentialsAvailable().     final Configuration conf = new Configuration().     conf.setString("fs.oss.endpoint", OSSTestCredentials.getOSSEndpoint()).     conf.setString("fs.oss.accessKeyId", OSSTestCredentials.getOSSAccessKey()).     conf.setString("fs.oss.accessKeySecret", OSSTestCredentials.getOSSSecretKey()).     FileSystem.initialize(conf).     basePath = new Path(OSSTestCredentials.getTestBucketUri() + TEST_DATA_DIR).     fs = basePath.getFileSystem().     deadline = 0. }
false;public;0;19;;@Test public void testShadedConfigurations() {     final Configuration conf = new Configuration().     conf.setString("fs.oss.endpoint", OSSTestCredentials.getOSSEndpoint()).     conf.setString("fs.oss.accessKeyId", OSSTestCredentials.getOSSAccessKey()).     conf.setString("fs.oss.accessKeySecret", OSSTestCredentials.getOSSSecretKey()).     conf.setString("fs.oss.credentials.provider", "org.apache.hadoop.fs.aliyun.oss.AliyunCredentialsProvider").     OSSFileSystemFactory ossfsFactory = new OSSFileSystemFactory().     ossfsFactory.configure(conf).     org.apache.hadoop.conf.Configuration configuration = ossfsFactory.getHadoopConfiguration().     // shaded     assertEquals("org.apache.flink.fs.shaded.hadoop3.org.apache.hadoop.fs.aliyun.oss.AliyunCredentialsProvider", configuration.get("fs.oss.credentials.provider")).     // should not shaded     assertEquals(OSSTestCredentials.getOSSEndpoint(), configuration.get("fs.oss.endpoint")).     assertEquals(OSSTestCredentials.getOSSAccessKey(), configuration.get("fs.oss.accessKeyId")).     assertEquals(OSSTestCredentials.getOSSSecretKey(), configuration.get("fs.oss.accessKeySecret")). }
