commented;modifiers;parameterAmount;loc;comment;code
true;public;0;19;/**  * This test validates that the factory can be instantiated and configured even  * when Hadoop classes are missing from the classpath.  */ ;/**  * This test validates that the factory can be instantiated and configured even  * when Hadoop classes are missing from the classpath.  */ @Test public void testHadoopFactoryInstantiationWithoutHadoop() throws Exception {     // we do reflection magic here to instantiate the test in another class     // loader, to make sure no hadoop classes are in the classpath     final String testClassName = "org.apache.flink.runtime.fs.hdfs.HadoopFreeTests".     URLClassLoader parent = (URLClassLoader) getClass().getClassLoader().     ClassLoader hadoopFreeClassLoader = new HadoopFreeClassLoader(parent).     Class<?> testClass = Class.forName(testClassName, false, hadoopFreeClassLoader).     Method m = testClass.getDeclaredMethod("test").     try {         m.invoke(null).     } catch (InvocationTargetException e) {         ExceptionUtils.rethrowException(e.getTargetException(), "exception in method").     } }
false;public;1;12;;@Override public Class<?> loadClass(String name) throws ClassNotFoundException {     if (name.startsWith("org.apache.hadoop")) {         throw new ClassNotFoundException(name).     } else if (name.startsWith("org.apache.log4j")) {         return properParent.loadClass(name).     } else {         return super.loadClass(name).     } }
