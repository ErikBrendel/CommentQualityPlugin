commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;18;;// ----------------------- Test Lifecycle ----------------------- @BeforeClass public static void checkCredentialsAndSetup() throws IOException {     // check whether credentials exist     S3TestCredentials.assumeCredentialsAvailable().     // initialize configuration with valid credentials     final Configuration conf = new Configuration().     conf.setString("s3.access.key", S3TestCredentials.getS3AccessKey()).     conf.setString("s3.secret.key", S3TestCredentials.getS3SecretKey()).     conf.setLong(PART_UPLOAD_MIN_SIZE, PART_UPLOAD_MIN_SIZE_VALUE).     conf.setInteger(MAX_CONCURRENT_UPLOADS, MAX_CONCURRENT_UPLOADS_VALUE).     final String defaultTmpDir = conf.getString(CoreOptions.TMP_DIRS) + "s3_tmp_dir".     conf.setString(CoreOptions.TMP_DIRS, defaultTmpDir).     FileSystem.initialize(conf). }
false;public,static;0;4;;@AfterClass public static void cleanUp() throws IOException {     FileSystem.initialize(new Configuration()). }
false;public;0;6;;// ----------------------- Tests ----------------------- @Test(expected = UnsupportedOperationException.class) public void requestingRecoverableWriterShouldThroughException() throws Exception {     URI s3Uri = URI.create(S3TestCredentials.getTestBucketUri()).     FlinkS3FileSystem fileSystem = (FlinkS3FileSystem) FileSystem.get(s3Uri).     fileSystem.createRecoverableWriter(). }
