commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isImmutableType() {     return false. }
false;public;0;4;;@Override public CharValue createInstance() {     return new CharValue(). }
false;public;1;4;;@Override public CharValue copy(CharValue from) {     return copy(from, new CharValue()). }
false;public;2;5;;@Override public CharValue copy(CharValue from, CharValue reuse) {     reuse.setValue(from.getValue()).     return reuse. }
false;public;0;4;;@Override public int getLength() {     return 2. }
false;public;2;4;;@Override public void serialize(CharValue record, DataOutputView target) throws IOException {     record.write(target). }
false;public;1;4;;@Override public CharValue deserialize(DataInputView source) throws IOException {     return deserialize(new CharValue(), source). }
false;public;2;5;;@Override public CharValue deserialize(CharValue reuse, DataInputView source) throws IOException {     reuse.read(source).     return reuse. }
false;public;2;4;;@Override public void copy(DataInputView source, DataOutputView target) throws IOException {     target.writeChar(source.readChar()). }
false;public;0;4;;@Override public TypeSerializerSnapshot<CharValue> snapshotConfiguration() {     return new CharValueSerializerSnapshot(). }
