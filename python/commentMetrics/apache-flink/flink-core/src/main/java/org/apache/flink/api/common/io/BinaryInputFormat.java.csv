# id;timestamp;commentText;codeText;commentWords;codeWords
BinaryInputFormat -> protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats) 			throws IOException;1405024514;Fill in the statistics. The last modification time and the total input size are prefilled.__@param files_The files that are associated with this block input format._@param stats_The pre-filled statistics.;protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats)_			throws IOException {_		if (files.isEmpty()) {_			return null__		}__		BlockInfo blockInfo = this.createBlockInfo()___		long totalCount = 0__		for (FileStatus file : files) {_			_			if (file.getLen() < blockInfo.getInfoSize()) {_				continue__			}__			FSDataInputStream fdis = file.getPath().getFileSystem().open(file.getPath(), blockInfo.getInfoSize())__			fdis.seek(file.getLen() - blockInfo.getInfoSize())___			DataInputStream input = new DataInputStream(fdis)__			blockInfo.read(new InputViewDataInputStreamWrapper(input))__			totalCount += blockInfo.getAccumulatedRecordCount()__		}__		final float avgWidth = totalCount == 0 ? 0 : ((float) stats.getTotalInputSize() / totalCount)__		return new SequentialStatistics(stats.getLastModificationTime(), stats.getTotalInputSize(), avgWidth,_			totalCount)__	};fill,in,the,statistics,the,last,modification,time,and,the,total,input,size,are,prefilled,param,files,the,files,that,are,associated,with,this,block,input,format,param,stats,the,pre,filled,statistics;protected,sequential,statistics,create,statistics,list,file,status,files,file,base,statistics,stats,throws,ioexception,if,files,is,empty,return,null,block,info,block,info,this,create,block,info,long,total,count,0,for,file,status,file,files,if,file,get,len,block,info,get,info,size,continue,fsdata,input,stream,fdis,file,get,path,get,file,system,open,file,get,path,block,info,get,info,size,fdis,seek,file,get,len,block,info,get,info,size,data,input,stream,input,new,data,input,stream,fdis,block,info,read,new,input,view,data,input,stream,wrapper,input,total,count,block,info,get,accumulated,record,count,final,float,avg,width,total,count,0,0,float,stats,get,total,input,size,total,count,return,new,sequential,statistics,stats,get,last,modification,time,stats,get,total,input,size,avg,width,total,count
BinaryInputFormat -> protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats) 			throws IOException;1405090423;Fill in the statistics. The last modification time and the total input size are prefilled.__@param files_The files that are associated with this block input format._@param stats_The pre-filled statistics.;protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats)_			throws IOException {_		if (files.isEmpty()) {_			return null__		}__		BlockInfo blockInfo = this.createBlockInfo()___		long totalCount = 0__		for (FileStatus file : files) {_			_			if (file.getLen() < blockInfo.getInfoSize()) {_				continue__			}__			FSDataInputStream fdis = file.getPath().getFileSystem().open(file.getPath(), blockInfo.getInfoSize())__			fdis.seek(file.getLen() - blockInfo.getInfoSize())___			DataInputStream input = new DataInputStream(fdis)__			blockInfo.read(new InputViewDataInputStreamWrapper(input))__			totalCount += blockInfo.getAccumulatedRecordCount()__		}__		final float avgWidth = totalCount == 0 ? 0 : ((float) stats.getTotalInputSize() / totalCount)__		return new SequentialStatistics(stats.getLastModificationTime(), stats.getTotalInputSize(), avgWidth,_			totalCount)__	};fill,in,the,statistics,the,last,modification,time,and,the,total,input,size,are,prefilled,param,files,the,files,that,are,associated,with,this,block,input,format,param,stats,the,pre,filled,statistics;protected,sequential,statistics,create,statistics,list,file,status,files,file,base,statistics,stats,throws,ioexception,if,files,is,empty,return,null,block,info,block,info,this,create,block,info,long,total,count,0,for,file,status,file,files,if,file,get,len,block,info,get,info,size,continue,fsdata,input,stream,fdis,file,get,path,get,file,system,open,file,get,path,block,info,get,info,size,fdis,seek,file,get,len,block,info,get,info,size,data,input,stream,input,new,data,input,stream,fdis,block,info,read,new,input,view,data,input,stream,wrapper,input,total,count,block,info,get,accumulated,record,count,final,float,avg,width,total,count,0,0,float,stats,get,total,input,size,total,count,return,new,sequential,statistics,stats,get,last,modification,time,stats,get,total,input,size,avg,width,total,count
BinaryInputFormat -> protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats) 			throws IOException;1409911022;Fill in the statistics. The last modification time and the total input size are prefilled.__@param files_The files that are associated with this block input format._@param stats_The pre-filled statistics.;protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats)_			throws IOException {_		if (files.isEmpty()) {_			return null__		}__		BlockInfo blockInfo = this.createBlockInfo()___		long totalCount = 0__		for (FileStatus file : files) {_			_			if (file.getLen() < blockInfo.getInfoSize()) {_				continue__			}__			FSDataInputStream fdis = file.getPath().getFileSystem().open(file.getPath(), blockInfo.getInfoSize())__			fdis.seek(file.getLen() - blockInfo.getInfoSize())___			DataInputStream input = new DataInputStream(fdis)__			blockInfo.read(new InputViewDataInputStreamWrapper(input))__			totalCount += blockInfo.getAccumulatedRecordCount()__		}__		final float avgWidth = totalCount == 0 ? 0 : ((float) stats.getTotalInputSize() / totalCount)__		return new SequentialStatistics(stats.getLastModificationTime(), stats.getTotalInputSize(), avgWidth,_			totalCount)__	};fill,in,the,statistics,the,last,modification,time,and,the,total,input,size,are,prefilled,param,files,the,files,that,are,associated,with,this,block,input,format,param,stats,the,pre,filled,statistics;protected,sequential,statistics,create,statistics,list,file,status,files,file,base,statistics,stats,throws,ioexception,if,files,is,empty,return,null,block,info,block,info,this,create,block,info,long,total,count,0,for,file,status,file,files,if,file,get,len,block,info,get,info,size,continue,fsdata,input,stream,fdis,file,get,path,get,file,system,open,file,get,path,block,info,get,info,size,fdis,seek,file,get,len,block,info,get,info,size,data,input,stream,input,new,data,input,stream,fdis,block,info,read,new,input,view,data,input,stream,wrapper,input,total,count,block,info,get,accumulated,record,count,final,float,avg,width,total,count,0,0,float,stats,get,total,input,size,total,count,return,new,sequential,statistics,stats,get,last,modification,time,stats,get,total,input,size,avg,width,total,count
BinaryInputFormat -> protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats) 			throws IOException;1411473593;Fill in the statistics. The last modification time and the total input size are prefilled.__@param files_The files that are associated with this block input format._@param stats_The pre-filled statistics.;protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats)_			throws IOException {_		if (files.isEmpty()) {_			return null__		}__		BlockInfo blockInfo = this.createBlockInfo()___		long totalCount = 0__		for (FileStatus file : files) {_			_			if (file.getLen() < blockInfo.getInfoSize()) {_				continue__			}__			FSDataInputStream fdis = file.getPath().getFileSystem().open(file.getPath(), blockInfo.getInfoSize())__			fdis.seek(file.getLen() - blockInfo.getInfoSize())___			DataInputStream input = new DataInputStream(fdis)__			blockInfo.read(new InputViewDataInputStreamWrapper(input))__			totalCount += blockInfo.getAccumulatedRecordCount()__		}__		final float avgWidth = totalCount == 0 ? 0 : ((float) stats.getTotalInputSize() / totalCount)__		return new SequentialStatistics(stats.getLastModificationTime(), stats.getTotalInputSize(), avgWidth,_			totalCount)__	};fill,in,the,statistics,the,last,modification,time,and,the,total,input,size,are,prefilled,param,files,the,files,that,are,associated,with,this,block,input,format,param,stats,the,pre,filled,statistics;protected,sequential,statistics,create,statistics,list,file,status,files,file,base,statistics,stats,throws,ioexception,if,files,is,empty,return,null,block,info,block,info,this,create,block,info,long,total,count,0,for,file,status,file,files,if,file,get,len,block,info,get,info,size,continue,fsdata,input,stream,fdis,file,get,path,get,file,system,open,file,get,path,block,info,get,info,size,fdis,seek,file,get,len,block,info,get,info,size,data,input,stream,input,new,data,input,stream,fdis,block,info,read,new,input,view,data,input,stream,wrapper,input,total,count,block,info,get,accumulated,record,count,final,float,avg,width,total,count,0,0,float,stats,get,total,input,size,total,count,return,new,sequential,statistics,stats,get,last,modification,time,stats,get,total,input,size,avg,width,total,count
BinaryInputFormat -> protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats) 			throws IOException;1416493892;Fill in the statistics. The last modification time and the total input size are prefilled.__@param files_The files that are associated with this block input format._@param stats_The pre-filled statistics.;protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats)_			throws IOException {_		if (files.isEmpty()) {_			return null__		}__		BlockInfo blockInfo = this.createBlockInfo()___		long totalCount = 0__		for (FileStatus file : files) {_			_			if (file.getLen() < blockInfo.getInfoSize()) {_				continue__			}__			FSDataInputStream fdis = file.getPath().getFileSystem().open(file.getPath(), blockInfo.getInfoSize())__			fdis.seek(file.getLen() - blockInfo.getInfoSize())___			DataInputStream input = new DataInputStream(fdis)__			blockInfo.read(new InputViewDataInputStreamWrapper(input))__			totalCount += blockInfo.getAccumulatedRecordCount()__		}__		final float avgWidth = totalCount == 0 ? 0 : ((float) stats.getTotalInputSize() / totalCount)__		return new SequentialStatistics(stats.getLastModificationTime(), stats.getTotalInputSize(), avgWidth,_			totalCount)__	};fill,in,the,statistics,the,last,modification,time,and,the,total,input,size,are,prefilled,param,files,the,files,that,are,associated,with,this,block,input,format,param,stats,the,pre,filled,statistics;protected,sequential,statistics,create,statistics,list,file,status,files,file,base,statistics,stats,throws,ioexception,if,files,is,empty,return,null,block,info,block,info,this,create,block,info,long,total,count,0,for,file,status,file,files,if,file,get,len,block,info,get,info,size,continue,fsdata,input,stream,fdis,file,get,path,get,file,system,open,file,get,path,block,info,get,info,size,fdis,seek,file,get,len,block,info,get,info,size,data,input,stream,input,new,data,input,stream,fdis,block,info,read,new,input,view,data,input,stream,wrapper,input,total,count,block,info,get,accumulated,record,count,final,float,avg,width,total,count,0,0,float,stats,get,total,input,size,total,count,return,new,sequential,statistics,stats,get,last,modification,time,stats,get,total,input,size,avg,width,total,count
BinaryInputFormat -> protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats) 			throws IOException;1416686270;Fill in the statistics. The last modification time and the total input size are prefilled.__@param files_The files that are associated with this block input format._@param stats_The pre-filled statistics.;protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats)_			throws IOException {_		if (files.isEmpty()) {_			return null__		}__		BlockInfo blockInfo = this.createBlockInfo()___		long totalCount = 0__		for (FileStatus file : files) {_			_			if (file.getLen() < blockInfo.getInfoSize()) {_				continue__			}__			FSDataInputStream fdis = file.getPath().getFileSystem().open(file.getPath(), blockInfo.getInfoSize())__			fdis.seek(file.getLen() - blockInfo.getInfoSize())___			DataInputStream input = new DataInputStream(fdis)__			blockInfo.read(new InputViewDataInputStreamWrapper(input))__			totalCount += blockInfo.getAccumulatedRecordCount()__		}__		final float avgWidth = totalCount == 0 ? 0 : ((float) stats.getTotalInputSize() / totalCount)__		return new SequentialStatistics(stats.getLastModificationTime(), stats.getTotalInputSize(), avgWidth,_			totalCount)__	};fill,in,the,statistics,the,last,modification,time,and,the,total,input,size,are,prefilled,param,files,the,files,that,are,associated,with,this,block,input,format,param,stats,the,pre,filled,statistics;protected,sequential,statistics,create,statistics,list,file,status,files,file,base,statistics,stats,throws,ioexception,if,files,is,empty,return,null,block,info,block,info,this,create,block,info,long,total,count,0,for,file,status,file,files,if,file,get,len,block,info,get,info,size,continue,fsdata,input,stream,fdis,file,get,path,get,file,system,open,file,get,path,block,info,get,info,size,fdis,seek,file,get,len,block,info,get,info,size,data,input,stream,input,new,data,input,stream,fdis,block,info,read,new,input,view,data,input,stream,wrapper,input,total,count,block,info,get,accumulated,record,count,final,float,avg,width,total,count,0,0,float,stats,get,total,input,size,total,count,return,new,sequential,statistics,stats,get,last,modification,time,stats,get,total,input,size,avg,width,total,count
BinaryInputFormat -> protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats) 			throws IOException;1450122912;Fill in the statistics. The last modification time and the total input size are prefilled.__@param files_The files that are associated with this block input format._@param stats_The pre-filled statistics.;protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats)_			throws IOException {_		if (files.isEmpty()) {_			return null__		}__		BlockInfo blockInfo = this.createBlockInfo()___		long totalCount = 0__		for (FileStatus file : files) {_			_			if (file.getLen() < blockInfo.getInfoSize()) {_				continue__			}__			FSDataInputStream fdis = file.getPath().getFileSystem().open(file.getPath(), blockInfo.getInfoSize())__			fdis.seek(file.getLen() - blockInfo.getInfoSize())__			_			blockInfo.read(new DataInputViewStreamWrapper(fdis))__			totalCount += blockInfo.getAccumulatedRecordCount()__		}__		final float avgWidth = totalCount == 0 ? 0 : ((float) stats.getTotalInputSize() / totalCount)__		return new SequentialStatistics(stats.getLastModificationTime(), stats.getTotalInputSize(), avgWidth,_			totalCount)__	};fill,in,the,statistics,the,last,modification,time,and,the,total,input,size,are,prefilled,param,files,the,files,that,are,associated,with,this,block,input,format,param,stats,the,pre,filled,statistics;protected,sequential,statistics,create,statistics,list,file,status,files,file,base,statistics,stats,throws,ioexception,if,files,is,empty,return,null,block,info,block,info,this,create,block,info,long,total,count,0,for,file,status,file,files,if,file,get,len,block,info,get,info,size,continue,fsdata,input,stream,fdis,file,get,path,get,file,system,open,file,get,path,block,info,get,info,size,fdis,seek,file,get,len,block,info,get,info,size,block,info,read,new,data,input,view,stream,wrapper,fdis,total,count,block,info,get,accumulated,record,count,final,float,avg,width,total,count,0,0,float,stats,get,total,input,size,total,count,return,new,sequential,statistics,stats,get,last,modification,time,stats,get,total,input,size,avg,width,total,count
BinaryInputFormat -> protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats) 			throws IOException;1452178883;Fill in the statistics. The last modification time and the total input size are prefilled.__@param files_The files that are associated with this block input format._@param stats_The pre-filled statistics.;protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats)_			throws IOException {_		if (files.isEmpty()) {_			return null__		}__		BlockInfo blockInfo = this.createBlockInfo()___		long totalCount = 0__		for (FileStatus file : files) {_			_			if (file.getLen() < blockInfo.getInfoSize()) {_				continue__			}__			FSDataInputStream fdis = file.getPath().getFileSystem().open(file.getPath(), blockInfo.getInfoSize())__			fdis.seek(file.getLen() - blockInfo.getInfoSize())__			_			blockInfo.read(new DataInputViewStreamWrapper(fdis))__			totalCount += blockInfo.getAccumulatedRecordCount()__		}__		final float avgWidth = totalCount == 0 ? 0 : ((float) stats.getTotalInputSize() / totalCount)__		return new SequentialStatistics(stats.getLastModificationTime(), stats.getTotalInputSize(), avgWidth,_			totalCount)__	};fill,in,the,statistics,the,last,modification,time,and,the,total,input,size,are,prefilled,param,files,the,files,that,are,associated,with,this,block,input,format,param,stats,the,pre,filled,statistics;protected,sequential,statistics,create,statistics,list,file,status,files,file,base,statistics,stats,throws,ioexception,if,files,is,empty,return,null,block,info,block,info,this,create,block,info,long,total,count,0,for,file,status,file,files,if,file,get,len,block,info,get,info,size,continue,fsdata,input,stream,fdis,file,get,path,get,file,system,open,file,get,path,block,info,get,info,size,fdis,seek,file,get,len,block,info,get,info,size,block,info,read,new,data,input,view,stream,wrapper,fdis,total,count,block,info,get,accumulated,record,count,final,float,avg,width,total,count,0,0,float,stats,get,total,input,size,total,count,return,new,sequential,statistics,stats,get,last,modification,time,stats,get,total,input,size,avg,width,total,count
BinaryInputFormat -> protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats) 			throws IOException;1452854661;Fill in the statistics. The last modification time and the total input size are prefilled.__@param files_The files that are associated with this block input format._@param stats_The pre-filled statistics.;protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats)_			throws IOException {_		if (files.isEmpty()) {_			return null__		}__		BlockInfo blockInfo = this.createBlockInfo()___		long totalCount = 0__		for (FileStatus file : files) {_			_			if (file.getLen() < blockInfo.getInfoSize()) {_				continue__			}__			FileSystem fs = file.getPath().getFileSystem()__			try (FSDataInputStream fdis = fs.open(file.getPath(), blockInfo.getInfoSize())) {_				fdis.seek(file.getLen() - blockInfo.getInfoSize())___				blockInfo.read(new DataInputViewStreamWrapper(fdis))__				totalCount += blockInfo.getAccumulatedRecordCount()__			}_		}__		final float avgWidth = totalCount == 0 ? 0 : ((float) stats.getTotalInputSize() / totalCount)__		return new SequentialStatistics(stats.getLastModificationTime(), stats.getTotalInputSize(), avgWidth,_			totalCount)__	};fill,in,the,statistics,the,last,modification,time,and,the,total,input,size,are,prefilled,param,files,the,files,that,are,associated,with,this,block,input,format,param,stats,the,pre,filled,statistics;protected,sequential,statistics,create,statistics,list,file,status,files,file,base,statistics,stats,throws,ioexception,if,files,is,empty,return,null,block,info,block,info,this,create,block,info,long,total,count,0,for,file,status,file,files,if,file,get,len,block,info,get,info,size,continue,file,system,fs,file,get,path,get,file,system,try,fsdata,input,stream,fdis,fs,open,file,get,path,block,info,get,info,size,fdis,seek,file,get,len,block,info,get,info,size,block,info,read,new,data,input,view,stream,wrapper,fdis,total,count,block,info,get,accumulated,record,count,final,float,avg,width,total,count,0,0,float,stats,get,total,input,size,total,count,return,new,sequential,statistics,stats,get,last,modification,time,stats,get,total,input,size,avg,width,total,count
BinaryInputFormat -> protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats) 			throws IOException;1453730836;Fill in the statistics. The last modification time and the total input size are prefilled.__@param files_The files that are associated with this block input format._@param stats_The pre-filled statistics.;protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats)_			throws IOException {_		if (files.isEmpty()) {_			return null__		}__		BlockInfo blockInfo = this.createBlockInfo()___		long totalCount = 0__		for (FileStatus file : files) {_			_			if (file.getLen() < blockInfo.getInfoSize()) {_				continue__			}__			FileSystem fs = file.getPath().getFileSystem()__			try (FSDataInputStream fdis = fs.open(file.getPath(), blockInfo.getInfoSize())) {_				fdis.seek(file.getLen() - blockInfo.getInfoSize())___				blockInfo.read(new DataInputViewStreamWrapper(fdis))__				totalCount += blockInfo.getAccumulatedRecordCount()__			}_		}__		final float avgWidth = totalCount == 0 ? 0 : ((float) stats.getTotalInputSize() / totalCount)__		return new SequentialStatistics(stats.getLastModificationTime(), stats.getTotalInputSize(), avgWidth,_			totalCount)__	};fill,in,the,statistics,the,last,modification,time,and,the,total,input,size,are,prefilled,param,files,the,files,that,are,associated,with,this,block,input,format,param,stats,the,pre,filled,statistics;protected,sequential,statistics,create,statistics,list,file,status,files,file,base,statistics,stats,throws,ioexception,if,files,is,empty,return,null,block,info,block,info,this,create,block,info,long,total,count,0,for,file,status,file,files,if,file,get,len,block,info,get,info,size,continue,file,system,fs,file,get,path,get,file,system,try,fsdata,input,stream,fdis,fs,open,file,get,path,block,info,get,info,size,fdis,seek,file,get,len,block,info,get,info,size,block,info,read,new,data,input,view,stream,wrapper,fdis,total,count,block,info,get,accumulated,record,count,final,float,avg,width,total,count,0,0,float,stats,get,total,input,size,total,count,return,new,sequential,statistics,stats,get,last,modification,time,stats,get,total,input,size,avg,width,total,count
BinaryInputFormat -> protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats) 			throws IOException;1465920682;Fill in the statistics. The last modification time and the total input size are prefilled.__@param files_The files that are associated with this block input format._@param stats_The pre-filled statistics.;protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats)_			throws IOException {_		if (files.isEmpty()) {_			return null__		}__		BlockInfo blockInfo = new BlockInfo()__		long totalCount = 0__		for (FileStatus file : files) {_			_			if (file.getLen() < blockInfo.getInfoSize()) {_				continue__			}__			FileSystem fs = file.getPath().getFileSystem()__			try (FSDataInputStream fdis = fs.open(file.getPath(), blockInfo.getInfoSize())) {_				fdis.seek(file.getLen() - blockInfo.getInfoSize())___				blockInfo.read(new DataInputViewStreamWrapper(fdis))__				totalCount += blockInfo.getAccumulatedRecordCount()__			}_		}__		final float avgWidth = totalCount == 0 ? 0 : ((float) stats.getTotalInputSize() / totalCount)__		return new SequentialStatistics(stats.getLastModificationTime(), stats.getTotalInputSize(), avgWidth,_			totalCount)__	};fill,in,the,statistics,the,last,modification,time,and,the,total,input,size,are,prefilled,param,files,the,files,that,are,associated,with,this,block,input,format,param,stats,the,pre,filled,statistics;protected,sequential,statistics,create,statistics,list,file,status,files,file,base,statistics,stats,throws,ioexception,if,files,is,empty,return,null,block,info,block,info,new,block,info,long,total,count,0,for,file,status,file,files,if,file,get,len,block,info,get,info,size,continue,file,system,fs,file,get,path,get,file,system,try,fsdata,input,stream,fdis,fs,open,file,get,path,block,info,get,info,size,fdis,seek,file,get,len,block,info,get,info,size,block,info,read,new,data,input,view,stream,wrapper,fdis,total,count,block,info,get,accumulated,record,count,final,float,avg,width,total,count,0,0,float,stats,get,total,input,size,total,count,return,new,sequential,statistics,stats,get,last,modification,time,stats,get,total,input,size,avg,width,total,count
BinaryInputFormat -> protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats) 			throws IOException;1466163122;Fill in the statistics. The last modification time and the total input size are prefilled.__@param files_The files that are associated with this block input format._@param stats_The pre-filled statistics.;protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats)_			throws IOException {_		if (files.isEmpty()) {_			return null__		}__		BlockInfo blockInfo = new BlockInfo()__		long totalCount = 0__		for (FileStatus file : files) {_			_			if (file.getLen() < blockInfo.getInfoSize()) {_				continue__			}__			FileSystem fs = file.getPath().getFileSystem()__			try (FSDataInputStream fdis = fs.open(file.getPath(), blockInfo.getInfoSize())) {_				fdis.seek(file.getLen() - blockInfo.getInfoSize())___				blockInfo.read(new DataInputViewStreamWrapper(fdis))__				totalCount += blockInfo.getAccumulatedRecordCount()__			}_		}__		final float avgWidth = totalCount == 0 ? 0 : ((float) stats.getTotalInputSize() / totalCount)__		return new SequentialStatistics(stats.getLastModificationTime(), stats.getTotalInputSize(), avgWidth,_			totalCount)__	};fill,in,the,statistics,the,last,modification,time,and,the,total,input,size,are,prefilled,param,files,the,files,that,are,associated,with,this,block,input,format,param,stats,the,pre,filled,statistics;protected,sequential,statistics,create,statistics,list,file,status,files,file,base,statistics,stats,throws,ioexception,if,files,is,empty,return,null,block,info,block,info,new,block,info,long,total,count,0,for,file,status,file,files,if,file,get,len,block,info,get,info,size,continue,file,system,fs,file,get,path,get,file,system,try,fsdata,input,stream,fdis,fs,open,file,get,path,block,info,get,info,size,fdis,seek,file,get,len,block,info,get,info,size,block,info,read,new,data,input,view,stream,wrapper,fdis,total,count,block,info,get,accumulated,record,count,final,float,avg,width,total,count,0,0,float,stats,get,total,input,size,total,count,return,new,sequential,statistics,stats,get,last,modification,time,stats,get,total,input,size,avg,width,total,count
BinaryInputFormat -> protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats) 			throws IOException;1468399420;Fill in the statistics. The last modification time and the total input size are prefilled.__@param files_The files that are associated with this block input format._@param stats_The pre-filled statistics.;protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats)_			throws IOException {_		if (files.isEmpty()) {_			return null__		}__		BlockInfo blockInfo = new BlockInfo()__		long totalCount = 0__		for (FileStatus file : files) {_			_			if (file.getLen() < blockInfo.getInfoSize()) {_				continue__			}__			FileSystem fs = file.getPath().getFileSystem()__			try (FSDataInputStream fdis = fs.open(file.getPath(), blockInfo.getInfoSize())) {_				fdis.seek(file.getLen() - blockInfo.getInfoSize())___				blockInfo.read(new DataInputViewStreamWrapper(fdis))__				totalCount += blockInfo.getAccumulatedRecordCount()__			}_		}__		final float avgWidth = totalCount == 0 ? 0 : ((float) stats.getTotalInputSize() / totalCount)__		return new SequentialStatistics(stats.getLastModificationTime(), stats.getTotalInputSize(), avgWidth,_			totalCount)__	};fill,in,the,statistics,the,last,modification,time,and,the,total,input,size,are,prefilled,param,files,the,files,that,are,associated,with,this,block,input,format,param,stats,the,pre,filled,statistics;protected,sequential,statistics,create,statistics,list,file,status,files,file,base,statistics,stats,throws,ioexception,if,files,is,empty,return,null,block,info,block,info,new,block,info,long,total,count,0,for,file,status,file,files,if,file,get,len,block,info,get,info,size,continue,file,system,fs,file,get,path,get,file,system,try,fsdata,input,stream,fdis,fs,open,file,get,path,block,info,get,info,size,fdis,seek,file,get,len,block,info,get,info,size,block,info,read,new,data,input,view,stream,wrapper,fdis,total,count,block,info,get,accumulated,record,count,final,float,avg,width,total,count,0,0,float,stats,get,total,input,size,total,count,return,new,sequential,statistics,stats,get,last,modification,time,stats,get,total,input,size,avg,width,total,count
BinaryInputFormat -> protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats) 			throws IOException;1469030375;Fill in the statistics. The last modification time and the total input size are prefilled.__@param files_The files that are associated with this block input format._@param stats_The pre-filled statistics.;protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats)_			throws IOException {_		if (files.isEmpty()) {_			return null__		}__		BlockInfo blockInfo = new BlockInfo()__		long totalCount = 0__		for (FileStatus file : files) {_			_			if (file.getLen() < blockInfo.getInfoSize()) {_				continue__			}__			FileSystem fs = file.getPath().getFileSystem()__			try (FSDataInputStream fdis = fs.open(file.getPath(), blockInfo.getInfoSize())) {_				fdis.seek(file.getLen() - blockInfo.getInfoSize())___				blockInfo.read(new DataInputViewStreamWrapper(fdis))__				totalCount += blockInfo.getAccumulatedRecordCount()__			}_		}__		final float avgWidth = totalCount == 0 ? 0 : ((float) stats.getTotalInputSize() / totalCount)__		return new SequentialStatistics(stats.getLastModificationTime(), stats.getTotalInputSize(), avgWidth,_			totalCount)__	};fill,in,the,statistics,the,last,modification,time,and,the,total,input,size,are,prefilled,param,files,the,files,that,are,associated,with,this,block,input,format,param,stats,the,pre,filled,statistics;protected,sequential,statistics,create,statistics,list,file,status,files,file,base,statistics,stats,throws,ioexception,if,files,is,empty,return,null,block,info,block,info,new,block,info,long,total,count,0,for,file,status,file,files,if,file,get,len,block,info,get,info,size,continue,file,system,fs,file,get,path,get,file,system,try,fsdata,input,stream,fdis,fs,open,file,get,path,block,info,get,info,size,fdis,seek,file,get,len,block,info,get,info,size,block,info,read,new,data,input,view,stream,wrapper,fdis,total,count,block,info,get,accumulated,record,count,final,float,avg,width,total,count,0,0,float,stats,get,total,input,size,total,count,return,new,sequential,statistics,stats,get,last,modification,time,stats,get,total,input,size,avg,width,total,count
BinaryInputFormat -> protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats) 			throws IOException;1511814440;Fill in the statistics. The last modification time and the total input size are prefilled.__@param files_The files that are associated with this block input format._@param stats_The pre-filled statistics.;protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats)_			throws IOException {_		if (files.isEmpty()) {_			return null__		}__		BlockInfo blockInfo = new BlockInfo()__		long totalCount = 0__		for (FileStatus file : files) {_			_			if (file.getLen() < blockInfo.getInfoSize()) {_				continue__			}__			FileSystem fs = file.getPath().getFileSystem()__			try (FSDataInputStream fdis = fs.open(file.getPath(), blockInfo.getInfoSize())) {_				fdis.seek(file.getLen() - blockInfo.getInfoSize())___				blockInfo.read(new DataInputViewStreamWrapper(fdis))__				totalCount += blockInfo.getAccumulatedRecordCount()__			}_		}__		final float avgWidth = totalCount == 0 ? 0 : ((float) stats.getTotalInputSize() / totalCount)__		return new SequentialStatistics(stats.getLastModificationTime(), stats.getTotalInputSize(), avgWidth,_			totalCount)__	};fill,in,the,statistics,the,last,modification,time,and,the,total,input,size,are,prefilled,param,files,the,files,that,are,associated,with,this,block,input,format,param,stats,the,pre,filled,statistics;protected,sequential,statistics,create,statistics,list,file,status,files,file,base,statistics,stats,throws,ioexception,if,files,is,empty,return,null,block,info,block,info,new,block,info,long,total,count,0,for,file,status,file,files,if,file,get,len,block,info,get,info,size,continue,file,system,fs,file,get,path,get,file,system,try,fsdata,input,stream,fdis,fs,open,file,get,path,block,info,get,info,size,fdis,seek,file,get,len,block,info,get,info,size,block,info,read,new,data,input,view,stream,wrapper,fdis,total,count,block,info,get,accumulated,record,count,final,float,avg,width,total,count,0,0,float,stats,get,total,input,size,total,count,return,new,sequential,statistics,stats,get,last,modification,time,stats,get,total,input,size,avg,width,total,count
BinaryInputFormat -> protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats) 			throws IOException;1518772855;Fill in the statistics. The last modification time and the total input size are prefilled.__@param files_The files that are associated with this block input format._@param stats_The pre-filled statistics.;protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats)_			throws IOException {_		if (files.isEmpty()) {_			return null__		}__		BlockInfo blockInfo = new BlockInfo()__		long totalCount = 0__		for (FileStatus file : files) {_			_			if (file.getLen() < blockInfo.getInfoSize()) {_				continue__			}__			FileSystem fs = file.getPath().getFileSystem()__			try (FSDataInputStream fdis = fs.open(file.getPath(), blockInfo.getInfoSize())) {_				fdis.seek(file.getLen() - blockInfo.getInfoSize())___				blockInfo.read(new DataInputViewStreamWrapper(fdis))__				totalCount += blockInfo.getAccumulatedRecordCount()__			}_		}__		final float avgWidth = totalCount == 0 ? 0 : ((float) stats.getTotalInputSize() / totalCount)__		return new SequentialStatistics(stats.getLastModificationTime(), stats.getTotalInputSize(), avgWidth,_			totalCount)__	};fill,in,the,statistics,the,last,modification,time,and,the,total,input,size,are,prefilled,param,files,the,files,that,are,associated,with,this,block,input,format,param,stats,the,pre,filled,statistics;protected,sequential,statistics,create,statistics,list,file,status,files,file,base,statistics,stats,throws,ioexception,if,files,is,empty,return,null,block,info,block,info,new,block,info,long,total,count,0,for,file,status,file,files,if,file,get,len,block,info,get,info,size,continue,file,system,fs,file,get,path,get,file,system,try,fsdata,input,stream,fdis,fs,open,file,get,path,block,info,get,info,size,fdis,seek,file,get,len,block,info,get,info,size,block,info,read,new,data,input,view,stream,wrapper,fdis,total,count,block,info,get,accumulated,record,count,final,float,avg,width,total,count,0,0,float,stats,get,total,input,size,total,count,return,new,sequential,statistics,stats,get,last,modification,time,stats,get,total,input,size,avg,width,total,count
BinaryInputFormat -> protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats) 			throws IOException;1518772855;Fill in the statistics. The last modification time and the total input size are prefilled.__@param files_The files that are associated with this block input format._@param stats_The pre-filled statistics.;protected SequentialStatistics createStatistics(List<FileStatus> files, FileBaseStatistics stats)_			throws IOException {_		if (files.isEmpty()) {_			return null__		}__		BlockInfo blockInfo = new BlockInfo()__		long totalCount = 0__		for (FileStatus file : files) {_			_			if (file.getLen() < blockInfo.getInfoSize()) {_				continue__			}__			FileSystem fs = file.getPath().getFileSystem()__			try (FSDataInputStream fdis = fs.open(file.getPath(), blockInfo.getInfoSize())) {_				fdis.seek(file.getLen() - blockInfo.getInfoSize())___				blockInfo.read(new DataInputViewStreamWrapper(fdis))__				totalCount += blockInfo.getAccumulatedRecordCount()__			}_		}__		final float avgWidth = totalCount == 0 ? 0 : ((float) stats.getTotalInputSize() / totalCount)__		return new SequentialStatistics(stats.getLastModificationTime(), stats.getTotalInputSize(), avgWidth,_			totalCount)__	};fill,in,the,statistics,the,last,modification,time,and,the,total,input,size,are,prefilled,param,files,the,files,that,are,associated,with,this,block,input,format,param,stats,the,pre,filled,statistics;protected,sequential,statistics,create,statistics,list,file,status,files,file,base,statistics,stats,throws,ioexception,if,files,is,empty,return,null,block,info,block,info,new,block,info,long,total,count,0,for,file,status,file,files,if,file,get,len,block,info,get,info,size,continue,file,system,fs,file,get,path,get,file,system,try,fsdata,input,stream,fdis,fs,open,file,get,path,block,info,get,info,size,fdis,seek,file,get,len,block,info,get,info,size,block,info,read,new,data,input,view,stream,wrapper,fdis,total,count,block,info,get,accumulated,record,count,final,float,avg,width,total,count,0,0,float,stats,get,total,input,size,total,count,return,new,sequential,statistics,stats,get,last,modification,time,stats,get,total,input,size,avg,width,total,count
