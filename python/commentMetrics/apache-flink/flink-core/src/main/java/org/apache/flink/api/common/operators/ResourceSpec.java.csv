# id;timestamp;commentText;codeText;commentWords;codeWords
ResourceSpec -> public ResourceSpec merge(ResourceSpec other);1486649520;Used by system internally to merge the other resources of chained operators_when generating the job graph or merge the resource consumed by state backend.__@param other Reference to resource to merge in._@return The new resource with merged values.;public ResourceSpec merge(ResourceSpec other) {_		ResourceSpec result = new ResourceSpec(_				Math.max(this.cpuCores, other.cpuCores),_				this.heapMemoryInMB + other.heapMemoryInMB,_				this.directMemoryInMB + other.directMemoryInMB,_				this.nativeMemoryInMB + other.nativeMemoryInMB,_				this.stateSizeInMB + other.stateSizeInMB)___		return  result__	};used,by,system,internally,to,merge,the,other,resources,of,chained,operators,when,generating,the,job,graph,or,merge,the,resource,consumed,by,state,backend,param,other,reference,to,resource,to,merge,in,return,the,new,resource,with,merged,values;public,resource,spec,merge,resource,spec,other,resource,spec,result,new,resource,spec,math,max,this,cpu,cores,other,cpu,cores,this,heap,memory,in,mb,other,heap,memory,in,mb,this,direct,memory,in,mb,other,direct,memory,in,mb,this,native,memory,in,mb,other,native,memory,in,mb,this,state,size,in,mb,other,state,size,in,mb,return,result
ResourceSpec -> public ResourceSpec merge(ResourceSpec other);1488304750;Used by system internally to merge the other resources of chained operators_when generating the job graph or merge the resource consumed by state backend.__@param other Reference to resource to merge in._@return The new resource with merged values.;public ResourceSpec merge(ResourceSpec other) {_		return new ResourceSpec(_				Math.max(this.cpuCores, other.cpuCores),_				this.heapMemoryInMB + other.heapMemoryInMB,_				this.directMemoryInMB + other.directMemoryInMB,_				this.nativeMemoryInMB + other.nativeMemoryInMB,_				this.stateSizeInMB + other.stateSizeInMB)__	};used,by,system,internally,to,merge,the,other,resources,of,chained,operators,when,generating,the,job,graph,or,merge,the,resource,consumed,by,state,backend,param,other,reference,to,resource,to,merge,in,return,the,new,resource,with,merged,values;public,resource,spec,merge,resource,spec,other,return,new,resource,spec,math,max,this,cpu,cores,other,cpu,cores,this,heap,memory,in,mb,other,heap,memory,in,mb,this,direct,memory,in,mb,other,direct,memory,in,mb,this,native,memory,in,mb,other,native,memory,in,mb,this,state,size,in,mb,other,state,size,in,mb
ResourceSpec -> public ResourceSpec merge(ResourceSpec other);1489671807;Used by system internally to merge the other resources of chained operators_when generating the job graph or merge the resource consumed by state backend.__@param other Reference to resource to merge in._@return The new resource with merged values.;public ResourceSpec merge(ResourceSpec other) {_		return new ResourceSpec(_				Math.max(this.cpuCores, other.cpuCores),_				this.heapMemoryInMB + other.heapMemoryInMB,_				this.directMemoryInMB + other.directMemoryInMB,_				this.nativeMemoryInMB + other.nativeMemoryInMB,_				this.stateSizeInMB + other.stateSizeInMB)__	};used,by,system,internally,to,merge,the,other,resources,of,chained,operators,when,generating,the,job,graph,or,merge,the,resource,consumed,by,state,backend,param,other,reference,to,resource,to,merge,in,return,the,new,resource,with,merged,values;public,resource,spec,merge,resource,spec,other,return,new,resource,spec,math,max,this,cpu,cores,other,cpu,cores,this,heap,memory,in,mb,other,heap,memory,in,mb,this,direct,memory,in,mb,other,direct,memory,in,mb,this,native,memory,in,mb,other,native,memory,in,mb,this,state,size,in,mb,other,state,size,in,mb
ResourceSpec -> public ResourceSpec merge(ResourceSpec other);1513261900;Used by system internally to merge the other resources of chained operators_when generating the job graph or merge the resource consumed by state backend.__@param other Reference to resource to merge in._@return The new resource with merged values.;public ResourceSpec merge(ResourceSpec other) {_		ResourceSpec target = new ResourceSpec(_				Math.max(this.cpuCores, other.cpuCores),_				this.heapMemoryInMB + other.heapMemoryInMB,_				this.directMemoryInMB + other.directMemoryInMB,_				this.nativeMemoryInMB + other.nativeMemoryInMB,_				this.stateSizeInMB + other.stateSizeInMB)__		target.extendedResources.putAll(extendedResources)__		for (Resource resource : other.extendedResources.values()) {_			target.extendedResources.merge(resource.name, resource, (v1, v2) -> v1.merge(v2))__		}_		return target__	};used,by,system,internally,to,merge,the,other,resources,of,chained,operators,when,generating,the,job,graph,or,merge,the,resource,consumed,by,state,backend,param,other,reference,to,resource,to,merge,in,return,the,new,resource,with,merged,values;public,resource,spec,merge,resource,spec,other,resource,spec,target,new,resource,spec,math,max,this,cpu,cores,other,cpu,cores,this,heap,memory,in,mb,other,heap,memory,in,mb,this,direct,memory,in,mb,other,direct,memory,in,mb,this,native,memory,in,mb,other,native,memory,in,mb,this,state,size,in,mb,other,state,size,in,mb,target,extended,resources,put,all,extended,resources,for,resource,resource,other,extended,resources,values,target,extended,resources,merge,resource,name,resource,v1,v2,v1,merge,v2,return,target
ResourceSpec -> public ResourceSpec merge(ResourceSpec other);1513261900;Used by system internally to merge the other resources of chained operators_when generating the job graph or merge the resource consumed by state backend.__@param other Reference to resource to merge in._@return The new resource with merged values.;public ResourceSpec merge(ResourceSpec other) {_		ResourceSpec target = new ResourceSpec(_				Math.max(this.cpuCores, other.cpuCores),_				this.heapMemoryInMB + other.heapMemoryInMB,_				this.directMemoryInMB + other.directMemoryInMB,_				this.nativeMemoryInMB + other.nativeMemoryInMB,_				this.stateSizeInMB + other.stateSizeInMB)__		target.extendedResources.putAll(extendedResources)__		for (Resource resource : other.extendedResources.values()) {_			target.extendedResources.merge(resource.name, resource, (v1, v2) -> v1.merge(v2))__		}_		return target__	};used,by,system,internally,to,merge,the,other,resources,of,chained,operators,when,generating,the,job,graph,or,merge,the,resource,consumed,by,state,backend,param,other,reference,to,resource,to,merge,in,return,the,new,resource,with,merged,values;public,resource,spec,merge,resource,spec,other,resource,spec,target,new,resource,spec,math,max,this,cpu,cores,other,cpu,cores,this,heap,memory,in,mb,other,heap,memory,in,mb,this,direct,memory,in,mb,other,direct,memory,in,mb,this,native,memory,in,mb,other,native,memory,in,mb,this,state,size,in,mb,other,state,size,in,mb,target,extended,resources,put,all,extended,resources,for,resource,resource,other,extended,resources,values,target,extended,resources,merge,resource,name,resource,v1,v2,v1,merge,v2,return,target
ResourceSpec -> public ResourceSpec merge(ResourceSpec other);1513263078;Used by system internally to merge the other resources of chained operators_when generating the job graph or merge the resource consumed by state backend.__@param other Reference to resource to merge in._@return The new resource with merged values.;public ResourceSpec merge(ResourceSpec other) {_		ResourceSpec target = new ResourceSpec(_				Math.max(this.cpuCores, other.cpuCores),_				this.heapMemoryInMB + other.heapMemoryInMB,_				this.directMemoryInMB + other.directMemoryInMB,_				this.nativeMemoryInMB + other.nativeMemoryInMB,_				this.stateSizeInMB + other.stateSizeInMB)__		target.extendedResources.putAll(extendedResources)__		for (Resource resource : other.extendedResources.values()) {_			target.extendedResources.merge(resource.name, resource, (v1, v2) -> v1.merge(v2))__		}_		return target__	};used,by,system,internally,to,merge,the,other,resources,of,chained,operators,when,generating,the,job,graph,or,merge,the,resource,consumed,by,state,backend,param,other,reference,to,resource,to,merge,in,return,the,new,resource,with,merged,values;public,resource,spec,merge,resource,spec,other,resource,spec,target,new,resource,spec,math,max,this,cpu,cores,other,cpu,cores,this,heap,memory,in,mb,other,heap,memory,in,mb,this,direct,memory,in,mb,other,direct,memory,in,mb,this,native,memory,in,mb,other,native,memory,in,mb,this,state,size,in,mb,other,state,size,in,mb,target,extended,resources,put,all,extended,resources,for,resource,resource,other,extended,resources,values,target,extended,resources,merge,resource,name,resource,v1,v2,v1,merge,v2,return,target
ResourceSpec -> public ResourceSpec merge(ResourceSpec other);1513265143;Used by system internally to merge the other resources of chained operators_when generating the job graph or merge the resource consumed by state backend.__@param other Reference to resource to merge in._@return The new resource with merged values.;public ResourceSpec merge(ResourceSpec other) {_		ResourceSpec target = new ResourceSpec(_				Math.max(this.cpuCores, other.cpuCores),_				this.heapMemoryInMB + other.heapMemoryInMB,_				this.directMemoryInMB + other.directMemoryInMB,_				this.nativeMemoryInMB + other.nativeMemoryInMB,_				this.stateSizeInMB + other.stateSizeInMB)__		target.extendedResources.putAll(extendedResources)__		for (Resource resource : other.extendedResources.values()) {_			target.extendedResources.merge(resource.getName(), resource, (v1, v2) -> v1.merge(v2))__		}_		return target__	};used,by,system,internally,to,merge,the,other,resources,of,chained,operators,when,generating,the,job,graph,or,merge,the,resource,consumed,by,state,backend,param,other,reference,to,resource,to,merge,in,return,the,new,resource,with,merged,values;public,resource,spec,merge,resource,spec,other,resource,spec,target,new,resource,spec,math,max,this,cpu,cores,other,cpu,cores,this,heap,memory,in,mb,other,heap,memory,in,mb,this,direct,memory,in,mb,other,direct,memory,in,mb,this,native,memory,in,mb,other,native,memory,in,mb,this,state,size,in,mb,other,state,size,in,mb,target,extended,resources,put,all,extended,resources,for,resource,resource,other,extended,resources,values,target,extended,resources,merge,resource,get,name,resource,v1,v2,v1,merge,v2,return,target
ResourceSpec -> public boolean lessThanOrEqual(@Nonnull ResourceSpec other);1486649520;Checks the current resource less than or equal with the other resource by comparing_all the fields in the resource.__@param other The resource to compare_@return True if current resource is less than or equal with the other resource, otherwise return false.;public boolean lessThanOrEqual(@Nonnull ResourceSpec other) {_		int cmp1 = Double.compare(this.cpuCores, other.cpuCores)__		int cmp2 = Integer.compare(this.heapMemoryInMB, other.heapMemoryInMB)__		int cmp3 = Integer.compare(this.directMemoryInMB, other.directMemoryInMB)__		int cmp4 = Integer.compare(this.nativeMemoryInMB, other.nativeMemoryInMB)__		int cmp5 = Integer.compare(this.stateSizeInMB, other.stateSizeInMB)__		if (cmp1 <= 0 && cmp2 <= 0 && cmp3 <= 0 && cmp4 <= 0 && cmp5 <= 0) {_			return true__		} else {_			return false__		}_	};checks,the,current,resource,less,than,or,equal,with,the,other,resource,by,comparing,all,the,fields,in,the,resource,param,other,the,resource,to,compare,return,true,if,current,resource,is,less,than,or,equal,with,the,other,resource,otherwise,return,false;public,boolean,less,than,or,equal,nonnull,resource,spec,other,int,cmp1,double,compare,this,cpu,cores,other,cpu,cores,int,cmp2,integer,compare,this,heap,memory,in,mb,other,heap,memory,in,mb,int,cmp3,integer,compare,this,direct,memory,in,mb,other,direct,memory,in,mb,int,cmp4,integer,compare,this,native,memory,in,mb,other,native,memory,in,mb,int,cmp5,integer,compare,this,state,size,in,mb,other,state,size,in,mb,if,cmp1,0,cmp2,0,cmp3,0,cmp4,0,cmp5,0,return,true,else,return,false
ResourceSpec -> public boolean lessThanOrEqual(@Nonnull ResourceSpec other);1488304750;Checks the current resource less than or equal with the other resource by comparing_all the fields in the resource.__@param other The resource to compare_@return True if current resource is less than or equal with the other resource, otherwise return false.;public boolean lessThanOrEqual(@Nonnull ResourceSpec other) {_		int cmp1 = Double.compare(this.cpuCores, other.cpuCores)__		int cmp2 = Integer.compare(this.heapMemoryInMB, other.heapMemoryInMB)__		int cmp3 = Integer.compare(this.directMemoryInMB, other.directMemoryInMB)__		int cmp4 = Integer.compare(this.nativeMemoryInMB, other.nativeMemoryInMB)__		int cmp5 = Integer.compare(this.stateSizeInMB, other.stateSizeInMB)__		return (cmp1 <= 0 && cmp2 <= 0 && cmp3 <= 0 && cmp4 <= 0 && cmp5 <= 0)__	};checks,the,current,resource,less,than,or,equal,with,the,other,resource,by,comparing,all,the,fields,in,the,resource,param,other,the,resource,to,compare,return,true,if,current,resource,is,less,than,or,equal,with,the,other,resource,otherwise,return,false;public,boolean,less,than,or,equal,nonnull,resource,spec,other,int,cmp1,double,compare,this,cpu,cores,other,cpu,cores,int,cmp2,integer,compare,this,heap,memory,in,mb,other,heap,memory,in,mb,int,cmp3,integer,compare,this,direct,memory,in,mb,other,direct,memory,in,mb,int,cmp4,integer,compare,this,native,memory,in,mb,other,native,memory,in,mb,int,cmp5,integer,compare,this,state,size,in,mb,other,state,size,in,mb,return,cmp1,0,cmp2,0,cmp3,0,cmp4,0,cmp5,0
ResourceSpec -> public boolean lessThanOrEqual(@Nonnull ResourceSpec other);1489671807;Checks the current resource less than or equal with the other resource by comparing_all the fields in the resource.__@param other The resource to compare_@return True if current resource is less than or equal with the other resource, otherwise return false.;public boolean lessThanOrEqual(@Nonnull ResourceSpec other) {_		int cmp1 = Double.compare(this.cpuCores, other.cpuCores)__		int cmp2 = Integer.compare(this.heapMemoryInMB, other.heapMemoryInMB)__		int cmp3 = Integer.compare(this.directMemoryInMB, other.directMemoryInMB)__		int cmp4 = Integer.compare(this.nativeMemoryInMB, other.nativeMemoryInMB)__		int cmp5 = Integer.compare(this.stateSizeInMB, other.stateSizeInMB)__		return (cmp1 <= 0 && cmp2 <= 0 && cmp3 <= 0 && cmp4 <= 0 && cmp5 <= 0)__	};checks,the,current,resource,less,than,or,equal,with,the,other,resource,by,comparing,all,the,fields,in,the,resource,param,other,the,resource,to,compare,return,true,if,current,resource,is,less,than,or,equal,with,the,other,resource,otherwise,return,false;public,boolean,less,than,or,equal,nonnull,resource,spec,other,int,cmp1,double,compare,this,cpu,cores,other,cpu,cores,int,cmp2,integer,compare,this,heap,memory,in,mb,other,heap,memory,in,mb,int,cmp3,integer,compare,this,direct,memory,in,mb,other,direct,memory,in,mb,int,cmp4,integer,compare,this,native,memory,in,mb,other,native,memory,in,mb,int,cmp5,integer,compare,this,state,size,in,mb,other,state,size,in,mb,return,cmp1,0,cmp2,0,cmp3,0,cmp4,0,cmp5,0
ResourceSpec -> public boolean lessThanOrEqual(@Nonnull ResourceSpec other);1513261900;Checks the current resource less than or equal with the other resource by comparing_all the fields in the resource.__@param other The resource to compare_@return True if current resource is less than or equal with the other resource, otherwise return false.;public boolean lessThanOrEqual(@Nonnull ResourceSpec other) {_		int cmp1 = Double.compare(this.cpuCores, other.cpuCores)__		int cmp2 = Integer.compare(this.heapMemoryInMB, other.heapMemoryInMB)__		int cmp3 = Integer.compare(this.directMemoryInMB, other.directMemoryInMB)__		int cmp4 = Integer.compare(this.nativeMemoryInMB, other.nativeMemoryInMB)__		int cmp5 = Integer.compare(this.stateSizeInMB, other.stateSizeInMB)__		if (cmp1 <= 0 && cmp2 <= 0 && cmp3 <= 0 && cmp4 <= 0 && cmp5 <= 0) {_			for (Resource resource : extendedResources.values()) {_				if (!other.extendedResources.containsKey(resource.name) ||_						!other.extendedResources.get(resource.name).type.equals(resource.type) ||_						other.extendedResources.get(resource.name).value < resource.value) {_					return false__				}_			}_			return true__		}_		return false__	};checks,the,current,resource,less,than,or,equal,with,the,other,resource,by,comparing,all,the,fields,in,the,resource,param,other,the,resource,to,compare,return,true,if,current,resource,is,less,than,or,equal,with,the,other,resource,otherwise,return,false;public,boolean,less,than,or,equal,nonnull,resource,spec,other,int,cmp1,double,compare,this,cpu,cores,other,cpu,cores,int,cmp2,integer,compare,this,heap,memory,in,mb,other,heap,memory,in,mb,int,cmp3,integer,compare,this,direct,memory,in,mb,other,direct,memory,in,mb,int,cmp4,integer,compare,this,native,memory,in,mb,other,native,memory,in,mb,int,cmp5,integer,compare,this,state,size,in,mb,other,state,size,in,mb,if,cmp1,0,cmp2,0,cmp3,0,cmp4,0,cmp5,0,for,resource,resource,extended,resources,values,if,other,extended,resources,contains,key,resource,name,other,extended,resources,get,resource,name,type,equals,resource,type,other,extended,resources,get,resource,name,value,resource,value,return,false,return,true,return,false
ResourceSpec -> public boolean lessThanOrEqual(@Nonnull ResourceSpec other);1513261900;Checks the current resource less than or equal with the other resource by comparing_all the fields in the resource.__@param other The resource to compare_@return True if current resource is less than or equal with the other resource, otherwise return false.;public boolean lessThanOrEqual(@Nonnull ResourceSpec other) {_		int cmp1 = Double.compare(this.cpuCores, other.cpuCores)__		int cmp2 = Integer.compare(this.heapMemoryInMB, other.heapMemoryInMB)__		int cmp3 = Integer.compare(this.directMemoryInMB, other.directMemoryInMB)__		int cmp4 = Integer.compare(this.nativeMemoryInMB, other.nativeMemoryInMB)__		int cmp5 = Integer.compare(this.stateSizeInMB, other.stateSizeInMB)__		if (cmp1 <= 0 && cmp2 <= 0 && cmp3 <= 0 && cmp4 <= 0 && cmp5 <= 0) {_			for (Resource resource : extendedResources.values()) {_				if (!other.extendedResources.containsKey(resource.name) ||_						!other.extendedResources.get(resource.name).type.equals(resource.type) ||_						other.extendedResources.get(resource.name).value < resource.value) {_					return false__				}_			}_			return true__		}_		return false__	};checks,the,current,resource,less,than,or,equal,with,the,other,resource,by,comparing,all,the,fields,in,the,resource,param,other,the,resource,to,compare,return,true,if,current,resource,is,less,than,or,equal,with,the,other,resource,otherwise,return,false;public,boolean,less,than,or,equal,nonnull,resource,spec,other,int,cmp1,double,compare,this,cpu,cores,other,cpu,cores,int,cmp2,integer,compare,this,heap,memory,in,mb,other,heap,memory,in,mb,int,cmp3,integer,compare,this,direct,memory,in,mb,other,direct,memory,in,mb,int,cmp4,integer,compare,this,native,memory,in,mb,other,native,memory,in,mb,int,cmp5,integer,compare,this,state,size,in,mb,other,state,size,in,mb,if,cmp1,0,cmp2,0,cmp3,0,cmp4,0,cmp5,0,for,resource,resource,extended,resources,values,if,other,extended,resources,contains,key,resource,name,other,extended,resources,get,resource,name,type,equals,resource,type,other,extended,resources,get,resource,name,value,resource,value,return,false,return,true,return,false
ResourceSpec -> public boolean lessThanOrEqual(@Nonnull ResourceSpec other);1513263078;Checks the current resource less than or equal with the other resource by comparing_all the fields in the resource.__@param other The resource to compare_@return True if current resource is less than or equal with the other resource, otherwise return false.;public boolean lessThanOrEqual(@Nonnull ResourceSpec other) {_		int cmp1 = Double.compare(this.cpuCores, other.cpuCores)__		int cmp2 = Integer.compare(this.heapMemoryInMB, other.heapMemoryInMB)__		int cmp3 = Integer.compare(this.directMemoryInMB, other.directMemoryInMB)__		int cmp4 = Integer.compare(this.nativeMemoryInMB, other.nativeMemoryInMB)__		int cmp5 = Integer.compare(this.stateSizeInMB, other.stateSizeInMB)__		if (cmp1 <= 0 && cmp2 <= 0 && cmp3 <= 0 && cmp4 <= 0 && cmp5 <= 0) {_			for (Resource resource : extendedResources.values()) {_				if (!other.extendedResources.containsKey(resource.name) ||_						!other.extendedResources.get(resource.name).type.equals(resource.type) ||_						other.extendedResources.get(resource.name).value < resource.value) {_					return false__				}_			}_			return true__		}_		return false__	};checks,the,current,resource,less,than,or,equal,with,the,other,resource,by,comparing,all,the,fields,in,the,resource,param,other,the,resource,to,compare,return,true,if,current,resource,is,less,than,or,equal,with,the,other,resource,otherwise,return,false;public,boolean,less,than,or,equal,nonnull,resource,spec,other,int,cmp1,double,compare,this,cpu,cores,other,cpu,cores,int,cmp2,integer,compare,this,heap,memory,in,mb,other,heap,memory,in,mb,int,cmp3,integer,compare,this,direct,memory,in,mb,other,direct,memory,in,mb,int,cmp4,integer,compare,this,native,memory,in,mb,other,native,memory,in,mb,int,cmp5,integer,compare,this,state,size,in,mb,other,state,size,in,mb,if,cmp1,0,cmp2,0,cmp3,0,cmp4,0,cmp5,0,for,resource,resource,extended,resources,values,if,other,extended,resources,contains,key,resource,name,other,extended,resources,get,resource,name,type,equals,resource,type,other,extended,resources,get,resource,name,value,resource,value,return,false,return,true,return,false
ResourceSpec -> public boolean lessThanOrEqual(@Nonnull ResourceSpec other);1513265143;Checks the current resource less than or equal with the other resource by comparing_all the fields in the resource.__@param other The resource to compare_@return True if current resource is less than or equal with the other resource, otherwise return false.;public boolean lessThanOrEqual(@Nonnull ResourceSpec other) {_		int cmp1 = Double.compare(this.cpuCores, other.cpuCores)__		int cmp2 = Integer.compare(this.heapMemoryInMB, other.heapMemoryInMB)__		int cmp3 = Integer.compare(this.directMemoryInMB, other.directMemoryInMB)__		int cmp4 = Integer.compare(this.nativeMemoryInMB, other.nativeMemoryInMB)__		int cmp5 = Integer.compare(this.stateSizeInMB, other.stateSizeInMB)__		if (cmp1 <= 0 && cmp2 <= 0 && cmp3 <= 0 && cmp4 <= 0 && cmp5 <= 0) {_			for (Resource resource : extendedResources.values()) {_				if (!other.extendedResources.containsKey(resource.getName()) ||_					other.extendedResources.get(resource.getName()).getResourceAggregateType() != resource.getResourceAggregateType() ||_						other.extendedResources.get(resource.getName()).getValue() < resource.getValue()) {_					return false__				}_			}_			return true__		}_		return false__	};checks,the,current,resource,less,than,or,equal,with,the,other,resource,by,comparing,all,the,fields,in,the,resource,param,other,the,resource,to,compare,return,true,if,current,resource,is,less,than,or,equal,with,the,other,resource,otherwise,return,false;public,boolean,less,than,or,equal,nonnull,resource,spec,other,int,cmp1,double,compare,this,cpu,cores,other,cpu,cores,int,cmp2,integer,compare,this,heap,memory,in,mb,other,heap,memory,in,mb,int,cmp3,integer,compare,this,direct,memory,in,mb,other,direct,memory,in,mb,int,cmp4,integer,compare,this,native,memory,in,mb,other,native,memory,in,mb,int,cmp5,integer,compare,this,state,size,in,mb,other,state,size,in,mb,if,cmp1,0,cmp2,0,cmp3,0,cmp4,0,cmp5,0,for,resource,resource,extended,resources,values,if,other,extended,resources,contains,key,resource,get,name,other,extended,resources,get,resource,get,name,get,resource,aggregate,type,resource,get,resource,aggregate,type,other,extended,resources,get,resource,get,name,get,value,resource,get,value,return,false,return,true,return,false
ResourceSpec -> Resource -> protected abstract Resource create(double value, ResourceAggregateType type)_;1513261900;Create a resource of the same resource type__@param value The value of the resource_@param type The aggregate type of the resource_@return A new instance of the sub resource;protected abstract Resource create(double value, ResourceAggregateType type)_;create,a,resource,of,the,same,resource,type,param,value,the,value,of,the,resource,param,type,the,aggregate,type,of,the,resource,return,a,new,instance,of,the,sub,resource;protected,abstract,resource,create,double,value,resource,aggregate,type,type
ResourceSpec -> Resource -> protected abstract Resource create(double value, ResourceAggregateType type)_;1513261900;Create a resource of the same resource type.__@param value The value of the resource_@param type The aggregate type of the resource_@return A new instance of the sub resource;protected abstract Resource create(double value, ResourceAggregateType type)_;create,a,resource,of,the,same,resource,type,param,value,the,value,of,the,resource,param,type,the,aggregate,type,of,the,resource,return,a,new,instance,of,the,sub,resource;protected,abstract,resource,create,double,value,resource,aggregate,type,type
ResourceSpec -> Resource -> protected abstract Resource create(double value, ResourceAggregateType type)_;1513263078;Create a resource of the same resource type.__@param value The value of the resource_@param type The aggregate type of the resource_@return A new instance of the sub resource;protected abstract Resource create(double value, ResourceAggregateType type)_;create,a,resource,of,the,same,resource,type,param,value,the,value,of,the,resource,param,type,the,aggregate,type,of,the,resource,return,a,new,instance,of,the,sub,resource;protected,abstract,resource,create,double,value,resource,aggregate,type,type
ResourceSpec -> public ResourceSpec( 			double cpuCores, 			int heapMemoryInMB, 			int directMemoryInMB, 			int nativeMemoryInMB, 			int stateSizeInMB);1486649520;Creates a new ResourceSpec with full resources.__@param cpuCores The number of CPU cores (possibly fractional, i.e., 0.2 cores)_@param heapMemoryInMB The size of the java heap memory, in megabytes._@param directMemoryInMB The size of the java nio direct memory, in megabytes._@param nativeMemoryInMB The size of the native memory, in megabytes._@param stateSizeInMB The state size for storing in checkpoint.;public ResourceSpec(_			double cpuCores,_			int heapMemoryInMB,_			int directMemoryInMB,_			int nativeMemoryInMB,_			int stateSizeInMB) {_		this.cpuCores = cpuCores__		this.heapMemoryInMB = heapMemoryInMB__		this.directMemoryInMB = directMemoryInMB__		this.nativeMemoryInMB = nativeMemoryInMB__		this.stateSizeInMB = stateSizeInMB__	};creates,a,new,resource,spec,with,full,resources,param,cpu,cores,the,number,of,cpu,cores,possibly,fractional,i,e,0,2,cores,param,heap,memory,in,mb,the,size,of,the,java,heap,memory,in,megabytes,param,direct,memory,in,mb,the,size,of,the,java,nio,direct,memory,in,megabytes,param,native,memory,in,mb,the,size,of,the,native,memory,in,megabytes,param,state,size,in,mb,the,state,size,for,storing,in,checkpoint;public,resource,spec,double,cpu,cores,int,heap,memory,in,mb,int,direct,memory,in,mb,int,native,memory,in,mb,int,state,size,in,mb,this,cpu,cores,cpu,cores,this,heap,memory,in,mb,heap,memory,in,mb,this,direct,memory,in,mb,direct,memory,in,mb,this,native,memory,in,mb,native,memory,in,mb,this,state,size,in,mb,state,size,in,mb
ResourceSpec -> public ResourceSpec( 			double cpuCores, 			int heapMemoryInMB, 			int directMemoryInMB, 			int nativeMemoryInMB, 			int stateSizeInMB);1488304750;Creates a new ResourceSpec with full resources.__@param cpuCores The number of CPU cores (possibly fractional, i.e., 0.2 cores)_@param heapMemoryInMB The size of the java heap memory, in megabytes._@param directMemoryInMB The size of the java nio direct memory, in megabytes._@param nativeMemoryInMB The size of the native memory, in megabytes._@param stateSizeInMB The state size for storing in checkpoint.;public ResourceSpec(_			double cpuCores,_			int heapMemoryInMB,_			int directMemoryInMB,_			int nativeMemoryInMB,_			int stateSizeInMB) {_		this.cpuCores = cpuCores__		this.heapMemoryInMB = heapMemoryInMB__		this.directMemoryInMB = directMemoryInMB__		this.nativeMemoryInMB = nativeMemoryInMB__		this.stateSizeInMB = stateSizeInMB__	};creates,a,new,resource,spec,with,full,resources,param,cpu,cores,the,number,of,cpu,cores,possibly,fractional,i,e,0,2,cores,param,heap,memory,in,mb,the,size,of,the,java,heap,memory,in,megabytes,param,direct,memory,in,mb,the,size,of,the,java,nio,direct,memory,in,megabytes,param,native,memory,in,mb,the,size,of,the,native,memory,in,megabytes,param,state,size,in,mb,the,state,size,for,storing,in,checkpoint;public,resource,spec,double,cpu,cores,int,heap,memory,in,mb,int,direct,memory,in,mb,int,native,memory,in,mb,int,state,size,in,mb,this,cpu,cores,cpu,cores,this,heap,memory,in,mb,heap,memory,in,mb,this,direct,memory,in,mb,direct,memory,in,mb,this,native,memory,in,mb,native,memory,in,mb,this,state,size,in,mb,state,size,in,mb
ResourceSpec -> public ResourceSpec( 			double cpuCores, 			int heapMemoryInMB, 			int directMemoryInMB, 			int nativeMemoryInMB, 			int stateSizeInMB);1489671807;Creates a new ResourceSpec with full resources.__@param cpuCores The number of CPU cores (possibly fractional, i.e., 0.2 cores)_@param heapMemoryInMB The size of the java heap memory, in megabytes._@param directMemoryInMB The size of the java nio direct memory, in megabytes._@param nativeMemoryInMB The size of the native memory, in megabytes._@param stateSizeInMB The state size for storing in checkpoint.;public ResourceSpec(_			double cpuCores,_			int heapMemoryInMB,_			int directMemoryInMB,_			int nativeMemoryInMB,_			int stateSizeInMB) {_		this.cpuCores = cpuCores__		this.heapMemoryInMB = heapMemoryInMB__		this.directMemoryInMB = directMemoryInMB__		this.nativeMemoryInMB = nativeMemoryInMB__		this.stateSizeInMB = stateSizeInMB__	};creates,a,new,resource,spec,with,full,resources,param,cpu,cores,the,number,of,cpu,cores,possibly,fractional,i,e,0,2,cores,param,heap,memory,in,mb,the,size,of,the,java,heap,memory,in,megabytes,param,direct,memory,in,mb,the,size,of,the,java,nio,direct,memory,in,megabytes,param,native,memory,in,mb,the,size,of,the,native,memory,in,megabytes,param,state,size,in,mb,the,state,size,for,storing,in,checkpoint;public,resource,spec,double,cpu,cores,int,heap,memory,in,mb,int,direct,memory,in,mb,int,native,memory,in,mb,int,state,size,in,mb,this,cpu,cores,cpu,cores,this,heap,memory,in,mb,heap,memory,in,mb,this,direct,memory,in,mb,direct,memory,in,mb,this,native,memory,in,mb,native,memory,in,mb,this,state,size,in,mb,state,size,in,mb
ResourceSpec -> protected ResourceSpec( 			double cpuCores, 			int heapMemoryInMB, 			int directMemoryInMB, 			int nativeMemoryInMB, 			int stateSizeInMB, 			Resource... extendedResources);1513261900;Creates a new ResourceSpec with full resources.__@param cpuCores The number of CPU cores (possibly fractional, i.e., 0.2 cores)_@param heapMemoryInMB The size of the java heap memory, in megabytes._@param directMemoryInMB The size of the java nio direct memory, in megabytes._@param nativeMemoryInMB The size of the native memory, in megabytes._@param stateSizeInMB The state size for storing in checkpoint._@param extendedResources The extended resources, associated with the resource manager used;protected ResourceSpec(_			double cpuCores,_			int heapMemoryInMB,_			int directMemoryInMB,_			int nativeMemoryInMB,_			int stateSizeInMB,_			Resource... extendedResources) {_		this.cpuCores = cpuCores__		this.heapMemoryInMB = heapMemoryInMB__		this.directMemoryInMB = directMemoryInMB__		this.nativeMemoryInMB = nativeMemoryInMB__		this.stateSizeInMB = stateSizeInMB__		for (Resource resource : extendedResources) {_			if (resource != null) {_				this.extendedResources.put(resource.name, resource)__			}_		}_	};creates,a,new,resource,spec,with,full,resources,param,cpu,cores,the,number,of,cpu,cores,possibly,fractional,i,e,0,2,cores,param,heap,memory,in,mb,the,size,of,the,java,heap,memory,in,megabytes,param,direct,memory,in,mb,the,size,of,the,java,nio,direct,memory,in,megabytes,param,native,memory,in,mb,the,size,of,the,native,memory,in,megabytes,param,state,size,in,mb,the,state,size,for,storing,in,checkpoint,param,extended,resources,the,extended,resources,associated,with,the,resource,manager,used;protected,resource,spec,double,cpu,cores,int,heap,memory,in,mb,int,direct,memory,in,mb,int,native,memory,in,mb,int,state,size,in,mb,resource,extended,resources,this,cpu,cores,cpu,cores,this,heap,memory,in,mb,heap,memory,in,mb,this,direct,memory,in,mb,direct,memory,in,mb,this,native,memory,in,mb,native,memory,in,mb,this,state,size,in,mb,state,size,in,mb,for,resource,resource,extended,resources,if,resource,null,this,extended,resources,put,resource,name,resource
ResourceSpec -> protected ResourceSpec( 			double cpuCores, 			int heapMemoryInMB, 			int directMemoryInMB, 			int nativeMemoryInMB, 			int stateSizeInMB, 			Resource... extendedResources);1513261900;Creates a new ResourceSpec with full resources.__@param cpuCores The number of CPU cores (possibly fractional, i.e., 0.2 cores)_@param heapMemoryInMB The size of the java heap memory, in megabytes._@param directMemoryInMB The size of the java nio direct memory, in megabytes._@param nativeMemoryInMB The size of the native memory, in megabytes._@param stateSizeInMB The state size for storing in checkpoint._@param extendedResources The extended resources, associated with the resource manager used;protected ResourceSpec(_			double cpuCores,_			int heapMemoryInMB,_			int directMemoryInMB,_			int nativeMemoryInMB,_			int stateSizeInMB,_			Resource... extendedResources) {_		this.cpuCores = cpuCores__		this.heapMemoryInMB = heapMemoryInMB__		this.directMemoryInMB = directMemoryInMB__		this.nativeMemoryInMB = nativeMemoryInMB__		this.stateSizeInMB = stateSizeInMB__		for (Resource resource : extendedResources) {_			if (resource != null) {_				this.extendedResources.put(resource.name, resource)__			}_		}_	};creates,a,new,resource,spec,with,full,resources,param,cpu,cores,the,number,of,cpu,cores,possibly,fractional,i,e,0,2,cores,param,heap,memory,in,mb,the,size,of,the,java,heap,memory,in,megabytes,param,direct,memory,in,mb,the,size,of,the,java,nio,direct,memory,in,megabytes,param,native,memory,in,mb,the,size,of,the,native,memory,in,megabytes,param,state,size,in,mb,the,state,size,for,storing,in,checkpoint,param,extended,resources,the,extended,resources,associated,with,the,resource,manager,used;protected,resource,spec,double,cpu,cores,int,heap,memory,in,mb,int,direct,memory,in,mb,int,native,memory,in,mb,int,state,size,in,mb,resource,extended,resources,this,cpu,cores,cpu,cores,this,heap,memory,in,mb,heap,memory,in,mb,this,direct,memory,in,mb,direct,memory,in,mb,this,native,memory,in,mb,native,memory,in,mb,this,state,size,in,mb,state,size,in,mb,for,resource,resource,extended,resources,if,resource,null,this,extended,resources,put,resource,name,resource
ResourceSpec -> protected ResourceSpec( 			double cpuCores, 			int heapMemoryInMB, 			int directMemoryInMB, 			int nativeMemoryInMB, 			int stateSizeInMB, 			Resource... extendedResources);1513263078;Creates a new ResourceSpec with full resources.__@param cpuCores The number of CPU cores (possibly fractional, i.e., 0.2 cores)_@param heapMemoryInMB The size of the java heap memory, in megabytes._@param directMemoryInMB The size of the java nio direct memory, in megabytes._@param nativeMemoryInMB The size of the native memory, in megabytes._@param stateSizeInMB The state size for storing in checkpoint._@param extendedResources The extended resources, associated with the resource manager used;protected ResourceSpec(_			double cpuCores,_			int heapMemoryInMB,_			int directMemoryInMB,_			int nativeMemoryInMB,_			int stateSizeInMB,_			Resource... extendedResources) {_		this.cpuCores = cpuCores__		this.heapMemoryInMB = heapMemoryInMB__		this.directMemoryInMB = directMemoryInMB__		this.nativeMemoryInMB = nativeMemoryInMB__		this.stateSizeInMB = stateSizeInMB__		for (Resource resource : extendedResources) {_			if (resource != null) {_				this.extendedResources.put(resource.name, resource)__			}_		}_	};creates,a,new,resource,spec,with,full,resources,param,cpu,cores,the,number,of,cpu,cores,possibly,fractional,i,e,0,2,cores,param,heap,memory,in,mb,the,size,of,the,java,heap,memory,in,megabytes,param,direct,memory,in,mb,the,size,of,the,java,nio,direct,memory,in,megabytes,param,native,memory,in,mb,the,size,of,the,native,memory,in,megabytes,param,state,size,in,mb,the,state,size,for,storing,in,checkpoint,param,extended,resources,the,extended,resources,associated,with,the,resource,manager,used;protected,resource,spec,double,cpu,cores,int,heap,memory,in,mb,int,direct,memory,in,mb,int,native,memory,in,mb,int,state,size,in,mb,resource,extended,resources,this,cpu,cores,cpu,cores,this,heap,memory,in,mb,heap,memory,in,mb,this,direct,memory,in,mb,direct,memory,in,mb,this,native,memory,in,mb,native,memory,in,mb,this,state,size,in,mb,state,size,in,mb,for,resource,resource,extended,resources,if,resource,null,this,extended,resources,put,resource,name,resource
ResourceSpec -> protected ResourceSpec( 			double cpuCores, 			int heapMemoryInMB, 			int directMemoryInMB, 			int nativeMemoryInMB, 			int stateSizeInMB, 			Resource... extendedResources);1513265143;Creates a new ResourceSpec with full resources.__@param cpuCores The number of CPU cores (possibly fractional, i.e., 0.2 cores)_@param heapMemoryInMB The size of the java heap memory, in megabytes._@param directMemoryInMB The size of the java nio direct memory, in megabytes._@param nativeMemoryInMB The size of the native memory, in megabytes._@param stateSizeInMB The state size for storing in checkpoint._@param extendedResources The extended resources, associated with the resource manager used;protected ResourceSpec(_			double cpuCores,_			int heapMemoryInMB,_			int directMemoryInMB,_			int nativeMemoryInMB,_			int stateSizeInMB,_			Resource... extendedResources) {_		this.cpuCores = cpuCores__		this.heapMemoryInMB = heapMemoryInMB__		this.directMemoryInMB = directMemoryInMB__		this.nativeMemoryInMB = nativeMemoryInMB__		this.stateSizeInMB = stateSizeInMB__		for (Resource resource : extendedResources) {_			if (resource != null) {_				this.extendedResources.put(resource.getName(), resource)__			}_		}_	};creates,a,new,resource,spec,with,full,resources,param,cpu,cores,the,number,of,cpu,cores,possibly,fractional,i,e,0,2,cores,param,heap,memory,in,mb,the,size,of,the,java,heap,memory,in,megabytes,param,direct,memory,in,mb,the,size,of,the,java,nio,direct,memory,in,megabytes,param,native,memory,in,mb,the,size,of,the,native,memory,in,megabytes,param,state,size,in,mb,the,state,size,for,storing,in,checkpoint,param,extended,resources,the,extended,resources,associated,with,the,resource,manager,used;protected,resource,spec,double,cpu,cores,int,heap,memory,in,mb,int,direct,memory,in,mb,int,native,memory,in,mb,int,state,size,in,mb,resource,extended,resources,this,cpu,cores,cpu,cores,this,heap,memory,in,mb,heap,memory,in,mb,this,direct,memory,in,mb,direct,memory,in,mb,this,native,memory,in,mb,native,memory,in,mb,this,state,size,in,mb,state,size,in,mb,for,resource,resource,extended,resources,if,resource,null,this,extended,resources,put,resource,get,name,resource
ResourceSpec -> public ResourceSpec(double cpuCores, int heapMemoryInMB);1486649520;Creates a new ResourceSpec with basic common resources.__@param cpuCores The number of CPU cores (possibly fractional, i.e., 0.2 cores)_@param heapMemoryInMB The size of the java heap memory, in megabytes.;public ResourceSpec(double cpuCores, int heapMemoryInMB) {_		this.cpuCores = cpuCores__		this.heapMemoryInMB = heapMemoryInMB__		this.directMemoryInMB = 0__		this.nativeMemoryInMB = 0__		this.stateSizeInMB = 0__	};creates,a,new,resource,spec,with,basic,common,resources,param,cpu,cores,the,number,of,cpu,cores,possibly,fractional,i,e,0,2,cores,param,heap,memory,in,mb,the,size,of,the,java,heap,memory,in,megabytes;public,resource,spec,double,cpu,cores,int,heap,memory,in,mb,this,cpu,cores,cpu,cores,this,heap,memory,in,mb,heap,memory,in,mb,this,direct,memory,in,mb,0,this,native,memory,in,mb,0,this,state,size,in,mb,0
ResourceSpec -> public ResourceSpec(double cpuCores, int heapMemoryInMB);1488304750;Creates a new ResourceSpec with basic common resources.__@param cpuCores The number of CPU cores (possibly fractional, i.e., 0.2 cores)_@param heapMemoryInMB The size of the java heap memory, in megabytes.;public ResourceSpec(double cpuCores, int heapMemoryInMB) {_		this.cpuCores = cpuCores__		this.heapMemoryInMB = heapMemoryInMB__		this.directMemoryInMB = 0__		this.nativeMemoryInMB = 0__		this.stateSizeInMB = 0__	};creates,a,new,resource,spec,with,basic,common,resources,param,cpu,cores,the,number,of,cpu,cores,possibly,fractional,i,e,0,2,cores,param,heap,memory,in,mb,the,size,of,the,java,heap,memory,in,megabytes;public,resource,spec,double,cpu,cores,int,heap,memory,in,mb,this,cpu,cores,cpu,cores,this,heap,memory,in,mb,heap,memory,in,mb,this,direct,memory,in,mb,0,this,native,memory,in,mb,0,this,state,size,in,mb,0
ResourceSpec -> public ResourceSpec(double cpuCores, int heapMemoryInMB);1489671807;Creates a new ResourceSpec with basic common resources.__@param cpuCores The number of CPU cores (possibly fractional, i.e., 0.2 cores)_@param heapMemoryInMB The size of the java heap memory, in megabytes.;public ResourceSpec(double cpuCores, int heapMemoryInMB) {_		this.cpuCores = cpuCores__		this.heapMemoryInMB = heapMemoryInMB__		this.directMemoryInMB = 0__		this.nativeMemoryInMB = 0__		this.stateSizeInMB = 0__	};creates,a,new,resource,spec,with,basic,common,resources,param,cpu,cores,the,number,of,cpu,cores,possibly,fractional,i,e,0,2,cores,param,heap,memory,in,mb,the,size,of,the,java,heap,memory,in,megabytes;public,resource,spec,double,cpu,cores,int,heap,memory,in,mb,this,cpu,cores,cpu,cores,this,heap,memory,in,mb,heap,memory,in,mb,this,direct,memory,in,mb,0,this,native,memory,in,mb,0,this,state,size,in,mb,0
ResourceSpec -> public boolean isValid();1486649520;Check whether all the field values are valid.__@return True if all the values are equal or greater than 0, otherwise false.;public boolean isValid() {_		if (this.cpuCores >= 0 && this.heapMemoryInMB >= 0 && this.directMemoryInMB >= 0 &&_				this.nativeMemoryInMB >= 0 && this.stateSizeInMB >= 0) {_			return true__		} else {_			return false__		}_	};check,whether,all,the,field,values,are,valid,return,true,if,all,the,values,are,equal,or,greater,than,0,otherwise,false;public,boolean,is,valid,if,this,cpu,cores,0,this,heap,memory,in,mb,0,this,direct,memory,in,mb,0,this,native,memory,in,mb,0,this,state,size,in,mb,0,return,true,else,return,false
ResourceSpec -> public boolean isValid();1488304750;Check whether all the field values are valid.__@return True if all the values are equal or greater than 0, otherwise false.;public boolean isValid() {_		return (this.cpuCores >= 0 && this.heapMemoryInMB >= 0 && this.directMemoryInMB >= 0 &&_				this.nativeMemoryInMB >= 0 && this.stateSizeInMB >= 0)__	};check,whether,all,the,field,values,are,valid,return,true,if,all,the,values,are,equal,or,greater,than,0,otherwise,false;public,boolean,is,valid,return,this,cpu,cores,0,this,heap,memory,in,mb,0,this,direct,memory,in,mb,0,this,native,memory,in,mb,0,this,state,size,in,mb,0
ResourceSpec -> public boolean isValid();1489671807;Check whether all the field values are valid.__@return True if all the values are equal or greater than 0, otherwise false.;public boolean isValid() {_		return (this.cpuCores >= 0 && this.heapMemoryInMB >= 0 && this.directMemoryInMB >= 0 &&_				this.nativeMemoryInMB >= 0 && this.stateSizeInMB >= 0)__	};check,whether,all,the,field,values,are,valid,return,true,if,all,the,values,are,equal,or,greater,than,0,otherwise,false;public,boolean,is,valid,return,this,cpu,cores,0,this,heap,memory,in,mb,0,this,direct,memory,in,mb,0,this,native,memory,in,mb,0,this,state,size,in,mb,0
ResourceSpec -> public boolean isValid();1513261900;Check whether all the field values are valid.__@return True if all the values are equal or greater than 0, otherwise false.;public boolean isValid() {_		if (this.cpuCores >= 0 && this.heapMemoryInMB >= 0 && this.directMemoryInMB >= 0 &&_				this.nativeMemoryInMB >= 0 && this.stateSizeInMB >= 0) {_			for (Resource resource : extendedResources.values()) {_				if (resource.value < 0) {_					return false__				}_			}_			return true__		} else {_			return false__		}_	};check,whether,all,the,field,values,are,valid,return,true,if,all,the,values,are,equal,or,greater,than,0,otherwise,false;public,boolean,is,valid,if,this,cpu,cores,0,this,heap,memory,in,mb,0,this,direct,memory,in,mb,0,this,native,memory,in,mb,0,this,state,size,in,mb,0,for,resource,resource,extended,resources,values,if,resource,value,0,return,false,return,true,else,return,false
ResourceSpec -> public boolean isValid();1513261900;Check whether all the field values are valid.__@return True if all the values are equal or greater than 0, otherwise false.;public boolean isValid() {_		if (this.cpuCores >= 0 && this.heapMemoryInMB >= 0 && this.directMemoryInMB >= 0 &&_				this.nativeMemoryInMB >= 0 && this.stateSizeInMB >= 0) {_			for (Resource resource : extendedResources.values()) {_				if (resource.value < 0) {_					return false__				}_			}_			return true__		} else {_			return false__		}_	};check,whether,all,the,field,values,are,valid,return,true,if,all,the,values,are,equal,or,greater,than,0,otherwise,false;public,boolean,is,valid,if,this,cpu,cores,0,this,heap,memory,in,mb,0,this,direct,memory,in,mb,0,this,native,memory,in,mb,0,this,state,size,in,mb,0,for,resource,resource,extended,resources,values,if,resource,value,0,return,false,return,true,else,return,false
ResourceSpec -> public boolean isValid();1513263078;Check whether all the field values are valid.__@return True if all the values are equal or greater than 0, otherwise false.;public boolean isValid() {_		if (this.cpuCores >= 0 && this.heapMemoryInMB >= 0 && this.directMemoryInMB >= 0 &&_				this.nativeMemoryInMB >= 0 && this.stateSizeInMB >= 0) {_			for (Resource resource : extendedResources.values()) {_				if (resource.value < 0) {_					return false__				}_			}_			return true__		} else {_			return false__		}_	};check,whether,all,the,field,values,are,valid,return,true,if,all,the,values,are,equal,or,greater,than,0,otherwise,false;public,boolean,is,valid,if,this,cpu,cores,0,this,heap,memory,in,mb,0,this,direct,memory,in,mb,0,this,native,memory,in,mb,0,this,state,size,in,mb,0,for,resource,resource,extended,resources,values,if,resource,value,0,return,false,return,true,else,return,false
ResourceSpec -> public boolean isValid();1513265143;Check whether all the field values are valid.__@return True if all the values are equal or greater than 0, otherwise false.;public boolean isValid() {_		if (this.cpuCores >= 0 && this.heapMemoryInMB >= 0 && this.directMemoryInMB >= 0 &&_				this.nativeMemoryInMB >= 0 && this.stateSizeInMB >= 0) {_			for (Resource resource : extendedResources.values()) {_				if (resource.getValue() < 0) {_					return false__				}_			}_			return true__		} else {_			return false__		}_	};check,whether,all,the,field,values,are,valid,return,true,if,all,the,values,are,equal,or,greater,than,0,otherwise,false;public,boolean,is,valid,if,this,cpu,cores,0,this,heap,memory,in,mb,0,this,direct,memory,in,mb,0,this,native,memory,in,mb,0,this,state,size,in,mb,0,for,resource,resource,extended,resources,values,if,resource,get,value,0,return,false,return,true,else,return,false
