commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isImmutableType() {     return true. }
false;public;0;4;;@Override public Integer createInstance() {     return ZERO. }
false;public;1;4;;@Override public Integer copy(Integer from) {     return from. }
false;public;2;4;;@Override public Integer copy(Integer from, Integer reuse) {     return from. }
false;public;0;4;;@Override public int getLength() {     return 4. }
false;public;2;4;;@Override public void serialize(Integer record, DataOutputView target) throws IOException {     target.writeInt(record). }
false;public;1;4;;@Override public Integer deserialize(DataInputView source) throws IOException {     return source.readInt(). }
false;public;2;4;;@Override public Integer deserialize(Integer reuse, DataInputView source) throws IOException {     return deserialize(source). }
false;public;2;4;;@Override public void copy(DataInputView source, DataOutputView target) throws IOException {     target.writeInt(source.readInt()). }
false;public;0;4;;@Override public TypeSerializerSnapshot<Integer> snapshotConfiguration() {     return new IntSerializerSnapshot(). }
