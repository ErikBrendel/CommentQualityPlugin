commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isImmutableType() {     return true. }
false;public;0;4;;@Override public Void createInstance() {     return null. }
false;public;1;4;;@Override public Void copy(Void from) {     return null. }
false;public;2;4;;@Override public Void copy(Void from, Void reuse) {     return null. }
false;public;0;4;;@Override public int getLength() {     return 1. }
false;public;2;5;;@Override public void serialize(Void record, DataOutputView target) throws IOException {     // make progress in the stream, write one byte     target.write(0). }
false;public;1;5;;@Override public Void deserialize(DataInputView source) throws IOException {     source.readByte().     return null. }
false;public;2;5;;@Override public Void deserialize(Void reuse, DataInputView source) throws IOException {     source.readByte().     return null. }
false;public;2;4;;@Override public void copy(DataInputView source, DataOutputView target) throws IOException {     target.write(source.readByte()). }
false;public;0;4;;@Override public TypeSerializerSnapshot<Void> snapshotConfiguration() {     return new VoidSerializerSnapshot(). }
