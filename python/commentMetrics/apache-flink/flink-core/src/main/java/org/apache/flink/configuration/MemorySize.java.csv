# id;timestamp;commentText;codeText;commentWords;codeWords
MemorySize -> public long getBytes();1494092513;Gets the memory size in bytes.;public long getBytes() {_		return bytes__	};gets,the,memory,size,in,bytes;public,long,get,bytes,return,bytes
MemorySize -> public long getBytes();1494114689;Gets the memory size in bytes.;public long getBytes() {_		return bytes__	};gets,the,memory,size,in,bytes;public,long,get,bytes,return,bytes
MemorySize -> public long getBytes();1507142977;Gets the memory size in bytes.;public long getBytes() {_		return bytes__	};gets,the,memory,size,in,bytes;public,long,get,bytes,return,bytes
MemorySize -> public long getBytes();1516295284;Gets the memory size in bytes.;public long getBytes() {_		return bytes__	};gets,the,memory,size,in,bytes;public,long,get,bytes,return,bytes
MemorySize -> public long getBytes();1530798894;Gets the memory size in bytes.;public long getBytes() {_		return bytes__	};gets,the,memory,size,in,bytes;public,long,get,bytes,return,bytes
MemorySize -> public long getTebiBytes();1494092513;Gets the memory size in Tebibytes (= 1024 Gibibytes).;public long getTebiBytes() {_		return bytes >> 40__	};gets,the,memory,size,in,tebibytes,1024,gibibytes;public,long,get,tebi,bytes,return,bytes,40
MemorySize -> public long getTebiBytes();1494114689;Gets the memory size in Tebibytes (= 1024 Gibibytes).;public long getTebiBytes() {_		return bytes >> 40__	};gets,the,memory,size,in,tebibytes,1024,gibibytes;public,long,get,tebi,bytes,return,bytes,40
MemorySize -> public long getTebiBytes();1507142977;Gets the memory size in Tebibytes (= 1024 Gibibytes).;public long getTebiBytes() {_		return bytes >> 40__	};gets,the,memory,size,in,tebibytes,1024,gibibytes;public,long,get,tebi,bytes,return,bytes,40
MemorySize -> public long getTebiBytes();1516295284;Gets the memory size in Tebibytes (= 1024 Gibibytes).;public long getTebiBytes() {_		return bytes >> 40__	};gets,the,memory,size,in,tebibytes,1024,gibibytes;public,long,get,tebi,bytes,return,bytes,40
MemorySize -> public long getTebiBytes();1530798894;Gets the memory size in Tebibytes (= 1024 Gibibytes).;public long getTebiBytes() {_		return bytes >> 40__	};gets,the,memory,size,in,tebibytes,1024,gibibytes;public,long,get,tebi,bytes,return,bytes,40
MemorySize -> public static long parseBytes(String text) throws IllegalArgumentException;1494092513;Parses the given string as bytes._The supported expressions are listed under {@link MemorySize}.__@param text The string to parse_@return The parsed size, in bytes.__@throws IllegalArgumentException Thrown, if the expression cannot be parsed.;public static long parseBytes(String text) throws IllegalArgumentException {_		checkNotNull(text, "text")___		final String trimmed = text.trim()__		checkArgument(!trimmed.isEmpty(), "argument is an empty- or whitespace-only string")___		final int len = trimmed.length()__		int pos = 0___		char current__		while (pos < len && (current = trimmed.charAt(pos)) >= '0' && current <= '9') {_			pos++__		}__		final String number = trimmed.substring(0, pos)__		final String unit = trimmed.substring(pos).trim().toLowerCase(Locale.US)___		if (number.isEmpty()) {_			throw new NumberFormatException("text does not start with a number")__		}__		final long value__		try {_			value = Long.parseLong(number)_ _		}_		catch (NumberFormatException e) {_			throw new IllegalArgumentException("The value '" + number +_					"' cannot be re represented as 64bit number (numeric overflow).")__		}__		final long multiplier__		if (unit.isEmpty()) {_			multiplier = 1L__		}_		else {_			if (matchesAny(unit, BYTES_UNITS)) {_				multiplier = 1L__			}_			else if (matchesAny(unit, KILO_BYTES_UNITS)) {_				multiplier = 1024L__			}_			else if (matchesAny(unit, MEGA_BYTES_UNITS)) {_				multiplier = 1024L * 1024L__			}_			else if (matchesAny(unit, GIGA_BYTES_UNITS)) {_				multiplier = 1024L * 1024L * 1024L__			}_			else if (matchesAny(unit, TERA_BYTES_UNITS)) {_				multiplier = 1024L * 1024L * 1024L * 1024L__			}_			else {_				throw new IllegalArgumentException("Memory size unit '" + unit + _						"' does not match any of the recognized units: " + ALL_UNITS)__			}_		}__		try {_			return Math.multiplyExact(value, multiplier)__		}_		catch (ArithmeticException e) {_			throw new IllegalArgumentException("The value '" + text + _					"' cannot be re represented as 64bit number of bytes (numeric overflow).")__		}_	};parses,the,given,string,as,bytes,the,supported,expressions,are,listed,under,link,memory,size,param,text,the,string,to,parse,return,the,parsed,size,in,bytes,throws,illegal,argument,exception,thrown,if,the,expression,cannot,be,parsed;public,static,long,parse,bytes,string,text,throws,illegal,argument,exception,check,not,null,text,text,final,string,trimmed,text,trim,check,argument,trimmed,is,empty,argument,is,an,empty,or,whitespace,only,string,final,int,len,trimmed,length,int,pos,0,char,current,while,pos,len,current,trimmed,char,at,pos,0,current,9,pos,final,string,number,trimmed,substring,0,pos,final,string,unit,trimmed,substring,pos,trim,to,lower,case,locale,us,if,number,is,empty,throw,new,number,format,exception,text,does,not,start,with,a,number,final,long,value,try,value,long,parse,long,number,catch,number,format,exception,e,throw,new,illegal,argument,exception,the,value,number,cannot,be,re,represented,as,64bit,number,numeric,overflow,final,long,multiplier,if,unit,is,empty,multiplier,1l,else,if,matches,any,unit,multiplier,1l,else,if,matches,any,unit,multiplier,1024l,else,if,matches,any,unit,multiplier,1024l,1024l,else,if,matches,any,unit,multiplier,1024l,1024l,1024l,else,if,matches,any,unit,multiplier,1024l,1024l,1024l,1024l,else,throw,new,illegal,argument,exception,memory,size,unit,unit,does,not,match,any,of,the,recognized,units,try,return,math,multiply,exact,value,multiplier,catch,arithmetic,exception,e,throw,new,illegal,argument,exception,the,value,text,cannot,be,re,represented,as,64bit,number,of,bytes,numeric,overflow
MemorySize -> public static long parseBytes(String text) throws IllegalArgumentException;1494114689;Parses the given string as bytes._The supported expressions are listed under {@link MemorySize}.__@param text The string to parse_@return The parsed size, in bytes.__@throws IllegalArgumentException Thrown, if the expression cannot be parsed.;public static long parseBytes(String text) throws IllegalArgumentException {_		checkNotNull(text, "text")___		final String trimmed = text.trim()__		checkArgument(!trimmed.isEmpty(), "argument is an empty- or whitespace-only string")___		final int len = trimmed.length()__		int pos = 0___		char current__		while (pos < len && (current = trimmed.charAt(pos)) >= '0' && current <= '9') {_			pos++__		}__		final String number = trimmed.substring(0, pos)__		final String unit = trimmed.substring(pos).trim().toLowerCase(Locale.US)___		if (number.isEmpty()) {_			throw new NumberFormatException("text does not start with a number")__		}__		final long value__		try {_			value = Long.parseLong(number)_ _		}_		catch (NumberFormatException e) {_			throw new IllegalArgumentException("The value '" + number +_					"' cannot be re represented as 64bit number (numeric overflow).")__		}__		final long multiplier__		if (unit.isEmpty()) {_			multiplier = 1L__		}_		else {_			if (matchesAny(unit, BYTES_UNITS)) {_				multiplier = 1L__			}_			else if (matchesAny(unit, KILO_BYTES_UNITS)) {_				multiplier = 1024L__			}_			else if (matchesAny(unit, MEGA_BYTES_UNITS)) {_				multiplier = 1024L * 1024L__			}_			else if (matchesAny(unit, GIGA_BYTES_UNITS)) {_				multiplier = 1024L * 1024L * 1024L__			}_			else if (matchesAny(unit, TERA_BYTES_UNITS)) {_				multiplier = 1024L * 1024L * 1024L * 1024L__			}_			else {_				throw new IllegalArgumentException("Memory size unit '" + unit + _						"' does not match any of the recognized units: " + ALL_UNITS)__			}_		}__		final long result = value * multiplier___		_		if (result / multiplier != value) {_			throw new IllegalArgumentException("The value '" + text + _					"' cannot be re represented as 64bit number of bytes (numeric overflow).")__		}__		return result__	};parses,the,given,string,as,bytes,the,supported,expressions,are,listed,under,link,memory,size,param,text,the,string,to,parse,return,the,parsed,size,in,bytes,throws,illegal,argument,exception,thrown,if,the,expression,cannot,be,parsed;public,static,long,parse,bytes,string,text,throws,illegal,argument,exception,check,not,null,text,text,final,string,trimmed,text,trim,check,argument,trimmed,is,empty,argument,is,an,empty,or,whitespace,only,string,final,int,len,trimmed,length,int,pos,0,char,current,while,pos,len,current,trimmed,char,at,pos,0,current,9,pos,final,string,number,trimmed,substring,0,pos,final,string,unit,trimmed,substring,pos,trim,to,lower,case,locale,us,if,number,is,empty,throw,new,number,format,exception,text,does,not,start,with,a,number,final,long,value,try,value,long,parse,long,number,catch,number,format,exception,e,throw,new,illegal,argument,exception,the,value,number,cannot,be,re,represented,as,64bit,number,numeric,overflow,final,long,multiplier,if,unit,is,empty,multiplier,1l,else,if,matches,any,unit,multiplier,1l,else,if,matches,any,unit,multiplier,1024l,else,if,matches,any,unit,multiplier,1024l,1024l,else,if,matches,any,unit,multiplier,1024l,1024l,1024l,else,if,matches,any,unit,multiplier,1024l,1024l,1024l,1024l,else,throw,new,illegal,argument,exception,memory,size,unit,unit,does,not,match,any,of,the,recognized,units,final,long,result,value,multiplier,if,result,multiplier,value,throw,new,illegal,argument,exception,the,value,text,cannot,be,re,represented,as,64bit,number,of,bytes,numeric,overflow,return,result
MemorySize -> public static long parseBytes(String text) throws IllegalArgumentException;1507142977;Parses the given string as bytes._The supported expressions are listed under {@link MemorySize}.__@param text The string to parse_@return The parsed size, in bytes.__@throws IllegalArgumentException Thrown, if the expression cannot be parsed.;public static long parseBytes(String text) throws IllegalArgumentException {_		checkNotNull(text, "text")___		final String trimmed = text.trim()__		checkArgument(!trimmed.isEmpty(), "argument is an empty- or whitespace-only string")___		final int len = trimmed.length()__		int pos = 0___		char current__		while (pos < len && (current = trimmed.charAt(pos)) >= '0' && current <= '9') {_			pos++__		}__		final String number = trimmed.substring(0, pos)__		final String unit = trimmed.substring(pos).trim().toLowerCase(Locale.US)___		if (number.isEmpty()) {_			throw new NumberFormatException("text does not start with a number")__		}__		final long value__		try {_			value = Long.parseLong(number)_ _		}_		catch (NumberFormatException e) {_			throw new IllegalArgumentException("The value '" + number +_					"' cannot be re represented as 64bit number (numeric overflow).")__		}__		final long multiplier__		if (unit.isEmpty()) {_			multiplier = 1L__		}_		else {_			if (matchesAny(unit, BYTES_UNITS)) {_				multiplier = 1L__			}_			else if (matchesAny(unit, KILO_BYTES_UNITS)) {_				multiplier = 1024L__			}_			else if (matchesAny(unit, MEGA_BYTES_UNITS)) {_				multiplier = 1024L * 1024L__			}_			else if (matchesAny(unit, GIGA_BYTES_UNITS)) {_				multiplier = 1024L * 1024L * 1024L__			}_			else if (matchesAny(unit, TERA_BYTES_UNITS)) {_				multiplier = 1024L * 1024L * 1024L * 1024L__			}_			else {_				throw new IllegalArgumentException("Memory size unit '" + unit + _						"' does not match any of the recognized units: " + ALL_UNITS)__			}_		}__		final long result = value * multiplier___		_		if (result / multiplier != value) {_			throw new IllegalArgumentException("The value '" + text + _					"' cannot be re represented as 64bit number of bytes (numeric overflow).")__		}__		return result__	};parses,the,given,string,as,bytes,the,supported,expressions,are,listed,under,link,memory,size,param,text,the,string,to,parse,return,the,parsed,size,in,bytes,throws,illegal,argument,exception,thrown,if,the,expression,cannot,be,parsed;public,static,long,parse,bytes,string,text,throws,illegal,argument,exception,check,not,null,text,text,final,string,trimmed,text,trim,check,argument,trimmed,is,empty,argument,is,an,empty,or,whitespace,only,string,final,int,len,trimmed,length,int,pos,0,char,current,while,pos,len,current,trimmed,char,at,pos,0,current,9,pos,final,string,number,trimmed,substring,0,pos,final,string,unit,trimmed,substring,pos,trim,to,lower,case,locale,us,if,number,is,empty,throw,new,number,format,exception,text,does,not,start,with,a,number,final,long,value,try,value,long,parse,long,number,catch,number,format,exception,e,throw,new,illegal,argument,exception,the,value,number,cannot,be,re,represented,as,64bit,number,numeric,overflow,final,long,multiplier,if,unit,is,empty,multiplier,1l,else,if,matches,any,unit,multiplier,1l,else,if,matches,any,unit,multiplier,1024l,else,if,matches,any,unit,multiplier,1024l,1024l,else,if,matches,any,unit,multiplier,1024l,1024l,1024l,else,if,matches,any,unit,multiplier,1024l,1024l,1024l,1024l,else,throw,new,illegal,argument,exception,memory,size,unit,unit,does,not,match,any,of,the,recognized,units,final,long,result,value,multiplier,if,result,multiplier,value,throw,new,illegal,argument,exception,the,value,text,cannot,be,re,represented,as,64bit,number,of,bytes,numeric,overflow,return,result
MemorySize -> public static long parseBytes(String text) throws IllegalArgumentException;1516295284;Parses the given string as bytes._The supported expressions are listed under {@link MemorySize}.__@param text The string to parse_@return The parsed size, in bytes.__@throws IllegalArgumentException Thrown, if the expression cannot be parsed.;public static long parseBytes(String text) throws IllegalArgumentException {_		checkNotNull(text, "text")___		final String trimmed = text.trim()__		checkArgument(!trimmed.isEmpty(), "argument is an empty- or whitespace-only string")___		final int len = trimmed.length()__		int pos = 0___		char current__		while (pos < len && (current = trimmed.charAt(pos)) >= '0' && current <= '9') {_			pos++__		}__		final String number = trimmed.substring(0, pos)__		final String unit = trimmed.substring(pos).trim().toLowerCase(Locale.US)___		if (number.isEmpty()) {_			throw new NumberFormatException("text does not start with a number")__		}__		final long value__		try {_			value = Long.parseLong(number)_ _		}_		catch (NumberFormatException e) {_			throw new IllegalArgumentException("The value '" + number +_					"' cannot be re represented as 64bit number (numeric overflow).")__		}__		final long multiplier__		if (unit.isEmpty()) {_			multiplier = 1L__		}_		else {_			if (matchesAny(unit, BYTES_UNITS)) {_				multiplier = 1L__			}_			else if (matchesAny(unit, KILO_BYTES_UNITS)) {_				multiplier = 1024L__			}_			else if (matchesAny(unit, MEGA_BYTES_UNITS)) {_				multiplier = 1024L * 1024L__			}_			else if (matchesAny(unit, GIGA_BYTES_UNITS)) {_				multiplier = 1024L * 1024L * 1024L__			}_			else if (matchesAny(unit, TERA_BYTES_UNITS)) {_				multiplier = 1024L * 1024L * 1024L * 1024L__			}_			else {_				throw new IllegalArgumentException("Memory size unit '" + unit +_						"' does not match any of the recognized units: " + ALL_UNITS)__			}_		}__		final long result = value * multiplier___		_		if (result / multiplier != value) {_			throw new IllegalArgumentException("The value '" + text +_					"' cannot be re represented as 64bit number of bytes (numeric overflow).")__		}__		return result__	};parses,the,given,string,as,bytes,the,supported,expressions,are,listed,under,link,memory,size,param,text,the,string,to,parse,return,the,parsed,size,in,bytes,throws,illegal,argument,exception,thrown,if,the,expression,cannot,be,parsed;public,static,long,parse,bytes,string,text,throws,illegal,argument,exception,check,not,null,text,text,final,string,trimmed,text,trim,check,argument,trimmed,is,empty,argument,is,an,empty,or,whitespace,only,string,final,int,len,trimmed,length,int,pos,0,char,current,while,pos,len,current,trimmed,char,at,pos,0,current,9,pos,final,string,number,trimmed,substring,0,pos,final,string,unit,trimmed,substring,pos,trim,to,lower,case,locale,us,if,number,is,empty,throw,new,number,format,exception,text,does,not,start,with,a,number,final,long,value,try,value,long,parse,long,number,catch,number,format,exception,e,throw,new,illegal,argument,exception,the,value,number,cannot,be,re,represented,as,64bit,number,numeric,overflow,final,long,multiplier,if,unit,is,empty,multiplier,1l,else,if,matches,any,unit,multiplier,1l,else,if,matches,any,unit,multiplier,1024l,else,if,matches,any,unit,multiplier,1024l,1024l,else,if,matches,any,unit,multiplier,1024l,1024l,1024l,else,if,matches,any,unit,multiplier,1024l,1024l,1024l,1024l,else,throw,new,illegal,argument,exception,memory,size,unit,unit,does,not,match,any,of,the,recognized,units,final,long,result,value,multiplier,if,result,multiplier,value,throw,new,illegal,argument,exception,the,value,text,cannot,be,re,represented,as,64bit,number,of,bytes,numeric,overflow,return,result
MemorySize -> public static long parseBytes(String text) throws IllegalArgumentException;1530798894;Parses the given string as bytes._The supported expressions are listed under {@link MemorySize}.__@param text The string to parse_@return The parsed size, in bytes.__@throws IllegalArgumentException Thrown, if the expression cannot be parsed.;public static long parseBytes(String text) throws IllegalArgumentException {_		checkNotNull(text, "text")___		final String trimmed = text.trim()__		checkArgument(!trimmed.isEmpty(), "argument is an empty- or whitespace-only string")___		final int len = trimmed.length()__		int pos = 0___		char current__		while (pos < len && (current = trimmed.charAt(pos)) >= '0' && current <= '9') {_			pos++__		}__		final String number = trimmed.substring(0, pos)__		final String unit = trimmed.substring(pos).trim().toLowerCase(Locale.US)___		if (number.isEmpty()) {_			throw new NumberFormatException("text does not start with a number")__		}__		final long value__		try {_			value = Long.parseLong(number)_ _		}_		catch (NumberFormatException e) {_			throw new IllegalArgumentException("The value '" + number +_					"' cannot be re represented as 64bit number (numeric overflow).")__		}__		final long multiplier__		if (unit.isEmpty()) {_			multiplier = 1L__		}_		else {_			if (matchesAny(unit, BYTES)) {_				multiplier = 1L__			}_			else if (matchesAny(unit, KILO_BYTES)) {_				multiplier = 1024L__			}_			else if (matchesAny(unit, MEGA_BYTES)) {_				multiplier = 1024L * 1024L__			}_			else if (matchesAny(unit, GIGA_BYTES)) {_				multiplier = 1024L * 1024L * 1024L__			}_			else if (matchesAny(unit, TERA_BYTES)) {_				multiplier = 1024L * 1024L * 1024L * 1024L__			}_			else {_				throw new IllegalArgumentException("Memory size unit '" + unit +_						"' does not match any of the recognized units: " + MemoryUnit.getAllUnits())__			}_		}__		final long result = value * multiplier___		_		if (result / multiplier != value) {_			throw new IllegalArgumentException("The value '" + text +_					"' cannot be re represented as 64bit number of bytes (numeric overflow).")__		}__		return result__	};parses,the,given,string,as,bytes,the,supported,expressions,are,listed,under,link,memory,size,param,text,the,string,to,parse,return,the,parsed,size,in,bytes,throws,illegal,argument,exception,thrown,if,the,expression,cannot,be,parsed;public,static,long,parse,bytes,string,text,throws,illegal,argument,exception,check,not,null,text,text,final,string,trimmed,text,trim,check,argument,trimmed,is,empty,argument,is,an,empty,or,whitespace,only,string,final,int,len,trimmed,length,int,pos,0,char,current,while,pos,len,current,trimmed,char,at,pos,0,current,9,pos,final,string,number,trimmed,substring,0,pos,final,string,unit,trimmed,substring,pos,trim,to,lower,case,locale,us,if,number,is,empty,throw,new,number,format,exception,text,does,not,start,with,a,number,final,long,value,try,value,long,parse,long,number,catch,number,format,exception,e,throw,new,illegal,argument,exception,the,value,number,cannot,be,re,represented,as,64bit,number,numeric,overflow,final,long,multiplier,if,unit,is,empty,multiplier,1l,else,if,matches,any,unit,bytes,multiplier,1l,else,if,matches,any,unit,multiplier,1024l,else,if,matches,any,unit,multiplier,1024l,1024l,else,if,matches,any,unit,multiplier,1024l,1024l,1024l,else,if,matches,any,unit,multiplier,1024l,1024l,1024l,1024l,else,throw,new,illegal,argument,exception,memory,size,unit,unit,does,not,match,any,of,the,recognized,units,memory,unit,get,all,units,final,long,result,value,multiplier,if,result,multiplier,value,throw,new,illegal,argument,exception,the,value,text,cannot,be,re,represented,as,64bit,number,of,bytes,numeric,overflow,return,result
MemorySize -> public long getGibiBytes();1494092513;Gets the memory size in Gibibytes (= 1024 Mebibytes).;public long getGibiBytes() {_		return bytes >> 30__	};gets,the,memory,size,in,gibibytes,1024,mebibytes;public,long,get,gibi,bytes,return,bytes,30
MemorySize -> public long getGibiBytes();1494114689;Gets the memory size in Gibibytes (= 1024 Mebibytes).;public long getGibiBytes() {_		return bytes >> 30__	};gets,the,memory,size,in,gibibytes,1024,mebibytes;public,long,get,gibi,bytes,return,bytes,30
MemorySize -> public long getGibiBytes();1507142977;Gets the memory size in Gibibytes (= 1024 Mebibytes).;public long getGibiBytes() {_		return bytes >> 30__	};gets,the,memory,size,in,gibibytes,1024,mebibytes;public,long,get,gibi,bytes,return,bytes,30
MemorySize -> public long getGibiBytes();1516295284;Gets the memory size in Gibibytes (= 1024 Mebibytes).;public long getGibiBytes() {_		return bytes >> 30__	};gets,the,memory,size,in,gibibytes,1024,mebibytes;public,long,get,gibi,bytes,return,bytes,30
MemorySize -> public long getGibiBytes();1530798894;Gets the memory size in Gibibytes (= 1024 Mebibytes).;public long getGibiBytes() {_		return bytes >> 30__	};gets,the,memory,size,in,gibibytes,1024,mebibytes;public,long,get,gibi,bytes,return,bytes,30
MemorySize -> public long getKibiBytes();1494092513;Gets the memory size in Kibibytes (= 1024 bytes).;public long getKibiBytes() {_		return bytes >> 10__	};gets,the,memory,size,in,kibibytes,1024,bytes;public,long,get,kibi,bytes,return,bytes,10
MemorySize -> public long getKibiBytes();1494114689;Gets the memory size in Kibibytes (= 1024 bytes).;public long getKibiBytes() {_		return bytes >> 10__	};gets,the,memory,size,in,kibibytes,1024,bytes;public,long,get,kibi,bytes,return,bytes,10
MemorySize -> public long getKibiBytes();1507142977;Gets the memory size in Kibibytes (= 1024 bytes).;public long getKibiBytes() {_		return bytes >> 10__	};gets,the,memory,size,in,kibibytes,1024,bytes;public,long,get,kibi,bytes,return,bytes,10
MemorySize -> public long getKibiBytes();1516295284;Gets the memory size in Kibibytes (= 1024 bytes).;public long getKibiBytes() {_		return bytes >> 10__	};gets,the,memory,size,in,kibibytes,1024,bytes;public,long,get,kibi,bytes,return,bytes,10
MemorySize -> public long getKibiBytes();1530798894;Gets the memory size in Kibibytes (= 1024 bytes).;public long getKibiBytes() {_		return bytes >> 10__	};gets,the,memory,size,in,kibibytes,1024,bytes;public,long,get,kibi,bytes,return,bytes,10
MemorySize -> public static MemorySize parse(String text) throws IllegalArgumentException;1494092513;Parses the given string as as MemorySize._The supported expressions are listed under {@link MemorySize}.__@param text The string to parse_@return The parsed MemorySize__@throws IllegalArgumentException Thrown, if the expression cannot be parsed.;public static MemorySize parse(String text) throws IllegalArgumentException {_		return new MemorySize(parseBytes(text))__	};parses,the,given,string,as,as,memory,size,the,supported,expressions,are,listed,under,link,memory,size,param,text,the,string,to,parse,return,the,parsed,memory,size,throws,illegal,argument,exception,thrown,if,the,expression,cannot,be,parsed;public,static,memory,size,parse,string,text,throws,illegal,argument,exception,return,new,memory,size,parse,bytes,text
MemorySize -> public static MemorySize parse(String text) throws IllegalArgumentException;1494114689;Parses the given string as as MemorySize._The supported expressions are listed under {@link MemorySize}.__@param text The string to parse_@return The parsed MemorySize__@throws IllegalArgumentException Thrown, if the expression cannot be parsed.;public static MemorySize parse(String text) throws IllegalArgumentException {_		return new MemorySize(parseBytes(text))__	};parses,the,given,string,as,as,memory,size,the,supported,expressions,are,listed,under,link,memory,size,param,text,the,string,to,parse,return,the,parsed,memory,size,throws,illegal,argument,exception,thrown,if,the,expression,cannot,be,parsed;public,static,memory,size,parse,string,text,throws,illegal,argument,exception,return,new,memory,size,parse,bytes,text
MemorySize -> public static MemorySize parse(String text) throws IllegalArgumentException;1507142977;Parses the given string as as MemorySize._The supported expressions are listed under {@link MemorySize}.__@param text The string to parse_@return The parsed MemorySize__@throws IllegalArgumentException Thrown, if the expression cannot be parsed.;public static MemorySize parse(String text) throws IllegalArgumentException {_		return new MemorySize(parseBytes(text))__	};parses,the,given,string,as,as,memory,size,the,supported,expressions,are,listed,under,link,memory,size,param,text,the,string,to,parse,return,the,parsed,memory,size,throws,illegal,argument,exception,thrown,if,the,expression,cannot,be,parsed;public,static,memory,size,parse,string,text,throws,illegal,argument,exception,return,new,memory,size,parse,bytes,text
MemorySize -> public static MemorySize parse(String text) throws IllegalArgumentException;1516295284;Parses the given string as as MemorySize._The supported expressions are listed under {@link MemorySize}.__@param text The string to parse_@return The parsed MemorySize__@throws IllegalArgumentException Thrown, if the expression cannot be parsed.;public static MemorySize parse(String text) throws IllegalArgumentException {_		return new MemorySize(parseBytes(text))__	};parses,the,given,string,as,as,memory,size,the,supported,expressions,are,listed,under,link,memory,size,param,text,the,string,to,parse,return,the,parsed,memory,size,throws,illegal,argument,exception,thrown,if,the,expression,cannot,be,parsed;public,static,memory,size,parse,string,text,throws,illegal,argument,exception,return,new,memory,size,parse,bytes,text
MemorySize -> public static MemorySize parse(String text) throws IllegalArgumentException;1530798894;Parses the given string as as MemorySize.__@param text The string to parse_@return The parsed MemorySize__@throws IllegalArgumentException Thrown, if the expression cannot be parsed.;public static MemorySize parse(String text) throws IllegalArgumentException {_		return new MemorySize(parseBytes(text))__	};parses,the,given,string,as,as,memory,size,param,text,the,string,to,parse,return,the,parsed,memory,size,throws,illegal,argument,exception,thrown,if,the,expression,cannot,be,parsed;public,static,memory,size,parse,string,text,throws,illegal,argument,exception,return,new,memory,size,parse,bytes,text
MemorySize -> public MemorySize(long bytes);1494092513;Constructs a new MemorySize.__@param bytes The size, in bytes. Must be zero or larger.;public MemorySize(long bytes) {_		checkArgument(bytes >= 0, "bytes must be >= 0")__		this.bytes = bytes__	};constructs,a,new,memory,size,param,bytes,the,size,in,bytes,must,be,zero,or,larger;public,memory,size,long,bytes,check,argument,bytes,0,bytes,must,be,0,this,bytes,bytes
MemorySize -> public MemorySize(long bytes);1494114689;Constructs a new MemorySize.__@param bytes The size, in bytes. Must be zero or larger.;public MemorySize(long bytes) {_		checkArgument(bytes >= 0, "bytes must be >= 0")__		this.bytes = bytes__	};constructs,a,new,memory,size,param,bytes,the,size,in,bytes,must,be,zero,or,larger;public,memory,size,long,bytes,check,argument,bytes,0,bytes,must,be,0,this,bytes,bytes
MemorySize -> public MemorySize(long bytes);1507142977;Constructs a new MemorySize.__@param bytes The size, in bytes. Must be zero or larger.;public MemorySize(long bytes) {_		checkArgument(bytes >= 0, "bytes must be >= 0")__		this.bytes = bytes__	};constructs,a,new,memory,size,param,bytes,the,size,in,bytes,must,be,zero,or,larger;public,memory,size,long,bytes,check,argument,bytes,0,bytes,must,be,0,this,bytes,bytes
MemorySize -> public MemorySize(long bytes);1516295284;Constructs a new MemorySize.__@param bytes The size, in bytes. Must be zero or larger.;public MemorySize(long bytes) {_		checkArgument(bytes >= 0, "bytes must be >= 0")__		this.bytes = bytes__	};constructs,a,new,memory,size,param,bytes,the,size,in,bytes,must,be,zero,or,larger;public,memory,size,long,bytes,check,argument,bytes,0,bytes,must,be,0,this,bytes,bytes
MemorySize -> public MemorySize(long bytes);1530798894;Constructs a new MemorySize.__@param bytes The size, in bytes. Must be zero or larger.;public MemorySize(long bytes) {_		checkArgument(bytes >= 0, "bytes must be >= 0")__		this.bytes = bytes__	};constructs,a,new,memory,size,param,bytes,the,size,in,bytes,must,be,zero,or,larger;public,memory,size,long,bytes,check,argument,bytes,0,bytes,must,be,0,this,bytes,bytes
MemorySize -> public long getMebiBytes();1494092513;Gets the memory size in Mebibytes (= 1024 Kibibytes).;public long getMebiBytes() {_		return bytes >> 20__	};gets,the,memory,size,in,mebibytes,1024,kibibytes;public,long,get,mebi,bytes,return,bytes,20
MemorySize -> public long getMebiBytes();1494114689;Gets the memory size in Mebibytes (= 1024 Kibibytes).;public long getMebiBytes() {_		return bytes >> 20__	};gets,the,memory,size,in,mebibytes,1024,kibibytes;public,long,get,mebi,bytes,return,bytes,20
MemorySize -> public long getMebiBytes();1507142977;Gets the memory size in Mebibytes (= 1024 Kibibytes).;public long getMebiBytes() {_		return bytes >> 20__	};gets,the,memory,size,in,mebibytes,1024,kibibytes;public,long,get,mebi,bytes,return,bytes,20
MemorySize -> public long getMebiBytes();1516295284;Gets the memory size in Mebibytes (= 1024 Kibibytes).;public long getMebiBytes() {_		return bytes >> 20__	};gets,the,memory,size,in,mebibytes,1024,kibibytes;public,long,get,mebi,bytes,return,bytes,20
