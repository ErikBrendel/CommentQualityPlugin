# id;timestamp;commentText;codeText;commentWords;codeWords
DataOutputSerializer -> public byte[] getSharedBuffer();1524407313;Gets a reference to the internal byte buffer. This buffer may be larger than the_actual serialized data. Only the bytes from zero to {@link #length()} are valid._The buffer will also be overwritten with the next write calls.__<p>This method is useful when trying to avid byte copies, but should be used carefully.__@return A reference to the internal shared and reused buffer.;public byte[] getSharedBuffer() {_		return buffer__	};gets,a,reference,to,the,internal,byte,buffer,this,buffer,may,be,larger,than,the,actual,serialized,data,only,the,bytes,from,zero,to,link,length,are,valid,the,buffer,will,also,be,overwritten,with,the,next,write,calls,p,this,method,is,useful,when,trying,to,avid,byte,copies,but,should,be,used,carefully,return,a,reference,to,the,internal,shared,and,reused,buffer;public,byte,get,shared,buffer,return,buffer
DataOutputSerializer -> public byte[] getSharedBuffer();1539781044;Gets a reference to the internal byte buffer. This buffer may be larger than the_actual serialized data. Only the bytes from zero to {@link #length()} are valid._The buffer will also be overwritten with the next write calls.__<p>This method is useful when trying to avid byte copies, but should be used carefully.__@return A reference to the internal shared and reused buffer.;public byte[] getSharedBuffer() {_		return buffer__	};gets,a,reference,to,the,internal,byte,buffer,this,buffer,may,be,larger,than,the,actual,serialized,data,only,the,bytes,from,zero,to,link,length,are,valid,the,buffer,will,also,be,overwritten,with,the,next,write,calls,p,this,method,is,useful,when,trying,to,avid,byte,copies,but,should,be,used,carefully,return,a,reference,to,the,internal,shared,and,reused,buffer;public,byte,get,shared,buffer,return,buffer
DataOutputSerializer -> public byte[] getSharedBuffer();1546862378;Gets a reference to the internal byte buffer. This buffer may be larger than the_actual serialized data. Only the bytes from zero to {@link #length()} are valid._The buffer will also be overwritten with the next write calls.__<p>This method is useful when trying to avid byte copies, but should be used carefully.__@return A reference to the internal shared and reused buffer.;public byte[] getSharedBuffer() {_		return buffer__	};gets,a,reference,to,the,internal,byte,buffer,this,buffer,may,be,larger,than,the,actual,serialized,data,only,the,bytes,from,zero,to,link,length,are,valid,the,buffer,will,also,be,overwritten,with,the,next,write,calls,p,this,method,is,useful,when,trying,to,avid,byte,copies,but,should,be,used,carefully,return,a,reference,to,the,internal,shared,and,reused,buffer;public,byte,get,shared,buffer,return,buffer
DataOutputSerializer -> public byte[] getCopyOfBuffer();1524407313;Gets a copy of the buffer that has the right length for the data serialized so far._The returned buffer is an exclusive copy and can be safely used without being overwritten_by future write calls to this serializer.__<p>This method is equivalent to {@code Arrays.copyOf(getSharedBuffer(), length())_}__@return A non-shared copy of the serialization buffer.;public byte[] getCopyOfBuffer() {_		return Arrays.copyOf(buffer, position)__	};gets,a,copy,of,the,buffer,that,has,the,right,length,for,the,data,serialized,so,far,the,returned,buffer,is,an,exclusive,copy,and,can,be,safely,used,without,being,overwritten,by,future,write,calls,to,this,serializer,p,this,method,is,equivalent,to,code,arrays,copy,of,get,shared,buffer,length,return,a,non,shared,copy,of,the,serialization,buffer;public,byte,get,copy,of,buffer,return,arrays,copy,of,buffer,position
DataOutputSerializer -> public byte[] getCopyOfBuffer();1539781044;Gets a copy of the buffer that has the right length for the data serialized so far._The returned buffer is an exclusive copy and can be safely used without being overwritten_by future write calls to this serializer.__<p>This method is equivalent to {@code Arrays.copyOf(getSharedBuffer(), length())_}__@return A non-shared copy of the serialization buffer.;public byte[] getCopyOfBuffer() {_		return Arrays.copyOf(buffer, position)__	};gets,a,copy,of,the,buffer,that,has,the,right,length,for,the,data,serialized,so,far,the,returned,buffer,is,an,exclusive,copy,and,can,be,safely,used,without,being,overwritten,by,future,write,calls,to,this,serializer,p,this,method,is,equivalent,to,code,arrays,copy,of,get,shared,buffer,length,return,a,non,shared,copy,of,the,serialization,buffer;public,byte,get,copy,of,buffer,return,arrays,copy,of,buffer,position
DataOutputSerializer -> public byte[] getCopyOfBuffer();1546862378;Gets a copy of the buffer that has the right length for the data serialized so far._The returned buffer is an exclusive copy and can be safely used without being overwritten_by future write calls to this serializer.__<p>This method is equivalent to {@code Arrays.copyOf(getSharedBuffer(), length())_}__@return A non-shared copy of the serialization buffer.;public byte[] getCopyOfBuffer() {_		return Arrays.copyOf(buffer, position)__	};gets,a,copy,of,the,buffer,that,has,the,right,length,for,the,data,serialized,so,far,the,returned,buffer,is,an,exclusive,copy,and,can,be,safely,used,without,being,overwritten,by,future,write,calls,to,this,serializer,p,this,method,is,equivalent,to,code,arrays,copy,of,get,shared,buffer,length,return,a,non,shared,copy,of,the,serialization,buffer;public,byte,get,copy,of,buffer,return,arrays,copy,of,buffer,position
DataOutputSerializer -> @Deprecated 	public byte[] getByteArray();1524407313;@deprecated Replaced by {@link #getSharedBuffer()} for a better, safer name.;@Deprecated_	public byte[] getByteArray() {_		return getSharedBuffer()__	};deprecated,replaced,by,link,get,shared,buffer,for,a,better,safer,name;deprecated,public,byte,get,byte,array,return,get,shared,buffer
DataOutputSerializer -> @Deprecated 	public byte[] getByteArray();1539781044;@deprecated Replaced by {@link #getSharedBuffer()} for a better, safer name.;@Deprecated_	public byte[] getByteArray() {_		return getSharedBuffer()__	};deprecated,replaced,by,link,get,shared,buffer,for,a,better,safer,name;deprecated,public,byte,get,byte,array,return,get,shared,buffer
DataOutputSerializer -> @Deprecated 	public byte[] getByteArray();1546862378;@deprecated Replaced by {@link #getSharedBuffer()} for a better, safer name.;@Deprecated_	public byte[] getByteArray() {_		return getSharedBuffer()__	};deprecated,replaced,by,link,get,shared,buffer,for,a,better,safer,name;deprecated,public,byte,get,byte,array,return,get,shared,buffer
