# id;timestamp;commentText;codeText;commentWords;codeWords
MapStateDescriptor -> public TypeSerializer<UV> getValueSerializer();1487865389;Gets the serializer for the values in the state.__@return The serializer for the values in the state.;public TypeSerializer<UV> getValueSerializer() {_		final TypeSerializer<Map<UK, UV>> rawSerializer = getSerializer()__		if (!(rawSerializer instanceof MapSerializer)) {_			throw new IllegalStateException("Unexpected serializer type.")__		}__		return ((MapSerializer<UK, UV>) rawSerializer).getValueSerializer()__	};gets,the,serializer,for,the,values,in,the,state,return,the,serializer,for,the,values,in,the,state;public,type,serializer,uv,get,value,serializer,final,type,serializer,map,uk,uv,raw,serializer,get,serializer,if,raw,serializer,instanceof,map,serializer,throw,new,illegal,state,exception,unexpected,serializer,type,return,map,serializer,uk,uv,raw,serializer,get,value,serializer
MapStateDescriptor -> public TypeSerializer<UV> getValueSerializer();1515177485;Gets the serializer for the values in the state.__@return The serializer for the values in the state.;public TypeSerializer<UV> getValueSerializer() {_		final TypeSerializer<Map<UK, UV>> rawSerializer = getSerializer()__		if (!(rawSerializer instanceof MapSerializer)) {_			throw new IllegalStateException("Unexpected serializer type.")__		}__		return ((MapSerializer<UK, UV>) rawSerializer).getValueSerializer()__	};gets,the,serializer,for,the,values,in,the,state,return,the,serializer,for,the,values,in,the,state;public,type,serializer,uv,get,value,serializer,final,type,serializer,map,uk,uv,raw,serializer,get,serializer,if,raw,serializer,instanceof,map,serializer,throw,new,illegal,state,exception,unexpected,serializer,type,return,map,serializer,uk,uv,raw,serializer,get,value,serializer
MapStateDescriptor -> public TypeSerializer<UV> getValueSerializer();1521628649;Gets the serializer for the values in the state.__@return The serializer for the values in the state.;public TypeSerializer<UV> getValueSerializer() {_		final TypeSerializer<Map<UK, UV>> rawSerializer = getSerializer()__		if (!(rawSerializer instanceof MapSerializer)) {_			throw new IllegalStateException("Unexpected serializer type.")__		}__		return ((MapSerializer<UK, UV>) rawSerializer).getValueSerializer()__	};gets,the,serializer,for,the,values,in,the,state,return,the,serializer,for,the,values,in,the,state;public,type,serializer,uv,get,value,serializer,final,type,serializer,map,uk,uv,raw,serializer,get,serializer,if,raw,serializer,instanceof,map,serializer,throw,new,illegal,state,exception,unexpected,serializer,type,return,map,serializer,uk,uv,raw,serializer,get,value,serializer
MapStateDescriptor -> public TypeSerializer<UV> getValueSerializer();1521729754;Gets the serializer for the values in the state.__@return The serializer for the values in the state.;public TypeSerializer<UV> getValueSerializer() {_		final TypeSerializer<Map<UK, UV>> rawSerializer = getSerializer()__		if (!(rawSerializer instanceof MapSerializer)) {_			throw new IllegalStateException("Unexpected serializer type.")__		}__		return ((MapSerializer<UK, UV>) rawSerializer).getValueSerializer()__	};gets,the,serializer,for,the,values,in,the,state,return,the,serializer,for,the,values,in,the,state;public,type,serializer,uv,get,value,serializer,final,type,serializer,map,uk,uv,raw,serializer,get,serializer,if,raw,serializer,instanceof,map,serializer,throw,new,illegal,state,exception,unexpected,serializer,type,return,map,serializer,uk,uv,raw,serializer,get,value,serializer
MapStateDescriptor -> public TypeSerializer<UV> getValueSerializer();1521729969;Gets the serializer for the values in the state.__@return The serializer for the values in the state.;public TypeSerializer<UV> getValueSerializer() {_		final TypeSerializer<Map<UK, UV>> rawSerializer = getSerializer()__		if (!(rawSerializer instanceof MapSerializer)) {_			throw new IllegalStateException("Unexpected serializer type.")__		}__		return ((MapSerializer<UK, UV>) rawSerializer).getValueSerializer()__	};gets,the,serializer,for,the,values,in,the,state,return,the,serializer,for,the,values,in,the,state;public,type,serializer,uv,get,value,serializer,final,type,serializer,map,uk,uv,raw,serializer,get,serializer,if,raw,serializer,instanceof,map,serializer,throw,new,illegal,state,exception,unexpected,serializer,type,return,map,serializer,uk,uv,raw,serializer,get,value,serializer
MapStateDescriptor -> public TypeSerializer<UV> getValueSerializer();1529325710;Gets the serializer for the values in the state.__@return The serializer for the values in the state.;public TypeSerializer<UV> getValueSerializer() {_		final TypeSerializer<Map<UK, UV>> rawSerializer = getSerializer()__		if (!(rawSerializer instanceof MapSerializer)) {_			throw new IllegalStateException("Unexpected serializer type.")__		}__		return ((MapSerializer<UK, UV>) rawSerializer).getValueSerializer()__	};gets,the,serializer,for,the,values,in,the,state,return,the,serializer,for,the,values,in,the,state;public,type,serializer,uv,get,value,serializer,final,type,serializer,map,uk,uv,raw,serializer,get,serializer,if,raw,serializer,instanceof,map,serializer,throw,new,illegal,state,exception,unexpected,serializer,type,return,map,serializer,uk,uv,raw,serializer,get,value,serializer
MapStateDescriptor -> public TypeSerializer<UV> getValueSerializer();1537531551;Gets the serializer for the values in the state.__@return The serializer for the values in the state.;public TypeSerializer<UV> getValueSerializer() {_		final TypeSerializer<Map<UK, UV>> rawSerializer = getSerializer()__		if (!(rawSerializer instanceof MapSerializer)) {_			throw new IllegalStateException("Unexpected serializer type.")__		}__		return ((MapSerializer<UK, UV>) rawSerializer).getValueSerializer()__	};gets,the,serializer,for,the,values,in,the,state,return,the,serializer,for,the,values,in,the,state;public,type,serializer,uv,get,value,serializer,final,type,serializer,map,uk,uv,raw,serializer,get,serializer,if,raw,serializer,instanceof,map,serializer,throw,new,illegal,state,exception,unexpected,serializer,type,return,map,serializer,uk,uv,raw,serializer,get,value,serializer
MapStateDescriptor -> public MapStateDescriptor(String name, TypeInformation<UK> keyTypeInfo, TypeInformation<UV> valueTypeInfo);1487865389;Create a new {@code MapStateDescriptor} with the given name and the given type informations.__@param name The name of the {@code MapStateDescriptor}._@param keyTypeInfo The type information for the keys in the state._@param valueTypeInfo The type information for the values in the state.;public MapStateDescriptor(String name, TypeInformation<UK> keyTypeInfo, TypeInformation<UV> valueTypeInfo) {_		super(name, new MapTypeInfo<>(keyTypeInfo, valueTypeInfo), null)__	};create,a,new,code,map,state,descriptor,with,the,given,name,and,the,given,type,informations,param,name,the,name,of,the,code,map,state,descriptor,param,key,type,info,the,type,information,for,the,keys,in,the,state,param,value,type,info,the,type,information,for,the,values,in,the,state;public,map,state,descriptor,string,name,type,information,uk,key,type,info,type,information,uv,value,type,info,super,name,new,map,type,info,key,type,info,value,type,info,null
MapStateDescriptor -> public MapStateDescriptor(String name, TypeInformation<UK> keyTypeInfo, TypeInformation<UV> valueTypeInfo);1515177485;Create a new {@code MapStateDescriptor} with the given name and the given type information.__@param name The name of the {@code MapStateDescriptor}._@param keyTypeInfo The type information for the keys in the state._@param valueTypeInfo The type information for the values in the state.;public MapStateDescriptor(String name, TypeInformation<UK> keyTypeInfo, TypeInformation<UV> valueTypeInfo) {_		super(name, new MapTypeInfo<>(keyTypeInfo, valueTypeInfo), null)__	};create,a,new,code,map,state,descriptor,with,the,given,name,and,the,given,type,information,param,name,the,name,of,the,code,map,state,descriptor,param,key,type,info,the,type,information,for,the,keys,in,the,state,param,value,type,info,the,type,information,for,the,values,in,the,state;public,map,state,descriptor,string,name,type,information,uk,key,type,info,type,information,uv,value,type,info,super,name,new,map,type,info,key,type,info,value,type,info,null
MapStateDescriptor -> public MapStateDescriptor(String name, TypeInformation<UK> keyTypeInfo, TypeInformation<UV> valueTypeInfo);1521628649;Create a new {@code MapStateDescriptor} with the given name and the given type information.__@param name The name of the {@code MapStateDescriptor}._@param keyTypeInfo The type information for the keys in the state._@param valueTypeInfo The type information for the values in the state.;public MapStateDescriptor(String name, TypeInformation<UK> keyTypeInfo, TypeInformation<UV> valueTypeInfo) {_		super(name, new MapTypeInfo<>(keyTypeInfo, valueTypeInfo), null)__	};create,a,new,code,map,state,descriptor,with,the,given,name,and,the,given,type,information,param,name,the,name,of,the,code,map,state,descriptor,param,key,type,info,the,type,information,for,the,keys,in,the,state,param,value,type,info,the,type,information,for,the,values,in,the,state;public,map,state,descriptor,string,name,type,information,uk,key,type,info,type,information,uv,value,type,info,super,name,new,map,type,info,key,type,info,value,type,info,null
MapStateDescriptor -> public MapStateDescriptor(String name, TypeInformation<UK> keyTypeInfo, TypeInformation<UV> valueTypeInfo);1521729754;Create a new {@code MapStateDescriptor} with the given name and the given type information.__@param name The name of the {@code MapStateDescriptor}._@param keyTypeInfo The type information for the keys in the state._@param valueTypeInfo The type information for the values in the state.;public MapStateDescriptor(String name, TypeInformation<UK> keyTypeInfo, TypeInformation<UV> valueTypeInfo) {_		super(name, new MapTypeInfo<>(keyTypeInfo, valueTypeInfo), null)__	};create,a,new,code,map,state,descriptor,with,the,given,name,and,the,given,type,information,param,name,the,name,of,the,code,map,state,descriptor,param,key,type,info,the,type,information,for,the,keys,in,the,state,param,value,type,info,the,type,information,for,the,values,in,the,state;public,map,state,descriptor,string,name,type,information,uk,key,type,info,type,information,uv,value,type,info,super,name,new,map,type,info,key,type,info,value,type,info,null
MapStateDescriptor -> public MapStateDescriptor(String name, TypeInformation<UK> keyTypeInfo, TypeInformation<UV> valueTypeInfo);1521729969;Create a new {@code MapStateDescriptor} with the given name and the given type information.__@param name The name of the {@code MapStateDescriptor}._@param keyTypeInfo The type information for the keys in the state._@param valueTypeInfo The type information for the values in the state.;public MapStateDescriptor(String name, TypeInformation<UK> keyTypeInfo, TypeInformation<UV> valueTypeInfo) {_		super(name, new MapTypeInfo<>(keyTypeInfo, valueTypeInfo), null)__	};create,a,new,code,map,state,descriptor,with,the,given,name,and,the,given,type,information,param,name,the,name,of,the,code,map,state,descriptor,param,key,type,info,the,type,information,for,the,keys,in,the,state,param,value,type,info,the,type,information,for,the,values,in,the,state;public,map,state,descriptor,string,name,type,information,uk,key,type,info,type,information,uv,value,type,info,super,name,new,map,type,info,key,type,info,value,type,info,null
MapStateDescriptor -> public MapStateDescriptor(String name, TypeInformation<UK> keyTypeInfo, TypeInformation<UV> valueTypeInfo);1529325710;Create a new {@code MapStateDescriptor} with the given name and the given type information.__@param name The name of the {@code MapStateDescriptor}._@param keyTypeInfo The type information for the keys in the state._@param valueTypeInfo The type information for the values in the state.;public MapStateDescriptor(String name, TypeInformation<UK> keyTypeInfo, TypeInformation<UV> valueTypeInfo) {_		super(name, new MapTypeInfo<>(keyTypeInfo, valueTypeInfo), null)__	};create,a,new,code,map,state,descriptor,with,the,given,name,and,the,given,type,information,param,name,the,name,of,the,code,map,state,descriptor,param,key,type,info,the,type,information,for,the,keys,in,the,state,param,value,type,info,the,type,information,for,the,values,in,the,state;public,map,state,descriptor,string,name,type,information,uk,key,type,info,type,information,uv,value,type,info,super,name,new,map,type,info,key,type,info,value,type,info,null
MapStateDescriptor -> public MapStateDescriptor(String name, TypeInformation<UK> keyTypeInfo, TypeInformation<UV> valueTypeInfo);1537531551;Create a new {@code MapStateDescriptor} with the given name and the given type information.__@param name The name of the {@code MapStateDescriptor}._@param keyTypeInfo The type information for the keys in the state._@param valueTypeInfo The type information for the values in the state.;public MapStateDescriptor(String name, TypeInformation<UK> keyTypeInfo, TypeInformation<UV> valueTypeInfo) {_		super(name, new MapTypeInfo<>(keyTypeInfo, valueTypeInfo), null)__	};create,a,new,code,map,state,descriptor,with,the,given,name,and,the,given,type,information,param,name,the,name,of,the,code,map,state,descriptor,param,key,type,info,the,type,information,for,the,keys,in,the,state,param,value,type,info,the,type,information,for,the,values,in,the,state;public,map,state,descriptor,string,name,type,information,uk,key,type,info,type,information,uv,value,type,info,super,name,new,map,type,info,key,type,info,value,type,info,null
MapStateDescriptor -> public MapStateDescriptor(String name, Class<UK> keyClass, Class<UV> valueClass);1487865389;Create a new {@code MapStateDescriptor} with the given name and the given type information.__<p>If this constructor fails (because it is not possible to describe the type via a class),_consider using the {@link #MapStateDescriptor(String, TypeInformation, TypeInformation)} constructor.__@param name The name of the {@code MapStateDescriptor}._@param keyClass The class of the type of keys in the state._@param valueClass The class of the type of values in the state.;public MapStateDescriptor(String name, Class<UK> keyClass, Class<UV> valueClass) {_		super(name, new MapTypeInfo<>(keyClass, valueClass), null)__	};create,a,new,code,map,state,descriptor,with,the,given,name,and,the,given,type,information,p,if,this,constructor,fails,because,it,is,not,possible,to,describe,the,type,via,a,class,consider,using,the,link,map,state,descriptor,string,type,information,type,information,constructor,param,name,the,name,of,the,code,map,state,descriptor,param,key,class,the,class,of,the,type,of,keys,in,the,state,param,value,class,the,class,of,the,type,of,values,in,the,state;public,map,state,descriptor,string,name,class,uk,key,class,class,uv,value,class,super,name,new,map,type,info,key,class,value,class,null
MapStateDescriptor -> public MapStateDescriptor(String name, Class<UK> keyClass, Class<UV> valueClass);1515177485;Create a new {@code MapStateDescriptor} with the given name and the given type information.__<p>If this constructor fails (because it is not possible to describe the type via a class),_consider using the {@link #MapStateDescriptor(String, TypeInformation, TypeInformation)} constructor.__@param name The name of the {@code MapStateDescriptor}._@param keyClass The class of the type of keys in the state._@param valueClass The class of the type of values in the state.;public MapStateDescriptor(String name, Class<UK> keyClass, Class<UV> valueClass) {_		super(name, new MapTypeInfo<>(keyClass, valueClass), null)__	};create,a,new,code,map,state,descriptor,with,the,given,name,and,the,given,type,information,p,if,this,constructor,fails,because,it,is,not,possible,to,describe,the,type,via,a,class,consider,using,the,link,map,state,descriptor,string,type,information,type,information,constructor,param,name,the,name,of,the,code,map,state,descriptor,param,key,class,the,class,of,the,type,of,keys,in,the,state,param,value,class,the,class,of,the,type,of,values,in,the,state;public,map,state,descriptor,string,name,class,uk,key,class,class,uv,value,class,super,name,new,map,type,info,key,class,value,class,null
MapStateDescriptor -> public MapStateDescriptor(String name, Class<UK> keyClass, Class<UV> valueClass);1521628649;Create a new {@code MapStateDescriptor} with the given name and the given type information.__<p>If this constructor fails (because it is not possible to describe the type via a class),_consider using the {@link #MapStateDescriptor(String, TypeInformation, TypeInformation)} constructor.__@param name The name of the {@code MapStateDescriptor}._@param keyClass The class of the type of keys in the state._@param valueClass The class of the type of values in the state.;public MapStateDescriptor(String name, Class<UK> keyClass, Class<UV> valueClass) {_		super(name, new MapTypeInfo<>(keyClass, valueClass), null)__	};create,a,new,code,map,state,descriptor,with,the,given,name,and,the,given,type,information,p,if,this,constructor,fails,because,it,is,not,possible,to,describe,the,type,via,a,class,consider,using,the,link,map,state,descriptor,string,type,information,type,information,constructor,param,name,the,name,of,the,code,map,state,descriptor,param,key,class,the,class,of,the,type,of,keys,in,the,state,param,value,class,the,class,of,the,type,of,values,in,the,state;public,map,state,descriptor,string,name,class,uk,key,class,class,uv,value,class,super,name,new,map,type,info,key,class,value,class,null
MapStateDescriptor -> public MapStateDescriptor(String name, Class<UK> keyClass, Class<UV> valueClass);1521729754;Create a new {@code MapStateDescriptor} with the given name and the given type information.__<p>If this constructor fails (because it is not possible to describe the type via a class),_consider using the {@link #MapStateDescriptor(String, TypeInformation, TypeInformation)} constructor.__@param name The name of the {@code MapStateDescriptor}._@param keyClass The class of the type of keys in the state._@param valueClass The class of the type of values in the state.;public MapStateDescriptor(String name, Class<UK> keyClass, Class<UV> valueClass) {_		super(name, new MapTypeInfo<>(keyClass, valueClass), null)__	};create,a,new,code,map,state,descriptor,with,the,given,name,and,the,given,type,information,p,if,this,constructor,fails,because,it,is,not,possible,to,describe,the,type,via,a,class,consider,using,the,link,map,state,descriptor,string,type,information,type,information,constructor,param,name,the,name,of,the,code,map,state,descriptor,param,key,class,the,class,of,the,type,of,keys,in,the,state,param,value,class,the,class,of,the,type,of,values,in,the,state;public,map,state,descriptor,string,name,class,uk,key,class,class,uv,value,class,super,name,new,map,type,info,key,class,value,class,null
MapStateDescriptor -> public MapStateDescriptor(String name, Class<UK> keyClass, Class<UV> valueClass);1521729969;Create a new {@code MapStateDescriptor} with the given name and the given type information.__<p>If this constructor fails (because it is not possible to describe the type via a class),_consider using the {@link #MapStateDescriptor(String, TypeInformation, TypeInformation)} constructor.__@param name The name of the {@code MapStateDescriptor}._@param keyClass The class of the type of keys in the state._@param valueClass The class of the type of values in the state.;public MapStateDescriptor(String name, Class<UK> keyClass, Class<UV> valueClass) {_		super(name, new MapTypeInfo<>(keyClass, valueClass), null)__	};create,a,new,code,map,state,descriptor,with,the,given,name,and,the,given,type,information,p,if,this,constructor,fails,because,it,is,not,possible,to,describe,the,type,via,a,class,consider,using,the,link,map,state,descriptor,string,type,information,type,information,constructor,param,name,the,name,of,the,code,map,state,descriptor,param,key,class,the,class,of,the,type,of,keys,in,the,state,param,value,class,the,class,of,the,type,of,values,in,the,state;public,map,state,descriptor,string,name,class,uk,key,class,class,uv,value,class,super,name,new,map,type,info,key,class,value,class,null
MapStateDescriptor -> public MapStateDescriptor(String name, Class<UK> keyClass, Class<UV> valueClass);1529325710;Create a new {@code MapStateDescriptor} with the given name and the given type information.__<p>If this constructor fails (because it is not possible to describe the type via a class),_consider using the {@link #MapStateDescriptor(String, TypeInformation, TypeInformation)} constructor.__@param name The name of the {@code MapStateDescriptor}._@param keyClass The class of the type of keys in the state._@param valueClass The class of the type of values in the state.;public MapStateDescriptor(String name, Class<UK> keyClass, Class<UV> valueClass) {_		super(name, new MapTypeInfo<>(keyClass, valueClass), null)__	};create,a,new,code,map,state,descriptor,with,the,given,name,and,the,given,type,information,p,if,this,constructor,fails,because,it,is,not,possible,to,describe,the,type,via,a,class,consider,using,the,link,map,state,descriptor,string,type,information,type,information,constructor,param,name,the,name,of,the,code,map,state,descriptor,param,key,class,the,class,of,the,type,of,keys,in,the,state,param,value,class,the,class,of,the,type,of,values,in,the,state;public,map,state,descriptor,string,name,class,uk,key,class,class,uv,value,class,super,name,new,map,type,info,key,class,value,class,null
MapStateDescriptor -> public MapStateDescriptor(String name, Class<UK> keyClass, Class<UV> valueClass);1537531551;Create a new {@code MapStateDescriptor} with the given name and the given type information.__<p>If this constructor fails (because it is not possible to describe the type via a class),_consider using the {@link #MapStateDescriptor(String, TypeInformation, TypeInformation)} constructor.__@param name The name of the {@code MapStateDescriptor}._@param keyClass The class of the type of keys in the state._@param valueClass The class of the type of values in the state.;public MapStateDescriptor(String name, Class<UK> keyClass, Class<UV> valueClass) {_		super(name, new MapTypeInfo<>(keyClass, valueClass), null)__	};create,a,new,code,map,state,descriptor,with,the,given,name,and,the,given,type,information,p,if,this,constructor,fails,because,it,is,not,possible,to,describe,the,type,via,a,class,consider,using,the,link,map,state,descriptor,string,type,information,type,information,constructor,param,name,the,name,of,the,code,map,state,descriptor,param,key,class,the,class,of,the,type,of,keys,in,the,state,param,value,class,the,class,of,the,type,of,values,in,the,state;public,map,state,descriptor,string,name,class,uk,key,class,class,uv,value,class,super,name,new,map,type,info,key,class,value,class,null
MapStateDescriptor -> public TypeSerializer<UK> getKeySerializer();1487865389;Gets the serializer for the keys in the state.__@return The serializer for the keys in the state.;public TypeSerializer<UK> getKeySerializer() {_		final TypeSerializer<Map<UK, UV>> rawSerializer = getSerializer()__		if (!(rawSerializer instanceof MapSerializer)) {_			throw new IllegalStateException("Unexpected serializer type.")__		}__		return ((MapSerializer<UK, UV>) rawSerializer).getKeySerializer()__	};gets,the,serializer,for,the,keys,in,the,state,return,the,serializer,for,the,keys,in,the,state;public,type,serializer,uk,get,key,serializer,final,type,serializer,map,uk,uv,raw,serializer,get,serializer,if,raw,serializer,instanceof,map,serializer,throw,new,illegal,state,exception,unexpected,serializer,type,return,map,serializer,uk,uv,raw,serializer,get,key,serializer
MapStateDescriptor -> public TypeSerializer<UK> getKeySerializer();1515177485;Gets the serializer for the keys in the state.__@return The serializer for the keys in the state.;public TypeSerializer<UK> getKeySerializer() {_		final TypeSerializer<Map<UK, UV>> rawSerializer = getSerializer()__		if (!(rawSerializer instanceof MapSerializer)) {_			throw new IllegalStateException("Unexpected serializer type.")__		}__		return ((MapSerializer<UK, UV>) rawSerializer).getKeySerializer()__	};gets,the,serializer,for,the,keys,in,the,state,return,the,serializer,for,the,keys,in,the,state;public,type,serializer,uk,get,key,serializer,final,type,serializer,map,uk,uv,raw,serializer,get,serializer,if,raw,serializer,instanceof,map,serializer,throw,new,illegal,state,exception,unexpected,serializer,type,return,map,serializer,uk,uv,raw,serializer,get,key,serializer
MapStateDescriptor -> public TypeSerializer<UK> getKeySerializer();1521628649;Gets the serializer for the keys in the state.__@return The serializer for the keys in the state.;public TypeSerializer<UK> getKeySerializer() {_		final TypeSerializer<Map<UK, UV>> rawSerializer = getSerializer()__		if (!(rawSerializer instanceof MapSerializer)) {_			throw new IllegalStateException("Unexpected serializer type.")__		}__		return ((MapSerializer<UK, UV>) rawSerializer).getKeySerializer()__	};gets,the,serializer,for,the,keys,in,the,state,return,the,serializer,for,the,keys,in,the,state;public,type,serializer,uk,get,key,serializer,final,type,serializer,map,uk,uv,raw,serializer,get,serializer,if,raw,serializer,instanceof,map,serializer,throw,new,illegal,state,exception,unexpected,serializer,type,return,map,serializer,uk,uv,raw,serializer,get,key,serializer
MapStateDescriptor -> public TypeSerializer<UK> getKeySerializer();1521729754;Gets the serializer for the keys in the state.__@return The serializer for the keys in the state.;public TypeSerializer<UK> getKeySerializer() {_		final TypeSerializer<Map<UK, UV>> rawSerializer = getSerializer()__		if (!(rawSerializer instanceof MapSerializer)) {_			throw new IllegalStateException("Unexpected serializer type.")__		}__		return ((MapSerializer<UK, UV>) rawSerializer).getKeySerializer()__	};gets,the,serializer,for,the,keys,in,the,state,return,the,serializer,for,the,keys,in,the,state;public,type,serializer,uk,get,key,serializer,final,type,serializer,map,uk,uv,raw,serializer,get,serializer,if,raw,serializer,instanceof,map,serializer,throw,new,illegal,state,exception,unexpected,serializer,type,return,map,serializer,uk,uv,raw,serializer,get,key,serializer
MapStateDescriptor -> public TypeSerializer<UK> getKeySerializer();1521729969;Gets the serializer for the keys in the state.__@return The serializer for the keys in the state.;public TypeSerializer<UK> getKeySerializer() {_		final TypeSerializer<Map<UK, UV>> rawSerializer = getSerializer()__		if (!(rawSerializer instanceof MapSerializer)) {_			throw new IllegalStateException("Unexpected serializer type.")__		}__		return ((MapSerializer<UK, UV>) rawSerializer).getKeySerializer()__	};gets,the,serializer,for,the,keys,in,the,state,return,the,serializer,for,the,keys,in,the,state;public,type,serializer,uk,get,key,serializer,final,type,serializer,map,uk,uv,raw,serializer,get,serializer,if,raw,serializer,instanceof,map,serializer,throw,new,illegal,state,exception,unexpected,serializer,type,return,map,serializer,uk,uv,raw,serializer,get,key,serializer
MapStateDescriptor -> public TypeSerializer<UK> getKeySerializer();1529325710;Gets the serializer for the keys in the state.__@return The serializer for the keys in the state.;public TypeSerializer<UK> getKeySerializer() {_		final TypeSerializer<Map<UK, UV>> rawSerializer = getSerializer()__		if (!(rawSerializer instanceof MapSerializer)) {_			throw new IllegalStateException("Unexpected serializer type.")__		}__		return ((MapSerializer<UK, UV>) rawSerializer).getKeySerializer()__	};gets,the,serializer,for,the,keys,in,the,state,return,the,serializer,for,the,keys,in,the,state;public,type,serializer,uk,get,key,serializer,final,type,serializer,map,uk,uv,raw,serializer,get,serializer,if,raw,serializer,instanceof,map,serializer,throw,new,illegal,state,exception,unexpected,serializer,type,return,map,serializer,uk,uv,raw,serializer,get,key,serializer
MapStateDescriptor -> public TypeSerializer<UK> getKeySerializer();1537531551;Gets the serializer for the keys in the state.__@return The serializer for the keys in the state.;public TypeSerializer<UK> getKeySerializer() {_		final TypeSerializer<Map<UK, UV>> rawSerializer = getSerializer()__		if (!(rawSerializer instanceof MapSerializer)) {_			throw new IllegalStateException("Unexpected serializer type.")__		}__		return ((MapSerializer<UK, UV>) rawSerializer).getKeySerializer()__	};gets,the,serializer,for,the,keys,in,the,state,return,the,serializer,for,the,keys,in,the,state;public,type,serializer,uk,get,key,serializer,final,type,serializer,map,uk,uv,raw,serializer,get,serializer,if,raw,serializer,instanceof,map,serializer,throw,new,illegal,state,exception,unexpected,serializer,type,return,map,serializer,uk,uv,raw,serializer,get,key,serializer
MapStateDescriptor -> public MapStateDescriptor(String name, TypeSerializer<UK> keySerializer, TypeSerializer<UV> valueSerializer);1487865389;Create a new {@code MapStateDescriptor} with the given name and the given type serializers.__@param name The name of the {@code MapStateDescriptor}._@param keySerializer The type serializer for the keys in the state._@param valueSerializer The type serializer for the values in the state.;public MapStateDescriptor(String name, TypeSerializer<UK> keySerializer, TypeSerializer<UV> valueSerializer) {_		super(name, new MapSerializer<>(keySerializer, valueSerializer), null)__	};create,a,new,code,map,state,descriptor,with,the,given,name,and,the,given,type,serializers,param,name,the,name,of,the,code,map,state,descriptor,param,key,serializer,the,type,serializer,for,the,keys,in,the,state,param,value,serializer,the,type,serializer,for,the,values,in,the,state;public,map,state,descriptor,string,name,type,serializer,uk,key,serializer,type,serializer,uv,value,serializer,super,name,new,map,serializer,key,serializer,value,serializer,null
MapStateDescriptor -> public MapStateDescriptor(String name, TypeSerializer<UK> keySerializer, TypeSerializer<UV> valueSerializer);1515177485;Create a new {@code MapStateDescriptor} with the given name and the given type serializers.__@param name The name of the {@code MapStateDescriptor}._@param keySerializer The type serializer for the keys in the state._@param valueSerializer The type serializer for the values in the state.;public MapStateDescriptor(String name, TypeSerializer<UK> keySerializer, TypeSerializer<UV> valueSerializer) {_		super(name, new MapSerializer<>(keySerializer, valueSerializer), null)__	};create,a,new,code,map,state,descriptor,with,the,given,name,and,the,given,type,serializers,param,name,the,name,of,the,code,map,state,descriptor,param,key,serializer,the,type,serializer,for,the,keys,in,the,state,param,value,serializer,the,type,serializer,for,the,values,in,the,state;public,map,state,descriptor,string,name,type,serializer,uk,key,serializer,type,serializer,uv,value,serializer,super,name,new,map,serializer,key,serializer,value,serializer,null
MapStateDescriptor -> public MapStateDescriptor(String name, TypeSerializer<UK> keySerializer, TypeSerializer<UV> valueSerializer);1521628649;Create a new {@code MapStateDescriptor} with the given name and the given type serializers.__@param name The name of the {@code MapStateDescriptor}._@param keySerializer The type serializer for the keys in the state._@param valueSerializer The type serializer for the values in the state.;public MapStateDescriptor(String name, TypeSerializer<UK> keySerializer, TypeSerializer<UV> valueSerializer) {_		super(name, new MapSerializer<>(keySerializer, valueSerializer), null)__	};create,a,new,code,map,state,descriptor,with,the,given,name,and,the,given,type,serializers,param,name,the,name,of,the,code,map,state,descriptor,param,key,serializer,the,type,serializer,for,the,keys,in,the,state,param,value,serializer,the,type,serializer,for,the,values,in,the,state;public,map,state,descriptor,string,name,type,serializer,uk,key,serializer,type,serializer,uv,value,serializer,super,name,new,map,serializer,key,serializer,value,serializer,null
MapStateDescriptor -> public MapStateDescriptor(String name, TypeSerializer<UK> keySerializer, TypeSerializer<UV> valueSerializer);1521729754;Create a new {@code MapStateDescriptor} with the given name and the given type serializers.__@param name The name of the {@code MapStateDescriptor}._@param keySerializer The type serializer for the keys in the state._@param valueSerializer The type serializer for the values in the state.;public MapStateDescriptor(String name, TypeSerializer<UK> keySerializer, TypeSerializer<UV> valueSerializer) {_		super(name, new MapSerializer<>(keySerializer, valueSerializer), null)__	};create,a,new,code,map,state,descriptor,with,the,given,name,and,the,given,type,serializers,param,name,the,name,of,the,code,map,state,descriptor,param,key,serializer,the,type,serializer,for,the,keys,in,the,state,param,value,serializer,the,type,serializer,for,the,values,in,the,state;public,map,state,descriptor,string,name,type,serializer,uk,key,serializer,type,serializer,uv,value,serializer,super,name,new,map,serializer,key,serializer,value,serializer,null
MapStateDescriptor -> public MapStateDescriptor(String name, TypeSerializer<UK> keySerializer, TypeSerializer<UV> valueSerializer);1521729969;Create a new {@code MapStateDescriptor} with the given name and the given type serializers.__@param name The name of the {@code MapStateDescriptor}._@param keySerializer The type serializer for the keys in the state._@param valueSerializer The type serializer for the values in the state.;public MapStateDescriptor(String name, TypeSerializer<UK> keySerializer, TypeSerializer<UV> valueSerializer) {_		super(name, new MapSerializer<>(keySerializer, valueSerializer), null)__	};create,a,new,code,map,state,descriptor,with,the,given,name,and,the,given,type,serializers,param,name,the,name,of,the,code,map,state,descriptor,param,key,serializer,the,type,serializer,for,the,keys,in,the,state,param,value,serializer,the,type,serializer,for,the,values,in,the,state;public,map,state,descriptor,string,name,type,serializer,uk,key,serializer,type,serializer,uv,value,serializer,super,name,new,map,serializer,key,serializer,value,serializer,null
MapStateDescriptor -> public MapStateDescriptor(String name, TypeSerializer<UK> keySerializer, TypeSerializer<UV> valueSerializer);1529325710;Create a new {@code MapStateDescriptor} with the given name and the given type serializers.__@param name The name of the {@code MapStateDescriptor}._@param keySerializer The type serializer for the keys in the state._@param valueSerializer The type serializer for the values in the state.;public MapStateDescriptor(String name, TypeSerializer<UK> keySerializer, TypeSerializer<UV> valueSerializer) {_		super(name, new MapSerializer<>(keySerializer, valueSerializer), null)__	};create,a,new,code,map,state,descriptor,with,the,given,name,and,the,given,type,serializers,param,name,the,name,of,the,code,map,state,descriptor,param,key,serializer,the,type,serializer,for,the,keys,in,the,state,param,value,serializer,the,type,serializer,for,the,values,in,the,state;public,map,state,descriptor,string,name,type,serializer,uk,key,serializer,type,serializer,uv,value,serializer,super,name,new,map,serializer,key,serializer,value,serializer,null
MapStateDescriptor -> public MapStateDescriptor(String name, TypeSerializer<UK> keySerializer, TypeSerializer<UV> valueSerializer);1537531551;Create a new {@code MapStateDescriptor} with the given name and the given type serializers.__@param name The name of the {@code MapStateDescriptor}._@param keySerializer The type serializer for the keys in the state._@param valueSerializer The type serializer for the values in the state.;public MapStateDescriptor(String name, TypeSerializer<UK> keySerializer, TypeSerializer<UV> valueSerializer) {_		super(name, new MapSerializer<>(keySerializer, valueSerializer), null)__	};create,a,new,code,map,state,descriptor,with,the,given,name,and,the,given,type,serializers,param,name,the,name,of,the,code,map,state,descriptor,param,key,serializer,the,type,serializer,for,the,keys,in,the,state,param,value,serializer,the,type,serializer,for,the,values,in,the,state;public,map,state,descriptor,string,name,type,serializer,uk,key,serializer,type,serializer,uv,value,serializer,super,name,new,map,serializer,key,serializer,value,serializer,null
