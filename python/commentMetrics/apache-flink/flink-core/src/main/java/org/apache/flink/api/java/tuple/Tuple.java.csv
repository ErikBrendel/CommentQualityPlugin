# id;timestamp;commentText;codeText;commentWords;codeWords
Tuple -> public abstract int getArity()_;1454428544;Gets the number of field in the tuple (the tuple arity).__@return The number of fields in the tuple.;public abstract int getArity()_;gets,the,number,of,field,in,the,tuple,the,tuple,arity,return,the,number,of,fields,in,the,tuple;public,abstract,int,get,arity
Tuple -> public abstract int getArity()_;1454679829;Gets the number of field in the tuple (the tuple arity).__@return The number of fields in the tuple.;public abstract int getArity()_;gets,the,number,of,field,in,the,tuple,the,tuple,arity,return,the,number,of,fields,in,the,tuple;public,abstract,int,get,arity
Tuple -> public abstract int getArity()_;1517405139;Gets the number of field in the tuple (the tuple arity).__@return The number of fields in the tuple.;public abstract int getArity()_;gets,the,number,of,field,in,the,tuple,the,tuple,arity,return,the,number,of,fields,in,the,tuple;public,abstract,int,get,arity
Tuple -> public abstract int getArity()_;1532012829;Gets the number of field in the tuple (the tuple arity).__@return The number of fields in the tuple.;public abstract int getArity()_;gets,the,number,of,field,in,the,tuple,the,tuple,arity,return,the,number,of,fields,in,the,tuple;public,abstract,int,get,arity
Tuple -> public abstract <T> T getField(int pos)_;1454428544;Gets the field at the specified position.__@param pos The position of the field, zero indexed._@return The field at the specified position._@throws IndexOutOfBoundsException Thrown, if the position is negative, or equal to, or larger than the number of fields.;public abstract <T> T getField(int pos)_;gets,the,field,at,the,specified,position,param,pos,the,position,of,the,field,zero,indexed,return,the,field,at,the,specified,position,throws,index,out,of,bounds,exception,thrown,if,the,position,is,negative,or,equal,to,or,larger,than,the,number,of,fields;public,abstract,t,t,get,field,int,pos
Tuple -> public abstract <T> T getField(int pos)_;1454679829;Gets the field at the specified position.__@param pos The position of the field, zero indexed._@return The field at the specified position._@throws IndexOutOfBoundsException Thrown, if the position is negative, or equal to, or larger than the number of fields.;public abstract <T> T getField(int pos)_;gets,the,field,at,the,specified,position,param,pos,the,position,of,the,field,zero,indexed,return,the,field,at,the,specified,position,throws,index,out,of,bounds,exception,thrown,if,the,position,is,negative,or,equal,to,or,larger,than,the,number,of,fields;public,abstract,t,t,get,field,int,pos
Tuple -> public abstract <T> T getField(int pos)_;1517405139;Gets the field at the specified position.__@param pos The position of the field, zero indexed._@return The field at the specified position._@throws IndexOutOfBoundsException Thrown, if the position is negative, or equal to, or larger than the number of fields.;public abstract <T> T getField(int pos)_;gets,the,field,at,the,specified,position,param,pos,the,position,of,the,field,zero,indexed,return,the,field,at,the,specified,position,throws,index,out,of,bounds,exception,thrown,if,the,position,is,negative,or,equal,to,or,larger,than,the,number,of,fields;public,abstract,t,t,get,field,int,pos
Tuple -> public abstract <T> T getField(int pos)_;1532012829;Gets the field at the specified position.__@param pos The position of the field, zero indexed._@return The field at the specified position._@throws IndexOutOfBoundsException Thrown, if the position is negative, or equal to, or larger than the number of fields.;public abstract <T> T getField(int pos)_;gets,the,field,at,the,specified,position,param,pos,the,position,of,the,field,zero,indexed,return,the,field,at,the,specified,position,throws,index,out,of,bounds,exception,thrown,if,the,position,is,negative,or,equal,to,or,larger,than,the,number,of,fields;public,abstract,t,t,get,field,int,pos
Tuple -> public abstract <T extends Tuple> T copy()_;1454428544;Shallow tuple copy._@return A new Tuple with the same fields as this.;public abstract <T extends Tuple> T copy()_;shallow,tuple,copy,return,a,new,tuple,with,the,same,fields,as,this;public,abstract,t,extends,tuple,t,copy
Tuple -> public abstract <T extends Tuple> T copy()_;1454679829;Shallow tuple copy._@return A new Tuple with the same fields as this.;public abstract <T extends Tuple> T copy()_;shallow,tuple,copy,return,a,new,tuple,with,the,same,fields,as,this;public,abstract,t,extends,tuple,t,copy
Tuple -> public abstract <T extends Tuple> T copy()_;1517405139;Shallow tuple copy._@return A new Tuple with the same fields as this.;public abstract <T extends Tuple> T copy()_;shallow,tuple,copy,return,a,new,tuple,with,the,same,fields,as,this;public,abstract,t,extends,tuple,t,copy
Tuple -> public abstract <T extends Tuple> T copy()_;1532012829;Shallow tuple copy._@return A new Tuple with the same fields as this.;public abstract <T extends Tuple> T copy()_;shallow,tuple,copy,return,a,new,tuple,with,the,same,fields,as,this;public,abstract,t,extends,tuple,t,copy
Tuple -> @SuppressWarnings("unchecked") 	public static Class<? extends Tuple> getTupleClass(int arity);1454428544;Gets the class corresponding to the tuple of the given arity (dimensions). For_example, {@code getTupleClass(3)} will return the {@code Tuple3.class}.__@param arity The arity of the tuple class to get._@return The tuple class with the given arity.;@SuppressWarnings("unchecked")_	public static Class<? extends Tuple> getTupleClass(int arity) {_		if (arity < 0 || arity > MAX_ARITY) {_			throw new IllegalArgumentException("The tuple arity must be in [0, " + MAX_ARITY + "].")__		}_		return (Class<? extends Tuple>) CLASSES[arity]__	};gets,the,class,corresponding,to,the,tuple,of,the,given,arity,dimensions,for,example,code,get,tuple,class,3,will,return,the,code,tuple3,class,param,arity,the,arity,of,the,tuple,class,to,get,return,the,tuple,class,with,the,given,arity;suppress,warnings,unchecked,public,static,class,extends,tuple,get,tuple,class,int,arity,if,arity,0,arity,throw,new,illegal,argument,exception,the,tuple,arity,must,be,in,0,return,class,extends,tuple,classes,arity
Tuple -> @SuppressWarnings("unchecked") 	public static Class<? extends Tuple> getTupleClass(int arity);1454679829;Gets the class corresponding to the tuple of the given arity (dimensions). For_example, {@code getTupleClass(3)} will return the {@code Tuple3.class}.__@param arity The arity of the tuple class to get._@return The tuple class with the given arity.;@SuppressWarnings("unchecked")_	public static Class<? extends Tuple> getTupleClass(int arity) {_		if (arity < 0 || arity > MAX_ARITY) {_			throw new IllegalArgumentException("The tuple arity must be in [0, " + MAX_ARITY + "].")__		}_		return (Class<? extends Tuple>) CLASSES[arity]__	};gets,the,class,corresponding,to,the,tuple,of,the,given,arity,dimensions,for,example,code,get,tuple,class,3,will,return,the,code,tuple3,class,param,arity,the,arity,of,the,tuple,class,to,get,return,the,tuple,class,with,the,given,arity;suppress,warnings,unchecked,public,static,class,extends,tuple,get,tuple,class,int,arity,if,arity,0,arity,throw,new,illegal,argument,exception,the,tuple,arity,must,be,in,0,return,class,extends,tuple,classes,arity
Tuple -> @SuppressWarnings("unchecked") 	public static Class<? extends Tuple> getTupleClass(int arity);1517405139;Gets the class corresponding to the tuple of the given arity (dimensions). For_example, {@code getTupleClass(3)} will return the {@code Tuple3.class}.__@param arity The arity of the tuple class to get._@return The tuple class with the given arity.;@SuppressWarnings("unchecked")_	public static Class<? extends Tuple> getTupleClass(int arity) {_		if (arity < 0 || arity > MAX_ARITY) {_			throw new IllegalArgumentException("The tuple arity must be in [0, " + MAX_ARITY + "].")__		}_		return (Class<? extends Tuple>) CLASSES[arity]__	};gets,the,class,corresponding,to,the,tuple,of,the,given,arity,dimensions,for,example,code,get,tuple,class,3,will,return,the,code,tuple3,class,param,arity,the,arity,of,the,tuple,class,to,get,return,the,tuple,class,with,the,given,arity;suppress,warnings,unchecked,public,static,class,extends,tuple,get,tuple,class,int,arity,if,arity,0,arity,throw,new,illegal,argument,exception,the,tuple,arity,must,be,in,0,return,class,extends,tuple,classes,arity
Tuple -> @SuppressWarnings("unchecked") 	public static Class<? extends Tuple> getTupleClass(int arity);1532012829;Gets the class corresponding to the tuple of the given arity (dimensions). For_example, {@code getTupleClass(3)} will return the {@code Tuple3.class}.__@param arity The arity of the tuple class to get._@return The tuple class with the given arity.;@SuppressWarnings("unchecked")_	public static Class<? extends Tuple> getTupleClass(int arity) {_		if (arity < 0 || arity > MAX_ARITY) {_			throw new IllegalArgumentException("The tuple arity must be in [0, " + MAX_ARITY + "].")__		}_		return (Class<? extends Tuple>) CLASSES[arity]__	};gets,the,class,corresponding,to,the,tuple,of,the,given,arity,dimensions,for,example,code,get,tuple,class,3,will,return,the,code,tuple3,class,param,arity,the,arity,of,the,tuple,class,to,get,return,the,tuple,class,with,the,given,arity;suppress,warnings,unchecked,public,static,class,extends,tuple,get,tuple,class,int,arity,if,arity,0,arity,throw,new,illegal,argument,exception,the,tuple,arity,must,be,in,0,return,class,extends,tuple,classes,arity
Tuple -> public <T> T getFieldNotNull(int pos);1454428544;Gets the field at the specified position, throws NullFieldException if the field is null. Used for comparing key fields.__@param pos The position of the field, zero indexed._@return The field at the specified position._@throws IndexOutOfBoundsException Thrown, if the position is negative, or equal to, or larger than the number of fields._@throws NullFieldException Thrown, if the field at pos is null.;public <T> T getFieldNotNull(int pos){_		T field = getField(pos)__		if (field != null) {_			return field__		} else {_			throw new NullFieldException(pos)__		}_	};gets,the,field,at,the,specified,position,throws,null,field,exception,if,the,field,is,null,used,for,comparing,key,fields,param,pos,the,position,of,the,field,zero,indexed,return,the,field,at,the,specified,position,throws,index,out,of,bounds,exception,thrown,if,the,position,is,negative,or,equal,to,or,larger,than,the,number,of,fields,throws,null,field,exception,thrown,if,the,field,at,pos,is,null;public,t,t,get,field,not,null,int,pos,t,field,get,field,pos,if,field,null,return,field,else,throw,new,null,field,exception,pos
Tuple -> public <T> T getFieldNotNull(int pos);1454679829;Gets the field at the specified position, throws NullFieldException if the field is null. Used for comparing key fields.__@param pos The position of the field, zero indexed._@return The field at the specified position._@throws IndexOutOfBoundsException Thrown, if the position is negative, or equal to, or larger than the number of fields._@throws NullFieldException Thrown, if the field at pos is null.;public <T> T getFieldNotNull(int pos){_		T field = getField(pos)__		if (field != null) {_			return field__		} else {_			throw new NullFieldException(pos)__		}_	};gets,the,field,at,the,specified,position,throws,null,field,exception,if,the,field,is,null,used,for,comparing,key,fields,param,pos,the,position,of,the,field,zero,indexed,return,the,field,at,the,specified,position,throws,index,out,of,bounds,exception,thrown,if,the,position,is,negative,or,equal,to,or,larger,than,the,number,of,fields,throws,null,field,exception,thrown,if,the,field,at,pos,is,null;public,t,t,get,field,not,null,int,pos,t,field,get,field,pos,if,field,null,return,field,else,throw,new,null,field,exception,pos
Tuple -> public <T> T getFieldNotNull(int pos);1517405139;Gets the field at the specified position, throws NullFieldException if the field is null. Used for comparing key fields.__@param pos The position of the field, zero indexed._@return The field at the specified position._@throws IndexOutOfBoundsException Thrown, if the position is negative, or equal to, or larger than the number of fields._@throws NullFieldException Thrown, if the field at pos is null.;public <T> T getFieldNotNull(int pos){_		T field = getField(pos)__		if (field != null) {_			return field__		} else {_			throw new NullFieldException(pos)__		}_	};gets,the,field,at,the,specified,position,throws,null,field,exception,if,the,field,is,null,used,for,comparing,key,fields,param,pos,the,position,of,the,field,zero,indexed,return,the,field,at,the,specified,position,throws,index,out,of,bounds,exception,thrown,if,the,position,is,negative,or,equal,to,or,larger,than,the,number,of,fields,throws,null,field,exception,thrown,if,the,field,at,pos,is,null;public,t,t,get,field,not,null,int,pos,t,field,get,field,pos,if,field,null,return,field,else,throw,new,null,field,exception,pos
Tuple -> public <T> T getFieldNotNull(int pos);1532012829;Gets the field at the specified position, throws NullFieldException if the field is null. Used for comparing key fields.__@param pos The position of the field, zero indexed._@return The field at the specified position._@throws IndexOutOfBoundsException Thrown, if the position is negative, or equal to, or larger than the number of fields._@throws NullFieldException Thrown, if the field at pos is null.;public <T> T getFieldNotNull(int pos){_		T field = getField(pos)__		if (field != null) {_			return field__		} else {_			throw new NullFieldException(pos)__		}_	};gets,the,field,at,the,specified,position,throws,null,field,exception,if,the,field,is,null,used,for,comparing,key,fields,param,pos,the,position,of,the,field,zero,indexed,return,the,field,at,the,specified,position,throws,index,out,of,bounds,exception,thrown,if,the,position,is,negative,or,equal,to,or,larger,than,the,number,of,fields,throws,null,field,exception,thrown,if,the,field,at,pos,is,null;public,t,t,get,field,not,null,int,pos,t,field,get,field,pos,if,field,null,return,field,else,throw,new,null,field,exception,pos
Tuple -> public abstract <T> void setField(T value, int pos)_;1454428544;Sets the field at the specified position.__@param value The value to be assigned to the field at the specified position._@param pos The position of the field, zero indexed._@throws IndexOutOfBoundsException Thrown, if the position is negative, or equal to, or larger than the number of fields.;public abstract <T> void setField(T value, int pos)_;sets,the,field,at,the,specified,position,param,value,the,value,to,be,assigned,to,the,field,at,the,specified,position,param,pos,the,position,of,the,field,zero,indexed,throws,index,out,of,bounds,exception,thrown,if,the,position,is,negative,or,equal,to,or,larger,than,the,number,of,fields;public,abstract,t,void,set,field,t,value,int,pos
Tuple -> public abstract <T> void setField(T value, int pos)_;1454679829;Sets the field at the specified position.__@param value The value to be assigned to the field at the specified position._@param pos The position of the field, zero indexed._@throws IndexOutOfBoundsException Thrown, if the position is negative, or equal to, or larger than the number of fields.;public abstract <T> void setField(T value, int pos)_;sets,the,field,at,the,specified,position,param,value,the,value,to,be,assigned,to,the,field,at,the,specified,position,param,pos,the,position,of,the,field,zero,indexed,throws,index,out,of,bounds,exception,thrown,if,the,position,is,negative,or,equal,to,or,larger,than,the,number,of,fields;public,abstract,t,void,set,field,t,value,int,pos
Tuple -> public abstract <T> void setField(T value, int pos)_;1517405139;Sets the field at the specified position.__@param value The value to be assigned to the field at the specified position._@param pos The position of the field, zero indexed._@throws IndexOutOfBoundsException Thrown, if the position is negative, or equal to, or larger than the number of fields.;public abstract <T> void setField(T value, int pos)_;sets,the,field,at,the,specified,position,param,value,the,value,to,be,assigned,to,the,field,at,the,specified,position,param,pos,the,position,of,the,field,zero,indexed,throws,index,out,of,bounds,exception,thrown,if,the,position,is,negative,or,equal,to,or,larger,than,the,number,of,fields;public,abstract,t,void,set,field,t,value,int,pos
Tuple -> public abstract <T> void setField(T value, int pos)_;1532012829;Sets the field at the specified position.__@param value The value to be assigned to the field at the specified position._@param pos The position of the field, zero indexed._@throws IndexOutOfBoundsException Thrown, if the position is negative, or equal to, or larger than the number of fields.;public abstract <T> void setField(T value, int pos)_;sets,the,field,at,the,specified,position,param,value,the,value,to,be,assigned,to,the,field,at,the,specified,position,param,pos,the,position,of,the,field,zero,indexed,throws,index,out,of,bounds,exception,thrown,if,the,position,is,negative,or,equal,to,or,larger,than,the,number,of,fields;public,abstract,t,void,set,field,t,value,int,pos
