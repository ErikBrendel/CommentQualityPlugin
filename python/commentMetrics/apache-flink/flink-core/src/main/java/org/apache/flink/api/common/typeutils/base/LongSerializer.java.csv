commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isImmutableType() {     return true. }
false;public;0;4;;@Override public Long createInstance() {     return ZERO. }
false;public;1;4;;@Override public Long copy(Long from) {     return from. }
false;public;2;4;;@Override public Long copy(Long from, Long reuse) {     return from. }
false;public;0;4;;@Override public int getLength() {     return Long.BYTES. }
false;public;2;4;;@Override public void serialize(Long record, DataOutputView target) throws IOException {     target.writeLong(record). }
false;public;1;4;;@Override public Long deserialize(DataInputView source) throws IOException {     return source.readLong(). }
false;public;2;4;;@Override public Long deserialize(Long reuse, DataInputView source) throws IOException {     return deserialize(source). }
false;public;2;4;;@Override public void copy(DataInputView source, DataOutputView target) throws IOException {     target.writeLong(source.readLong()). }
false;public;0;4;;@Override public TypeSerializerSnapshot<Long> snapshotConfiguration() {     return new LongSerializerSnapshot(). }
