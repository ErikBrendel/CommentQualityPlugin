# id;timestamp;commentText;codeText;commentWords;codeWords
DualInputOperator -> @Deprecated 	public void setFirstInputs(List<Operator<IN1>> inputs);1405024514;Sets the first input to the union of the given operators.__@param inputs The operator(s) that form the first inputs._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setFirstInputs(List<Operator<IN1>> inputs) {_		this.input1 = Operator.createUnionCascade(inputs)__	};sets,the,first,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,first,inputs,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,first,inputs,list,operator,in1,inputs,this,input1,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setFirstInputs(List<Operator<IN1>> inputs);1405090423;Sets the first input to the union of the given operators.__@param inputs The operator(s) that form the first inputs._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setFirstInputs(List<Operator<IN1>> inputs) {_		this.input1 = Operator.createUnionCascade(inputs)__	};sets,the,first,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,first,inputs,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,first,inputs,list,operator,in1,inputs,this,input1,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setFirstInputs(List<Operator<IN1>> inputs);1411473593;Sets the first input to the union of the given operators.__@param inputs The operator(s) that form the first inputs._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setFirstInputs(List<Operator<IN1>> inputs) {_		this.input1 = Operator.createUnionCascade(inputs)__	};sets,the,first,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,first,inputs,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,first,inputs,list,operator,in1,inputs,this,input1,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setFirstInputs(List<Operator<IN1>> inputs);1412346153;Sets the first input to the union of the given operators.__@param inputs The operator(s) that form the first inputs._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setFirstInputs(List<Operator<IN1>> inputs) {_		this.input1 = Operator.createUnionCascade(inputs)__	};sets,the,first,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,first,inputs,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,first,inputs,list,operator,in1,inputs,this,input1,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setFirstInputs(List<Operator<IN1>> inputs);1412346154;Sets the first input to the union of the given operators.__@param inputs The operator(s) that form the first inputs._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setFirstInputs(List<Operator<IN1>> inputs) {_		this.input1 = Operator.createUnionCascade(inputs)__	};sets,the,first,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,first,inputs,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,first,inputs,list,operator,in1,inputs,this,input1,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setFirstInputs(List<Operator<IN1>> inputs);1422405541;Sets the first input to the union of the given operators.__@param inputs The operator(s) that form the first inputs._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setFirstInputs(List<Operator<IN1>> inputs) {_		this.input1 = Operator.createUnionCascade(inputs)__	};sets,the,first,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,first,inputs,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,first,inputs,list,operator,in1,inputs,this,input1,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setFirstInputs(List<Operator<IN1>> inputs);1423570503;Sets the first input to the union of the given operators.__@param inputs The operator(s) that form the first inputs._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setFirstInputs(List<Operator<IN1>> inputs) {_		this.input1 = Operator.createUnionCascade(inputs)__	};sets,the,first,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,first,inputs,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,first,inputs,list,operator,in1,inputs,this,input1,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setFirstInputs(List<Operator<IN1>> inputs);1455479358;Sets the first input to the union of the given operators.__@param inputs The operator(s) that form the first inputs._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setFirstInputs(List<Operator<IN1>> inputs) {_		this.input1 = Operator.createUnionCascade(inputs)__	};sets,the,first,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,first,inputs,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,first,inputs,list,operator,in1,inputs,this,input1,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setFirstInputs(List<Operator<IN1>> inputs);1515177486;Sets the first input to the union of the given operators.__@param inputs The operator(s) that form the first inputs._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setFirstInputs(List<Operator<IN1>> inputs) {_		this.input1 = Operator.createUnionCascade(inputs)__	};sets,the,first,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,first,inputs,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,first,inputs,list,operator,in1,inputs,this,input1,operator,create,union,cascade,inputs
DualInputOperator -> public void clearFirstInput();1405024514;Clears this operator's first input.;public void clearFirstInput() {_		this.input1 = null__	};clears,this,operator,s,first,input;public,void,clear,first,input,this,input1,null
DualInputOperator -> public void clearFirstInput();1405090423;Clears this operator's first input.;public void clearFirstInput() {_		this.input1 = null__	};clears,this,operator,s,first,input;public,void,clear,first,input,this,input1,null
DualInputOperator -> public void clearFirstInput();1411473593;Clears this operator's first input.;public void clearFirstInput() {_		this.input1 = null__	};clears,this,operator,s,first,input;public,void,clear,first,input,this,input1,null
DualInputOperator -> public void clearFirstInput();1412346153;Clears this operator's first input.;public void clearFirstInput() {_		this.input1 = null__	};clears,this,operator,s,first,input;public,void,clear,first,input,this,input1,null
DualInputOperator -> public void clearFirstInput();1412346154;Clears this operator's first input.;public void clearFirstInput() {_		this.input1 = null__	};clears,this,operator,s,first,input;public,void,clear,first,input,this,input1,null
DualInputOperator -> public void clearFirstInput();1422405541;Clears this operator's first input.;public void clearFirstInput() {_		this.input1 = null__	};clears,this,operator,s,first,input;public,void,clear,first,input,this,input1,null
DualInputOperator -> public void clearFirstInput();1423570503;Clears this operator's first input.;public void clearFirstInput() {_		this.input1 = null__	};clears,this,operator,s,first,input;public,void,clear,first,input,this,input1,null
DualInputOperator -> public void clearFirstInput();1455479358;Clears this operator's first input.;public void clearFirstInput() {_		this.input1 = null__	};clears,this,operator,s,first,input;public,void,clear,first,input,this,input1,null
DualInputOperator -> public void clearFirstInput();1515177486;Clears this operator's first input.;public void clearFirstInput() {_		this.input1 = null__	};clears,this,operator,s,first,input;public,void,clear,first,input,this,input1,null
DualInputOperator -> @Deprecated 	@SuppressWarnings("unchecked") 	public void addFirstInputs(List<Operator<IN1>> inputs);1405024514;Add to the first input the union of the given operators.__@param inputs The operator(s) to be unioned with the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	@SuppressWarnings("unchecked")_	public void addFirstInputs(List<Operator<IN1>> inputs) {_		this.input1 = Operator.createUnionCascade(this.input1, inputs.toArray(new Operator[inputs.size()]))__	};add,to,the,first,input,the,union,of,the,given,operators,param,inputs,the,operator,s,to,be,unioned,with,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,suppress,warnings,unchecked,public,void,add,first,inputs,list,operator,in1,inputs,this,input1,operator,create,union,cascade,this,input1,inputs,to,array,new,operator,inputs,size
DualInputOperator -> @Deprecated 	@SuppressWarnings("unchecked") 	public void addFirstInputs(List<Operator<IN1>> inputs);1405090423;Add to the first input the union of the given operators.__@param inputs The operator(s) to be unioned with the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	@SuppressWarnings("unchecked")_	public void addFirstInputs(List<Operator<IN1>> inputs) {_		this.input1 = Operator.createUnionCascade(this.input1, inputs.toArray(new Operator[inputs.size()]))__	};add,to,the,first,input,the,union,of,the,given,operators,param,inputs,the,operator,s,to,be,unioned,with,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,suppress,warnings,unchecked,public,void,add,first,inputs,list,operator,in1,inputs,this,input1,operator,create,union,cascade,this,input1,inputs,to,array,new,operator,inputs,size
DualInputOperator -> @Deprecated 	@SuppressWarnings("unchecked") 	public void addFirstInputs(List<Operator<IN1>> inputs);1411473593;Add to the first input the union of the given operators.__@param inputs The operator(s) to be unioned with the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	@SuppressWarnings("unchecked")_	public void addFirstInputs(List<Operator<IN1>> inputs) {_		this.input1 = Operator.createUnionCascade(this.input1, inputs.toArray(new Operator[inputs.size()]))__	};add,to,the,first,input,the,union,of,the,given,operators,param,inputs,the,operator,s,to,be,unioned,with,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,suppress,warnings,unchecked,public,void,add,first,inputs,list,operator,in1,inputs,this,input1,operator,create,union,cascade,this,input1,inputs,to,array,new,operator,inputs,size
DualInputOperator -> @Deprecated 	@SuppressWarnings("unchecked") 	public void addFirstInputs(List<Operator<IN1>> inputs);1412346153;Add to the first input the union of the given operators.__@param inputs The operator(s) to be unioned with the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	@SuppressWarnings("unchecked")_	public void addFirstInputs(List<Operator<IN1>> inputs) {_		this.input1 = Operator.createUnionCascade(this.input1, inputs.toArray(new Operator[inputs.size()]))__	};add,to,the,first,input,the,union,of,the,given,operators,param,inputs,the,operator,s,to,be,unioned,with,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,suppress,warnings,unchecked,public,void,add,first,inputs,list,operator,in1,inputs,this,input1,operator,create,union,cascade,this,input1,inputs,to,array,new,operator,inputs,size
DualInputOperator -> @Deprecated 	@SuppressWarnings("unchecked") 	public void addFirstInputs(List<Operator<IN1>> inputs);1412346154;Add to the first input the union of the given operators.__@param inputs The operator(s) to be unioned with the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	@SuppressWarnings("unchecked")_	public void addFirstInputs(List<Operator<IN1>> inputs) {_		this.input1 = Operator.createUnionCascade(this.input1, inputs.toArray(new Operator[inputs.size()]))__	};add,to,the,first,input,the,union,of,the,given,operators,param,inputs,the,operator,s,to,be,unioned,with,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,suppress,warnings,unchecked,public,void,add,first,inputs,list,operator,in1,inputs,this,input1,operator,create,union,cascade,this,input1,inputs,to,array,new,operator,inputs,size
DualInputOperator -> @Deprecated 	@SuppressWarnings("unchecked") 	public void addFirstInputs(List<Operator<IN1>> inputs);1422405541;Add to the first input the union of the given operators.__@param inputs The operator(s) to be unioned with the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	@SuppressWarnings("unchecked")_	public void addFirstInputs(List<Operator<IN1>> inputs) {_		this.input1 = Operator.createUnionCascade(this.input1, inputs.toArray(new Operator[inputs.size()]))__	};add,to,the,first,input,the,union,of,the,given,operators,param,inputs,the,operator,s,to,be,unioned,with,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,suppress,warnings,unchecked,public,void,add,first,inputs,list,operator,in1,inputs,this,input1,operator,create,union,cascade,this,input1,inputs,to,array,new,operator,inputs,size
DualInputOperator -> @Deprecated 	@SuppressWarnings("unchecked") 	public void addFirstInputs(List<Operator<IN1>> inputs);1423570503;Add to the first input the union of the given operators.__@param inputs The operator(s) to be unioned with the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	@SuppressWarnings("unchecked")_	public void addFirstInputs(List<Operator<IN1>> inputs) {_		this.input1 = Operator.createUnionCascade(this.input1, inputs.toArray(new Operator[inputs.size()]))__	};add,to,the,first,input,the,union,of,the,given,operators,param,inputs,the,operator,s,to,be,unioned,with,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,suppress,warnings,unchecked,public,void,add,first,inputs,list,operator,in1,inputs,this,input1,operator,create,union,cascade,this,input1,inputs,to,array,new,operator,inputs,size
DualInputOperator -> @Deprecated 	@SuppressWarnings("unchecked") 	public void addFirstInputs(List<Operator<IN1>> inputs);1455479358;Add to the first input the union of the given operators.__@param inputs The operator(s) to be unioned with the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	@SuppressWarnings("unchecked")_	public void addFirstInputs(List<Operator<IN1>> inputs) {_		this.input1 = Operator.createUnionCascade(this.input1, inputs.toArray(new Operator[inputs.size()]))__	};add,to,the,first,input,the,union,of,the,given,operators,param,inputs,the,operator,s,to,be,unioned,with,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,suppress,warnings,unchecked,public,void,add,first,inputs,list,operator,in1,inputs,this,input1,operator,create,union,cascade,this,input1,inputs,to,array,new,operator,inputs,size
DualInputOperator -> @Deprecated 	@SuppressWarnings("unchecked") 	public void addFirstInputs(List<Operator<IN1>> inputs);1515177486;Add to the first input the union of the given operators.__@param inputs The operator(s) to be unioned with the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	@SuppressWarnings("unchecked")_	public void addFirstInputs(List<Operator<IN1>> inputs) {_		this.input1 = Operator.createUnionCascade(this.input1, inputs.toArray(new Operator[inputs.size()]))__	};add,to,the,first,input,the,union,of,the,given,operators,param,inputs,the,operator,s,to,be,unioned,with,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,suppress,warnings,unchecked,public,void,add,first,inputs,list,operator,in1,inputs,this,input1,operator,create,union,cascade,this,input1,inputs,to,array,new,operator,inputs,size
DualInputOperator -> @Deprecated 	public void addFirstInput(Operator<IN1>... input);1405024514;Add to the first input the union of the given operators.__@param input The operator(s) to be unioned with the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void addFirstInput(Operator<IN1>... input) {_		this.input1 = Operator.createUnionCascade(this.input1, input)__	};add,to,the,first,input,the,union,of,the,given,operators,param,input,the,operator,s,to,be,unioned,with,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,add,first,input,operator,in1,input,this,input1,operator,create,union,cascade,this,input1,input
DualInputOperator -> @Deprecated 	public void addFirstInput(Operator<IN1>... input);1405090423;Add to the first input the union of the given operators.__@param input The operator(s) to be unioned with the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void addFirstInput(Operator<IN1>... input) {_		this.input1 = Operator.createUnionCascade(this.input1, input)__	};add,to,the,first,input,the,union,of,the,given,operators,param,input,the,operator,s,to,be,unioned,with,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,add,first,input,operator,in1,input,this,input1,operator,create,union,cascade,this,input1,input
DualInputOperator -> @Deprecated 	public void addFirstInput(Operator<IN1>... input);1411473593;Add to the first input the union of the given operators.__@param input The operator(s) to be unioned with the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void addFirstInput(Operator<IN1>... input) {_		this.input1 = Operator.createUnionCascade(this.input1, input)__	};add,to,the,first,input,the,union,of,the,given,operators,param,input,the,operator,s,to,be,unioned,with,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,add,first,input,operator,in1,input,this,input1,operator,create,union,cascade,this,input1,input
DualInputOperator -> @Deprecated 	public void addFirstInput(Operator<IN1>... input);1412346153;Add to the first input the union of the given operators.__@param input The operator(s) to be unioned with the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void addFirstInput(Operator<IN1>... input) {_		this.input1 = Operator.createUnionCascade(this.input1, input)__	};add,to,the,first,input,the,union,of,the,given,operators,param,input,the,operator,s,to,be,unioned,with,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,add,first,input,operator,in1,input,this,input1,operator,create,union,cascade,this,input1,input
DualInputOperator -> @Deprecated 	public void addFirstInput(Operator<IN1>... input);1412346154;Add to the first input the union of the given operators.__@param input The operator(s) to be unioned with the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void addFirstInput(Operator<IN1>... input) {_		this.input1 = Operator.createUnionCascade(this.input1, input)__	};add,to,the,first,input,the,union,of,the,given,operators,param,input,the,operator,s,to,be,unioned,with,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,add,first,input,operator,in1,input,this,input1,operator,create,union,cascade,this,input1,input
DualInputOperator -> @Deprecated 	public void addFirstInput(Operator<IN1>... input);1422405541;Add to the first input the union of the given operators.__@param input The operator(s) to be unioned with the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void addFirstInput(Operator<IN1>... input) {_		this.input1 = Operator.createUnionCascade(this.input1, input)__	};add,to,the,first,input,the,union,of,the,given,operators,param,input,the,operator,s,to,be,unioned,with,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,add,first,input,operator,in1,input,this,input1,operator,create,union,cascade,this,input1,input
DualInputOperator -> @Deprecated 	public void addFirstInput(Operator<IN1>... input);1423570503;Add to the first input the union of the given operators.__@param input The operator(s) to be unioned with the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void addFirstInput(Operator<IN1>... input) {_		this.input1 = Operator.createUnionCascade(this.input1, input)__	};add,to,the,first,input,the,union,of,the,given,operators,param,input,the,operator,s,to,be,unioned,with,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,add,first,input,operator,in1,input,this,input1,operator,create,union,cascade,this,input1,input
DualInputOperator -> @Deprecated 	public void addFirstInput(Operator<IN1>... input);1455479358;Add to the first input the union of the given operators.__@param input The operator(s) to be unioned with the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void addFirstInput(Operator<IN1>... input) {_		this.input1 = Operator.createUnionCascade(this.input1, input)__	};add,to,the,first,input,the,union,of,the,given,operators,param,input,the,operator,s,to,be,unioned,with,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,add,first,input,operator,in1,input,this,input1,operator,create,union,cascade,this,input1,input
DualInputOperator -> @Deprecated 	public void addFirstInput(Operator<IN1>... input);1515177486;Add to the first input the union of the given operators.__@param input The operator(s) to be unioned with the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void addFirstInput(Operator<IN1>... input) {_		this.input1 = Operator.createUnionCascade(this.input1, input)__	};add,to,the,first,input,the,union,of,the,given,operators,param,input,the,operator,s,to,be,unioned,with,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,add,first,input,operator,in1,input,this,input1,operator,create,union,cascade,this,input1,input
DualInputOperator -> protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, String name);1405024514;Creates a new abstract dual-input Pact with the given name wrapping the given user function.__@param stub The class containing the user function._@param name The given name for the operator, used in plans, logs and progress messages.;protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, String name) {_		super(stub, operatorInfo, name)__		this.keyFields1 = this.keyFields2 = new int[0]__	};creates,a,new,abstract,dual,input,pact,with,the,given,name,wrapping,the,given,user,function,param,stub,the,class,containing,the,user,function,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,dual,input,operator,user,code,wrapper,ft,stub,binary,operator,information,in1,in2,out,operator,info,string,name,super,stub,operator,info,name,this,key,fields1,this,key,fields2,new,int,0
DualInputOperator -> protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, String name);1405090423;Creates a new abstract dual-input Pact with the given name wrapping the given user function.__@param stub The class containing the user function._@param name The given name for the operator, used in plans, logs and progress messages.;protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, String name) {_		super(stub, operatorInfo, name)__		this.keyFields1 = this.keyFields2 = new int[0]__	};creates,a,new,abstract,dual,input,pact,with,the,given,name,wrapping,the,given,user,function,param,stub,the,class,containing,the,user,function,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,dual,input,operator,user,code,wrapper,ft,stub,binary,operator,information,in1,in2,out,operator,info,string,name,super,stub,operator,info,name,this,key,fields1,this,key,fields2,new,int,0
DualInputOperator -> protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, String name);1411473593;Creates a new abstract dual-input Pact with the given name wrapping the given user function.__@param stub The class containing the user function._@param name The given name for the operator, used in plans, logs and progress messages.;protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, String name) {_		super(stub, operatorInfo, name)__		this.keyFields1 = this.keyFields2 = new int[0]__	};creates,a,new,abstract,dual,input,pact,with,the,given,name,wrapping,the,given,user,function,param,stub,the,class,containing,the,user,function,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,dual,input,operator,user,code,wrapper,ft,stub,binary,operator,information,in1,in2,out,operator,info,string,name,super,stub,operator,info,name,this,key,fields1,this,key,fields2,new,int,0
DualInputOperator -> protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, String name);1412346153;Creates a new abstract dual-input Pact with the given name wrapping the given user function.__@param stub The class containing the user function._@param name The given name for the operator, used in plans, logs and progress messages.;protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, String name) {_		super(stub, operatorInfo, name)__		this.keyFields1 = this.keyFields2 = new int[0]__	};creates,a,new,abstract,dual,input,pact,with,the,given,name,wrapping,the,given,user,function,param,stub,the,class,containing,the,user,function,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,dual,input,operator,user,code,wrapper,ft,stub,binary,operator,information,in1,in2,out,operator,info,string,name,super,stub,operator,info,name,this,key,fields1,this,key,fields2,new,int,0
DualInputOperator -> protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, String name);1412346154;Creates a new abstract dual-input Pact with the given name wrapping the given user function.__@param stub The class containing the user function._@param name The given name for the operator, used in plans, logs and progress messages.;protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, String name) {_		super(stub, operatorInfo, name)__		this.keyFields1 = this.keyFields2 = new int[0]__	};creates,a,new,abstract,dual,input,pact,with,the,given,name,wrapping,the,given,user,function,param,stub,the,class,containing,the,user,function,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,dual,input,operator,user,code,wrapper,ft,stub,binary,operator,information,in1,in2,out,operator,info,string,name,super,stub,operator,info,name,this,key,fields1,this,key,fields2,new,int,0
DualInputOperator -> protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, String name);1422405541;Creates a new abstract dual-input Pact with the given name wrapping the given user function.__@param stub The class containing the user function._@param name The given name for the operator, used in plans, logs and progress messages.;protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, String name) {_		super(stub, operatorInfo, name)__		this.keyFields1 = this.keyFields2 = new int[0]__	};creates,a,new,abstract,dual,input,pact,with,the,given,name,wrapping,the,given,user,function,param,stub,the,class,containing,the,user,function,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,dual,input,operator,user,code,wrapper,ft,stub,binary,operator,information,in1,in2,out,operator,info,string,name,super,stub,operator,info,name,this,key,fields1,this,key,fields2,new,int,0
DualInputOperator -> protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, String name);1423570503;Creates a new abstract dual-input Pact with the given name wrapping the given user function.__@param stub The class containing the user function._@param name The given name for the operator, used in plans, logs and progress messages.;protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, String name) {_		super(stub, operatorInfo, name)__		this.keyFields1 = this.keyFields2 = new int[0]__	};creates,a,new,abstract,dual,input,pact,with,the,given,name,wrapping,the,given,user,function,param,stub,the,class,containing,the,user,function,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,dual,input,operator,user,code,wrapper,ft,stub,binary,operator,information,in1,in2,out,operator,info,string,name,super,stub,operator,info,name,this,key,fields1,this,key,fields2,new,int,0
DualInputOperator -> protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, String name);1455479358;Creates a new abstract dual-input Pact with the given name wrapping the given user function.__@param stub The class containing the user function._@param name The given name for the operator, used in plans, logs and progress messages.;protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, String name) {_		super(stub, operatorInfo, name)__		this.keyFields1 = this.keyFields2 = new int[0]__	};creates,a,new,abstract,dual,input,pact,with,the,given,name,wrapping,the,given,user,function,param,stub,the,class,containing,the,user,function,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,dual,input,operator,user,code,wrapper,ft,stub,binary,operator,information,in1,in2,out,operator,info,string,name,super,stub,operator,info,name,this,key,fields1,this,key,fields2,new,int,0
DualInputOperator -> protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, String name);1515177486;Creates a new abstract dual-input Pact with the given name wrapping the given user function.__@param stub The class containing the user function._@param name The given name for the operator, used in plans, logs and progress messages.;protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, String name) {_		super(stub, operatorInfo, name)__		this.keyFields1 = this.keyFields2 = new int[0]__	};creates,a,new,abstract,dual,input,pact,with,the,given,name,wrapping,the,given,user,function,param,stub,the,class,containing,the,user,function,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,dual,input,operator,user,code,wrapper,ft,stub,binary,operator,information,in1,in2,out,operator,info,string,name,super,stub,operator,info,name,this,key,fields1,this,key,fields2,new,int,0
DualInputOperator -> protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, int[] keyPositions1, int[] keyPositions2, String name);1405024514;Creates a new abstract dual-input operator with the given name wrapping the given user function._This constructor is specialized only for operator that require no keys for their processing.__@param stub The object containing the user function._@param keyPositions1 The positions of the fields in the first input that act as keys._@param keyPositions2 The positions of the fields in the second input that act as keys._@param name The given name for the operator, used in plans, logs and progress messages.;protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, int[] keyPositions1, int[] keyPositions2, String name) {_		super(stub, operatorInfo, name)__		this.keyFields1 = keyPositions1__		this.keyFields2 = keyPositions2__	};creates,a,new,abstract,dual,input,operator,with,the,given,name,wrapping,the,given,user,function,this,constructor,is,specialized,only,for,operator,that,require,no,keys,for,their,processing,param,stub,the,object,containing,the,user,function,param,key,positions1,the,positions,of,the,fields,in,the,first,input,that,act,as,keys,param,key,positions2,the,positions,of,the,fields,in,the,second,input,that,act,as,keys,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,dual,input,operator,user,code,wrapper,ft,stub,binary,operator,information,in1,in2,out,operator,info,int,key,positions1,int,key,positions2,string,name,super,stub,operator,info,name,this,key,fields1,key,positions1,this,key,fields2,key,positions2
DualInputOperator -> protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, int[] keyPositions1, int[] keyPositions2, String name);1405090423;Creates a new abstract dual-input operator with the given name wrapping the given user function._This constructor is specialized only for operator that require no keys for their processing.__@param stub The object containing the user function._@param keyPositions1 The positions of the fields in the first input that act as keys._@param keyPositions2 The positions of the fields in the second input that act as keys._@param name The given name for the operator, used in plans, logs and progress messages.;protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, int[] keyPositions1, int[] keyPositions2, String name) {_		super(stub, operatorInfo, name)__		this.keyFields1 = keyPositions1__		this.keyFields2 = keyPositions2__	};creates,a,new,abstract,dual,input,operator,with,the,given,name,wrapping,the,given,user,function,this,constructor,is,specialized,only,for,operator,that,require,no,keys,for,their,processing,param,stub,the,object,containing,the,user,function,param,key,positions1,the,positions,of,the,fields,in,the,first,input,that,act,as,keys,param,key,positions2,the,positions,of,the,fields,in,the,second,input,that,act,as,keys,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,dual,input,operator,user,code,wrapper,ft,stub,binary,operator,information,in1,in2,out,operator,info,int,key,positions1,int,key,positions2,string,name,super,stub,operator,info,name,this,key,fields1,key,positions1,this,key,fields2,key,positions2
DualInputOperator -> protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, int[] keyPositions1, int[] keyPositions2, String name);1411473593;Creates a new abstract dual-input operator with the given name wrapping the given user function._This constructor is specialized only for operator that require no keys for their processing.__@param stub The object containing the user function._@param keyPositions1 The positions of the fields in the first input that act as keys._@param keyPositions2 The positions of the fields in the second input that act as keys._@param name The given name for the operator, used in plans, logs and progress messages.;protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, int[] keyPositions1, int[] keyPositions2, String name) {_		super(stub, operatorInfo, name)__		this.keyFields1 = keyPositions1__		this.keyFields2 = keyPositions2__	};creates,a,new,abstract,dual,input,operator,with,the,given,name,wrapping,the,given,user,function,this,constructor,is,specialized,only,for,operator,that,require,no,keys,for,their,processing,param,stub,the,object,containing,the,user,function,param,key,positions1,the,positions,of,the,fields,in,the,first,input,that,act,as,keys,param,key,positions2,the,positions,of,the,fields,in,the,second,input,that,act,as,keys,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,dual,input,operator,user,code,wrapper,ft,stub,binary,operator,information,in1,in2,out,operator,info,int,key,positions1,int,key,positions2,string,name,super,stub,operator,info,name,this,key,fields1,key,positions1,this,key,fields2,key,positions2
DualInputOperator -> protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, int[] keyPositions1, int[] keyPositions2, String name);1412346153;Creates a new abstract dual-input operator with the given name wrapping the given user function._This constructor is specialized only for operator that require no keys for their processing.__@param stub The object containing the user function._@param keyPositions1 The positions of the fields in the first input that act as keys._@param keyPositions2 The positions of the fields in the second input that act as keys._@param name The given name for the operator, used in plans, logs and progress messages.;protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, int[] keyPositions1, int[] keyPositions2, String name) {_		super(stub, operatorInfo, name)__		this.keyFields1 = keyPositions1__		this.keyFields2 = keyPositions2__	};creates,a,new,abstract,dual,input,operator,with,the,given,name,wrapping,the,given,user,function,this,constructor,is,specialized,only,for,operator,that,require,no,keys,for,their,processing,param,stub,the,object,containing,the,user,function,param,key,positions1,the,positions,of,the,fields,in,the,first,input,that,act,as,keys,param,key,positions2,the,positions,of,the,fields,in,the,second,input,that,act,as,keys,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,dual,input,operator,user,code,wrapper,ft,stub,binary,operator,information,in1,in2,out,operator,info,int,key,positions1,int,key,positions2,string,name,super,stub,operator,info,name,this,key,fields1,key,positions1,this,key,fields2,key,positions2
DualInputOperator -> protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, int[] keyPositions1, int[] keyPositions2, String name);1412346154;Creates a new abstract dual-input operator with the given name wrapping the given user function._This constructor is specialized only for operator that require no keys for their processing.__@param stub The object containing the user function._@param keyPositions1 The positions of the fields in the first input that act as keys._@param keyPositions2 The positions of the fields in the second input that act as keys._@param name The given name for the operator, used in plans, logs and progress messages.;protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, int[] keyPositions1, int[] keyPositions2, String name) {_		super(stub, operatorInfo, name)__		this.keyFields1 = keyPositions1__		this.keyFields2 = keyPositions2__	};creates,a,new,abstract,dual,input,operator,with,the,given,name,wrapping,the,given,user,function,this,constructor,is,specialized,only,for,operator,that,require,no,keys,for,their,processing,param,stub,the,object,containing,the,user,function,param,key,positions1,the,positions,of,the,fields,in,the,first,input,that,act,as,keys,param,key,positions2,the,positions,of,the,fields,in,the,second,input,that,act,as,keys,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,dual,input,operator,user,code,wrapper,ft,stub,binary,operator,information,in1,in2,out,operator,info,int,key,positions1,int,key,positions2,string,name,super,stub,operator,info,name,this,key,fields1,key,positions1,this,key,fields2,key,positions2
DualInputOperator -> protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, int[] keyPositions1, int[] keyPositions2, String name);1422405541;Creates a new abstract dual-input operator with the given name wrapping the given user function._This constructor is specialized only for operator that require no keys for their processing.__@param stub The object containing the user function._@param keyPositions1 The positions of the fields in the first input that act as keys._@param keyPositions2 The positions of the fields in the second input that act as keys._@param name The given name for the operator, used in plans, logs and progress messages.;protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, int[] keyPositions1, int[] keyPositions2, String name) {_		super(stub, operatorInfo, name)__		this.keyFields1 = keyPositions1__		this.keyFields2 = keyPositions2__	};creates,a,new,abstract,dual,input,operator,with,the,given,name,wrapping,the,given,user,function,this,constructor,is,specialized,only,for,operator,that,require,no,keys,for,their,processing,param,stub,the,object,containing,the,user,function,param,key,positions1,the,positions,of,the,fields,in,the,first,input,that,act,as,keys,param,key,positions2,the,positions,of,the,fields,in,the,second,input,that,act,as,keys,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,dual,input,operator,user,code,wrapper,ft,stub,binary,operator,information,in1,in2,out,operator,info,int,key,positions1,int,key,positions2,string,name,super,stub,operator,info,name,this,key,fields1,key,positions1,this,key,fields2,key,positions2
DualInputOperator -> protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, int[] keyPositions1, int[] keyPositions2, String name);1423570503;Creates a new abstract dual-input operator with the given name wrapping the given user function._This constructor is specialized only for operator that require no keys for their processing.__@param stub The object containing the user function._@param keyPositions1 The positions of the fields in the first input that act as keys._@param keyPositions2 The positions of the fields in the second input that act as keys._@param name The given name for the operator, used in plans, logs and progress messages.;protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, int[] keyPositions1, int[] keyPositions2, String name) {_		super(stub, operatorInfo, name)__		this.keyFields1 = keyPositions1__		this.keyFields2 = keyPositions2__	};creates,a,new,abstract,dual,input,operator,with,the,given,name,wrapping,the,given,user,function,this,constructor,is,specialized,only,for,operator,that,require,no,keys,for,their,processing,param,stub,the,object,containing,the,user,function,param,key,positions1,the,positions,of,the,fields,in,the,first,input,that,act,as,keys,param,key,positions2,the,positions,of,the,fields,in,the,second,input,that,act,as,keys,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,dual,input,operator,user,code,wrapper,ft,stub,binary,operator,information,in1,in2,out,operator,info,int,key,positions1,int,key,positions2,string,name,super,stub,operator,info,name,this,key,fields1,key,positions1,this,key,fields2,key,positions2
DualInputOperator -> protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, int[] keyPositions1, int[] keyPositions2, String name);1455479358;Creates a new abstract dual-input operator with the given name wrapping the given user function._This constructor is specialized only for operator that require no keys for their processing.__@param stub The object containing the user function._@param keyPositions1 The positions of the fields in the first input that act as keys._@param keyPositions2 The positions of the fields in the second input that act as keys._@param name The given name for the operator, used in plans, logs and progress messages.;protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, int[] keyPositions1, int[] keyPositions2, String name) {_		super(stub, operatorInfo, name)__		this.keyFields1 = keyPositions1__		this.keyFields2 = keyPositions2__	};creates,a,new,abstract,dual,input,operator,with,the,given,name,wrapping,the,given,user,function,this,constructor,is,specialized,only,for,operator,that,require,no,keys,for,their,processing,param,stub,the,object,containing,the,user,function,param,key,positions1,the,positions,of,the,fields,in,the,first,input,that,act,as,keys,param,key,positions2,the,positions,of,the,fields,in,the,second,input,that,act,as,keys,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,dual,input,operator,user,code,wrapper,ft,stub,binary,operator,information,in1,in2,out,operator,info,int,key,positions1,int,key,positions2,string,name,super,stub,operator,info,name,this,key,fields1,key,positions1,this,key,fields2,key,positions2
DualInputOperator -> protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, int[] keyPositions1, int[] keyPositions2, String name);1515177486;Creates a new abstract dual-input operator with the given name wrapping the given user function._This constructor is specialized only for operator that require no keys for their processing.__@param stub The object containing the user function._@param keyPositions1 The positions of the fields in the first input that act as keys._@param keyPositions2 The positions of the fields in the second input that act as keys._@param name The given name for the operator, used in plans, logs and progress messages.;protected DualInputOperator(UserCodeWrapper<FT> stub, BinaryOperatorInformation<IN1, IN2, OUT> operatorInfo, int[] keyPositions1, int[] keyPositions2, String name) {_		super(stub, operatorInfo, name)__		this.keyFields1 = keyPositions1__		this.keyFields2 = keyPositions2__	};creates,a,new,abstract,dual,input,operator,with,the,given,name,wrapping,the,given,user,function,this,constructor,is,specialized,only,for,operator,that,require,no,keys,for,their,processing,param,stub,the,object,containing,the,user,function,param,key,positions1,the,positions,of,the,fields,in,the,first,input,that,act,as,keys,param,key,positions2,the,positions,of,the,fields,in,the,second,input,that,act,as,keys,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,dual,input,operator,user,code,wrapper,ft,stub,binary,operator,information,in1,in2,out,operator,info,int,key,positions1,int,key,positions2,string,name,super,stub,operator,info,name,this,key,fields1,key,positions1,this,key,fields2,key,positions2
DualInputOperator -> @Deprecated 	public void setSecondInput(Operator<IN2>... inputs);1405024514;Sets the second input to the union of the given operators.__@param inputs The operator(s) that form the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setSecondInput(Operator<IN2>... inputs) {_		this.input2 = Operator.createUnionCascade(inputs)__	};sets,the,second,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,second,input,operator,in2,inputs,this,input2,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setSecondInput(Operator<IN2>... inputs);1405090423;Sets the second input to the union of the given operators.__@param inputs The operator(s) that form the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setSecondInput(Operator<IN2>... inputs) {_		this.input2 = Operator.createUnionCascade(inputs)__	};sets,the,second,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,second,input,operator,in2,inputs,this,input2,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setSecondInput(Operator<IN2>... inputs);1411473593;Sets the second input to the union of the given operators.__@param inputs The operator(s) that form the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setSecondInput(Operator<IN2>... inputs) {_		this.input2 = Operator.createUnionCascade(inputs)__	};sets,the,second,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,second,input,operator,in2,inputs,this,input2,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setSecondInput(Operator<IN2>... inputs);1412346153;Sets the second input to the union of the given operators.__@param inputs The operator(s) that form the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setSecondInput(Operator<IN2>... inputs) {_		this.input2 = Operator.createUnionCascade(inputs)__	};sets,the,second,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,second,input,operator,in2,inputs,this,input2,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setSecondInput(Operator<IN2>... inputs);1412346154;Sets the second input to the union of the given operators.__@param inputs The operator(s) that form the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setSecondInput(Operator<IN2>... inputs) {_		this.input2 = Operator.createUnionCascade(inputs)__	};sets,the,second,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,second,input,operator,in2,inputs,this,input2,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setSecondInput(Operator<IN2>... inputs);1422405541;Sets the second input to the union of the given operators.__@param inputs The operator(s) that form the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setSecondInput(Operator<IN2>... inputs) {_		this.input2 = Operator.createUnionCascade(inputs)__	};sets,the,second,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,second,input,operator,in2,inputs,this,input2,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setSecondInput(Operator<IN2>... inputs);1423570503;Sets the second input to the union of the given operators.__@param inputs The operator(s) that form the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setSecondInput(Operator<IN2>... inputs) {_		this.input2 = Operator.createUnionCascade(inputs)__	};sets,the,second,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,second,input,operator,in2,inputs,this,input2,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setSecondInput(Operator<IN2>... inputs);1455479358;Sets the second input to the union of the given operators.__@param inputs The operator(s) that form the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setSecondInput(Operator<IN2>... inputs) {_		this.input2 = Operator.createUnionCascade(inputs)__	};sets,the,second,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,second,input,operator,in2,inputs,this,input2,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setSecondInput(Operator<IN2>... inputs);1515177486;Sets the second input to the union of the given operators.__@param inputs The operator(s) that form the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setSecondInput(Operator<IN2>... inputs) {_		this.input2 = Operator.createUnionCascade(inputs)__	};sets,the,second,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,second,input,operator,in2,inputs,this,input2,operator,create,union,cascade,inputs
DualInputOperator -> @Override 	@SuppressWarnings("unchecked") 	public BinaryOperatorInformation<IN1, IN2, OUT> getOperatorInfo();1405024514;Gets the information about the operators input/output types.;@Override_	@SuppressWarnings("unchecked")_	public BinaryOperatorInformation<IN1, IN2, OUT> getOperatorInfo() {_		return (BinaryOperatorInformation<IN1, IN2, OUT>) this.operatorInfo__	};gets,the,information,about,the,operators,input,output,types;override,suppress,warnings,unchecked,public,binary,operator,information,in1,in2,out,get,operator,info,return,binary,operator,information,in1,in2,out,this,operator,info
DualInputOperator -> @Override 	@SuppressWarnings("unchecked") 	public BinaryOperatorInformation<IN1, IN2, OUT> getOperatorInfo();1405090423;Gets the information about the operators input/output types.;@Override_	@SuppressWarnings("unchecked")_	public BinaryOperatorInformation<IN1, IN2, OUT> getOperatorInfo() {_		return (BinaryOperatorInformation<IN1, IN2, OUT>) this.operatorInfo__	};gets,the,information,about,the,operators,input,output,types;override,suppress,warnings,unchecked,public,binary,operator,information,in1,in2,out,get,operator,info,return,binary,operator,information,in1,in2,out,this,operator,info
DualInputOperator -> @Override 	@SuppressWarnings("unchecked") 	public BinaryOperatorInformation<IN1, IN2, OUT> getOperatorInfo();1411473593;Gets the information about the operators input/output types.;@Override_	@SuppressWarnings("unchecked")_	public BinaryOperatorInformation<IN1, IN2, OUT> getOperatorInfo() {_		return (BinaryOperatorInformation<IN1, IN2, OUT>) this.operatorInfo__	};gets,the,information,about,the,operators,input,output,types;override,suppress,warnings,unchecked,public,binary,operator,information,in1,in2,out,get,operator,info,return,binary,operator,information,in1,in2,out,this,operator,info
DualInputOperator -> @Override 	@SuppressWarnings("unchecked") 	public BinaryOperatorInformation<IN1, IN2, OUT> getOperatorInfo();1412346153;Gets the information about the operators input/output types.;@Override_	@SuppressWarnings("unchecked")_	public BinaryOperatorInformation<IN1, IN2, OUT> getOperatorInfo() {_		return (BinaryOperatorInformation<IN1, IN2, OUT>) this.operatorInfo__	};gets,the,information,about,the,operators,input,output,types;override,suppress,warnings,unchecked,public,binary,operator,information,in1,in2,out,get,operator,info,return,binary,operator,information,in1,in2,out,this,operator,info
DualInputOperator -> @Override 	@SuppressWarnings("unchecked") 	public BinaryOperatorInformation<IN1, IN2, OUT> getOperatorInfo();1412346154;Gets the information about the operators input/output types.;@Override_	@SuppressWarnings("unchecked")_	public BinaryOperatorInformation<IN1, IN2, OUT> getOperatorInfo() {_		return (BinaryOperatorInformation<IN1, IN2, OUT>) this.operatorInfo__	};gets,the,information,about,the,operators,input,output,types;override,suppress,warnings,unchecked,public,binary,operator,information,in1,in2,out,get,operator,info,return,binary,operator,information,in1,in2,out,this,operator,info
DualInputOperator -> @Override 	@SuppressWarnings("unchecked") 	public BinaryOperatorInformation<IN1, IN2, OUT> getOperatorInfo();1422405541;Gets the information about the operators input/output types.;@Override_	@SuppressWarnings("unchecked")_	public BinaryOperatorInformation<IN1, IN2, OUT> getOperatorInfo() {_		return (BinaryOperatorInformation<IN1, IN2, OUT>) this.operatorInfo__	};gets,the,information,about,the,operators,input,output,types;override,suppress,warnings,unchecked,public,binary,operator,information,in1,in2,out,get,operator,info,return,binary,operator,information,in1,in2,out,this,operator,info
DualInputOperator -> @Override 	@SuppressWarnings("unchecked") 	public BinaryOperatorInformation<IN1, IN2, OUT> getOperatorInfo();1423570503;Gets the information about the operators input/output types.;@Override_	@SuppressWarnings("unchecked")_	public BinaryOperatorInformation<IN1, IN2, OUT> getOperatorInfo() {_		return (BinaryOperatorInformation<IN1, IN2, OUT>) this.operatorInfo__	};gets,the,information,about,the,operators,input,output,types;override,suppress,warnings,unchecked,public,binary,operator,information,in1,in2,out,get,operator,info,return,binary,operator,information,in1,in2,out,this,operator,info
DualInputOperator -> @Override 	@SuppressWarnings("unchecked") 	public BinaryOperatorInformation<IN1, IN2, OUT> getOperatorInfo();1455479358;Gets the information about the operators input/output types.;@Override_	@SuppressWarnings("unchecked")_	public BinaryOperatorInformation<IN1, IN2, OUT> getOperatorInfo() {_		return (BinaryOperatorInformation<IN1, IN2, OUT>) this.operatorInfo__	};gets,the,information,about,the,operators,input,output,types;override,suppress,warnings,unchecked,public,binary,operator,information,in1,in2,out,get,operator,info,return,binary,operator,information,in1,in2,out,this,operator,info
DualInputOperator -> @Override 	@SuppressWarnings("unchecked") 	public BinaryOperatorInformation<IN1, IN2, OUT> getOperatorInfo();1515177486;Gets the information about the operators input/output types.;@Override_	@SuppressWarnings("unchecked")_	public BinaryOperatorInformation<IN1, IN2, OUT> getOperatorInfo() {_		return (BinaryOperatorInformation<IN1, IN2, OUT>) this.operatorInfo__	};gets,the,information,about,the,operators,input,output,types;override,suppress,warnings,unchecked,public,binary,operator,information,in1,in2,out,get,operator,info,return,binary,operator,information,in1,in2,out,this,operator,info
DualInputOperator -> public Operator<IN2> getSecondInput();1405024514;Returns the second input, or null, if none is set.__@return The contract's second input.;public Operator<IN2> getSecondInput() {_		return this.input2__	};returns,the,second,input,or,null,if,none,is,set,return,the,contract,s,second,input;public,operator,in2,get,second,input,return,this,input2
DualInputOperator -> public Operator<IN2> getSecondInput();1405090423;Returns the second input, or null, if none is set.__@return The contract's second input.;public Operator<IN2> getSecondInput() {_		return this.input2__	};returns,the,second,input,or,null,if,none,is,set,return,the,contract,s,second,input;public,operator,in2,get,second,input,return,this,input2
DualInputOperator -> public Operator<IN2> getSecondInput();1411473593;Returns the second input, or null, if none is set.__@return The contract's second input.;public Operator<IN2> getSecondInput() {_		return this.input2__	};returns,the,second,input,or,null,if,none,is,set,return,the,contract,s,second,input;public,operator,in2,get,second,input,return,this,input2
DualInputOperator -> public Operator<IN2> getSecondInput();1412346153;Returns the second input, or null, if none is set.__@return The contract's second input.;public Operator<IN2> getSecondInput() {_		return this.input2__	};returns,the,second,input,or,null,if,none,is,set,return,the,contract,s,second,input;public,operator,in2,get,second,input,return,this,input2
DualInputOperator -> public Operator<IN2> getSecondInput();1412346154;Returns the second input, or null, if none is set.__@return The contract's second input.;public Operator<IN2> getSecondInput() {_		return this.input2__	};returns,the,second,input,or,null,if,none,is,set,return,the,contract,s,second,input;public,operator,in2,get,second,input,return,this,input2
DualInputOperator -> public Operator<IN2> getSecondInput();1422405541;Returns the second input, or null, if none is set.__@return The contract's second input.;public Operator<IN2> getSecondInput() {_		return this.input2__	};returns,the,second,input,or,null,if,none,is,set,return,the,contract,s,second,input;public,operator,in2,get,second,input,return,this,input2
DualInputOperator -> public Operator<IN2> getSecondInput();1423570503;Returns the second input, or null, if none is set.__@return The contract's second input.;public Operator<IN2> getSecondInput() {_		return this.input2__	};returns,the,second,input,or,null,if,none,is,set,return,the,contract,s,second,input;public,operator,in2,get,second,input,return,this,input2
DualInputOperator -> public Operator<IN2> getSecondInput();1455479358;Returns the second input, or null, if none is set.__@return The contract's second input.;public Operator<IN2> getSecondInput() {_		return this.input2__	};returns,the,second,input,or,null,if,none,is,set,return,the,contract,s,second,input;public,operator,in2,get,second,input,return,this,input2
DualInputOperator -> public Operator<IN2> getSecondInput();1515177486;Returns the second input, or null, if none is set.__@return The contract's second input.;public Operator<IN2> getSecondInput() {_		return this.input2__	};returns,the,second,input,or,null,if,none,is,set,return,the,contract,s,second,input;public,operator,in2,get,second,input,return,this,input2
DualInputOperator -> @Deprecated 	public void addSecondInput(Operator<IN2>... input);1405024514;Add to the second input the union of the given operators.__@param input The operator(s) to be unioned with the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void addSecondInput(Operator<IN2>... input) {_		this.input2 = Operator.createUnionCascade(this.input2, input)__	};add,to,the,second,input,the,union,of,the,given,operators,param,input,the,operator,s,to,be,unioned,with,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,add,second,input,operator,in2,input,this,input2,operator,create,union,cascade,this,input2,input
DualInputOperator -> @Deprecated 	public void addSecondInput(Operator<IN2>... input);1405090423;Add to the second input the union of the given operators.__@param input The operator(s) to be unioned with the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void addSecondInput(Operator<IN2>... input) {_		this.input2 = Operator.createUnionCascade(this.input2, input)__	};add,to,the,second,input,the,union,of,the,given,operators,param,input,the,operator,s,to,be,unioned,with,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,add,second,input,operator,in2,input,this,input2,operator,create,union,cascade,this,input2,input
DualInputOperator -> @Deprecated 	public void addSecondInput(Operator<IN2>... input);1411473593;Add to the second input the union of the given operators.__@param input The operator(s) to be unioned with the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void addSecondInput(Operator<IN2>... input) {_		this.input2 = Operator.createUnionCascade(this.input2, input)__	};add,to,the,second,input,the,union,of,the,given,operators,param,input,the,operator,s,to,be,unioned,with,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,add,second,input,operator,in2,input,this,input2,operator,create,union,cascade,this,input2,input
DualInputOperator -> @Deprecated 	public void addSecondInput(Operator<IN2>... input);1412346153;Add to the second input the union of the given operators.__@param input The operator(s) to be unioned with the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void addSecondInput(Operator<IN2>... input) {_		this.input2 = Operator.createUnionCascade(this.input2, input)__	};add,to,the,second,input,the,union,of,the,given,operators,param,input,the,operator,s,to,be,unioned,with,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,add,second,input,operator,in2,input,this,input2,operator,create,union,cascade,this,input2,input
DualInputOperator -> @Deprecated 	public void addSecondInput(Operator<IN2>... input);1412346154;Add to the second input the union of the given operators.__@param input The operator(s) to be unioned with the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void addSecondInput(Operator<IN2>... input) {_		this.input2 = Operator.createUnionCascade(this.input2, input)__	};add,to,the,second,input,the,union,of,the,given,operators,param,input,the,operator,s,to,be,unioned,with,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,add,second,input,operator,in2,input,this,input2,operator,create,union,cascade,this,input2,input
DualInputOperator -> @Deprecated 	public void addSecondInput(Operator<IN2>... input);1422405541;Add to the second input the union of the given operators.__@param input The operator(s) to be unioned with the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void addSecondInput(Operator<IN2>... input) {_		this.input2 = Operator.createUnionCascade(this.input2, input)__	};add,to,the,second,input,the,union,of,the,given,operators,param,input,the,operator,s,to,be,unioned,with,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,add,second,input,operator,in2,input,this,input2,operator,create,union,cascade,this,input2,input
DualInputOperator -> @Deprecated 	public void addSecondInput(Operator<IN2>... input);1423570503;Add to the second input the union of the given operators.__@param input The operator(s) to be unioned with the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void addSecondInput(Operator<IN2>... input) {_		this.input2 = Operator.createUnionCascade(this.input2, input)__	};add,to,the,second,input,the,union,of,the,given,operators,param,input,the,operator,s,to,be,unioned,with,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,add,second,input,operator,in2,input,this,input2,operator,create,union,cascade,this,input2,input
DualInputOperator -> @Deprecated 	public void addSecondInput(Operator<IN2>... input);1455479358;Add to the second input the union of the given operators.__@param input The operator(s) to be unioned with the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void addSecondInput(Operator<IN2>... input) {_		this.input2 = Operator.createUnionCascade(this.input2, input)__	};add,to,the,second,input,the,union,of,the,given,operators,param,input,the,operator,s,to,be,unioned,with,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,add,second,input,operator,in2,input,this,input2,operator,create,union,cascade,this,input2,input
DualInputOperator -> @Deprecated 	public void addSecondInput(Operator<IN2>... input);1515177486;Add to the second input the union of the given operators.__@param input The operator(s) to be unioned with the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void addSecondInput(Operator<IN2>... input) {_		this.input2 = Operator.createUnionCascade(this.input2, input)__	};add,to,the,second,input,the,union,of,the,given,operators,param,input,the,operator,s,to,be,unioned,with,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,add,second,input,operator,in2,input,this,input2,operator,create,union,cascade,this,input2,input
DualInputOperator -> public void setFirstInput(Operator<IN1> input);1405024514;Clears all previous connections and connects the first input to the task wrapped in this contract__@param input The contract that is connected as the first input.;public void setFirstInput(Operator<IN1> input) {_		this.input1 = input__	};clears,all,previous,connections,and,connects,the,first,input,to,the,task,wrapped,in,this,contract,param,input,the,contract,that,is,connected,as,the,first,input;public,void,set,first,input,operator,in1,input,this,input1,input
DualInputOperator -> public void setFirstInput(Operator<IN1> input);1405090423;Clears all previous connections and connects the first input to the task wrapped in this contract__@param input The contract that is connected as the first input.;public void setFirstInput(Operator<IN1> input) {_		this.input1 = input__	};clears,all,previous,connections,and,connects,the,first,input,to,the,task,wrapped,in,this,contract,param,input,the,contract,that,is,connected,as,the,first,input;public,void,set,first,input,operator,in1,input,this,input1,input
DualInputOperator -> public void setFirstInput(Operator<IN1> input);1411473593;Clears all previous connections and connects the first input to the task wrapped in this contract__@param input The contract that is connected as the first input.;public void setFirstInput(Operator<IN1> input) {_		this.input1 = input__	};clears,all,previous,connections,and,connects,the,first,input,to,the,task,wrapped,in,this,contract,param,input,the,contract,that,is,connected,as,the,first,input;public,void,set,first,input,operator,in1,input,this,input1,input
DualInputOperator -> public void setFirstInput(Operator<IN1> input);1412346153;Clears all previous connections and connects the first input to the task wrapped in this contract__@param input The contract that is connected as the first input.;public void setFirstInput(Operator<IN1> input) {_		this.input1 = input__	};clears,all,previous,connections,and,connects,the,first,input,to,the,task,wrapped,in,this,contract,param,input,the,contract,that,is,connected,as,the,first,input;public,void,set,first,input,operator,in1,input,this,input1,input
DualInputOperator -> public void setFirstInput(Operator<IN1> input);1412346154;Clears all previous connections and connects the first input to the task wrapped in this contract__@param input The contract that is connected as the first input.;public void setFirstInput(Operator<IN1> input) {_		this.input1 = input__	};clears,all,previous,connections,and,connects,the,first,input,to,the,task,wrapped,in,this,contract,param,input,the,contract,that,is,connected,as,the,first,input;public,void,set,first,input,operator,in1,input,this,input1,input
DualInputOperator -> public void setFirstInput(Operator<IN1> input);1422405541;Clears all previous connections and connects the first input to the task wrapped in this contract__@param input The contract that is connected as the first input.;public void setFirstInput(Operator<IN1> input) {_		this.input1 = input__	};clears,all,previous,connections,and,connects,the,first,input,to,the,task,wrapped,in,this,contract,param,input,the,contract,that,is,connected,as,the,first,input;public,void,set,first,input,operator,in1,input,this,input1,input
DualInputOperator -> public void setFirstInput(Operator<IN1> input);1423570503;Clears all previous connections and connects the first input to the task wrapped in this contract__@param input The contract that is connected as the first input.;public void setFirstInput(Operator<IN1> input) {_		this.input1 = input__	};clears,all,previous,connections,and,connects,the,first,input,to,the,task,wrapped,in,this,contract,param,input,the,contract,that,is,connected,as,the,first,input;public,void,set,first,input,operator,in1,input,this,input1,input
DualInputOperator -> public void setFirstInput(Operator<IN1> input);1455479358;Clears all previous connections and connects the first input to the task wrapped in this contract__@param input The contract that is connected as the first input.;public void setFirstInput(Operator<IN1> input) {_		this.input1 = input__	};clears,all,previous,connections,and,connects,the,first,input,to,the,task,wrapped,in,this,contract,param,input,the,contract,that,is,connected,as,the,first,input;public,void,set,first,input,operator,in1,input,this,input1,input
DualInputOperator -> public void setFirstInput(Operator<IN1> input);1515177486;Clears all previous connections and connects the first input to the task wrapped in this contract__@param input The contract that is connected as the first input.;public void setFirstInput(Operator<IN1> input) {_		this.input1 = input__	};clears,all,previous,connections,and,connects,the,first,input,to,the,task,wrapped,in,this,contract,param,input,the,contract,that,is,connected,as,the,first,input;public,void,set,first,input,operator,in1,input,this,input1,input
DualInputOperator -> @Deprecated 	@SuppressWarnings("unchecked") 	public void addSecondInputs(List<Operator<IN2>> inputs);1405024514;Add to the second input the union of the given operators.__@param inputs The operator(s) to be unioned with the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	@SuppressWarnings("unchecked")_	public void addSecondInputs(List<Operator<IN2>> inputs) {_		this.input2 = Operator.createUnionCascade(this.input2, inputs.toArray(new Operator[inputs.size()]))__	};add,to,the,second,input,the,union,of,the,given,operators,param,inputs,the,operator,s,to,be,unioned,with,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,suppress,warnings,unchecked,public,void,add,second,inputs,list,operator,in2,inputs,this,input2,operator,create,union,cascade,this,input2,inputs,to,array,new,operator,inputs,size
DualInputOperator -> @Deprecated 	@SuppressWarnings("unchecked") 	public void addSecondInputs(List<Operator<IN2>> inputs);1405090423;Add to the second input the union of the given operators.__@param inputs The operator(s) to be unioned with the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	@SuppressWarnings("unchecked")_	public void addSecondInputs(List<Operator<IN2>> inputs) {_		this.input2 = Operator.createUnionCascade(this.input2, inputs.toArray(new Operator[inputs.size()]))__	};add,to,the,second,input,the,union,of,the,given,operators,param,inputs,the,operator,s,to,be,unioned,with,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,suppress,warnings,unchecked,public,void,add,second,inputs,list,operator,in2,inputs,this,input2,operator,create,union,cascade,this,input2,inputs,to,array,new,operator,inputs,size
DualInputOperator -> @Deprecated 	@SuppressWarnings("unchecked") 	public void addSecondInputs(List<Operator<IN2>> inputs);1411473593;Add to the second input the union of the given operators.__@param inputs The operator(s) to be unioned with the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	@SuppressWarnings("unchecked")_	public void addSecondInputs(List<Operator<IN2>> inputs) {_		this.input2 = Operator.createUnionCascade(this.input2, inputs.toArray(new Operator[inputs.size()]))__	};add,to,the,second,input,the,union,of,the,given,operators,param,inputs,the,operator,s,to,be,unioned,with,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,suppress,warnings,unchecked,public,void,add,second,inputs,list,operator,in2,inputs,this,input2,operator,create,union,cascade,this,input2,inputs,to,array,new,operator,inputs,size
DualInputOperator -> @Deprecated 	@SuppressWarnings("unchecked") 	public void addSecondInputs(List<Operator<IN2>> inputs);1412346153;Add to the second input the union of the given operators.__@param inputs The operator(s) to be unioned with the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	@SuppressWarnings("unchecked")_	public void addSecondInputs(List<Operator<IN2>> inputs) {_		this.input2 = Operator.createUnionCascade(this.input2, inputs.toArray(new Operator[inputs.size()]))__	};add,to,the,second,input,the,union,of,the,given,operators,param,inputs,the,operator,s,to,be,unioned,with,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,suppress,warnings,unchecked,public,void,add,second,inputs,list,operator,in2,inputs,this,input2,operator,create,union,cascade,this,input2,inputs,to,array,new,operator,inputs,size
DualInputOperator -> @Deprecated 	@SuppressWarnings("unchecked") 	public void addSecondInputs(List<Operator<IN2>> inputs);1412346154;Add to the second input the union of the given operators.__@param inputs The operator(s) to be unioned with the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	@SuppressWarnings("unchecked")_	public void addSecondInputs(List<Operator<IN2>> inputs) {_		this.input2 = Operator.createUnionCascade(this.input2, inputs.toArray(new Operator[inputs.size()]))__	};add,to,the,second,input,the,union,of,the,given,operators,param,inputs,the,operator,s,to,be,unioned,with,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,suppress,warnings,unchecked,public,void,add,second,inputs,list,operator,in2,inputs,this,input2,operator,create,union,cascade,this,input2,inputs,to,array,new,operator,inputs,size
DualInputOperator -> @Deprecated 	@SuppressWarnings("unchecked") 	public void addSecondInputs(List<Operator<IN2>> inputs);1422405541;Add to the second input the union of the given operators.__@param inputs The operator(s) to be unioned with the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	@SuppressWarnings("unchecked")_	public void addSecondInputs(List<Operator<IN2>> inputs) {_		this.input2 = Operator.createUnionCascade(this.input2, inputs.toArray(new Operator[inputs.size()]))__	};add,to,the,second,input,the,union,of,the,given,operators,param,inputs,the,operator,s,to,be,unioned,with,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,suppress,warnings,unchecked,public,void,add,second,inputs,list,operator,in2,inputs,this,input2,operator,create,union,cascade,this,input2,inputs,to,array,new,operator,inputs,size
DualInputOperator -> @Deprecated 	@SuppressWarnings("unchecked") 	public void addSecondInputs(List<Operator<IN2>> inputs);1423570503;Add to the second input the union of the given operators.__@param inputs The operator(s) to be unioned with the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	@SuppressWarnings("unchecked")_	public void addSecondInputs(List<Operator<IN2>> inputs) {_		this.input2 = Operator.createUnionCascade(this.input2, inputs.toArray(new Operator[inputs.size()]))__	};add,to,the,second,input,the,union,of,the,given,operators,param,inputs,the,operator,s,to,be,unioned,with,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,suppress,warnings,unchecked,public,void,add,second,inputs,list,operator,in2,inputs,this,input2,operator,create,union,cascade,this,input2,inputs,to,array,new,operator,inputs,size
DualInputOperator -> @Deprecated 	@SuppressWarnings("unchecked") 	public void addSecondInputs(List<Operator<IN2>> inputs);1455479358;Add to the second input the union of the given operators.__@param inputs The operator(s) to be unioned with the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	@SuppressWarnings("unchecked")_	public void addSecondInputs(List<Operator<IN2>> inputs) {_		this.input2 = Operator.createUnionCascade(this.input2, inputs.toArray(new Operator[inputs.size()]))__	};add,to,the,second,input,the,union,of,the,given,operators,param,inputs,the,operator,s,to,be,unioned,with,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,suppress,warnings,unchecked,public,void,add,second,inputs,list,operator,in2,inputs,this,input2,operator,create,union,cascade,this,input2,inputs,to,array,new,operator,inputs,size
DualInputOperator -> @Deprecated 	@SuppressWarnings("unchecked") 	public void addSecondInputs(List<Operator<IN2>> inputs);1515177486;Add to the second input the union of the given operators.__@param inputs The operator(s) to be unioned with the second input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	@SuppressWarnings("unchecked")_	public void addSecondInputs(List<Operator<IN2>> inputs) {_		this.input2 = Operator.createUnionCascade(this.input2, inputs.toArray(new Operator[inputs.size()]))__	};add,to,the,second,input,the,union,of,the,given,operators,param,inputs,the,operator,s,to,be,unioned,with,the,second,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,suppress,warnings,unchecked,public,void,add,second,inputs,list,operator,in2,inputs,this,input2,operator,create,union,cascade,this,input2,inputs,to,array,new,operator,inputs,size
DualInputOperator -> public void clearSecondInput();1405024514;Clears this operator's second input.;public void clearSecondInput() {_		this.input2 = null__	};clears,this,operator,s,second,input;public,void,clear,second,input,this,input2,null
DualInputOperator -> public void clearSecondInput();1405090423;Clears this operator's second input.;public void clearSecondInput() {_		this.input2 = null__	};clears,this,operator,s,second,input;public,void,clear,second,input,this,input2,null
DualInputOperator -> public void clearSecondInput();1411473593;Clears this operator's second input.;public void clearSecondInput() {_		this.input2 = null__	};clears,this,operator,s,second,input;public,void,clear,second,input,this,input2,null
DualInputOperator -> public void clearSecondInput();1412346153;Clears this operator's second input.;public void clearSecondInput() {_		this.input2 = null__	};clears,this,operator,s,second,input;public,void,clear,second,input,this,input2,null
DualInputOperator -> public void clearSecondInput();1412346154;Clears this operator's second input.;public void clearSecondInput() {_		this.input2 = null__	};clears,this,operator,s,second,input;public,void,clear,second,input,this,input2,null
DualInputOperator -> public void clearSecondInput();1422405541;Clears this operator's second input.;public void clearSecondInput() {_		this.input2 = null__	};clears,this,operator,s,second,input;public,void,clear,second,input,this,input2,null
DualInputOperator -> public void clearSecondInput();1423570503;Clears this operator's second input.;public void clearSecondInput() {_		this.input2 = null__	};clears,this,operator,s,second,input;public,void,clear,second,input,this,input2,null
DualInputOperator -> public void clearSecondInput();1455479358;Clears this operator's second input.;public void clearSecondInput() {_		this.input2 = null__	};clears,this,operator,s,second,input;public,void,clear,second,input,this,input2,null
DualInputOperator -> public void clearSecondInput();1515177486;Clears this operator's second input.;public void clearSecondInput() {_		this.input2 = null__	};clears,this,operator,s,second,input;public,void,clear,second,input,this,input2,null
DualInputOperator -> @Deprecated 	public void setFirstInput(Operator<IN1>... inputs);1405024514;Sets the first input to the union of the given operators.__@param inputs The operator(s) that form the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setFirstInput(Operator<IN1>... inputs) {_		this.input1 = Operator.createUnionCascade(inputs)__	};sets,the,first,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,first,input,operator,in1,inputs,this,input1,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setFirstInput(Operator<IN1>... inputs);1405090423;Sets the first input to the union of the given operators.__@param inputs The operator(s) that form the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setFirstInput(Operator<IN1>... inputs) {_		this.input1 = Operator.createUnionCascade(inputs)__	};sets,the,first,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,first,input,operator,in1,inputs,this,input1,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setFirstInput(Operator<IN1>... inputs);1411473593;Sets the first input to the union of the given operators.__@param inputs The operator(s) that form the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setFirstInput(Operator<IN1>... inputs) {_		this.input1 = Operator.createUnionCascade(inputs)__	};sets,the,first,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,first,input,operator,in1,inputs,this,input1,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setFirstInput(Operator<IN1>... inputs);1412346153;Sets the first input to the union of the given operators.__@param inputs The operator(s) that form the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setFirstInput(Operator<IN1>... inputs) {_		this.input1 = Operator.createUnionCascade(inputs)__	};sets,the,first,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,first,input,operator,in1,inputs,this,input1,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setFirstInput(Operator<IN1>... inputs);1412346154;Sets the first input to the union of the given operators.__@param inputs The operator(s) that form the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setFirstInput(Operator<IN1>... inputs) {_		this.input1 = Operator.createUnionCascade(inputs)__	};sets,the,first,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,first,input,operator,in1,inputs,this,input1,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setFirstInput(Operator<IN1>... inputs);1422405541;Sets the first input to the union of the given operators.__@param inputs The operator(s) that form the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setFirstInput(Operator<IN1>... inputs) {_		this.input1 = Operator.createUnionCascade(inputs)__	};sets,the,first,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,first,input,operator,in1,inputs,this,input1,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setFirstInput(Operator<IN1>... inputs);1423570503;Sets the first input to the union of the given operators.__@param inputs The operator(s) that form the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setFirstInput(Operator<IN1>... inputs) {_		this.input1 = Operator.createUnionCascade(inputs)__	};sets,the,first,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,first,input,operator,in1,inputs,this,input1,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setFirstInput(Operator<IN1>... inputs);1455479358;Sets the first input to the union of the given operators.__@param inputs The operator(s) that form the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setFirstInput(Operator<IN1>... inputs) {_		this.input1 = Operator.createUnionCascade(inputs)__	};sets,the,first,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,first,input,operator,in1,inputs,this,input1,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setFirstInput(Operator<IN1>... inputs);1515177486;Sets the first input to the union of the given operators.__@param inputs The operator(s) that form the first input._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setFirstInput(Operator<IN1>... inputs) {_		this.input1 = Operator.createUnionCascade(inputs)__	};sets,the,first,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,first,input,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,first,input,operator,in1,inputs,this,input1,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setSecondInputs(List<Operator<IN2>> inputs);1405024514;Sets the second input to the union of the given operators.__@param inputs The operator(s) that form the second inputs._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setSecondInputs(List<Operator<IN2>> inputs) {_		this.input2 = Operator.createUnionCascade(inputs)__	};sets,the,second,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,second,inputs,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,second,inputs,list,operator,in2,inputs,this,input2,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setSecondInputs(List<Operator<IN2>> inputs);1405090423;Sets the second input to the union of the given operators.__@param inputs The operator(s) that form the second inputs._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setSecondInputs(List<Operator<IN2>> inputs) {_		this.input2 = Operator.createUnionCascade(inputs)__	};sets,the,second,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,second,inputs,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,second,inputs,list,operator,in2,inputs,this,input2,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setSecondInputs(List<Operator<IN2>> inputs);1411473593;Sets the second input to the union of the given operators.__@param inputs The operator(s) that form the second inputs._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setSecondInputs(List<Operator<IN2>> inputs) {_		this.input2 = Operator.createUnionCascade(inputs)__	};sets,the,second,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,second,inputs,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,second,inputs,list,operator,in2,inputs,this,input2,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setSecondInputs(List<Operator<IN2>> inputs);1412346153;Sets the second input to the union of the given operators.__@param inputs The operator(s) that form the second inputs._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setSecondInputs(List<Operator<IN2>> inputs) {_		this.input2 = Operator.createUnionCascade(inputs)__	};sets,the,second,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,second,inputs,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,second,inputs,list,operator,in2,inputs,this,input2,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setSecondInputs(List<Operator<IN2>> inputs);1412346154;Sets the second input to the union of the given operators.__@param inputs The operator(s) that form the second inputs._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setSecondInputs(List<Operator<IN2>> inputs) {_		this.input2 = Operator.createUnionCascade(inputs)__	};sets,the,second,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,second,inputs,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,second,inputs,list,operator,in2,inputs,this,input2,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setSecondInputs(List<Operator<IN2>> inputs);1422405541;Sets the second input to the union of the given operators.__@param inputs The operator(s) that form the second inputs._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setSecondInputs(List<Operator<IN2>> inputs) {_		this.input2 = Operator.createUnionCascade(inputs)__	};sets,the,second,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,second,inputs,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,second,inputs,list,operator,in2,inputs,this,input2,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setSecondInputs(List<Operator<IN2>> inputs);1423570503;Sets the second input to the union of the given operators.__@param inputs The operator(s) that form the second inputs._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setSecondInputs(List<Operator<IN2>> inputs) {_		this.input2 = Operator.createUnionCascade(inputs)__	};sets,the,second,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,second,inputs,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,second,inputs,list,operator,in2,inputs,this,input2,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setSecondInputs(List<Operator<IN2>> inputs);1455479358;Sets the second input to the union of the given operators.__@param inputs The operator(s) that form the second inputs._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setSecondInputs(List<Operator<IN2>> inputs) {_		this.input2 = Operator.createUnionCascade(inputs)__	};sets,the,second,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,second,inputs,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,second,inputs,list,operator,in2,inputs,this,input2,operator,create,union,cascade,inputs
DualInputOperator -> @Deprecated 	public void setSecondInputs(List<Operator<IN2>> inputs);1515177486;Sets the second input to the union of the given operators.__@param inputs The operator(s) that form the second inputs._@deprecated This method will be removed in future versions. Use the {@link Union} operator instead.;@Deprecated_	public void setSecondInputs(List<Operator<IN2>> inputs) {_		this.input2 = Operator.createUnionCascade(inputs)__	};sets,the,second,input,to,the,union,of,the,given,operators,param,inputs,the,operator,s,that,form,the,second,inputs,deprecated,this,method,will,be,removed,in,future,versions,use,the,link,union,operator,instead;deprecated,public,void,set,second,inputs,list,operator,in2,inputs,this,input2,operator,create,union,cascade,inputs
DualInputOperator -> public Operator<IN1> getFirstInput();1405024514;Returns the first input, or null, if none is set.__@return The contract's first input.;public Operator<IN1> getFirstInput() {_		return this.input1__	};returns,the,first,input,or,null,if,none,is,set,return,the,contract,s,first,input;public,operator,in1,get,first,input,return,this,input1
DualInputOperator -> public Operator<IN1> getFirstInput();1405090423;Returns the first input, or null, if none is set.__@return The contract's first input.;public Operator<IN1> getFirstInput() {_		return this.input1__	};returns,the,first,input,or,null,if,none,is,set,return,the,contract,s,first,input;public,operator,in1,get,first,input,return,this,input1
DualInputOperator -> public Operator<IN1> getFirstInput();1411473593;Returns the first input, or null, if none is set.__@return The contract's first input.;public Operator<IN1> getFirstInput() {_		return this.input1__	};returns,the,first,input,or,null,if,none,is,set,return,the,contract,s,first,input;public,operator,in1,get,first,input,return,this,input1
DualInputOperator -> public Operator<IN1> getFirstInput();1412346153;Returns the first input, or null, if none is set.__@return The contract's first input.;public Operator<IN1> getFirstInput() {_		return this.input1__	};returns,the,first,input,or,null,if,none,is,set,return,the,contract,s,first,input;public,operator,in1,get,first,input,return,this,input1
DualInputOperator -> public Operator<IN1> getFirstInput();1412346154;Returns the first input, or null, if none is set.__@return The contract's first input.;public Operator<IN1> getFirstInput() {_		return this.input1__	};returns,the,first,input,or,null,if,none,is,set,return,the,contract,s,first,input;public,operator,in1,get,first,input,return,this,input1
DualInputOperator -> public Operator<IN1> getFirstInput();1422405541;Returns the first input, or null, if none is set.__@return The contract's first input.;public Operator<IN1> getFirstInput() {_		return this.input1__	};returns,the,first,input,or,null,if,none,is,set,return,the,contract,s,first,input;public,operator,in1,get,first,input,return,this,input1
DualInputOperator -> public Operator<IN1> getFirstInput();1423570503;Returns the first input, or null, if none is set.__@return The contract's first input.;public Operator<IN1> getFirstInput() {_		return this.input1__	};returns,the,first,input,or,null,if,none,is,set,return,the,contract,s,first,input;public,operator,in1,get,first,input,return,this,input1
DualInputOperator -> public Operator<IN1> getFirstInput();1455479358;Returns the first input, or null, if none is set.__@return The contract's first input.;public Operator<IN1> getFirstInput() {_		return this.input1__	};returns,the,first,input,or,null,if,none,is,set,return,the,contract,s,first,input;public,operator,in1,get,first,input,return,this,input1
DualInputOperator -> public Operator<IN1> getFirstInput();1515177486;Returns the first input, or null, if none is set.__@return The contract's first input.;public Operator<IN1> getFirstInput() {_		return this.input1__	};returns,the,first,input,or,null,if,none,is,set,return,the,contract,s,first,input;public,operator,in1,get,first,input,return,this,input1
DualInputOperator -> public void setSecondInput(Operator<IN2> input);1405024514;Clears all previous connections and connects the second input to the task wrapped in this contract__@param input The contract that is connected as the second input.;public void setSecondInput(Operator<IN2> input) {_		this.input2 = input__	};clears,all,previous,connections,and,connects,the,second,input,to,the,task,wrapped,in,this,contract,param,input,the,contract,that,is,connected,as,the,second,input;public,void,set,second,input,operator,in2,input,this,input2,input
DualInputOperator -> public void setSecondInput(Operator<IN2> input);1405090423;Clears all previous connections and connects the second input to the task wrapped in this contract__@param input The contract that is connected as the second input.;public void setSecondInput(Operator<IN2> input) {_		this.input2 = input__	};clears,all,previous,connections,and,connects,the,second,input,to,the,task,wrapped,in,this,contract,param,input,the,contract,that,is,connected,as,the,second,input;public,void,set,second,input,operator,in2,input,this,input2,input
DualInputOperator -> public void setSecondInput(Operator<IN2> input);1411473593;Clears all previous connections and connects the second input to the task wrapped in this contract__@param input The contract that is connected as the second input.;public void setSecondInput(Operator<IN2> input) {_		this.input2 = input__	};clears,all,previous,connections,and,connects,the,second,input,to,the,task,wrapped,in,this,contract,param,input,the,contract,that,is,connected,as,the,second,input;public,void,set,second,input,operator,in2,input,this,input2,input
DualInputOperator -> public void setSecondInput(Operator<IN2> input);1412346153;Clears all previous connections and connects the second input to the task wrapped in this contract__@param input The contract that is connected as the second input.;public void setSecondInput(Operator<IN2> input) {_		this.input2 = input__	};clears,all,previous,connections,and,connects,the,second,input,to,the,task,wrapped,in,this,contract,param,input,the,contract,that,is,connected,as,the,second,input;public,void,set,second,input,operator,in2,input,this,input2,input
DualInputOperator -> public void setSecondInput(Operator<IN2> input);1412346154;Clears all previous connections and connects the second input to the task wrapped in this contract__@param input The contract that is connected as the second input.;public void setSecondInput(Operator<IN2> input) {_		this.input2 = input__	};clears,all,previous,connections,and,connects,the,second,input,to,the,task,wrapped,in,this,contract,param,input,the,contract,that,is,connected,as,the,second,input;public,void,set,second,input,operator,in2,input,this,input2,input
DualInputOperator -> public void setSecondInput(Operator<IN2> input);1422405541;Clears all previous connections and connects the second input to the task wrapped in this contract__@param input The contract that is connected as the second input.;public void setSecondInput(Operator<IN2> input) {_		this.input2 = input__	};clears,all,previous,connections,and,connects,the,second,input,to,the,task,wrapped,in,this,contract,param,input,the,contract,that,is,connected,as,the,second,input;public,void,set,second,input,operator,in2,input,this,input2,input
DualInputOperator -> public void setSecondInput(Operator<IN2> input);1423570503;Clears all previous connections and connects the second input to the task wrapped in this contract__@param input The contract that is connected as the second input.;public void setSecondInput(Operator<IN2> input) {_		this.input2 = input__	};clears,all,previous,connections,and,connects,the,second,input,to,the,task,wrapped,in,this,contract,param,input,the,contract,that,is,connected,as,the,second,input;public,void,set,second,input,operator,in2,input,this,input2,input
DualInputOperator -> public void setSecondInput(Operator<IN2> input);1455479358;Clears all previous connections and connects the second input to the task wrapped in this contract__@param input The contract that is connected as the second input.;public void setSecondInput(Operator<IN2> input) {_		this.input2 = input__	};clears,all,previous,connections,and,connects,the,second,input,to,the,task,wrapped,in,this,contract,param,input,the,contract,that,is,connected,as,the,second,input;public,void,set,second,input,operator,in2,input,this,input2,input
DualInputOperator -> public void setSecondInput(Operator<IN2> input);1515177486;Clears all previous connections and connects the second input to the task wrapped in this contract__@param input The contract that is connected as the second input.;public void setSecondInput(Operator<IN2> input) {_		this.input2 = input__	};clears,all,previous,connections,and,connects,the,second,input,to,the,task,wrapped,in,this,contract,param,input,the,contract,that,is,connected,as,the,second,input;public,void,set,second,input,operator,in2,input,this,input2,input
