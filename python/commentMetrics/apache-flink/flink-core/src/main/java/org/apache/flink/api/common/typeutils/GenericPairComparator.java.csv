commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void setReference(T1 reference) {     comparator1.extractKeys(reference, referenceKeyFields, 0). }
false;public;1;10;;@Override public boolean equalToReference(T2 candidate) {     comparator2.extractKeys(candidate, candidateKeyFields, 0).     for (int i = 0. i < this.comparators1.length. i++) {         if (this.comparators1[i].compare(referenceKeyFields[i], candidateKeyFields[i]) != 0) {             return false.         }     }     return true. }
false;public;1;13;;@Override public int compareToReference(T2 candidate) {     comparator2.extractKeys(candidate, candidateKeyFields, 0).     for (int i = 0. i < this.comparators1.length. i++) {         // We reverse ordering here because our "compareToReference" does work in a mirrored         // way compared to Comparable.compareTo         int res = this.comparators1[i].compare(candidateKeyFields[i], referenceKeyFields[i]).         if (res != 0) {             return res.         }     }     return 0. }
