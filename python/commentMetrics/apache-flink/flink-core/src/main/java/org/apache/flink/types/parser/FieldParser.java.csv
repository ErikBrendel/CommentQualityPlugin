# id;timestamp;commentText;codeText;commentWords;codeWords
FieldParser -> public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim);1422280244;Checks if the delimiter starts at the given start position of the byte array.__Attention: This method assumes that enough characters follow the start position for the delimiter check!__@param bytes The byte array that holds the value._@param startPos The index of the byte array where the check for the delimiter starts._@param delim The delimiter to check for.__@return true if a delimiter starts at the given start position, false otherwise.;public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim) {__		for(int pos = 0_ pos < delim.length_ pos++) {_			_			if(delim[pos] != bytes[startPos+pos]) {_				return false__			}_		}_		return true__		_	};checks,if,the,delimiter,starts,at,the,given,start,position,of,the,byte,array,attention,this,method,assumes,that,enough,characters,follow,the,start,position,for,the,delimiter,check,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,of,the,byte,array,where,the,check,for,the,delimiter,starts,param,delim,the,delimiter,to,check,for,return,true,if,a,delimiter,starts,at,the,given,start,position,false,otherwise;public,static,final,boolean,delimiter,next,byte,bytes,int,start,pos,byte,delim,for,int,pos,0,pos,delim,length,pos,if,delim,pos,bytes,start,pos,pos,return,false,return,true
FieldParser -> public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim);1422823634;Checks if the delimiter starts at the given start position of the byte array.__Attention: This method assumes that enough characters follow the start position for the delimiter check!__@param bytes The byte array that holds the value._@param startPos The index of the byte array where the check for the delimiter starts._@param delim The delimiter to check for.__@return true if a delimiter starts at the given start position, false otherwise.;public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim) {__		for(int pos = 0_ pos < delim.length_ pos++) {_			_			if(delim[pos] != bytes[startPos+pos]) {_				return false__			}_		}_		return true__		_	};checks,if,the,delimiter,starts,at,the,given,start,position,of,the,byte,array,attention,this,method,assumes,that,enough,characters,follow,the,start,position,for,the,delimiter,check,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,of,the,byte,array,where,the,check,for,the,delimiter,starts,param,delim,the,delimiter,to,check,for,return,true,if,a,delimiter,starts,at,the,given,start,position,false,otherwise;public,static,final,boolean,delimiter,next,byte,bytes,int,start,pos,byte,delim,for,int,pos,0,pos,delim,length,pos,if,delim,pos,bytes,start,pos,pos,return,false,return,true
FieldParser -> public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim);1423131458;Checks if the delimiter starts at the given start position of the byte array.__Attention: This method assumes that enough characters follow the start position for the delimiter check!__@param bytes The byte array that holds the value._@param startPos The index of the byte array where the check for the delimiter starts._@param delim The delimiter to check for.__@return true if a delimiter starts at the given start position, false otherwise.;public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim) {__		for(int pos = 0_ pos < delim.length_ pos++) {_			_			if(delim[pos] != bytes[startPos+pos]) {_				return false__			}_		}_		return true__		_	};checks,if,the,delimiter,starts,at,the,given,start,position,of,the,byte,array,attention,this,method,assumes,that,enough,characters,follow,the,start,position,for,the,delimiter,check,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,of,the,byte,array,where,the,check,for,the,delimiter,starts,param,delim,the,delimiter,to,check,for,return,true,if,a,delimiter,starts,at,the,given,start,position,false,otherwise;public,static,final,boolean,delimiter,next,byte,bytes,int,start,pos,byte,delim,for,int,pos,0,pos,delim,length,pos,if,delim,pos,bytes,start,pos,pos,return,false,return,true
FieldParser -> public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim);1431989549;Checks if the delimiter starts at the given start position of the byte array.__Attention: This method assumes that enough characters follow the start position for the delimiter check!__@param bytes The byte array that holds the value._@param startPos The index of the byte array where the check for the delimiter starts._@param delim The delimiter to check for.__@return true if a delimiter starts at the given start position, false otherwise.;public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim) {__		for(int pos = 0_ pos < delim.length_ pos++) {_			_			if(delim[pos] != bytes[startPos+pos]) {_				return false__			}_		}_		return true__		_	};checks,if,the,delimiter,starts,at,the,given,start,position,of,the,byte,array,attention,this,method,assumes,that,enough,characters,follow,the,start,position,for,the,delimiter,check,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,of,the,byte,array,where,the,check,for,the,delimiter,starts,param,delim,the,delimiter,to,check,for,return,true,if,a,delimiter,starts,at,the,given,start,position,false,otherwise;public,static,final,boolean,delimiter,next,byte,bytes,int,start,pos,byte,delim,for,int,pos,0,pos,delim,length,pos,if,delim,pos,bytes,start,pos,pos,return,false,return,true
FieldParser -> public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim);1431989549;Checks if the delimiter starts at the given start position of the byte array.__Attention: This method assumes that enough characters follow the start position for the delimiter check!__@param bytes The byte array that holds the value._@param startPos The index of the byte array where the check for the delimiter starts._@param delim The delimiter to check for.__@return true if a delimiter starts at the given start position, false otherwise.;public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim) {__		for(int pos = 0_ pos < delim.length_ pos++) {_			_			if(delim[pos] != bytes[startPos+pos]) {_				return false__			}_		}_		return true__		_	};checks,if,the,delimiter,starts,at,the,given,start,position,of,the,byte,array,attention,this,method,assumes,that,enough,characters,follow,the,start,position,for,the,delimiter,check,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,of,the,byte,array,where,the,check,for,the,delimiter,starts,param,delim,the,delimiter,to,check,for,return,true,if,a,delimiter,starts,at,the,given,start,position,false,otherwise;public,static,final,boolean,delimiter,next,byte,bytes,int,start,pos,byte,delim,for,int,pos,0,pos,delim,length,pos,if,delim,pos,bytes,start,pos,pos,return,false,return,true
FieldParser -> public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim);1432117463;Checks if the delimiter starts at the given start position of the byte array.__Attention: This method assumes that enough characters follow the start position for the delimiter check!__@param bytes The byte array that holds the value._@param startPos The index of the byte array where the check for the delimiter starts._@param delim The delimiter to check for.__@return true if a delimiter starts at the given start position, false otherwise.;public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim) {__		for(int pos = 0_ pos < delim.length_ pos++) {_			_			if(delim[pos] != bytes[startPos+pos]) {_				return false__			}_		}_		return true__		_	};checks,if,the,delimiter,starts,at,the,given,start,position,of,the,byte,array,attention,this,method,assumes,that,enough,characters,follow,the,start,position,for,the,delimiter,check,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,of,the,byte,array,where,the,check,for,the,delimiter,starts,param,delim,the,delimiter,to,check,for,return,true,if,a,delimiter,starts,at,the,given,start,position,false,otherwise;public,static,final,boolean,delimiter,next,byte,bytes,int,start,pos,byte,delim,for,int,pos,0,pos,delim,length,pos,if,delim,pos,bytes,start,pos,pos,return,false,return,true
FieldParser -> public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim);1455479358;Checks if the delimiter starts at the given start position of the byte array.__Attention: This method assumes that enough characters follow the start position for the delimiter check!__@param bytes The byte array that holds the value._@param startPos The index of the byte array where the check for the delimiter starts._@param delim The delimiter to check for.__@return true if a delimiter starts at the given start position, false otherwise.;public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim) {__		for(int pos = 0_ pos < delim.length_ pos++) {_			_			if(delim[pos] != bytes[startPos+pos]) {_				return false__			}_		}_		return true__		_	};checks,if,the,delimiter,starts,at,the,given,start,position,of,the,byte,array,attention,this,method,assumes,that,enough,characters,follow,the,start,position,for,the,delimiter,check,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,of,the,byte,array,where,the,check,for,the,delimiter,starts,param,delim,the,delimiter,to,check,for,return,true,if,a,delimiter,starts,at,the,given,start,position,false,otherwise;public,static,final,boolean,delimiter,next,byte,bytes,int,start,pos,byte,delim,for,int,pos,0,pos,delim,length,pos,if,delim,pos,bytes,start,pos,pos,return,false,return,true
FieldParser -> public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim);1466027006;Checks if the delimiter starts at the given start position of the byte array.__Attention: This method assumes that enough characters follow the start position for the delimiter check!__@param bytes The byte array that holds the value._@param startPos The index of the byte array where the check for the delimiter starts._@param delim The delimiter to check for.__@return true if a delimiter starts at the given start position, false otherwise.;public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim) {__		for(int pos = 0_ pos < delim.length_ pos++) {_			_			if(delim[pos] != bytes[startPos+pos]) {_				return false__			}_		}_		return true__		_	};checks,if,the,delimiter,starts,at,the,given,start,position,of,the,byte,array,attention,this,method,assumes,that,enough,characters,follow,the,start,position,for,the,delimiter,check,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,of,the,byte,array,where,the,check,for,the,delimiter,starts,param,delim,the,delimiter,to,check,for,return,true,if,a,delimiter,starts,at,the,given,start,position,false,otherwise;public,static,final,boolean,delimiter,next,byte,bytes,int,start,pos,byte,delim,for,int,pos,0,pos,delim,length,pos,if,delim,pos,bytes,start,pos,pos,return,false,return,true
FieldParser -> public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim);1474288559;Checks if the delimiter starts at the given start position of the byte array.__Attention: This method assumes that enough characters follow the start position for the delimiter check!__@param bytes The byte array that holds the value._@param startPos The index of the byte array where the check for the delimiter starts._@param delim The delimiter to check for.__@return true if a delimiter starts at the given start position, false otherwise.;public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim) {__		for(int pos = 0_ pos < delim.length_ pos++) {_			_			if(delim[pos] != bytes[startPos+pos]) {_				return false__			}_		}_		return true__		_	};checks,if,the,delimiter,starts,at,the,given,start,position,of,the,byte,array,attention,this,method,assumes,that,enough,characters,follow,the,start,position,for,the,delimiter,check,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,of,the,byte,array,where,the,check,for,the,delimiter,starts,param,delim,the,delimiter,to,check,for,return,true,if,a,delimiter,starts,at,the,given,start,position,false,otherwise;public,static,final,boolean,delimiter,next,byte,bytes,int,start,pos,byte,delim,for,int,pos,0,pos,delim,length,pos,if,delim,pos,bytes,start,pos,pos,return,false,return,true
FieldParser -> public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim);1474382639;Checks if the delimiter starts at the given start position of the byte array.__Attention: This method assumes that enough characters follow the start position for the delimiter check!__@param bytes The byte array that holds the value._@param startPos The index of the byte array where the check for the delimiter starts._@param delim The delimiter to check for.__@return true if a delimiter starts at the given start position, false otherwise.;public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim) {__		for(int pos = 0_ pos < delim.length_ pos++) {_			_			if(delim[pos] != bytes[startPos+pos]) {_				return false__			}_		}_		return true__		_	};checks,if,the,delimiter,starts,at,the,given,start,position,of,the,byte,array,attention,this,method,assumes,that,enough,characters,follow,the,start,position,for,the,delimiter,check,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,of,the,byte,array,where,the,check,for,the,delimiter,starts,param,delim,the,delimiter,to,check,for,return,true,if,a,delimiter,starts,at,the,given,start,position,false,otherwise;public,static,final,boolean,delimiter,next,byte,bytes,int,start,pos,byte,delim,for,int,pos,0,pos,delim,length,pos,if,delim,pos,bytes,start,pos,pos,return,false,return,true
FieldParser -> public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim);1474535382;Checks if the delimiter starts at the given start position of the byte array.__Attention: This method assumes that enough characters follow the start position for the delimiter check!__@param bytes The byte array that holds the value._@param startPos The index of the byte array where the check for the delimiter starts._@param delim The delimiter to check for.__@return true if a delimiter starts at the given start position, false otherwise.;public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim) {__		for(int pos = 0_ pos < delim.length_ pos++) {_			_			if(delim[pos] != bytes[startPos+pos]) {_				return false__			}_		}_		return true__		_	};checks,if,the,delimiter,starts,at,the,given,start,position,of,the,byte,array,attention,this,method,assumes,that,enough,characters,follow,the,start,position,for,the,delimiter,check,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,of,the,byte,array,where,the,check,for,the,delimiter,starts,param,delim,the,delimiter,to,check,for,return,true,if,a,delimiter,starts,at,the,given,start,position,false,otherwise;public,static,final,boolean,delimiter,next,byte,bytes,int,start,pos,byte,delim,for,int,pos,0,pos,delim,length,pos,if,delim,pos,bytes,start,pos,pos,return,false,return,true
FieldParser -> public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim);1481219256;Checks if the delimiter starts at the given start position of the byte array.__Attention: This method assumes that enough characters follow the start position for the delimiter check!__@param bytes The byte array that holds the value._@param startPos The index of the byte array where the check for the delimiter starts._@param delim The delimiter to check for.__@return true if a delimiter starts at the given start position, false otherwise.;public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim) {__		for(int pos = 0_ pos < delim.length_ pos++) {_			_			if(delim[pos] != bytes[startPos+pos]) {_				return false__			}_		}_		return true__		_	};checks,if,the,delimiter,starts,at,the,given,start,position,of,the,byte,array,attention,this,method,assumes,that,enough,characters,follow,the,start,position,for,the,delimiter,check,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,of,the,byte,array,where,the,check,for,the,delimiter,starts,param,delim,the,delimiter,to,check,for,return,true,if,a,delimiter,starts,at,the,given,start,position,false,otherwise;public,static,final,boolean,delimiter,next,byte,bytes,int,start,pos,byte,delim,for,int,pos,0,pos,delim,length,pos,if,delim,pos,bytes,start,pos,pos,return,false,return,true
FieldParser -> public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim);1481228508;Checks if the delimiter starts at the given start position of the byte array.__Attention: This method assumes that enough characters follow the start position for the delimiter check!__@param bytes The byte array that holds the value._@param startPos The index of the byte array where the check for the delimiter starts._@param delim The delimiter to check for.__@return true if a delimiter starts at the given start position, false otherwise.;public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim) {__		for(int pos = 0_ pos < delim.length_ pos++) {_			_			if(delim[pos] != bytes[startPos+pos]) {_				return false__			}_		}_		return true__		_	};checks,if,the,delimiter,starts,at,the,given,start,position,of,the,byte,array,attention,this,method,assumes,that,enough,characters,follow,the,start,position,for,the,delimiter,check,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,of,the,byte,array,where,the,check,for,the,delimiter,starts,param,delim,the,delimiter,to,check,for,return,true,if,a,delimiter,starts,at,the,given,start,position,false,otherwise;public,static,final,boolean,delimiter,next,byte,bytes,int,start,pos,byte,delim,for,int,pos,0,pos,delim,length,pos,if,delim,pos,bytes,start,pos,pos,return,false,return,true
FieldParser -> public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim);1488232219;Checks if the delimiter starts at the given start position of the byte array.__Attention: This method assumes that enough characters follow the start position for the delimiter check!__@param bytes The byte array that holds the value._@param startPos The index of the byte array where the check for the delimiter starts._@param delim The delimiter to check for.__@return true if a delimiter starts at the given start position, false otherwise.;public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim) {__		for(int pos = 0_ pos < delim.length_ pos++) {_			_			if(delim[pos] != bytes[startPos+pos]) {_				return false__			}_		}_		return true__		_	};checks,if,the,delimiter,starts,at,the,given,start,position,of,the,byte,array,attention,this,method,assumes,that,enough,characters,follow,the,start,position,for,the,delimiter,check,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,of,the,byte,array,where,the,check,for,the,delimiter,starts,param,delim,the,delimiter,to,check,for,return,true,if,a,delimiter,starts,at,the,given,start,position,false,otherwise;public,static,final,boolean,delimiter,next,byte,bytes,int,start,pos,byte,delim,for,int,pos,0,pos,delim,length,pos,if,delim,pos,bytes,start,pos,pos,return,false,return,true
FieldParser -> public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim);1515168359;Checks if the delimiter starts at the given start position of the byte array.__Attention: This method assumes that enough characters follow the start position for the delimiter check!__@param bytes The byte array that holds the value._@param startPos The index of the byte array where the check for the delimiter starts._@param delim The delimiter to check for.__@return true if a delimiter starts at the given start position, false otherwise.;public static final boolean delimiterNext(byte[] bytes, int startPos, byte[] delim) {__		for(int pos = 0_ pos < delim.length_ pos++) {_			_			if(delim[pos] != bytes[startPos+pos]) {_				return false__			}_		}_		return true__		_	};checks,if,the,delimiter,starts,at,the,given,start,position,of,the,byte,array,attention,this,method,assumes,that,enough,characters,follow,the,start,position,for,the,delimiter,check,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,of,the,byte,array,where,the,check,for,the,delimiter,starts,param,delim,the,delimiter,to,check,for,return,true,if,a,delimiter,starts,at,the,given,start,position,false,otherwise;public,static,final,boolean,delimiter,next,byte,bytes,int,start,pos,byte,delim,for,int,pos,0,pos,delim,length,pos,if,delim,pos,bytes,start,pos,pos,return,false,return,true
FieldParser -> protected static final int nextStringLength(byte[] bytes, int startPos, int length, char delimiter);1474535382;Returns the length of a string. Throws an exception if the column is empty.__@return the length of the string;protected static final int nextStringLength(byte[] bytes, int startPos, int length, char delimiter) {_		if (length <= 0) {_			throw new IllegalArgumentException("Invalid input: Empty string")__		}_		int limitedLength = 0__		final byte delByte = (byte) delimiter___		while (limitedLength < length && bytes[startPos + limitedLength] != delByte) {_			limitedLength++__		}__		return limitedLength__	};returns,the,length,of,a,string,throws,an,exception,if,the,column,is,empty,return,the,length,of,the,string;protected,static,final,int,next,string,length,byte,bytes,int,start,pos,int,length,char,delimiter,if,length,0,throw,new,illegal,argument,exception,invalid,input,empty,string,int,limited,length,0,final,byte,del,byte,byte,delimiter,while,limited,length,length,bytes,start,pos,limited,length,del,byte,limited,length,return,limited,length
FieldParser -> protected static final int nextStringLength(byte[] bytes, int startPos, int length, char delimiter);1481219256;Returns the length of a string. Throws an exception if the column is empty.__@return the length of the string;protected static final int nextStringLength(byte[] bytes, int startPos, int length, char delimiter) {_		if (length <= 0) {_			throw new IllegalArgumentException("Invalid input: Empty string")__		}_		int limitedLength = 0__		final byte delByte = (byte) delimiter___		while (limitedLength < length && bytes[startPos + limitedLength] != delByte) {_			limitedLength++__		}__		return limitedLength__	};returns,the,length,of,a,string,throws,an,exception,if,the,column,is,empty,return,the,length,of,the,string;protected,static,final,int,next,string,length,byte,bytes,int,start,pos,int,length,char,delimiter,if,length,0,throw,new,illegal,argument,exception,invalid,input,empty,string,int,limited,length,0,final,byte,del,byte,byte,delimiter,while,limited,length,length,bytes,start,pos,limited,length,del,byte,limited,length,return,limited,length
FieldParser -> protected static final int nextStringLength(byte[] bytes, int startPos, int length, char delimiter);1481228508;Returns the length of a string. Throws an exception if the column is empty.__@return the length of the string;protected static final int nextStringLength(byte[] bytes, int startPos, int length, char delimiter) {_		if (length <= 0) {_			throw new IllegalArgumentException("Invalid input: Empty string")__		}_		int limitedLength = 0__		final byte delByte = (byte) delimiter___		while (limitedLength < length && bytes[startPos + limitedLength] != delByte) {_			limitedLength++__		}__		return limitedLength__	};returns,the,length,of,a,string,throws,an,exception,if,the,column,is,empty,return,the,length,of,the,string;protected,static,final,int,next,string,length,byte,bytes,int,start,pos,int,length,char,delimiter,if,length,0,throw,new,illegal,argument,exception,invalid,input,empty,string,int,limited,length,0,final,byte,del,byte,byte,delimiter,while,limited,length,length,bytes,start,pos,limited,length,del,byte,limited,length,return,limited,length
FieldParser -> protected static final int nextStringLength(byte[] bytes, int startPos, int length, char delimiter);1488232219;Returns the length of a string. Throws an exception if the column is empty.__@return the length of the string;protected static final int nextStringLength(byte[] bytes, int startPos, int length, char delimiter) {_		if (length <= 0) {_			throw new IllegalArgumentException("Invalid input: Empty string")__		}_		int limitedLength = 0__		final byte delByte = (byte) delimiter___		while (limitedLength < length && bytes[startPos + limitedLength] != delByte) {_			limitedLength++__		}__		return limitedLength__	};returns,the,length,of,a,string,throws,an,exception,if,the,column,is,empty,return,the,length,of,the,string;protected,static,final,int,next,string,length,byte,bytes,int,start,pos,int,length,char,delimiter,if,length,0,throw,new,illegal,argument,exception,invalid,input,empty,string,int,limited,length,0,final,byte,del,byte,byte,delimiter,while,limited,length,length,bytes,start,pos,limited,length,del,byte,limited,length,return,limited,length
FieldParser -> protected static final int nextStringLength(byte[] bytes, int startPos, int length, char delimiter);1515168359;Returns the length of a string. Throws an exception if the column is empty.__@return the length of the string;protected static final int nextStringLength(byte[] bytes, int startPos, int length, char delimiter) {_		if (length <= 0) {_			throw new IllegalArgumentException("Invalid input: Empty string")__		}_		int limitedLength = 0__		final byte delByte = (byte) delimiter___		while (limitedLength < length && bytes[startPos + limitedLength] != delByte) {_			limitedLength++__		}__		return limitedLength__	};returns,the,length,of,a,string,throws,an,exception,if,the,column,is,empty,return,the,length,of,the,string;protected,static,final,int,next,string,length,byte,bytes,int,start,pos,int,length,char,delimiter,if,length,0,throw,new,illegal,argument,exception,invalid,input,empty,string,int,limited,length,0,final,byte,del,byte,byte,delimiter,while,limited,length,length,bytes,start,pos,limited,length,del,byte,limited,length,return,limited,length
FieldParser -> public static final boolean endsWithDelimiter(byte[] bytes, int endPos, byte[] delim);1488232219;Checks if the given bytes ends with the delimiter at the given end position.__@param bytes  The byte array that holds the value._@param endPos The index of the byte array where the check for the delimiter ends._@param delim  The delimiter to check for.__@return true if a delimiter ends at the given end position, false otherwise.;public static final boolean endsWithDelimiter(byte[] bytes, int endPos, byte[] delim) {_		if (endPos < delim.length - 1) {_			return false__		}_		for (int pos = 0_ pos < delim.length_ ++pos) {_			if (delim[pos] != bytes[endPos - delim.length + 1 + pos]) {_				return false__			}_		}_		return true__	};checks,if,the,given,bytes,ends,with,the,delimiter,at,the,given,end,position,param,bytes,the,byte,array,that,holds,the,value,param,end,pos,the,index,of,the,byte,array,where,the,check,for,the,delimiter,ends,param,delim,the,delimiter,to,check,for,return,true,if,a,delimiter,ends,at,the,given,end,position,false,otherwise;public,static,final,boolean,ends,with,delimiter,byte,bytes,int,end,pos,byte,delim,if,end,pos,delim,length,1,return,false,for,int,pos,0,pos,delim,length,pos,if,delim,pos,bytes,end,pos,delim,length,1,pos,return,false,return,true
FieldParser -> public static final boolean endsWithDelimiter(byte[] bytes, int endPos, byte[] delim);1515168359;Checks if the given bytes ends with the delimiter at the given end position.__@param bytes  The byte array that holds the value._@param endPos The index of the byte array where the check for the delimiter ends._@param delim  The delimiter to check for.__@return true if a delimiter ends at the given end position, false otherwise.;public static final boolean endsWithDelimiter(byte[] bytes, int endPos, byte[] delim) {_		if (endPos < delim.length - 1) {_			return false__		}_		for (int pos = 0_ pos < delim.length_ ++pos) {_			if (delim[pos] != bytes[endPos - delim.length + 1 + pos]) {_				return false__			}_		}_		return true__	};checks,if,the,given,bytes,ends,with,the,delimiter,at,the,given,end,position,param,bytes,the,byte,array,that,holds,the,value,param,end,pos,the,index,of,the,byte,array,where,the,check,for,the,delimiter,ends,param,delim,the,delimiter,to,check,for,return,true,if,a,delimiter,ends,at,the,given,end,position,false,otherwise;public,static,final,boolean,ends,with,delimiter,byte,bytes,int,end,pos,byte,delim,if,end,pos,delim,length,1,return,false,for,int,pos,0,pos,delim,length,pos,if,delim,pos,bytes,end,pos,delim,length,1,pos,return,false,return,true
FieldParser -> protected final int nextStringEndPos(byte[] bytes, int startPos, int limit, byte[] delimiter);1474535382;Returns the end position of a string. Sets the error state if the column is empty.__@return the end position of the string or -1 if an error occurred;protected final int nextStringEndPos(byte[] bytes, int startPos, int limit, byte[] delimiter) {_		int endPos = startPos___		final int delimLimit = limit - delimiter.length + 1___		while (endPos < limit) {_			if (endPos < delimLimit && delimiterNext(bytes, endPos, delimiter)) {_				if (endPos == startPos) {_					setErrorState(ParseErrorState.EMPTY_COLUMN)__					return -1__				}_				break__			}_			endPos++__		}__		return endPos__	};returns,the,end,position,of,a,string,sets,the,error,state,if,the,column,is,empty,return,the,end,position,of,the,string,or,1,if,an,error,occurred;protected,final,int,next,string,end,pos,byte,bytes,int,start,pos,int,limit,byte,delimiter,int,end,pos,start,pos,final,int,delim,limit,limit,delimiter,length,1,while,end,pos,limit,if,end,pos,delim,limit,delimiter,next,bytes,end,pos,delimiter,if,end,pos,start,pos,set,error,state,parse,error,state,return,1,break,end,pos,return,end,pos
FieldParser -> protected final int nextStringEndPos(byte[] bytes, int startPos, int limit, byte[] delimiter);1481219256;Returns the end position of a string. Sets the error state if the column is empty.__@return the end position of the string or -1 if an error occurred;protected final int nextStringEndPos(byte[] bytes, int startPos, int limit, byte[] delimiter) {_		int endPos = startPos___		final int delimLimit = limit - delimiter.length + 1___		while (endPos < limit) {_			if (endPos < delimLimit && delimiterNext(bytes, endPos, delimiter)) {_				if (endPos == startPos) {_					setErrorState(ParseErrorState.EMPTY_COLUMN)__					return -1__				}_				break__			}_			endPos++__		}__		return endPos__	};returns,the,end,position,of,a,string,sets,the,error,state,if,the,column,is,empty,return,the,end,position,of,the,string,or,1,if,an,error,occurred;protected,final,int,next,string,end,pos,byte,bytes,int,start,pos,int,limit,byte,delimiter,int,end,pos,start,pos,final,int,delim,limit,limit,delimiter,length,1,while,end,pos,limit,if,end,pos,delim,limit,delimiter,next,bytes,end,pos,delimiter,if,end,pos,start,pos,set,error,state,parse,error,state,return,1,break,end,pos,return,end,pos
FieldParser -> protected final int nextStringEndPos(byte[] bytes, int startPos, int limit, byte[] delimiter);1481228508;Returns the end position of a string. Sets the error state if the column is empty.__@return the end position of the string or -1 if an error occurred;protected final int nextStringEndPos(byte[] bytes, int startPos, int limit, byte[] delimiter) {_		int endPos = startPos___		final int delimLimit = limit - delimiter.length + 1___		while (endPos < limit) {_			if (endPos < delimLimit && delimiterNext(bytes, endPos, delimiter)) {_				if (endPos == startPos) {_					setErrorState(ParseErrorState.EMPTY_COLUMN)__					return -1__				}_				break__			}_			endPos++__		}__		return endPos__	};returns,the,end,position,of,a,string,sets,the,error,state,if,the,column,is,empty,return,the,end,position,of,the,string,or,1,if,an,error,occurred;protected,final,int,next,string,end,pos,byte,bytes,int,start,pos,int,limit,byte,delimiter,int,end,pos,start,pos,final,int,delim,limit,limit,delimiter,length,1,while,end,pos,limit,if,end,pos,delim,limit,delimiter,next,bytes,end,pos,delimiter,if,end,pos,start,pos,set,error,state,parse,error,state,return,1,break,end,pos,return,end,pos
FieldParser -> protected final int nextStringEndPos(byte[] bytes, int startPos, int limit, byte[] delimiter);1488232219;Returns the end position of a string. Sets the error state if the column is empty.__@return the end position of the string or -1 if an error occurred;protected final int nextStringEndPos(byte[] bytes, int startPos, int limit, byte[] delimiter) {_		int endPos = startPos___		final int delimLimit = limit - delimiter.length + 1___		while (endPos < limit) {_			if (endPos < delimLimit && delimiterNext(bytes, endPos, delimiter)) {_				if (endPos == startPos) {_					setErrorState(ParseErrorState.EMPTY_COLUMN)__					return -1__				}_				break__			}_			endPos++__		}__		return endPos__	};returns,the,end,position,of,a,string,sets,the,error,state,if,the,column,is,empty,return,the,end,position,of,the,string,or,1,if,an,error,occurred;protected,final,int,next,string,end,pos,byte,bytes,int,start,pos,int,limit,byte,delimiter,int,end,pos,start,pos,final,int,delim,limit,limit,delimiter,length,1,while,end,pos,limit,if,end,pos,delim,limit,delimiter,next,bytes,end,pos,delimiter,if,end,pos,start,pos,set,error,state,parse,error,state,return,1,break,end,pos,return,end,pos
FieldParser -> protected final int nextStringEndPos(byte[] bytes, int startPos, int limit, byte[] delimiter);1515168359;Returns the end position of a string. Sets the error state if the column is empty.__@return the end position of the string or -1 if an error occurred;protected final int nextStringEndPos(byte[] bytes, int startPos, int limit, byte[] delimiter) {_		int endPos = startPos___		final int delimLimit = limit - delimiter.length + 1___		while (endPos < limit) {_			if (endPos < delimLimit && delimiterNext(bytes, endPos, delimiter)) {_				break__			}_			endPos++__		}__		if (endPos == startPos) {_			setErrorState(ParseErrorState.EMPTY_COLUMN)__			return -1__		}_		return endPos__	};returns,the,end,position,of,a,string,sets,the,error,state,if,the,column,is,empty,return,the,end,position,of,the,string,or,1,if,an,error,occurred;protected,final,int,next,string,end,pos,byte,bytes,int,start,pos,int,limit,byte,delimiter,int,end,pos,start,pos,final,int,delim,limit,limit,delimiter,length,1,while,end,pos,limit,if,end,pos,delim,limit,delimiter,next,bytes,end,pos,delimiter,break,end,pos,if,end,pos,start,pos,set,error,state,parse,error,state,return,1,return,end,pos
FieldParser -> public abstract T getLastResult()_;1405024514;Gets the parsed field. This method returns the value parsed by the last successful invocation of_{@link #parseField(byte[], int, int, char, Object)}. It objects are mutable and reused, it will return_the object instance that was passed the the parse function.__@return The latest parsed field.;public abstract T getLastResult()_;gets,the,parsed,field,this,method,returns,the,value,parsed,by,the,last,successful,invocation,of,link,parse,field,byte,int,int,char,object,it,objects,are,mutable,and,reused,it,will,return,the,object,instance,that,was,passed,the,the,parse,function,return,the,latest,parsed,field;public,abstract,t,get,last,result
FieldParser -> public abstract T getLastResult()_;1405090423;Gets the parsed field. This method returns the value parsed by the last successful invocation of_{@link #parseField(byte[], int, int, char, Object)}. It objects are mutable and reused, it will return_the object instance that was passed the the parse function.__@return The latest parsed field.;public abstract T getLastResult()_;gets,the,parsed,field,this,method,returns,the,value,parsed,by,the,last,successful,invocation,of,link,parse,field,byte,int,int,char,object,it,objects,are,mutable,and,reused,it,will,return,the,object,instance,that,was,passed,the,the,parse,function,return,the,latest,parsed,field;public,abstract,t,get,last,result
FieldParser -> public abstract T getLastResult()_;1411473593;Gets the parsed field. This method returns the value parsed by the last successful invocation of_{@link #parseField(byte[], int, int, char, Object)}. It objects are mutable and reused, it will return_the object instance that was passed the the parse function.__@return The latest parsed field.;public abstract T getLastResult()_;gets,the,parsed,field,this,method,returns,the,value,parsed,by,the,last,successful,invocation,of,link,parse,field,byte,int,int,char,object,it,objects,are,mutable,and,reused,it,will,return,the,object,instance,that,was,passed,the,the,parse,function,return,the,latest,parsed,field;public,abstract,t,get,last,result
FieldParser -> public abstract T getLastResult()_;1422280244;Gets the parsed field. This method returns the value parsed by the last successful invocation of_{@link #parseField(byte[], int, int, byte[], Object)}. It objects are mutable and reused, it will return_the object instance that was passed the the parse function.__@return The latest parsed field.;public abstract T getLastResult()_;gets,the,parsed,field,this,method,returns,the,value,parsed,by,the,last,successful,invocation,of,link,parse,field,byte,int,int,byte,object,it,objects,are,mutable,and,reused,it,will,return,the,object,instance,that,was,passed,the,the,parse,function,return,the,latest,parsed,field;public,abstract,t,get,last,result
FieldParser -> public abstract T getLastResult()_;1422823634;Gets the parsed field. This method returns the value parsed by the last successful invocation of_{@link #parseField(byte[], int, int, byte[], Object)}. It objects are mutable and reused, it will return_the object instance that was passed the parse function.__@return The latest parsed field.;public abstract T getLastResult()_;gets,the,parsed,field,this,method,returns,the,value,parsed,by,the,last,successful,invocation,of,link,parse,field,byte,int,int,byte,object,it,objects,are,mutable,and,reused,it,will,return,the,object,instance,that,was,passed,the,parse,function,return,the,latest,parsed,field;public,abstract,t,get,last,result
FieldParser -> public abstract T getLastResult()_;1423131458;Gets the parsed field. This method returns the value parsed by the last successful invocation of_{@link #parseField(byte[], int, int, byte[], Object)}. It objects are mutable and reused, it will return_the object instance that was passed the parse function.__@return The latest parsed field.;public abstract T getLastResult()_;gets,the,parsed,field,this,method,returns,the,value,parsed,by,the,last,successful,invocation,of,link,parse,field,byte,int,int,byte,object,it,objects,are,mutable,and,reused,it,will,return,the,object,instance,that,was,passed,the,parse,function,return,the,latest,parsed,field;public,abstract,t,get,last,result
FieldParser -> public abstract T getLastResult()_;1431989549;Gets the parsed field. This method returns the value parsed by the last successful invocation of_{@link #parseField(byte[], int, int, byte[], Object)}. It objects are mutable and reused, it will return_the object instance that was passed the parse function.__@return The latest parsed field.;public abstract T getLastResult()_;gets,the,parsed,field,this,method,returns,the,value,parsed,by,the,last,successful,invocation,of,link,parse,field,byte,int,int,byte,object,it,objects,are,mutable,and,reused,it,will,return,the,object,instance,that,was,passed,the,parse,function,return,the,latest,parsed,field;public,abstract,t,get,last,result
FieldParser -> public abstract T getLastResult()_;1431989549;Gets the parsed field. This method returns the value parsed by the last successful invocation of_{@link #parseField(byte[], int, int, byte[], Object)}. It objects are mutable and reused, it will return_the object instance that was passed the parse function.__@return The latest parsed field.;public abstract T getLastResult()_;gets,the,parsed,field,this,method,returns,the,value,parsed,by,the,last,successful,invocation,of,link,parse,field,byte,int,int,byte,object,it,objects,are,mutable,and,reused,it,will,return,the,object,instance,that,was,passed,the,parse,function,return,the,latest,parsed,field;public,abstract,t,get,last,result
FieldParser -> public abstract T getLastResult()_;1432117463;Gets the parsed field. This method returns the value parsed by the last successful invocation of_{@link #parseField(byte[], int, int, byte[], Object)}. It objects are mutable and reused, it will return_the object instance that was passed the parse function.__@return The latest parsed field.;public abstract T getLastResult()_;gets,the,parsed,field,this,method,returns,the,value,parsed,by,the,last,successful,invocation,of,link,parse,field,byte,int,int,byte,object,it,objects,are,mutable,and,reused,it,will,return,the,object,instance,that,was,passed,the,parse,function,return,the,latest,parsed,field;public,abstract,t,get,last,result
FieldParser -> public abstract T getLastResult()_;1455479358;Gets the parsed field. This method returns the value parsed by the last successful invocation of_{@link #parseField(byte[], int, int, byte[], Object)}. It objects are mutable and reused, it will return_the object instance that was passed the parse function.__@return The latest parsed field.;public abstract T getLastResult()_;gets,the,parsed,field,this,method,returns,the,value,parsed,by,the,last,successful,invocation,of,link,parse,field,byte,int,int,byte,object,it,objects,are,mutable,and,reused,it,will,return,the,object,instance,that,was,passed,the,parse,function,return,the,latest,parsed,field;public,abstract,t,get,last,result
FieldParser -> public abstract T getLastResult()_;1466027006;Gets the parsed field. This method returns the value parsed by the last successful invocation of_{@link #parseField(byte[], int, int, byte[], Object)}. It objects are mutable and reused, it will return_the object instance that was passed the parse function.__@return The latest parsed field.;public abstract T getLastResult()_;gets,the,parsed,field,this,method,returns,the,value,parsed,by,the,last,successful,invocation,of,link,parse,field,byte,int,int,byte,object,it,objects,are,mutable,and,reused,it,will,return,the,object,instance,that,was,passed,the,parse,function,return,the,latest,parsed,field;public,abstract,t,get,last,result
FieldParser -> public abstract T getLastResult()_;1474288559;Gets the parsed field. This method returns the value parsed by the last successful invocation of_{@link #parseField(byte[], int, int, byte[], Object)}. It objects are mutable and reused, it will return_the object instance that was passed the parse function.__@return The latest parsed field.;public abstract T getLastResult()_;gets,the,parsed,field,this,method,returns,the,value,parsed,by,the,last,successful,invocation,of,link,parse,field,byte,int,int,byte,object,it,objects,are,mutable,and,reused,it,will,return,the,object,instance,that,was,passed,the,parse,function,return,the,latest,parsed,field;public,abstract,t,get,last,result
FieldParser -> public abstract T getLastResult()_;1474382639;Gets the parsed field. This method returns the value parsed by the last successful invocation of_{@link #parseField(byte[], int, int, byte[], Object)}. It objects are mutable and reused, it will return_the object instance that was passed the parse function.__@return The latest parsed field.;public abstract T getLastResult()_;gets,the,parsed,field,this,method,returns,the,value,parsed,by,the,last,successful,invocation,of,link,parse,field,byte,int,int,byte,object,it,objects,are,mutable,and,reused,it,will,return,the,object,instance,that,was,passed,the,parse,function,return,the,latest,parsed,field;public,abstract,t,get,last,result
FieldParser -> public abstract T getLastResult()_;1474535382;Gets the parsed field. This method returns the value parsed by the last successful invocation of_{@link #parseField(byte[], int, int, byte[], Object)}. It objects are mutable and reused, it will return_the object instance that was passed the parse function.__@return The latest parsed field.;public abstract T getLastResult()_;gets,the,parsed,field,this,method,returns,the,value,parsed,by,the,last,successful,invocation,of,link,parse,field,byte,int,int,byte,object,it,objects,are,mutable,and,reused,it,will,return,the,object,instance,that,was,passed,the,parse,function,return,the,latest,parsed,field;public,abstract,t,get,last,result
FieldParser -> public abstract T getLastResult()_;1481219256;Gets the parsed field. This method returns the value parsed by the last successful invocation of_{@link #parseField(byte[], int, int, byte[], Object)}. It objects are mutable and reused, it will return_the object instance that was passed the parse function.__@return The latest parsed field.;public abstract T getLastResult()_;gets,the,parsed,field,this,method,returns,the,value,parsed,by,the,last,successful,invocation,of,link,parse,field,byte,int,int,byte,object,it,objects,are,mutable,and,reused,it,will,return,the,object,instance,that,was,passed,the,parse,function,return,the,latest,parsed,field;public,abstract,t,get,last,result
FieldParser -> public abstract T getLastResult()_;1481228508;Gets the parsed field. This method returns the value parsed by the last successful invocation of_{@link #parseField(byte[], int, int, byte[], Object)}. It objects are mutable and reused, it will return_the object instance that was passed the parse function.__@return The latest parsed field.;public abstract T getLastResult()_;gets,the,parsed,field,this,method,returns,the,value,parsed,by,the,last,successful,invocation,of,link,parse,field,byte,int,int,byte,object,it,objects,are,mutable,and,reused,it,will,return,the,object,instance,that,was,passed,the,parse,function,return,the,latest,parsed,field;public,abstract,t,get,last,result
FieldParser -> public abstract T getLastResult()_;1488232219;Gets the parsed field. This method returns the value parsed by the last successful invocation of_{@link #parseField(byte[], int, int, byte[], Object)}. It objects are mutable and reused, it will return_the object instance that was passed the parse function.__@return The latest parsed field.;public abstract T getLastResult()_;gets,the,parsed,field,this,method,returns,the,value,parsed,by,the,last,successful,invocation,of,link,parse,field,byte,int,int,byte,object,it,objects,are,mutable,and,reused,it,will,return,the,object,instance,that,was,passed,the,parse,function,return,the,latest,parsed,field;public,abstract,t,get,last,result
FieldParser -> public abstract T getLastResult()_;1515168359;Gets the parsed field. This method returns the value parsed by the last successful invocation of_{@link #parseField(byte[], int, int, byte[], Object)}. It objects are mutable and reused, it will return_the object instance that was passed the parse function.__@return The latest parsed field.;public abstract T getLastResult()_;gets,the,parsed,field,this,method,returns,the,value,parsed,by,the,last,successful,invocation,of,link,parse,field,byte,int,int,byte,object,it,objects,are,mutable,and,reused,it,will,return,the,object,instance,that,was,passed,the,parse,function,return,the,latest,parsed,field;public,abstract,t,get,last,result
FieldParser -> public abstract T createValue()_;1405024514;Returns an instance of the parsed value type.__@return An instance of the parsed value type.;public abstract T createValue()_;returns,an,instance,of,the,parsed,value,type,return,an,instance,of,the,parsed,value,type;public,abstract,t,create,value
FieldParser -> public abstract T createValue()_;1405090423;Returns an instance of the parsed value type.__@return An instance of the parsed value type.;public abstract T createValue()_;returns,an,instance,of,the,parsed,value,type,return,an,instance,of,the,parsed,value,type;public,abstract,t,create,value
FieldParser -> public abstract T createValue()_;1411473593;Returns an instance of the parsed value type.__@return An instance of the parsed value type.;public abstract T createValue()_;returns,an,instance,of,the,parsed,value,type,return,an,instance,of,the,parsed,value,type;public,abstract,t,create,value
FieldParser -> public abstract T createValue()_;1422280244;Returns an instance of the parsed value type.__@return An instance of the parsed value type.;public abstract T createValue()_;returns,an,instance,of,the,parsed,value,type,return,an,instance,of,the,parsed,value,type;public,abstract,t,create,value
FieldParser -> public abstract T createValue()_;1422823634;Returns an instance of the parsed value type.__@return An instance of the parsed value type.;public abstract T createValue()_;returns,an,instance,of,the,parsed,value,type,return,an,instance,of,the,parsed,value,type;public,abstract,t,create,value
FieldParser -> public abstract T createValue()_;1423131458;Returns an instance of the parsed value type.__@return An instance of the parsed value type.;public abstract T createValue()_;returns,an,instance,of,the,parsed,value,type,return,an,instance,of,the,parsed,value,type;public,abstract,t,create,value
FieldParser -> public abstract T createValue()_;1431989549;Returns an instance of the parsed value type.__@return An instance of the parsed value type.;public abstract T createValue()_;returns,an,instance,of,the,parsed,value,type,return,an,instance,of,the,parsed,value,type;public,abstract,t,create,value
FieldParser -> public abstract T createValue()_;1431989549;Returns an instance of the parsed value type.__@return An instance of the parsed value type.;public abstract T createValue()_;returns,an,instance,of,the,parsed,value,type,return,an,instance,of,the,parsed,value,type;public,abstract,t,create,value
FieldParser -> public abstract T createValue()_;1432117463;Returns an instance of the parsed value type.__@return An instance of the parsed value type.;public abstract T createValue()_;returns,an,instance,of,the,parsed,value,type,return,an,instance,of,the,parsed,value,type;public,abstract,t,create,value
FieldParser -> public abstract T createValue()_;1455479358;Returns an instance of the parsed value type.__@return An instance of the parsed value type.;public abstract T createValue()_;returns,an,instance,of,the,parsed,value,type,return,an,instance,of,the,parsed,value,type;public,abstract,t,create,value
FieldParser -> public abstract T createValue()_;1466027006;Returns an instance of the parsed value type.__@return An instance of the parsed value type.;public abstract T createValue()_;returns,an,instance,of,the,parsed,value,type,return,an,instance,of,the,parsed,value,type;public,abstract,t,create,value
FieldParser -> public abstract T createValue()_;1474288559;Returns an instance of the parsed value type.__@return An instance of the parsed value type.;public abstract T createValue()_;returns,an,instance,of,the,parsed,value,type,return,an,instance,of,the,parsed,value,type;public,abstract,t,create,value
FieldParser -> public abstract T createValue()_;1474382639;Returns an instance of the parsed value type.__@return An instance of the parsed value type.;public abstract T createValue()_;returns,an,instance,of,the,parsed,value,type,return,an,instance,of,the,parsed,value,type;public,abstract,t,create,value
FieldParser -> public abstract T createValue()_;1474535382;Returns an instance of the parsed value type.__@return An instance of the parsed value type.;public abstract T createValue()_;returns,an,instance,of,the,parsed,value,type,return,an,instance,of,the,parsed,value,type;public,abstract,t,create,value
FieldParser -> public abstract T createValue()_;1481219256;Returns an instance of the parsed value type.__@return An instance of the parsed value type.;public abstract T createValue()_;returns,an,instance,of,the,parsed,value,type,return,an,instance,of,the,parsed,value,type;public,abstract,t,create,value
FieldParser -> public abstract T createValue()_;1481228508;Returns an instance of the parsed value type.__@return An instance of the parsed value type.;public abstract T createValue()_;returns,an,instance,of,the,parsed,value,type,return,an,instance,of,the,parsed,value,type;public,abstract,t,create,value
FieldParser -> public abstract T createValue()_;1488232219;Returns an instance of the parsed value type.__@return An instance of the parsed value type.;public abstract T createValue()_;returns,an,instance,of,the,parsed,value,type,return,an,instance,of,the,parsed,value,type;public,abstract,t,create,value
FieldParser -> public abstract T createValue()_;1515168359;Returns an instance of the parsed value type.__@return An instance of the parsed value type.;public abstract T createValue()_;returns,an,instance,of,the,parsed,value,type,return,an,instance,of,the,parsed,value,type;public,abstract,t,create,value
FieldParser -> public abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;1422280244;Parses the value of a field from the byte array._The start position within the byte array and the array's valid length is given._The content of the value is delimited by a field delimiter.__@param bytes The byte array that holds the value._@param startPos The index where the field starts_@param limit The limit unto which the byte contents is valid for the parser. The limit is the_position one after the last valid byte._@param delim The field delimiter character_@param reuse An optional reusable field to hold the value__@return The index of the next delimiter, if the field was parsed correctly. A value less than 0 otherwise.;public abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;parses,the,value,of,a,field,from,the,byte,array,the,start,position,within,the,byte,array,and,the,array,s,valid,length,is,given,the,content,of,the,value,is,delimited,by,a,field,delimiter,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,where,the,field,starts,param,limit,the,limit,unto,which,the,byte,contents,is,valid,for,the,parser,the,limit,is,the,position,one,after,the,last,valid,byte,param,delim,the,field,delimiter,character,param,reuse,an,optional,reusable,field,to,hold,the,value,return,the,index,of,the,next,delimiter,if,the,field,was,parsed,correctly,a,value,less,than,0,otherwise;public,abstract,int,parse,field,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse
FieldParser -> public abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;1422823634;Parses the value of a field from the byte array._The start position within the byte array and the array's valid length is given._The content of the value is delimited by a field delimiter.__@param bytes The byte array that holds the value._@param startPos The index where the field starts_@param limit The limit unto which the byte contents is valid for the parser. The limit is the_position one after the last valid byte._@param delim The field delimiter character_@param reuse An optional reusable field to hold the value__@return The index of the next delimiter, if the field was parsed correctly. A value less than 0 otherwise.;public abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;parses,the,value,of,a,field,from,the,byte,array,the,start,position,within,the,byte,array,and,the,array,s,valid,length,is,given,the,content,of,the,value,is,delimited,by,a,field,delimiter,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,where,the,field,starts,param,limit,the,limit,unto,which,the,byte,contents,is,valid,for,the,parser,the,limit,is,the,position,one,after,the,last,valid,byte,param,delim,the,field,delimiter,character,param,reuse,an,optional,reusable,field,to,hold,the,value,return,the,index,of,the,next,delimiter,if,the,field,was,parsed,correctly,a,value,less,than,0,otherwise;public,abstract,int,parse,field,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse
FieldParser -> public abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;1423131458;Parses the value of a field from the byte array._The start position within the byte array and the array's valid length is given._The content of the value is delimited by a field delimiter.__@param bytes The byte array that holds the value._@param startPos The index where the field starts_@param limit The limit unto which the byte contents is valid for the parser. The limit is the_position one after the last valid byte._@param delim The field delimiter character_@param reuse An optional reusable field to hold the value__@return The index of the next delimiter, if the field was parsed correctly. A value less than 0 otherwise.;public abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;parses,the,value,of,a,field,from,the,byte,array,the,start,position,within,the,byte,array,and,the,array,s,valid,length,is,given,the,content,of,the,value,is,delimited,by,a,field,delimiter,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,where,the,field,starts,param,limit,the,limit,unto,which,the,byte,contents,is,valid,for,the,parser,the,limit,is,the,position,one,after,the,last,valid,byte,param,delim,the,field,delimiter,character,param,reuse,an,optional,reusable,field,to,hold,the,value,return,the,index,of,the,next,delimiter,if,the,field,was,parsed,correctly,a,value,less,than,0,otherwise;public,abstract,int,parse,field,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse
FieldParser -> public abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;1431989549;Parses the value of a field from the byte array._The start position within the byte array and the array's valid length is given._The content of the value is delimited by a field delimiter.__@param bytes The byte array that holds the value._@param startPos The index where the field starts_@param limit The limit unto which the byte contents is valid for the parser. The limit is the_position one after the last valid byte._@param delim The field delimiter character_@param reuse An optional reusable field to hold the value__@return The index of the next delimiter, if the field was parsed correctly. A value less than 0 otherwise.;public abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;parses,the,value,of,a,field,from,the,byte,array,the,start,position,within,the,byte,array,and,the,array,s,valid,length,is,given,the,content,of,the,value,is,delimited,by,a,field,delimiter,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,where,the,field,starts,param,limit,the,limit,unto,which,the,byte,contents,is,valid,for,the,parser,the,limit,is,the,position,one,after,the,last,valid,byte,param,delim,the,field,delimiter,character,param,reuse,an,optional,reusable,field,to,hold,the,value,return,the,index,of,the,next,delimiter,if,the,field,was,parsed,correctly,a,value,less,than,0,otherwise;public,abstract,int,parse,field,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse
FieldParser -> public abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;1431989549;Parses the value of a field from the byte array._The start position within the byte array and the array's valid length is given._The content of the value is delimited by a field delimiter.__@param bytes The byte array that holds the value._@param startPos The index where the field starts_@param limit The limit unto which the byte contents is valid for the parser. The limit is the_position one after the last valid byte._@param delim The field delimiter character_@param reuse An optional reusable field to hold the value__@return The index of the next delimiter, if the field was parsed correctly. A value less than 0 otherwise.;public abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;parses,the,value,of,a,field,from,the,byte,array,the,start,position,within,the,byte,array,and,the,array,s,valid,length,is,given,the,content,of,the,value,is,delimited,by,a,field,delimiter,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,where,the,field,starts,param,limit,the,limit,unto,which,the,byte,contents,is,valid,for,the,parser,the,limit,is,the,position,one,after,the,last,valid,byte,param,delim,the,field,delimiter,character,param,reuse,an,optional,reusable,field,to,hold,the,value,return,the,index,of,the,next,delimiter,if,the,field,was,parsed,correctly,a,value,less,than,0,otherwise;public,abstract,int,parse,field,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse
FieldParser -> public abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;1432117463;Parses the value of a field from the byte array._The start position within the byte array and the array's valid length is given._The content of the value is delimited by a field delimiter.__@param bytes The byte array that holds the value._@param startPos The index where the field starts_@param limit The limit unto which the byte contents is valid for the parser. The limit is the_position one after the last valid byte._@param delim The field delimiter character_@param reuse An optional reusable field to hold the value__@return The index of the next delimiter, if the field was parsed correctly. A value less than 0 otherwise.;public abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;parses,the,value,of,a,field,from,the,byte,array,the,start,position,within,the,byte,array,and,the,array,s,valid,length,is,given,the,content,of,the,value,is,delimited,by,a,field,delimiter,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,where,the,field,starts,param,limit,the,limit,unto,which,the,byte,contents,is,valid,for,the,parser,the,limit,is,the,position,one,after,the,last,valid,byte,param,delim,the,field,delimiter,character,param,reuse,an,optional,reusable,field,to,hold,the,value,return,the,index,of,the,next,delimiter,if,the,field,was,parsed,correctly,a,value,less,than,0,otherwise;public,abstract,int,parse,field,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse
FieldParser -> public abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;1455479358;Parses the value of a field from the byte array._The start position within the byte array and the array's valid length is given._The content of the value is delimited by a field delimiter.__@param bytes The byte array that holds the value._@param startPos The index where the field starts_@param limit The limit unto which the byte contents is valid for the parser. The limit is the_position one after the last valid byte._@param delim The field delimiter character_@param reuse An optional reusable field to hold the value__@return The index of the next delimiter, if the field was parsed correctly. A value less than 0 otherwise.;public abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;parses,the,value,of,a,field,from,the,byte,array,the,start,position,within,the,byte,array,and,the,array,s,valid,length,is,given,the,content,of,the,value,is,delimited,by,a,field,delimiter,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,where,the,field,starts,param,limit,the,limit,unto,which,the,byte,contents,is,valid,for,the,parser,the,limit,is,the,position,one,after,the,last,valid,byte,param,delim,the,field,delimiter,character,param,reuse,an,optional,reusable,field,to,hold,the,value,return,the,index,of,the,next,delimiter,if,the,field,was,parsed,correctly,a,value,less,than,0,otherwise;public,abstract,int,parse,field,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse
FieldParser -> public int resetErrorStateAndParse(byte[] bytes, int startPos, int limit, byte[] delim, T reuse);1466027006;Parses the value of a field from the byte array, taking care of properly reset_the state of this parser._The start position within the byte array and the array's valid length is given._The content of the value is delimited by a field delimiter.__@param bytes The byte array that holds the value._@param startPos The index where the field starts_@param limit The limit unto which the byte contents is valid for the parser. The limit is the_position one after the last valid byte._@param delim The field delimiter character_@param reuse An optional reusable field to hold the value__@return The index of the next delimiter, if the field was parsed correctly. A value less than 0 otherwise.;public int resetErrorStateAndParse(byte[] bytes, int startPos, int limit, byte[] delim, T reuse) {_		resetParserState()__		return parseField(bytes, startPos, limit, delim, reuse)__	};parses,the,value,of,a,field,from,the,byte,array,taking,care,of,properly,reset,the,state,of,this,parser,the,start,position,within,the,byte,array,and,the,array,s,valid,length,is,given,the,content,of,the,value,is,delimited,by,a,field,delimiter,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,where,the,field,starts,param,limit,the,limit,unto,which,the,byte,contents,is,valid,for,the,parser,the,limit,is,the,position,one,after,the,last,valid,byte,param,delim,the,field,delimiter,character,param,reuse,an,optional,reusable,field,to,hold,the,value,return,the,index,of,the,next,delimiter,if,the,field,was,parsed,correctly,a,value,less,than,0,otherwise;public,int,reset,error,state,and,parse,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse,reset,parser,state,return,parse,field,bytes,start,pos,limit,delim,reuse
FieldParser -> public int resetErrorStateAndParse(byte[] bytes, int startPos, int limit, byte[] delim, T reuse);1474288559;Parses the value of a field from the byte array, taking care of properly reset_the state of this parser._The start position within the byte array and the array's valid length is given._The content of the value is delimited by a field delimiter.__@param bytes The byte array that holds the value._@param startPos The index where the field starts_@param limit The limit unto which the byte contents is valid for the parser. The limit is the_position one after the last valid byte._@param delim The field delimiter character_@param reuse An optional reusable field to hold the value__@return The index of the next delimiter, if the field was parsed correctly. A value less than 0 otherwise.;public int resetErrorStateAndParse(byte[] bytes, int startPos, int limit, byte[] delim, T reuse) {_		resetParserState()__		return parseField(bytes, startPos, limit, delim, reuse)__	};parses,the,value,of,a,field,from,the,byte,array,taking,care,of,properly,reset,the,state,of,this,parser,the,start,position,within,the,byte,array,and,the,array,s,valid,length,is,given,the,content,of,the,value,is,delimited,by,a,field,delimiter,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,where,the,field,starts,param,limit,the,limit,unto,which,the,byte,contents,is,valid,for,the,parser,the,limit,is,the,position,one,after,the,last,valid,byte,param,delim,the,field,delimiter,character,param,reuse,an,optional,reusable,field,to,hold,the,value,return,the,index,of,the,next,delimiter,if,the,field,was,parsed,correctly,a,value,less,than,0,otherwise;public,int,reset,error,state,and,parse,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse,reset,parser,state,return,parse,field,bytes,start,pos,limit,delim,reuse
FieldParser -> public int resetErrorStateAndParse(byte[] bytes, int startPos, int limit, byte[] delim, T reuse);1474382639;Parses the value of a field from the byte array, taking care of properly reset_the state of this parser._The start position within the byte array and the array's valid length is given._The content of the value is delimited by a field delimiter.__@param bytes The byte array that holds the value._@param startPos The index where the field starts_@param limit The limit unto which the byte contents is valid for the parser. The limit is the_position one after the last valid byte._@param delim The field delimiter character_@param reuse An optional reusable field to hold the value__@return The index of the next delimiter, if the field was parsed correctly. A value less than 0 otherwise.;public int resetErrorStateAndParse(byte[] bytes, int startPos, int limit, byte[] delim, T reuse) {_		resetParserState()__		return parseField(bytes, startPos, limit, delim, reuse)__	};parses,the,value,of,a,field,from,the,byte,array,taking,care,of,properly,reset,the,state,of,this,parser,the,start,position,within,the,byte,array,and,the,array,s,valid,length,is,given,the,content,of,the,value,is,delimited,by,a,field,delimiter,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,where,the,field,starts,param,limit,the,limit,unto,which,the,byte,contents,is,valid,for,the,parser,the,limit,is,the,position,one,after,the,last,valid,byte,param,delim,the,field,delimiter,character,param,reuse,an,optional,reusable,field,to,hold,the,value,return,the,index,of,the,next,delimiter,if,the,field,was,parsed,correctly,a,value,less,than,0,otherwise;public,int,reset,error,state,and,parse,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse,reset,parser,state,return,parse,field,bytes,start,pos,limit,delim,reuse
FieldParser -> public int resetErrorStateAndParse(byte[] bytes, int startPos, int limit, byte[] delim, T reuse);1474535382;Parses the value of a field from the byte array, taking care of properly reset_the state of this parser._The start position within the byte array and the array's valid length is given._The content of the value is delimited by a field delimiter.__@param bytes The byte array that holds the value._@param startPos The index where the field starts_@param limit The limit unto which the byte contents is valid for the parser. The limit is the_position one after the last valid byte._@param delim The field delimiter character_@param reuse An optional reusable field to hold the value__@return The index of the next delimiter, if the field was parsed correctly. A value less than 0 otherwise.;public int resetErrorStateAndParse(byte[] bytes, int startPos, int limit, byte[] delim, T reuse) {_		resetParserState()__		return parseField(bytes, startPos, limit, delim, reuse)__	};parses,the,value,of,a,field,from,the,byte,array,taking,care,of,properly,reset,the,state,of,this,parser,the,start,position,within,the,byte,array,and,the,array,s,valid,length,is,given,the,content,of,the,value,is,delimited,by,a,field,delimiter,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,where,the,field,starts,param,limit,the,limit,unto,which,the,byte,contents,is,valid,for,the,parser,the,limit,is,the,position,one,after,the,last,valid,byte,param,delim,the,field,delimiter,character,param,reuse,an,optional,reusable,field,to,hold,the,value,return,the,index,of,the,next,delimiter,if,the,field,was,parsed,correctly,a,value,less,than,0,otherwise;public,int,reset,error,state,and,parse,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse,reset,parser,state,return,parse,field,bytes,start,pos,limit,delim,reuse
FieldParser -> public int resetErrorStateAndParse(byte[] bytes, int startPos, int limit, byte[] delim, T reuse);1481219256;Parses the value of a field from the byte array, taking care of properly reset_the state of this parser._The start position within the byte array and the array's valid length is given._The content of the value is delimited by a field delimiter.__@param bytes The byte array that holds the value._@param startPos The index where the field starts_@param limit The limit unto which the byte contents is valid for the parser. The limit is the_position one after the last valid byte._@param delim The field delimiter character_@param reuse An optional reusable field to hold the value__@return The index of the next delimiter, if the field was parsed correctly. A value less than 0 otherwise.;public int resetErrorStateAndParse(byte[] bytes, int startPos, int limit, byte[] delim, T reuse) {_		resetParserState()__		return parseField(bytes, startPos, limit, delim, reuse)__	};parses,the,value,of,a,field,from,the,byte,array,taking,care,of,properly,reset,the,state,of,this,parser,the,start,position,within,the,byte,array,and,the,array,s,valid,length,is,given,the,content,of,the,value,is,delimited,by,a,field,delimiter,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,where,the,field,starts,param,limit,the,limit,unto,which,the,byte,contents,is,valid,for,the,parser,the,limit,is,the,position,one,after,the,last,valid,byte,param,delim,the,field,delimiter,character,param,reuse,an,optional,reusable,field,to,hold,the,value,return,the,index,of,the,next,delimiter,if,the,field,was,parsed,correctly,a,value,less,than,0,otherwise;public,int,reset,error,state,and,parse,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse,reset,parser,state,return,parse,field,bytes,start,pos,limit,delim,reuse
FieldParser -> public int resetErrorStateAndParse(byte[] bytes, int startPos, int limit, byte[] delim, T reuse);1481228508;Parses the value of a field from the byte array, taking care of properly reset_the state of this parser._The start position within the byte array and the array's valid length is given._The content of the value is delimited by a field delimiter.__@param bytes The byte array that holds the value._@param startPos The index where the field starts_@param limit The limit unto which the byte contents is valid for the parser. The limit is the_position one after the last valid byte._@param delim The field delimiter character_@param reuse An optional reusable field to hold the value__@return The index of the next delimiter, if the field was parsed correctly. A value less than 0 otherwise.;public int resetErrorStateAndParse(byte[] bytes, int startPos, int limit, byte[] delim, T reuse) {_		resetParserState()__		return parseField(bytes, startPos, limit, delim, reuse)__	};parses,the,value,of,a,field,from,the,byte,array,taking,care,of,properly,reset,the,state,of,this,parser,the,start,position,within,the,byte,array,and,the,array,s,valid,length,is,given,the,content,of,the,value,is,delimited,by,a,field,delimiter,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,where,the,field,starts,param,limit,the,limit,unto,which,the,byte,contents,is,valid,for,the,parser,the,limit,is,the,position,one,after,the,last,valid,byte,param,delim,the,field,delimiter,character,param,reuse,an,optional,reusable,field,to,hold,the,value,return,the,index,of,the,next,delimiter,if,the,field,was,parsed,correctly,a,value,less,than,0,otherwise;public,int,reset,error,state,and,parse,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse,reset,parser,state,return,parse,field,bytes,start,pos,limit,delim,reuse
FieldParser -> public int resetErrorStateAndParse(byte[] bytes, int startPos, int limit, byte[] delim, T reuse);1488232219;Parses the value of a field from the byte array, taking care of properly reset_the state of this parser._The start position within the byte array and the array's valid length is given._The content of the value is delimited by a field delimiter.__@param bytes The byte array that holds the value._@param startPos The index where the field starts_@param limit The limit unto which the byte contents is valid for the parser. The limit is the_position one after the last valid byte._@param delim The field delimiter character_@param reuse An optional reusable field to hold the value__@return The index of the next delimiter, if the field was parsed correctly. A value less than 0 otherwise.;public int resetErrorStateAndParse(byte[] bytes, int startPos, int limit, byte[] delim, T reuse) {_		resetParserState()__		return parseField(bytes, startPos, limit, delim, reuse)__	};parses,the,value,of,a,field,from,the,byte,array,taking,care,of,properly,reset,the,state,of,this,parser,the,start,position,within,the,byte,array,and,the,array,s,valid,length,is,given,the,content,of,the,value,is,delimited,by,a,field,delimiter,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,where,the,field,starts,param,limit,the,limit,unto,which,the,byte,contents,is,valid,for,the,parser,the,limit,is,the,position,one,after,the,last,valid,byte,param,delim,the,field,delimiter,character,param,reuse,an,optional,reusable,field,to,hold,the,value,return,the,index,of,the,next,delimiter,if,the,field,was,parsed,correctly,a,value,less,than,0,otherwise;public,int,reset,error,state,and,parse,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse,reset,parser,state,return,parse,field,bytes,start,pos,limit,delim,reuse
FieldParser -> public int resetErrorStateAndParse(byte[] bytes, int startPos, int limit, byte[] delim, T reuse);1515168359;Parses the value of a field from the byte array, taking care of properly reset_the state of this parser._The start position within the byte array and the array's valid length is given._The content of the value is delimited by a field delimiter.__@param bytes The byte array that holds the value._@param startPos The index where the field starts_@param limit The limit unto which the byte contents is valid for the parser. The limit is the_position one after the last valid byte._@param delim The field delimiter character_@param reuse An optional reusable field to hold the value__@return The index of the next delimiter, if the field was parsed correctly. A value less than 0 otherwise.;public int resetErrorStateAndParse(byte[] bytes, int startPos, int limit, byte[] delim, T reuse) {_		resetParserState()__		return parseField(bytes, startPos, limit, delim, reuse)__	};parses,the,value,of,a,field,from,the,byte,array,taking,care,of,properly,reset,the,state,of,this,parser,the,start,position,within,the,byte,array,and,the,array,s,valid,length,is,given,the,content,of,the,value,is,delimited,by,a,field,delimiter,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,where,the,field,starts,param,limit,the,limit,unto,which,the,byte,contents,is,valid,for,the,parser,the,limit,is,the,position,one,after,the,last,valid,byte,param,delim,the,field,delimiter,character,param,reuse,an,optional,reusable,field,to,hold,the,value,return,the,index,of,the,next,delimiter,if,the,field,was,parsed,correctly,a,value,less,than,0,otherwise;public,int,reset,error,state,and,parse,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse,reset,parser,state,return,parse,field,bytes,start,pos,limit,delim,reuse
FieldParser -> public Charset getCharset();1481228508;Gets the character set used for this parser.__@return the charset used for this parser.;public Charset getCharset() {_		return this.charset__	};gets,the,character,set,used,for,this,parser,return,the,charset,used,for,this,parser;public,charset,get,charset,return,this,charset
FieldParser -> public Charset getCharset();1488232219;Gets the character set used for this parser.__@return the charset used for this parser.;public Charset getCharset() {_		return this.charset__	};gets,the,character,set,used,for,this,parser,return,the,charset,used,for,this,parser;public,charset,get,charset,return,this,charset
FieldParser -> public Charset getCharset();1515168359;Gets the character set used for this parser.__@return the charset used for this parser.;public Charset getCharset() {_		return this.charset__	};gets,the,character,set,used,for,this,parser,return,the,charset,used,for,this,parser;public,charset,get,charset,return,this,charset
FieldParser -> protected void resetParserState();1466027006;Reset the state of the parser. Called as the very first method inside_{@link FieldParser#resetErrorStateAndParse(byte[], int, int, byte[], Object)}, by default it just reset_its error state.;protected void resetParserState() {_		this.errorState = ParseErrorState.NONE__	};reset,the,state,of,the,parser,called,as,the,very,first,method,inside,link,field,parser,reset,error,state,and,parse,byte,int,int,byte,object,by,default,it,just,reset,its,error,state;protected,void,reset,parser,state,this,error,state,parse,error,state,none
FieldParser -> protected void resetParserState();1474288559;Reset the state of the parser. Called as the very first method inside_{@link FieldParser#resetErrorStateAndParse(byte[], int, int, byte[], Object)}, by default it just reset_its error state.;protected void resetParserState() {_		this.errorState = ParseErrorState.NONE__	};reset,the,state,of,the,parser,called,as,the,very,first,method,inside,link,field,parser,reset,error,state,and,parse,byte,int,int,byte,object,by,default,it,just,reset,its,error,state;protected,void,reset,parser,state,this,error,state,parse,error,state,none
FieldParser -> protected void resetParserState();1474382639;Reset the state of the parser. Called as the very first method inside_{@link FieldParser#resetErrorStateAndParse(byte[], int, int, byte[], Object)}, by default it just reset_its error state.;protected void resetParserState() {_		this.errorState = ParseErrorState.NONE__	};reset,the,state,of,the,parser,called,as,the,very,first,method,inside,link,field,parser,reset,error,state,and,parse,byte,int,int,byte,object,by,default,it,just,reset,its,error,state;protected,void,reset,parser,state,this,error,state,parse,error,state,none
FieldParser -> protected void resetParserState();1474535382;Reset the state of the parser. Called as the very first method inside_{@link FieldParser#resetErrorStateAndParse(byte[], int, int, byte[], Object)}, by default it just reset_its error state.;protected void resetParserState() {_		this.errorState = ParseErrorState.NONE__	};reset,the,state,of,the,parser,called,as,the,very,first,method,inside,link,field,parser,reset,error,state,and,parse,byte,int,int,byte,object,by,default,it,just,reset,its,error,state;protected,void,reset,parser,state,this,error,state,parse,error,state,none
FieldParser -> protected void resetParserState();1481219256;Reset the state of the parser. Called as the very first method inside_{@link FieldParser#resetErrorStateAndParse(byte[], int, int, byte[], Object)}, by default it just reset_its error state.;protected void resetParserState() {_		this.errorState = ParseErrorState.NONE__	};reset,the,state,of,the,parser,called,as,the,very,first,method,inside,link,field,parser,reset,error,state,and,parse,byte,int,int,byte,object,by,default,it,just,reset,its,error,state;protected,void,reset,parser,state,this,error,state,parse,error,state,none
FieldParser -> protected void resetParserState();1481228508;Reset the state of the parser. Called as the very first method inside_{@link FieldParser#resetErrorStateAndParse(byte[], int, int, byte[], Object)}, by default it just reset_its error state.;protected void resetParserState() {_		this.errorState = ParseErrorState.NONE__	};reset,the,state,of,the,parser,called,as,the,very,first,method,inside,link,field,parser,reset,error,state,and,parse,byte,int,int,byte,object,by,default,it,just,reset,its,error,state;protected,void,reset,parser,state,this,error,state,parse,error,state,none
FieldParser -> protected void resetParserState();1488232219;Reset the state of the parser. Called as the very first method inside_{@link FieldParser#resetErrorStateAndParse(byte[], int, int, byte[], Object)}, by default it just reset_its error state.;protected void resetParserState() {_		this.errorState = ParseErrorState.NONE__	};reset,the,state,of,the,parser,called,as,the,very,first,method,inside,link,field,parser,reset,error,state,and,parse,byte,int,int,byte,object,by,default,it,just,reset,its,error,state;protected,void,reset,parser,state,this,error,state,parse,error,state,none
FieldParser -> protected void resetParserState();1515168359;Reset the state of the parser. Called as the very first method inside_{@link FieldParser#resetErrorStateAndParse(byte[], int, int, byte[], Object)}, by default it just reset_its error state.;protected void resetParserState() {_		this.errorState = ParseErrorState.NONE__	};reset,the,state,of,the,parser,called,as,the,very,first,method,inside,link,field,parser,reset,error,state,and,parse,byte,int,int,byte,object,by,default,it,just,reset,its,error,state;protected,void,reset,parser,state,this,error,state,parse,error,state,none
FieldParser -> public ParseErrorState getErrorState();1405024514;Gets the error state of the parser, as a value of the enumeration {@link ParseErrorState}._If no error occurred, the error state will be {@link ParseErrorState#NONE}.__@return The current error state of the parser.;public ParseErrorState getErrorState() {_		return this.errorState__	};gets,the,error,state,of,the,parser,as,a,value,of,the,enumeration,link,parse,error,state,if,no,error,occurred,the,error,state,will,be,link,parse,error,state,none,return,the,current,error,state,of,the,parser;public,parse,error,state,get,error,state,return,this,error,state
FieldParser -> public ParseErrorState getErrorState();1405090423;Gets the error state of the parser, as a value of the enumeration {@link ParseErrorState}._If no error occurred, the error state will be {@link ParseErrorState#NONE}.__@return The current error state of the parser.;public ParseErrorState getErrorState() {_		return this.errorState__	};gets,the,error,state,of,the,parser,as,a,value,of,the,enumeration,link,parse,error,state,if,no,error,occurred,the,error,state,will,be,link,parse,error,state,none,return,the,current,error,state,of,the,parser;public,parse,error,state,get,error,state,return,this,error,state
FieldParser -> public ParseErrorState getErrorState();1411473593;Gets the error state of the parser, as a value of the enumeration {@link ParseErrorState}._If no error occurred, the error state will be {@link ParseErrorState#NONE}.__@return The current error state of the parser.;public ParseErrorState getErrorState() {_		return this.errorState__	};gets,the,error,state,of,the,parser,as,a,value,of,the,enumeration,link,parse,error,state,if,no,error,occurred,the,error,state,will,be,link,parse,error,state,none,return,the,current,error,state,of,the,parser;public,parse,error,state,get,error,state,return,this,error,state
FieldParser -> public ParseErrorState getErrorState();1422280244;Gets the error state of the parser, as a value of the enumeration {@link ParseErrorState}._If no error occurred, the error state will be {@link ParseErrorState#NONE}.__@return The current error state of the parser.;public ParseErrorState getErrorState() {_		return this.errorState__	};gets,the,error,state,of,the,parser,as,a,value,of,the,enumeration,link,parse,error,state,if,no,error,occurred,the,error,state,will,be,link,parse,error,state,none,return,the,current,error,state,of,the,parser;public,parse,error,state,get,error,state,return,this,error,state
FieldParser -> public ParseErrorState getErrorState();1422823634;Gets the error state of the parser, as a value of the enumeration {@link ParseErrorState}._If no error occurred, the error state will be {@link ParseErrorState#NONE}.__@return The current error state of the parser.;public ParseErrorState getErrorState() {_		return this.errorState__	};gets,the,error,state,of,the,parser,as,a,value,of,the,enumeration,link,parse,error,state,if,no,error,occurred,the,error,state,will,be,link,parse,error,state,none,return,the,current,error,state,of,the,parser;public,parse,error,state,get,error,state,return,this,error,state
FieldParser -> public ParseErrorState getErrorState();1423131458;Gets the error state of the parser, as a value of the enumeration {@link ParseErrorState}._If no error occurred, the error state will be {@link ParseErrorState#NONE}.__@return The current error state of the parser.;public ParseErrorState getErrorState() {_		return this.errorState__	};gets,the,error,state,of,the,parser,as,a,value,of,the,enumeration,link,parse,error,state,if,no,error,occurred,the,error,state,will,be,link,parse,error,state,none,return,the,current,error,state,of,the,parser;public,parse,error,state,get,error,state,return,this,error,state
FieldParser -> public ParseErrorState getErrorState();1431989549;Gets the error state of the parser, as a value of the enumeration {@link ParseErrorState}._If no error occurred, the error state will be {@link ParseErrorState#NONE}.__@return The current error state of the parser.;public ParseErrorState getErrorState() {_		return this.errorState__	};gets,the,error,state,of,the,parser,as,a,value,of,the,enumeration,link,parse,error,state,if,no,error,occurred,the,error,state,will,be,link,parse,error,state,none,return,the,current,error,state,of,the,parser;public,parse,error,state,get,error,state,return,this,error,state
FieldParser -> public ParseErrorState getErrorState();1431989549;Gets the error state of the parser, as a value of the enumeration {@link ParseErrorState}._If no error occurred, the error state will be {@link ParseErrorState#NONE}.__@return The current error state of the parser.;public ParseErrorState getErrorState() {_		return this.errorState__	};gets,the,error,state,of,the,parser,as,a,value,of,the,enumeration,link,parse,error,state,if,no,error,occurred,the,error,state,will,be,link,parse,error,state,none,return,the,current,error,state,of,the,parser;public,parse,error,state,get,error,state,return,this,error,state
FieldParser -> public ParseErrorState getErrorState();1432117463;Gets the error state of the parser, as a value of the enumeration {@link ParseErrorState}._If no error occurred, the error state will be {@link ParseErrorState#NONE}.__@return The current error state of the parser.;public ParseErrorState getErrorState() {_		return this.errorState__	};gets,the,error,state,of,the,parser,as,a,value,of,the,enumeration,link,parse,error,state,if,no,error,occurred,the,error,state,will,be,link,parse,error,state,none,return,the,current,error,state,of,the,parser;public,parse,error,state,get,error,state,return,this,error,state
FieldParser -> public ParseErrorState getErrorState();1455479358;Gets the error state of the parser, as a value of the enumeration {@link ParseErrorState}._If no error occurred, the error state will be {@link ParseErrorState#NONE}.__@return The current error state of the parser.;public ParseErrorState getErrorState() {_		return this.errorState__	};gets,the,error,state,of,the,parser,as,a,value,of,the,enumeration,link,parse,error,state,if,no,error,occurred,the,error,state,will,be,link,parse,error,state,none,return,the,current,error,state,of,the,parser;public,parse,error,state,get,error,state,return,this,error,state
FieldParser -> public ParseErrorState getErrorState();1466027006;Gets the error state of the parser, as a value of the enumeration {@link ParseErrorState}._If no error occurred, the error state will be {@link ParseErrorState#NONE}.__@return The current error state of the parser.;public ParseErrorState getErrorState() {_		return this.errorState__	};gets,the,error,state,of,the,parser,as,a,value,of,the,enumeration,link,parse,error,state,if,no,error,occurred,the,error,state,will,be,link,parse,error,state,none,return,the,current,error,state,of,the,parser;public,parse,error,state,get,error,state,return,this,error,state
FieldParser -> public ParseErrorState getErrorState();1474288559;Gets the error state of the parser, as a value of the enumeration {@link ParseErrorState}._If no error occurred, the error state will be {@link ParseErrorState#NONE}.__@return The current error state of the parser.;public ParseErrorState getErrorState() {_		return this.errorState__	};gets,the,error,state,of,the,parser,as,a,value,of,the,enumeration,link,parse,error,state,if,no,error,occurred,the,error,state,will,be,link,parse,error,state,none,return,the,current,error,state,of,the,parser;public,parse,error,state,get,error,state,return,this,error,state
FieldParser -> public ParseErrorState getErrorState();1474382639;Gets the error state of the parser, as a value of the enumeration {@link ParseErrorState}._If no error occurred, the error state will be {@link ParseErrorState#NONE}.__@return The current error state of the parser.;public ParseErrorState getErrorState() {_		return this.errorState__	};gets,the,error,state,of,the,parser,as,a,value,of,the,enumeration,link,parse,error,state,if,no,error,occurred,the,error,state,will,be,link,parse,error,state,none,return,the,current,error,state,of,the,parser;public,parse,error,state,get,error,state,return,this,error,state
FieldParser -> public ParseErrorState getErrorState();1474535382;Gets the error state of the parser, as a value of the enumeration {@link ParseErrorState}._If no error occurred, the error state will be {@link ParseErrorState#NONE}.__@return The current error state of the parser.;public ParseErrorState getErrorState() {_		return this.errorState__	};gets,the,error,state,of,the,parser,as,a,value,of,the,enumeration,link,parse,error,state,if,no,error,occurred,the,error,state,will,be,link,parse,error,state,none,return,the,current,error,state,of,the,parser;public,parse,error,state,get,error,state,return,this,error,state
FieldParser -> public ParseErrorState getErrorState();1481219256;Gets the error state of the parser, as a value of the enumeration {@link ParseErrorState}._If no error occurred, the error state will be {@link ParseErrorState#NONE}.__@return The current error state of the parser.;public ParseErrorState getErrorState() {_		return this.errorState__	};gets,the,error,state,of,the,parser,as,a,value,of,the,enumeration,link,parse,error,state,if,no,error,occurred,the,error,state,will,be,link,parse,error,state,none,return,the,current,error,state,of,the,parser;public,parse,error,state,get,error,state,return,this,error,state
FieldParser -> public ParseErrorState getErrorState();1481228508;Gets the error state of the parser, as a value of the enumeration {@link ParseErrorState}._If no error occurred, the error state will be {@link ParseErrorState#NONE}.__@return The current error state of the parser.;public ParseErrorState getErrorState() {_		return this.errorState__	};gets,the,error,state,of,the,parser,as,a,value,of,the,enumeration,link,parse,error,state,if,no,error,occurred,the,error,state,will,be,link,parse,error,state,none,return,the,current,error,state,of,the,parser;public,parse,error,state,get,error,state,return,this,error,state
FieldParser -> public ParseErrorState getErrorState();1488232219;Gets the error state of the parser, as a value of the enumeration {@link ParseErrorState}._If no error occurred, the error state will be {@link ParseErrorState#NONE}.__@return The current error state of the parser.;public ParseErrorState getErrorState() {_		return this.errorState__	};gets,the,error,state,of,the,parser,as,a,value,of,the,enumeration,link,parse,error,state,if,no,error,occurred,the,error,state,will,be,link,parse,error,state,none,return,the,current,error,state,of,the,parser;public,parse,error,state,get,error,state,return,this,error,state
FieldParser -> public ParseErrorState getErrorState();1515168359;Gets the error state of the parser, as a value of the enumeration {@link ParseErrorState}._If no error occurred, the error state will be {@link ParseErrorState#NONE}.__@return The current error state of the parser.;public ParseErrorState getErrorState() {_		return this.errorState__	};gets,the,error,state,of,the,parser,as,a,value,of,the,enumeration,link,parse,error,state,if,no,error,occurred,the,error,state,will,be,link,parse,error,state,none,return,the,current,error,state,of,the,parser;public,parse,error,state,get,error,state,return,this,error,state
FieldParser -> public static <T> Class<FieldParser<T>> getParserForType(Class<T> type);1405024514;Gets the parser for the type specified by the given class. Returns null, if no parser for that class_is known.__@param type The class of the type to get the parser for._@return The parser for the given type, or null, if no such parser exists.;public static <T> Class<FieldParser<T>> getParserForType(Class<T> type) {_		Class<? extends FieldParser<?>> parser = PARSERS.get(type)__		if (parser == null) {_			return null__		} else {_			@SuppressWarnings("unchecked")_			Class<FieldParser<T>> typedParser = (Class<FieldParser<T>>) parser__			return typedParser__		}_	};gets,the,parser,for,the,type,specified,by,the,given,class,returns,null,if,no,parser,for,that,class,is,known,param,type,the,class,of,the,type,to,get,the,parser,for,return,the,parser,for,the,given,type,or,null,if,no,such,parser,exists;public,static,t,class,field,parser,t,get,parser,for,type,class,t,type,class,extends,field,parser,parser,parsers,get,type,if,parser,null,return,null,else,suppress,warnings,unchecked,class,field,parser,t,typed,parser,class,field,parser,t,parser,return,typed,parser
FieldParser -> public static <T> Class<FieldParser<T>> getParserForType(Class<T> type);1405090423;Gets the parser for the type specified by the given class. Returns null, if no parser for that class_is known.__@param type The class of the type to get the parser for._@return The parser for the given type, or null, if no such parser exists.;public static <T> Class<FieldParser<T>> getParserForType(Class<T> type) {_		Class<? extends FieldParser<?>> parser = PARSERS.get(type)__		if (parser == null) {_			return null__		} else {_			@SuppressWarnings("unchecked")_			Class<FieldParser<T>> typedParser = (Class<FieldParser<T>>) parser__			return typedParser__		}_	};gets,the,parser,for,the,type,specified,by,the,given,class,returns,null,if,no,parser,for,that,class,is,known,param,type,the,class,of,the,type,to,get,the,parser,for,return,the,parser,for,the,given,type,or,null,if,no,such,parser,exists;public,static,t,class,field,parser,t,get,parser,for,type,class,t,type,class,extends,field,parser,parser,parsers,get,type,if,parser,null,return,null,else,suppress,warnings,unchecked,class,field,parser,t,typed,parser,class,field,parser,t,parser,return,typed,parser
FieldParser -> public static <T> Class<FieldParser<T>> getParserForType(Class<T> type);1411473593;Gets the parser for the type specified by the given class. Returns null, if no parser for that class_is known.__@param type The class of the type to get the parser for._@return The parser for the given type, or null, if no such parser exists.;public static <T> Class<FieldParser<T>> getParserForType(Class<T> type) {_		Class<? extends FieldParser<?>> parser = PARSERS.get(type)__		if (parser == null) {_			return null__		} else {_			@SuppressWarnings("unchecked")_			Class<FieldParser<T>> typedParser = (Class<FieldParser<T>>) parser__			return typedParser__		}_	};gets,the,parser,for,the,type,specified,by,the,given,class,returns,null,if,no,parser,for,that,class,is,known,param,type,the,class,of,the,type,to,get,the,parser,for,return,the,parser,for,the,given,type,or,null,if,no,such,parser,exists;public,static,t,class,field,parser,t,get,parser,for,type,class,t,type,class,extends,field,parser,parser,parsers,get,type,if,parser,null,return,null,else,suppress,warnings,unchecked,class,field,parser,t,typed,parser,class,field,parser,t,parser,return,typed,parser
FieldParser -> public static <T> Class<FieldParser<T>> getParserForType(Class<T> type);1422280244;Gets the parser for the type specified by the given class. Returns null, if no parser for that class_is known.__@param type The class of the type to get the parser for._@return The parser for the given type, or null, if no such parser exists.;public static <T> Class<FieldParser<T>> getParserForType(Class<T> type) {_		Class<? extends FieldParser<?>> parser = PARSERS.get(type)__		if (parser == null) {_			return null__		} else {_			@SuppressWarnings("unchecked")_			Class<FieldParser<T>> typedParser = (Class<FieldParser<T>>) parser__			return typedParser__		}_	};gets,the,parser,for,the,type,specified,by,the,given,class,returns,null,if,no,parser,for,that,class,is,known,param,type,the,class,of,the,type,to,get,the,parser,for,return,the,parser,for,the,given,type,or,null,if,no,such,parser,exists;public,static,t,class,field,parser,t,get,parser,for,type,class,t,type,class,extends,field,parser,parser,parsers,get,type,if,parser,null,return,null,else,suppress,warnings,unchecked,class,field,parser,t,typed,parser,class,field,parser,t,parser,return,typed,parser
FieldParser -> public static <T> Class<FieldParser<T>> getParserForType(Class<T> type);1422823634;Gets the parser for the type specified by the given class. Returns null, if no parser for that class_is known.__@param type The class of the type to get the parser for._@return The parser for the given type, or null, if no such parser exists.;public static <T> Class<FieldParser<T>> getParserForType(Class<T> type) {_		Class<? extends FieldParser<?>> parser = PARSERS.get(type)__		if (parser == null) {_			return null__		} else {_			@SuppressWarnings("unchecked")_			Class<FieldParser<T>> typedParser = (Class<FieldParser<T>>) parser__			return typedParser__		}_	};gets,the,parser,for,the,type,specified,by,the,given,class,returns,null,if,no,parser,for,that,class,is,known,param,type,the,class,of,the,type,to,get,the,parser,for,return,the,parser,for,the,given,type,or,null,if,no,such,parser,exists;public,static,t,class,field,parser,t,get,parser,for,type,class,t,type,class,extends,field,parser,parser,parsers,get,type,if,parser,null,return,null,else,suppress,warnings,unchecked,class,field,parser,t,typed,parser,class,field,parser,t,parser,return,typed,parser
FieldParser -> public static <T> Class<FieldParser<T>> getParserForType(Class<T> type);1423131458;Gets the parser for the type specified by the given class. Returns null, if no parser for that class_is known.__@param type The class of the type to get the parser for._@return The parser for the given type, or null, if no such parser exists.;public static <T> Class<FieldParser<T>> getParserForType(Class<T> type) {_		Class<? extends FieldParser<?>> parser = PARSERS.get(type)__		if (parser == null) {_			return null__		} else {_			@SuppressWarnings("unchecked")_			Class<FieldParser<T>> typedParser = (Class<FieldParser<T>>) parser__			return typedParser__		}_	};gets,the,parser,for,the,type,specified,by,the,given,class,returns,null,if,no,parser,for,that,class,is,known,param,type,the,class,of,the,type,to,get,the,parser,for,return,the,parser,for,the,given,type,or,null,if,no,such,parser,exists;public,static,t,class,field,parser,t,get,parser,for,type,class,t,type,class,extends,field,parser,parser,parsers,get,type,if,parser,null,return,null,else,suppress,warnings,unchecked,class,field,parser,t,typed,parser,class,field,parser,t,parser,return,typed,parser
FieldParser -> public static <T> Class<FieldParser<T>> getParserForType(Class<T> type);1431989549;Gets the parser for the type specified by the given class. Returns null, if no parser for that class_is known.__@param type The class of the type to get the parser for._@return The parser for the given type, or null, if no such parser exists.;public static <T> Class<FieldParser<T>> getParserForType(Class<T> type) {_		Class<? extends FieldParser<?>> parser = PARSERS.get(type)__		if (parser == null) {_			return null__		} else {_			@SuppressWarnings("unchecked")_			Class<FieldParser<T>> typedParser = (Class<FieldParser<T>>) parser__			return typedParser__		}_	};gets,the,parser,for,the,type,specified,by,the,given,class,returns,null,if,no,parser,for,that,class,is,known,param,type,the,class,of,the,type,to,get,the,parser,for,return,the,parser,for,the,given,type,or,null,if,no,such,parser,exists;public,static,t,class,field,parser,t,get,parser,for,type,class,t,type,class,extends,field,parser,parser,parsers,get,type,if,parser,null,return,null,else,suppress,warnings,unchecked,class,field,parser,t,typed,parser,class,field,parser,t,parser,return,typed,parser
FieldParser -> public static <T> Class<FieldParser<T>> getParserForType(Class<T> type);1431989549;Gets the parser for the type specified by the given class. Returns null, if no parser for that class_is known.__@param type The class of the type to get the parser for._@return The parser for the given type, or null, if no such parser exists.;public static <T> Class<FieldParser<T>> getParserForType(Class<T> type) {_		Class<? extends FieldParser<?>> parser = PARSERS.get(type)__		if (parser == null) {_			return null__		} else {_			@SuppressWarnings("unchecked")_			Class<FieldParser<T>> typedParser = (Class<FieldParser<T>>) parser__			return typedParser__		}_	};gets,the,parser,for,the,type,specified,by,the,given,class,returns,null,if,no,parser,for,that,class,is,known,param,type,the,class,of,the,type,to,get,the,parser,for,return,the,parser,for,the,given,type,or,null,if,no,such,parser,exists;public,static,t,class,field,parser,t,get,parser,for,type,class,t,type,class,extends,field,parser,parser,parsers,get,type,if,parser,null,return,null,else,suppress,warnings,unchecked,class,field,parser,t,typed,parser,class,field,parser,t,parser,return,typed,parser
FieldParser -> public static <T> Class<FieldParser<T>> getParserForType(Class<T> type);1432117463;Gets the parser for the type specified by the given class. Returns null, if no parser for that class_is known.__@param type The class of the type to get the parser for._@return The parser for the given type, or null, if no such parser exists.;public static <T> Class<FieldParser<T>> getParserForType(Class<T> type) {_		Class<? extends FieldParser<?>> parser = PARSERS.get(type)__		if (parser == null) {_			return null__		} else {_			@SuppressWarnings("unchecked")_			Class<FieldParser<T>> typedParser = (Class<FieldParser<T>>) parser__			return typedParser__		}_	};gets,the,parser,for,the,type,specified,by,the,given,class,returns,null,if,no,parser,for,that,class,is,known,param,type,the,class,of,the,type,to,get,the,parser,for,return,the,parser,for,the,given,type,or,null,if,no,such,parser,exists;public,static,t,class,field,parser,t,get,parser,for,type,class,t,type,class,extends,field,parser,parser,parsers,get,type,if,parser,null,return,null,else,suppress,warnings,unchecked,class,field,parser,t,typed,parser,class,field,parser,t,parser,return,typed,parser
FieldParser -> public static <T> Class<FieldParser<T>> getParserForType(Class<T> type);1455479358;Gets the parser for the type specified by the given class. Returns null, if no parser for that class_is known.__@param type The class of the type to get the parser for._@return The parser for the given type, or null, if no such parser exists.;public static <T> Class<FieldParser<T>> getParserForType(Class<T> type) {_		Class<? extends FieldParser<?>> parser = PARSERS.get(type)__		if (parser == null) {_			return null__		} else {_			@SuppressWarnings("unchecked")_			Class<FieldParser<T>> typedParser = (Class<FieldParser<T>>) parser__			return typedParser__		}_	};gets,the,parser,for,the,type,specified,by,the,given,class,returns,null,if,no,parser,for,that,class,is,known,param,type,the,class,of,the,type,to,get,the,parser,for,return,the,parser,for,the,given,type,or,null,if,no,such,parser,exists;public,static,t,class,field,parser,t,get,parser,for,type,class,t,type,class,extends,field,parser,parser,parsers,get,type,if,parser,null,return,null,else,suppress,warnings,unchecked,class,field,parser,t,typed,parser,class,field,parser,t,parser,return,typed,parser
FieldParser -> public static <T> Class<FieldParser<T>> getParserForType(Class<T> type);1466027006;Gets the parser for the type specified by the given class. Returns null, if no parser for that class_is known.__@param type The class of the type to get the parser for._@return The parser for the given type, or null, if no such parser exists.;public static <T> Class<FieldParser<T>> getParserForType(Class<T> type) {_		Class<? extends FieldParser<?>> parser = PARSERS.get(type)__		if (parser == null) {_			return null__		} else {_			@SuppressWarnings("unchecked")_			Class<FieldParser<T>> typedParser = (Class<FieldParser<T>>) parser__			return typedParser__		}_	};gets,the,parser,for,the,type,specified,by,the,given,class,returns,null,if,no,parser,for,that,class,is,known,param,type,the,class,of,the,type,to,get,the,parser,for,return,the,parser,for,the,given,type,or,null,if,no,such,parser,exists;public,static,t,class,field,parser,t,get,parser,for,type,class,t,type,class,extends,field,parser,parser,parsers,get,type,if,parser,null,return,null,else,suppress,warnings,unchecked,class,field,parser,t,typed,parser,class,field,parser,t,parser,return,typed,parser
FieldParser -> public static <T> Class<FieldParser<T>> getParserForType(Class<T> type);1474288559;Gets the parser for the type specified by the given class. Returns null, if no parser for that class_is known.__@param type The class of the type to get the parser for._@return The parser for the given type, or null, if no such parser exists.;public static <T> Class<FieldParser<T>> getParserForType(Class<T> type) {_		Class<? extends FieldParser<?>> parser = PARSERS.get(type)__		if (parser == null) {_			return null__		} else {_			@SuppressWarnings("unchecked")_			Class<FieldParser<T>> typedParser = (Class<FieldParser<T>>) parser__			return typedParser__		}_	};gets,the,parser,for,the,type,specified,by,the,given,class,returns,null,if,no,parser,for,that,class,is,known,param,type,the,class,of,the,type,to,get,the,parser,for,return,the,parser,for,the,given,type,or,null,if,no,such,parser,exists;public,static,t,class,field,parser,t,get,parser,for,type,class,t,type,class,extends,field,parser,parser,parsers,get,type,if,parser,null,return,null,else,suppress,warnings,unchecked,class,field,parser,t,typed,parser,class,field,parser,t,parser,return,typed,parser
FieldParser -> public static <T> Class<FieldParser<T>> getParserForType(Class<T> type);1474382639;Gets the parser for the type specified by the given class. Returns null, if no parser for that class_is known.__@param type The class of the type to get the parser for._@return The parser for the given type, or null, if no such parser exists.;public static <T> Class<FieldParser<T>> getParserForType(Class<T> type) {_		Class<? extends FieldParser<?>> parser = PARSERS.get(type)__		if (parser == null) {_			return null__		} else {_			@SuppressWarnings("unchecked")_			Class<FieldParser<T>> typedParser = (Class<FieldParser<T>>) parser__			return typedParser__		}_	};gets,the,parser,for,the,type,specified,by,the,given,class,returns,null,if,no,parser,for,that,class,is,known,param,type,the,class,of,the,type,to,get,the,parser,for,return,the,parser,for,the,given,type,or,null,if,no,such,parser,exists;public,static,t,class,field,parser,t,get,parser,for,type,class,t,type,class,extends,field,parser,parser,parsers,get,type,if,parser,null,return,null,else,suppress,warnings,unchecked,class,field,parser,t,typed,parser,class,field,parser,t,parser,return,typed,parser
FieldParser -> public static <T> Class<FieldParser<T>> getParserForType(Class<T> type);1474535382;Gets the parser for the type specified by the given class. Returns null, if no parser for that class_is known.__@param type The class of the type to get the parser for._@return The parser for the given type, or null, if no such parser exists.;public static <T> Class<FieldParser<T>> getParserForType(Class<T> type) {_		Class<? extends FieldParser<?>> parser = PARSERS.get(type)__		if (parser == null) {_			return null__		} else {_			@SuppressWarnings("unchecked")_			Class<FieldParser<T>> typedParser = (Class<FieldParser<T>>) parser__			return typedParser__		}_	};gets,the,parser,for,the,type,specified,by,the,given,class,returns,null,if,no,parser,for,that,class,is,known,param,type,the,class,of,the,type,to,get,the,parser,for,return,the,parser,for,the,given,type,or,null,if,no,such,parser,exists;public,static,t,class,field,parser,t,get,parser,for,type,class,t,type,class,extends,field,parser,parser,parsers,get,type,if,parser,null,return,null,else,suppress,warnings,unchecked,class,field,parser,t,typed,parser,class,field,parser,t,parser,return,typed,parser
FieldParser -> public static <T> Class<FieldParser<T>> getParserForType(Class<T> type);1481219256;Gets the parser for the type specified by the given class. Returns null, if no parser for that class_is known.__@param type The class of the type to get the parser for._@return The parser for the given type, or null, if no such parser exists.;public static <T> Class<FieldParser<T>> getParserForType(Class<T> type) {_		Class<? extends FieldParser<?>> parser = PARSERS.get(type)__		if (parser == null) {_			return null__		} else {_			@SuppressWarnings("unchecked")_			Class<FieldParser<T>> typedParser = (Class<FieldParser<T>>) parser__			return typedParser__		}_	};gets,the,parser,for,the,type,specified,by,the,given,class,returns,null,if,no,parser,for,that,class,is,known,param,type,the,class,of,the,type,to,get,the,parser,for,return,the,parser,for,the,given,type,or,null,if,no,such,parser,exists;public,static,t,class,field,parser,t,get,parser,for,type,class,t,type,class,extends,field,parser,parser,parsers,get,type,if,parser,null,return,null,else,suppress,warnings,unchecked,class,field,parser,t,typed,parser,class,field,parser,t,parser,return,typed,parser
FieldParser -> public static <T> Class<FieldParser<T>> getParserForType(Class<T> type);1481228508;Gets the parser for the type specified by the given class. Returns null, if no parser for that class_is known.__@param type The class of the type to get the parser for._@return The parser for the given type, or null, if no such parser exists.;public static <T> Class<FieldParser<T>> getParserForType(Class<T> type) {_		Class<? extends FieldParser<?>> parser = PARSERS.get(type)__		if (parser == null) {_			return null__		} else {_			@SuppressWarnings("unchecked")_			Class<FieldParser<T>> typedParser = (Class<FieldParser<T>>) parser__			return typedParser__		}_	};gets,the,parser,for,the,type,specified,by,the,given,class,returns,null,if,no,parser,for,that,class,is,known,param,type,the,class,of,the,type,to,get,the,parser,for,return,the,parser,for,the,given,type,or,null,if,no,such,parser,exists;public,static,t,class,field,parser,t,get,parser,for,type,class,t,type,class,extends,field,parser,parser,parsers,get,type,if,parser,null,return,null,else,suppress,warnings,unchecked,class,field,parser,t,typed,parser,class,field,parser,t,parser,return,typed,parser
FieldParser -> public static <T> Class<FieldParser<T>> getParserForType(Class<T> type);1488232219;Gets the parser for the type specified by the given class. Returns null, if no parser for that class_is known.__@param type The class of the type to get the parser for._@return The parser for the given type, or null, if no such parser exists.;public static <T> Class<FieldParser<T>> getParserForType(Class<T> type) {_		Class<? extends FieldParser<?>> parser = PARSERS.get(type)__		if (parser == null) {_			return null__		} else {_			@SuppressWarnings("unchecked")_			Class<FieldParser<T>> typedParser = (Class<FieldParser<T>>) parser__			return typedParser__		}_	};gets,the,parser,for,the,type,specified,by,the,given,class,returns,null,if,no,parser,for,that,class,is,known,param,type,the,class,of,the,type,to,get,the,parser,for,return,the,parser,for,the,given,type,or,null,if,no,such,parser,exists;public,static,t,class,field,parser,t,get,parser,for,type,class,t,type,class,extends,field,parser,parser,parsers,get,type,if,parser,null,return,null,else,suppress,warnings,unchecked,class,field,parser,t,typed,parser,class,field,parser,t,parser,return,typed,parser
FieldParser -> public static <T> Class<FieldParser<T>> getParserForType(Class<T> type);1515168359;Gets the parser for the type specified by the given class. Returns null, if no parser for that class_is known.__@param type The class of the type to get the parser for._@return The parser for the given type, or null, if no such parser exists.;public static <T> Class<FieldParser<T>> getParserForType(Class<T> type) {_		Class<? extends FieldParser<?>> parser = PARSERS.get(type)__		if (parser == null) {_			return null__		} else {_			@SuppressWarnings("unchecked")_			Class<FieldParser<T>> typedParser = (Class<FieldParser<T>>) parser__			return typedParser__		}_	};gets,the,parser,for,the,type,specified,by,the,given,class,returns,null,if,no,parser,for,that,class,is,known,param,type,the,class,of,the,type,to,get,the,parser,for,return,the,parser,for,the,given,type,or,null,if,no,such,parser,exists;public,static,t,class,field,parser,t,get,parser,for,type,class,t,type,class,extends,field,parser,parser,parsers,get,type,if,parser,null,return,null,else,suppress,warnings,unchecked,class,field,parser,t,typed,parser,class,field,parser,t,parser,return,typed,parser
FieldParser -> public abstract int parseField(byte[] bytes, int startPos, int limit, char delim, T reuse)_;1405024514;Parses the value of a field from the byte array._The start position within the byte array and the array's valid length is given._The content of the value is delimited by a field delimiter.__@param bytes The byte array that holds the value._@param startPos The index where the field starts_@param limit The limit unto which the byte contents is valid for the parser. The limit is the_position one after the last valid byte._@param delim Field delimiter character_@param reuse The an optional reusable field to hold the value__@return The index of the next delimiter, if the field was parsed correctly. A value less than 0 otherwise.;public abstract int parseField(byte[] bytes, int startPos, int limit, char delim, T reuse)_;parses,the,value,of,a,field,from,the,byte,array,the,start,position,within,the,byte,array,and,the,array,s,valid,length,is,given,the,content,of,the,value,is,delimited,by,a,field,delimiter,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,where,the,field,starts,param,limit,the,limit,unto,which,the,byte,contents,is,valid,for,the,parser,the,limit,is,the,position,one,after,the,last,valid,byte,param,delim,field,delimiter,character,param,reuse,the,an,optional,reusable,field,to,hold,the,value,return,the,index,of,the,next,delimiter,if,the,field,was,parsed,correctly,a,value,less,than,0,otherwise;public,abstract,int,parse,field,byte,bytes,int,start,pos,int,limit,char,delim,t,reuse
FieldParser -> public abstract int parseField(byte[] bytes, int startPos, int limit, char delim, T reuse)_;1405090423;Parses the value of a field from the byte array._The start position within the byte array and the array's valid length is given._The content of the value is delimited by a field delimiter.__@param bytes The byte array that holds the value._@param startPos The index where the field starts_@param limit The limit unto which the byte contents is valid for the parser. The limit is the_position one after the last valid byte._@param delim Field delimiter character_@param reuse The an optional reusable field to hold the value__@return The index of the next delimiter, if the field was parsed correctly. A value less than 0 otherwise.;public abstract int parseField(byte[] bytes, int startPos, int limit, char delim, T reuse)_;parses,the,value,of,a,field,from,the,byte,array,the,start,position,within,the,byte,array,and,the,array,s,valid,length,is,given,the,content,of,the,value,is,delimited,by,a,field,delimiter,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,where,the,field,starts,param,limit,the,limit,unto,which,the,byte,contents,is,valid,for,the,parser,the,limit,is,the,position,one,after,the,last,valid,byte,param,delim,field,delimiter,character,param,reuse,the,an,optional,reusable,field,to,hold,the,value,return,the,index,of,the,next,delimiter,if,the,field,was,parsed,correctly,a,value,less,than,0,otherwise;public,abstract,int,parse,field,byte,bytes,int,start,pos,int,limit,char,delim,t,reuse
FieldParser -> public abstract int parseField(byte[] bytes, int startPos, int limit, char delim, T reuse)_;1411473593;Parses the value of a field from the byte array._The start position within the byte array and the array's valid length is given._The content of the value is delimited by a field delimiter.__@param bytes The byte array that holds the value._@param startPos The index where the field starts_@param limit The limit unto which the byte contents is valid for the parser. The limit is the_position one after the last valid byte._@param delim Field delimiter character_@param reuse The an optional reusable field to hold the value__@return The index of the next delimiter, if the field was parsed correctly. A value less than 0 otherwise.;public abstract int parseField(byte[] bytes, int startPos, int limit, char delim, T reuse)_;parses,the,value,of,a,field,from,the,byte,array,the,start,position,within,the,byte,array,and,the,array,s,valid,length,is,given,the,content,of,the,value,is,delimited,by,a,field,delimiter,param,bytes,the,byte,array,that,holds,the,value,param,start,pos,the,index,where,the,field,starts,param,limit,the,limit,unto,which,the,byte,contents,is,valid,for,the,parser,the,limit,is,the,position,one,after,the,last,valid,byte,param,delim,field,delimiter,character,param,reuse,the,an,optional,reusable,field,to,hold,the,value,return,the,index,of,the,next,delimiter,if,the,field,was,parsed,correctly,a,value,less,than,0,otherwise;public,abstract,int,parse,field,byte,bytes,int,start,pos,int,limit,char,delim,t,reuse
FieldParser -> protected void setErrorState(ParseErrorState error);1405024514;Sets the error state of the parser. Called by subclasses of the parser to set the type of error_when failing a parse.__@param error The error state to set.;protected void setErrorState(ParseErrorState error) {_		this.errorState = error__	};sets,the,error,state,of,the,parser,called,by,subclasses,of,the,parser,to,set,the,type,of,error,when,failing,a,parse,param,error,the,error,state,to,set;protected,void,set,error,state,parse,error,state,error,this,error,state,error
FieldParser -> protected void setErrorState(ParseErrorState error);1405090423;Sets the error state of the parser. Called by subclasses of the parser to set the type of error_when failing a parse.__@param error The error state to set.;protected void setErrorState(ParseErrorState error) {_		this.errorState = error__	};sets,the,error,state,of,the,parser,called,by,subclasses,of,the,parser,to,set,the,type,of,error,when,failing,a,parse,param,error,the,error,state,to,set;protected,void,set,error,state,parse,error,state,error,this,error,state,error
FieldParser -> protected void setErrorState(ParseErrorState error);1411473593;Sets the error state of the parser. Called by subclasses of the parser to set the type of error_when failing a parse.__@param error The error state to set.;protected void setErrorState(ParseErrorState error) {_		this.errorState = error__	};sets,the,error,state,of,the,parser,called,by,subclasses,of,the,parser,to,set,the,type,of,error,when,failing,a,parse,param,error,the,error,state,to,set;protected,void,set,error,state,parse,error,state,error,this,error,state,error
FieldParser -> protected void setErrorState(ParseErrorState error);1422280244;Sets the error state of the parser. Called by subclasses of the parser to set the type of error_when failing a parse.__@param error The error state to set.;protected void setErrorState(ParseErrorState error) {_		this.errorState = error__	};sets,the,error,state,of,the,parser,called,by,subclasses,of,the,parser,to,set,the,type,of,error,when,failing,a,parse,param,error,the,error,state,to,set;protected,void,set,error,state,parse,error,state,error,this,error,state,error
FieldParser -> protected void setErrorState(ParseErrorState error);1422823634;Sets the error state of the parser. Called by subclasses of the parser to set the type of error_when failing a parse.__@param error The error state to set.;protected void setErrorState(ParseErrorState error) {_		this.errorState = error__	};sets,the,error,state,of,the,parser,called,by,subclasses,of,the,parser,to,set,the,type,of,error,when,failing,a,parse,param,error,the,error,state,to,set;protected,void,set,error,state,parse,error,state,error,this,error,state,error
FieldParser -> protected void setErrorState(ParseErrorState error);1423131458;Sets the error state of the parser. Called by subclasses of the parser to set the type of error_when failing a parse.__@param error The error state to set.;protected void setErrorState(ParseErrorState error) {_		this.errorState = error__	};sets,the,error,state,of,the,parser,called,by,subclasses,of,the,parser,to,set,the,type,of,error,when,failing,a,parse,param,error,the,error,state,to,set;protected,void,set,error,state,parse,error,state,error,this,error,state,error
FieldParser -> protected void setErrorState(ParseErrorState error);1431989549;Sets the error state of the parser. Called by subclasses of the parser to set the type of error_when failing a parse.__@param error The error state to set.;protected void setErrorState(ParseErrorState error) {_		this.errorState = error__	};sets,the,error,state,of,the,parser,called,by,subclasses,of,the,parser,to,set,the,type,of,error,when,failing,a,parse,param,error,the,error,state,to,set;protected,void,set,error,state,parse,error,state,error,this,error,state,error
FieldParser -> protected void setErrorState(ParseErrorState error);1431989549;Sets the error state of the parser. Called by subclasses of the parser to set the type of error_when failing a parse.__@param error The error state to set.;protected void setErrorState(ParseErrorState error) {_		this.errorState = error__	};sets,the,error,state,of,the,parser,called,by,subclasses,of,the,parser,to,set,the,type,of,error,when,failing,a,parse,param,error,the,error,state,to,set;protected,void,set,error,state,parse,error,state,error,this,error,state,error
FieldParser -> protected void setErrorState(ParseErrorState error);1432117463;Sets the error state of the parser. Called by subclasses of the parser to set the type of error_when failing a parse.__@param error The error state to set.;protected void setErrorState(ParseErrorState error) {_		this.errorState = error__	};sets,the,error,state,of,the,parser,called,by,subclasses,of,the,parser,to,set,the,type,of,error,when,failing,a,parse,param,error,the,error,state,to,set;protected,void,set,error,state,parse,error,state,error,this,error,state,error
FieldParser -> protected void setErrorState(ParseErrorState error);1455479358;Sets the error state of the parser. Called by subclasses of the parser to set the type of error_when failing a parse.__@param error The error state to set.;protected void setErrorState(ParseErrorState error) {_		this.errorState = error__	};sets,the,error,state,of,the,parser,called,by,subclasses,of,the,parser,to,set,the,type,of,error,when,failing,a,parse,param,error,the,error,state,to,set;protected,void,set,error,state,parse,error,state,error,this,error,state,error
FieldParser -> protected void setErrorState(ParseErrorState error);1466027006;Sets the error state of the parser. Called by subclasses of the parser to set the type of error_when failing a parse.__@param error The error state to set.;protected void setErrorState(ParseErrorState error) {_		this.errorState = error__	};sets,the,error,state,of,the,parser,called,by,subclasses,of,the,parser,to,set,the,type,of,error,when,failing,a,parse,param,error,the,error,state,to,set;protected,void,set,error,state,parse,error,state,error,this,error,state,error
FieldParser -> protected void setErrorState(ParseErrorState error);1474288559;Sets the error state of the parser. Called by subclasses of the parser to set the type of error_when failing a parse.__@param error The error state to set.;protected void setErrorState(ParseErrorState error) {_		this.errorState = error__	};sets,the,error,state,of,the,parser,called,by,subclasses,of,the,parser,to,set,the,type,of,error,when,failing,a,parse,param,error,the,error,state,to,set;protected,void,set,error,state,parse,error,state,error,this,error,state,error
FieldParser -> protected void setErrorState(ParseErrorState error);1474382639;Sets the error state of the parser. Called by subclasses of the parser to set the type of error_when failing a parse.__@param error The error state to set.;protected void setErrorState(ParseErrorState error) {_		this.errorState = error__	};sets,the,error,state,of,the,parser,called,by,subclasses,of,the,parser,to,set,the,type,of,error,when,failing,a,parse,param,error,the,error,state,to,set;protected,void,set,error,state,parse,error,state,error,this,error,state,error
FieldParser -> protected void setErrorState(ParseErrorState error);1474535382;Sets the error state of the parser. Called by subclasses of the parser to set the type of error_when failing a parse.__@param error The error state to set.;protected void setErrorState(ParseErrorState error) {_		this.errorState = error__	};sets,the,error,state,of,the,parser,called,by,subclasses,of,the,parser,to,set,the,type,of,error,when,failing,a,parse,param,error,the,error,state,to,set;protected,void,set,error,state,parse,error,state,error,this,error,state,error
FieldParser -> protected void setErrorState(ParseErrorState error);1481219256;Sets the error state of the parser. Called by subclasses of the parser to set the type of error_when failing a parse.__@param error The error state to set.;protected void setErrorState(ParseErrorState error) {_		this.errorState = error__	};sets,the,error,state,of,the,parser,called,by,subclasses,of,the,parser,to,set,the,type,of,error,when,failing,a,parse,param,error,the,error,state,to,set;protected,void,set,error,state,parse,error,state,error,this,error,state,error
FieldParser -> protected void setErrorState(ParseErrorState error);1481228508;Sets the error state of the parser. Called by subclasses of the parser to set the type of error_when failing a parse.__@param error The error state to set.;protected void setErrorState(ParseErrorState error) {_		this.errorState = error__	};sets,the,error,state,of,the,parser,called,by,subclasses,of,the,parser,to,set,the,type,of,error,when,failing,a,parse,param,error,the,error,state,to,set;protected,void,set,error,state,parse,error,state,error,this,error,state,error
FieldParser -> protected void setErrorState(ParseErrorState error);1488232219;Sets the error state of the parser. Called by subclasses of the parser to set the type of error_when failing a parse.__@param error The error state to set.;protected void setErrorState(ParseErrorState error) {_		this.errorState = error__	};sets,the,error,state,of,the,parser,called,by,subclasses,of,the,parser,to,set,the,type,of,error,when,failing,a,parse,param,error,the,error,state,to,set;protected,void,set,error,state,parse,error,state,error,this,error,state,error
FieldParser -> protected void setErrorState(ParseErrorState error);1515168359;Sets the error state of the parser. Called by subclasses of the parser to set the type of error_when failing a parse.__@param error The error state to set.;protected void setErrorState(ParseErrorState error) {_		this.errorState = error__	};sets,the,error,state,of,the,parser,called,by,subclasses,of,the,parser,to,set,the,type,of,error,when,failing,a,parse,param,error,the,error,state,to,set;protected,void,set,error,state,parse,error,state,error,this,error,state,error
FieldParser -> protected abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;1466027006;Each parser's logic should be implemented inside this method__@see {@link FieldParser#parseField(byte[], int, int, byte[], Object)};protected abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;each,parser,s,logic,should,be,implemented,inside,this,method,see,link,field,parser,parse,field,byte,int,int,byte,object;protected,abstract,int,parse,field,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse
FieldParser -> protected abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;1474288559;Each parser's logic should be implemented inside this method__@see {@link FieldParser#parseField(byte[], int, int, byte[], Object)};protected abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;each,parser,s,logic,should,be,implemented,inside,this,method,see,link,field,parser,parse,field,byte,int,int,byte,object;protected,abstract,int,parse,field,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse
FieldParser -> protected abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;1474382639;Each parser's logic should be implemented inside this method__@see {@link FieldParser#parseField(byte[], int, int, byte[], Object)};protected abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;each,parser,s,logic,should,be,implemented,inside,this,method,see,link,field,parser,parse,field,byte,int,int,byte,object;protected,abstract,int,parse,field,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse
FieldParser -> protected abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;1474535382;Each parser's logic should be implemented inside this method__@see {@link FieldParser#parseField(byte[], int, int, byte[], Object)};protected abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;each,parser,s,logic,should,be,implemented,inside,this,method,see,link,field,parser,parse,field,byte,int,int,byte,object;protected,abstract,int,parse,field,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse
FieldParser -> protected abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;1481219256;Each parser's logic should be implemented inside this method__@see {@link FieldParser#parseField(byte[], int, int, byte[], Object)};protected abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;each,parser,s,logic,should,be,implemented,inside,this,method,see,link,field,parser,parse,field,byte,int,int,byte,object;protected,abstract,int,parse,field,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse
FieldParser -> protected abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;1481228508;Each parser's logic should be implemented inside this method;protected abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;each,parser,s,logic,should,be,implemented,inside,this,method;protected,abstract,int,parse,field,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse
FieldParser -> protected abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;1488232219;Each parser's logic should be implemented inside this method;protected abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;each,parser,s,logic,should,be,implemented,inside,this,method;protected,abstract,int,parse,field,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse
FieldParser -> protected abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;1515168359;Each parser's logic should be implemented inside this method;protected abstract int parseField(byte[] bytes, int startPos, int limit, byte[] delim, T reuse)_;each,parser,s,logic,should,be,implemented,inside,this,method;protected,abstract,int,parse,field,byte,bytes,int,start,pos,int,limit,byte,delim,t,reuse
FieldParser -> public void setCharset(Charset charset);1481219256;Sets the charset of the parser. Called by subclasses of the parser to set the type of charset_when doing a parse.__@param charset The charset  to set.;public void setCharset(Charset charset) {_		this.charset = charset__	};sets,the,charset,of,the,parser,called,by,subclasses,of,the,parser,to,set,the,type,of,charset,when,doing,a,parse,param,charset,the,charset,to,set;public,void,set,charset,charset,charset,this,charset,charset
FieldParser -> public void setCharset(Charset charset);1481228508;Sets the character set used for this parser.__@param charset charset used for this parser.;public void setCharset(Charset charset) {_		this.charset = charset__	};sets,the,character,set,used,for,this,parser,param,charset,charset,used,for,this,parser;public,void,set,charset,charset,charset,this,charset,charset
FieldParser -> public void setCharset(Charset charset);1488232219;Sets the character set used for this parser.__@param charset charset used for this parser.;public void setCharset(Charset charset) {_		this.charset = charset__	};sets,the,character,set,used,for,this,parser,param,charset,charset,used,for,this,parser;public,void,set,charset,charset,charset,this,charset,charset
FieldParser -> public void setCharset(Charset charset);1515168359;Sets the character set used for this parser.__@param charset charset used for this parser.;public void setCharset(Charset charset) {_		this.charset = charset__	};sets,the,character,set,used,for,this,parser,param,charset,charset,used,for,this,parser;public,void,set,charset,charset,charset,this,charset,charset
