commented;modifiers;parameterAmount;loc;comment;code
true;public,static;0;3;/**  * Returns the NullValue singleton instance.  *  * @return The NullValue singleton instance.  */ ;/**  * Returns the NullValue singleton instance.  *  * @return The NullValue singleton instance.  */ public static NullValue getInstance() {     return INSTANCE. }
false;public;0;4;;// -------------------------------------------------------------------------------------------- @Override public String toString() {     return "(null)". }
false;public;1;4;;// -------------------------------------------------------------------------------------------- @Override public void read(DataInputView in) throws IOException {     in.readBoolean(). }
false;public;1;4;;@Override public void write(DataOutputView out) throws IOException {     out.writeBoolean(false). }
false;public;1;4;;// -------------------------------------------------------------------------------------------- @Override public int compareTo(NullValue o) {     return 0. }
false;public;1;4;;@Override public boolean equals(Object o) {     return (o != null && o.getClass() == NullValue.class). }
false;public;0;4;;@Override public int hashCode() {     return 53. }
false;public;0;4;;// -------------------------------------------------------------------------------------------- @Override public int getMaxNormalizedKeyLen() {     return 0. }
false;public;3;6;;@Override public void copyNormalizedKey(MemorySegment target, int offset, int len) {     for (int i = offset. i < offset + len. i++) {         target.put(i, (byte) 0).     } }
false;public;0;4;;// -------------------------------------------------------------------------------------------- @Override public int getBinaryLength() {     return 1. }
false;public;1;3;;@Override public void copyTo(NullValue target) { }
false;public;0;4;;@Override public NullValue copy() {     return NullValue.getInstance(). }
false;public;2;5;;@Override public void copy(DataInputView source, DataOutputView target) throws IOException {     source.readBoolean().     target.writeBoolean(false). }
