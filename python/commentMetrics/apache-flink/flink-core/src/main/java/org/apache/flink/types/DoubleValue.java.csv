commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Returns the value of the encapsulated primitive double.  *  * @return the value of the encapsulated primitive double.  */ ;/**  * Returns the value of the encapsulated primitive double.  *  * @return the value of the encapsulated primitive double.  */ public double getValue() {     return this.value. }
true;public;1;3;/**  * Sets the value of the encapsulated primitive double.  *  * @param value  *        the new value of the encapsulated primitive double.  */ ;/**  * Sets the value of the encapsulated primitive double.  *  * @param value  *        the new value of the encapsulated primitive double.  */ public void setValue(double value) {     this.value = value. }
false;public;1;4;;@Override public void setValue(DoubleValue value) {     this.value = value.value. }
false;public;1;4;;// -------------------------------------------------------------------------------------------- @Override public void read(DataInputView in) throws IOException {     this.value = in.readDouble(). }
false;public;1;4;;@Override public void write(DataOutputView out) throws IOException {     out.writeDouble(this.value). }
false;public;0;4;;// -------------------------------------------------------------------------------------------- @Override public String toString() {     return String.valueOf(this.value). }
false;public;1;5;;@Override public int compareTo(DoubleValue o) {     final double other = o.value.     return this.value < other ? -1 : this.value > other ? 1 : 0. }
false;public;0;5;;@Override public int hashCode() {     long temp = Double.doubleToLongBits(this.value).     return 31 + (int) (temp ^ temp >>> 32). }
false;public;1;8;;@Override public boolean equals(final Object obj) {     if (obj instanceof DoubleValue) {         final DoubleValue other = (DoubleValue) obj.         return Double.doubleToLongBits(this.value) == Double.doubleToLongBits(other.value).     }     return false. }
false;public;0;4;;// -------------------------------------------------------------------------------------------- @Override public int getBinaryLength() {     return 8. }
false;public;1;4;;@Override public void copyTo(DoubleValue target) {     target.value = this.value. }
false;public;0;4;;@Override public DoubleValue copy() {     return new DoubleValue(this.value). }
false;public;2;4;;@Override public void copy(DataInputView source, DataOutputView target) throws IOException {     target.write(source, 8). }
