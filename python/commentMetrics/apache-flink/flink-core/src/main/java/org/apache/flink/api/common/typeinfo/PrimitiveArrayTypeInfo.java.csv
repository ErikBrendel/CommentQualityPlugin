# id;timestamp;commentText;codeText;commentWords;codeWords
PrimitiveArrayTypeInfo -> private PrimitiveArrayTypeInfo(Class<T> arrayClass, TypeSerializer<T> serializer);1424115592;Creates a new type info for a_@param arrayClass The class of the array (such as int[].class)_@param serializer The serializer for the array.;private PrimitiveArrayTypeInfo(Class<T> arrayClass, TypeSerializer<T> serializer) {_		if (arrayClass == null || serializer == null) {_			throw new NullPointerException()__		}_		if (!(arrayClass.isArray() && arrayClass.getComponentType().isPrimitive())) {_			throw new IllegalArgumentException("Class must represent an array of primitives.")__		}_		this.arrayClass = arrayClass__		this.serializer = serializer__	};creates,a,new,type,info,for,a,param,array,class,the,class,of,the,array,such,as,int,class,param,serializer,the,serializer,for,the,array;private,primitive,array,type,info,class,t,array,class,type,serializer,t,serializer,if,array,class,null,serializer,null,throw,new,null,pointer,exception,if,array,class,is,array,array,class,get,component,type,is,primitive,throw,new,illegal,argument,exception,class,must,represent,an,array,of,primitives,this,array,class,array,class,this,serializer,serializer
PrimitiveArrayTypeInfo -> private PrimitiveArrayTypeInfo(Class<T> arrayClass, TypeSerializer<T> serializer);1424693348;Creates a new type info for a_@param arrayClass The class of the array (such as int[].class)_@param serializer The serializer for the array.;private PrimitiveArrayTypeInfo(Class<T> arrayClass, TypeSerializer<T> serializer) {_		if (arrayClass == null || serializer == null) {_			throw new NullPointerException()__		}_		if (!(arrayClass.isArray() && arrayClass.getComponentType().isPrimitive())) {_			throw new IllegalArgumentException("Class must represent an array of primitives.")__		}_		this.arrayClass = arrayClass__		this.serializer = serializer__	};creates,a,new,type,info,for,a,param,array,class,the,class,of,the,array,such,as,int,class,param,serializer,the,serializer,for,the,array;private,primitive,array,type,info,class,t,array,class,type,serializer,t,serializer,if,array,class,null,serializer,null,throw,new,null,pointer,exception,if,array,class,is,array,array,class,get,component,type,is,primitive,throw,new,illegal,argument,exception,class,must,represent,an,array,of,primitives,this,array,class,array,class,this,serializer,serializer
PrimitiveArrayTypeInfo -> @PublicEvolving 	public TypeInformation<?> getComponentType();1455101486;Gets the type information of the component type._@return The type information of the component type.;@PublicEvolving_	public TypeInformation<?> getComponentType() {_		return BasicTypeInfo.getInfoFor(getComponentClass())__	};gets,the,type,information,of,the,component,type,return,the,type,information,of,the,component,type;public,evolving,public,type,information,get,component,type,return,basic,type,info,get,info,for,get,component,class
PrimitiveArrayTypeInfo -> @PublicEvolving 	public TypeInformation<?> getComponentType();1460741894;Gets the type information of the component type._@return The type information of the component type.;@PublicEvolving_	public TypeInformation<?> getComponentType() {_		return BasicTypeInfo.getInfoFor(getComponentClass())__	};gets,the,type,information,of,the,component,type,return,the,type,information,of,the,component,type;public,evolving,public,type,information,get,component,type,return,basic,type,info,get,info,for,get,component,class
PrimitiveArrayTypeInfo -> @PublicEvolving 	public TypeInformation<?> getComponentType();1480022562;Gets the type information of the component type._@return The type information of the component type.;@PublicEvolving_	public TypeInformation<?> getComponentType() {_		return BasicTypeInfo.getInfoFor(getComponentClass())__	};gets,the,type,information,of,the,component,type,return,the,type,information,of,the,component,type;public,evolving,public,type,information,get,component,type,return,basic,type,info,get,info,for,get,component,class
PrimitiveArrayTypeInfo -> @PublicEvolving 	public TypeInformation<?> getComponentType();1480022575;Gets the type information of the component type._@return The type information of the component type.;@PublicEvolving_	public TypeInformation<?> getComponentType() {_		return BasicTypeInfo.getInfoFor(getComponentClass())__	};gets,the,type,information,of,the,component,type,return,the,type,information,of,the,component,type;public,evolving,public,type,information,get,component,type,return,basic,type,info,get,info,for,get,component,class
PrimitiveArrayTypeInfo -> @PublicEvolving 	public TypeInformation<?> getComponentType();1524407314;Gets the type information of the component type._@return The type information of the component type.;@PublicEvolving_	public TypeInformation<?> getComponentType() {_		return BasicTypeInfo.getInfoFor(getComponentClass())__	};gets,the,type,information,of,the,component,type,return,the,type,information,of,the,component,type;public,evolving,public,type,information,get,component,type,return,basic,type,info,get,info,for,get,component,class
PrimitiveArrayTypeInfo -> @SuppressWarnings("unchecked") 	public static <X> PrimitiveArrayTypeInfo<X> getInfoFor(Class<X> type);1424115592;Tries to get the PrimitiveArrayTypeInfo for an array. Returns null, if the type is an array,_but the component type is not a primitive type.__@param type The class of the array._@return The corresponding PrimitiveArrayTypeInfo, or null, if the array is not an array of primitives._@throws InvalidTypesException Thrown, if the given class does not represent an array.;@SuppressWarnings("unchecked")_	public static <X> PrimitiveArrayTypeInfo<X> getInfoFor(Class<X> type) {_		if (!type.isArray()) {_			throw new InvalidTypesException("The given class is no array.")__		}__		_		return (PrimitiveArrayTypeInfo<X>) TYPES.get(type)__	};tries,to,get,the,primitive,array,type,info,for,an,array,returns,null,if,the,type,is,an,array,but,the,component,type,is,not,a,primitive,type,param,type,the,class,of,the,array,return,the,corresponding,primitive,array,type,info,or,null,if,the,array,is,not,an,array,of,primitives,throws,invalid,types,exception,thrown,if,the,given,class,does,not,represent,an,array;suppress,warnings,unchecked,public,static,x,primitive,array,type,info,x,get,info,for,class,x,type,if,type,is,array,throw,new,invalid,types,exception,the,given,class,is,no,array,return,primitive,array,type,info,x,types,get,type
PrimitiveArrayTypeInfo -> @SuppressWarnings("unchecked") 	public static <X> PrimitiveArrayTypeInfo<X> getInfoFor(Class<X> type);1424693348;Tries to get the PrimitiveArrayTypeInfo for an array. Returns null, if the type is an array,_but the component type is not a primitive type.__@param type The class of the array._@return The corresponding PrimitiveArrayTypeInfo, or null, if the array is not an array of primitives._@throws InvalidTypesException Thrown, if the given class does not represent an array.;@SuppressWarnings("unchecked")_	public static <X> PrimitiveArrayTypeInfo<X> getInfoFor(Class<X> type) {_		if (!type.isArray()) {_			throw new InvalidTypesException("The given class is no array.")__		}__		_		return (PrimitiveArrayTypeInfo<X>) TYPES.get(type)__	};tries,to,get,the,primitive,array,type,info,for,an,array,returns,null,if,the,type,is,an,array,but,the,component,type,is,not,a,primitive,type,param,type,the,class,of,the,array,return,the,corresponding,primitive,array,type,info,or,null,if,the,array,is,not,an,array,of,primitives,throws,invalid,types,exception,thrown,if,the,given,class,does,not,represent,an,array;suppress,warnings,unchecked,public,static,x,primitive,array,type,info,x,get,info,for,class,x,type,if,type,is,array,throw,new,invalid,types,exception,the,given,class,is,no,array,return,primitive,array,type,info,x,types,get,type
PrimitiveArrayTypeInfo -> @SuppressWarnings("unchecked") 	public static <X> PrimitiveArrayTypeInfo<X> getInfoFor(Class<X> type);1440699430;Tries to get the PrimitiveArrayTypeInfo for an array. Returns null, if the type is an array,_but the component type is not a primitive type.__@param type The class of the array._@return The corresponding PrimitiveArrayTypeInfo, or null, if the array is not an array of primitives._@throws InvalidTypesException Thrown, if the given class does not represent an array.;@SuppressWarnings("unchecked")_	public static <X> PrimitiveArrayTypeInfo<X> getInfoFor(Class<X> type) {_		if (!type.isArray()) {_			throw new InvalidTypesException("The given class is no array.")__		}__		_		return (PrimitiveArrayTypeInfo<X>) TYPES.get(type)__	};tries,to,get,the,primitive,array,type,info,for,an,array,returns,null,if,the,type,is,an,array,but,the,component,type,is,not,a,primitive,type,param,type,the,class,of,the,array,return,the,corresponding,primitive,array,type,info,or,null,if,the,array,is,not,an,array,of,primitives,throws,invalid,types,exception,thrown,if,the,given,class,does,not,represent,an,array;suppress,warnings,unchecked,public,static,x,primitive,array,type,info,x,get,info,for,class,x,type,if,type,is,array,throw,new,invalid,types,exception,the,given,class,is,no,array,return,primitive,array,type,info,x,types,get,type
PrimitiveArrayTypeInfo -> @SuppressWarnings("unchecked") 	public static <X> PrimitiveArrayTypeInfo<X> getInfoFor(Class<X> type);1442481573;Tries to get the PrimitiveArrayTypeInfo for an array. Returns null, if the type is an array,_but the component type is not a primitive type.__@param type The class of the array._@return The corresponding PrimitiveArrayTypeInfo, or null, if the array is not an array of primitives._@throws InvalidTypesException Thrown, if the given class does not represent an array.;@SuppressWarnings("unchecked")_	public static <X> PrimitiveArrayTypeInfo<X> getInfoFor(Class<X> type) {_		if (!type.isArray()) {_			throw new InvalidTypesException("The given class is no array.")__		}__		_		return (PrimitiveArrayTypeInfo<X>) TYPES.get(type)__	};tries,to,get,the,primitive,array,type,info,for,an,array,returns,null,if,the,type,is,an,array,but,the,component,type,is,not,a,primitive,type,param,type,the,class,of,the,array,return,the,corresponding,primitive,array,type,info,or,null,if,the,array,is,not,an,array,of,primitives,throws,invalid,types,exception,thrown,if,the,given,class,does,not,represent,an,array;suppress,warnings,unchecked,public,static,x,primitive,array,type,info,x,get,info,for,class,x,type,if,type,is,array,throw,new,invalid,types,exception,the,given,class,is,no,array,return,primitive,array,type,info,x,types,get,type
PrimitiveArrayTypeInfo -> @SuppressWarnings("unchecked") 	public static <X> PrimitiveArrayTypeInfo<X> getInfoFor(Class<X> type);1445001971;Tries to get the PrimitiveArrayTypeInfo for an array. Returns null, if the type is an array,_but the component type is not a primitive type.__@param type The class of the array._@return The corresponding PrimitiveArrayTypeInfo, or null, if the array is not an array of primitives._@throws InvalidTypesException Thrown, if the given class does not represent an array.;@SuppressWarnings("unchecked")_	public static <X> PrimitiveArrayTypeInfo<X> getInfoFor(Class<X> type) {_		if (!type.isArray()) {_			throw new InvalidTypesException("The given class is no array.")__		}__		_		return (PrimitiveArrayTypeInfo<X>) TYPES.get(type)__	};tries,to,get,the,primitive,array,type,info,for,an,array,returns,null,if,the,type,is,an,array,but,the,component,type,is,not,a,primitive,type,param,type,the,class,of,the,array,return,the,corresponding,primitive,array,type,info,or,null,if,the,array,is,not,an,array,of,primitives,throws,invalid,types,exception,thrown,if,the,given,class,does,not,represent,an,array;suppress,warnings,unchecked,public,static,x,primitive,array,type,info,x,get,info,for,class,x,type,if,type,is,array,throw,new,invalid,types,exception,the,given,class,is,no,array,return,primitive,array,type,info,x,types,get,type
PrimitiveArrayTypeInfo -> @PublicEvolving 	public Class<?> getComponentClass();1455101486;Gets the class that represents the component type._@return The class of the component type.;@PublicEvolving_	public Class<?> getComponentClass() {_		return this.arrayClass.getComponentType()__	};gets,the,class,that,represents,the,component,type,return,the,class,of,the,component,type;public,evolving,public,class,get,component,class,return,this,array,class,get,component,type
PrimitiveArrayTypeInfo -> @PublicEvolving 	public Class<?> getComponentClass();1460741894;Gets the class that represents the component type._@return The class of the component type.;@PublicEvolving_	public Class<?> getComponentClass() {_		return this.arrayClass.getComponentType()__	};gets,the,class,that,represents,the,component,type,return,the,class,of,the,component,type;public,evolving,public,class,get,component,class,return,this,array,class,get,component,type
PrimitiveArrayTypeInfo -> @PublicEvolving 	public Class<?> getComponentClass();1480022562;Gets the class that represents the component type._@return The class of the component type.;@PublicEvolving_	public Class<?> getComponentClass() {_		return this.arrayClass.getComponentType()__	};gets,the,class,that,represents,the,component,type,return,the,class,of,the,component,type;public,evolving,public,class,get,component,class,return,this,array,class,get,component,type
PrimitiveArrayTypeInfo -> @PublicEvolving 	public Class<?> getComponentClass();1480022575;Gets the class that represents the component type._@return The class of the component type.;@PublicEvolving_	public Class<?> getComponentClass() {_		return this.arrayClass.getComponentType()__	};gets,the,class,that,represents,the,component,type,return,the,class,of,the,component,type;public,evolving,public,class,get,component,class,return,this,array,class,get,component,type
PrimitiveArrayTypeInfo -> @PublicEvolving 	public Class<?> getComponentClass();1524407314;Gets the class that represents the component type._@return The class of the component type.;@PublicEvolving_	public Class<?> getComponentClass() {_		return this.arrayClass.getComponentType()__	};gets,the,class,that,represents,the,component,type,return,the,class,of,the,component,type;public,evolving,public,class,get,component,class,return,this,array,class,get,component,type
PrimitiveArrayTypeInfo -> @SuppressWarnings("unchecked") 	@PublicEvolving 	public static <X> PrimitiveArrayTypeInfo<X> getInfoFor(Class<X> type);1455101486;Tries to get the PrimitiveArrayTypeInfo for an array. Returns null, if the type is an array,_but the component type is not a primitive type.__@param type The class of the array._@return The corresponding PrimitiveArrayTypeInfo, or null, if the array is not an array of primitives._@throws InvalidTypesException Thrown, if the given class does not represent an array.;@SuppressWarnings("unchecked")_	@PublicEvolving_	public static <X> PrimitiveArrayTypeInfo<X> getInfoFor(Class<X> type) {_		if (!type.isArray()) {_			throw new InvalidTypesException("The given class is no array.")__		}__		_		return (PrimitiveArrayTypeInfo<X>) TYPES.get(type)__	};tries,to,get,the,primitive,array,type,info,for,an,array,returns,null,if,the,type,is,an,array,but,the,component,type,is,not,a,primitive,type,param,type,the,class,of,the,array,return,the,corresponding,primitive,array,type,info,or,null,if,the,array,is,not,an,array,of,primitives,throws,invalid,types,exception,thrown,if,the,given,class,does,not,represent,an,array;suppress,warnings,unchecked,public,evolving,public,static,x,primitive,array,type,info,x,get,info,for,class,x,type,if,type,is,array,throw,new,invalid,types,exception,the,given,class,is,no,array,return,primitive,array,type,info,x,types,get,type
PrimitiveArrayTypeInfo -> @SuppressWarnings("unchecked") 	@PublicEvolving 	public static <X> PrimitiveArrayTypeInfo<X> getInfoFor(Class<X> type);1460741894;Tries to get the PrimitiveArrayTypeInfo for an array. Returns null, if the type is an array,_but the component type is not a primitive type.__@param type The class of the array._@return The corresponding PrimitiveArrayTypeInfo, or null, if the array is not an array of primitives._@throws InvalidTypesException Thrown, if the given class does not represent an array.;@SuppressWarnings("unchecked")_	@PublicEvolving_	public static <X> PrimitiveArrayTypeInfo<X> getInfoFor(Class<X> type) {_		if (!type.isArray()) {_			throw new InvalidTypesException("The given class is no array.")__		}__		_		return (PrimitiveArrayTypeInfo<X>) TYPES.get(type)__	};tries,to,get,the,primitive,array,type,info,for,an,array,returns,null,if,the,type,is,an,array,but,the,component,type,is,not,a,primitive,type,param,type,the,class,of,the,array,return,the,corresponding,primitive,array,type,info,or,null,if,the,array,is,not,an,array,of,primitives,throws,invalid,types,exception,thrown,if,the,given,class,does,not,represent,an,array;suppress,warnings,unchecked,public,evolving,public,static,x,primitive,array,type,info,x,get,info,for,class,x,type,if,type,is,array,throw,new,invalid,types,exception,the,given,class,is,no,array,return,primitive,array,type,info,x,types,get,type
PrimitiveArrayTypeInfo -> @SuppressWarnings("unchecked") 	@PublicEvolving 	public static <X> PrimitiveArrayTypeInfo<X> getInfoFor(Class<X> type);1480022562;Tries to get the PrimitiveArrayTypeInfo for an array. Returns null, if the type is an array,_but the component type is not a primitive type.__@param type The class of the array._@return The corresponding PrimitiveArrayTypeInfo, or null, if the array is not an array of primitives._@throws InvalidTypesException Thrown, if the given class does not represent an array.;@SuppressWarnings("unchecked")_	@PublicEvolving_	public static <X> PrimitiveArrayTypeInfo<X> getInfoFor(Class<X> type) {_		if (!type.isArray()) {_			throw new InvalidTypesException("The given class is no array.")__		}__		_		return (PrimitiveArrayTypeInfo<X>) TYPES.get(type)__	};tries,to,get,the,primitive,array,type,info,for,an,array,returns,null,if,the,type,is,an,array,but,the,component,type,is,not,a,primitive,type,param,type,the,class,of,the,array,return,the,corresponding,primitive,array,type,info,or,null,if,the,array,is,not,an,array,of,primitives,throws,invalid,types,exception,thrown,if,the,given,class,does,not,represent,an,array;suppress,warnings,unchecked,public,evolving,public,static,x,primitive,array,type,info,x,get,info,for,class,x,type,if,type,is,array,throw,new,invalid,types,exception,the,given,class,is,no,array,return,primitive,array,type,info,x,types,get,type
PrimitiveArrayTypeInfo -> @SuppressWarnings("unchecked") 	@PublicEvolving 	public static <X> PrimitiveArrayTypeInfo<X> getInfoFor(Class<X> type);1480022575;Tries to get the PrimitiveArrayTypeInfo for an array. Returns null, if the type is an array,_but the component type is not a primitive type.__@param type The class of the array._@return The corresponding PrimitiveArrayTypeInfo, or null, if the array is not an array of primitives._@throws InvalidTypesException Thrown, if the given class does not represent an array.;@SuppressWarnings("unchecked")_	@PublicEvolving_	public static <X> PrimitiveArrayTypeInfo<X> getInfoFor(Class<X> type) {_		if (!type.isArray()) {_			throw new InvalidTypesException("The given class is no array.")__		}__		_		return (PrimitiveArrayTypeInfo<X>) TYPES.get(type)__	};tries,to,get,the,primitive,array,type,info,for,an,array,returns,null,if,the,type,is,an,array,but,the,component,type,is,not,a,primitive,type,param,type,the,class,of,the,array,return,the,corresponding,primitive,array,type,info,or,null,if,the,array,is,not,an,array,of,primitives,throws,invalid,types,exception,thrown,if,the,given,class,does,not,represent,an,array;suppress,warnings,unchecked,public,evolving,public,static,x,primitive,array,type,info,x,get,info,for,class,x,type,if,type,is,array,throw,new,invalid,types,exception,the,given,class,is,no,array,return,primitive,array,type,info,x,types,get,type
PrimitiveArrayTypeInfo -> @SuppressWarnings("unchecked") 	@PublicEvolving 	public static <X> PrimitiveArrayTypeInfo<X> getInfoFor(Class<X> type);1524407314;Tries to get the PrimitiveArrayTypeInfo for an array. Returns null, if the type is an array,_but the component type is not a primitive type.__@param type The class of the array._@return The corresponding PrimitiveArrayTypeInfo, or null, if the array is not an array of primitives._@throws InvalidTypesException Thrown, if the given class does not represent an array.;@SuppressWarnings("unchecked")_	@PublicEvolving_	public static <X> PrimitiveArrayTypeInfo<X> getInfoFor(Class<X> type) {_		if (!type.isArray()) {_			throw new InvalidTypesException("The given class is no array.")__		}__		_		return (PrimitiveArrayTypeInfo<X>) TYPES.get(type)__	};tries,to,get,the,primitive,array,type,info,for,an,array,returns,null,if,the,type,is,an,array,but,the,component,type,is,not,a,primitive,type,param,type,the,class,of,the,array,return,the,corresponding,primitive,array,type,info,or,null,if,the,array,is,not,an,array,of,primitives,throws,invalid,types,exception,thrown,if,the,given,class,does,not,represent,an,array;suppress,warnings,unchecked,public,evolving,public,static,x,primitive,array,type,info,x,get,info,for,class,x,type,if,type,is,array,throw,new,invalid,types,exception,the,given,class,is,no,array,return,primitive,array,type,info,x,types,get,type
PrimitiveArrayTypeInfo -> private PrimitiveArrayTypeInfo(Class<T> arrayClass, TypeSerializer<T> serializer, Class<? extends PrimitiveArrayComparator<T, ?>> comparatorClass);1440699430;Creates a new type info for a_@param arrayClass The class of the array (such as int[].class)_@param serializer The serializer for the array.;private PrimitiveArrayTypeInfo(Class<T> arrayClass, TypeSerializer<T> serializer, Class<? extends PrimitiveArrayComparator<T, ?>> comparatorClass) {_		if (arrayClass == null || serializer == null) {_			throw new NullPointerException()__		}_		if (!(arrayClass.isArray() && arrayClass.getComponentType().isPrimitive())) {_			throw new IllegalArgumentException("Class must represent an array of primitives.")__		}_		this.arrayClass = arrayClass__		this.serializer = serializer__		this.comparatorClass = comparatorClass__	};creates,a,new,type,info,for,a,param,array,class,the,class,of,the,array,such,as,int,class,param,serializer,the,serializer,for,the,array;private,primitive,array,type,info,class,t,array,class,type,serializer,t,serializer,class,extends,primitive,array,comparator,t,comparator,class,if,array,class,null,serializer,null,throw,new,null,pointer,exception,if,array,class,is,array,array,class,get,component,type,is,primitive,throw,new,illegal,argument,exception,class,must,represent,an,array,of,primitives,this,array,class,array,class,this,serializer,serializer,this,comparator,class,comparator,class
PrimitiveArrayTypeInfo -> private PrimitiveArrayTypeInfo(Class<T> arrayClass, TypeSerializer<T> serializer, Class<? extends PrimitiveArrayComparator<T, ?>> comparatorClass);1442481573;Creates a new type info for a_@param arrayClass The class of the array (such as int[].class)_@param serializer The serializer for the array._@param comparatorClass The class of the array comparator;private PrimitiveArrayTypeInfo(Class<T> arrayClass, TypeSerializer<T> serializer, Class<? extends PrimitiveArrayComparator<T, ?>> comparatorClass) {_		this.arrayClass = Preconditions.checkNotNull(arrayClass)__		this.serializer = Preconditions.checkNotNull(serializer)__		this.comparatorClass = Preconditions.checkNotNull(comparatorClass)___		Preconditions.checkArgument(_			arrayClass.isArray() && arrayClass.getComponentType().isPrimitive(),_			"Class must represent an array of primitives")__	};creates,a,new,type,info,for,a,param,array,class,the,class,of,the,array,such,as,int,class,param,serializer,the,serializer,for,the,array,param,comparator,class,the,class,of,the,array,comparator;private,primitive,array,type,info,class,t,array,class,type,serializer,t,serializer,class,extends,primitive,array,comparator,t,comparator,class,this,array,class,preconditions,check,not,null,array,class,this,serializer,preconditions,check,not,null,serializer,this,comparator,class,preconditions,check,not,null,comparator,class,preconditions,check,argument,array,class,is,array,array,class,get,component,type,is,primitive,class,must,represent,an,array,of,primitives
PrimitiveArrayTypeInfo -> private PrimitiveArrayTypeInfo(Class<T> arrayClass, TypeSerializer<T> serializer, Class<? extends PrimitiveArrayComparator<T, ?>> comparatorClass);1445001971;Creates a new type info for a_@param arrayClass The class of the array (such as int[].class)_@param serializer The serializer for the array._@param comparatorClass The class of the array comparator;private PrimitiveArrayTypeInfo(Class<T> arrayClass, TypeSerializer<T> serializer, Class<? extends PrimitiveArrayComparator<T, ?>> comparatorClass) {_		this.arrayClass = Preconditions.checkNotNull(arrayClass)__		this.serializer = Preconditions.checkNotNull(serializer)__		this.comparatorClass = Preconditions.checkNotNull(comparatorClass)___		Preconditions.checkArgument(_			arrayClass.isArray() && arrayClass.getComponentType().isPrimitive(),_			"Class must represent an array of primitives")__	};creates,a,new,type,info,for,a,param,array,class,the,class,of,the,array,such,as,int,class,param,serializer,the,serializer,for,the,array,param,comparator,class,the,class,of,the,array,comparator;private,primitive,array,type,info,class,t,array,class,type,serializer,t,serializer,class,extends,primitive,array,comparator,t,comparator,class,this,array,class,preconditions,check,not,null,array,class,this,serializer,preconditions,check,not,null,serializer,this,comparator,class,preconditions,check,not,null,comparator,class,preconditions,check,argument,array,class,is,array,array,class,get,component,type,is,primitive,class,must,represent,an,array,of,primitives
PrimitiveArrayTypeInfo -> private PrimitiveArrayTypeInfo(Class<T> arrayClass, TypeSerializer<T> serializer, Class<? extends PrimitiveArrayComparator<T, ?>> comparatorClass);1454679829;Creates a new type info for a_@param arrayClass The class of the array (such as int[].class)_@param serializer The serializer for the array._@param comparatorClass The class of the array comparator;private PrimitiveArrayTypeInfo(Class<T> arrayClass, TypeSerializer<T> serializer, Class<? extends PrimitiveArrayComparator<T, ?>> comparatorClass) {_		this.arrayClass = Preconditions.checkNotNull(arrayClass)__		this.serializer = Preconditions.checkNotNull(serializer)__		this.comparatorClass = Preconditions.checkNotNull(comparatorClass)___		Preconditions.checkArgument(_			arrayClass.isArray() && arrayClass.getComponentType().isPrimitive(),_			"Class must represent an array of primitives")__	};creates,a,new,type,info,for,a,param,array,class,the,class,of,the,array,such,as,int,class,param,serializer,the,serializer,for,the,array,param,comparator,class,the,class,of,the,array,comparator;private,primitive,array,type,info,class,t,array,class,type,serializer,t,serializer,class,extends,primitive,array,comparator,t,comparator,class,this,array,class,preconditions,check,not,null,array,class,this,serializer,preconditions,check,not,null,serializer,this,comparator,class,preconditions,check,not,null,comparator,class,preconditions,check,argument,array,class,is,array,array,class,get,component,type,is,primitive,class,must,represent,an,array,of,primitives
PrimitiveArrayTypeInfo -> private PrimitiveArrayTypeInfo(Class<T> arrayClass, TypeSerializer<T> serializer, Class<? extends PrimitiveArrayComparator<T, ?>> comparatorClass);1455101486;Creates a new type info for a_@param arrayClass The class of the array (such as int[].class)_@param serializer The serializer for the array._@param comparatorClass The class of the array comparator;private PrimitiveArrayTypeInfo(Class<T> arrayClass, TypeSerializer<T> serializer, Class<? extends PrimitiveArrayComparator<T, ?>> comparatorClass) {_		this.arrayClass = Preconditions.checkNotNull(arrayClass)__		this.serializer = Preconditions.checkNotNull(serializer)__		this.comparatorClass = Preconditions.checkNotNull(comparatorClass)___		Preconditions.checkArgument(_			arrayClass.isArray() && arrayClass.getComponentType().isPrimitive(),_			"Class must represent an array of primitives")__	};creates,a,new,type,info,for,a,param,array,class,the,class,of,the,array,such,as,int,class,param,serializer,the,serializer,for,the,array,param,comparator,class,the,class,of,the,array,comparator;private,primitive,array,type,info,class,t,array,class,type,serializer,t,serializer,class,extends,primitive,array,comparator,t,comparator,class,this,array,class,preconditions,check,not,null,array,class,this,serializer,preconditions,check,not,null,serializer,this,comparator,class,preconditions,check,not,null,comparator,class,preconditions,check,argument,array,class,is,array,array,class,get,component,type,is,primitive,class,must,represent,an,array,of,primitives
PrimitiveArrayTypeInfo -> private PrimitiveArrayTypeInfo(Class<T> arrayClass, TypeSerializer<T> serializer, Class<? extends PrimitiveArrayComparator<T, ?>> comparatorClass);1460741894;Creates a new type info for a_@param arrayClass The class of the array (such as int[].class)_@param serializer The serializer for the array._@param comparatorClass The class of the array comparator;private PrimitiveArrayTypeInfo(Class<T> arrayClass, TypeSerializer<T> serializer, Class<? extends PrimitiveArrayComparator<T, ?>> comparatorClass) {_		this.arrayClass = checkNotNull(arrayClass)__		this.serializer = checkNotNull(serializer)__		this.comparatorClass = checkNotNull(comparatorClass)___		checkArgument(_			arrayClass.isArray() && arrayClass.getComponentType().isPrimitive(),_			"Class must represent an array of primitives")__	};creates,a,new,type,info,for,a,param,array,class,the,class,of,the,array,such,as,int,class,param,serializer,the,serializer,for,the,array,param,comparator,class,the,class,of,the,array,comparator;private,primitive,array,type,info,class,t,array,class,type,serializer,t,serializer,class,extends,primitive,array,comparator,t,comparator,class,this,array,class,check,not,null,array,class,this,serializer,check,not,null,serializer,this,comparator,class,check,not,null,comparator,class,check,argument,array,class,is,array,array,class,get,component,type,is,primitive,class,must,represent,an,array,of,primitives
PrimitiveArrayTypeInfo -> private PrimitiveArrayTypeInfo(Class<T> arrayClass, TypeSerializer<T> serializer, Class<? extends PrimitiveArrayComparator<T, ?>> comparatorClass);1480022562;Creates a new type info for a_@param arrayClass The class of the array (such as int[].class)_@param serializer The serializer for the array._@param comparatorClass The class of the array comparator;private PrimitiveArrayTypeInfo(Class<T> arrayClass, TypeSerializer<T> serializer, Class<? extends PrimitiveArrayComparator<T, ?>> comparatorClass) {_		this.arrayClass = checkNotNull(arrayClass)__		this.serializer = checkNotNull(serializer)__		this.comparatorClass = checkNotNull(comparatorClass)___		checkArgument(_			arrayClass.isArray() && arrayClass.getComponentType().isPrimitive(),_			"Class must represent an array of primitives")__	};creates,a,new,type,info,for,a,param,array,class,the,class,of,the,array,such,as,int,class,param,serializer,the,serializer,for,the,array,param,comparator,class,the,class,of,the,array,comparator;private,primitive,array,type,info,class,t,array,class,type,serializer,t,serializer,class,extends,primitive,array,comparator,t,comparator,class,this,array,class,check,not,null,array,class,this,serializer,check,not,null,serializer,this,comparator,class,check,not,null,comparator,class,check,argument,array,class,is,array,array,class,get,component,type,is,primitive,class,must,represent,an,array,of,primitives
PrimitiveArrayTypeInfo -> private PrimitiveArrayTypeInfo(Class<T> arrayClass, TypeSerializer<T> serializer, Class<? extends PrimitiveArrayComparator<T, ?>> comparatorClass);1480022575;Creates a new type info for a_@param arrayClass The class of the array (such as int[].class)_@param serializer The serializer for the array._@param comparatorClass The class of the array comparator;private PrimitiveArrayTypeInfo(Class<T> arrayClass, TypeSerializer<T> serializer, Class<? extends PrimitiveArrayComparator<T, ?>> comparatorClass) {_		this.arrayClass = checkNotNull(arrayClass)__		this.serializer = checkNotNull(serializer)__		this.comparatorClass = checkNotNull(comparatorClass)___		checkArgument(_			arrayClass.isArray() && arrayClass.getComponentType().isPrimitive(),_			"Class must represent an array of primitives")__	};creates,a,new,type,info,for,a,param,array,class,the,class,of,the,array,such,as,int,class,param,serializer,the,serializer,for,the,array,param,comparator,class,the,class,of,the,array,comparator;private,primitive,array,type,info,class,t,array,class,type,serializer,t,serializer,class,extends,primitive,array,comparator,t,comparator,class,this,array,class,check,not,null,array,class,this,serializer,check,not,null,serializer,this,comparator,class,check,not,null,comparator,class,check,argument,array,class,is,array,array,class,get,component,type,is,primitive,class,must,represent,an,array,of,primitives
PrimitiveArrayTypeInfo -> private PrimitiveArrayTypeInfo(Class<T> arrayClass, TypeSerializer<T> serializer, Class<? extends PrimitiveArrayComparator<T, ?>> comparatorClass);1524407314;Creates a new type info for the primitive type array.__@param arrayClass The class of the array (such as int[].class)_@param serializer The serializer for the array._@param comparatorClass The class of the array comparator;private PrimitiveArrayTypeInfo(Class<T> arrayClass, TypeSerializer<T> serializer, Class<? extends PrimitiveArrayComparator<T, ?>> comparatorClass) {_		this.arrayClass = checkNotNull(arrayClass)__		this.serializer = checkNotNull(serializer)__		this.comparatorClass = checkNotNull(comparatorClass)___		checkArgument(_			arrayClass.isArray() && arrayClass.getComponentType().isPrimitive(),_			"Class must represent an array of primitives")__	};creates,a,new,type,info,for,the,primitive,type,array,param,array,class,the,class,of,the,array,such,as,int,class,param,serializer,the,serializer,for,the,array,param,comparator,class,the,class,of,the,array,comparator;private,primitive,array,type,info,class,t,array,class,type,serializer,t,serializer,class,extends,primitive,array,comparator,t,comparator,class,this,array,class,check,not,null,array,class,this,serializer,check,not,null,serializer,this,comparator,class,check,not,null,comparator,class,check,argument,array,class,is,array,array,class,get,component,type,is,primitive,class,must,represent,an,array,of,primitives
