commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public Class<?> getRegisteredClass() {     return registeredClass. }
false;public;0;3;;public SerializerDefinitionType getSerializerDefinitionType() {     return serializerDefinitionType. }
false;public;0;4;;@Nullable public Class<? extends Serializer<?>> getSerializerClass() {     return serializerClass. }
false;public;0;4;;@Nullable public ExecutionConfig.SerializableSerializer<? extends Serializer<?>> getSerializableSerializerInstance() {     return serializableSerializerInstance. }
false;public;1;14;;public Serializer<?> getSerializer(Kryo kryo) {     switch(serializerDefinitionType) {         case UNSPECIFIED:             return null.         case CLASS:             return ReflectionSerializerFactory.makeSerializer(kryo, serializerClass, registeredClass).         case INSTANCE:             return serializableSerializerInstance.getSerializer().         default:             // this should not happen. adding as a guard for the future             throw new IllegalStateException("Unrecognized Kryo registration serializer definition type: " + serializerDefinitionType).     } }
false;public;0;7;;public boolean isDummy() {     return registeredClass.equals(KryoRegistrationSerializerConfigSnapshot.DummyRegisteredClass.class) || (serializerClass != null && serializerClass.equals(KryoRegistrationSerializerConfigSnapshot.DummyKryoSerializerClass.class)) || (serializableSerializerInstance != null && serializableSerializerInstance.getSerializer() instanceof KryoRegistrationSerializerConfigSnapshot.DummyKryoSerializerClass). }
false;public;1;21;;@Override public boolean equals(Object obj) {     if (obj == this) {         return true.     }     if (obj == null) {         return false.     }     if (obj instanceof KryoRegistration) {         KryoRegistration other = (KryoRegistration) obj.         // we cannot include the serializer instances here because they don't implement the equals method         return serializerDefinitionType == other.serializerDefinitionType && registeredClass == other.registeredClass && serializerClass == other.serializerClass.     } else {         return false.     } }
false;public;0;11;;@Override public int hashCode() {     int result = serializerDefinitionType.hashCode().     result = 31 * result + registeredClass.hashCode().     if (serializerClass != null) {         result = 31 * result + serializerClass.hashCode().     }     return result. }
