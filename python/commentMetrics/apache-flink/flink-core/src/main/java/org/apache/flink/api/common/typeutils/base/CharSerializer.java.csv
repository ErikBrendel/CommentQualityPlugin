commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isImmutableType() {     return true. }
false;public;0;4;;@Override public Character createInstance() {     return ZERO. }
false;public;1;4;;@Override public Character copy(Character from) {     return from. }
false;public;2;4;;@Override public Character copy(Character from, Character reuse) {     return from. }
false;public;0;4;;@Override public int getLength() {     return 2. }
false;public;2;4;;@Override public void serialize(Character record, DataOutputView target) throws IOException {     target.writeChar(record). }
false;public;1;4;;@Override public Character deserialize(DataInputView source) throws IOException {     return source.readChar(). }
false;public;2;4;;@Override public Character deserialize(Character reuse, DataInputView source) throws IOException {     return deserialize(source). }
false;public;2;4;;@Override public void copy(DataInputView source, DataOutputView target) throws IOException {     target.writeChar(source.readChar()). }
false;public;0;4;;@Override public TypeSerializerSnapshot<Character> snapshotConfiguration() {     return new CharSerializerSnapshot(). }
