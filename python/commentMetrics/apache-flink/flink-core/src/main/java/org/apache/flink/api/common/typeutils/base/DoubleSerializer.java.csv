commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isImmutableType() {     return true. }
false;public;0;4;;@Override public Double createInstance() {     return ZERO. }
false;public;1;4;;@Override public Double copy(Double from) {     return from. }
false;public;2;4;;@Override public Double copy(Double from, Double reuse) {     return from. }
false;public;0;4;;@Override public int getLength() {     return 8. }
false;public;2;4;;@Override public void serialize(Double record, DataOutputView target) throws IOException {     target.writeDouble(record). }
false;public;1;4;;@Override public Double deserialize(DataInputView source) throws IOException {     return source.readDouble(). }
false;public;2;4;;@Override public Double deserialize(Double reuse, DataInputView source) throws IOException {     return deserialize(source). }
false;public;2;4;;@Override public void copy(DataInputView source, DataOutputView target) throws IOException {     target.writeDouble(source.readDouble()). }
false;public;0;4;;@Override public TypeSerializerSnapshot<Double> snapshotConfiguration() {     return new DoubleSerializerSnapshot(). }
