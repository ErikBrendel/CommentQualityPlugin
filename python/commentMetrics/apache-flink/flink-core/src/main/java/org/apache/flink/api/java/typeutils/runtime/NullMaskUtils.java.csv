commented;modifiers;parameterAmount;loc;comment;code
false;public,static;3;26;;public static void writeNullMask(int len, Row value, DataOutputView target) throws IOException {     int b = 0x00.     int bytePos = 0.     int fieldPos = 0.     int numPos = 0.     while (fieldPos < len) {         b = 0x00.         // set bits in byte         bytePos = 0.         numPos = Math.min(8, len - fieldPos).         while (bytePos < numPos) {             b = b << 1.             // set bit if field is null             if (value.getField(fieldPos + bytePos) == null) {                 b |= 0x01.             }             bytePos += 1.         }         fieldPos += numPos.         // shift bits if last byte is not completely filled         b <<= (8 - bytePos).         // write byte         target.writeByte(b).     } }
false;public,static;3;23;;public static void readIntoNullMask(int len, DataInputView source, boolean[] nullMask) throws IOException {     int b = 0x00.     int bytePos = 0.     int fieldPos = 0.     int numPos = 0.     while (fieldPos < len) {         // read byte         b = source.readUnsignedByte().         bytePos = 0.         numPos = Math.min(8, len - fieldPos).         while (bytePos < numPos) {             nullMask[fieldPos + bytePos] = (b & 0x80) > 0.             b = b << 1.             bytePos += 1.         }         fieldPos += numPos.     } }
false;public,static;4;26;;public static void readIntoAndCopyNullMask(int len, DataInputView source, DataOutputView target, boolean[] nullMask) throws IOException {     int b = 0x00.     int bytePos = 0.     int fieldPos = 0.     int numPos = 0.     while (fieldPos < len) {         // read byte         b = source.readUnsignedByte().         // copy byte         target.writeByte(b).         bytePos = 0.         numPos = Math.min(8, len - fieldPos).         while (bytePos < numPos) {             nullMask[fieldPos + bytePos] = (b & 0x80) > 0.             b = b << 1.             bytePos += 1.         }         fieldPos += numPos.     } }
