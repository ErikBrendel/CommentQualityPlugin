commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public InputFormat<OT, S> getReplicatedInputFormat() {     return this.replicatedIF. }
false;public;1;4;;@Override public void configure(Configuration parameters) {     this.replicatedIF.configure(parameters). }
false;public;1;4;;@Override public BaseStatistics getStatistics(BaseStatistics cachedStatistics) throws IOException {     return this.replicatedIF.getStatistics(cachedStatistics). }
false;public;1;4;;@Override public S[] createInputSplits(int minNumSplits) throws IOException {     return this.replicatedIF.createInputSplits(minNumSplits). }
false;public;1;4;;@Override public InputSplitAssigner getInputSplitAssigner(S[] inputSplits) {     return new ReplicatingInputSplitAssigner(inputSplits). }
false;public;1;4;;@Override public void open(S split) throws IOException {     this.replicatedIF.open(split). }
false;public;0;4;;@Override public boolean reachedEnd() throws IOException {     return this.replicatedIF.reachedEnd(). }
false;public;1;4;;@Override public OT nextRecord(OT reuse) throws IOException {     return this.replicatedIF.nextRecord(reuse). }
false;public;0;4;;@Override public void close() throws IOException {     this.replicatedIF.close(). }
false;public;1;6;;@Override public void setRuntimeContext(RuntimeContext context) {     if (this.replicatedIF instanceof RichInputFormat) {         ((RichInputFormat) this.replicatedIF).setRuntimeContext(context).     } }
false;public;0;8;;@Override public RuntimeContext getRuntimeContext() {     if (this.replicatedIF instanceof RichInputFormat) {         return ((RichInputFormat) this.replicatedIF).getRuntimeContext().     } else {         throw new RuntimeException("The underlying input format to this ReplicatingInputFormat isn't context aware").     } }
false;public;0;6;;@Override public void openInputFormat() throws IOException {     if (this.replicatedIF instanceof RichInputFormat) {         ((RichInputFormat) this.replicatedIF).openInputFormat().     } }
false;public;0;6;;@Override public void closeInputFormat() throws IOException {     if (this.replicatedIF instanceof RichInputFormat) {         ((RichInputFormat) this.replicatedIF).closeInputFormat().     } }
