commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * @param value  *            The value to add to the accumulator object  */ ;/**  * @param value  *            The value to add to the accumulator object  */ void add(V value).
true;;0;1;/**  * @return local The local value from the current UDF context  */ ;/**  * @return local The local value from the current UDF context  */ R getLocalValue().
true;;0;1;/**  * Reset the local value. This only affects the current UDF context.  */ ;/**  * Reset the local value. This only affects the current UDF context.  */ void resetLocal().
true;;1;1;/**  * Used by system internally to merge the collected parts of an accumulator  * at the end of the job.  *  * @param other Reference to accumulator to merge in.  */ ;/**  * Used by system internally to merge the collected parts of an accumulator  * at the end of the job.  *  * @param other Reference to accumulator to merge in.  */ void merge(Accumulator<V, R> other).
true;;0;1;/**  * Duplicates the accumulator. All subclasses need to properly implement  * cloning and cannot throw a {@link java.lang.CloneNotSupportedException}  *  * @return The duplicated accumulator.  */ ;/**  * Duplicates the accumulator. All subclasses need to properly implement  * cloning and cannot throw a {@link java.lang.CloneNotSupportedException}  *  * @return The duplicated accumulator.  */ Accumulator<V, R> clone().
