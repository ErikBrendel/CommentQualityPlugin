# id;timestamp;commentText;codeText;commentWords;codeWords
InputSplitSource -> T[] createInputSplits(int minNumSplits) throws Exception_;1411236168;Computes the input splits. The given minimum number of splits is a hint as to how_many splits are desired.__@param minNumSplits Number of minimal input splits, as a hint._@return An array of input splits.__@throws Exception Exceptions when creating the input splits may be forwarded and will cause the_execution to permanently fail.;T[] createInputSplits(int minNumSplits) throws Exception_;computes,the,input,splits,the,given,minimum,number,of,splits,is,a,hint,as,to,how,many,splits,are,desired,param,min,num,splits,number,of,minimal,input,splits,as,a,hint,return,an,array,of,input,splits,throws,exception,exceptions,when,creating,the,input,splits,may,be,forwarded,and,will,cause,the,execution,to,permanently,fail;t,create,input,splits,int,min,num,splits,throws,exception
InputSplitSource -> T[] createInputSplits(int minNumSplits) throws Exception_;1411473593;Computes the input splits. The given minimum number of splits is a hint as to how_many splits are desired.__@param minNumSplits Number of minimal input splits, as a hint._@return An array of input splits.__@throws Exception Exceptions when creating the input splits may be forwarded and will cause the_execution to permanently fail.;T[] createInputSplits(int minNumSplits) throws Exception_;computes,the,input,splits,the,given,minimum,number,of,splits,is,a,hint,as,to,how,many,splits,are,desired,param,min,num,splits,number,of,minimal,input,splits,as,a,hint,return,an,array,of,input,splits,throws,exception,exceptions,when,creating,the,input,splits,may,be,forwarded,and,will,cause,the,execution,to,permanently,fail;t,create,input,splits,int,min,num,splits,throws,exception
InputSplitSource -> T[] createInputSplits(int minNumSplits) throws Exception_;1421698945;Computes the input splits. The given minimum number of splits is a hint as to how_many splits are desired.__@param minNumSplits Number of minimal input splits, as a hint._@return An array of input splits.__@throws Exception Exceptions when creating the input splits may be forwarded and will cause the_execution to permanently fail.;T[] createInputSplits(int minNumSplits) throws Exception_;computes,the,input,splits,the,given,minimum,number,of,splits,is,a,hint,as,to,how,many,splits,are,desired,param,min,num,splits,number,of,minimal,input,splits,as,a,hint,return,an,array,of,input,splits,throws,exception,exceptions,when,creating,the,input,splits,may,be,forwarded,and,will,cause,the,execution,to,permanently,fail;t,create,input,splits,int,min,num,splits,throws,exception
InputSplitSource -> T[] createInputSplits(int minNumSplits) throws Exception_;1452178883;Computes the input splits. The given minimum number of splits is a hint as to how_many splits are desired.__@param minNumSplits Number of minimal input splits, as a hint._@return An array of input splits.__@throws Exception Exceptions when creating the input splits may be forwarded and will cause the_execution to permanently fail.;T[] createInputSplits(int minNumSplits) throws Exception_;computes,the,input,splits,the,given,minimum,number,of,splits,is,a,hint,as,to,how,many,splits,are,desired,param,min,num,splits,number,of,minimal,input,splits,as,a,hint,return,an,array,of,input,splits,throws,exception,exceptions,when,creating,the,input,splits,may,be,forwarded,and,will,cause,the,execution,to,permanently,fail;t,create,input,splits,int,min,num,splits,throws,exception
InputSplitSource -> InputSplitAssigner getInputSplitAssigner(T[] inputSplits)_;1411236168;Returns the assigner for the input splits. Assigner determines which parallel instance of the_input format gets which input split.__@return The input split assigner.;InputSplitAssigner getInputSplitAssigner(T[] inputSplits)_;returns,the,assigner,for,the,input,splits,assigner,determines,which,parallel,instance,of,the,input,format,gets,which,input,split,return,the,input,split,assigner;input,split,assigner,get,input,split,assigner,t,input,splits
InputSplitSource -> InputSplitAssigner getInputSplitAssigner(T[] inputSplits)_;1411473593;Returns the assigner for the input splits. Assigner determines which parallel instance of the_input format gets which input split.__@return The input split assigner.;InputSplitAssigner getInputSplitAssigner(T[] inputSplits)_;returns,the,assigner,for,the,input,splits,assigner,determines,which,parallel,instance,of,the,input,format,gets,which,input,split,return,the,input,split,assigner;input,split,assigner,get,input,split,assigner,t,input,splits
InputSplitSource -> InputSplitAssigner getInputSplitAssigner(T[] inputSplits)_;1421698945;Returns the assigner for the input splits. Assigner determines which parallel instance of the_input format gets which input split.__@return The input split assigner.;InputSplitAssigner getInputSplitAssigner(T[] inputSplits)_;returns,the,assigner,for,the,input,splits,assigner,determines,which,parallel,instance,of,the,input,format,gets,which,input,split,return,the,input,split,assigner;input,split,assigner,get,input,split,assigner,t,input,splits
InputSplitSource -> InputSplitAssigner getInputSplitAssigner(T[] inputSplits)_;1452178883;Returns the assigner for the input splits. Assigner determines which parallel instance of the_input format gets which input split.__@return The input split assigner.;InputSplitAssigner getInputSplitAssigner(T[] inputSplits)_;returns,the,assigner,for,the,input,splits,assigner,determines,which,parallel,instance,of,the,input,format,gets,which,input,split,return,the,input,split,assigner;input,split,assigner,get,input,split,assigner,t,input,splits
