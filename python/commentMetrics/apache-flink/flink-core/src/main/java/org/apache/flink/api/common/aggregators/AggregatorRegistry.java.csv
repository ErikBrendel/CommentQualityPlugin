commented;modifiers;parameterAmount;loc;comment;code
false;public;2;9;;// -------------------------------------------------------------------------------------------- public void registerAggregator(String name, Aggregator<?> aggregator) {     if (name == null || aggregator == null) {         throw new IllegalArgumentException("Name and aggregator must not be null").     }     if (this.registry.containsKey(name)) {         throw new RuntimeException("An aggregator is already registered under the given name.").     }     this.registry.put(name, aggregator). }
false;public;0;10;;public Collection<AggregatorWithName<?>> getAllRegisteredAggregators() {     ArrayList<AggregatorWithName<?>> list = new ArrayList<AggregatorWithName<?>>(this.registry.size()).     for (Map.Entry<String, Aggregator<?>> entry : this.registry.entrySet()) {         @SuppressWarnings("unchecked")         Aggregator<Value> valAgg = (Aggregator<Value>) entry.getValue().         list.add(new AggregatorWithName<>(entry.getKey(), valAgg)).     }     return list. }
false;public;3;18;;public <T extends Value> void registerAggregationConvergenceCriterion(String name, Aggregator<T> aggregator, ConvergenceCriterion<T> convergenceCheck) {     if (name == null || aggregator == null || convergenceCheck == null) {         throw new IllegalArgumentException("Name, aggregator, or convergence criterion must not be null").     }     Aggregator<?> genAgg = aggregator.     Aggregator<?> previous = this.registry.get(name).     if (previous != null && previous != genAgg) {         throw new RuntimeException("An aggregator is already registered under the given name.").     }     this.registry.put(name, genAgg).     this.convergenceCriterion = convergenceCheck.     this.convergenceCriterionAggregatorName = name. }
false;public;0;3;;public String getConvergenceCriterionAggregatorName() {     return this.convergenceCriterionAggregatorName. }
false;public;0;3;;public ConvergenceCriterion<?> getConvergenceCriterion() {     return this.convergenceCriterion. }
false;public;1;5;;public void addAll(AggregatorRegistry registry) {     this.registry.putAll(registry.registry).     this.convergenceCriterion = registry.convergenceCriterion.     this.convergenceCriterionAggregatorName = registry.convergenceCriterionAggregatorName. }
