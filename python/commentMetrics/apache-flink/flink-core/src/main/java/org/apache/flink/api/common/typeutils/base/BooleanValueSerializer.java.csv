commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isImmutableType() {     return false. }
false;public;0;4;;@Override public BooleanValue createInstance() {     return new BooleanValue(). }
false;public;1;6;;@Override public BooleanValue copy(BooleanValue from) {     BooleanValue result = new BooleanValue().     result.setValue(from.getValue()).     return result. }
false;public;2;5;;@Override public BooleanValue copy(BooleanValue from, BooleanValue reuse) {     reuse.setValue(from.getValue()).     return reuse. }
false;public;0;4;;@Override public int getLength() {     return 1. }
false;public;2;4;;@Override public void serialize(BooleanValue record, DataOutputView target) throws IOException {     record.write(target). }
false;public;1;4;;@Override public BooleanValue deserialize(DataInputView source) throws IOException {     return deserialize(new BooleanValue(), source). }
false;public;2;5;;@Override public BooleanValue deserialize(BooleanValue reuse, DataInputView source) throws IOException {     reuse.read(source).     return reuse. }
false;public;2;4;;@Override public void copy(DataInputView source, DataOutputView target) throws IOException {     target.writeBoolean(source.readBoolean()). }
false;public;0;4;;@Override public TypeSerializerSnapshot<BooleanValue> snapshotConfiguration() {     return new BooleanValueSerializerSnapshot(). }
