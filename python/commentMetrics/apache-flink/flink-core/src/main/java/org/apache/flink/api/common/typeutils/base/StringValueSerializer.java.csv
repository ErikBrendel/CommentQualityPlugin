commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isImmutableType() {     return false. }
false;public;0;4;;@Override public StringValue createInstance() {     return new StringValue(). }
false;public;1;4;;@Override public StringValue copy(StringValue from) {     return copy(from, new StringValue()). }
false;public;2;5;;@Override public StringValue copy(StringValue from, StringValue reuse) {     reuse.setValue(from).     return reuse. }
false;public;0;4;;@Override public int getLength() {     return -1. }
false;public;2;4;;@Override public void serialize(StringValue record, DataOutputView target) throws IOException {     record.write(target). }
false;public;1;4;;@Override public StringValue deserialize(DataInputView source) throws IOException {     return deserialize(new StringValue(), source). }
false;public;2;5;;@Override public StringValue deserialize(StringValue reuse, DataInputView source) throws IOException {     reuse.read(source).     return reuse. }
false;public;2;27;;@Override public void copy(DataInputView source, DataOutputView target) throws IOException {     int len = source.readUnsignedByte().     target.writeByte(len).     if (len >= HIGH_BIT) {         int shift = 7.         int curr.         len = len & 0x7f.         while ((curr = source.readUnsignedByte()) >= HIGH_BIT) {             target.writeByte(curr).             len |= (curr & 0x7f) << shift.             shift += 7.         }         target.writeByte(curr).         len |= curr << shift.     }     for (int i = 0. i < len. i++) {         int c = source.readUnsignedByte().         target.writeByte(c).         while (c >= HIGH_BIT) {             c = source.readUnsignedByte().             target.writeByte(c).         }     } }
false;public;0;4;;@Override public TypeSerializerSnapshot<StringValue> snapshotConfiguration() {     return new StringValueSerializerSnapshot(). }
