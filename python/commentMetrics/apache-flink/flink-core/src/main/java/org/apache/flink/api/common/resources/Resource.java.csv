commented;modifiers;parameterAmount;loc;comment;code
false;public;1;18;;public Resource merge(Resource other) {     Preconditions.checkArgument(getClass() == other.getClass(), "Merge with different resource resourceAggregateType").     Preconditions.checkArgument(this.name.equals(other.name), "Merge with different resource name").     Preconditions.checkArgument(this.resourceAggregateType == other.resourceAggregateType, "Merge with different aggregate resourceAggregateType").     final double aggregatedValue.     switch(resourceAggregateType) {         case AGGREGATE_TYPE_MAX:             aggregatedValue = Math.max(other.value, this.value).             break.         case AGGREGATE_TYPE_SUM:         default:             aggregatedValue = this.value + other.value.     }     return create(aggregatedValue, resourceAggregateType). }
false;public;1;12;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     } else if (o != null && getClass() == o.getClass()) {         Resource other = (Resource) o.         return name.equals(other.name) && resourceAggregateType == other.resourceAggregateType && value == other.value.     } else {         return false.     } }
false;public;0;7;;@Override public int hashCode() {     int result = name.hashCode().     result = 31 * result + resourceAggregateType.ordinal().     result = 31 * result + (int) value.     return result. }
false;public;0;3;;public String getName() {     return name. }
false;public;0;3;;public ResourceAggregateType getResourceAggregateType() {     return this.resourceAggregateType. }
false;public;0;3;;public double getValue() {     return this.value. }
true;protected,abstract;2;1;/**  * Create a resource of the same resource resourceAggregateType.  *  * @param value The value of the resource  * @param type The aggregate resourceAggregateType of the resource  * @return A new instance of the sub resource  */ ;/**  * Create a resource of the same resource resourceAggregateType.  *  * @param value The value of the resource  * @param type The aggregate resourceAggregateType of the resource  * @return A new instance of the sub resource  */ protected abstract Resource create(double value, ResourceAggregateType type).
