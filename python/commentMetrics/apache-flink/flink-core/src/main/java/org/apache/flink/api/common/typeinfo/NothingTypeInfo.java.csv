commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Override @PublicEvolving public boolean isBasicType() {     return false. }
false;public;0;5;;@Override @PublicEvolving public boolean isTupleType() {     return false. }
false;public;0;5;;@Override @PublicEvolving public int getArity() {     return 0. }
false;public;0;5;;@Override @PublicEvolving public int getTotalFields() {     return 1. }
false;public;0;5;;@Override @PublicEvolving public Class<Nothing> getTypeClass() {     return Nothing.class. }
false;public;0;5;;@Override @PublicEvolving public boolean isKeyType() {     return false. }
false;public;1;5;;@Override @PublicEvolving public TypeSerializer<Nothing> createSerializer(ExecutionConfig executionConfig) {     throw new RuntimeException("The Nothing type cannot have a serializer."). }
false;public;0;4;;@Override public String toString() {     return getClass().getSimpleName(). }
false;public;1;10;;@Override public boolean equals(Object obj) {     if (obj instanceof NothingTypeInfo) {         NothingTypeInfo nothingTypeInfo = (NothingTypeInfo) obj.         return nothingTypeInfo.canEqual(this).     } else {         return false.     } }
false;public;0;4;;@Override public int hashCode() {     return NothingTypeInfo.class.hashCode(). }
false;public;1;4;;@Override public boolean canEqual(Object obj) {     return obj instanceof NothingTypeInfo. }
