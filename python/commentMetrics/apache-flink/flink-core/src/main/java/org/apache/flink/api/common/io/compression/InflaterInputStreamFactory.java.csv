commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Creates a {@link java.util.zip.InflaterInputStream} that wraps the given input stream.  * @param in is the compressed input stream  * @return the inflated input stream  */ ;/**  * Creates a {@link java.util.zip.InflaterInputStream} that wraps the given input stream.  * @param in is the compressed input stream  * @return the inflated input stream  */ T create(InputStream in) throws IOException.
true;;0;1;/**  * Lists a collection of typical file extensions (e.g., "gz", "gzip") that are associated with the compression  * algorithm in the {@link java.util.zip.InflaterInputStream} {@code T}.  * @return a (possibly empty) collection of lower-case file extensions, without the period  */ ;/**  * Lists a collection of typical file extensions (e.g., "gz", "gzip") that are associated with the compression  * algorithm in the {@link java.util.zip.InflaterInputStream} {@code T}.  * @return a (possibly empty) collection of lower-case file extensions, without the period  */ Collection<String> getCommonFileExtensions().
