# id;timestamp;commentText;codeText;commentWords;codeWords
GenericDataSourceBase -> public void setSplitDataProperties(SplitDataProperties<OUT> splitDataProperties);1424445001;Sets properties of input splits for this data source._Split properties can help to generate more efficient execution plans._<br>_<b>_IMPORTANT: Providing wrong split data properties can cause wrong results!_</b>__@param splitDataProperties The data properties of this data source's splits.;public void setSplitDataProperties(SplitDataProperties<OUT> splitDataProperties) {_		this.splitProperties = splitDataProperties__	};sets,properties,of,input,splits,for,this,data,source,split,properties,can,help,to,generate,more,efficient,execution,plans,br,b,important,providing,wrong,split,data,properties,can,cause,wrong,results,b,param,split,data,properties,the,data,properties,of,this,data,source,s,splits;public,void,set,split,data,properties,split,data,properties,out,split,data,properties,this,split,properties,split,data,properties
GenericDataSourceBase -> public void setSplitDataProperties(SplitDataProperties<OUT> splitDataProperties);1425308868;Sets properties of input splits for this data source._Split properties can help to generate more efficient execution plans._<br>_<b>_IMPORTANT: Providing wrong split data properties can cause wrong results!_</b>__@param splitDataProperties The data properties of this data source's splits.;public void setSplitDataProperties(SplitDataProperties<OUT> splitDataProperties) {_		this.splitProperties = splitDataProperties__	};sets,properties,of,input,splits,for,this,data,source,split,properties,can,help,to,generate,more,efficient,execution,plans,br,b,important,providing,wrong,split,data,properties,can,cause,wrong,results,b,param,split,data,properties,the,data,properties,of,this,data,source,s,splits;public,void,set,split,data,properties,split,data,properties,out,split,data,properties,this,split,properties,split,data,properties
GenericDataSourceBase -> public void setSplitDataProperties(SplitDataProperties<OUT> splitDataProperties);1439469746;Sets properties of input splits for this data source._Split properties can help to generate more efficient execution plans._<br>_<b>_IMPORTANT: Providing wrong split data properties can cause wrong results!_</b>__@param splitDataProperties The data properties of this data source's splits.;public void setSplitDataProperties(SplitDataProperties<OUT> splitDataProperties) {_		this.splitProperties = splitDataProperties__	};sets,properties,of,input,splits,for,this,data,source,split,properties,can,help,to,generate,more,efficient,execution,plans,br,b,important,providing,wrong,split,data,properties,can,cause,wrong,results,b,param,split,data,properties,the,data,properties,of,this,data,source,s,splits;public,void,set,split,data,properties,split,data,properties,out,split,data,properties,this,split,properties,split,data,properties
GenericDataSourceBase -> public void setSplitDataProperties(SplitDataProperties<OUT> splitDataProperties);1455479358;Sets properties of input splits for this data source._Split properties can help to generate more efficient execution plans._<br>_<b>_IMPORTANT: Providing wrong split data properties can cause wrong results!_</b>__@param splitDataProperties The data properties of this data source's splits.;public void setSplitDataProperties(SplitDataProperties<OUT> splitDataProperties) {_		this.splitProperties = splitDataProperties__	};sets,properties,of,input,splits,for,this,data,source,split,properties,can,help,to,generate,more,efficient,execution,plans,br,b,important,providing,wrong,split,data,properties,can,cause,wrong,results,b,param,split,data,properties,the,data,properties,of,this,data,source,s,splits;public,void,set,split,data,properties,split,data,properties,out,split,data,properties,this,split,properties,split,data,properties
GenericDataSourceBase -> public void setSplitDataProperties(SplitDataProperties<OUT> splitDataProperties);1461679220;Sets properties of input splits for this data source._Split properties can help to generate more efficient execution plans._<br>_<b>_IMPORTANT: Providing wrong split data properties can cause wrong results!_</b>__@param splitDataProperties The data properties of this data source's splits.;public void setSplitDataProperties(SplitDataProperties<OUT> splitDataProperties) {_		this.splitProperties = splitDataProperties__	};sets,properties,of,input,splits,for,this,data,source,split,properties,can,help,to,generate,more,efficient,execution,plans,br,b,important,providing,wrong,split,data,properties,can,cause,wrong,results,b,param,split,data,properties,the,data,properties,of,this,data,source,s,splits;public,void,set,split,data,properties,split,data,properties,out,split,data,properties,this,split,properties,split,data,properties
GenericDataSourceBase -> @Override 	public UserCodeWrapper<? extends T> getUserCodeWrapper();1412346153;Gets the class describing the input format._<p>_This method is basically identical to {@link #getFormatWrapper()}.__@return The class describing the input format.__@see org.apache.flink.api.common.operators.Operator#getUserCodeWrapper();@Override_	public UserCodeWrapper<? extends T> getUserCodeWrapper() {_		return this.formatWrapper__	};gets,the,class,describing,the,input,format,p,this,method,is,basically,identical,to,link,get,format,wrapper,return,the,class,describing,the,input,format,see,org,apache,flink,api,common,operators,operator,get,user,code,wrapper;override,public,user,code,wrapper,extends,t,get,user,code,wrapper,return,this,format,wrapper
GenericDataSourceBase -> @Override 	public UserCodeWrapper<? extends T> getUserCodeWrapper();1412346154;Gets the class describing the input format._<p>_This method is basically identical to {@link #getFormatWrapper()}.__@return The class describing the input format.__@see org.apache.flink.api.common.operators.Operator#getUserCodeWrapper();@Override_	public UserCodeWrapper<? extends T> getUserCodeWrapper() {_		return this.formatWrapper__	};gets,the,class,describing,the,input,format,p,this,method,is,basically,identical,to,link,get,format,wrapper,return,the,class,describing,the,input,format,see,org,apache,flink,api,common,operators,operator,get,user,code,wrapper;override,public,user,code,wrapper,extends,t,get,user,code,wrapper,return,this,format,wrapper
GenericDataSourceBase -> @Override 	public UserCodeWrapper<? extends T> getUserCodeWrapper();1412346154;Gets the class describing the input format._<p>_This method is basically identical to {@link #getFormatWrapper()}.__@return The class describing the input format.__@see org.apache.flink.api.common.operators.Operator#getUserCodeWrapper();@Override_	public UserCodeWrapper<? extends T> getUserCodeWrapper() {_		return this.formatWrapper__	};gets,the,class,describing,the,input,format,p,this,method,is,basically,identical,to,link,get,format,wrapper,return,the,class,describing,the,input,format,see,org,apache,flink,api,common,operators,operator,get,user,code,wrapper;override,public,user,code,wrapper,extends,t,get,user,code,wrapper,return,this,format,wrapper
GenericDataSourceBase -> @Override 	public UserCodeWrapper<? extends T> getUserCodeWrapper();1423570503;Gets the class describing the input format._<p>_This method is basically identical to {@link #getFormatWrapper()}.__@return The class describing the input format.__@see org.apache.flink.api.common.operators.Operator#getUserCodeWrapper();@Override_	public UserCodeWrapper<? extends T> getUserCodeWrapper() {_		return this.formatWrapper__	};gets,the,class,describing,the,input,format,p,this,method,is,basically,identical,to,link,get,format,wrapper,return,the,class,describing,the,input,format,see,org,apache,flink,api,common,operators,operator,get,user,code,wrapper;override,public,user,code,wrapper,extends,t,get,user,code,wrapper,return,this,format,wrapper
GenericDataSourceBase -> @Override 	public UserCodeWrapper<? extends T> getUserCodeWrapper();1424445001;Gets the class describing the input format._<p>_This method is basically identical to {@link #getFormatWrapper()}.__@return The class describing the input format.__@see org.apache.flink.api.common.operators.Operator#getUserCodeWrapper();@Override_	public UserCodeWrapper<? extends T> getUserCodeWrapper() {_		return this.formatWrapper__	};gets,the,class,describing,the,input,format,p,this,method,is,basically,identical,to,link,get,format,wrapper,return,the,class,describing,the,input,format,see,org,apache,flink,api,common,operators,operator,get,user,code,wrapper;override,public,user,code,wrapper,extends,t,get,user,code,wrapper,return,this,format,wrapper
GenericDataSourceBase -> @Override 	public UserCodeWrapper<? extends T> getUserCodeWrapper();1425308868;Gets the class describing the input format._<p>_This method is basically identical to {@link #getFormatWrapper()}.__@return The class describing the input format.__@see org.apache.flink.api.common.operators.Operator#getUserCodeWrapper();@Override_	public UserCodeWrapper<? extends T> getUserCodeWrapper() {_		return this.formatWrapper__	};gets,the,class,describing,the,input,format,p,this,method,is,basically,identical,to,link,get,format,wrapper,return,the,class,describing,the,input,format,see,org,apache,flink,api,common,operators,operator,get,user,code,wrapper;override,public,user,code,wrapper,extends,t,get,user,code,wrapper,return,this,format,wrapper
GenericDataSourceBase -> @Override 	public UserCodeWrapper<? extends T> getUserCodeWrapper();1439469746;Gets the class describing the input format._<p>_This method is basically identical to {@link #getFormatWrapper()}.__@return The class describing the input format.__@see org.apache.flink.api.common.operators.Operator#getUserCodeWrapper();@Override_	public UserCodeWrapper<? extends T> getUserCodeWrapper() {_		return this.formatWrapper__	};gets,the,class,describing,the,input,format,p,this,method,is,basically,identical,to,link,get,format,wrapper,return,the,class,describing,the,input,format,see,org,apache,flink,api,common,operators,operator,get,user,code,wrapper;override,public,user,code,wrapper,extends,t,get,user,code,wrapper,return,this,format,wrapper
GenericDataSourceBase -> @Override 	public UserCodeWrapper<? extends T> getUserCodeWrapper();1455479358;Gets the class describing the input format._<p>_This method is basically identical to {@link #getFormatWrapper()}.__@return The class describing the input format.__@see org.apache.flink.api.common.operators.Operator#getUserCodeWrapper();@Override_	public UserCodeWrapper<? extends T> getUserCodeWrapper() {_		return this.formatWrapper__	};gets,the,class,describing,the,input,format,p,this,method,is,basically,identical,to,link,get,format,wrapper,return,the,class,describing,the,input,format,see,org,apache,flink,api,common,operators,operator,get,user,code,wrapper;override,public,user,code,wrapper,extends,t,get,user,code,wrapper,return,this,format,wrapper
GenericDataSourceBase -> @Override 	public UserCodeWrapper<? extends T> getUserCodeWrapper();1461679220;Gets the class describing the input format._<p>_This method is basically identical to {@link #getFormatWrapper()}.__@return The class describing the input format.__@see org.apache.flink.api.common.operators.Operator#getUserCodeWrapper();@Override_	public UserCodeWrapper<? extends T> getUserCodeWrapper() {_		return this.formatWrapper__	};gets,the,class,describing,the,input,format,p,this,method,is,basically,identical,to,link,get,format,wrapper,return,the,class,describing,the,input,format,see,org,apache,flink,api,common,operators,operator,get,user,code,wrapper;override,public,user,code,wrapper,extends,t,get,user,code,wrapper,return,this,format,wrapper
GenericDataSourceBase -> public String getStatisticsKey();1412346153;Gets the key under which statistics about this data source may be obtained from the_statistics cache.__@return The statistics cache key.;public String getStatisticsKey() {_		return this.statisticsKey__	};gets,the,key,under,which,statistics,about,this,data,source,may,be,obtained,from,the,statistics,cache,return,the,statistics,cache,key;public,string,get,statistics,key,return,this,statistics,key
GenericDataSourceBase -> public String getStatisticsKey();1412346154;Gets the key under which statistics about this data source may be obtained from the_statistics cache.__@return The statistics cache key.;public String getStatisticsKey() {_		return this.statisticsKey__	};gets,the,key,under,which,statistics,about,this,data,source,may,be,obtained,from,the,statistics,cache,return,the,statistics,cache,key;public,string,get,statistics,key,return,this,statistics,key
GenericDataSourceBase -> public String getStatisticsKey();1412346154;Gets the key under which statistics about this data source may be obtained from the_statistics cache.__@return The statistics cache key.;public String getStatisticsKey() {_		return this.statisticsKey__	};gets,the,key,under,which,statistics,about,this,data,source,may,be,obtained,from,the,statistics,cache,return,the,statistics,cache,key;public,string,get,statistics,key,return,this,statistics,key
GenericDataSourceBase -> public String getStatisticsKey();1423570503;Gets the key under which statistics about this data source may be obtained from the_statistics cache.__@return The statistics cache key.;public String getStatisticsKey() {_		return this.statisticsKey__	};gets,the,key,under,which,statistics,about,this,data,source,may,be,obtained,from,the,statistics,cache,return,the,statistics,cache,key;public,string,get,statistics,key,return,this,statistics,key
GenericDataSourceBase -> public String getStatisticsKey();1424445001;Gets the key under which statistics about this data source may be obtained from the_statistics cache.__@return The statistics cache key.;public String getStatisticsKey() {_		return this.statisticsKey__	};gets,the,key,under,which,statistics,about,this,data,source,may,be,obtained,from,the,statistics,cache,return,the,statistics,cache,key;public,string,get,statistics,key,return,this,statistics,key
GenericDataSourceBase -> public String getStatisticsKey();1425308868;Gets the key under which statistics about this data source may be obtained from the_statistics cache.__@return The statistics cache key.;public String getStatisticsKey() {_		return this.statisticsKey__	};gets,the,key,under,which,statistics,about,this,data,source,may,be,obtained,from,the,statistics,cache,return,the,statistics,cache,key;public,string,get,statistics,key,return,this,statistics,key
GenericDataSourceBase -> public String getStatisticsKey();1439469746;Gets the key under which statistics about this data source may be obtained from the_statistics cache.__@return The statistics cache key.;public String getStatisticsKey() {_		return this.statisticsKey__	};gets,the,key,under,which,statistics,about,this,data,source,may,be,obtained,from,the,statistics,cache,return,the,statistics,cache,key;public,string,get,statistics,key,return,this,statistics,key
GenericDataSourceBase -> public String getStatisticsKey();1455479358;Gets the key under which statistics about this data source may be obtained from the_statistics cache.__@return The statistics cache key.;public String getStatisticsKey() {_		return this.statisticsKey__	};gets,the,key,under,which,statistics,about,this,data,source,may,be,obtained,from,the,statistics,cache,return,the,statistics,cache,key;public,string,get,statistics,key,return,this,statistics,key
GenericDataSourceBase -> public String getStatisticsKey();1461679220;Gets the key under which statistics about this data source may be obtained from the_statistics cache.__@return The statistics cache key.;public String getStatisticsKey() {_		return this.statisticsKey__	};gets,the,key,under,which,statistics,about,this,data,source,may,be,obtained,from,the,statistics,cache,return,the,statistics,cache,key;public,string,get,statistics,key,return,this,statistics,key
GenericDataSourceBase -> public SplitDataProperties<OUT> getSplitDataProperties();1424445001;Returns the data properties of this data source's splits.__@return The data properties of this data source's splits or null if no properties have been set.;public SplitDataProperties<OUT> getSplitDataProperties() {_		return this.splitProperties__	};returns,the,data,properties,of,this,data,source,s,splits,return,the,data,properties,of,this,data,source,s,splits,or,null,if,no,properties,have,been,set;public,split,data,properties,out,get,split,data,properties,return,this,split,properties
GenericDataSourceBase -> public SplitDataProperties<OUT> getSplitDataProperties();1425308868;Returns the data properties of this data source's splits.__@return The data properties of this data source's splits or null if no properties have been set.;public SplitDataProperties<OUT> getSplitDataProperties() {_		return this.splitProperties__	};returns,the,data,properties,of,this,data,source,s,splits,return,the,data,properties,of,this,data,source,s,splits,or,null,if,no,properties,have,been,set;public,split,data,properties,out,get,split,data,properties,return,this,split,properties
GenericDataSourceBase -> public SplitDataProperties<OUT> getSplitDataProperties();1439469746;Returns the data properties of this data source's splits.__@return The data properties of this data source's splits or null if no properties have been set.;public SplitDataProperties<OUT> getSplitDataProperties() {_		return this.splitProperties__	};returns,the,data,properties,of,this,data,source,s,splits,return,the,data,properties,of,this,data,source,s,splits,or,null,if,no,properties,have,been,set;public,split,data,properties,out,get,split,data,properties,return,this,split,properties
GenericDataSourceBase -> public SplitDataProperties<OUT> getSplitDataProperties();1455479358;Returns the data properties of this data source's splits.__@return The data properties of this data source's splits or null if no properties have been set.;public SplitDataProperties<OUT> getSplitDataProperties() {_		return this.splitProperties__	};returns,the,data,properties,of,this,data,source,s,splits,return,the,data,properties,of,this,data,source,s,splits,or,null,if,no,properties,have,been,set;public,split,data,properties,out,get,split,data,properties,return,this,split,properties
GenericDataSourceBase -> public SplitDataProperties<OUT> getSplitDataProperties();1461679220;Returns the data properties of this data source's splits.__@return The data properties of this data source's splits or null if no properties have been set.;public SplitDataProperties<OUT> getSplitDataProperties() {_		return this.splitProperties__	};returns,the,data,properties,of,this,data,source,s,splits,return,the,data,properties,of,this,data,source,s,splits,or,null,if,no,properties,have,been,set;public,split,data,properties,out,get,split,data,properties,return,this,split,properties
GenericDataSourceBase -> public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo);1412346153;Creates a new instance for the given file using the given input format, using the default name.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator.;public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo) {_		super(operatorInfo, DEFAULT_NAME)__		_		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}_		_		this.formatWrapper = new UserCodeClassWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,using,the,default,name,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator;public,generic,data,source,base,class,extends,t,format,operator,information,out,operator,info,super,operator,info,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,class,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo);1412346154;Creates a new instance for the given file using the given input format, using the default name.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator.;public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo) {_		super(operatorInfo, DEFAULT_NAME)__		_		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}_		_		this.formatWrapper = new UserCodeClassWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,using,the,default,name,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator;public,generic,data,source,base,class,extends,t,format,operator,information,out,operator,info,super,operator,info,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,class,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo);1412346154;Creates a new instance for the given file using the given input format, using the default name.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator.;public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo) {_		super(operatorInfo, DEFAULT_NAME)__		_		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}_		_		this.formatWrapper = new UserCodeClassWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,using,the,default,name,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator;public,generic,data,source,base,class,extends,t,format,operator,information,out,operator,info,super,operator,info,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,class,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo);1423570503;Creates a new instance for the given file using the given input format, using the default name.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator.;public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo) {_		super(operatorInfo, DEFAULT_NAME)__		_		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}_		_		this.formatWrapper = new UserCodeClassWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,using,the,default,name,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator;public,generic,data,source,base,class,extends,t,format,operator,information,out,operator,info,super,operator,info,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,class,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo);1424445001;Creates a new instance for the given file using the given input format, using the default name.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator.;public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo) {_		super(operatorInfo, DEFAULT_NAME)__		_		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}_		_		this.formatWrapper = new UserCodeClassWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,using,the,default,name,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator;public,generic,data,source,base,class,extends,t,format,operator,information,out,operator,info,super,operator,info,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,class,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo);1425308868;Creates a new instance for the given file using the given input format, using the default name.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator.;public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo) {_		super(operatorInfo, DEFAULT_NAME)__		_		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}_		_		this.formatWrapper = new UserCodeClassWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,using,the,default,name,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator;public,generic,data,source,base,class,extends,t,format,operator,information,out,operator,info,super,operator,info,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,class,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo);1439469746;Creates a new instance for the given file using the given input format, using the default name.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator.;public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo) {_		super(operatorInfo, DEFAULT_NAME)__		_		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}_		_		this.formatWrapper = new UserCodeClassWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,using,the,default,name,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator;public,generic,data,source,base,class,extends,t,format,operator,information,out,operator,info,super,operator,info,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,class,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo);1455479358;Creates a new instance for the given file using the given input format, using the default name.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator.;public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo) {_		super(operatorInfo, DEFAULT_NAME)__		_		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}_		_		this.formatWrapper = new UserCodeClassWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,using,the,default,name,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator;public,generic,data,source,base,class,extends,t,format,operator,information,out,operator,info,super,operator,info,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,class,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo);1461679220;Creates a new instance for the given file using the given input format, using the default name.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator.;public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo) {_		super(operatorInfo, DEFAULT_NAME)__		_		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}_		_		this.formatWrapper = new UserCodeClassWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,using,the,default,name,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator;public,generic,data,source,base,class,extends,t,format,operator,information,out,operator,info,super,operator,info,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,class,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo);1412346153;Creates a new instance for the given file using the given input format, using the default name.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator.;public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo) {_		super(operatorInfo, DEFAULT_NAME)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeObjectWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,using,the,default,name,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator;public,generic,data,source,base,t,format,operator,information,out,operator,info,super,operator,info,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,object,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo);1412346154;Creates a new instance for the given file using the given input format, using the default name.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator.;public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo) {_		super(operatorInfo, DEFAULT_NAME)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeObjectWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,using,the,default,name,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator;public,generic,data,source,base,t,format,operator,information,out,operator,info,super,operator,info,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,object,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo);1412346154;Creates a new instance for the given file using the given input format, using the default name.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator.;public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo) {_		super(operatorInfo, DEFAULT_NAME)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeObjectWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,using,the,default,name,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator;public,generic,data,source,base,t,format,operator,information,out,operator,info,super,operator,info,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,object,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo);1423570503;Creates a new instance for the given file using the given input format, using the default name.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator.;public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo) {_		super(operatorInfo, DEFAULT_NAME)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeObjectWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,using,the,default,name,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator;public,generic,data,source,base,t,format,operator,information,out,operator,info,super,operator,info,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,object,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo);1424445001;Creates a new instance for the given file using the given input format, using the default name.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator.;public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo) {_		super(operatorInfo, DEFAULT_NAME)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeObjectWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,using,the,default,name,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator;public,generic,data,source,base,t,format,operator,information,out,operator,info,super,operator,info,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,object,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo);1425308868;Creates a new instance for the given file using the given input format, using the default name.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator.;public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo) {_		super(operatorInfo, DEFAULT_NAME)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeObjectWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,using,the,default,name,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator;public,generic,data,source,base,t,format,operator,information,out,operator,info,super,operator,info,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,object,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo);1439469746;Creates a new instance for the given file using the given input format, using the default name.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator.;public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo) {_		super(operatorInfo, DEFAULT_NAME)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeObjectWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,using,the,default,name,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator;public,generic,data,source,base,t,format,operator,information,out,operator,info,super,operator,info,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,object,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo);1455479358;Creates a new instance for the given file using the given input format, using the default name.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator.;public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo) {_		super(operatorInfo, DEFAULT_NAME)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeObjectWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,using,the,default,name,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator;public,generic,data,source,base,t,format,operator,information,out,operator,info,super,operator,info,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,object,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo);1461679220;Creates a new instance for the given file using the given input format, using the default name.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator.;public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo) {_		super(operatorInfo, DEFAULT_NAME)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeObjectWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,using,the,default,name,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator;public,generic,data,source,base,t,format,operator,information,out,operator,info,super,operator,info,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,object,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo, String name);1412346153;Creates a new instance for the given file using the given input format.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator._@param name The given name for the Pact, used in plans, logs and progress messages.;public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo, String name) {_		super(operatorInfo, name)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeClassWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator,param,name,the,given,name,for,the,pact,used,in,plans,logs,and,progress,messages;public,generic,data,source,base,class,extends,t,format,operator,information,out,operator,info,string,name,super,operator,info,name,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,class,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo, String name);1412346154;Creates a new instance for the given file using the given input format.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator._@param name The given name for the Pact, used in plans, logs and progress messages.;public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo, String name) {_		super(operatorInfo, name)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeClassWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator,param,name,the,given,name,for,the,pact,used,in,plans,logs,and,progress,messages;public,generic,data,source,base,class,extends,t,format,operator,information,out,operator,info,string,name,super,operator,info,name,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,class,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo, String name);1412346154;Creates a new instance for the given file using the given input format.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator._@param name The given name for the Pact, used in plans, logs and progress messages.;public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo, String name) {_		super(operatorInfo, name)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeClassWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator,param,name,the,given,name,for,the,pact,used,in,plans,logs,and,progress,messages;public,generic,data,source,base,class,extends,t,format,operator,information,out,operator,info,string,name,super,operator,info,name,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,class,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo, String name);1423570503;Creates a new instance for the given file using the given input format.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator._@param name The given name for the Pact, used in plans, logs and progress messages.;public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo, String name) {_		super(operatorInfo, name)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeClassWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator,param,name,the,given,name,for,the,pact,used,in,plans,logs,and,progress,messages;public,generic,data,source,base,class,extends,t,format,operator,information,out,operator,info,string,name,super,operator,info,name,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,class,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo, String name);1424445001;Creates a new instance for the given file using the given input format.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator._@param name The given name for the Pact, used in plans, logs and progress messages.;public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo, String name) {_		super(operatorInfo, name)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeClassWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator,param,name,the,given,name,for,the,pact,used,in,plans,logs,and,progress,messages;public,generic,data,source,base,class,extends,t,format,operator,information,out,operator,info,string,name,super,operator,info,name,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,class,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo, String name);1425308868;Creates a new instance for the given file using the given input format.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator._@param name The given name for the Pact, used in plans, logs and progress messages.;public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo, String name) {_		super(operatorInfo, name)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeClassWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator,param,name,the,given,name,for,the,pact,used,in,plans,logs,and,progress,messages;public,generic,data,source,base,class,extends,t,format,operator,information,out,operator,info,string,name,super,operator,info,name,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,class,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo, String name);1439469746;Creates a new instance for the given file using the given input format.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator._@param name The given name for the Pact, used in plans, logs and progress messages.;public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo, String name) {_		super(operatorInfo, name)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeClassWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator,param,name,the,given,name,for,the,pact,used,in,plans,logs,and,progress,messages;public,generic,data,source,base,class,extends,t,format,operator,information,out,operator,info,string,name,super,operator,info,name,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,class,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo, String name);1455479358;Creates a new instance for the given file using the given input format.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator._@param name The given name for the Pact, used in plans, logs and progress messages.;public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo, String name) {_		super(operatorInfo, name)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeClassWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator,param,name,the,given,name,for,the,pact,used,in,plans,logs,and,progress,messages;public,generic,data,source,base,class,extends,t,format,operator,information,out,operator,info,string,name,super,operator,info,name,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,class,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo, String name);1461679220;Creates a new instance for the given file using the given input format.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator._@param name The given name for the Pact, used in plans, logs and progress messages.;public GenericDataSourceBase(Class<? extends T> format, OperatorInformation<OUT> operatorInfo, String name) {_		super(operatorInfo, name)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeClassWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator,param,name,the,given,name,for,the,pact,used,in,plans,logs,and,progress,messages;public,generic,data,source,base,class,extends,t,format,operator,information,out,operator,info,string,name,super,operator,info,name,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,class,wrapper,t,format
GenericDataSourceBase -> public UserCodeWrapper<? extends T> getFormatWrapper();1412346153;Gets the class describing the input format.__@return The class describing the input format.;public UserCodeWrapper<? extends T> getFormatWrapper() {_		return this.formatWrapper__	};gets,the,class,describing,the,input,format,return,the,class,describing,the,input,format;public,user,code,wrapper,extends,t,get,format,wrapper,return,this,format,wrapper
GenericDataSourceBase -> public UserCodeWrapper<? extends T> getFormatWrapper();1412346154;Gets the class describing the input format.__@return The class describing the input format.;public UserCodeWrapper<? extends T> getFormatWrapper() {_		return this.formatWrapper__	};gets,the,class,describing,the,input,format,return,the,class,describing,the,input,format;public,user,code,wrapper,extends,t,get,format,wrapper,return,this,format,wrapper
GenericDataSourceBase -> public UserCodeWrapper<? extends T> getFormatWrapper();1412346154;Gets the class describing the input format.__@return The class describing the input format.;public UserCodeWrapper<? extends T> getFormatWrapper() {_		return this.formatWrapper__	};gets,the,class,describing,the,input,format,return,the,class,describing,the,input,format;public,user,code,wrapper,extends,t,get,format,wrapper,return,this,format,wrapper
GenericDataSourceBase -> public UserCodeWrapper<? extends T> getFormatWrapper();1423570503;Gets the class describing the input format.__@return The class describing the input format.;public UserCodeWrapper<? extends T> getFormatWrapper() {_		return this.formatWrapper__	};gets,the,class,describing,the,input,format,return,the,class,describing,the,input,format;public,user,code,wrapper,extends,t,get,format,wrapper,return,this,format,wrapper
GenericDataSourceBase -> public UserCodeWrapper<? extends T> getFormatWrapper();1424445001;Gets the class describing the input format.__@return The class describing the input format.;public UserCodeWrapper<? extends T> getFormatWrapper() {_		return this.formatWrapper__	};gets,the,class,describing,the,input,format,return,the,class,describing,the,input,format;public,user,code,wrapper,extends,t,get,format,wrapper,return,this,format,wrapper
GenericDataSourceBase -> public UserCodeWrapper<? extends T> getFormatWrapper();1425308868;Gets the class describing the input format.__@return The class describing the input format.;public UserCodeWrapper<? extends T> getFormatWrapper() {_		return this.formatWrapper__	};gets,the,class,describing,the,input,format,return,the,class,describing,the,input,format;public,user,code,wrapper,extends,t,get,format,wrapper,return,this,format,wrapper
GenericDataSourceBase -> public UserCodeWrapper<? extends T> getFormatWrapper();1439469746;Gets the class describing the input format.__@return The class describing the input format.;public UserCodeWrapper<? extends T> getFormatWrapper() {_		return this.formatWrapper__	};gets,the,class,describing,the,input,format,return,the,class,describing,the,input,format;public,user,code,wrapper,extends,t,get,format,wrapper,return,this,format,wrapper
GenericDataSourceBase -> public UserCodeWrapper<? extends T> getFormatWrapper();1455479358;Gets the class describing the input format.__@return The class describing the input format.;public UserCodeWrapper<? extends T> getFormatWrapper() {_		return this.formatWrapper__	};gets,the,class,describing,the,input,format,return,the,class,describing,the,input,format;public,user,code,wrapper,extends,t,get,format,wrapper,return,this,format,wrapper
GenericDataSourceBase -> public UserCodeWrapper<? extends T> getFormatWrapper();1461679220;Gets the class describing the input format.__@return The class describing the input format.;public UserCodeWrapper<? extends T> getFormatWrapper() {_		return this.formatWrapper__	};gets,the,class,describing,the,input,format,return,the,class,describing,the,input,format;public,user,code,wrapper,extends,t,get,format,wrapper,return,this,format,wrapper
GenericDataSourceBase -> public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo, String name);1412346153;Creates a new instance for the given file using the given input format.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator._@param name The given name for the Pact, used in plans, logs and progress messages.;public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo, String name) {_		super(operatorInfo, name)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeObjectWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator,param,name,the,given,name,for,the,pact,used,in,plans,logs,and,progress,messages;public,generic,data,source,base,t,format,operator,information,out,operator,info,string,name,super,operator,info,name,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,object,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo, String name);1412346154;Creates a new instance for the given file using the given input format.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator._@param name The given name for the Pact, used in plans, logs and progress messages.;public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo, String name) {_		super(operatorInfo, name)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeObjectWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator,param,name,the,given,name,for,the,pact,used,in,plans,logs,and,progress,messages;public,generic,data,source,base,t,format,operator,information,out,operator,info,string,name,super,operator,info,name,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,object,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo, String name);1412346154;Creates a new instance for the given file using the given input format.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator._@param name The given name for the Pact, used in plans, logs and progress messages.;public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo, String name) {_		super(operatorInfo, name)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeObjectWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator,param,name,the,given,name,for,the,pact,used,in,plans,logs,and,progress,messages;public,generic,data,source,base,t,format,operator,information,out,operator,info,string,name,super,operator,info,name,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,object,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo, String name);1423570503;Creates a new instance for the given file using the given input format.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator._@param name The given name for the Pact, used in plans, logs and progress messages.;public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo, String name) {_		super(operatorInfo, name)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeObjectWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator,param,name,the,given,name,for,the,pact,used,in,plans,logs,and,progress,messages;public,generic,data,source,base,t,format,operator,information,out,operator,info,string,name,super,operator,info,name,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,object,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo, String name);1424445001;Creates a new instance for the given file using the given input format.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator._@param name The given name for the Pact, used in plans, logs and progress messages.;public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo, String name) {_		super(operatorInfo, name)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeObjectWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator,param,name,the,given,name,for,the,pact,used,in,plans,logs,and,progress,messages;public,generic,data,source,base,t,format,operator,information,out,operator,info,string,name,super,operator,info,name,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,object,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo, String name);1425308868;Creates a new instance for the given file using the given input format.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator._@param name The given name for the Pact, used in plans, logs and progress messages.;public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo, String name) {_		super(operatorInfo, name)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeObjectWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator,param,name,the,given,name,for,the,pact,used,in,plans,logs,and,progress,messages;public,generic,data,source,base,t,format,operator,information,out,operator,info,string,name,super,operator,info,name,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,object,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo, String name);1439469746;Creates a new instance for the given file using the given input format.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator._@param name The given name for the Pact, used in plans, logs and progress messages.;public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo, String name) {_		super(operatorInfo, name)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeObjectWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator,param,name,the,given,name,for,the,pact,used,in,plans,logs,and,progress,messages;public,generic,data,source,base,t,format,operator,information,out,operator,info,string,name,super,operator,info,name,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,object,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo, String name);1455479358;Creates a new instance for the given file using the given input format.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator._@param name The given name for the Pact, used in plans, logs and progress messages.;public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo, String name) {_		super(operatorInfo, name)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeObjectWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator,param,name,the,given,name,for,the,pact,used,in,plans,logs,and,progress,messages;public,generic,data,source,base,t,format,operator,information,out,operator,info,string,name,super,operator,info,name,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,object,wrapper,t,format
GenericDataSourceBase -> public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo, String name);1461679220;Creates a new instance for the given file using the given input format.__@param format The {@link org.apache.flink.api.common.io.InputFormat} implementation used to read the data._@param operatorInfo The type information for the operator._@param name The given name for the Pact, used in plans, logs and progress messages.;public GenericDataSourceBase(T format, OperatorInformation<OUT> operatorInfo, String name) {_		super(operatorInfo, name)___		if (format == null) {_			throw new IllegalArgumentException("Input format may not be null.")__		}__		this.formatWrapper = new UserCodeObjectWrapper<T>(format)__	};creates,a,new,instance,for,the,given,file,using,the,given,input,format,param,format,the,link,org,apache,flink,api,common,io,input,format,implementation,used,to,read,the,data,param,operator,info,the,type,information,for,the,operator,param,name,the,given,name,for,the,pact,used,in,plans,logs,and,progress,messages;public,generic,data,source,base,t,format,operator,information,out,operator,info,string,name,super,operator,info,name,if,format,null,throw,new,illegal,argument,exception,input,format,may,not,be,null,this,format,wrapper,new,user,code,object,wrapper,t,format
GenericDataSourceBase -> public void setStatisticsKey(String statisticsKey);1412346153;Sets the key under which statistics about this data source may be obtained from the_statistics cache. Useful for testing purposes, when providing mock statistics.__@param statisticsKey The key for the statistics object.;public void setStatisticsKey(String statisticsKey) {_		this.statisticsKey = statisticsKey__	};sets,the,key,under,which,statistics,about,this,data,source,may,be,obtained,from,the,statistics,cache,useful,for,testing,purposes,when,providing,mock,statistics,param,statistics,key,the,key,for,the,statistics,object;public,void,set,statistics,key,string,statistics,key,this,statistics,key,statistics,key
GenericDataSourceBase -> public void setStatisticsKey(String statisticsKey);1412346154;Sets the key under which statistics about this data source may be obtained from the_statistics cache. Useful for testing purposes, when providing mock statistics.__@param statisticsKey The key for the statistics object.;public void setStatisticsKey(String statisticsKey) {_		this.statisticsKey = statisticsKey__	};sets,the,key,under,which,statistics,about,this,data,source,may,be,obtained,from,the,statistics,cache,useful,for,testing,purposes,when,providing,mock,statistics,param,statistics,key,the,key,for,the,statistics,object;public,void,set,statistics,key,string,statistics,key,this,statistics,key,statistics,key
GenericDataSourceBase -> public void setStatisticsKey(String statisticsKey);1412346154;Sets the key under which statistics about this data source may be obtained from the_statistics cache. Useful for testing purposes, when providing mock statistics.__@param statisticsKey The key for the statistics object.;public void setStatisticsKey(String statisticsKey) {_		this.statisticsKey = statisticsKey__	};sets,the,key,under,which,statistics,about,this,data,source,may,be,obtained,from,the,statistics,cache,useful,for,testing,purposes,when,providing,mock,statistics,param,statistics,key,the,key,for,the,statistics,object;public,void,set,statistics,key,string,statistics,key,this,statistics,key,statistics,key
GenericDataSourceBase -> public void setStatisticsKey(String statisticsKey);1423570503;Sets the key under which statistics about this data source may be obtained from the_statistics cache. Useful for testing purposes, when providing mock statistics.__@param statisticsKey The key for the statistics object.;public void setStatisticsKey(String statisticsKey) {_		this.statisticsKey = statisticsKey__	};sets,the,key,under,which,statistics,about,this,data,source,may,be,obtained,from,the,statistics,cache,useful,for,testing,purposes,when,providing,mock,statistics,param,statistics,key,the,key,for,the,statistics,object;public,void,set,statistics,key,string,statistics,key,this,statistics,key,statistics,key
GenericDataSourceBase -> public void setStatisticsKey(String statisticsKey);1424445001;Sets the key under which statistics about this data source may be obtained from the_statistics cache. Useful for testing purposes, when providing mock statistics.__@param statisticsKey The key for the statistics object.;public void setStatisticsKey(String statisticsKey) {_		this.statisticsKey = statisticsKey__	};sets,the,key,under,which,statistics,about,this,data,source,may,be,obtained,from,the,statistics,cache,useful,for,testing,purposes,when,providing,mock,statistics,param,statistics,key,the,key,for,the,statistics,object;public,void,set,statistics,key,string,statistics,key,this,statistics,key,statistics,key
GenericDataSourceBase -> public void setStatisticsKey(String statisticsKey);1425308868;Sets the key under which statistics about this data source may be obtained from the_statistics cache. Useful for testing purposes, when providing mock statistics.__@param statisticsKey The key for the statistics object.;public void setStatisticsKey(String statisticsKey) {_		this.statisticsKey = statisticsKey__	};sets,the,key,under,which,statistics,about,this,data,source,may,be,obtained,from,the,statistics,cache,useful,for,testing,purposes,when,providing,mock,statistics,param,statistics,key,the,key,for,the,statistics,object;public,void,set,statistics,key,string,statistics,key,this,statistics,key,statistics,key
GenericDataSourceBase -> public void setStatisticsKey(String statisticsKey);1439469746;Sets the key under which statistics about this data source may be obtained from the_statistics cache. Useful for testing purposes, when providing mock statistics.__@param statisticsKey The key for the statistics object.;public void setStatisticsKey(String statisticsKey) {_		this.statisticsKey = statisticsKey__	};sets,the,key,under,which,statistics,about,this,data,source,may,be,obtained,from,the,statistics,cache,useful,for,testing,purposes,when,providing,mock,statistics,param,statistics,key,the,key,for,the,statistics,object;public,void,set,statistics,key,string,statistics,key,this,statistics,key,statistics,key
GenericDataSourceBase -> public void setStatisticsKey(String statisticsKey);1455479358;Sets the key under which statistics about this data source may be obtained from the_statistics cache. Useful for testing purposes, when providing mock statistics.__@param statisticsKey The key for the statistics object.;public void setStatisticsKey(String statisticsKey) {_		this.statisticsKey = statisticsKey__	};sets,the,key,under,which,statistics,about,this,data,source,may,be,obtained,from,the,statistics,cache,useful,for,testing,purposes,when,providing,mock,statistics,param,statistics,key,the,key,for,the,statistics,object;public,void,set,statistics,key,string,statistics,key,this,statistics,key,statistics,key
GenericDataSourceBase -> public void setStatisticsKey(String statisticsKey);1461679220;Sets the key under which statistics about this data source may be obtained from the_statistics cache. Useful for testing purposes, when providing mock statistics.__@param statisticsKey The key for the statistics object.;public void setStatisticsKey(String statisticsKey) {_		this.statisticsKey = statisticsKey__	};sets,the,key,under,which,statistics,about,this,data,source,may,be,obtained,from,the,statistics,cache,useful,for,testing,purposes,when,providing,mock,statistics,param,statistics,key,the,key,for,the,statistics,object;public,void,set,statistics,key,string,statistics,key,this,statistics,key,statistics,key
GenericDataSourceBase -> @Override 	public void accept(Visitor<Operator<?>> visitor);1412346153;Accepts the visitor and applies it this instance. Since the data sources have no inputs, no recursive descend_happens. The visitors pre-visit method is called and, if returning <tt>true</tt>, the post-visit method is called.__@param visitor The visitor.__@see org.apache.flink.util.Visitable#accept(org.apache.flink.util.Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		if (visitor.preVisit(this)) {_			visitor.postVisit(this)__		}_	};accepts,the,visitor,and,applies,it,this,instance,since,the,data,sources,have,no,inputs,no,recursive,descend,happens,the,visitors,pre,visit,method,is,called,and,if,returning,tt,true,tt,the,post,visit,method,is,called,param,visitor,the,visitor,see,org,apache,flink,util,visitable,accept,org,apache,flink,util,visitor;override,public,void,accept,visitor,operator,visitor,if,visitor,pre,visit,this,visitor,post,visit,this
GenericDataSourceBase -> @Override 	public void accept(Visitor<Operator<?>> visitor);1412346154;Accepts the visitor and applies it this instance. Since the data sources have no inputs, no recursive descend_happens. The visitors pre-visit method is called and, if returning <tt>true</tt>, the post-visit method is called.__@param visitor The visitor.__@see org.apache.flink.util.Visitable#accept(org.apache.flink.util.Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		if (visitor.preVisit(this)) {_			visitor.postVisit(this)__		}_	};accepts,the,visitor,and,applies,it,this,instance,since,the,data,sources,have,no,inputs,no,recursive,descend,happens,the,visitors,pre,visit,method,is,called,and,if,returning,tt,true,tt,the,post,visit,method,is,called,param,visitor,the,visitor,see,org,apache,flink,util,visitable,accept,org,apache,flink,util,visitor;override,public,void,accept,visitor,operator,visitor,if,visitor,pre,visit,this,visitor,post,visit,this
GenericDataSourceBase -> @Override 	public void accept(Visitor<Operator<?>> visitor);1412346154;Accepts the visitor and applies it this instance. Since the data sources have no inputs, no recursive descend_happens. The visitors pre-visit method is called and, if returning <tt>true</tt>, the post-visit method is called.__@param visitor The visitor.__@see org.apache.flink.util.Visitable#accept(org.apache.flink.util.Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		if (visitor.preVisit(this)) {_			visitor.postVisit(this)__		}_	};accepts,the,visitor,and,applies,it,this,instance,since,the,data,sources,have,no,inputs,no,recursive,descend,happens,the,visitors,pre,visit,method,is,called,and,if,returning,tt,true,tt,the,post,visit,method,is,called,param,visitor,the,visitor,see,org,apache,flink,util,visitable,accept,org,apache,flink,util,visitor;override,public,void,accept,visitor,operator,visitor,if,visitor,pre,visit,this,visitor,post,visit,this
GenericDataSourceBase -> @Override 	public void accept(Visitor<Operator<?>> visitor);1423570503;Accepts the visitor and applies it this instance. Since the data sources have no inputs, no recursive descend_happens. The visitors pre-visit method is called and, if returning <tt>true</tt>, the post-visit method is called.__@param visitor The visitor.__@see org.apache.flink.util.Visitable#accept(org.apache.flink.util.Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		if (visitor.preVisit(this)) {_			visitor.postVisit(this)__		}_	};accepts,the,visitor,and,applies,it,this,instance,since,the,data,sources,have,no,inputs,no,recursive,descend,happens,the,visitors,pre,visit,method,is,called,and,if,returning,tt,true,tt,the,post,visit,method,is,called,param,visitor,the,visitor,see,org,apache,flink,util,visitable,accept,org,apache,flink,util,visitor;override,public,void,accept,visitor,operator,visitor,if,visitor,pre,visit,this,visitor,post,visit,this
GenericDataSourceBase -> @Override 	public void accept(Visitor<Operator<?>> visitor);1424445001;Accepts the visitor and applies it this instance. Since the data sources have no inputs, no recursive descend_happens. The visitors pre-visit method is called and, if returning <tt>true</tt>, the post-visit method is called.__@param visitor The visitor.__@see org.apache.flink.util.Visitable#accept(org.apache.flink.util.Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		if (visitor.preVisit(this)) {_			visitor.postVisit(this)__		}_	};accepts,the,visitor,and,applies,it,this,instance,since,the,data,sources,have,no,inputs,no,recursive,descend,happens,the,visitors,pre,visit,method,is,called,and,if,returning,tt,true,tt,the,post,visit,method,is,called,param,visitor,the,visitor,see,org,apache,flink,util,visitable,accept,org,apache,flink,util,visitor;override,public,void,accept,visitor,operator,visitor,if,visitor,pre,visit,this,visitor,post,visit,this
GenericDataSourceBase -> @Override 	public void accept(Visitor<Operator<?>> visitor);1425308868;Accepts the visitor and applies it this instance. Since the data sources have no inputs, no recursive descend_happens. The visitors pre-visit method is called and, if returning <tt>true</tt>, the post-visit method is called.__@param visitor The visitor.__@see org.apache.flink.util.Visitable#accept(org.apache.flink.util.Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		if (visitor.preVisit(this)) {_			visitor.postVisit(this)__		}_	};accepts,the,visitor,and,applies,it,this,instance,since,the,data,sources,have,no,inputs,no,recursive,descend,happens,the,visitors,pre,visit,method,is,called,and,if,returning,tt,true,tt,the,post,visit,method,is,called,param,visitor,the,visitor,see,org,apache,flink,util,visitable,accept,org,apache,flink,util,visitor;override,public,void,accept,visitor,operator,visitor,if,visitor,pre,visit,this,visitor,post,visit,this
GenericDataSourceBase -> @Override 	public void accept(Visitor<Operator<?>> visitor);1439469746;Accepts the visitor and applies it this instance. Since the data sources have no inputs, no recursive descend_happens. The visitors pre-visit method is called and, if returning <tt>true</tt>, the post-visit method is called.__@param visitor The visitor.__@see org.apache.flink.util.Visitable#accept(org.apache.flink.util.Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		if (visitor.preVisit(this)) {_			visitor.postVisit(this)__		}_	};accepts,the,visitor,and,applies,it,this,instance,since,the,data,sources,have,no,inputs,no,recursive,descend,happens,the,visitors,pre,visit,method,is,called,and,if,returning,tt,true,tt,the,post,visit,method,is,called,param,visitor,the,visitor,see,org,apache,flink,util,visitable,accept,org,apache,flink,util,visitor;override,public,void,accept,visitor,operator,visitor,if,visitor,pre,visit,this,visitor,post,visit,this
GenericDataSourceBase -> @Override 	public void accept(Visitor<Operator<?>> visitor);1455479358;Accepts the visitor and applies it this instance. Since the data sources have no inputs, no recursive descend_happens. The visitors pre-visit method is called and, if returning <tt>true</tt>, the post-visit method is called.__@param visitor The visitor.__@see org.apache.flink.util.Visitable#accept(org.apache.flink.util.Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		if (visitor.preVisit(this)) {_			visitor.postVisit(this)__		}_	};accepts,the,visitor,and,applies,it,this,instance,since,the,data,sources,have,no,inputs,no,recursive,descend,happens,the,visitors,pre,visit,method,is,called,and,if,returning,tt,true,tt,the,post,visit,method,is,called,param,visitor,the,visitor,see,org,apache,flink,util,visitable,accept,org,apache,flink,util,visitor;override,public,void,accept,visitor,operator,visitor,if,visitor,pre,visit,this,visitor,post,visit,this
GenericDataSourceBase -> @Override 	public void accept(Visitor<Operator<?>> visitor);1461679220;Accepts the visitor and applies it this instance. Since the data sources have no inputs, no recursive descend_happens. The visitors pre-visit method is called and, if returning <tt>true</tt>, the post-visit method is called.__@param visitor The visitor.__@see org.apache.flink.util.Visitable#accept(org.apache.flink.util.Visitor);@Override_	public void accept(Visitor<Operator<?>> visitor) {_		if (visitor.preVisit(this)) {_			visitor.postVisit(this)__		}_	};accepts,the,visitor,and,applies,it,this,instance,since,the,data,sources,have,no,inputs,no,recursive,descend,happens,the,visitors,pre,visit,method,is,called,and,if,returning,tt,true,tt,the,post,visit,method,is,called,param,visitor,the,visitor,see,org,apache,flink,util,visitable,accept,org,apache,flink,util,visitor;override,public,void,accept,visitor,operator,visitor,if,visitor,pre,visit,this,visitor,post,visit,this
