commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * Gets the boolean value corresponding to this value. If this is the 'undefined' value,  * the method returns the given default.  *  * @param defaultValue The value to be returned in case this ternary value is 'undefined'.  */ ;// ------------------------------------------------------------------------ /**  * Gets the boolean value corresponding to this value. If this is the 'undefined' value,  * the method returns the given default.  *  * @param defaultValue The value to be returned in case this ternary value is 'undefined'.  */ public boolean getOrDefault(boolean defaultValue) {     return this == UNDEFINED ? defaultValue : (this == TRUE). }
true;public;1;3;/**  * Gets the boolean value corresponding to this value. If this is the 'UNDEFINED' value,  * the method returns the given valueForUndefined.  *  * @param valueForUndefined The value to be returned in case this ternary value is 'undefined'.  */ ;/**  * Gets the boolean value corresponding to this value. If this is the 'UNDEFINED' value,  * the method returns the given valueForUndefined.  *  * @param valueForUndefined The value to be returned in case this ternary value is 'undefined'.  */ public TernaryBoolean resolveUndefined(boolean valueForUndefined) {     return this != UNDEFINED ? this : fromBoolean(valueForUndefined). }
true;public;0;4;/**  * Gets this ternary boolean as a boxed boolean. The value 'undefined' results  * in 'null.  */ ;/**  * Gets this ternary boolean as a boxed boolean. The value 'undefined' results  * in 'null.  */ @Nullable public Boolean getAsBoolean() {     return this == UNDEFINED ? null : (this == TRUE ? Boolean.TRUE : Boolean.FALSE). }
true;public,static;1;3;/**  * Converts the given boolean to a TernaryBoolean, {@link #TRUE} or {@link #FALSE} respectively.  */ ;// ------------------------------------------------------------------------ /**  * Converts the given boolean to a TernaryBoolean, {@link #TRUE} or {@link #FALSE} respectively.  */ public static TernaryBoolean fromBoolean(boolean bool) {     return bool ? TRUE : FALSE. }
true;public,static;1;3;/**  * Converts the given boxed Boolean to a TernaryBoolean. A null value results in  * {@link #UNDEFINED}, while a non-null value results in {@link #TRUE} or {@link #FALSE} respectively.  */ ;/**  * Converts the given boxed Boolean to a TernaryBoolean. A null value results in  * {@link #UNDEFINED}, while a non-null value results in {@link #TRUE} or {@link #FALSE} respectively.  */ public static TernaryBoolean fromBoxedBoolean(@Nullable Boolean bool) {     return bool == null ? UNDEFINED : fromBoolean(bool). }
