# id;timestamp;commentText;codeText;commentWords;codeWords
GroupReduceOperatorBase -> public void setGroupOrder(Ordering order);1405024514;Sets the order of the elements within a reduce group.__@param order The order for the elements in a reduce group.;public void setGroupOrder(Ordering order) {_		this.groupOrder = order__	};sets,the,order,of,the,elements,within,a,reduce,group,param,order,the,order,for,the,elements,in,a,reduce,group;public,void,set,group,order,ordering,order,this,group,order,order
GroupReduceOperatorBase -> public void setGroupOrder(Ordering order);1405090423;Sets the order of the elements within a reduce group.__@param order The order for the elements in a reduce group.;public void setGroupOrder(Ordering order) {_		this.groupOrder = order__	};sets,the,order,of,the,elements,within,a,reduce,group,param,order,the,order,for,the,elements,in,a,reduce,group;public,void,set,group,order,ordering,order,this,group,order,order
GroupReduceOperatorBase -> public void setGroupOrder(Ordering order);1406821655;Sets the order of the elements within a reduce group.__@param order The order for the elements in a reduce group.;public void setGroupOrder(Ordering order) {_		this.groupOrder = order__	};sets,the,order,of,the,elements,within,a,reduce,group,param,order,the,order,for,the,elements,in,a,reduce,group;public,void,set,group,order,ordering,order,this,group,order,order
GroupReduceOperatorBase -> public void setGroupOrder(Ordering order);1411473593;Sets the order of the elements within a reduce group.__@param order The order for the elements in a reduce group.;public void setGroupOrder(Ordering order) {_		this.groupOrder = order__	};sets,the,order,of,the,elements,within,a,reduce,group,param,order,the,order,for,the,elements,in,a,reduce,group;public,void,set,group,order,ordering,order,this,group,order,order
GroupReduceOperatorBase -> public void setGroupOrder(Ordering order);1412336525;Sets the order of the elements within a reduce group.__@param order The order for the elements in a reduce group.;public void setGroupOrder(Ordering order) {_		this.groupOrder = order__	};sets,the,order,of,the,elements,within,a,reduce,group,param,order,the,order,for,the,elements,in,a,reduce,group;public,void,set,group,order,ordering,order,this,group,order,order
GroupReduceOperatorBase -> public void setGroupOrder(Ordering order);1412346153;Sets the order of the elements within a reduce group.__@param order The order for the elements in a reduce group.;public void setGroupOrder(Ordering order) {_		this.groupOrder = order__	};sets,the,order,of,the,elements,within,a,reduce,group,param,order,the,order,for,the,elements,in,a,reduce,group;public,void,set,group,order,ordering,order,this,group,order,order
GroupReduceOperatorBase -> public void setGroupOrder(Ordering order);1412346153;Sets the order of the elements within a reduce group.__@param order The order for the elements in a reduce group.;public void setGroupOrder(Ordering order) {_		this.groupOrder = order__	};sets,the,order,of,the,elements,within,a,reduce,group,param,order,the,order,for,the,elements,in,a,reduce,group;public,void,set,group,order,ordering,order,this,group,order,order
GroupReduceOperatorBase -> public void setGroupOrder(Ordering order);1412346154;Sets the order of the elements within a reduce group.__@param order The order for the elements in a reduce group.;public void setGroupOrder(Ordering order) {_		this.groupOrder = order__	};sets,the,order,of,the,elements,within,a,reduce,group,param,order,the,order,for,the,elements,in,a,reduce,group;public,void,set,group,order,ordering,order,this,group,order,order
GroupReduceOperatorBase -> public void setGroupOrder(Ordering order);1412346154;Sets the order of the elements within a reduce group.__@param order The order for the elements in a reduce group.;public void setGroupOrder(Ordering order) {_		this.groupOrder = order__	};sets,the,order,of,the,elements,within,a,reduce,group,param,order,the,order,for,the,elements,in,a,reduce,group;public,void,set,group,order,ordering,order,this,group,order,order
GroupReduceOperatorBase -> public void setGroupOrder(Ordering order);1412761141;Sets the order of the elements within a reduce group.__@param order The order for the elements in a reduce group.;public void setGroupOrder(Ordering order) {_		this.groupOrder = order__	};sets,the,order,of,the,elements,within,a,reduce,group,param,order,the,order,for,the,elements,in,a,reduce,group;public,void,set,group,order,ordering,order,this,group,order,order
GroupReduceOperatorBase -> public void setGroupOrder(Ordering order);1416309577;Sets the order of the elements within a reduce group.__@param order The order for the elements in a reduce group.;public void setGroupOrder(Ordering order) {_		this.groupOrder = order__	};sets,the,order,of,the,elements,within,a,reduce,group,param,order,the,order,for,the,elements,in,a,reduce,group;public,void,set,group,order,ordering,order,this,group,order,order
GroupReduceOperatorBase -> public void setGroupOrder(Ordering order);1423570503;Sets the order of the elements within a reduce group.__@param order The order for the elements in a reduce group.;public void setGroupOrder(Ordering order) {_		this.groupOrder = order__	};sets,the,order,of,the,elements,within,a,reduce,group,param,order,the,order,for,the,elements,in,a,reduce,group;public,void,set,group,order,ordering,order,this,group,order,order
GroupReduceOperatorBase -> public void setGroupOrder(Ordering order);1425308868;Sets the order of the elements within a reduce group.__@param order The order for the elements in a reduce group.;public void setGroupOrder(Ordering order) {_		this.groupOrder = order__	};sets,the,order,of,the,elements,within,a,reduce,group,param,order,the,order,for,the,elements,in,a,reduce,group;public,void,set,group,order,ordering,order,this,group,order,order
GroupReduceOperatorBase -> public void setGroupOrder(Ordering order);1427300031;Sets the order of the elements within a reduce group.__@param order The order for the elements in a reduce group.;public void setGroupOrder(Ordering order) {_		this.groupOrder = order__	};sets,the,order,of,the,elements,within,a,reduce,group,param,order,the,order,for,the,elements,in,a,reduce,group;public,void,set,group,order,ordering,order,this,group,order,order
GroupReduceOperatorBase -> public void setGroupOrder(Ordering order);1429635795;Sets the order of the elements within a reduce group.__@param order The order for the elements in a reduce group.;public void setGroupOrder(Ordering order) {_		this.groupOrder = order__	};sets,the,order,of,the,elements,within,a,reduce,group,param,order,the,order,for,the,elements,in,a,reduce,group;public,void,set,group,order,ordering,order,this,group,order,order
GroupReduceOperatorBase -> public void setGroupOrder(Ordering order);1448376260;Sets the order of the elements within a reduce group.__@param order The order for the elements in a reduce group.;public void setGroupOrder(Ordering order) {_		this.groupOrder = order__	};sets,the,order,of,the,elements,within,a,reduce,group,param,order,the,order,for,the,elements,in,a,reduce,group;public,void,set,group,order,ordering,order,this,group,order,order
GroupReduceOperatorBase -> public void setGroupOrder(Ordering order);1455479358;Sets the order of the elements within a reduce group.__@param order The order for the elements in a reduce group.;public void setGroupOrder(Ordering order) {_		this.groupOrder = order__	};sets,the,order,of,the,elements,within,a,reduce,group,param,order,the,order,for,the,elements,in,a,reduce,group;public,void,set,group,order,ordering,order,this,group,order,order
GroupReduceOperatorBase -> public void setGroupOrder(Ordering order);1460741894;Sets the order of the elements within a reduce group.__@param order The order for the elements in a reduce group.;public void setGroupOrder(Ordering order) {_		this.groupOrder = order__	};sets,the,order,of,the,elements,within,a,reduce,group,param,order,the,order,for,the,elements,in,a,reduce,group;public,void,set,group,order,ordering,order,this,group,order,order
GroupReduceOperatorBase -> public void setGroupOrder(Ordering order);1515177486;Sets the order of the elements within a reduce group.__@param order The order for the elements in a reduce group.;public void setGroupOrder(Ordering order) {_		this.groupOrder = order__	};sets,the,order,of,the,elements,within,a,reduce,group,param,order,the,order,for,the,elements,in,a,reduce,group;public,void,set,group,order,ordering,order,this,group,order,order
GroupReduceOperatorBase -> public void setCombinable(boolean combinable);1405024514;Marks the group reduce operation as combinable. Combinable operations may pre-reduce the_data before the actual group reduce operations. Combinable user-defined functions_must implement the interface {@link GenericCombine}.__@param combinable Flag to mark the group reduce operation as combinable.;public void setCombinable(boolean combinable) {_		_		if (combinable && !GenericCombine.class.isAssignableFrom(this.userFunction.getUserCodeClass())) {_			throw new IllegalArgumentException("Cannot set a UDF as combinable if it does not implement the interface " + _					GenericCombine.class.getName())__		} else {_			this.combinable = combinable__		}_	};marks,the,group,reduce,operation,as,combinable,combinable,operations,may,pre,reduce,the,data,before,the,actual,group,reduce,operations,combinable,user,defined,functions,must,implement,the,interface,link,generic,combine,param,combinable,flag,to,mark,the,group,reduce,operation,as,combinable;public,void,set,combinable,boolean,combinable,if,combinable,generic,combine,class,is,assignable,from,this,user,function,get,user,code,class,throw,new,illegal,argument,exception,cannot,set,a,udf,as,combinable,if,it,does,not,implement,the,interface,generic,combine,class,get,name,else,this,combinable,combinable
GroupReduceOperatorBase -> public void setCombinable(boolean combinable);1405090423;Marks the group reduce operation as combinable. Combinable operations may pre-reduce the_data before the actual group reduce operations. Combinable user-defined functions_must implement the interface {@link GenericCombine}.__@param combinable Flag to mark the group reduce operation as combinable.;public void setCombinable(boolean combinable) {_		_		if (combinable && !GenericCombine.class.isAssignableFrom(this.userFunction.getUserCodeClass())) {_			throw new IllegalArgumentException("Cannot set a UDF as combinable if it does not implement the interface " + _					GenericCombine.class.getName())__		} else {_			this.combinable = combinable__		}_	};marks,the,group,reduce,operation,as,combinable,combinable,operations,may,pre,reduce,the,data,before,the,actual,group,reduce,operations,combinable,user,defined,functions,must,implement,the,interface,link,generic,combine,param,combinable,flag,to,mark,the,group,reduce,operation,as,combinable;public,void,set,combinable,boolean,combinable,if,combinable,generic,combine,class,is,assignable,from,this,user,function,get,user,code,class,throw,new,illegal,argument,exception,cannot,set,a,udf,as,combinable,if,it,does,not,implement,the,interface,generic,combine,class,get,name,else,this,combinable,combinable
GroupReduceOperatorBase -> public void setCombinable(boolean combinable);1406821655;Marks the group reduce operation as combinable. Combinable operations may pre-reduce the_data before the actual group reduce operations. Combinable user-defined functions_must implement the interface {@link org.apache.flink.api.common.functions.FlatCombineFunction}.__@param combinable Flag to mark the group reduce operation as combinable.;public void setCombinable(boolean combinable) {_		_		if (combinable && !FlatCombineFunction.class.isAssignableFrom(this.userFunction.getUserCodeClass())) {_			throw new IllegalArgumentException("Cannot set a UDF as combinable if it does not implement the interface " +_					FlatCombineFunction.class.getName())__		} else {_			this.combinable = combinable__		}_	};marks,the,group,reduce,operation,as,combinable,combinable,operations,may,pre,reduce,the,data,before,the,actual,group,reduce,operations,combinable,user,defined,functions,must,implement,the,interface,link,org,apache,flink,api,common,functions,flat,combine,function,param,combinable,flag,to,mark,the,group,reduce,operation,as,combinable;public,void,set,combinable,boolean,combinable,if,combinable,flat,combine,function,class,is,assignable,from,this,user,function,get,user,code,class,throw,new,illegal,argument,exception,cannot,set,a,udf,as,combinable,if,it,does,not,implement,the,interface,flat,combine,function,class,get,name,else,this,combinable,combinable
GroupReduceOperatorBase -> public void setCombinable(boolean combinable);1411473593;Marks the group reduce operation as combinable. Combinable operations may pre-reduce the_data before the actual group reduce operations. Combinable user-defined functions_must implement the interface {@link org.apache.flink.api.common.functions.FlatCombineFunction}.__@param combinable Flag to mark the group reduce operation as combinable.;public void setCombinable(boolean combinable) {_		_		if (combinable && !FlatCombineFunction.class.isAssignableFrom(this.userFunction.getUserCodeClass())) {_			throw new IllegalArgumentException("Cannot set a UDF as combinable if it does not implement the interface " +_					FlatCombineFunction.class.getName())__		} else {_			this.combinable = combinable__		}_	};marks,the,group,reduce,operation,as,combinable,combinable,operations,may,pre,reduce,the,data,before,the,actual,group,reduce,operations,combinable,user,defined,functions,must,implement,the,interface,link,org,apache,flink,api,common,functions,flat,combine,function,param,combinable,flag,to,mark,the,group,reduce,operation,as,combinable;public,void,set,combinable,boolean,combinable,if,combinable,flat,combine,function,class,is,assignable,from,this,user,function,get,user,code,class,throw,new,illegal,argument,exception,cannot,set,a,udf,as,combinable,if,it,does,not,implement,the,interface,flat,combine,function,class,get,name,else,this,combinable,combinable
GroupReduceOperatorBase -> public void setCombinable(boolean combinable);1412336525;Marks the group reduce operation as combinable. Combinable operations may pre-reduce the_data before the actual group reduce operations. Combinable user-defined functions_must implement the interface {@link org.apache.flink.api.common.functions.FlatCombineFunction}.__@param combinable Flag to mark the group reduce operation as combinable.;public void setCombinable(boolean combinable) {_		_		if (combinable && !FlatCombineFunction.class.isAssignableFrom(this.userFunction.getUserCodeClass())) {_			throw new IllegalArgumentException("Cannot set a UDF as combinable if it does not implement the interface " +_					FlatCombineFunction.class.getName())__		} else {_			this.combinable = combinable__		}_	};marks,the,group,reduce,operation,as,combinable,combinable,operations,may,pre,reduce,the,data,before,the,actual,group,reduce,operations,combinable,user,defined,functions,must,implement,the,interface,link,org,apache,flink,api,common,functions,flat,combine,function,param,combinable,flag,to,mark,the,group,reduce,operation,as,combinable;public,void,set,combinable,boolean,combinable,if,combinable,flat,combine,function,class,is,assignable,from,this,user,function,get,user,code,class,throw,new,illegal,argument,exception,cannot,set,a,udf,as,combinable,if,it,does,not,implement,the,interface,flat,combine,function,class,get,name,else,this,combinable,combinable
GroupReduceOperatorBase -> public void setCombinable(boolean combinable);1412346153;Marks the group reduce operation as combinable. Combinable operations may pre-reduce the_data before the actual group reduce operations. Combinable user-defined functions_must implement the interface {@link org.apache.flink.api.common.functions.FlatCombineFunction}.__@param combinable Flag to mark the group reduce operation as combinable.;public void setCombinable(boolean combinable) {_		_		if (combinable && !FlatCombineFunction.class.isAssignableFrom(this.userFunction.getUserCodeClass())) {_			throw new IllegalArgumentException("Cannot set a UDF as combinable if it does not implement the interface " +_					FlatCombineFunction.class.getName())__		} else {_			this.combinable = combinable__		}_	};marks,the,group,reduce,operation,as,combinable,combinable,operations,may,pre,reduce,the,data,before,the,actual,group,reduce,operations,combinable,user,defined,functions,must,implement,the,interface,link,org,apache,flink,api,common,functions,flat,combine,function,param,combinable,flag,to,mark,the,group,reduce,operation,as,combinable;public,void,set,combinable,boolean,combinable,if,combinable,flat,combine,function,class,is,assignable,from,this,user,function,get,user,code,class,throw,new,illegal,argument,exception,cannot,set,a,udf,as,combinable,if,it,does,not,implement,the,interface,flat,combine,function,class,get,name,else,this,combinable,combinable
GroupReduceOperatorBase -> public void setCombinable(boolean combinable);1412346153;Marks the group reduce operation as combinable. Combinable operations may pre-reduce the_data before the actual group reduce operations. Combinable user-defined functions_must implement the interface {@link org.apache.flink.api.common.functions.FlatCombineFunction}.__@param combinable Flag to mark the group reduce operation as combinable.;public void setCombinable(boolean combinable) {_		_		if (combinable && !FlatCombineFunction.class.isAssignableFrom(this.userFunction.getUserCodeClass())) {_			throw new IllegalArgumentException("Cannot set a UDF as combinable if it does not implement the interface " +_					FlatCombineFunction.class.getName())__		} else {_			this.combinable = combinable__		}_	};marks,the,group,reduce,operation,as,combinable,combinable,operations,may,pre,reduce,the,data,before,the,actual,group,reduce,operations,combinable,user,defined,functions,must,implement,the,interface,link,org,apache,flink,api,common,functions,flat,combine,function,param,combinable,flag,to,mark,the,group,reduce,operation,as,combinable;public,void,set,combinable,boolean,combinable,if,combinable,flat,combine,function,class,is,assignable,from,this,user,function,get,user,code,class,throw,new,illegal,argument,exception,cannot,set,a,udf,as,combinable,if,it,does,not,implement,the,interface,flat,combine,function,class,get,name,else,this,combinable,combinable
GroupReduceOperatorBase -> public void setCombinable(boolean combinable);1412346154;Marks the group reduce operation as combinable. Combinable operations may pre-reduce the_data before the actual group reduce operations. Combinable user-defined functions_must implement the interface {@link org.apache.flink.api.common.functions.FlatCombineFunction}.__@param combinable Flag to mark the group reduce operation as combinable.;public void setCombinable(boolean combinable) {_		_		if (combinable && !FlatCombineFunction.class.isAssignableFrom(this.userFunction.getUserCodeClass())) {_			throw new IllegalArgumentException("Cannot set a UDF as combinable if it does not implement the interface " +_					FlatCombineFunction.class.getName())__		} else {_			this.combinable = combinable__		}_	};marks,the,group,reduce,operation,as,combinable,combinable,operations,may,pre,reduce,the,data,before,the,actual,group,reduce,operations,combinable,user,defined,functions,must,implement,the,interface,link,org,apache,flink,api,common,functions,flat,combine,function,param,combinable,flag,to,mark,the,group,reduce,operation,as,combinable;public,void,set,combinable,boolean,combinable,if,combinable,flat,combine,function,class,is,assignable,from,this,user,function,get,user,code,class,throw,new,illegal,argument,exception,cannot,set,a,udf,as,combinable,if,it,does,not,implement,the,interface,flat,combine,function,class,get,name,else,this,combinable,combinable
GroupReduceOperatorBase -> public void setCombinable(boolean combinable);1412346154;Marks the group reduce operation as combinable. Combinable operations may pre-reduce the_data before the actual group reduce operations. Combinable user-defined functions_must implement the interface {@link org.apache.flink.api.common.functions.FlatCombineFunction}.__@param combinable Flag to mark the group reduce operation as combinable.;public void setCombinable(boolean combinable) {_		_		if (combinable && !FlatCombineFunction.class.isAssignableFrom(this.userFunction.getUserCodeClass())) {_			throw new IllegalArgumentException("Cannot set a UDF as combinable if it does not implement the interface " +_					FlatCombineFunction.class.getName())__		} else {_			this.combinable = combinable__		}_	};marks,the,group,reduce,operation,as,combinable,combinable,operations,may,pre,reduce,the,data,before,the,actual,group,reduce,operations,combinable,user,defined,functions,must,implement,the,interface,link,org,apache,flink,api,common,functions,flat,combine,function,param,combinable,flag,to,mark,the,group,reduce,operation,as,combinable;public,void,set,combinable,boolean,combinable,if,combinable,flat,combine,function,class,is,assignable,from,this,user,function,get,user,code,class,throw,new,illegal,argument,exception,cannot,set,a,udf,as,combinable,if,it,does,not,implement,the,interface,flat,combine,function,class,get,name,else,this,combinable,combinable
GroupReduceOperatorBase -> public void setCombinable(boolean combinable);1412761141;Marks the group reduce operation as combinable. Combinable operations may pre-reduce the_data before the actual group reduce operations. Combinable user-defined functions_must implement the interface {@link org.apache.flink.api.common.functions.FlatCombineFunction}.__@param combinable Flag to mark the group reduce operation as combinable.;public void setCombinable(boolean combinable) {_		_		if (combinable && !FlatCombineFunction.class.isAssignableFrom(this.userFunction.getUserCodeClass())) {_			throw new IllegalArgumentException("Cannot set a UDF as combinable if it does not implement the interface " +_					FlatCombineFunction.class.getName())__		} else {_			this.combinable = combinable__		}_	};marks,the,group,reduce,operation,as,combinable,combinable,operations,may,pre,reduce,the,data,before,the,actual,group,reduce,operations,combinable,user,defined,functions,must,implement,the,interface,link,org,apache,flink,api,common,functions,flat,combine,function,param,combinable,flag,to,mark,the,group,reduce,operation,as,combinable;public,void,set,combinable,boolean,combinable,if,combinable,flat,combine,function,class,is,assignable,from,this,user,function,get,user,code,class,throw,new,illegal,argument,exception,cannot,set,a,udf,as,combinable,if,it,does,not,implement,the,interface,flat,combine,function,class,get,name,else,this,combinable,combinable
GroupReduceOperatorBase -> public void setCombinable(boolean combinable);1416309577;Marks the group reduce operation as combinable. Combinable operations may pre-reduce the_data before the actual group reduce operations. Combinable user-defined functions_must implement the interface {@link org.apache.flink.api.common.functions.FlatCombineFunction}.__@param combinable Flag to mark the group reduce operation as combinable.;public void setCombinable(boolean combinable) {_		_		if (combinable && !FlatCombineFunction.class.isAssignableFrom(this.userFunction.getUserCodeClass())) {_			throw new IllegalArgumentException("Cannot set a UDF as combinable if it does not implement the interface " +_					FlatCombineFunction.class.getName())__		} else {_			this.combinable = combinable__		}_	};marks,the,group,reduce,operation,as,combinable,combinable,operations,may,pre,reduce,the,data,before,the,actual,group,reduce,operations,combinable,user,defined,functions,must,implement,the,interface,link,org,apache,flink,api,common,functions,flat,combine,function,param,combinable,flag,to,mark,the,group,reduce,operation,as,combinable;public,void,set,combinable,boolean,combinable,if,combinable,flat,combine,function,class,is,assignable,from,this,user,function,get,user,code,class,throw,new,illegal,argument,exception,cannot,set,a,udf,as,combinable,if,it,does,not,implement,the,interface,flat,combine,function,class,get,name,else,this,combinable,combinable
GroupReduceOperatorBase -> public void setCombinable(boolean combinable);1423570503;Marks the group reduce operation as combinable. Combinable operations may pre-reduce the_data before the actual group reduce operations. Combinable user-defined functions_must implement the interface {@link org.apache.flink.api.common.functions.FlatCombineFunction}.__@param combinable Flag to mark the group reduce operation as combinable.;public void setCombinable(boolean combinable) {_		_		if (combinable && !FlatCombineFunction.class.isAssignableFrom(this.userFunction.getUserCodeClass())) {_			throw new IllegalArgumentException("Cannot set a UDF as combinable if it does not implement the interface " +_					FlatCombineFunction.class.getName())__		} else {_			this.combinable = combinable__		}_	};marks,the,group,reduce,operation,as,combinable,combinable,operations,may,pre,reduce,the,data,before,the,actual,group,reduce,operations,combinable,user,defined,functions,must,implement,the,interface,link,org,apache,flink,api,common,functions,flat,combine,function,param,combinable,flag,to,mark,the,group,reduce,operation,as,combinable;public,void,set,combinable,boolean,combinable,if,combinable,flat,combine,function,class,is,assignable,from,this,user,function,get,user,code,class,throw,new,illegal,argument,exception,cannot,set,a,udf,as,combinable,if,it,does,not,implement,the,interface,flat,combine,function,class,get,name,else,this,combinable,combinable
GroupReduceOperatorBase -> public void setCombinable(boolean combinable);1425308868;Marks the group reduce operation as combinable. Combinable operations may pre-reduce the_data before the actual group reduce operations. Combinable user-defined functions_must implement the interface {@link org.apache.flink.api.common.functions.FlatCombineFunction}.__@param combinable Flag to mark the group reduce operation as combinable.;public void setCombinable(boolean combinable) {_		_		if (combinable && !FlatCombineFunction.class.isAssignableFrom(this.userFunction.getUserCodeClass())) {_			throw new IllegalArgumentException("Cannot set a UDF as combinable if it does not implement the interface " +_					FlatCombineFunction.class.getName())__		} else {_			this.combinable = combinable__		}_	};marks,the,group,reduce,operation,as,combinable,combinable,operations,may,pre,reduce,the,data,before,the,actual,group,reduce,operations,combinable,user,defined,functions,must,implement,the,interface,link,org,apache,flink,api,common,functions,flat,combine,function,param,combinable,flag,to,mark,the,group,reduce,operation,as,combinable;public,void,set,combinable,boolean,combinable,if,combinable,flat,combine,function,class,is,assignable,from,this,user,function,get,user,code,class,throw,new,illegal,argument,exception,cannot,set,a,udf,as,combinable,if,it,does,not,implement,the,interface,flat,combine,function,class,get,name,else,this,combinable,combinable
GroupReduceOperatorBase -> public void setCombinable(boolean combinable);1427300031;Marks the group reduce operation as combinable. Combinable operations may pre-reduce the_data before the actual group reduce operations. Combinable user-defined functions_must implement the interface {@link GroupCombineFunction}.__@param combinable Flag to mark the group reduce operation as combinable.;public void setCombinable(boolean combinable) {_		_		if (combinable && !GroupCombineFunction.class.isAssignableFrom(this.userFunction.getUserCodeClass())) {_			throw new IllegalArgumentException("Cannot set a UDF as combinable if it does not implement the interface " +_					GroupCombineFunction.class.getName())__		} else {_			this.combinable = combinable__		}_	};marks,the,group,reduce,operation,as,combinable,combinable,operations,may,pre,reduce,the,data,before,the,actual,group,reduce,operations,combinable,user,defined,functions,must,implement,the,interface,link,group,combine,function,param,combinable,flag,to,mark,the,group,reduce,operation,as,combinable;public,void,set,combinable,boolean,combinable,if,combinable,group,combine,function,class,is,assignable,from,this,user,function,get,user,code,class,throw,new,illegal,argument,exception,cannot,set,a,udf,as,combinable,if,it,does,not,implement,the,interface,group,combine,function,class,get,name,else,this,combinable,combinable
GroupReduceOperatorBase -> public void setCombinable(boolean combinable);1429635795;Marks the group reduce operation as combinable. Combinable operations may pre-reduce the_data before the actual group reduce operations. Combinable user-defined functions_must implement the interface {@link GroupCombineFunction}.__@param combinable Flag to mark the group reduce operation as combinable.;public void setCombinable(boolean combinable) {_		_		if (combinable && !GroupCombineFunction.class.isAssignableFrom(this.userFunction.getUserCodeClass())) {_			throw new IllegalArgumentException("Cannot set a UDF as combinable if it does not implement the interface " +_					GroupCombineFunction.class.getName())__		} else {_			this.combinable = combinable__		}_	};marks,the,group,reduce,operation,as,combinable,combinable,operations,may,pre,reduce,the,data,before,the,actual,group,reduce,operations,combinable,user,defined,functions,must,implement,the,interface,link,group,combine,function,param,combinable,flag,to,mark,the,group,reduce,operation,as,combinable;public,void,set,combinable,boolean,combinable,if,combinable,group,combine,function,class,is,assignable,from,this,user,function,get,user,code,class,throw,new,illegal,argument,exception,cannot,set,a,udf,as,combinable,if,it,does,not,implement,the,interface,group,combine,function,class,get,name,else,this,combinable,combinable
GroupReduceOperatorBase -> public void setCombinable(boolean combinable);1448376260;Marks the group reduce operation as combinable. Combinable operations may pre-reduce the_data before the actual group reduce operations. Combinable user-defined functions_must implement the interface {@link GroupCombineFunction}.__@param combinable Flag to mark the group reduce operation as combinable.;public void setCombinable(boolean combinable) {_		_		if (combinable && !GroupCombineFunction.class.isAssignableFrom(this.userFunction.getUserCodeClass())) {_			throw new IllegalArgumentException("Cannot set a UDF as combinable if it does not implement the interface " +_					GroupCombineFunction.class.getName())__		} else {_			this.combinable = combinable__		}_	};marks,the,group,reduce,operation,as,combinable,combinable,operations,may,pre,reduce,the,data,before,the,actual,group,reduce,operations,combinable,user,defined,functions,must,implement,the,interface,link,group,combine,function,param,combinable,flag,to,mark,the,group,reduce,operation,as,combinable;public,void,set,combinable,boolean,combinable,if,combinable,group,combine,function,class,is,assignable,from,this,user,function,get,user,code,class,throw,new,illegal,argument,exception,cannot,set,a,udf,as,combinable,if,it,does,not,implement,the,interface,group,combine,function,class,get,name,else,this,combinable,combinable
GroupReduceOperatorBase -> public void setCombinable(boolean combinable);1455479358;Marks the group reduce operation as combinable. Combinable operations may pre-reduce the_data before the actual group reduce operations. Combinable user-defined functions_must implement the interface {@link GroupCombineFunction}.__@param combinable Flag to mark the group reduce operation as combinable.;public void setCombinable(boolean combinable) {_		_		if (combinable && !GroupCombineFunction.class.isAssignableFrom(this.userFunction.getUserCodeClass())) {_			throw new IllegalArgumentException("Cannot set a UDF as combinable if it does not implement the interface " +_					GroupCombineFunction.class.getName())__		} else {_			this.combinable = combinable__		}_	};marks,the,group,reduce,operation,as,combinable,combinable,operations,may,pre,reduce,the,data,before,the,actual,group,reduce,operations,combinable,user,defined,functions,must,implement,the,interface,link,group,combine,function,param,combinable,flag,to,mark,the,group,reduce,operation,as,combinable;public,void,set,combinable,boolean,combinable,if,combinable,group,combine,function,class,is,assignable,from,this,user,function,get,user,code,class,throw,new,illegal,argument,exception,cannot,set,a,udf,as,combinable,if,it,does,not,implement,the,interface,group,combine,function,class,get,name,else,this,combinable,combinable
GroupReduceOperatorBase -> public void setCombinable(boolean combinable);1460741894;Marks the group reduce operation as combinable. Combinable operations may pre-reduce the_data before the actual group reduce operations. Combinable user-defined functions_must implement the interface {@link GroupCombineFunction}.__@param combinable Flag to mark the group reduce operation as combinable.;public void setCombinable(boolean combinable) {_		_		if (combinable && !GroupCombineFunction.class.isAssignableFrom(this.userFunction.getUserCodeClass())) {_			throw new IllegalArgumentException("Cannot set a UDF as combinable if it does not implement the interface " +_					GroupCombineFunction.class.getName())__		} else {_			this.combinable = combinable__		}_	};marks,the,group,reduce,operation,as,combinable,combinable,operations,may,pre,reduce,the,data,before,the,actual,group,reduce,operations,combinable,user,defined,functions,must,implement,the,interface,link,group,combine,function,param,combinable,flag,to,mark,the,group,reduce,operation,as,combinable;public,void,set,combinable,boolean,combinable,if,combinable,group,combine,function,class,is,assignable,from,this,user,function,get,user,code,class,throw,new,illegal,argument,exception,cannot,set,a,udf,as,combinable,if,it,does,not,implement,the,interface,group,combine,function,class,get,name,else,this,combinable,combinable
GroupReduceOperatorBase -> public void setCombinable(boolean combinable);1515177486;Marks the group reduce operation as combinable. Combinable operations may pre-reduce the_data before the actual group reduce operations. Combinable user-defined functions_must implement the interface {@link GroupCombineFunction}.__@param combinable Flag to mark the group reduce operation as combinable.;public void setCombinable(boolean combinable) {_		_		if (combinable && !GroupCombineFunction.class.isAssignableFrom(this.userFunction.getUserCodeClass())) {_			throw new IllegalArgumentException("Cannot set a UDF as combinable if it does not implement the interface " +_					GroupCombineFunction.class.getName())__		} else {_			this.combinable = combinable__		}_	};marks,the,group,reduce,operation,as,combinable,combinable,operations,may,pre,reduce,the,data,before,the,actual,group,reduce,operations,combinable,user,defined,functions,must,implement,the,interface,link,group,combine,function,param,combinable,flag,to,mark,the,group,reduce,operation,as,combinable;public,void,set,combinable,boolean,combinable,if,combinable,group,combine,function,class,is,assignable,from,this,user,function,get,user,code,class,throw,new,illegal,argument,exception,cannot,set,a,udf,as,combinable,if,it,does,not,implement,the,interface,group,combine,function,class,get,name,else,this,combinable,combinable
GroupReduceOperatorBase -> public Ordering getGroupOrder();1405024514;Gets the order of elements within a reduce group. If no such order has been_set, this method returns null.__@return The secondary order.;public Ordering getGroupOrder() {_		return this.groupOrder__	};gets,the,order,of,elements,within,a,reduce,group,if,no,such,order,has,been,set,this,method,returns,null,return,the,secondary,order;public,ordering,get,group,order,return,this,group,order
GroupReduceOperatorBase -> public Ordering getGroupOrder();1405090423;Gets the order of elements within a reduce group. If no such order has been_set, this method returns null.__@return The secondary order.;public Ordering getGroupOrder() {_		return this.groupOrder__	};gets,the,order,of,elements,within,a,reduce,group,if,no,such,order,has,been,set,this,method,returns,null,return,the,secondary,order;public,ordering,get,group,order,return,this,group,order
GroupReduceOperatorBase -> public Ordering getGroupOrder();1406821655;Gets the order of elements within a reduce group. If no such order has been_set, this method returns null.__@return The secondary order.;public Ordering getGroupOrder() {_		return this.groupOrder__	};gets,the,order,of,elements,within,a,reduce,group,if,no,such,order,has,been,set,this,method,returns,null,return,the,secondary,order;public,ordering,get,group,order,return,this,group,order
GroupReduceOperatorBase -> public Ordering getGroupOrder();1411473593;Gets the order of elements within a reduce group. If no such order has been_set, this method returns null.__@return The secondary order.;public Ordering getGroupOrder() {_		return this.groupOrder__	};gets,the,order,of,elements,within,a,reduce,group,if,no,such,order,has,been,set,this,method,returns,null,return,the,secondary,order;public,ordering,get,group,order,return,this,group,order
GroupReduceOperatorBase -> public Ordering getGroupOrder();1412336525;Gets the order of elements within a reduce group. If no such order has been_set, this method returns null.__@return The secondary order.;public Ordering getGroupOrder() {_		return this.groupOrder__	};gets,the,order,of,elements,within,a,reduce,group,if,no,such,order,has,been,set,this,method,returns,null,return,the,secondary,order;public,ordering,get,group,order,return,this,group,order
GroupReduceOperatorBase -> public Ordering getGroupOrder();1412346153;Gets the order of elements within a reduce group. If no such order has been_set, this method returns null.__@return The secondary order.;public Ordering getGroupOrder() {_		return this.groupOrder__	};gets,the,order,of,elements,within,a,reduce,group,if,no,such,order,has,been,set,this,method,returns,null,return,the,secondary,order;public,ordering,get,group,order,return,this,group,order
GroupReduceOperatorBase -> public Ordering getGroupOrder();1412346153;Gets the order of elements within a reduce group. If no such order has been_set, this method returns null.__@return The secondary order.;public Ordering getGroupOrder() {_		return this.groupOrder__	};gets,the,order,of,elements,within,a,reduce,group,if,no,such,order,has,been,set,this,method,returns,null,return,the,secondary,order;public,ordering,get,group,order,return,this,group,order
GroupReduceOperatorBase -> public Ordering getGroupOrder();1412346154;Gets the order of elements within a reduce group. If no such order has been_set, this method returns null.__@return The secondary order.;public Ordering getGroupOrder() {_		return this.groupOrder__	};gets,the,order,of,elements,within,a,reduce,group,if,no,such,order,has,been,set,this,method,returns,null,return,the,secondary,order;public,ordering,get,group,order,return,this,group,order
GroupReduceOperatorBase -> public Ordering getGroupOrder();1412346154;Gets the order of elements within a reduce group. If no such order has been_set, this method returns null.__@return The secondary order.;public Ordering getGroupOrder() {_		return this.groupOrder__	};gets,the,order,of,elements,within,a,reduce,group,if,no,such,order,has,been,set,this,method,returns,null,return,the,secondary,order;public,ordering,get,group,order,return,this,group,order
GroupReduceOperatorBase -> public Ordering getGroupOrder();1412761141;Gets the order of elements within a reduce group. If no such order has been_set, this method returns null.__@return The secondary order.;public Ordering getGroupOrder() {_		return this.groupOrder__	};gets,the,order,of,elements,within,a,reduce,group,if,no,such,order,has,been,set,this,method,returns,null,return,the,secondary,order;public,ordering,get,group,order,return,this,group,order
GroupReduceOperatorBase -> public Ordering getGroupOrder();1416309577;Gets the order of elements within a reduce group. If no such order has been_set, this method returns null.__@return The secondary order.;public Ordering getGroupOrder() {_		return this.groupOrder__	};gets,the,order,of,elements,within,a,reduce,group,if,no,such,order,has,been,set,this,method,returns,null,return,the,secondary,order;public,ordering,get,group,order,return,this,group,order
GroupReduceOperatorBase -> public Ordering getGroupOrder();1423570503;Gets the order of elements within a reduce group. If no such order has been_set, this method returns null.__@return The secondary order.;public Ordering getGroupOrder() {_		return this.groupOrder__	};gets,the,order,of,elements,within,a,reduce,group,if,no,such,order,has,been,set,this,method,returns,null,return,the,secondary,order;public,ordering,get,group,order,return,this,group,order
GroupReduceOperatorBase -> public Ordering getGroupOrder();1425308868;Gets the order of elements within a reduce group. If no such order has been_set, this method returns null.__@return The secondary order.;public Ordering getGroupOrder() {_		return this.groupOrder__	};gets,the,order,of,elements,within,a,reduce,group,if,no,such,order,has,been,set,this,method,returns,null,return,the,secondary,order;public,ordering,get,group,order,return,this,group,order
GroupReduceOperatorBase -> public Ordering getGroupOrder();1427300031;Gets the order of elements within a reduce group. If no such order has been_set, this method returns null.__@return The secondary order.;public Ordering getGroupOrder() {_		return this.groupOrder__	};gets,the,order,of,elements,within,a,reduce,group,if,no,such,order,has,been,set,this,method,returns,null,return,the,secondary,order;public,ordering,get,group,order,return,this,group,order
GroupReduceOperatorBase -> public Ordering getGroupOrder();1429635795;Gets the order of elements within a reduce group. If no such order has been_set, this method returns null.__@return The secondary order.;public Ordering getGroupOrder() {_		return this.groupOrder__	};gets,the,order,of,elements,within,a,reduce,group,if,no,such,order,has,been,set,this,method,returns,null,return,the,secondary,order;public,ordering,get,group,order,return,this,group,order
GroupReduceOperatorBase -> public Ordering getGroupOrder();1448376260;Gets the order of elements within a reduce group. If no such order has been_set, this method returns null.__@return The secondary order.;public Ordering getGroupOrder() {_		return this.groupOrder__	};gets,the,order,of,elements,within,a,reduce,group,if,no,such,order,has,been,set,this,method,returns,null,return,the,secondary,order;public,ordering,get,group,order,return,this,group,order
GroupReduceOperatorBase -> public Ordering getGroupOrder();1455479358;Gets the order of elements within a reduce group. If no such order has been_set, this method returns null.__@return The secondary order.;public Ordering getGroupOrder() {_		return this.groupOrder__	};gets,the,order,of,elements,within,a,reduce,group,if,no,such,order,has,been,set,this,method,returns,null,return,the,secondary,order;public,ordering,get,group,order,return,this,group,order
GroupReduceOperatorBase -> public Ordering getGroupOrder();1460741894;Gets the order of elements within a reduce group. If no such order has been_set, this method returns null.__@return The secondary order.;public Ordering getGroupOrder() {_		return this.groupOrder__	};gets,the,order,of,elements,within,a,reduce,group,if,no,such,order,has,been,set,this,method,returns,null,return,the,secondary,order;public,ordering,get,group,order,return,this,group,order
GroupReduceOperatorBase -> public Ordering getGroupOrder();1515177486;Gets the order of elements within a reduce group. If no such order has been_set, this method returns null.__@return The secondary order.;public Ordering getGroupOrder() {_		return this.groupOrder__	};gets,the,order,of,elements,within,a,reduce,group,if,no,such,order,has,been,set,this,method,returns,null,return,the,secondary,order;public,ordering,get,group,order,return,this,group,order
GroupReduceOperatorBase -> public boolean isCombinable();1405024514;Checks whether the operation is combinable.__@return True, if the UDF is combinable, false if not.__@see #setCombinable(boolean);public boolean isCombinable() {_		return this.combinable__	};checks,whether,the,operation,is,combinable,return,true,if,the,udf,is,combinable,false,if,not,see,set,combinable,boolean;public,boolean,is,combinable,return,this,combinable
GroupReduceOperatorBase -> public boolean isCombinable();1405090423;Checks whether the operation is combinable.__@return True, if the UDF is combinable, false if not.__@see #setCombinable(boolean);public boolean isCombinable() {_		return this.combinable__	};checks,whether,the,operation,is,combinable,return,true,if,the,udf,is,combinable,false,if,not,see,set,combinable,boolean;public,boolean,is,combinable,return,this,combinable
GroupReduceOperatorBase -> public boolean isCombinable();1406821655;Checks whether the operation is combinable.__@return True, if the UDF is combinable, false if not.__@see #setCombinable(boolean);public boolean isCombinable() {_		return this.combinable__	};checks,whether,the,operation,is,combinable,return,true,if,the,udf,is,combinable,false,if,not,see,set,combinable,boolean;public,boolean,is,combinable,return,this,combinable
GroupReduceOperatorBase -> public boolean isCombinable();1411473593;Checks whether the operation is combinable.__@return True, if the UDF is combinable, false if not.__@see #setCombinable(boolean);public boolean isCombinable() {_		return this.combinable__	};checks,whether,the,operation,is,combinable,return,true,if,the,udf,is,combinable,false,if,not,see,set,combinable,boolean;public,boolean,is,combinable,return,this,combinable
GroupReduceOperatorBase -> public boolean isCombinable();1412336525;Checks whether the operation is combinable.__@return True, if the UDF is combinable, false if not.__@see #setCombinable(boolean);public boolean isCombinable() {_		return this.combinable__	};checks,whether,the,operation,is,combinable,return,true,if,the,udf,is,combinable,false,if,not,see,set,combinable,boolean;public,boolean,is,combinable,return,this,combinable
GroupReduceOperatorBase -> public boolean isCombinable();1412346153;Checks whether the operation is combinable.__@return True, if the UDF is combinable, false if not.__@see #setCombinable(boolean);public boolean isCombinable() {_		return this.combinable__	};checks,whether,the,operation,is,combinable,return,true,if,the,udf,is,combinable,false,if,not,see,set,combinable,boolean;public,boolean,is,combinable,return,this,combinable
GroupReduceOperatorBase -> public boolean isCombinable();1412346153;Checks whether the operation is combinable.__@return True, if the UDF is combinable, false if not.__@see #setCombinable(boolean);public boolean isCombinable() {_		return this.combinable__	};checks,whether,the,operation,is,combinable,return,true,if,the,udf,is,combinable,false,if,not,see,set,combinable,boolean;public,boolean,is,combinable,return,this,combinable
GroupReduceOperatorBase -> public boolean isCombinable();1412346154;Checks whether the operation is combinable.__@return True, if the UDF is combinable, false if not.__@see #setCombinable(boolean);public boolean isCombinable() {_		return this.combinable__	};checks,whether,the,operation,is,combinable,return,true,if,the,udf,is,combinable,false,if,not,see,set,combinable,boolean;public,boolean,is,combinable,return,this,combinable
GroupReduceOperatorBase -> public boolean isCombinable();1412346154;Checks whether the operation is combinable.__@return True, if the UDF is combinable, false if not.__@see #setCombinable(boolean);public boolean isCombinable() {_		return this.combinable__	};checks,whether,the,operation,is,combinable,return,true,if,the,udf,is,combinable,false,if,not,see,set,combinable,boolean;public,boolean,is,combinable,return,this,combinable
GroupReduceOperatorBase -> public boolean isCombinable();1412761141;Checks whether the operation is combinable.__@return True, if the UDF is combinable, false if not.__@see #setCombinable(boolean);public boolean isCombinable() {_		return this.combinable__	};checks,whether,the,operation,is,combinable,return,true,if,the,udf,is,combinable,false,if,not,see,set,combinable,boolean;public,boolean,is,combinable,return,this,combinable
GroupReduceOperatorBase -> public boolean isCombinable();1416309577;Checks whether the operation is combinable.__@return True, if the UDF is combinable, false if not.__@see #setCombinable(boolean);public boolean isCombinable() {_		return this.combinable__	};checks,whether,the,operation,is,combinable,return,true,if,the,udf,is,combinable,false,if,not,see,set,combinable,boolean;public,boolean,is,combinable,return,this,combinable
GroupReduceOperatorBase -> public boolean isCombinable();1423570503;Checks whether the operation is combinable.__@return True, if the UDF is combinable, false if not.__@see #setCombinable(boolean);public boolean isCombinable() {_		return this.combinable__	};checks,whether,the,operation,is,combinable,return,true,if,the,udf,is,combinable,false,if,not,see,set,combinable,boolean;public,boolean,is,combinable,return,this,combinable
GroupReduceOperatorBase -> public boolean isCombinable();1425308868;Checks whether the operation is combinable.__@return True, if the UDF is combinable, false if not.__@see #setCombinable(boolean);public boolean isCombinable() {_		return this.combinable__	};checks,whether,the,operation,is,combinable,return,true,if,the,udf,is,combinable,false,if,not,see,set,combinable,boolean;public,boolean,is,combinable,return,this,combinable
GroupReduceOperatorBase -> public boolean isCombinable();1427300031;Checks whether the operation is combinable.__@return True, if the UDF is combinable, false if not.__@see #setCombinable(boolean);public boolean isCombinable() {_		return this.combinable__	};checks,whether,the,operation,is,combinable,return,true,if,the,udf,is,combinable,false,if,not,see,set,combinable,boolean;public,boolean,is,combinable,return,this,combinable
GroupReduceOperatorBase -> public boolean isCombinable();1429635795;Checks whether the operation is combinable.__@return True, if the UDF is combinable, false if not.__@see #setCombinable(boolean);public boolean isCombinable() {_		return this.combinable__	};checks,whether,the,operation,is,combinable,return,true,if,the,udf,is,combinable,false,if,not,see,set,combinable,boolean;public,boolean,is,combinable,return,this,combinable
GroupReduceOperatorBase -> public boolean isCombinable();1448376260;Checks whether the operation is combinable.__@return True, if the UDF is combinable, false if not.__@see #setCombinable(boolean);public boolean isCombinable() {_		return this.combinable__	};checks,whether,the,operation,is,combinable,return,true,if,the,udf,is,combinable,false,if,not,see,set,combinable,boolean;public,boolean,is,combinable,return,this,combinable
GroupReduceOperatorBase -> public boolean isCombinable();1455479358;Checks whether the operation is combinable.__@return True, if the UDF is combinable, false if not.__@see #setCombinable(boolean);public boolean isCombinable() {_		return this.combinable__	};checks,whether,the,operation,is,combinable,return,true,if,the,udf,is,combinable,false,if,not,see,set,combinable,boolean;public,boolean,is,combinable,return,this,combinable
GroupReduceOperatorBase -> public boolean isCombinable();1460741894;Checks whether the operation is combinable.__@return True, if the UDF is combinable, false if not.__@see #setCombinable(boolean);public boolean isCombinable() {_		return this.combinable__	};checks,whether,the,operation,is,combinable,return,true,if,the,udf,is,combinable,false,if,not,see,set,combinable,boolean;public,boolean,is,combinable,return,this,combinable
GroupReduceOperatorBase -> public boolean isCombinable();1515177486;Checks whether the operation is combinable.__@return True, if the UDF is combinable, false if not.__@see #setCombinable(boolean);public boolean isCombinable() {_		return this.combinable__	};checks,whether,the,operation,is,combinable,return,true,if,the,udf,is,combinable,false,if,not,see,set,combinable,boolean;public,boolean,is,combinable,return,this,combinable
