commented;modifiers;parameterAmount;loc;comment;code
true;public;1;4;/**  * Consider using {@link #add(int)} instead for primitive integer values  */ ;// ------------------------------------------------------------------------ // Accumulator // ------------------------------------------------------------------------ /**  * Consider using {@link #add(int)} instead for primitive integer values  */ @Override public void add(Integer value) {     this.min = Math.min(this.min, value). }
false;public;0;4;;@Override public Integer getLocalValue() {     return this.min. }
false;public;1;4;;@Override public void merge(Accumulator<Integer, Integer> other) {     this.min = Math.min(this.min, other.getLocalValue()). }
false;public;0;4;;@Override public void resetLocal() {     this.min = Integer.MAX_VALUE. }
false;public;0;6;;@Override public IntMinimum clone() {     IntMinimum clone = new IntMinimum().     clone.min = this.min.     return clone. }
false;public;1;3;;// ------------------------------------------------------------------------ // Primitive Specializations // ------------------------------------------------------------------------ public void add(int value) {     this.min = Math.min(this.min, value). }
false;public;0;3;;public int getLocalValuePrimitive() {     return this.min. }
false;public;0;4;;// ------------------------------------------------------------------------ // Utilities // ------------------------------------------------------------------------ @Override public String toString() {     return "IntMinimum " + this.min. }
