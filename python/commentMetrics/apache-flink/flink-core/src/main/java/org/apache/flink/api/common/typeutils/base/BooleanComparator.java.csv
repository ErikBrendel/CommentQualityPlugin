commented;modifiers;parameterAmount;loc;comment;code
false;public;2;7;;@Override public int compareSerialized(DataInputView firstSource, DataInputView secondSource) throws IOException {     final int fs = firstSource.readBoolean() ? 1 : 0.     final int ss = secondSource.readBoolean() ? 1 : 0.     int comp = fs - ss.     return ascendingComparison ? comp : -comp. }
false;public;0;4;;@Override public boolean supportsNormalizedKey() {     return true. }
false;public;0;4;;@Override public int getNormalizeKeyLen() {     return 1. }
false;public;1;4;;@Override public boolean isNormalizedKeyPrefixOnly(int keyBytes) {     return keyBytes < 1. }
false;public;4;10;;@Override public void putNormalizedKey(Boolean value, MemorySegment target, int offset, int numBytes) {     if (numBytes > 0) {         target.put(offset, (byte) (value.booleanValue() ? 1 : 0)).         for (offset = offset + 1. numBytes > 1. numBytes--) {             target.put(offset++, (byte) 0).         }     } }
false;public;0;4;;@Override public BooleanComparator duplicate() {     return new BooleanComparator(ascendingComparison). }
