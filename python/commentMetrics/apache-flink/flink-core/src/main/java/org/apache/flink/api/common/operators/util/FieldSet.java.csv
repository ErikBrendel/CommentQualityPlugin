# id;timestamp;commentText;codeText;commentWords;codeWords
FieldSet -> public FieldSet(int[] fieldIDs, boolean marker);1405024514;Creates a set with the given fields.__@param fieldIDs The IDs of the fields.;public FieldSet(int[] fieldIDs, boolean marker) {_		if (fieldIDs == null || fieldIDs.length == 0) {_			this.collection = Collections.emptySet()__		} else {_			HashSet<Integer> set = new HashSet<Integer>(2 * fieldIDs.length)__			for (int i = 0_ i < fieldIDs.length_ i++) {_				set.add(fieldIDs[i])__			}_			_			this.collection = Collections.unmodifiableSet(set)__		}_	};creates,a,set,with,the,given,fields,param,field,ids,the,ids,of,the,fields;public,field,set,int,field,ids,boolean,marker,if,field,ids,null,field,ids,length,0,this,collection,collections,empty,set,else,hash,set,integer,set,new,hash,set,integer,2,field,ids,length,for,int,i,0,i,field,ids,length,i,set,add,field,ids,i,this,collection,collections,unmodifiable,set,set
FieldSet -> public FieldSet(int[] fieldIDs, boolean marker);1405090423;Creates a set with the given fields.__@param fieldIDs The IDs of the fields.;public FieldSet(int[] fieldIDs, boolean marker) {_		if (fieldIDs == null || fieldIDs.length == 0) {_			this.collection = Collections.emptySet()__		} else {_			HashSet<Integer> set = new HashSet<Integer>(2 * fieldIDs.length)__			for (int i = 0_ i < fieldIDs.length_ i++) {_				set.add(fieldIDs[i])__			}_			_			this.collection = Collections.unmodifiableSet(set)__		}_	};creates,a,set,with,the,given,fields,param,field,ids,the,ids,of,the,fields;public,field,set,int,field,ids,boolean,marker,if,field,ids,null,field,ids,length,0,this,collection,collections,empty,set,else,hash,set,integer,set,new,hash,set,integer,2,field,ids,length,for,int,i,0,i,field,ids,length,i,set,add,field,ids,i,this,collection,collections,unmodifiable,set,set
FieldSet -> public FieldSet(int[] fieldIDs, boolean marker);1411473593;Creates a set with the given fields.__@param fieldIDs The IDs of the fields.;public FieldSet(int[] fieldIDs, boolean marker) {_		if (fieldIDs == null || fieldIDs.length == 0) {_			this.collection = Collections.emptySet()__		} else {_			HashSet<Integer> set = new HashSet<Integer>(2 * fieldIDs.length)__			for (int i = 0_ i < fieldIDs.length_ i++) {_				set.add(fieldIDs[i])__			}_			_			this.collection = Collections.unmodifiableSet(set)__		}_	};creates,a,set,with,the,given,fields,param,field,ids,the,ids,of,the,fields;public,field,set,int,field,ids,boolean,marker,if,field,ids,null,field,ids,length,0,this,collection,collections,empty,set,else,hash,set,integer,set,new,hash,set,integer,2,field,ids,length,for,int,i,0,i,field,ids,length,i,set,add,field,ids,i,this,collection,collections,unmodifiable,set,set
FieldSet -> public FieldSet(int[] fieldIDs, boolean marker);1455479358;Creates a set with the given fields.__@param fieldIDs The IDs of the fields.;public FieldSet(int[] fieldIDs, boolean marker) {_		if (fieldIDs == null || fieldIDs.length == 0) {_			this.collection = Collections.emptySet()__		} else {_			HashSet<Integer> set = new HashSet<Integer>(2 * fieldIDs.length)__			for (int i = 0_ i < fieldIDs.length_ i++) {_				set.add(fieldIDs[i])__			}_			_			this.collection = Collections.unmodifiableSet(set)__		}_	};creates,a,set,with,the,given,fields,param,field,ids,the,ids,of,the,fields;public,field,set,int,field,ids,boolean,marker,if,field,ids,null,field,ids,length,0,this,collection,collections,empty,set,else,hash,set,integer,set,new,hash,set,integer,2,field,ids,length,for,int,i,0,i,field,ids,length,i,set,add,field,ids,i,this,collection,collections,unmodifiable,set,set
FieldSet -> public FieldSet(int... fieldIDs);1405024514;Creates a set with the given fields.__@param fieldIDs The IDs of the fields.;public FieldSet(int... fieldIDs) {_		if (fieldIDs == null || fieldIDs.length == 0) {_			this.collection = Collections.emptySet()__		} else {_			HashSet<Integer> set = new HashSet<Integer>(2 * fieldIDs.length)__			for (int i = 0_ i < fieldIDs.length_ i++) {_				set.add(fieldIDs[i])__			}_			_			this.collection = Collections.unmodifiableSet(set)__		}_	};creates,a,set,with,the,given,fields,param,field,ids,the,ids,of,the,fields;public,field,set,int,field,ids,if,field,ids,null,field,ids,length,0,this,collection,collections,empty,set,else,hash,set,integer,set,new,hash,set,integer,2,field,ids,length,for,int,i,0,i,field,ids,length,i,set,add,field,ids,i,this,collection,collections,unmodifiable,set,set
FieldSet -> public FieldSet(int... fieldIDs);1405090423;Creates a set with the given fields.__@param fieldIDs The IDs of the fields.;public FieldSet(int... fieldIDs) {_		if (fieldIDs == null || fieldIDs.length == 0) {_			this.collection = Collections.emptySet()__		} else {_			HashSet<Integer> set = new HashSet<Integer>(2 * fieldIDs.length)__			for (int i = 0_ i < fieldIDs.length_ i++) {_				set.add(fieldIDs[i])__			}_			_			this.collection = Collections.unmodifiableSet(set)__		}_	};creates,a,set,with,the,given,fields,param,field,ids,the,ids,of,the,fields;public,field,set,int,field,ids,if,field,ids,null,field,ids,length,0,this,collection,collections,empty,set,else,hash,set,integer,set,new,hash,set,integer,2,field,ids,length,for,int,i,0,i,field,ids,length,i,set,add,field,ids,i,this,collection,collections,unmodifiable,set,set
FieldSet -> public FieldSet(int... fieldIDs);1411473593;Creates a set with the given fields.__@param fieldIDs The IDs of the fields.;public FieldSet(int... fieldIDs) {_		if (fieldIDs == null || fieldIDs.length == 0) {_			this.collection = Collections.emptySet()__		} else {_			HashSet<Integer> set = new HashSet<Integer>(2 * fieldIDs.length)__			for (int i = 0_ i < fieldIDs.length_ i++) {_				set.add(fieldIDs[i])__			}_			_			this.collection = Collections.unmodifiableSet(set)__		}_	};creates,a,set,with,the,given,fields,param,field,ids,the,ids,of,the,fields;public,field,set,int,field,ids,if,field,ids,null,field,ids,length,0,this,collection,collections,empty,set,else,hash,set,integer,set,new,hash,set,integer,2,field,ids,length,for,int,i,0,i,field,ids,length,i,set,add,field,ids,i,this,collection,collections,unmodifiable,set,set
FieldSet -> public FieldSet(int... fieldIDs);1455479358;Creates a set with the given fields.__@param fieldIDs The IDs of the fields.;public FieldSet(int... fieldIDs) {_		if (fieldIDs == null || fieldIDs.length == 0) {_			this.collection = Collections.emptySet()__		} else {_			HashSet<Integer> set = new HashSet<Integer>(2 * fieldIDs.length)__			for (int i = 0_ i < fieldIDs.length_ i++) {_				set.add(fieldIDs[i])__			}_			_			this.collection = Collections.unmodifiableSet(set)__		}_	};creates,a,set,with,the,given,fields,param,field,ids,the,ids,of,the,fields;public,field,set,int,field,ids,if,field,ids,null,field,ids,length,0,this,collection,collections,empty,set,else,hash,set,integer,set,new,hash,set,integer,2,field,ids,length,for,int,i,0,i,field,ids,length,i,set,add,field,ids,i,this,collection,collections,unmodifiable,set,set
FieldSet -> public FieldSet();1405024514;Creates a new empty set of fields.;public FieldSet() {_		this.collection = Collections.emptySet()__	};creates,a,new,empty,set,of,fields;public,field,set,this,collection,collections,empty,set
FieldSet -> public FieldSet();1405090423;Creates a new empty set of fields.;public FieldSet() {_		this.collection = Collections.emptySet()__	};creates,a,new,empty,set,of,fields;public,field,set,this,collection,collections,empty,set
FieldSet -> public FieldSet();1411473593;Creates a new empty set of fields.;public FieldSet() {_		this.collection = Collections.emptySet()__	};creates,a,new,empty,set,of,fields;public,field,set,this,collection,collections,empty,set
FieldSet -> public FieldSet();1455479358;Creates a new empty set of fields.;public FieldSet() {_		this.collection = Collections.emptySet()__	};creates,a,new,empty,set,of,fields;public,field,set,this,collection,collections,empty,set
FieldSet -> public FieldSet(Integer fieldID);1405024514;Creates a set with one field.__@param fieldID The id of the field.;public FieldSet(Integer fieldID) {_		if (fieldID == null) {_			throw new IllegalArgumentException("Field ID must not be null.")__		}_		_		this.collection = Collections.singleton(fieldID)__	};creates,a,set,with,one,field,param,field,id,the,id,of,the,field;public,field,set,integer,field,id,if,field,id,null,throw,new,illegal,argument,exception,field,id,must,not,be,null,this,collection,collections,singleton,field,id
FieldSet -> public FieldSet(Integer fieldID);1405090423;Creates a set with one field.__@param fieldID The id of the field.;public FieldSet(Integer fieldID) {_		if (fieldID == null) {_			throw new IllegalArgumentException("Field ID must not be null.")__		}_		_		this.collection = Collections.singleton(fieldID)__	};creates,a,set,with,one,field,param,field,id,the,id,of,the,field;public,field,set,integer,field,id,if,field,id,null,throw,new,illegal,argument,exception,field,id,must,not,be,null,this,collection,collections,singleton,field,id
FieldSet -> public FieldSet(Integer fieldID);1411473593;Creates a set with one field.__@param fieldID The id of the field.;public FieldSet(Integer fieldID) {_		if (fieldID == null) {_			throw new IllegalArgumentException("Field ID must not be null.")__		}_		_		this.collection = Collections.singleton(fieldID)__	};creates,a,set,with,one,field,param,field,id,the,id,of,the,field;public,field,set,integer,field,id,if,field,id,null,throw,new,illegal,argument,exception,field,id,must,not,be,null,this,collection,collections,singleton,field,id
FieldSet -> public FieldSet(Integer fieldID);1455479358;Creates a set with one field.__@param fieldID The id of the field.;public FieldSet(Integer fieldID) {_		if (fieldID == null) {_			throw new IllegalArgumentException("Field ID must not be null.")__		}_		_		this.collection = Collections.singleton(fieldID)__	};creates,a,set,with,one,field,param,field,id,the,id,of,the,field;public,field,set,integer,field,id,if,field,id,null,throw,new,illegal,argument,exception,field,id,must,not,be,null,this,collection,collections,singleton,field,id
FieldSet -> public FieldList toFieldList();1405024514;Turns the FieldSet into an ordered FieldList.__@return An ordered FieldList.;public FieldList toFieldList() {_		int[] pos = toArray()__		Arrays.sort(pos)__		return new FieldList(pos)__	};turns,the,field,set,into,an,ordered,field,list,return,an,ordered,field,list;public,field,list,to,field,list,int,pos,to,array,arrays,sort,pos,return,new,field,list,pos
FieldSet -> public FieldList toFieldList();1405090423;Turns the FieldSet into an ordered FieldList.__@return An ordered FieldList.;public FieldList toFieldList() {_		int[] pos = toArray()__		Arrays.sort(pos)__		return new FieldList(pos)__	};turns,the,field,set,into,an,ordered,field,list,return,an,ordered,field,list;public,field,list,to,field,list,int,pos,to,array,arrays,sort,pos,return,new,field,list,pos
FieldSet -> public FieldList toFieldList();1411473593;Turns the FieldSet into an ordered FieldList.__@return An ordered FieldList.;public FieldList toFieldList() {_		int[] pos = toArray()__		Arrays.sort(pos)__		return new FieldList(pos)__	};turns,the,field,set,into,an,ordered,field,list,return,an,ordered,field,list;public,field,list,to,field,list,int,pos,to,array,arrays,sort,pos,return,new,field,list,pos
FieldSet -> public FieldList toFieldList();1455479358;Turns the FieldSet into an ordered FieldList.__@return An ordered FieldList.;public FieldList toFieldList() {_		int[] pos = toArray()__		Arrays.sort(pos)__		return new FieldList(pos)__	};turns,the,field,set,into,an,ordered,field,list,return,an,ordered,field,list;public,field,list,to,field,list,int,pos,to,array,arrays,sort,pos,return,new,field,list,pos
FieldSet -> public int[] toArray();1405024514;Transforms the field set into an array of field IDs. Whether the IDs are ordered_or unordered depends on the specific subclass of the field set.__@return An array of all contained field IDs.;public int[] toArray() {_		int[] a = new int[this.collection.size()]__		int i = 0__		for (int col : this.collection) {_			a[i++] = col__		}_		return a__	};transforms,the,field,set,into,an,array,of,field,ids,whether,the,ids,are,ordered,or,unordered,depends,on,the,specific,subclass,of,the,field,set,return,an,array,of,all,contained,field,ids;public,int,to,array,int,a,new,int,this,collection,size,int,i,0,for,int,col,this,collection,a,i,col,return,a
FieldSet -> public int[] toArray();1405090423;Transforms the field set into an array of field IDs. Whether the IDs are ordered_or unordered depends on the specific subclass of the field set.__@return An array of all contained field IDs.;public int[] toArray() {_		int[] a = new int[this.collection.size()]__		int i = 0__		for (int col : this.collection) {_			a[i++] = col__		}_		return a__	};transforms,the,field,set,into,an,array,of,field,ids,whether,the,ids,are,ordered,or,unordered,depends,on,the,specific,subclass,of,the,field,set,return,an,array,of,all,contained,field,ids;public,int,to,array,int,a,new,int,this,collection,size,int,i,0,for,int,col,this,collection,a,i,col,return,a
FieldSet -> public int[] toArray();1411473593;Transforms the field set into an array of field IDs. Whether the IDs are ordered_or unordered depends on the specific subclass of the field set.__@return An array of all contained field IDs.;public int[] toArray() {_		int[] a = new int[this.collection.size()]__		int i = 0__		for (int col : this.collection) {_			a[i++] = col__		}_		return a__	};transforms,the,field,set,into,an,array,of,field,ids,whether,the,ids,are,ordered,or,unordered,depends,on,the,specific,subclass,of,the,field,set,return,an,array,of,all,contained,field,ids;public,int,to,array,int,a,new,int,this,collection,size,int,i,0,for,int,col,this,collection,a,i,col,return,a
FieldSet -> public int[] toArray();1455479358;Transforms the field set into an array of field IDs. Whether the IDs are ordered_or unordered depends on the specific subclass of the field set.__@return An array of all contained field IDs.;public int[] toArray() {_		int[] a = new int[this.collection.size()]__		int i = 0__		for (int col : this.collection) {_			a[i++] = col__		}_		return a__	};transforms,the,field,set,into,an,array,of,field,ids,whether,the,ids,are,ordered,or,unordered,depends,on,the,specific,subclass,of,the,field,set,return,an,array,of,all,contained,field,ids;public,int,to,array,int,a,new,int,this,collection,size,int,i,0,for,int,col,this,collection,a,i,col,return,a
FieldSet -> public boolean isValidSubset(FieldSet set);1405024514;Checks if the given set of fields is a valid subset of this set of fields. For unordered_sets, this is the case if all of the given set's fields are also part of this field._<p>_Subclasses that describe field sets where the field order matters must override this method_to implement a field ordering sensitive check.__@param set The set that is a candidate subset._@return True, if the given set is a subset of this set, false otherwise.;public boolean isValidSubset(FieldSet set) {_		if (set.size() > size()) {_			return false__		}_		for (Integer i : set) {_			if (!contains(i)) {_				return false__			}_		}_		return true__	};checks,if,the,given,set,of,fields,is,a,valid,subset,of,this,set,of,fields,for,unordered,sets,this,is,the,case,if,all,of,the,given,set,s,fields,are,also,part,of,this,field,p,subclasses,that,describe,field,sets,where,the,field,order,matters,must,override,this,method,to,implement,a,field,ordering,sensitive,check,param,set,the,set,that,is,a,candidate,subset,return,true,if,the,given,set,is,a,subset,of,this,set,false,otherwise;public,boolean,is,valid,subset,field,set,set,if,set,size,size,return,false,for,integer,i,set,if,contains,i,return,false,return,true
FieldSet -> public boolean isValidSubset(FieldSet set);1405090423;Checks if the given set of fields is a valid subset of this set of fields. For unordered_sets, this is the case if all of the given set's fields are also part of this field._<p>_Subclasses that describe field sets where the field order matters must override this method_to implement a field ordering sensitive check.__@param set The set that is a candidate subset._@return True, if the given set is a subset of this set, false otherwise.;public boolean isValidSubset(FieldSet set) {_		if (set.size() > size()) {_			return false__		}_		for (Integer i : set) {_			if (!contains(i)) {_				return false__			}_		}_		return true__	};checks,if,the,given,set,of,fields,is,a,valid,subset,of,this,set,of,fields,for,unordered,sets,this,is,the,case,if,all,of,the,given,set,s,fields,are,also,part,of,this,field,p,subclasses,that,describe,field,sets,where,the,field,order,matters,must,override,this,method,to,implement,a,field,ordering,sensitive,check,param,set,the,set,that,is,a,candidate,subset,return,true,if,the,given,set,is,a,subset,of,this,set,false,otherwise;public,boolean,is,valid,subset,field,set,set,if,set,size,size,return,false,for,integer,i,set,if,contains,i,return,false,return,true
FieldSet -> public boolean isValidSubset(FieldSet set);1411473593;Checks if the given set of fields is a valid subset of this set of fields. For unordered_sets, this is the case if all of the given set's fields are also part of this field._<p>_Subclasses that describe field sets where the field order matters must override this method_to implement a field ordering sensitive check.__@param set The set that is a candidate subset._@return True, if the given set is a subset of this set, false otherwise.;public boolean isValidSubset(FieldSet set) {_		if (set.size() > size()) {_			return false__		}_		for (Integer i : set) {_			if (!contains(i)) {_				return false__			}_		}_		return true__	};checks,if,the,given,set,of,fields,is,a,valid,subset,of,this,set,of,fields,for,unordered,sets,this,is,the,case,if,all,of,the,given,set,s,fields,are,also,part,of,this,field,p,subclasses,that,describe,field,sets,where,the,field,order,matters,must,override,this,method,to,implement,a,field,ordering,sensitive,check,param,set,the,set,that,is,a,candidate,subset,return,true,if,the,given,set,is,a,subset,of,this,set,false,otherwise;public,boolean,is,valid,subset,field,set,set,if,set,size,size,return,false,for,integer,i,set,if,contains,i,return,false,return,true
FieldSet -> public boolean isValidSubset(FieldSet set);1455479358;Checks if the given set of fields is a valid subset of this set of fields. For unordered_sets, this is the case if all of the given set's fields are also part of this field._<p>_Subclasses that describe field sets where the field order matters must override this method_to implement a field ordering sensitive check.__@param set The set that is a candidate subset._@return True, if the given set is a subset of this set, false otherwise.;public boolean isValidSubset(FieldSet set) {_		if (set.size() > size()) {_			return false__		}_		for (Integer i : set) {_			if (!contains(i)) {_				return false__			}_		}_		return true__	};checks,if,the,given,set,of,fields,is,a,valid,subset,of,this,set,of,fields,for,unordered,sets,this,is,the,case,if,all,of,the,given,set,s,fields,are,also,part,of,this,field,p,subclasses,that,describe,field,sets,where,the,field,order,matters,must,override,this,method,to,implement,a,field,ordering,sensitive,check,param,set,the,set,that,is,a,candidate,subset,return,true,if,the,given,set,is,a,subset,of,this,set,false,otherwise;public,boolean,is,valid,subset,field,set,set,if,set,size,size,return,false,for,integer,i,set,if,contains,i,return,false,return,true
FieldSet -> public FieldSet clone();1405024514;Since instances of FieldSet are strictly immutable, this method does not actually clone,_but it only returns the original instance.__@return This objects reference, unmodified.;public FieldSet clone() {_		return this__	};since,instances,of,field,set,are,strictly,immutable,this,method,does,not,actually,clone,but,it,only,returns,the,original,instance,return,this,objects,reference,unmodified;public,field,set,clone,return,this
FieldSet -> public FieldSet clone();1405090423;Since instances of FieldSet are strictly immutable, this method does not actually clone,_but it only returns the original instance.__@return This objects reference, unmodified.;public FieldSet clone() {_		return this__	};since,instances,of,field,set,are,strictly,immutable,this,method,does,not,actually,clone,but,it,only,returns,the,original,instance,return,this,objects,reference,unmodified;public,field,set,clone,return,this
FieldSet -> public FieldSet clone();1411473593;Since instances of FieldSet are strictly immutable, this method does not actually clone,_but it only returns the original instance.__@return This objects reference, unmodified.;public FieldSet clone() {_		return this__	};since,instances,of,field,set,are,strictly,immutable,this,method,does,not,actually,clone,but,it,only,returns,the,original,instance,return,this,objects,reference,unmodified;public,field,set,clone,return,this
FieldSet -> public FieldSet clone();1455479358;Since instances of FieldSet are strictly immutable, this method does not actually clone,_but it only returns the original instance.__@return This objects reference, unmodified.;public FieldSet clone() {_		return this__	};since,instances,of,field,set,are,strictly,immutable,this,method,does,not,actually,clone,but,it,only,returns,the,original,instance,return,this,objects,reference,unmodified;public,field,set,clone,return,this
FieldSet -> private FieldSet(FieldSet fieldSet, Integer fieldID);1405024514;@param fieldSet The first part of the new set, NOT NULL!_@param fieldID The ID to be added, NOT NULL!;private FieldSet(FieldSet fieldSet, Integer fieldID) {_		if (fieldSet.size() == 0) {_			this.collection = Collections.singleton(fieldID)__		}_		else {_			HashSet<Integer> set = new HashSet<Integer>(2 * (fieldSet.collection.size() + 1))__			set.addAll(fieldSet.collection)__			set.add(fieldID)__			this.collection = Collections.unmodifiableSet(set)__		}_	};param,field,set,the,first,part,of,the,new,set,not,null,param,field,id,the,id,to,be,added,not,null;private,field,set,field,set,field,set,integer,field,id,if,field,set,size,0,this,collection,collections,singleton,field,id,else,hash,set,integer,set,new,hash,set,integer,2,field,set,collection,size,1,set,add,all,field,set,collection,set,add,field,id,this,collection,collections,unmodifiable,set,set
FieldSet -> private FieldSet(FieldSet fieldSet, Integer fieldID);1405090423;@param fieldSet The first part of the new set, NOT NULL!_@param fieldID The ID to be added, NOT NULL!;private FieldSet(FieldSet fieldSet, Integer fieldID) {_		if (fieldSet.size() == 0) {_			this.collection = Collections.singleton(fieldID)__		}_		else {_			HashSet<Integer> set = new HashSet<Integer>(2 * (fieldSet.collection.size() + 1))__			set.addAll(fieldSet.collection)__			set.add(fieldID)__			this.collection = Collections.unmodifiableSet(set)__		}_	};param,field,set,the,first,part,of,the,new,set,not,null,param,field,id,the,id,to,be,added,not,null;private,field,set,field,set,field,set,integer,field,id,if,field,set,size,0,this,collection,collections,singleton,field,id,else,hash,set,integer,set,new,hash,set,integer,2,field,set,collection,size,1,set,add,all,field,set,collection,set,add,field,id,this,collection,collections,unmodifiable,set,set
FieldSet -> private FieldSet(FieldSet fieldSet, Integer fieldID);1411473593;@param fieldSet The first part of the new set, NOT NULL!_@param fieldID The ID to be added, NOT NULL!;private FieldSet(FieldSet fieldSet, Integer fieldID) {_		if (fieldSet.size() == 0) {_			this.collection = Collections.singleton(fieldID)__		}_		else {_			HashSet<Integer> set = new HashSet<Integer>(2 * (fieldSet.collection.size() + 1))__			set.addAll(fieldSet.collection)__			set.add(fieldID)__			this.collection = Collections.unmodifiableSet(set)__		}_	};param,field,set,the,first,part,of,the,new,set,not,null,param,field,id,the,id,to,be,added,not,null;private,field,set,field,set,field,set,integer,field,id,if,field,set,size,0,this,collection,collections,singleton,field,id,else,hash,set,integer,set,new,hash,set,integer,2,field,set,collection,size,1,set,add,all,field,set,collection,set,add,field,id,this,collection,collections,unmodifiable,set,set
FieldSet -> private FieldSet(FieldSet fieldSet, Integer fieldID);1455479358;@param fieldSet The first part of the new set, NOT NULL!_@param fieldID The ID to be added, NOT NULL!;private FieldSet(FieldSet fieldSet, Integer fieldID) {_		if (fieldSet.size() == 0) {_			this.collection = Collections.singleton(fieldID)__		}_		else {_			HashSet<Integer> set = new HashSet<Integer>(2 * (fieldSet.collection.size() + 1))__			set.addAll(fieldSet.collection)__			set.add(fieldID)__			this.collection = Collections.unmodifiableSet(set)__		}_	};param,field,set,the,first,part,of,the,new,set,not,null,param,field,id,the,id,to,be,added,not,null;private,field,set,field,set,field,set,integer,field,id,if,field,set,size,0,this,collection,collections,singleton,field,id,else,hash,set,integer,set,new,hash,set,integer,2,field,set,collection,size,1,set,add,all,field,set,collection,set,add,field,id,this,collection,collections,unmodifiable,set,set
