# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractUdfOperator -> public Map<String, Operator<?>> getBroadcastInputs();1405024514;Returns the input, or null, if none is set.__@return The broadcast input root operator.;public Map<String, Operator<?>> getBroadcastInputs() {_		return this.broadcastInputs__	};returns,the,input,or,null,if,none,is,set,return,the,broadcast,input,root,operator;public,map,string,operator,get,broadcast,inputs,return,this,broadcast,inputs
AbstractUdfOperator -> public Map<String, Operator<?>> getBroadcastInputs();1405090423;Returns the input, or null, if none is set.__@return The broadcast input root operator.;public Map<String, Operator<?>> getBroadcastInputs() {_		return this.broadcastInputs__	};returns,the,input,or,null,if,none,is,set,return,the,broadcast,input,root,operator;public,map,string,operator,get,broadcast,inputs,return,this,broadcast,inputs
AbstractUdfOperator -> public Map<String, Operator<?>> getBroadcastInputs();1411473593;Returns the input, or null, if none is set.__@return The broadcast input root operator.;public Map<String, Operator<?>> getBroadcastInputs() {_		return this.broadcastInputs__	};returns,the,input,or,null,if,none,is,set,return,the,broadcast,input,root,operator;public,map,string,operator,get,broadcast,inputs,return,this,broadcast,inputs
AbstractUdfOperator -> public Map<String, Operator<?>> getBroadcastInputs();1446112342;Returns the input, or null, if none is set.__@return The broadcast input root operator.;public Map<String, Operator<?>> getBroadcastInputs() {_		return this.broadcastInputs__	};returns,the,input,or,null,if,none,is,set,return,the,broadcast,input,root,operator;public,map,string,operator,get,broadcast,inputs,return,this,broadcast,inputs
AbstractUdfOperator -> public Map<String, Operator<?>> getBroadcastInputs();1451905579;Returns the input, or null, if none is set.__@return The broadcast input root operator.;public Map<String, Operator<?>> getBroadcastInputs() {_		return this.broadcastInputs__	};returns,the,input,or,null,if,none,is,set,return,the,broadcast,input,root,operator;public,map,string,operator,get,broadcast,inputs,return,this,broadcast,inputs
AbstractUdfOperator -> public Map<String, Operator<?>> getBroadcastInputs();1452178883;Returns the input, or null, if none is set.__@return The broadcast input root operator.;public Map<String, Operator<?>> getBroadcastInputs() {_		return this.broadcastInputs__	};returns,the,input,or,null,if,none,is,set,return,the,broadcast,input,root,operator;public,map,string,operator,get,broadcast,inputs,return,this,broadcast,inputs
AbstractUdfOperator -> public Map<String, Operator<?>> getBroadcastInputs();1455479358;Returns the input, or null, if none is set.__@return The broadcast input root operator.;public Map<String, Operator<?>> getBroadcastInputs() {_		return this.broadcastInputs__	};returns,the,input,or,null,if,none,is,set,return,the,broadcast,input,root,operator;public,map,string,operator,get,broadcast,inputs,return,this,broadcast,inputs
AbstractUdfOperator -> public abstract int[] getKeyColumns(int inputNum)_;1405024514;Gets the column numbers of the key fields in the input records for the given input.__@return The column numbers of the key fields.;public abstract int[] getKeyColumns(int inputNum)_;gets,the,column,numbers,of,the,key,fields,in,the,input,records,for,the,given,input,return,the,column,numbers,of,the,key,fields;public,abstract,int,get,key,columns,int,input,num
AbstractUdfOperator -> public abstract int[] getKeyColumns(int inputNum)_;1405090423;Gets the column numbers of the key fields in the input records for the given input.__@return The column numbers of the key fields.;public abstract int[] getKeyColumns(int inputNum)_;gets,the,column,numbers,of,the,key,fields,in,the,input,records,for,the,given,input,return,the,column,numbers,of,the,key,fields;public,abstract,int,get,key,columns,int,input,num
AbstractUdfOperator -> public abstract int[] getKeyColumns(int inputNum)_;1411473593;Gets the column numbers of the key fields in the input records for the given input.__@return The column numbers of the key fields.;public abstract int[] getKeyColumns(int inputNum)_;gets,the,column,numbers,of,the,key,fields,in,the,input,records,for,the,given,input,return,the,column,numbers,of,the,key,fields;public,abstract,int,get,key,columns,int,input,num
AbstractUdfOperator -> public abstract int[] getKeyColumns(int inputNum)_;1446112342;Gets the column numbers of the key fields in the input records for the given input.__@return The column numbers of the key fields.;public abstract int[] getKeyColumns(int inputNum)_;gets,the,column,numbers,of,the,key,fields,in,the,input,records,for,the,given,input,return,the,column,numbers,of,the,key,fields;public,abstract,int,get,key,columns,int,input,num
AbstractUdfOperator -> public abstract int[] getKeyColumns(int inputNum)_;1451905579;Gets the column numbers of the key fields in the input records for the given input.__@return The column numbers of the key fields.;public abstract int[] getKeyColumns(int inputNum)_;gets,the,column,numbers,of,the,key,fields,in,the,input,records,for,the,given,input,return,the,column,numbers,of,the,key,fields;public,abstract,int,get,key,columns,int,input,num
AbstractUdfOperator -> public abstract int[] getKeyColumns(int inputNum)_;1452178883;Gets the column numbers of the key fields in the input records for the given input.__@return The column numbers of the key fields.;public abstract int[] getKeyColumns(int inputNum)_;gets,the,column,numbers,of,the,key,fields,in,the,input,records,for,the,given,input,return,the,column,numbers,of,the,key,fields;public,abstract,int,get,key,columns,int,input,num
AbstractUdfOperator -> public abstract int[] getKeyColumns(int inputNum)_;1455479358;Gets the column numbers of the key fields in the input records for the given input.__@return The column numbers of the key fields.;public abstract int[] getKeyColumns(int inputNum)_;gets,the,column,numbers,of,the,key,fields,in,the,input,records,for,the,given,input,return,the,column,numbers,of,the,key,fields;public,abstract,int,get,key,columns,int,input,num
AbstractUdfOperator -> public void setBroadcastVariable(String name, Operator<?> root);1405024514;Binds the result produced by a plan rooted at {@code root} to a variable_used by the UDF wrapped in this operator.__@param root The root of the plan producing this input.;public void setBroadcastVariable(String name, Operator<?> root) {_		if (name == null) {_			throw new IllegalArgumentException("The broadcast input name may not be null.")__		}_		if (root == null) {_			throw new IllegalArgumentException("The broadcast input root operator may not be null.")__		}_		_		this.broadcastInputs.put(name, root)__	};binds,the,result,produced,by,a,plan,rooted,at,code,root,to,a,variable,used,by,the,udf,wrapped,in,this,operator,param,root,the,root,of,the,plan,producing,this,input;public,void,set,broadcast,variable,string,name,operator,root,if,name,null,throw,new,illegal,argument,exception,the,broadcast,input,name,may,not,be,null,if,root,null,throw,new,illegal,argument,exception,the,broadcast,input,root,operator,may,not,be,null,this,broadcast,inputs,put,name,root
AbstractUdfOperator -> public void setBroadcastVariable(String name, Operator<?> root);1405090423;Binds the result produced by a plan rooted at {@code root} to a variable_used by the UDF wrapped in this operator.__@param root The root of the plan producing this input.;public void setBroadcastVariable(String name, Operator<?> root) {_		if (name == null) {_			throw new IllegalArgumentException("The broadcast input name may not be null.")__		}_		if (root == null) {_			throw new IllegalArgumentException("The broadcast input root operator may not be null.")__		}_		_		this.broadcastInputs.put(name, root)__	};binds,the,result,produced,by,a,plan,rooted,at,code,root,to,a,variable,used,by,the,udf,wrapped,in,this,operator,param,root,the,root,of,the,plan,producing,this,input;public,void,set,broadcast,variable,string,name,operator,root,if,name,null,throw,new,illegal,argument,exception,the,broadcast,input,name,may,not,be,null,if,root,null,throw,new,illegal,argument,exception,the,broadcast,input,root,operator,may,not,be,null,this,broadcast,inputs,put,name,root
AbstractUdfOperator -> public void setBroadcastVariable(String name, Operator<?> root);1411473593;Binds the result produced by a plan rooted at {@code root} to a variable_used by the UDF wrapped in this operator.__@param root The root of the plan producing this input.;public void setBroadcastVariable(String name, Operator<?> root) {_		if (name == null) {_			throw new IllegalArgumentException("The broadcast input name may not be null.")__		}_		if (root == null) {_			throw new IllegalArgumentException("The broadcast input root operator may not be null.")__		}_		_		this.broadcastInputs.put(name, root)__	};binds,the,result,produced,by,a,plan,rooted,at,code,root,to,a,variable,used,by,the,udf,wrapped,in,this,operator,param,root,the,root,of,the,plan,producing,this,input;public,void,set,broadcast,variable,string,name,operator,root,if,name,null,throw,new,illegal,argument,exception,the,broadcast,input,name,may,not,be,null,if,root,null,throw,new,illegal,argument,exception,the,broadcast,input,root,operator,may,not,be,null,this,broadcast,inputs,put,name,root
AbstractUdfOperator -> public void setBroadcastVariable(String name, Operator<?> root);1446112342;Binds the result produced by a plan rooted at {@code root} to a variable_used by the UDF wrapped in this operator.__@param root The root of the plan producing this input.;public void setBroadcastVariable(String name, Operator<?> root) {_		if (name == null) {_			throw new IllegalArgumentException("The broadcast input name may not be null.")__		}_		if (root == null) {_			throw new IllegalArgumentException("The broadcast input root operator may not be null.")__		}_		_		this.broadcastInputs.put(name, root)__	};binds,the,result,produced,by,a,plan,rooted,at,code,root,to,a,variable,used,by,the,udf,wrapped,in,this,operator,param,root,the,root,of,the,plan,producing,this,input;public,void,set,broadcast,variable,string,name,operator,root,if,name,null,throw,new,illegal,argument,exception,the,broadcast,input,name,may,not,be,null,if,root,null,throw,new,illegal,argument,exception,the,broadcast,input,root,operator,may,not,be,null,this,broadcast,inputs,put,name,root
AbstractUdfOperator -> public void setBroadcastVariable(String name, Operator<?> root);1451905579;Binds the result produced by a plan rooted at {@code root} to a variable_used by the UDF wrapped in this operator.__@param root The root of the plan producing this input.;public void setBroadcastVariable(String name, Operator<?> root) {_		if (name == null) {_			throw new IllegalArgumentException("The broadcast input name may not be null.")__		}_		if (root == null) {_			throw new IllegalArgumentException("The broadcast input root operator may not be null.")__		}_		_		this.broadcastInputs.put(name, root)__	};binds,the,result,produced,by,a,plan,rooted,at,code,root,to,a,variable,used,by,the,udf,wrapped,in,this,operator,param,root,the,root,of,the,plan,producing,this,input;public,void,set,broadcast,variable,string,name,operator,root,if,name,null,throw,new,illegal,argument,exception,the,broadcast,input,name,may,not,be,null,if,root,null,throw,new,illegal,argument,exception,the,broadcast,input,root,operator,may,not,be,null,this,broadcast,inputs,put,name,root
AbstractUdfOperator -> public void setBroadcastVariable(String name, Operator<?> root);1452178883;Binds the result produced by a plan rooted at {@code root} to a variable_used by the UDF wrapped in this operator.__@param root The root of the plan producing this input.;public void setBroadcastVariable(String name, Operator<?> root) {_		if (name == null) {_			throw new IllegalArgumentException("The broadcast input name may not be null.")__		}_		if (root == null) {_			throw new IllegalArgumentException("The broadcast input root operator may not be null.")__		}_		_		this.broadcastInputs.put(name, root)__	};binds,the,result,produced,by,a,plan,rooted,at,code,root,to,a,variable,used,by,the,udf,wrapped,in,this,operator,param,root,the,root,of,the,plan,producing,this,input;public,void,set,broadcast,variable,string,name,operator,root,if,name,null,throw,new,illegal,argument,exception,the,broadcast,input,name,may,not,be,null,if,root,null,throw,new,illegal,argument,exception,the,broadcast,input,root,operator,may,not,be,null,this,broadcast,inputs,put,name,root
AbstractUdfOperator -> public void setBroadcastVariable(String name, Operator<?> root);1455479358;Binds the result produced by a plan rooted at {@code root} to a variable_used by the UDF wrapped in this operator.__@param root The root of the plan producing this input.;public void setBroadcastVariable(String name, Operator<?> root) {_		if (name == null) {_			throw new IllegalArgumentException("The broadcast input name may not be null.")__		}_		if (root == null) {_			throw new IllegalArgumentException("The broadcast input root operator may not be null.")__		}_		_		this.broadcastInputs.put(name, root)__	};binds,the,result,produced,by,a,plan,rooted,at,code,root,to,a,variable,used,by,the,udf,wrapped,in,this,operator,param,root,the,root,of,the,plan,producing,this,input;public,void,set,broadcast,variable,string,name,operator,root,if,name,null,throw,new,illegal,argument,exception,the,broadcast,input,name,may,not,be,null,if,root,null,throw,new,illegal,argument,exception,the,broadcast,input,root,operator,may,not,be,null,this,broadcast,inputs,put,name,root
AbstractUdfOperator -> protected static final <U> Class<U>[] emptyClassArray();1405024514;Generic utility function that returns an empty class array.__@param <U> The type of the classes._@return An empty array of type <tt>Class&lt_U&gt_</tt>.;protected static final <U> Class<U>[] emptyClassArray() {_		@SuppressWarnings("unchecked")_		Class<U>[] array = new Class[0]__		return array__	};generic,utility,function,that,returns,an,empty,class,array,param,u,the,type,of,the,classes,return,an,empty,array,of,type,tt,class,lt,u,gt,tt;protected,static,final,u,class,u,empty,class,array,suppress,warnings,unchecked,class,u,array,new,class,0,return,array
AbstractUdfOperator -> protected static final <U> Class<U>[] emptyClassArray();1405090423;Generic utility function that returns an empty class array.__@param <U> The type of the classes._@return An empty array of type <tt>Class&lt_U&gt_</tt>.;protected static final <U> Class<U>[] emptyClassArray() {_		@SuppressWarnings("unchecked")_		Class<U>[] array = new Class[0]__		return array__	};generic,utility,function,that,returns,an,empty,class,array,param,u,the,type,of,the,classes,return,an,empty,array,of,type,tt,class,lt,u,gt,tt;protected,static,final,u,class,u,empty,class,array,suppress,warnings,unchecked,class,u,array,new,class,0,return,array
AbstractUdfOperator -> protected static final <U> Class<U>[] emptyClassArray();1411473593;Generic utility function that returns an empty class array.__@param <U> The type of the classes._@return An empty array of type <tt>Class&lt_U&gt_</tt>.;protected static final <U> Class<U>[] emptyClassArray() {_		@SuppressWarnings("unchecked")_		Class<U>[] array = new Class[0]__		return array__	};generic,utility,function,that,returns,an,empty,class,array,param,u,the,type,of,the,classes,return,an,empty,array,of,type,tt,class,lt,u,gt,tt;protected,static,final,u,class,u,empty,class,array,suppress,warnings,unchecked,class,u,array,new,class,0,return,array
AbstractUdfOperator -> protected static final <U> Class<U>[] emptyClassArray();1446112342;Generic utility function that returns an empty class array.__@param <U> The type of the classes._@return An empty array of type <tt>Class&lt_U&gt_</tt>.;protected static final <U> Class<U>[] emptyClassArray() {_		@SuppressWarnings("unchecked")_		Class<U>[] array = new Class[0]__		return array__	};generic,utility,function,that,returns,an,empty,class,array,param,u,the,type,of,the,classes,return,an,empty,array,of,type,tt,class,lt,u,gt,tt;protected,static,final,u,class,u,empty,class,array,suppress,warnings,unchecked,class,u,array,new,class,0,return,array
AbstractUdfOperator -> public abstract int getNumberOfInputs()_;1405024514;Gets the number of inputs for this operator.__@return The number of inputs for this operator.;public abstract int getNumberOfInputs()_;gets,the,number,of,inputs,for,this,operator,return,the,number,of,inputs,for,this,operator;public,abstract,int,get,number,of,inputs
AbstractUdfOperator -> public abstract int getNumberOfInputs()_;1405090423;Gets the number of inputs for this operator.__@return The number of inputs for this operator.;public abstract int getNumberOfInputs()_;gets,the,number,of,inputs,for,this,operator,return,the,number,of,inputs,for,this,operator;public,abstract,int,get,number,of,inputs
AbstractUdfOperator -> public abstract int getNumberOfInputs()_;1411473593;Gets the number of inputs for this operator.__@return The number of inputs for this operator.;public abstract int getNumberOfInputs()_;gets,the,number,of,inputs,for,this,operator,return,the,number,of,inputs,for,this,operator;public,abstract,int,get,number,of,inputs
AbstractUdfOperator -> public abstract int getNumberOfInputs()_;1446112342;Gets the number of inputs for this operator.__@return The number of inputs for this operator.;public abstract int getNumberOfInputs()_;gets,the,number,of,inputs,for,this,operator,return,the,number,of,inputs,for,this,operator;public,abstract,int,get,number,of,inputs
AbstractUdfOperator -> public abstract int getNumberOfInputs()_;1451905579;Gets the number of inputs for this operator.__@return The number of inputs for this operator.;public abstract int getNumberOfInputs()_;gets,the,number,of,inputs,for,this,operator,return,the,number,of,inputs,for,this,operator;public,abstract,int,get,number,of,inputs
AbstractUdfOperator -> public abstract int getNumberOfInputs()_;1452178883;Gets the number of inputs for this operator.__@return The number of inputs for this operator.;public abstract int getNumberOfInputs()_;gets,the,number,of,inputs,for,this,operator,return,the,number,of,inputs,for,this,operator;public,abstract,int,get,number,of,inputs
AbstractUdfOperator -> public abstract int getNumberOfInputs()_;1455479358;Gets the number of inputs for this operator.__@return The number of inputs for this operator.;public abstract int getNumberOfInputs()_;gets,the,number,of,inputs,for,this,operator,return,the,number,of,inputs,for,this,operator;public,abstract,int,get,number,of,inputs
AbstractUdfOperator -> protected static <U> Class<U>[] emptyClassArray();1451905579;Generic utility function that returns an empty class array.__@param <U> The type of the classes._@return An empty array of type <tt>Class&lt_U&gt_</tt>.;protected static <U> Class<U>[] emptyClassArray() {_		@SuppressWarnings("unchecked")_		Class<U>[] array = new Class[0]__		return array__	};generic,utility,function,that,returns,an,empty,class,array,param,u,the,type,of,the,classes,return,an,empty,array,of,type,tt,class,lt,u,gt,tt;protected,static,u,class,u,empty,class,array,suppress,warnings,unchecked,class,u,array,new,class,0,return,array
AbstractUdfOperator -> protected static <U> Class<U>[] emptyClassArray();1452178883;Generic utility function that returns an empty class array.__@param <U> The type of the classes._@return An empty array of type <tt>Class&lt_U&gt_</tt>.;protected static <U> Class<U>[] emptyClassArray() {_		@SuppressWarnings("unchecked")_		Class<U>[] array = new Class[0]__		return array__	};generic,utility,function,that,returns,an,empty,class,array,param,u,the,type,of,the,classes,return,an,empty,array,of,type,tt,class,lt,u,gt,tt;protected,static,u,class,u,empty,class,array,suppress,warnings,unchecked,class,u,array,new,class,0,return,array
AbstractUdfOperator -> protected static <U> Class<U>[] emptyClassArray();1455479358;Generic utility function that returns an empty class array.__@param <U> The type of the classes._@return An empty array of type <tt>Class&lt_U&gt_</tt>.;protected static <U> Class<U>[] emptyClassArray() {_		@SuppressWarnings("unchecked")_		Class<U>[] array = new Class[0]__		return array__	};generic,utility,function,that,returns,an,empty,class,array,param,u,the,type,of,the,classes,return,an,empty,array,of,type,tt,class,lt,u,gt,tt;protected,static,u,class,u,empty,class,array,suppress,warnings,unchecked,class,u,array,new,class,0,return,array
AbstractUdfOperator -> protected AbstractUdfOperator(UserCodeWrapper<FT> function, OperatorInformation<OUT> operatorInfo,  String name);1405024514;Creates a new abstract operator with the given name wrapping the given user function.__@param function The wrapper object containing the user function._@param name The given name for the operator, used in plans, logs and progress messages.;protected AbstractUdfOperator(UserCodeWrapper<FT> function, OperatorInformation<OUT> operatorInfo,  String name) {_		super(operatorInfo, name)__		this.userFunction = function__	};creates,a,new,abstract,operator,with,the,given,name,wrapping,the,given,user,function,param,function,the,wrapper,object,containing,the,user,function,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,abstract,udf,operator,user,code,wrapper,ft,function,operator,information,out,operator,info,string,name,super,operator,info,name,this,user,function,function
AbstractUdfOperator -> protected AbstractUdfOperator(UserCodeWrapper<FT> function, OperatorInformation<OUT> operatorInfo,  String name);1405090423;Creates a new abstract operator with the given name wrapping the given user function.__@param function The wrapper object containing the user function._@param name The given name for the operator, used in plans, logs and progress messages.;protected AbstractUdfOperator(UserCodeWrapper<FT> function, OperatorInformation<OUT> operatorInfo,  String name) {_		super(operatorInfo, name)__		this.userFunction = function__	};creates,a,new,abstract,operator,with,the,given,name,wrapping,the,given,user,function,param,function,the,wrapper,object,containing,the,user,function,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,abstract,udf,operator,user,code,wrapper,ft,function,operator,information,out,operator,info,string,name,super,operator,info,name,this,user,function,function
AbstractUdfOperator -> protected AbstractUdfOperator(UserCodeWrapper<FT> function, OperatorInformation<OUT> operatorInfo,  String name);1411473593;Creates a new abstract operator with the given name wrapping the given user function.__@param function The wrapper object containing the user function._@param name The given name for the operator, used in plans, logs and progress messages.;protected AbstractUdfOperator(UserCodeWrapper<FT> function, OperatorInformation<OUT> operatorInfo,  String name) {_		super(operatorInfo, name)__		this.userFunction = function__	};creates,a,new,abstract,operator,with,the,given,name,wrapping,the,given,user,function,param,function,the,wrapper,object,containing,the,user,function,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,abstract,udf,operator,user,code,wrapper,ft,function,operator,information,out,operator,info,string,name,super,operator,info,name,this,user,function,function
AbstractUdfOperator -> protected AbstractUdfOperator(UserCodeWrapper<FT> function, OperatorInformation<OUT> operatorInfo,  String name);1446112342;Creates a new abstract operator with the given name wrapping the given user function.__@param function The wrapper object containing the user function._@param name The given name for the operator, used in plans, logs and progress messages.;protected AbstractUdfOperator(UserCodeWrapper<FT> function, OperatorInformation<OUT> operatorInfo,  String name) {_		super(operatorInfo, name)__		this.userFunction = function__	};creates,a,new,abstract,operator,with,the,given,name,wrapping,the,given,user,function,param,function,the,wrapper,object,containing,the,user,function,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,abstract,udf,operator,user,code,wrapper,ft,function,operator,information,out,operator,info,string,name,super,operator,info,name,this,user,function,function
AbstractUdfOperator -> protected AbstractUdfOperator(UserCodeWrapper<FT> function, OperatorInformation<OUT> operatorInfo,  String name);1451905579;Creates a new abstract operator with the given name wrapping the given user function.__@param function The wrapper object containing the user function._@param name The given name for the operator, used in plans, logs and progress messages.;protected AbstractUdfOperator(UserCodeWrapper<FT> function, OperatorInformation<OUT> operatorInfo,  String name) {_		super(operatorInfo, name)__		this.userFunction = function__	};creates,a,new,abstract,operator,with,the,given,name,wrapping,the,given,user,function,param,function,the,wrapper,object,containing,the,user,function,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,abstract,udf,operator,user,code,wrapper,ft,function,operator,information,out,operator,info,string,name,super,operator,info,name,this,user,function,function
AbstractUdfOperator -> protected AbstractUdfOperator(UserCodeWrapper<FT> function, OperatorInformation<OUT> operatorInfo,  String name);1452178883;Creates a new abstract operator with the given name wrapping the given user function.__@param function The wrapper object containing the user function._@param name The given name for the operator, used in plans, logs and progress messages.;protected AbstractUdfOperator(UserCodeWrapper<FT> function, OperatorInformation<OUT> operatorInfo,  String name) {_		super(operatorInfo, name)__		this.userFunction = function__	};creates,a,new,abstract,operator,with,the,given,name,wrapping,the,given,user,function,param,function,the,wrapper,object,containing,the,user,function,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,abstract,udf,operator,user,code,wrapper,ft,function,operator,information,out,operator,info,string,name,super,operator,info,name,this,user,function,function
AbstractUdfOperator -> protected AbstractUdfOperator(UserCodeWrapper<FT> function, OperatorInformation<OUT> operatorInfo,  String name);1455479358;Creates a new abstract operator with the given name wrapping the given user function.__@param function The wrapper object containing the user function._@param name The given name for the operator, used in plans, logs and progress messages.;protected AbstractUdfOperator(UserCodeWrapper<FT> function, OperatorInformation<OUT> operatorInfo,  String name) {_		super(operatorInfo, name)__		this.userFunction = function__	};creates,a,new,abstract,operator,with,the,given,name,wrapping,the,given,user,function,param,function,the,wrapper,object,containing,the,user,function,param,name,the,given,name,for,the,operator,used,in,plans,logs,and,progress,messages;protected,abstract,udf,operator,user,code,wrapper,ft,function,operator,information,out,operator,info,string,name,super,operator,info,name,this,user,function,function
AbstractUdfOperator -> @Override 	public UserCodeWrapper<FT> getUserCodeWrapper();1405024514;Gets the function that is held by this operator. The function is the actual implementation of the_user code.__This throws an exception if the pact does not contain an object but a class for the user_code.__@return The object with the user function for this operator.__@see org.apache.flink.api.common.operators.Operator#getUserCodeWrapper();@Override_	public UserCodeWrapper<FT> getUserCodeWrapper() {_		return userFunction__	};gets,the,function,that,is,held,by,this,operator,the,function,is,the,actual,implementation,of,the,user,code,this,throws,an,exception,if,the,pact,does,not,contain,an,object,but,a,class,for,the,user,code,return,the,object,with,the,user,function,for,this,operator,see,org,apache,flink,api,common,operators,operator,get,user,code,wrapper;override,public,user,code,wrapper,ft,get,user,code,wrapper,return,user,function
AbstractUdfOperator -> @Override 	public UserCodeWrapper<FT> getUserCodeWrapper();1405090423;Gets the function that is held by this operator. The function is the actual implementation of the_user code.__This throws an exception if the pact does not contain an object but a class for the user_code.__@return The object with the user function for this operator.__@see org.apache.flink.api.common.operators.Operator#getUserCodeWrapper();@Override_	public UserCodeWrapper<FT> getUserCodeWrapper() {_		return userFunction__	};gets,the,function,that,is,held,by,this,operator,the,function,is,the,actual,implementation,of,the,user,code,this,throws,an,exception,if,the,pact,does,not,contain,an,object,but,a,class,for,the,user,code,return,the,object,with,the,user,function,for,this,operator,see,org,apache,flink,api,common,operators,operator,get,user,code,wrapper;override,public,user,code,wrapper,ft,get,user,code,wrapper,return,user,function
AbstractUdfOperator -> @Override 	public UserCodeWrapper<FT> getUserCodeWrapper();1411473593;Gets the function that is held by this operator. The function is the actual implementation of the_user code.__This throws an exception if the pact does not contain an object but a class for the user_code.__@return The object with the user function for this operator.__@see org.apache.flink.api.common.operators.Operator#getUserCodeWrapper();@Override_	public UserCodeWrapper<FT> getUserCodeWrapper() {_		return userFunction__	};gets,the,function,that,is,held,by,this,operator,the,function,is,the,actual,implementation,of,the,user,code,this,throws,an,exception,if,the,pact,does,not,contain,an,object,but,a,class,for,the,user,code,return,the,object,with,the,user,function,for,this,operator,see,org,apache,flink,api,common,operators,operator,get,user,code,wrapper;override,public,user,code,wrapper,ft,get,user,code,wrapper,return,user,function
AbstractUdfOperator -> @Override 	public UserCodeWrapper<FT> getUserCodeWrapper();1446112342;Gets the function that is held by this operator. The function is the actual implementation of the_user code.__This throws an exception if the pact does not contain an object but a class for the user_code.__@return The object with the user function for this operator.__@see org.apache.flink.api.common.operators.Operator#getUserCodeWrapper();@Override_	public UserCodeWrapper<FT> getUserCodeWrapper() {_		return userFunction__	};gets,the,function,that,is,held,by,this,operator,the,function,is,the,actual,implementation,of,the,user,code,this,throws,an,exception,if,the,pact,does,not,contain,an,object,but,a,class,for,the,user,code,return,the,object,with,the,user,function,for,this,operator,see,org,apache,flink,api,common,operators,operator,get,user,code,wrapper;override,public,user,code,wrapper,ft,get,user,code,wrapper,return,user,function
AbstractUdfOperator -> @Override 	public UserCodeWrapper<FT> getUserCodeWrapper();1451905579;Gets the function that is held by this operator. The function is the actual implementation of the_user code.__This throws an exception if the pact does not contain an object but a class for the user_code.__@return The object with the user function for this operator.__@see org.apache.flink.api.common.operators.Operator#getUserCodeWrapper();@Override_	public UserCodeWrapper<FT> getUserCodeWrapper() {_		return userFunction__	};gets,the,function,that,is,held,by,this,operator,the,function,is,the,actual,implementation,of,the,user,code,this,throws,an,exception,if,the,pact,does,not,contain,an,object,but,a,class,for,the,user,code,return,the,object,with,the,user,function,for,this,operator,see,org,apache,flink,api,common,operators,operator,get,user,code,wrapper;override,public,user,code,wrapper,ft,get,user,code,wrapper,return,user,function
AbstractUdfOperator -> @Override 	public UserCodeWrapper<FT> getUserCodeWrapper();1452178883;Gets the function that is held by this operator. The function is the actual implementation of the_user code.__This throws an exception if the pact does not contain an object but a class for the user_code.__@return The object with the user function for this operator.__@see org.apache.flink.api.common.operators.Operator#getUserCodeWrapper();@Override_	public UserCodeWrapper<FT> getUserCodeWrapper() {_		return userFunction__	};gets,the,function,that,is,held,by,this,operator,the,function,is,the,actual,implementation,of,the,user,code,this,throws,an,exception,if,the,pact,does,not,contain,an,object,but,a,class,for,the,user,code,return,the,object,with,the,user,function,for,this,operator,see,org,apache,flink,api,common,operators,operator,get,user,code,wrapper;override,public,user,code,wrapper,ft,get,user,code,wrapper,return,user,function
AbstractUdfOperator -> @Override 	public UserCodeWrapper<FT> getUserCodeWrapper();1455479358;Gets the function that is held by this operator. The function is the actual implementation of the_user code.__This throws an exception if the pact does not contain an object but a class for the user_code.__@return The object with the user function for this operator.__@see org.apache.flink.api.common.operators.Operator#getUserCodeWrapper();@Override_	public UserCodeWrapper<FT> getUserCodeWrapper() {_		return userFunction__	};gets,the,function,that,is,held,by,this,operator,the,function,is,the,actual,implementation,of,the,user,code,this,throws,an,exception,if,the,pact,does,not,contain,an,object,but,a,class,for,the,user,code,return,the,object,with,the,user,function,for,this,operator,see,org,apache,flink,api,common,operators,operator,get,user,code,wrapper;override,public,user,code,wrapper,ft,get,user,code,wrapper,return,user,function
AbstractUdfOperator -> public <T> void setBroadcastVariables(Map<String, Operator<T>> inputs);1405024514;Clears all previous broadcast inputs and binds the given inputs as_broadcast variables of this operator.__@param inputs The <name, root> pairs to be set as broadcast inputs.;public <T> void setBroadcastVariables(Map<String, Operator<T>> inputs) {_		this.broadcastInputs.clear()__		this.broadcastInputs.putAll(inputs)__	};clears,all,previous,broadcast,inputs,and,binds,the,given,inputs,as,broadcast,variables,of,this,operator,param,inputs,the,name,root,pairs,to,be,set,as,broadcast,inputs;public,t,void,set,broadcast,variables,map,string,operator,t,inputs,this,broadcast,inputs,clear,this,broadcast,inputs,put,all,inputs
AbstractUdfOperator -> public <T> void setBroadcastVariables(Map<String, Operator<T>> inputs);1405090423;Clears all previous broadcast inputs and binds the given inputs as_broadcast variables of this operator.__@param inputs The <name, root> pairs to be set as broadcast inputs.;public <T> void setBroadcastVariables(Map<String, Operator<T>> inputs) {_		this.broadcastInputs.clear()__		this.broadcastInputs.putAll(inputs)__	};clears,all,previous,broadcast,inputs,and,binds,the,given,inputs,as,broadcast,variables,of,this,operator,param,inputs,the,name,root,pairs,to,be,set,as,broadcast,inputs;public,t,void,set,broadcast,variables,map,string,operator,t,inputs,this,broadcast,inputs,clear,this,broadcast,inputs,put,all,inputs
AbstractUdfOperator -> public <T> void setBroadcastVariables(Map<String, Operator<T>> inputs);1411473593;Clears all previous broadcast inputs and binds the given inputs as_broadcast variables of this operator.__@param inputs The <name, root> pairs to be set as broadcast inputs.;public <T> void setBroadcastVariables(Map<String, Operator<T>> inputs) {_		this.broadcastInputs.clear()__		this.broadcastInputs.putAll(inputs)__	};clears,all,previous,broadcast,inputs,and,binds,the,given,inputs,as,broadcast,variables,of,this,operator,param,inputs,the,name,root,pairs,to,be,set,as,broadcast,inputs;public,t,void,set,broadcast,variables,map,string,operator,t,inputs,this,broadcast,inputs,clear,this,broadcast,inputs,put,all,inputs
AbstractUdfOperator -> public <T> void setBroadcastVariables(Map<String, Operator<T>> inputs);1446112342;Clears all previous broadcast inputs and binds the given inputs as_broadcast variables of this operator.__@param inputs The {@code<name, root>} pairs to be set as broadcast inputs.;public <T> void setBroadcastVariables(Map<String, Operator<T>> inputs) {_		this.broadcastInputs.clear()__		this.broadcastInputs.putAll(inputs)__	};clears,all,previous,broadcast,inputs,and,binds,the,given,inputs,as,broadcast,variables,of,this,operator,param,inputs,the,code,name,root,pairs,to,be,set,as,broadcast,inputs;public,t,void,set,broadcast,variables,map,string,operator,t,inputs,this,broadcast,inputs,clear,this,broadcast,inputs,put,all,inputs
AbstractUdfOperator -> public <T> void setBroadcastVariables(Map<String, Operator<T>> inputs);1451905579;Clears all previous broadcast inputs and binds the given inputs as_broadcast variables of this operator.__@param inputs The {@code<name, root>} pairs to be set as broadcast inputs.;public <T> void setBroadcastVariables(Map<String, Operator<T>> inputs) {_		this.broadcastInputs.clear()__		this.broadcastInputs.putAll(inputs)__	};clears,all,previous,broadcast,inputs,and,binds,the,given,inputs,as,broadcast,variables,of,this,operator,param,inputs,the,code,name,root,pairs,to,be,set,as,broadcast,inputs;public,t,void,set,broadcast,variables,map,string,operator,t,inputs,this,broadcast,inputs,clear,this,broadcast,inputs,put,all,inputs
AbstractUdfOperator -> public <T> void setBroadcastVariables(Map<String, Operator<T>> inputs);1452178883;Clears all previous broadcast inputs and binds the given inputs as_broadcast variables of this operator.__@param inputs The {@code<name, root>} pairs to be set as broadcast inputs.;public <T> void setBroadcastVariables(Map<String, Operator<T>> inputs) {_		this.broadcastInputs.clear()__		this.broadcastInputs.putAll(inputs)__	};clears,all,previous,broadcast,inputs,and,binds,the,given,inputs,as,broadcast,variables,of,this,operator,param,inputs,the,code,name,root,pairs,to,be,set,as,broadcast,inputs;public,t,void,set,broadcast,variables,map,string,operator,t,inputs,this,broadcast,inputs,clear,this,broadcast,inputs,put,all,inputs
AbstractUdfOperator -> public <T> void setBroadcastVariables(Map<String, Operator<T>> inputs);1455479358;Clears all previous broadcast inputs and binds the given inputs as_broadcast variables of this operator.__@param inputs The {@code<name, root>} pairs to be set as broadcast inputs.;public <T> void setBroadcastVariables(Map<String, Operator<T>> inputs) {_		this.broadcastInputs.clear()__		this.broadcastInputs.putAll(inputs)__	};clears,all,previous,broadcast,inputs,and,binds,the,given,inputs,as,broadcast,variables,of,this,operator,param,inputs,the,code,name,root,pairs,to,be,set,as,broadcast,inputs;public,t,void,set,broadcast,variables,map,string,operator,t,inputs,this,broadcast,inputs,clear,this,broadcast,inputs,put,all,inputs
AbstractUdfOperator -> protected static final <U> Class<U>[] asArray(Class<U> clazz);1405024514;Generic utility function that wraps a single class object into an array of that class type.__@param <U> The type of the classes._@param clazz The class object to be wrapped._@return An array wrapping the class object.;protected static final <U> Class<U>[] asArray(Class<U> clazz) {_		@SuppressWarnings("unchecked")_		Class<U>[] array = new Class[] { clazz }__		return array__	};generic,utility,function,that,wraps,a,single,class,object,into,an,array,of,that,class,type,param,u,the,type,of,the,classes,param,clazz,the,class,object,to,be,wrapped,return,an,array,wrapping,the,class,object;protected,static,final,u,class,u,as,array,class,u,clazz,suppress,warnings,unchecked,class,u,array,new,class,clazz,return,array
AbstractUdfOperator -> protected static final <U> Class<U>[] asArray(Class<U> clazz);1405090423;Generic utility function that wraps a single class object into an array of that class type.__@param <U> The type of the classes._@param clazz The class object to be wrapped._@return An array wrapping the class object.;protected static final <U> Class<U>[] asArray(Class<U> clazz) {_		@SuppressWarnings("unchecked")_		Class<U>[] array = new Class[] { clazz }__		return array__	};generic,utility,function,that,wraps,a,single,class,object,into,an,array,of,that,class,type,param,u,the,type,of,the,classes,param,clazz,the,class,object,to,be,wrapped,return,an,array,wrapping,the,class,object;protected,static,final,u,class,u,as,array,class,u,clazz,suppress,warnings,unchecked,class,u,array,new,class,clazz,return,array
AbstractUdfOperator -> protected static final <U> Class<U>[] asArray(Class<U> clazz);1411473593;Generic utility function that wraps a single class object into an array of that class type.__@param <U> The type of the classes._@param clazz The class object to be wrapped._@return An array wrapping the class object.;protected static final <U> Class<U>[] asArray(Class<U> clazz) {_		@SuppressWarnings("unchecked")_		Class<U>[] array = new Class[] { clazz }__		return array__	};generic,utility,function,that,wraps,a,single,class,object,into,an,array,of,that,class,type,param,u,the,type,of,the,classes,param,clazz,the,class,object,to,be,wrapped,return,an,array,wrapping,the,class,object;protected,static,final,u,class,u,as,array,class,u,clazz,suppress,warnings,unchecked,class,u,array,new,class,clazz,return,array
AbstractUdfOperator -> protected static final <U> Class<U>[] asArray(Class<U> clazz);1446112342;Generic utility function that wraps a single class object into an array of that class type.__@param <U> The type of the classes._@param clazz The class object to be wrapped._@return An array wrapping the class object.;protected static final <U> Class<U>[] asArray(Class<U> clazz) {_		@SuppressWarnings("unchecked")_		Class<U>[] array = new Class[] { clazz }__		return array__	};generic,utility,function,that,wraps,a,single,class,object,into,an,array,of,that,class,type,param,u,the,type,of,the,classes,param,clazz,the,class,object,to,be,wrapped,return,an,array,wrapping,the,class,object;protected,static,final,u,class,u,as,array,class,u,clazz,suppress,warnings,unchecked,class,u,array,new,class,clazz,return,array
AbstractUdfOperator -> protected static <U> Class<U>[] asArray(Class<U> clazz);1451905579;Generic utility function that wraps a single class object into an array of that class type.__@param <U> The type of the classes._@param clazz The class object to be wrapped._@return An array wrapping the class object.;protected static <U> Class<U>[] asArray(Class<U> clazz) {_		@SuppressWarnings("unchecked")_		Class<U>[] array = new Class[] { clazz }__		return array__	};generic,utility,function,that,wraps,a,single,class,object,into,an,array,of,that,class,type,param,u,the,type,of,the,classes,param,clazz,the,class,object,to,be,wrapped,return,an,array,wrapping,the,class,object;protected,static,u,class,u,as,array,class,u,clazz,suppress,warnings,unchecked,class,u,array,new,class,clazz,return,array
AbstractUdfOperator -> protected static <U> Class<U>[] asArray(Class<U> clazz);1452178883;Generic utility function that wraps a single class object into an array of that class type.__@param <U> The type of the classes._@param clazz The class object to be wrapped._@return An array wrapping the class object.;protected static <U> Class<U>[] asArray(Class<U> clazz) {_		@SuppressWarnings("unchecked")_		Class<U>[] array = new Class[] { clazz }__		return array__	};generic,utility,function,that,wraps,a,single,class,object,into,an,array,of,that,class,type,param,u,the,type,of,the,classes,param,clazz,the,class,object,to,be,wrapped,return,an,array,wrapping,the,class,object;protected,static,u,class,u,as,array,class,u,clazz,suppress,warnings,unchecked,class,u,array,new,class,clazz,return,array
AbstractUdfOperator -> protected static <U> Class<U>[] asArray(Class<U> clazz);1455479358;Generic utility function that wraps a single class object into an array of that class type.__@param <U> The type of the classes._@param clazz The class object to be wrapped._@return An array wrapping the class object.;protected static <U> Class<U>[] asArray(Class<U> clazz) {_		@SuppressWarnings("unchecked")_		Class<U>[] array = new Class[] { clazz }__		return array__	};generic,utility,function,that,wraps,a,single,class,object,into,an,array,of,that,class,type,param,u,the,type,of,the,classes,param,clazz,the,class,object,to,be,wrapped,return,an,array,wrapping,the,class,object;protected,static,u,class,u,as,array,class,u,clazz,suppress,warnings,unchecked,class,u,array,new,class,clazz,return,array
