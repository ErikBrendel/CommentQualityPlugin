commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isImmutableType() {     return true. }
false;public;0;4;;@Override public String createInstance() {     return EMPTY. }
false;public;1;4;;@Override public String copy(String from) {     return from. }
false;public;2;4;;@Override public String copy(String from, String reuse) {     return from. }
false;public;0;4;;@Override public int getLength() {     return -1. }
false;public;2;4;;@Override public void serialize(String record, DataOutputView target) throws IOException {     StringValue.writeString(record, target). }
false;public;1;4;;@Override public String deserialize(DataInputView source) throws IOException {     return StringValue.readString(source). }
false;public;2;4;;@Override public String deserialize(String record, DataInputView source) throws IOException {     return deserialize(source). }
false;public;2;4;;@Override public void copy(DataInputView source, DataOutputView target) throws IOException {     StringValue.copyString(source, target). }
false;public;0;4;;@Override public TypeSerializerSnapshot<String> snapshotConfiguration() {     return new StringSerializerSnapshot(). }
