commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;@Override public void write(DataOutputView out) throws IOException {     super.write(out).     out.writeUTF(serializationFormatIdentifier). }
false;public;1;5;;@Override public void read(DataInputView in) throws IOException {     super.read(in).     serializationFormatIdentifier = in.readUTF(). }
false;public;1;11;;@Override public TypeSerializerSchemaCompatibility<T> resolveSchemaCompatibility(TypeSerializer<T> newSerializer) {     if (newSerializer instanceof TypeSerializerSingleton) {         TypeSerializerSingleton<T> singletonSerializer = (TypeSerializerSingleton<T>) newSerializer.         return isCompatibleSerializationFormatIdentifier(serializationFormatIdentifier, singletonSerializer) ? TypeSerializerSchemaCompatibility.compatibleAsIs() : TypeSerializerSchemaCompatibility.incompatible().     }     return super.resolveSchemaCompatibility(newSerializer). }
false;public;0;4;;@Override public int getVersion() {     return VERSION. }
false;public;0;3;;public String getSerializationFormatIdentifier() {     return serializationFormatIdentifier. }
false;public;1;13;;@Override public boolean equals(Object other) {     if (other == this) {         return true.     }     if (other == null) {         return false.     }     return (other instanceof ParameterlessTypeSerializerConfig) && serializationFormatIdentifier.equals(((ParameterlessTypeSerializerConfig) other).getSerializationFormatIdentifier()). }
false;public;0;4;;@Override public int hashCode() {     return serializationFormatIdentifier.hashCode(). }
false;private,static;2;9;;private static boolean isCompatibleSerializationFormatIdentifier(String identifier, TypeSerializerSingleton<?> newSingletonSerializer) {     String name = newSingletonSerializer.getClass().getName().     // we also need to check canonical name because some singleton serializers were using that as the identifier     String canonicalName = newSingletonSerializer.getClass().getCanonicalName().     return identifier.equals(name) || identifier.equals(canonicalName). }
