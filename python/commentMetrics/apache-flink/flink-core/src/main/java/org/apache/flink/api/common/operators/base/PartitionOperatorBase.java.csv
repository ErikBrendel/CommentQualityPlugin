commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;// -------------------------------------------------------------------------------------------- public PartitionMethod getPartitionMethod() {     return this.partitionMethod. }
false;public;0;3;;public Partitioner<?> getCustomPartitioner() {     return customPartitioner. }
false;public;0;3;;public DataDistribution getDistribution() {     return this.distribution. }
false;public;1;3;;public void setOrdering(Ordering ordering) {     this.ordering = ordering. }
false;public;0;3;;public Ordering getOrdering() {     return ordering. }
false;public;1;3;;public void setDistribution(DataDistribution distribution) {     this.distribution = distribution. }
false;public;1;12;;public void setCustomPartitioner(Partitioner<?> customPartitioner) {     if (customPartitioner != null) {         int[] keys = getKeyColumns(0).         if (keys == null || keys.length == 0) {             throw new IllegalArgumentException("Cannot use custom partitioner for a non-grouped GroupReduce (AllGroupReduce)").         }         if (keys.length > 1) {             throw new IllegalArgumentException("Cannot use the key partitioner for composite keys (more than one key field)").         }     }     this.customPartitioner = customPartitioner. }
false;public;0;4;;@Override public SingleInputSemanticProperties getSemanticProperties() {     return new SingleInputSemanticProperties.AllFieldsForwardedProperties(). }
false;protected;3;4;;// -------------------------------------------------------------------------------------------- @Override protected List<IN> executeOnCollections(List<IN> inputData, RuntimeContext runtimeContext, ExecutionConfig executionConfig) {     return inputData. }
