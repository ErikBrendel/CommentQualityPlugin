commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isImmutableType() {     return true. }
false;public;0;4;;@Override public Float createInstance() {     return ZERO. }
false;public;1;4;;@Override public Float copy(Float from) {     return from. }
false;public;2;4;;@Override public Float copy(Float from, Float reuse) {     return from. }
false;public;0;4;;@Override public int getLength() {     return 4. }
false;public;2;4;;@Override public void serialize(Float record, DataOutputView target) throws IOException {     target.writeFloat(record). }
false;public;1;4;;@Override public Float deserialize(DataInputView source) throws IOException {     return source.readFloat(). }
false;public;2;4;;@Override public Float deserialize(Float reuse, DataInputView source) throws IOException {     return deserialize(source). }
false;public;2;4;;@Override public void copy(DataInputView source, DataOutputView target) throws IOException {     target.writeFloat(source.readFloat()). }
false;public;0;4;;@Override public TypeSerializerSnapshot<Float> snapshotConfiguration() {     return new FloatSerializerSnapshot(). }
