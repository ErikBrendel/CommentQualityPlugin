# id;timestamp;commentText;codeText;commentWords;codeWords
CompatibilityResult -> public static <T> CompatibilityResult<T> compatible();1494180263;Returns a strategy that signals that the new serializer is compatible and no migration is required.__@return a result that signals migration is not required for the new serializer;public static <T> CompatibilityResult<T> compatible() {_		return new CompatibilityResult<>(false, null)__	};returns,a,strategy,that,signals,that,the,new,serializer,is,compatible,and,no,migration,is,required,return,a,result,that,signals,migration,is,not,required,for,the,new,serializer;public,static,t,compatibility,result,t,compatible,return,new,compatibility,result,false,null
CompatibilityResult -> public static <T> CompatibilityResult<T> compatible();1494186272;Returns a strategy that signals that the new serializer is compatible and no migration is required.__@return a result that signals migration is not required for the new serializer;public static <T> CompatibilityResult<T> compatible() {_		return new CompatibilityResult<>(false, null)__	};returns,a,strategy,that,signals,that,the,new,serializer,is,compatible,and,no,migration,is,required,return,a,result,that,signals,migration,is,not,required,for,the,new,serializer;public,static,t,compatibility,result,t,compatible,return,new,compatibility,result,false,null
CompatibilityResult -> public static <T> CompatibilityResult<T> compatible();1494658833;Returns a result that signals that the new serializer is compatible and no migration is required.__@return a result that signals migration is not required for the new serializer;public static <T> CompatibilityResult<T> compatible() {_		return new CompatibilityResult<>(false, null)__	};returns,a,result,that,signals,that,the,new,serializer,is,compatible,and,no,migration,is,required,return,a,result,that,signals,migration,is,not,required,for,the,new,serializer;public,static,t,compatibility,result,t,compatible,return,new,compatibility,result,false,null
CompatibilityResult -> public static <T> CompatibilityResult<T> compatible();1497328665;Returns a result that signals that the new serializer is compatible and no migration is required.__@return a result that signals migration is not required for the new serializer;public static <T> CompatibilityResult<T> compatible() {_		return new CompatibilityResult<>(false, null)__	};returns,a,result,that,signals,that,the,new,serializer,is,compatible,and,no,migration,is,required,return,a,result,that,signals,migration,is,not,required,for,the,new,serializer;public,static,t,compatibility,result,t,compatible,return,new,compatibility,result,false,null
CompatibilityResult -> public static <T> CompatibilityResult<T> compatible();1497328666;Returns a result that signals that the new serializer is compatible and no migration is required.__@return a result that signals migration is not required for the new serializer;public static <T> CompatibilityResult<T> compatible() {_		return new CompatibilityResult<>(false, null)__	};returns,a,result,that,signals,that,the,new,serializer,is,compatible,and,no,migration,is,required,return,a,result,that,signals,migration,is,not,required,for,the,new,serializer;public,static,t,compatibility,result,t,compatible,return,new,compatibility,result,false,null
CompatibilityResult -> public static <T> CompatibilityResult<T> requiresMigration(TypeDeserializer<T> convertDeserializer);1494186272;Returns a strategy that signals migration to be performed.__<p>Furthermore, in the case that the preceding serializer cannot be found or restored to read the_previous data during migration, a provided convert deserializer can be used (may be {@code null}_if one cannot be provided).__<p>In the case that the preceding serializer cannot be found and a convert deserializer is not_provided, the migration will fail due to the incapability of reading previous data.__@return a result that signals migration is necessary, possibly providing a convert deserializer.;public static <T> CompatibilityResult<T> requiresMigration(TypeDeserializer<T> convertDeserializer) {_		return new CompatibilityResult<>(true, convertDeserializer)__	};returns,a,strategy,that,signals,migration,to,be,performed,p,furthermore,in,the,case,that,the,preceding,serializer,cannot,be,found,or,restored,to,read,the,previous,data,during,migration,a,provided,convert,deserializer,can,be,used,may,be,code,null,if,one,cannot,be,provided,p,in,the,case,that,the,preceding,serializer,cannot,be,found,and,a,convert,deserializer,is,not,provided,the,migration,will,fail,due,to,the,incapability,of,reading,previous,data,return,a,result,that,signals,migration,is,necessary,possibly,providing,a,convert,deserializer;public,static,t,compatibility,result,t,requires,migration,type,deserializer,t,convert,deserializer,return,new,compatibility,result,true,convert,deserializer
CompatibilityResult -> public static <T> CompatibilityResult<T> requiresMigration(TypeDeserializer<T> convertDeserializer);1494658833;Returns a result that signals migration to be performed, and in the case that the preceding serializer_cannot be found or restored to read the previous data during migration, a provided convert deserializer_can be used.__@param convertDeserializer the convert deserializer to use, in the case that the preceding serializer_cannot be found.__@return a result that signals migration is necessary, also providing a convert deserializer.;public static <T> CompatibilityResult<T> requiresMigration(TypeDeserializer<T> convertDeserializer) {_		Preconditions.checkNotNull(convertDeserializer, "Convert deserializer cannot be null.")___		return new CompatibilityResult<>(true, Preconditions.checkNotNull(convertDeserializer))__	};returns,a,result,that,signals,migration,to,be,performed,and,in,the,case,that,the,preceding,serializer,cannot,be,found,or,restored,to,read,the,previous,data,during,migration,a,provided,convert,deserializer,can,be,used,param,convert,deserializer,the,convert,deserializer,to,use,in,the,case,that,the,preceding,serializer,cannot,be,found,return,a,result,that,signals,migration,is,necessary,also,providing,a,convert,deserializer;public,static,t,compatibility,result,t,requires,migration,type,deserializer,t,convert,deserializer,preconditions,check,not,null,convert,deserializer,convert,deserializer,cannot,be,null,return,new,compatibility,result,true,preconditions,check,not,null,convert,deserializer
CompatibilityResult -> public static <T> CompatibilityResult<T> requiresMigration(@Nonnull TypeDeserializer<T> convertDeserializer);1497328665;Returns a result that signals migration to be performed, and in the case that the preceding serializer_cannot be found or restored to read the previous data during migration, a provided convert deserializer_can be used.__@param convertDeserializer the convert deserializer to use, in the case that the preceding serializer_cannot be found.__@return a result that signals migration is necessary, also providing a convert deserializer.;public static <T> CompatibilityResult<T> requiresMigration(@Nonnull TypeDeserializer<T> convertDeserializer) {_		Preconditions.checkNotNull(convertDeserializer, "Convert deserializer cannot be null.")___		return new CompatibilityResult<>(true, convertDeserializer)__	};returns,a,result,that,signals,migration,to,be,performed,and,in,the,case,that,the,preceding,serializer,cannot,be,found,or,restored,to,read,the,previous,data,during,migration,a,provided,convert,deserializer,can,be,used,param,convert,deserializer,the,convert,deserializer,to,use,in,the,case,that,the,preceding,serializer,cannot,be,found,return,a,result,that,signals,migration,is,necessary,also,providing,a,convert,deserializer;public,static,t,compatibility,result,t,requires,migration,nonnull,type,deserializer,t,convert,deserializer,preconditions,check,not,null,convert,deserializer,convert,deserializer,cannot,be,null,return,new,compatibility,result,true,convert,deserializer
CompatibilityResult -> public static <T> CompatibilityResult<T> requiresMigration(@Nonnull TypeDeserializer<T> convertDeserializer);1497328666;Returns a result that signals migration to be performed, and in the case that the preceding serializer_cannot be found or restored to read the previous data during migration, a provided convert deserializer_can be used.__@param convertDeserializer the convert deserializer to use, in the case that the preceding serializer_cannot be found.__@param <T> the type of the data being migrated.__@return a result that signals migration is necessary, also providing a convert deserializer.;public static <T> CompatibilityResult<T> requiresMigration(@Nonnull TypeDeserializer<T> convertDeserializer) {_		Preconditions.checkNotNull(convertDeserializer, "Convert deserializer cannot be null.")___		return new CompatibilityResult<>(true, convertDeserializer)__	};returns,a,result,that,signals,migration,to,be,performed,and,in,the,case,that,the,preceding,serializer,cannot,be,found,or,restored,to,read,the,previous,data,during,migration,a,provided,convert,deserializer,can,be,used,param,convert,deserializer,the,convert,deserializer,to,use,in,the,case,that,the,preceding,serializer,cannot,be,found,param,t,the,type,of,the,data,being,migrated,return,a,result,that,signals,migration,is,necessary,also,providing,a,convert,deserializer;public,static,t,compatibility,result,t,requires,migration,nonnull,type,deserializer,t,convert,deserializer,preconditions,check,not,null,convert,deserializer,convert,deserializer,cannot,be,null,return,new,compatibility,result,true,convert,deserializer
CompatibilityResult -> public static <T> CompatibilityResult<T> requiresMigration();1494658833;Returns a result that signals migration to be performed. The migration will fail if the preceding_serializer for the previous data cannot be found.__<p>You can also provide a convert deserializer using {@link #requiresMigration(TypeDeserializer)},_which will be used as a fallback resort in such cases.__@return a result that signals migration is necessary, without providing a convert deserializer.;public static <T> CompatibilityResult<T> requiresMigration() {_		return new CompatibilityResult<>(true, null)__	};returns,a,result,that,signals,migration,to,be,performed,the,migration,will,fail,if,the,preceding,serializer,for,the,previous,data,cannot,be,found,p,you,can,also,provide,a,convert,deserializer,using,link,requires,migration,type,deserializer,which,will,be,used,as,a,fallback,resort,in,such,cases,return,a,result,that,signals,migration,is,necessary,without,providing,a,convert,deserializer;public,static,t,compatibility,result,t,requires,migration,return,new,compatibility,result,true,null
CompatibilityResult -> public static <T> CompatibilityResult<T> requiresMigration();1497328665;Returns a result that signals migration to be performed. The migration will fail if the preceding_serializer for the previous data cannot be found.__<p>You can also provide a convert deserializer using {@link #requiresMigration(TypeDeserializer)},_which will be used as a fallback resort in such cases.__@return a result that signals migration is necessary, without providing a convert deserializer.;public static <T> CompatibilityResult<T> requiresMigration() {_		return new CompatibilityResult<>(true, null)__	};returns,a,result,that,signals,migration,to,be,performed,the,migration,will,fail,if,the,preceding,serializer,for,the,previous,data,cannot,be,found,p,you,can,also,provide,a,convert,deserializer,using,link,requires,migration,type,deserializer,which,will,be,used,as,a,fallback,resort,in,such,cases,return,a,result,that,signals,migration,is,necessary,without,providing,a,convert,deserializer;public,static,t,compatibility,result,t,requires,migration,return,new,compatibility,result,true,null
CompatibilityResult -> public static <T> CompatibilityResult<T> requiresMigration();1497328666;Returns a result that signals migration to be performed. The migration will fail if the preceding_serializer for the previous data cannot be found.__<p>You can also provide a convert deserializer using {@link #requiresMigration(TypeDeserializer)}_or {@link #requiresMigration(TypeSerializer)}, which will be used as a fallback resort in such cases.__@return a result that signals migration is necessary, without providing a convert deserializer.;public static <T> CompatibilityResult<T> requiresMigration() {_		return new CompatibilityResult<>(true, null)__	};returns,a,result,that,signals,migration,to,be,performed,the,migration,will,fail,if,the,preceding,serializer,for,the,previous,data,cannot,be,found,p,you,can,also,provide,a,convert,deserializer,using,link,requires,migration,type,deserializer,or,link,requires,migration,type,serializer,which,will,be,used,as,a,fallback,resort,in,such,cases,return,a,result,that,signals,migration,is,necessary,without,providing,a,convert,deserializer;public,static,t,compatibility,result,t,requires,migration,return,new,compatibility,result,true,null
