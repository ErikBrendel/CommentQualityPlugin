# id;timestamp;commentText;codeText;commentWords;codeWords
StringValue -> @Override 	public void setValue(StringValue value);1405024514;Sets the value of the StringValue to the given string.__@param value The new string value.;@Override_	public void setValue(StringValue value) {_		Validate.notNull(value)__		setValue(value.value, 0, value.len)__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;override,public,void,set,value,string,value,value,validate,not,null,value,set,value,value,value,0,value,len
StringValue -> @Override 	public void setValue(StringValue value);1405090423;Sets the value of the StringValue to the given string.__@param value The new string value.;@Override_	public void setValue(StringValue value) {_		Validate.notNull(value)__		setValue(value.value, 0, value.len)__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;override,public,void,set,value,string,value,value,validate,not,null,value,set,value,value,value,0,value,len
StringValue -> @Override 	public void setValue(StringValue value);1411473593;Sets the value of the StringValue to the given string.__@param value The new string value.;@Override_	public void setValue(StringValue value) {_		Validate.notNull(value)__		setValue(value.value, 0, value.len)__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;override,public,void,set,value,string,value,value,validate,not,null,value,set,value,value,value,0,value,len
StringValue -> @Override 	public void setValue(StringValue value);1414786554;Sets the value of the StringValue to the given string.__@param value The new string value.;@Override_	public void setValue(StringValue value) {_		Validate.notNull(value)__		setValue(value.value, 0, value.len)__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;override,public,void,set,value,string,value,value,validate,not,null,value,set,value,value,value,0,value,len
StringValue -> @Override 	public void setValue(StringValue value);1418912934;Sets the value of the StringValue to the given string.__@param value The new string value.;@Override_	public void setValue(StringValue value) {_		Validate.notNull(value)__		setValue(value.value, 0, value.len)__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;override,public,void,set,value,string,value,value,validate,not,null,value,set,value,value,value,0,value,len
StringValue -> @Override 	public void setValue(StringValue value);1431696388;Sets the value of the StringValue to the given string.__@param value The new string value.;@Override_	public void setValue(StringValue value) {_		Preconditions.checkNotNull(value)__		setValue(value.value, 0, value.len)__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;override,public,void,set,value,string,value,value,preconditions,check,not,null,value,set,value,value,value,0,value,len
StringValue -> @Override 	public void setValue(StringValue value);1434963934;Sets the value of the StringValue to the given string.__@param value The new string value.;@Override_	public void setValue(StringValue value) {_		Preconditions.checkNotNull(value)__		setValue(value.value, 0, value.len)__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;override,public,void,set,value,string,value,value,preconditions,check,not,null,value,set,value,value,value,0,value,len
StringValue -> @Override 	public void setValue(StringValue value);1434974504;Sets the value of the StringValue to the given string.__@param value The new string value.;@Override_	public void setValue(StringValue value) {_		Preconditions.checkNotNull(value)__		setValue(value.value, 0, value.len)__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;override,public,void,set,value,string,value,value,preconditions,check,not,null,value,set,value,value,value,0,value,len
StringValue -> @Override 	public void setValue(StringValue value);1443521887;Sets the value of the StringValue to the given string.__@param value The new string value.;@Override_	public void setValue(StringValue value) {_		Preconditions.checkNotNull(value)__		setValue(value.value, 0, value.len)__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;override,public,void,set,value,string,value,value,preconditions,check,not,null,value,set,value,value,value,0,value,len
StringValue -> @Override 	public void setValue(StringValue value);1446112342;Sets the value of the StringValue to the given string.__@param value The new string value.;@Override_	public void setValue(StringValue value) {_		Preconditions.checkNotNull(value)__		setValue(value.value, 0, value.len)__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;override,public,void,set,value,string,value,value,preconditions,check,not,null,value,set,value,value,value,0,value,len
StringValue -> @Override 	public void setValue(StringValue value);1452178883;Sets the value of the StringValue to the given string.__@param value The new string value.;@Override_	public void setValue(StringValue value) {_		Preconditions.checkNotNull(value)__		setValue(value.value, 0, value.len)__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;override,public,void,set,value,string,value,value,preconditions,check,not,null,value,set,value,value,value,0,value,len
StringValue -> @Override 	public void setValue(StringValue value);1457441341;Sets the value of the StringValue to the given string.__@param value The new string value.;@Override_	public void setValue(StringValue value) {_		Preconditions.checkNotNull(value)__		setValue(value.value, 0, value.len)__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;override,public,void,set,value,string,value,value,preconditions,check,not,null,value,set,value,value,value,0,value,len
StringValue -> @Override 	public void setValue(StringValue value);1460741894;Sets the value of the StringValue to the given string.__@param value The new string value.;@Override_	public void setValue(StringValue value) {_		checkNotNull(value)__		setValue(value.value, 0, value.len)__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;override,public,void,set,value,string,value,value,check,not,null,value,set,value,value,value,0,value,len
StringValue -> @Override 	public void setValue(StringValue value);1471549817;Sets the value of the StringValue to the given string.__@param value The new string value.;@Override_	public void setValue(StringValue value) {_		checkNotNull(value)__		setValue(value.value, 0, value.len)__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;override,public,void,set,value,string,value,value,check,not,null,value,set,value,value,value,0,value,len
StringValue -> @Override 	public void setValue(StringValue value);1529010948;Sets the value of the StringValue to the given string.__@param value The new string value.;@Override_	public void setValue(StringValue value) {_		checkNotNull(value)__		setValue(value.value, 0, value.len)__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;override,public,void,set,value,string,value,value,check,not,null,value,set,value,value,value,0,value,len
StringValue -> @Override 	public void setValue(StringValue value);1530185676;Sets the value of the StringValue to the given string.__@param value The new string value.;@Override_	public void setValue(StringValue value) {_		checkNotNull(value)__		setValue(value.value, 0, value.len)__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;override,public,void,set,value,string,value,value,check,not,null,value,set,value,value,value,0,value,len
StringValue -> public int find(CharSequence str);1405024514;Finds any occurrence of the <code>str</code> character sequence in this StringValue.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str) {_		return find(str, 0)__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,return,find,str,0
StringValue -> public int find(CharSequence str);1405090423;Finds any occurrence of the <code>str</code> character sequence in this StringValue.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str) {_		return find(str, 0)__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,return,find,str,0
StringValue -> public int find(CharSequence str);1411473593;Finds any occurrence of the <code>str</code> character sequence in this StringValue.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str) {_		return find(str, 0)__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,return,find,str,0
StringValue -> public int find(CharSequence str);1414786554;Finds any occurrence of the <code>str</code> character sequence in this StringValue.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str) {_		return find(str, 0)__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,return,find,str,0
StringValue -> public int find(CharSequence str);1418912934;Finds any occurrence of the <code>str</code> character sequence in this StringValue.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str) {_		return find(str, 0)__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,return,find,str,0
StringValue -> public int find(CharSequence str);1431696388;Finds any occurrence of the <code>str</code> character sequence in this StringValue.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str) {_		return find(str, 0)__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,return,find,str,0
StringValue -> public int find(CharSequence str);1434963934;Finds any occurrence of the <code>str</code> character sequence in this StringValue.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str) {_		return find(str, 0)__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,return,find,str,0
StringValue -> public int find(CharSequence str);1434974504;Finds any occurrence of the <code>str</code> character sequence in this StringValue.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str) {_		return find(str, 0)__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,return,find,str,0
StringValue -> public int find(CharSequence str);1443521887;Finds any occurrence of the <code>str</code> character sequence in this StringValue.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str) {_		return find(str, 0)__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,return,find,str,0
StringValue -> public int find(CharSequence str);1446112342;Finds any occurrence of the <code>str</code> character sequence in this StringValue.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str) {_		return find(str, 0)__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,return,find,str,0
StringValue -> public int find(CharSequence str);1452178883;Finds any occurrence of the <code>str</code> character sequence in this StringValue.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str) {_		return find(str, 0)__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,return,find,str,0
StringValue -> public int find(CharSequence str);1457441341;Finds any occurrence of the <code>str</code> character sequence in this StringValue.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str) {_		return find(str, 0)__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,return,find,str,0
StringValue -> public int find(CharSequence str);1460741894;Finds any occurrence of the <code>str</code> character sequence in this StringValue.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str) {_		return find(str, 0)__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,return,find,str,0
StringValue -> public int find(CharSequence str);1471549817;Finds any occurrence of the <code>str</code> character sequence in this StringValue.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str) {_		return find(str, 0)__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,return,find,str,0
StringValue -> public int find(CharSequence str);1529010948;Finds any occurrence of the <code>str</code> character sequence in this StringValue.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str) {_		return find(str, 0)__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,return,find,str,0
StringValue -> public int find(CharSequence str);1530185676;Finds any occurrence of the <code>str</code> character sequence in this StringValue.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str) {_		return find(str, 0)__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,return,find,str,0
StringValue -> public StringValue(StringValue value);1405024514;Initializes this StringValue to a copy the given StringValue.__@param value The initial value.;public StringValue(StringValue value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,a,copy,the,given,string,value,param,value,the,initial,value;public,string,value,string,value,value,this,value,set,value,value
StringValue -> public StringValue(StringValue value);1405090423;Initializes this StringValue to a copy the given StringValue.__@param value The initial value.;public StringValue(StringValue value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,a,copy,the,given,string,value,param,value,the,initial,value;public,string,value,string,value,value,this,value,set,value,value
StringValue -> public StringValue(StringValue value);1411473593;Initializes this StringValue to a copy the given StringValue.__@param value The initial value.;public StringValue(StringValue value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,a,copy,the,given,string,value,param,value,the,initial,value;public,string,value,string,value,value,this,value,set,value,value
StringValue -> public StringValue(StringValue value);1414786554;Initializes this StringValue to a copy the given StringValue.__@param value The initial value.;public StringValue(StringValue value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,a,copy,the,given,string,value,param,value,the,initial,value;public,string,value,string,value,value,this,value,set,value,value
StringValue -> public StringValue(StringValue value);1418912934;Initializes this StringValue to a copy the given StringValue.__@param value The initial value.;public StringValue(StringValue value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,a,copy,the,given,string,value,param,value,the,initial,value;public,string,value,string,value,value,this,value,set,value,value
StringValue -> public StringValue(StringValue value);1431696388;Initializes this StringValue to a copy the given StringValue.__@param value The initial value.;public StringValue(StringValue value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,a,copy,the,given,string,value,param,value,the,initial,value;public,string,value,string,value,value,this,value,set,value,value
StringValue -> public StringValue(StringValue value);1434963934;Initializes this StringValue to a copy the given StringValue.__@param value The initial value.;public StringValue(StringValue value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,a,copy,the,given,string,value,param,value,the,initial,value;public,string,value,string,value,value,this,value,set,value,value
StringValue -> public StringValue(StringValue value);1434974504;Initializes this StringValue to a copy the given StringValue.__@param value The initial value.;public StringValue(StringValue value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,a,copy,the,given,string,value,param,value,the,initial,value;public,string,value,string,value,value,this,value,set,value,value
StringValue -> public StringValue(StringValue value);1443521887;Initializes this StringValue to a copy the given StringValue.__@param value The initial value.;public StringValue(StringValue value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,a,copy,the,given,string,value,param,value,the,initial,value;public,string,value,string,value,value,this,value,set,value,value
StringValue -> public StringValue(StringValue value);1446112342;Initializes this StringValue to a copy the given StringValue.__@param value The initial value.;public StringValue(StringValue value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,a,copy,the,given,string,value,param,value,the,initial,value;public,string,value,string,value,value,this,value,set,value,value
StringValue -> public StringValue(StringValue value);1452178883;Initializes this StringValue to a copy the given StringValue.__@param value The initial value.;public StringValue(StringValue value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,a,copy,the,given,string,value,param,value,the,initial,value;public,string,value,string,value,value,this,value,set,value,value
StringValue -> public StringValue(StringValue value);1457441341;Initializes this StringValue to a copy the given StringValue.__@param value The initial value.;public StringValue(StringValue value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,a,copy,the,given,string,value,param,value,the,initial,value;public,string,value,string,value,value,this,value,set,value,value
StringValue -> public StringValue(StringValue value);1460741894;Initializes this StringValue to a copy the given StringValue.__@param value The initial value.;public StringValue(StringValue value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,a,copy,the,given,string,value,param,value,the,initial,value;public,string,value,string,value,value,this,value,set,value,value
StringValue -> public StringValue(StringValue value);1471549817;Initializes this StringValue to a copy the given StringValue.__@param value The initial value.;public StringValue(StringValue value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,a,copy,the,given,string,value,param,value,the,initial,value;public,string,value,string,value,value,this,value,set,value,value
StringValue -> public StringValue(StringValue value);1529010948;Initializes this StringValue to a copy the given StringValue.__@param value The initial value.;public StringValue(StringValue value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,a,copy,the,given,string,value,param,value,the,initial,value;public,string,value,string,value,value,this,value,set,value,value
StringValue -> public StringValue(StringValue value);1530185676;Initializes this StringValue to a copy the given StringValue.__@param value The initial value.;public StringValue(StringValue value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,a,copy,the,given,string,value,param,value,the,initial,value;public,string,value,string,value,value,this,value,set,value,value
StringValue -> public StringValue substring(int start);1405024514;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at end of the string__@param start The beginning index, inclusive._@return The substring._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public StringValue substring(int start) {_		return substring(start, this.len)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,start,the,beginning,index,inclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,string,value,substring,int,start,return,substring,start,this,len
StringValue -> public StringValue substring(int start);1405090423;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at end of the string__@param start The beginning index, inclusive._@return The substring._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public StringValue substring(int start) {_		return substring(start, this.len)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,start,the,beginning,index,inclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,string,value,substring,int,start,return,substring,start,this,len
StringValue -> public StringValue substring(int start);1411473593;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at end of the string__@param start The beginning index, inclusive._@return The substring._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public StringValue substring(int start) {_		return substring(start, this.len)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,start,the,beginning,index,inclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,string,value,substring,int,start,return,substring,start,this,len
StringValue -> public StringValue substring(int start);1414786554;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at end of the string__@param start The beginning index, inclusive._@return The substring._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public StringValue substring(int start) {_		return substring(start, this.len)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,start,the,beginning,index,inclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,string,value,substring,int,start,return,substring,start,this,len
StringValue -> public StringValue substring(int start);1418912934;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at end of the string__@param start The beginning index, inclusive._@return The substring._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public StringValue substring(int start) {_		return substring(start, this.len)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,start,the,beginning,index,inclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,string,value,substring,int,start,return,substring,start,this,len
StringValue -> public StringValue substring(int start);1431696388;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at end of the string__@param start The beginning index, inclusive._@return The substring._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public StringValue substring(int start) {_		return substring(start, this.len)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,start,the,beginning,index,inclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,string,value,substring,int,start,return,substring,start,this,len
StringValue -> public StringValue substring(int start);1434963934;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at end of the string__@param start The beginning index, inclusive._@return The substring._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public StringValue substring(int start) {_		return substring(start, this.len)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,start,the,beginning,index,inclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,string,value,substring,int,start,return,substring,start,this,len
StringValue -> public StringValue substring(int start);1434974504;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at end of the string__@param start The beginning index, inclusive._@return The substring._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public StringValue substring(int start) {_		return substring(start, this.len)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,start,the,beginning,index,inclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,string,value,substring,int,start,return,substring,start,this,len
StringValue -> public StringValue substring(int start);1443521887;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at end of the string__@param start The beginning index, inclusive._@return The substring._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public StringValue substring(int start) {_		return substring(start, this.len)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,start,the,beginning,index,inclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,string,value,substring,int,start,return,substring,start,this,len
StringValue -> public StringValue substring(int start);1446112342;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at end of the string__@param start The beginning index, inclusive._@return The substring._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public StringValue substring(int start) {_		return substring(start, this.len)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,start,the,beginning,index,inclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,string,value,substring,int,start,return,substring,start,this,len
StringValue -> public StringValue substring(int start);1452178883;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at end of the string__@param start The beginning index, inclusive._@return The substring._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public StringValue substring(int start) {_		return substring(start, this.len)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,start,the,beginning,index,inclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,string,value,substring,int,start,return,substring,start,this,len
StringValue -> public StringValue substring(int start);1457441341;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at end of the string__@param start The beginning index, inclusive._@return The substring._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public StringValue substring(int start) {_		return substring(start, this.len)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,start,the,beginning,index,inclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,string,value,substring,int,start,return,substring,start,this,len
StringValue -> public StringValue substring(int start);1460741894;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at end of the string__@param start The beginning index, inclusive._@return The substring._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public StringValue substring(int start) {_		return substring(start, this.len)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,start,the,beginning,index,inclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,string,value,substring,int,start,return,substring,start,this,len
StringValue -> public StringValue substring(int start);1471549817;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at end of the string__@param start The beginning index, inclusive._@return The substring._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public StringValue substring(int start) {_		return substring(start, this.len)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,start,the,beginning,index,inclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,string,value,substring,int,start,return,substring,start,this,len
StringValue -> public StringValue substring(int start);1529010948;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at end of the string__@param start The beginning index, inclusive._@return The substring._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public StringValue substring(int start) {_		return substring(start, this.len)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,start,the,beginning,index,inclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,string,value,substring,int,start,return,substring,start,this,len
StringValue -> public StringValue substring(int start);1530185676;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at end of the string__@param start The beginning index, inclusive._@return The substring._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public StringValue substring(int start) {_		return substring(start, this.len)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,start,the,beginning,index,inclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,string,value,substring,int,start,return,substring,start,this,len
StringValue -> public StringValue substring(int start, int end);1405024514;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param start The beginning index, inclusive._@param end The ending index, exclusive._@return The substring._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public StringValue substring(int start, int end) {_		return new StringValue(this, start, end - start)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,string,value,substring,int,start,int,end,return,new,string,value,this,start,end,start
StringValue -> public StringValue substring(int start, int end);1405090423;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param start The beginning index, inclusive._@param end The ending index, exclusive._@return The substring._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public StringValue substring(int start, int end) {_		return new StringValue(this, start, end - start)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,string,value,substring,int,start,int,end,return,new,string,value,this,start,end,start
StringValue -> public StringValue substring(int start, int end);1411473593;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param start The beginning index, inclusive._@param end The ending index, exclusive._@return The substring._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public StringValue substring(int start, int end) {_		return new StringValue(this, start, end - start)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,string,value,substring,int,start,int,end,return,new,string,value,this,start,end,start
StringValue -> public StringValue substring(int start, int end);1414786554;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param start The beginning index, inclusive._@param end The ending index, exclusive._@return The substring._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public StringValue substring(int start, int end) {_		return new StringValue(this, start, end - start)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,string,value,substring,int,start,int,end,return,new,string,value,this,start,end,start
StringValue -> public StringValue substring(int start, int end);1418912934;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param start The beginning index, inclusive._@param end The ending index, exclusive._@return The substring._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public StringValue substring(int start, int end) {_		return new StringValue(this, start, end - start)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,string,value,substring,int,start,int,end,return,new,string,value,this,start,end,start
StringValue -> public StringValue substring(int start, int end);1431696388;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param start The beginning index, inclusive._@param end The ending index, exclusive._@return The substring._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public StringValue substring(int start, int end) {_		return new StringValue(this, start, end - start)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,string,value,substring,int,start,int,end,return,new,string,value,this,start,end,start
StringValue -> public StringValue substring(int start, int end);1434963934;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param start The beginning index, inclusive._@param end The ending index, exclusive._@return The substring._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public StringValue substring(int start, int end) {_		return new StringValue(this, start, end - start)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,string,value,substring,int,start,int,end,return,new,string,value,this,start,end,start
StringValue -> public StringValue substring(int start, int end);1434974504;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param start The beginning index, inclusive._@param end The ending index, exclusive._@return The substring._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public StringValue substring(int start, int end) {_		return new StringValue(this, start, end - start)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,string,value,substring,int,start,int,end,return,new,string,value,this,start,end,start
StringValue -> public StringValue substring(int start, int end);1443521887;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param start The beginning index, inclusive._@param end The ending index, exclusive._@return The substring._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public StringValue substring(int start, int end) {_		return new StringValue(this, start, end - start)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,string,value,substring,int,start,int,end,return,new,string,value,this,start,end,start
StringValue -> public StringValue substring(int start, int end);1446112342;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param start The beginning index, inclusive._@param end The ending index, exclusive._@return The substring._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public StringValue substring(int start, int end) {_		return new StringValue(this, start, end - start)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,string,value,substring,int,start,int,end,return,new,string,value,this,start,end,start
StringValue -> public StringValue substring(int start, int end);1452178883;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param start The beginning index, inclusive._@param end The ending index, exclusive._@return The substring._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public StringValue substring(int start, int end) {_		return new StringValue(this, start, end - start)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,string,value,substring,int,start,int,end,return,new,string,value,this,start,end,start
StringValue -> public StringValue substring(int start, int end);1457441341;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param start The beginning index, inclusive._@param end The ending index, exclusive._@return The substring._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public StringValue substring(int start, int end) {_		return new StringValue(this, start, end - start)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,string,value,substring,int,start,int,end,return,new,string,value,this,start,end,start
StringValue -> public StringValue substring(int start, int end);1460741894;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param start The beginning index, inclusive._@param end The ending index, exclusive._@return The substring._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public StringValue substring(int start, int end) {_		return new StringValue(this, start, end - start)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,string,value,substring,int,start,int,end,return,new,string,value,this,start,end,start
StringValue -> public StringValue substring(int start, int end);1471549817;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param start The beginning index, inclusive._@param end The ending index, exclusive._@return The substring._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public StringValue substring(int start, int end) {_		return new StringValue(this, start, end - start)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,string,value,substring,int,start,int,end,return,new,string,value,this,start,end,start
StringValue -> public StringValue substring(int start, int end);1529010948;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param start The beginning index, inclusive._@param end The ending index, exclusive._@return The substring._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public StringValue substring(int start, int end) {_		return new StringValue(this, start, end - start)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,string,value,substring,int,start,int,end,return,new,string,value,this,start,end,start
StringValue -> public StringValue substring(int start, int end);1530185676;Returns a new <tt>StringValue</tt>string that is a substring of this string. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param start The beginning index, inclusive._@param end The ending index, exclusive._@return The substring._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public StringValue substring(int start, int end) {_		return new StringValue(this, start, end - start)__	};returns,a,new,tt,string,value,tt,string,that,is,a,substring,of,this,string,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,return,the,substring,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,string,value,substring,int,start,int,end,return,new,string,value,this,start,end,start
StringValue -> public StringValue();1405024514;Initializes the encapsulated String object with an empty string.;public StringValue() {_		this.value = EMPTY_STRING__	};initializes,the,encapsulated,string,object,with,an,empty,string;public,string,value,this,value
StringValue -> public StringValue();1405090423;Initializes the encapsulated String object with an empty string.;public StringValue() {_		this.value = EMPTY_STRING__	};initializes,the,encapsulated,string,object,with,an,empty,string;public,string,value,this,value
StringValue -> public StringValue();1411473593;Initializes the encapsulated String object with an empty string.;public StringValue() {_		this.value = EMPTY_STRING__	};initializes,the,encapsulated,string,object,with,an,empty,string;public,string,value,this,value
StringValue -> public StringValue();1414786554;Initializes the encapsulated String object with an empty string.;public StringValue() {_		this.value = EMPTY_STRING__	};initializes,the,encapsulated,string,object,with,an,empty,string;public,string,value,this,value
StringValue -> public StringValue();1418912934;Initializes the encapsulated String object with an empty string.;public StringValue() {_		this.value = EMPTY_STRING__	};initializes,the,encapsulated,string,object,with,an,empty,string;public,string,value,this,value
StringValue -> public StringValue();1431696388;Initializes the encapsulated String object with an empty string.;public StringValue() {_		this.value = EMPTY_STRING__	};initializes,the,encapsulated,string,object,with,an,empty,string;public,string,value,this,value
StringValue -> public StringValue();1434963934;Initializes the encapsulated String object with an empty string.;public StringValue() {_		this.value = EMPTY_STRING__	};initializes,the,encapsulated,string,object,with,an,empty,string;public,string,value,this,value
StringValue -> public StringValue();1434974504;Initializes the encapsulated String object with an empty string.;public StringValue() {_		this.value = EMPTY_STRING__	};initializes,the,encapsulated,string,object,with,an,empty,string;public,string,value,this,value
StringValue -> public StringValue();1443521887;Initializes the encapsulated String object with an empty string.;public StringValue() {_		this.value = EMPTY_STRING__	};initializes,the,encapsulated,string,object,with,an,empty,string;public,string,value,this,value
StringValue -> public StringValue();1446112342;Initializes the encapsulated String object with an empty string.;public StringValue() {_		this.value = EMPTY_STRING__	};initializes,the,encapsulated,string,object,with,an,empty,string;public,string,value,this,value
StringValue -> public StringValue();1452178883;Initializes the encapsulated String object with an empty string.;public StringValue() {_		this.value = EMPTY_STRING__	};initializes,the,encapsulated,string,object,with,an,empty,string;public,string,value,this,value
StringValue -> public StringValue();1457441341;Initializes the encapsulated String object with an empty string.;public StringValue() {_		this.value = EMPTY_STRING__	};initializes,the,encapsulated,string,object,with,an,empty,string;public,string,value,this,value
StringValue -> public StringValue();1460741894;Initializes the encapsulated String object with an empty string.;public StringValue() {_		this.value = EMPTY_STRING__	};initializes,the,encapsulated,string,object,with,an,empty,string;public,string,value,this,value
StringValue -> public StringValue();1471549817;Initializes the encapsulated String object with an empty string.;public StringValue() {_		this.value = EMPTY_STRING__	};initializes,the,encapsulated,string,object,with,an,empty,string;public,string,value,this,value
StringValue -> public StringValue();1529010948;Initializes the encapsulated String object with an empty string.;public StringValue() {_		this.value = EMPTY_STRING__	};initializes,the,encapsulated,string,object,with,an,empty,string;public,string,value,this,value
StringValue -> public StringValue();1530185676;Initializes the encapsulated String object with an empty string.;public StringValue() {_		this.value = EMPTY_STRING__	};initializes,the,encapsulated,string,object,with,an,empty,string;public,string,value,this,value
StringValue -> public void setValue(CharSequence value);1405024514;Sets the value of the StringValue to the given string.__@param value The new string value.;public void setValue(CharSequence value) {_		Validate.notNull(value)__		setValue(value, 0, value.length())__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;public,void,set,value,char,sequence,value,validate,not,null,value,set,value,value,0,value,length
StringValue -> public void setValue(CharSequence value);1405090423;Sets the value of the StringValue to the given string.__@param value The new string value.;public void setValue(CharSequence value) {_		Validate.notNull(value)__		setValue(value, 0, value.length())__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;public,void,set,value,char,sequence,value,validate,not,null,value,set,value,value,0,value,length
StringValue -> public void setValue(CharSequence value);1411473593;Sets the value of the StringValue to the given string.__@param value The new string value.;public void setValue(CharSequence value) {_		Validate.notNull(value)__		setValue(value, 0, value.length())__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;public,void,set,value,char,sequence,value,validate,not,null,value,set,value,value,0,value,length
StringValue -> public void setValue(CharSequence value);1414786554;Sets the value of the StringValue to the given string.__@param value The new string value.;public void setValue(CharSequence value) {_		Validate.notNull(value)__		setValue(value, 0, value.length())__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;public,void,set,value,char,sequence,value,validate,not,null,value,set,value,value,0,value,length
StringValue -> public void setValue(CharSequence value);1418912934;Sets the value of the StringValue to the given string.__@param value The new string value.;public void setValue(CharSequence value) {_		Validate.notNull(value)__		setValue(value, 0, value.length())__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;public,void,set,value,char,sequence,value,validate,not,null,value,set,value,value,0,value,length
StringValue -> public void setValue(CharSequence value);1431696388;Sets the value of the StringValue to the given string.__@param value The new string value.;public void setValue(CharSequence value) {_		Preconditions.checkNotNull(value)__		setValue(value, 0, value.length())__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;public,void,set,value,char,sequence,value,preconditions,check,not,null,value,set,value,value,0,value,length
StringValue -> public void setValue(CharSequence value);1434963934;Sets the value of the StringValue to the given string.__@param value The new string value.;public void setValue(CharSequence value) {_		Preconditions.checkNotNull(value)__		setValue(value, 0, value.length())__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;public,void,set,value,char,sequence,value,preconditions,check,not,null,value,set,value,value,0,value,length
StringValue -> public void setValue(CharSequence value);1434974504;Sets the value of the StringValue to the given string.__@param value The new string value.;public void setValue(CharSequence value) {_		Preconditions.checkNotNull(value)__		setValue(value, 0, value.length())__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;public,void,set,value,char,sequence,value,preconditions,check,not,null,value,set,value,value,0,value,length
StringValue -> public void setValue(CharSequence value);1443521887;Sets the value of the StringValue to the given string.__@param value The new string value.;public void setValue(CharSequence value) {_		Preconditions.checkNotNull(value)__		setValue(value, 0, value.length())__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;public,void,set,value,char,sequence,value,preconditions,check,not,null,value,set,value,value,0,value,length
StringValue -> public void setValue(CharSequence value);1446112342;Sets the value of the StringValue to the given string.__@param value The new string value.;public void setValue(CharSequence value) {_		Preconditions.checkNotNull(value)__		setValue(value, 0, value.length())__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;public,void,set,value,char,sequence,value,preconditions,check,not,null,value,set,value,value,0,value,length
StringValue -> public void setValue(CharSequence value);1452178883;Sets the value of the StringValue to the given string.__@param value The new string value.;public void setValue(CharSequence value) {_		Preconditions.checkNotNull(value)__		setValue(value, 0, value.length())__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;public,void,set,value,char,sequence,value,preconditions,check,not,null,value,set,value,value,0,value,length
StringValue -> public void setValue(CharSequence value);1457441341;Sets the value of the StringValue to the given string.__@param value The new string value.;public void setValue(CharSequence value) {_		Preconditions.checkNotNull(value)__		setValue(value, 0, value.length())__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;public,void,set,value,char,sequence,value,preconditions,check,not,null,value,set,value,value,0,value,length
StringValue -> public void setValue(CharSequence value);1460741894;Sets the value of the StringValue to the given string.__@param value The new string value.;public void setValue(CharSequence value) {_		checkNotNull(value)__		setValue(value, 0, value.length())__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;public,void,set,value,char,sequence,value,check,not,null,value,set,value,value,0,value,length
StringValue -> public void setValue(CharSequence value);1471549817;Sets the value of the StringValue to the given string.__@param value The new string value.;public void setValue(CharSequence value) {_		checkNotNull(value)__		setValue(value, 0, value.length())__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;public,void,set,value,char,sequence,value,check,not,null,value,set,value,value,0,value,length
StringValue -> public void setValue(CharSequence value);1529010948;Sets the value of the StringValue to the given string.__@param value The new string value.;public void setValue(CharSequence value) {_		checkNotNull(value)__		setValue(value, 0, value.length())__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;public,void,set,value,char,sequence,value,check,not,null,value,set,value,value,0,value,length
StringValue -> public void setValue(CharSequence value);1530185676;Sets the value of the StringValue to the given string.__@param value The new string value.;public void setValue(CharSequence value) {_		checkNotNull(value)__		setValue(value, 0, value.length())__	};sets,the,value,of,the,string,value,to,the,given,string,param,value,the,new,string,value;public,void,set,value,char,sequence,value,check,not,null,value,set,value,value,0,value,length
StringValue -> public String getValue();1405024514;Gets this StringValue as a String.__@return A String resembling the contents of this StringValue.;public String getValue() {_		return toString()__	};gets,this,string,value,as,a,string,return,a,string,resembling,the,contents,of,this,string,value;public,string,get,value,return,to,string
StringValue -> public String getValue();1405090423;Gets this StringValue as a String.__@return A String resembling the contents of this StringValue.;public String getValue() {_		return toString()__	};gets,this,string,value,as,a,string,return,a,string,resembling,the,contents,of,this,string,value;public,string,get,value,return,to,string
StringValue -> public String getValue();1411473593;Gets this StringValue as a String.__@return A String resembling the contents of this StringValue.;public String getValue() {_		return toString()__	};gets,this,string,value,as,a,string,return,a,string,resembling,the,contents,of,this,string,value;public,string,get,value,return,to,string
StringValue -> public String getValue();1414786554;Gets this StringValue as a String.__@return A String resembling the contents of this StringValue.;public String getValue() {_		return toString()__	};gets,this,string,value,as,a,string,return,a,string,resembling,the,contents,of,this,string,value;public,string,get,value,return,to,string
StringValue -> public String getValue();1418912934;Gets this StringValue as a String.__@return A String resembling the contents of this StringValue.;public String getValue() {_		return toString()__	};gets,this,string,value,as,a,string,return,a,string,resembling,the,contents,of,this,string,value;public,string,get,value,return,to,string
StringValue -> public String getValue();1431696388;Gets this StringValue as a String.__@return A String resembling the contents of this StringValue.;public String getValue() {_		return toString()__	};gets,this,string,value,as,a,string,return,a,string,resembling,the,contents,of,this,string,value;public,string,get,value,return,to,string
StringValue -> public String getValue();1434963934;Gets this StringValue as a String.__@return A String resembling the contents of this StringValue.;public String getValue() {_		return toString()__	};gets,this,string,value,as,a,string,return,a,string,resembling,the,contents,of,this,string,value;public,string,get,value,return,to,string
StringValue -> public String getValue();1434974504;Gets this StringValue as a String.__@return A String resembling the contents of this StringValue.;public String getValue() {_		return toString()__	};gets,this,string,value,as,a,string,return,a,string,resembling,the,contents,of,this,string,value;public,string,get,value,return,to,string
StringValue -> public String getValue();1443521887;Gets this StringValue as a String.__@return A String resembling the contents of this StringValue.;public String getValue() {_		return toString()__	};gets,this,string,value,as,a,string,return,a,string,resembling,the,contents,of,this,string,value;public,string,get,value,return,to,string
StringValue -> public String getValue();1446112342;Gets this StringValue as a String.__@return A String resembling the contents of this StringValue.;public String getValue() {_		return toString()__	};gets,this,string,value,as,a,string,return,a,string,resembling,the,contents,of,this,string,value;public,string,get,value,return,to,string
StringValue -> public String getValue();1452178883;Gets this StringValue as a String.__@return A String resembling the contents of this StringValue.;public String getValue() {_		return toString()__	};gets,this,string,value,as,a,string,return,a,string,resembling,the,contents,of,this,string,value;public,string,get,value,return,to,string
StringValue -> public String getValue();1457441341;Gets this StringValue as a String.__@return A String resembling the contents of this StringValue.;public String getValue() {_		return toString()__	};gets,this,string,value,as,a,string,return,a,string,resembling,the,contents,of,this,string,value;public,string,get,value,return,to,string
StringValue -> public String getValue();1460741894;Gets this StringValue as a String.__@return A String resembling the contents of this StringValue.;public String getValue() {_		return toString()__	};gets,this,string,value,as,a,string,return,a,string,resembling,the,contents,of,this,string,value;public,string,get,value,return,to,string
StringValue -> public String getValue();1471549817;Gets this StringValue as a String.__@return A String resembling the contents of this StringValue.;public String getValue() {_		return toString()__	};gets,this,string,value,as,a,string,return,a,string,resembling,the,contents,of,this,string,value;public,string,get,value,return,to,string
StringValue -> public String getValue();1529010948;Gets this StringValue as a String.__@return A String resembling the contents of this StringValue.;public String getValue() {_		return toString()__	};gets,this,string,value,as,a,string,return,a,string,resembling,the,contents,of,this,string,value;public,string,get,value,return,to,string
StringValue -> public String getValue();1530185676;Gets this StringValue as a String.__@return A String resembling the contents of this StringValue.;public String getValue() {_		return toString()__	};gets,this,string,value,as,a,string,return,a,string,resembling,the,contents,of,this,string,value;public,string,get,value,return,to,string
StringValue -> public boolean startsWith(CharSequence prefix);1405024514;Checks whether this StringValue starts with the given prefix string.__@param prefix The prefix character sequence.__@return True, if this StringValue has </code>prefix</code> as its prefix.;public boolean startsWith(CharSequence prefix) {_		return startsWith(prefix, 0)__	};checks,whether,this,string,value,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,return,true,if,this,string,value,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,return,starts,with,prefix,0
StringValue -> public boolean startsWith(CharSequence prefix);1405090423;Checks whether this StringValue starts with the given prefix string.__@param prefix The prefix character sequence.__@return True, if this StringValue has </code>prefix</code> as its prefix.;public boolean startsWith(CharSequence prefix) {_		return startsWith(prefix, 0)__	};checks,whether,this,string,value,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,return,true,if,this,string,value,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,return,starts,with,prefix,0
StringValue -> public boolean startsWith(CharSequence prefix);1411473593;Checks whether this StringValue starts with the given prefix string.__@param prefix The prefix character sequence.__@return True, if this StringValue has </code>prefix</code> as its prefix.;public boolean startsWith(CharSequence prefix) {_		return startsWith(prefix, 0)__	};checks,whether,this,string,value,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,return,true,if,this,string,value,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,return,starts,with,prefix,0
StringValue -> public boolean startsWith(CharSequence prefix);1414786554;Checks whether this StringValue starts with the given prefix string.__@param prefix The prefix character sequence.__@return True, if this StringValue has </code>prefix</code> as its prefix.;public boolean startsWith(CharSequence prefix) {_		return startsWith(prefix, 0)__	};checks,whether,this,string,value,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,return,true,if,this,string,value,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,return,starts,with,prefix,0
StringValue -> public boolean startsWith(CharSequence prefix);1418912934;Checks whether this StringValue starts with the given prefix string.__@param prefix The prefix character sequence.__@return True, if this StringValue has </code>prefix</code> as its prefix.;public boolean startsWith(CharSequence prefix) {_		return startsWith(prefix, 0)__	};checks,whether,this,string,value,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,return,true,if,this,string,value,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,return,starts,with,prefix,0
StringValue -> public boolean startsWith(CharSequence prefix);1431696388;Checks whether this StringValue starts with the given prefix string.__@param prefix The prefix character sequence.__@return True, if this StringValue has </code>prefix</code> as its prefix.;public boolean startsWith(CharSequence prefix) {_		return startsWith(prefix, 0)__	};checks,whether,this,string,value,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,return,true,if,this,string,value,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,return,starts,with,prefix,0
StringValue -> public boolean startsWith(CharSequence prefix);1434963934;Checks whether this StringValue starts with the given prefix string.__@param prefix The prefix character sequence.__@return True, if this StringValue has </code>prefix</code> as its prefix.;public boolean startsWith(CharSequence prefix) {_		return startsWith(prefix, 0)__	};checks,whether,this,string,value,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,return,true,if,this,string,value,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,return,starts,with,prefix,0
StringValue -> public boolean startsWith(CharSequence prefix);1434974504;Checks whether this StringValue starts with the given prefix string.__@param prefix The prefix character sequence.__@return True, if this StringValue has </code>prefix</code> as its prefix.;public boolean startsWith(CharSequence prefix) {_		return startsWith(prefix, 0)__	};checks,whether,this,string,value,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,return,true,if,this,string,value,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,return,starts,with,prefix,0
StringValue -> public boolean startsWith(CharSequence prefix);1443521887;Checks whether this StringValue starts with the given prefix string.__@param prefix The prefix character sequence.__@return True, if this StringValue has </code>prefix</code> as its prefix.;public boolean startsWith(CharSequence prefix) {_		return startsWith(prefix, 0)__	};checks,whether,this,string,value,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,return,true,if,this,string,value,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,return,starts,with,prefix,0
StringValue -> public boolean startsWith(CharSequence prefix);1446112342;Checks whether this StringValue starts with the given prefix string.__@param prefix The prefix character sequence.__@return True, if this StringValue has <code>prefix</code> as its prefix.;public boolean startsWith(CharSequence prefix) {_		return startsWith(prefix, 0)__	};checks,whether,this,string,value,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,return,true,if,this,string,value,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,return,starts,with,prefix,0
StringValue -> public boolean startsWith(CharSequence prefix);1452178883;Checks whether this StringValue starts with the given prefix string.__@param prefix The prefix character sequence.__@return True, if this StringValue has <code>prefix</code> as its prefix.;public boolean startsWith(CharSequence prefix) {_		return startsWith(prefix, 0)__	};checks,whether,this,string,value,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,return,true,if,this,string,value,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,return,starts,with,prefix,0
StringValue -> public boolean startsWith(CharSequence prefix);1457441341;Checks whether this StringValue starts with the given prefix string.__@param prefix The prefix character sequence.__@return True, if this StringValue has <code>prefix</code> as its prefix.;public boolean startsWith(CharSequence prefix) {_		return startsWith(prefix, 0)__	};checks,whether,this,string,value,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,return,true,if,this,string,value,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,return,starts,with,prefix,0
StringValue -> public boolean startsWith(CharSequence prefix);1460741894;Checks whether this StringValue starts with the given prefix string.__@param prefix The prefix character sequence.__@return True, if this StringValue has <code>prefix</code> as its prefix.;public boolean startsWith(CharSequence prefix) {_		return startsWith(prefix, 0)__	};checks,whether,this,string,value,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,return,true,if,this,string,value,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,return,starts,with,prefix,0
StringValue -> public boolean startsWith(CharSequence prefix);1471549817;Checks whether this StringValue starts with the given prefix string.__@param prefix The prefix character sequence.__@return True, if this StringValue has <code>prefix</code> as its prefix.;public boolean startsWith(CharSequence prefix) {_		return startsWith(prefix, 0)__	};checks,whether,this,string,value,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,return,true,if,this,string,value,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,return,starts,with,prefix,0
StringValue -> public boolean startsWith(CharSequence prefix);1529010948;Checks whether this StringValue starts with the given prefix string.__@param prefix The prefix character sequence.__@return True, if this StringValue has <code>prefix</code> as its prefix.;public boolean startsWith(CharSequence prefix) {_		return startsWith(prefix, 0)__	};checks,whether,this,string,value,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,return,true,if,this,string,value,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,return,starts,with,prefix,0
StringValue -> public boolean startsWith(CharSequence prefix);1530185676;Checks whether this StringValue starts with the given prefix string.__@param prefix The prefix character sequence.__@return True, if this StringValue has <code>prefix</code> as its prefix.;public boolean startsWith(CharSequence prefix) {_		return startsWith(prefix, 0)__	};checks,whether,this,string,value,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,return,true,if,this,string,value,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,return,starts,with,prefix,0
StringValue -> public void setValue(StringValue value, int offset, int len);1405024514;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(StringValue value, int offset, int len) {_		Validate.notNull(value)__		setValue(value.value, offset, len)__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,string,value,value,int,offset,int,len,validate,not,null,value,set,value,value,value,offset,len
StringValue -> public void setValue(StringValue value, int offset, int len);1405090423;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(StringValue value, int offset, int len) {_		Validate.notNull(value)__		setValue(value.value, offset, len)__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,string,value,value,int,offset,int,len,validate,not,null,value,set,value,value,value,offset,len
StringValue -> public void setValue(StringValue value, int offset, int len);1411473593;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(StringValue value, int offset, int len) {_		Validate.notNull(value)__		setValue(value.value, offset, len)__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,string,value,value,int,offset,int,len,validate,not,null,value,set,value,value,value,offset,len
StringValue -> public void setValue(StringValue value, int offset, int len);1414786554;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(StringValue value, int offset, int len) {_		Validate.notNull(value)__		setValue(value.value, offset, len)__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,string,value,value,int,offset,int,len,validate,not,null,value,set,value,value,value,offset,len
StringValue -> public void setValue(StringValue value, int offset, int len);1418912934;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(StringValue value, int offset, int len) {_		Validate.notNull(value)__		setValue(value.value, offset, len)__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,string,value,value,int,offset,int,len,validate,not,null,value,set,value,value,value,offset,len
StringValue -> public void setValue(StringValue value, int offset, int len);1431696388;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(StringValue value, int offset, int len) {_		Preconditions.checkNotNull(value)__		setValue(value.value, offset, len)__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,string,value,value,int,offset,int,len,preconditions,check,not,null,value,set,value,value,value,offset,len
StringValue -> public void setValue(StringValue value, int offset, int len);1434963934;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(StringValue value, int offset, int len) {_		Preconditions.checkNotNull(value)__		setValue(value.value, offset, len)__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,string,value,value,int,offset,int,len,preconditions,check,not,null,value,set,value,value,value,offset,len
StringValue -> public void setValue(StringValue value, int offset, int len);1434974504;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(StringValue value, int offset, int len) {_		Preconditions.checkNotNull(value)__		setValue(value.value, offset, len)__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,string,value,value,int,offset,int,len,preconditions,check,not,null,value,set,value,value,value,offset,len
StringValue -> public void setValue(StringValue value, int offset, int len);1443521887;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(StringValue value, int offset, int len) {_		Preconditions.checkNotNull(value)__		setValue(value.value, offset, len)__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,string,value,value,int,offset,int,len,preconditions,check,not,null,value,set,value,value,value,offset,len
StringValue -> public void setValue(StringValue value, int offset, int len);1446112342;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(StringValue value, int offset, int len) {_		Preconditions.checkNotNull(value)__		setValue(value.value, offset, len)__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,string,value,value,int,offset,int,len,preconditions,check,not,null,value,set,value,value,value,offset,len
StringValue -> public void setValue(StringValue value, int offset, int len);1452178883;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(StringValue value, int offset, int len) {_		Preconditions.checkNotNull(value)__		setValue(value.value, offset, len)__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,string,value,value,int,offset,int,len,preconditions,check,not,null,value,set,value,value,value,offset,len
StringValue -> public void setValue(StringValue value, int offset, int len);1457441341;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(StringValue value, int offset, int len) {_		Preconditions.checkNotNull(value)__		setValue(value.value, offset, len)__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,string,value,value,int,offset,int,len,preconditions,check,not,null,value,set,value,value,value,offset,len
StringValue -> public void setValue(StringValue value, int offset, int len);1460741894;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(StringValue value, int offset, int len) {_		checkNotNull(value)__		setValue(value.value, offset, len)__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,string,value,value,int,offset,int,len,check,not,null,value,set,value,value,value,offset,len
StringValue -> public void setValue(StringValue value, int offset, int len);1471549817;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(StringValue value, int offset, int len) {_		checkNotNull(value)__		setValue(value.value, offset, len)__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,string,value,value,int,offset,int,len,check,not,null,value,set,value,value,value,offset,len
StringValue -> public void setValue(StringValue value, int offset, int len);1529010948;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(StringValue value, int offset, int len) {_		checkNotNull(value)__		setValue(value.value, offset, len)__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,string,value,value,int,offset,int,len,check,not,null,value,set,value,value,value,offset,len
StringValue -> public void setValue(StringValue value, int offset, int len);1530185676;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(StringValue value, int offset, int len) {_		checkNotNull(value)__		setValue(value.value, offset, len)__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,string,value,value,int,offset,int,len,check,not,null,value,set,value,value,value,offset,len
StringValue -> public void setValue(char[] chars, int offset, int len);1405024514;Sets the value of the StringValue to a substring of the given value.__@param chars The new string value (as a character array)._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(char[] chars, int offset, int len) {_		Validate.notNull(chars)__		if (offset < 0 || len < 0 || offset > chars.length - len) {_			throw new IndexOutOfBoundsException()__		}__		ensureSize(len)__		System.arraycopy(chars, offset, this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,value,param,chars,the,new,string,value,as,a,character,array,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,chars,int,offset,int,len,validate,not,null,chars,if,offset,0,len,0,offset,chars,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,system,arraycopy,chars,offset,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(char[] chars, int offset, int len);1405090423;Sets the value of the StringValue to a substring of the given value.__@param chars The new string value (as a character array)._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(char[] chars, int offset, int len) {_		Validate.notNull(chars)__		if (offset < 0 || len < 0 || offset > chars.length - len) {_			throw new IndexOutOfBoundsException()__		}__		ensureSize(len)__		System.arraycopy(chars, offset, this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,value,param,chars,the,new,string,value,as,a,character,array,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,chars,int,offset,int,len,validate,not,null,chars,if,offset,0,len,0,offset,chars,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,system,arraycopy,chars,offset,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(char[] chars, int offset, int len);1411473593;Sets the value of the StringValue to a substring of the given value.__@param chars The new string value (as a character array)._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(char[] chars, int offset, int len) {_		Validate.notNull(chars)__		if (offset < 0 || len < 0 || offset > chars.length - len) {_			throw new IndexOutOfBoundsException()__		}__		ensureSize(len)__		System.arraycopy(chars, offset, this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,value,param,chars,the,new,string,value,as,a,character,array,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,chars,int,offset,int,len,validate,not,null,chars,if,offset,0,len,0,offset,chars,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,system,arraycopy,chars,offset,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(char[] chars, int offset, int len);1414786554;Sets the value of the StringValue to a substring of the given value.__@param chars The new string value (as a character array)._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(char[] chars, int offset, int len) {_		Validate.notNull(chars)__		if (offset < 0 || len < 0 || offset > chars.length - len) {_			throw new IndexOutOfBoundsException()__		}__		ensureSize(len)__		System.arraycopy(chars, offset, this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,value,param,chars,the,new,string,value,as,a,character,array,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,chars,int,offset,int,len,validate,not,null,chars,if,offset,0,len,0,offset,chars,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,system,arraycopy,chars,offset,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(char[] chars, int offset, int len);1418912934;Sets the value of the StringValue to a substring of the given value.__@param chars The new string value (as a character array)._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(char[] chars, int offset, int len) {_		Validate.notNull(chars)__		if (offset < 0 || len < 0 || offset > chars.length - len) {_			throw new IndexOutOfBoundsException()__		}__		ensureSize(len)__		System.arraycopy(chars, offset, this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,value,param,chars,the,new,string,value,as,a,character,array,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,chars,int,offset,int,len,validate,not,null,chars,if,offset,0,len,0,offset,chars,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,system,arraycopy,chars,offset,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(char[] chars, int offset, int len);1431696388;Sets the value of the StringValue to a substring of the given value.__@param chars The new string value (as a character array)._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(char[] chars, int offset, int len) {_		Preconditions.checkNotNull(chars)__		if (offset < 0 || len < 0 || offset > chars.length - len) {_			throw new IndexOutOfBoundsException()__		}__		ensureSize(len)__		System.arraycopy(chars, offset, this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,value,param,chars,the,new,string,value,as,a,character,array,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,chars,int,offset,int,len,preconditions,check,not,null,chars,if,offset,0,len,0,offset,chars,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,system,arraycopy,chars,offset,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(char[] chars, int offset, int len);1434963934;Sets the value of the StringValue to a substring of the given value.__@param chars The new string value (as a character array)._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(char[] chars, int offset, int len) {_		Preconditions.checkNotNull(chars)__		if (offset < 0 || len < 0 || offset > chars.length - len) {_			throw new IndexOutOfBoundsException()__		}__		ensureSize(len)__		System.arraycopy(chars, offset, this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,value,param,chars,the,new,string,value,as,a,character,array,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,chars,int,offset,int,len,preconditions,check,not,null,chars,if,offset,0,len,0,offset,chars,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,system,arraycopy,chars,offset,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(char[] chars, int offset, int len);1434974504;Sets the value of the StringValue to a substring of the given value.__@param chars The new string value (as a character array)._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(char[] chars, int offset, int len) {_		Preconditions.checkNotNull(chars)__		if (offset < 0 || len < 0 || offset > chars.length - len) {_			throw new IndexOutOfBoundsException()__		}__		ensureSize(len)__		System.arraycopy(chars, offset, this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,value,param,chars,the,new,string,value,as,a,character,array,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,chars,int,offset,int,len,preconditions,check,not,null,chars,if,offset,0,len,0,offset,chars,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,system,arraycopy,chars,offset,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(char[] chars, int offset, int len);1443521887;Sets the value of the StringValue to a substring of the given value.__@param chars The new string value (as a character array)._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(char[] chars, int offset, int len) {_		Preconditions.checkNotNull(chars)__		if (offset < 0 || len < 0 || offset > chars.length - len) {_			throw new IndexOutOfBoundsException()__		}__		ensureSize(len)__		System.arraycopy(chars, offset, this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,value,param,chars,the,new,string,value,as,a,character,array,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,chars,int,offset,int,len,preconditions,check,not,null,chars,if,offset,0,len,0,offset,chars,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,system,arraycopy,chars,offset,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(char[] chars, int offset, int len);1446112342;Sets the value of the StringValue to a substring of the given value.__@param chars The new string value (as a character array)._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(char[] chars, int offset, int len) {_		Preconditions.checkNotNull(chars)__		if (offset < 0 || len < 0 || offset > chars.length - len) {_			throw new IndexOutOfBoundsException()__		}__		ensureSize(len)__		System.arraycopy(chars, offset, this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,value,param,chars,the,new,string,value,as,a,character,array,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,chars,int,offset,int,len,preconditions,check,not,null,chars,if,offset,0,len,0,offset,chars,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,system,arraycopy,chars,offset,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(char[] chars, int offset, int len);1452178883;Sets the value of the StringValue to a substring of the given value.__@param chars The new string value (as a character array)._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(char[] chars, int offset, int len) {_		Preconditions.checkNotNull(chars)__		if (offset < 0 || len < 0 || offset > chars.length - len) {_			throw new IndexOutOfBoundsException()__		}__		ensureSize(len)__		System.arraycopy(chars, offset, this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,value,param,chars,the,new,string,value,as,a,character,array,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,chars,int,offset,int,len,preconditions,check,not,null,chars,if,offset,0,len,0,offset,chars,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,system,arraycopy,chars,offset,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(char[] chars, int offset, int len);1457441341;Sets the value of the StringValue to a substring of the given value.__@param chars The new string value (as a character array)._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(char[] chars, int offset, int len) {_		Preconditions.checkNotNull(chars)__		if (offset < 0 || len < 0 || offset > chars.length - len) {_			throw new IndexOutOfBoundsException()__		}__		ensureSize(len)__		System.arraycopy(chars, offset, this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,value,param,chars,the,new,string,value,as,a,character,array,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,chars,int,offset,int,len,preconditions,check,not,null,chars,if,offset,0,len,0,offset,chars,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,system,arraycopy,chars,offset,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(char[] chars, int offset, int len);1460741894;Sets the value of the StringValue to a substring of the given value.__@param chars The new string value (as a character array)._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(char[] chars, int offset, int len) {_		checkNotNull(chars)__		if (offset < 0 || len < 0 || offset > chars.length - len) {_			throw new IndexOutOfBoundsException()__		}__		ensureSize(len)__		System.arraycopy(chars, offset, this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,value,param,chars,the,new,string,value,as,a,character,array,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,chars,int,offset,int,len,check,not,null,chars,if,offset,0,len,0,offset,chars,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,system,arraycopy,chars,offset,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(char[] chars, int offset, int len);1471549817;Sets the value of the StringValue to a substring of the given value.__@param chars The new string value (as a character array)._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(char[] chars, int offset, int len) {_		checkNotNull(chars)__		if (offset < 0 || len < 0 || offset > chars.length - len) {_			throw new IndexOutOfBoundsException()__		}__		ensureSize(len)__		System.arraycopy(chars, offset, this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,value,param,chars,the,new,string,value,as,a,character,array,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,chars,int,offset,int,len,check,not,null,chars,if,offset,0,len,0,offset,chars,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,system,arraycopy,chars,offset,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(char[] chars, int offset, int len);1529010948;Sets the value of the StringValue to a substring of the given value.__@param chars The new string value (as a character array)._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(char[] chars, int offset, int len) {_		checkNotNull(chars)__		if (offset < 0 || len < 0 || offset > chars.length - len) {_			throw new IndexOutOfBoundsException()__		}__		ensureSize(len)__		System.arraycopy(chars, offset, this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,value,param,chars,the,new,string,value,as,a,character,array,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,chars,int,offset,int,len,check,not,null,chars,if,offset,0,len,0,offset,chars,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,system,arraycopy,chars,offset,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(char[] chars, int offset, int len);1530185676;Sets the value of the StringValue to a substring of the given value.__@param chars The new string value (as a character array)._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(char[] chars, int offset, int len) {_		checkNotNull(chars)__		if (offset < 0 || len < 0 || offset > chars.length - len) {_			throw new IndexOutOfBoundsException()__		}__		ensureSize(len)__		System.arraycopy(chars, offset, this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,value,param,chars,the,new,string,value,as,a,character,array,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,chars,int,offset,int,len,check,not,null,chars,if,offset,0,len,0,offset,chars,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,system,arraycopy,chars,offset,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void substring(StringValue target, int start, int end);1405024514;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@param end The ending index, exclusive._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public void substring(StringValue target, int start, int end) {_		target.setValue(this, start, end - start)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,void,substring,string,value,target,int,start,int,end,target,set,value,this,start,end,start
StringValue -> public void substring(StringValue target, int start, int end);1405090423;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@param end The ending index, exclusive._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public void substring(StringValue target, int start, int end) {_		target.setValue(this, start, end - start)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,void,substring,string,value,target,int,start,int,end,target,set,value,this,start,end,start
StringValue -> public void substring(StringValue target, int start, int end);1411473593;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@param end The ending index, exclusive._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public void substring(StringValue target, int start, int end) {_		target.setValue(this, start, end - start)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,void,substring,string,value,target,int,start,int,end,target,set,value,this,start,end,start
StringValue -> public void substring(StringValue target, int start, int end);1414786554;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@param end The ending index, exclusive._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public void substring(StringValue target, int start, int end) {_		target.setValue(this, start, end - start)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,void,substring,string,value,target,int,start,int,end,target,set,value,this,start,end,start
StringValue -> public void substring(StringValue target, int start, int end);1418912934;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@param end The ending index, exclusive._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public void substring(StringValue target, int start, int end) {_		target.setValue(this, start, end - start)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,void,substring,string,value,target,int,start,int,end,target,set,value,this,start,end,start
StringValue -> public void substring(StringValue target, int start, int end);1431696388;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@param end The ending index, exclusive._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public void substring(StringValue target, int start, int end) {_		target.setValue(this, start, end - start)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,void,substring,string,value,target,int,start,int,end,target,set,value,this,start,end,start
StringValue -> public void substring(StringValue target, int start, int end);1434963934;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@param end The ending index, exclusive._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public void substring(StringValue target, int start, int end) {_		target.setValue(this, start, end - start)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,void,substring,string,value,target,int,start,int,end,target,set,value,this,start,end,start
StringValue -> public void substring(StringValue target, int start, int end);1434974504;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@param end The ending index, exclusive._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public void substring(StringValue target, int start, int end) {_		target.setValue(this, start, end - start)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,void,substring,string,value,target,int,start,int,end,target,set,value,this,start,end,start
StringValue -> public void substring(StringValue target, int start, int end);1443521887;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@param end The ending index, exclusive._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public void substring(StringValue target, int start, int end) {_		target.setValue(this, start, end - start)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,void,substring,string,value,target,int,start,int,end,target,set,value,this,start,end,start
StringValue -> public void substring(StringValue target, int start, int end);1446112342;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@param end The ending index, exclusive._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public void substring(StringValue target, int start, int end) {_		target.setValue(this, start, end - start)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,void,substring,string,value,target,int,start,int,end,target,set,value,this,start,end,start
StringValue -> public void substring(StringValue target, int start, int end);1452178883;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@param end The ending index, exclusive._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public void substring(StringValue target, int start, int end) {_		target.setValue(this, start, end - start)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,void,substring,string,value,target,int,start,int,end,target,set,value,this,start,end,start
StringValue -> public void substring(StringValue target, int start, int end);1457441341;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@param end The ending index, exclusive._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public void substring(StringValue target, int start, int end) {_		target.setValue(this, start, end - start)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,void,substring,string,value,target,int,start,int,end,target,set,value,this,start,end,start
StringValue -> public void substring(StringValue target, int start, int end);1460741894;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@param end The ending index, exclusive._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public void substring(StringValue target, int start, int end) {_		target.setValue(this, start, end - start)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,void,substring,string,value,target,int,start,int,end,target,set,value,this,start,end,start
StringValue -> public void substring(StringValue target, int start, int end);1471549817;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@param end The ending index, exclusive._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public void substring(StringValue target, int start, int end) {_		target.setValue(this, start, end - start)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,void,substring,string,value,target,int,start,int,end,target,set,value,this,start,end,start
StringValue -> public void substring(StringValue target, int start, int end);1529010948;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@param end The ending index, exclusive._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public void substring(StringValue target, int start, int end) {_		target.setValue(this, start, end - start)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,void,substring,string,value,target,int,start,int,end,target,set,value,this,start,end,start
StringValue -> public void substring(StringValue target, int start, int end);1530185676;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at <code>end - 1</code>.__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@param end The ending index, exclusive._@exception IndexOutOfBoundsException_Thrown, if the start is negative, or the end is larger than the length.;public void substring(StringValue target, int start, int end) {_		target.setValue(this, start, end - start)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,code,end,1,code,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,param,end,the,ending,index,exclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative,or,the,end,is,larger,than,the,length;public,void,substring,string,value,target,int,start,int,end,target,set,value,this,start,end,start
StringValue -> public void setValueAscii(byte[] bytes, int offset, int len);1405024514;Sets the value of this <code>StringValue</code>, assuming that the binary data is ASCII coded. The n-th character of the_<code>StringValue</code> corresponds directly to the n-th byte in the given array after the offset.__@param bytes The binary character data._@param offset The offset in the array._@param len The number of bytes to read from the array.;public void setValueAscii(byte[] bytes, int offset, int len) {_		if (bytes == null) {_			throw new NullPointerException("Bytes must not be null")__		}_		if (len < 0 | offset < 0 | offset > bytes.length - len) {_			throw new IndexOutOfBoundsException()__		}_		_		ensureSize(len)__		this.len = len__		this.hashCode = 0__		_		final char[] chars = this.value__		_		for (int i = 0, limit = offset + len_ offset < limit_ offset++, i++) {_			chars[i] = (char) (bytes[offset] & 0xff)__		}_	};sets,the,value,of,this,code,string,value,code,assuming,that,the,binary,data,is,ascii,coded,the,n,th,character,of,the,code,string,value,code,corresponds,directly,to,the,n,th,byte,in,the,given,array,after,the,offset,param,bytes,the,binary,character,data,param,offset,the,offset,in,the,array,param,len,the,number,of,bytes,to,read,from,the,array;public,void,set,value,ascii,byte,bytes,int,offset,int,len,if,bytes,null,throw,new,null,pointer,exception,bytes,must,not,be,null,if,len,0,offset,0,offset,bytes,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,this,len,len,this,hash,code,0,final,char,chars,this,value,for,int,i,0,limit,offset,len,offset,limit,offset,i,chars,i,char,bytes,offset,0xff
StringValue -> public void setValueAscii(byte[] bytes, int offset, int len);1405090423;Sets the value of this <code>StringValue</code>, assuming that the binary data is ASCII coded. The n-th character of the_<code>StringValue</code> corresponds directly to the n-th byte in the given array after the offset.__@param bytes The binary character data._@param offset The offset in the array._@param len The number of bytes to read from the array.;public void setValueAscii(byte[] bytes, int offset, int len) {_		if (bytes == null) {_			throw new NullPointerException("Bytes must not be null")__		}_		if (len < 0 | offset < 0 | offset > bytes.length - len) {_			throw new IndexOutOfBoundsException()__		}_		_		ensureSize(len)__		this.len = len__		this.hashCode = 0__		_		final char[] chars = this.value__		_		for (int i = 0, limit = offset + len_ offset < limit_ offset++, i++) {_			chars[i] = (char) (bytes[offset] & 0xff)__		}_	};sets,the,value,of,this,code,string,value,code,assuming,that,the,binary,data,is,ascii,coded,the,n,th,character,of,the,code,string,value,code,corresponds,directly,to,the,n,th,byte,in,the,given,array,after,the,offset,param,bytes,the,binary,character,data,param,offset,the,offset,in,the,array,param,len,the,number,of,bytes,to,read,from,the,array;public,void,set,value,ascii,byte,bytes,int,offset,int,len,if,bytes,null,throw,new,null,pointer,exception,bytes,must,not,be,null,if,len,0,offset,0,offset,bytes,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,this,len,len,this,hash,code,0,final,char,chars,this,value,for,int,i,0,limit,offset,len,offset,limit,offset,i,chars,i,char,bytes,offset,0xff
StringValue -> public void setValueAscii(byte[] bytes, int offset, int len);1411473593;Sets the value of this <code>StringValue</code>, assuming that the binary data is ASCII coded. The n-th character of the_<code>StringValue</code> corresponds directly to the n-th byte in the given array after the offset.__@param bytes The binary character data._@param offset The offset in the array._@param len The number of bytes to read from the array.;public void setValueAscii(byte[] bytes, int offset, int len) {_		if (bytes == null) {_			throw new NullPointerException("Bytes must not be null")__		}_		if (len < 0 | offset < 0 | offset > bytes.length - len) {_			throw new IndexOutOfBoundsException()__		}_		_		ensureSize(len)__		this.len = len__		this.hashCode = 0__		_		final char[] chars = this.value__		_		for (int i = 0, limit = offset + len_ offset < limit_ offset++, i++) {_			chars[i] = (char) (bytes[offset] & 0xff)__		}_	};sets,the,value,of,this,code,string,value,code,assuming,that,the,binary,data,is,ascii,coded,the,n,th,character,of,the,code,string,value,code,corresponds,directly,to,the,n,th,byte,in,the,given,array,after,the,offset,param,bytes,the,binary,character,data,param,offset,the,offset,in,the,array,param,len,the,number,of,bytes,to,read,from,the,array;public,void,set,value,ascii,byte,bytes,int,offset,int,len,if,bytes,null,throw,new,null,pointer,exception,bytes,must,not,be,null,if,len,0,offset,0,offset,bytes,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,this,len,len,this,hash,code,0,final,char,chars,this,value,for,int,i,0,limit,offset,len,offset,limit,offset,i,chars,i,char,bytes,offset,0xff
StringValue -> public void setValueAscii(byte[] bytes, int offset, int len);1414786554;Sets the value of this <code>StringValue</code>, assuming that the binary data is ASCII coded. The n-th character of the_<code>StringValue</code> corresponds directly to the n-th byte in the given array after the offset.__@param bytes The binary character data._@param offset The offset in the array._@param len The number of bytes to read from the array.;public void setValueAscii(byte[] bytes, int offset, int len) {_		if (bytes == null) {_			throw new NullPointerException("Bytes must not be null")__		}_		if (len < 0 | offset < 0 | offset > bytes.length - len) {_			throw new IndexOutOfBoundsException()__		}_		_		ensureSize(len)__		this.len = len__		this.hashCode = 0__		_		final char[] chars = this.value__		_		for (int i = 0, limit = offset + len_ offset < limit_ offset++, i++) {_			chars[i] = (char) (bytes[offset] & 0xff)__		}_	};sets,the,value,of,this,code,string,value,code,assuming,that,the,binary,data,is,ascii,coded,the,n,th,character,of,the,code,string,value,code,corresponds,directly,to,the,n,th,byte,in,the,given,array,after,the,offset,param,bytes,the,binary,character,data,param,offset,the,offset,in,the,array,param,len,the,number,of,bytes,to,read,from,the,array;public,void,set,value,ascii,byte,bytes,int,offset,int,len,if,bytes,null,throw,new,null,pointer,exception,bytes,must,not,be,null,if,len,0,offset,0,offset,bytes,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,this,len,len,this,hash,code,0,final,char,chars,this,value,for,int,i,0,limit,offset,len,offset,limit,offset,i,chars,i,char,bytes,offset,0xff
StringValue -> public void setValueAscii(byte[] bytes, int offset, int len);1418912934;Sets the value of this <code>StringValue</code>, assuming that the binary data is ASCII coded. The n-th character of the_<code>StringValue</code> corresponds directly to the n-th byte in the given array after the offset.__@param bytes The binary character data._@param offset The offset in the array._@param len The number of bytes to read from the array.;public void setValueAscii(byte[] bytes, int offset, int len) {_		if (bytes == null) {_			throw new NullPointerException("Bytes must not be null")__		}_		if (len < 0 | offset < 0 | offset > bytes.length - len) {_			throw new IndexOutOfBoundsException()__		}_		_		ensureSize(len)__		this.len = len__		this.hashCode = 0__		_		final char[] chars = this.value__		_		for (int i = 0, limit = offset + len_ offset < limit_ offset++, i++) {_			chars[i] = (char) (bytes[offset] & 0xff)__		}_	};sets,the,value,of,this,code,string,value,code,assuming,that,the,binary,data,is,ascii,coded,the,n,th,character,of,the,code,string,value,code,corresponds,directly,to,the,n,th,byte,in,the,given,array,after,the,offset,param,bytes,the,binary,character,data,param,offset,the,offset,in,the,array,param,len,the,number,of,bytes,to,read,from,the,array;public,void,set,value,ascii,byte,bytes,int,offset,int,len,if,bytes,null,throw,new,null,pointer,exception,bytes,must,not,be,null,if,len,0,offset,0,offset,bytes,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,this,len,len,this,hash,code,0,final,char,chars,this,value,for,int,i,0,limit,offset,len,offset,limit,offset,i,chars,i,char,bytes,offset,0xff
StringValue -> public void setValueAscii(byte[] bytes, int offset, int len);1431696388;Sets the value of this <code>StringValue</code>, assuming that the binary data is ASCII coded. The n-th character of the_<code>StringValue</code> corresponds directly to the n-th byte in the given array after the offset.__@param bytes The binary character data._@param offset The offset in the array._@param len The number of bytes to read from the array.;public void setValueAscii(byte[] bytes, int offset, int len) {_		if (bytes == null) {_			throw new NullPointerException("Bytes must not be null")__		}_		if (len < 0 | offset < 0 | offset > bytes.length - len) {_			throw new IndexOutOfBoundsException()__		}_		_		ensureSize(len)__		this.len = len__		this.hashCode = 0__		_		final char[] chars = this.value__		_		for (int i = 0, limit = offset + len_ offset < limit_ offset++, i++) {_			chars[i] = (char) (bytes[offset] & 0xff)__		}_	};sets,the,value,of,this,code,string,value,code,assuming,that,the,binary,data,is,ascii,coded,the,n,th,character,of,the,code,string,value,code,corresponds,directly,to,the,n,th,byte,in,the,given,array,after,the,offset,param,bytes,the,binary,character,data,param,offset,the,offset,in,the,array,param,len,the,number,of,bytes,to,read,from,the,array;public,void,set,value,ascii,byte,bytes,int,offset,int,len,if,bytes,null,throw,new,null,pointer,exception,bytes,must,not,be,null,if,len,0,offset,0,offset,bytes,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,this,len,len,this,hash,code,0,final,char,chars,this,value,for,int,i,0,limit,offset,len,offset,limit,offset,i,chars,i,char,bytes,offset,0xff
StringValue -> public void setValueAscii(byte[] bytes, int offset, int len);1434963934;Sets the value of this <code>StringValue</code>, assuming that the binary data is ASCII coded. The n-th character of the_<code>StringValue</code> corresponds directly to the n-th byte in the given array after the offset.__@param bytes The binary character data._@param offset The offset in the array._@param len The number of bytes to read from the array.;public void setValueAscii(byte[] bytes, int offset, int len) {_		if (bytes == null) {_			throw new NullPointerException("Bytes must not be null")__		}_		if (len < 0 | offset < 0 | offset > bytes.length - len) {_			throw new IndexOutOfBoundsException()__		}_		_		ensureSize(len)__		this.len = len__		this.hashCode = 0__		_		final char[] chars = this.value__		_		for (int i = 0, limit = offset + len_ offset < limit_ offset++, i++) {_			chars[i] = (char) (bytes[offset] & 0xff)__		}_	};sets,the,value,of,this,code,string,value,code,assuming,that,the,binary,data,is,ascii,coded,the,n,th,character,of,the,code,string,value,code,corresponds,directly,to,the,n,th,byte,in,the,given,array,after,the,offset,param,bytes,the,binary,character,data,param,offset,the,offset,in,the,array,param,len,the,number,of,bytes,to,read,from,the,array;public,void,set,value,ascii,byte,bytes,int,offset,int,len,if,bytes,null,throw,new,null,pointer,exception,bytes,must,not,be,null,if,len,0,offset,0,offset,bytes,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,this,len,len,this,hash,code,0,final,char,chars,this,value,for,int,i,0,limit,offset,len,offset,limit,offset,i,chars,i,char,bytes,offset,0xff
StringValue -> public void setValueAscii(byte[] bytes, int offset, int len);1434974504;Sets the value of this <code>StringValue</code>, assuming that the binary data is ASCII coded. The n-th character of the_<code>StringValue</code> corresponds directly to the n-th byte in the given array after the offset.__@param bytes The binary character data._@param offset The offset in the array._@param len The number of bytes to read from the array.;public void setValueAscii(byte[] bytes, int offset, int len) {_		if (bytes == null) {_			throw new NullPointerException("Bytes must not be null")__		}_		if (len < 0 | offset < 0 | offset > bytes.length - len) {_			throw new IndexOutOfBoundsException()__		}_		_		ensureSize(len)__		this.len = len__		this.hashCode = 0__		_		final char[] chars = this.value__		_		for (int i = 0, limit = offset + len_ offset < limit_ offset++, i++) {_			chars[i] = (char) (bytes[offset] & 0xff)__		}_	};sets,the,value,of,this,code,string,value,code,assuming,that,the,binary,data,is,ascii,coded,the,n,th,character,of,the,code,string,value,code,corresponds,directly,to,the,n,th,byte,in,the,given,array,after,the,offset,param,bytes,the,binary,character,data,param,offset,the,offset,in,the,array,param,len,the,number,of,bytes,to,read,from,the,array;public,void,set,value,ascii,byte,bytes,int,offset,int,len,if,bytes,null,throw,new,null,pointer,exception,bytes,must,not,be,null,if,len,0,offset,0,offset,bytes,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,this,len,len,this,hash,code,0,final,char,chars,this,value,for,int,i,0,limit,offset,len,offset,limit,offset,i,chars,i,char,bytes,offset,0xff
StringValue -> public void setValueAscii(byte[] bytes, int offset, int len);1443521887;Sets the value of this <code>StringValue</code>, assuming that the binary data is ASCII coded. The n-th character of the_<code>StringValue</code> corresponds directly to the n-th byte in the given array after the offset.__@param bytes The binary character data._@param offset The offset in the array._@param len The number of bytes to read from the array.;public void setValueAscii(byte[] bytes, int offset, int len) {_		if (bytes == null) {_			throw new NullPointerException("Bytes must not be null")__		}_		if (len < 0 | offset < 0 | offset > bytes.length - len) {_			throw new IndexOutOfBoundsException()__		}_		_		ensureSize(len)__		this.len = len__		this.hashCode = 0__		_		final char[] chars = this.value__		_		for (int i = 0, limit = offset + len_ offset < limit_ offset++, i++) {_			chars[i] = (char) (bytes[offset] & 0xff)__		}_	};sets,the,value,of,this,code,string,value,code,assuming,that,the,binary,data,is,ascii,coded,the,n,th,character,of,the,code,string,value,code,corresponds,directly,to,the,n,th,byte,in,the,given,array,after,the,offset,param,bytes,the,binary,character,data,param,offset,the,offset,in,the,array,param,len,the,number,of,bytes,to,read,from,the,array;public,void,set,value,ascii,byte,bytes,int,offset,int,len,if,bytes,null,throw,new,null,pointer,exception,bytes,must,not,be,null,if,len,0,offset,0,offset,bytes,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,this,len,len,this,hash,code,0,final,char,chars,this,value,for,int,i,0,limit,offset,len,offset,limit,offset,i,chars,i,char,bytes,offset,0xff
StringValue -> public void setValueAscii(byte[] bytes, int offset, int len);1446112342;Sets the value of this <code>StringValue</code>, assuming that the binary data is ASCII coded. The n-th character of the_<code>StringValue</code> corresponds directly to the n-th byte in the given array after the offset.__@param bytes The binary character data._@param offset The offset in the array._@param len The number of bytes to read from the array.;public void setValueAscii(byte[] bytes, int offset, int len) {_		if (bytes == null) {_			throw new NullPointerException("Bytes must not be null")__		}_		if (len < 0 | offset < 0 | offset > bytes.length - len) {_			throw new IndexOutOfBoundsException()__		}_		_		ensureSize(len)__		this.len = len__		this.hashCode = 0__		_		final char[] chars = this.value__		_		for (int i = 0, limit = offset + len_ offset < limit_ offset++, i++) {_			chars[i] = (char) (bytes[offset] & 0xff)__		}_	};sets,the,value,of,this,code,string,value,code,assuming,that,the,binary,data,is,ascii,coded,the,n,th,character,of,the,code,string,value,code,corresponds,directly,to,the,n,th,byte,in,the,given,array,after,the,offset,param,bytes,the,binary,character,data,param,offset,the,offset,in,the,array,param,len,the,number,of,bytes,to,read,from,the,array;public,void,set,value,ascii,byte,bytes,int,offset,int,len,if,bytes,null,throw,new,null,pointer,exception,bytes,must,not,be,null,if,len,0,offset,0,offset,bytes,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,this,len,len,this,hash,code,0,final,char,chars,this,value,for,int,i,0,limit,offset,len,offset,limit,offset,i,chars,i,char,bytes,offset,0xff
StringValue -> public void setValueAscii(byte[] bytes, int offset, int len);1452178883;Sets the value of this <code>StringValue</code>, assuming that the binary data is ASCII coded. The n-th character of the_<code>StringValue</code> corresponds directly to the n-th byte in the given array after the offset.__@param bytes The binary character data._@param offset The offset in the array._@param len The number of bytes to read from the array.;public void setValueAscii(byte[] bytes, int offset, int len) {_		if (bytes == null) {_			throw new NullPointerException("Bytes must not be null")__		}_		if (len < 0 | offset < 0 | offset > bytes.length - len) {_			throw new IndexOutOfBoundsException()__		}_		_		ensureSize(len)__		this.len = len__		this.hashCode = 0__		_		final char[] chars = this.value__		_		for (int i = 0, limit = offset + len_ offset < limit_ offset++, i++) {_			chars[i] = (char) (bytes[offset] & 0xff)__		}_	};sets,the,value,of,this,code,string,value,code,assuming,that,the,binary,data,is,ascii,coded,the,n,th,character,of,the,code,string,value,code,corresponds,directly,to,the,n,th,byte,in,the,given,array,after,the,offset,param,bytes,the,binary,character,data,param,offset,the,offset,in,the,array,param,len,the,number,of,bytes,to,read,from,the,array;public,void,set,value,ascii,byte,bytes,int,offset,int,len,if,bytes,null,throw,new,null,pointer,exception,bytes,must,not,be,null,if,len,0,offset,0,offset,bytes,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,this,len,len,this,hash,code,0,final,char,chars,this,value,for,int,i,0,limit,offset,len,offset,limit,offset,i,chars,i,char,bytes,offset,0xff
StringValue -> public void setValueAscii(byte[] bytes, int offset, int len);1457441341;Sets the value of this <code>StringValue</code>, assuming that the binary data is ASCII coded. The n-th character of the_<code>StringValue</code> corresponds directly to the n-th byte in the given array after the offset.__@param bytes The binary character data._@param offset The offset in the array._@param len The number of bytes to read from the array.;public void setValueAscii(byte[] bytes, int offset, int len) {_		if (bytes == null) {_			throw new NullPointerException("Bytes must not be null")__		}_		if (len < 0 | offset < 0 | offset > bytes.length - len) {_			throw new IndexOutOfBoundsException()__		}_		_		ensureSize(len)__		this.len = len__		this.hashCode = 0__		_		final char[] chars = this.value__		_		for (int i = 0, limit = offset + len_ offset < limit_ offset++, i++) {_			chars[i] = (char) (bytes[offset] & 0xff)__		}_	};sets,the,value,of,this,code,string,value,code,assuming,that,the,binary,data,is,ascii,coded,the,n,th,character,of,the,code,string,value,code,corresponds,directly,to,the,n,th,byte,in,the,given,array,after,the,offset,param,bytes,the,binary,character,data,param,offset,the,offset,in,the,array,param,len,the,number,of,bytes,to,read,from,the,array;public,void,set,value,ascii,byte,bytes,int,offset,int,len,if,bytes,null,throw,new,null,pointer,exception,bytes,must,not,be,null,if,len,0,offset,0,offset,bytes,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,this,len,len,this,hash,code,0,final,char,chars,this,value,for,int,i,0,limit,offset,len,offset,limit,offset,i,chars,i,char,bytes,offset,0xff
StringValue -> public void setValueAscii(byte[] bytes, int offset, int len);1460741894;Sets the value of this <code>StringValue</code>, assuming that the binary data is ASCII coded. The n-th character of the_<code>StringValue</code> corresponds directly to the n-th byte in the given array after the offset.__@param bytes The binary character data._@param offset The offset in the array._@param len The number of bytes to read from the array.;public void setValueAscii(byte[] bytes, int offset, int len) {_		if (bytes == null) {_			throw new NullPointerException("Bytes must not be null")__		}_		if (len < 0 | offset < 0 | offset > bytes.length - len) {_			throw new IndexOutOfBoundsException()__		}_		_		ensureSize(len)__		this.len = len__		this.hashCode = 0__		_		final char[] chars = this.value__		_		for (int i = 0, limit = offset + len_ offset < limit_ offset++, i++) {_			chars[i] = (char) (bytes[offset] & 0xff)__		}_	};sets,the,value,of,this,code,string,value,code,assuming,that,the,binary,data,is,ascii,coded,the,n,th,character,of,the,code,string,value,code,corresponds,directly,to,the,n,th,byte,in,the,given,array,after,the,offset,param,bytes,the,binary,character,data,param,offset,the,offset,in,the,array,param,len,the,number,of,bytes,to,read,from,the,array;public,void,set,value,ascii,byte,bytes,int,offset,int,len,if,bytes,null,throw,new,null,pointer,exception,bytes,must,not,be,null,if,len,0,offset,0,offset,bytes,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,this,len,len,this,hash,code,0,final,char,chars,this,value,for,int,i,0,limit,offset,len,offset,limit,offset,i,chars,i,char,bytes,offset,0xff
StringValue -> public void setValueAscii(byte[] bytes, int offset, int len);1471549817;Sets the value of this <code>StringValue</code>, assuming that the binary data is ASCII coded. The n-th character of the_<code>StringValue</code> corresponds directly to the n-th byte in the given array after the offset.__@param bytes The binary character data._@param offset The offset in the array._@param len The number of bytes to read from the array.;public void setValueAscii(byte[] bytes, int offset, int len) {_		if (bytes == null) {_			throw new NullPointerException("Bytes must not be null")__		}_		if (len < 0 | offset < 0 | offset > bytes.length - len) {_			throw new IndexOutOfBoundsException()__		}_		_		ensureSize(len)__		this.len = len__		this.hashCode = 0__		_		final char[] chars = this.value__		_		for (int i = 0, limit = offset + len_ offset < limit_ offset++, i++) {_			chars[i] = (char) (bytes[offset] & 0xff)__		}_	};sets,the,value,of,this,code,string,value,code,assuming,that,the,binary,data,is,ascii,coded,the,n,th,character,of,the,code,string,value,code,corresponds,directly,to,the,n,th,byte,in,the,given,array,after,the,offset,param,bytes,the,binary,character,data,param,offset,the,offset,in,the,array,param,len,the,number,of,bytes,to,read,from,the,array;public,void,set,value,ascii,byte,bytes,int,offset,int,len,if,bytes,null,throw,new,null,pointer,exception,bytes,must,not,be,null,if,len,0,offset,0,offset,bytes,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,this,len,len,this,hash,code,0,final,char,chars,this,value,for,int,i,0,limit,offset,len,offset,limit,offset,i,chars,i,char,bytes,offset,0xff
StringValue -> public void setValueAscii(byte[] bytes, int offset, int len);1529010948;Sets the value of this <code>StringValue</code>, assuming that the binary data is ASCII coded. The n-th character of the_<code>StringValue</code> corresponds directly to the n-th byte in the given array after the offset.__@param bytes The binary character data._@param offset The offset in the array._@param len The number of bytes to read from the array.;public void setValueAscii(byte[] bytes, int offset, int len) {_		if (bytes == null) {_			throw new NullPointerException("Bytes must not be null")__		}_		if (len < 0 | offset < 0 | offset > bytes.length - len) {_			throw new IndexOutOfBoundsException()__		}_		_		ensureSize(len)__		this.len = len__		this.hashCode = 0__		_		final char[] chars = this.value__		_		for (int i = 0, limit = offset + len_ offset < limit_ offset++, i++) {_			chars[i] = (char) (bytes[offset] & 0xff)__		}_	};sets,the,value,of,this,code,string,value,code,assuming,that,the,binary,data,is,ascii,coded,the,n,th,character,of,the,code,string,value,code,corresponds,directly,to,the,n,th,byte,in,the,given,array,after,the,offset,param,bytes,the,binary,character,data,param,offset,the,offset,in,the,array,param,len,the,number,of,bytes,to,read,from,the,array;public,void,set,value,ascii,byte,bytes,int,offset,int,len,if,bytes,null,throw,new,null,pointer,exception,bytes,must,not,be,null,if,len,0,offset,0,offset,bytes,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,this,len,len,this,hash,code,0,final,char,chars,this,value,for,int,i,0,limit,offset,len,offset,limit,offset,i,chars,i,char,bytes,offset,0xff
StringValue -> public void setValueAscii(byte[] bytes, int offset, int len);1530185676;Sets the value of this <code>StringValue</code>, assuming that the binary data is ASCII coded. The n-th character of the_<code>StringValue</code> corresponds directly to the n-th byte in the given array after the offset.__@param bytes The binary character data._@param offset The offset in the array._@param len The number of bytes to read from the array.;public void setValueAscii(byte[] bytes, int offset, int len) {_		if (bytes == null) {_			throw new NullPointerException("Bytes must not be null")__		}_		if (len < 0 || offset < 0 || offset > bytes.length - len) {_			throw new IndexOutOfBoundsException()__		}_		_		ensureSize(len)__		this.len = len__		this.hashCode = 0__		_		final char[] chars = this.value__		_		for (int i = 0, limit = offset + len_ offset < limit_ offset++, i++) {_			chars[i] = (char) (bytes[offset] & 0xff)__		}_	};sets,the,value,of,this,code,string,value,code,assuming,that,the,binary,data,is,ascii,coded,the,n,th,character,of,the,code,string,value,code,corresponds,directly,to,the,n,th,byte,in,the,given,array,after,the,offset,param,bytes,the,binary,character,data,param,offset,the,offset,in,the,array,param,len,the,number,of,bytes,to,read,from,the,array;public,void,set,value,ascii,byte,bytes,int,offset,int,len,if,bytes,null,throw,new,null,pointer,exception,bytes,must,not,be,null,if,len,0,offset,0,offset,bytes,length,len,throw,new,index,out,of,bounds,exception,ensure,size,len,this,len,len,this,hash,code,0,final,char,chars,this,value,for,int,i,0,limit,offset,len,offset,limit,offset,i,chars,i,char,bytes,offset,0xff
StringValue -> public void setValue(CharBuffer buffer);1405024514;Sets the contents of this string to the contents of the given <tt>CharBuffer</tt>._The characters between the buffer's current position (inclusive) and the buffer's_limit (exclusive) will be stored in this string.__@param buffer The character buffer to read the characters from.;public void setValue(CharBuffer buffer) {_		Validate.notNull(buffer)__		final int len = buffer.length()__		ensureSize(len)__		buffer.get(this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,contents,of,this,string,to,the,contents,of,the,given,tt,char,buffer,tt,the,characters,between,the,buffer,s,current,position,inclusive,and,the,buffer,s,limit,exclusive,will,be,stored,in,this,string,param,buffer,the,character,buffer,to,read,the,characters,from;public,void,set,value,char,buffer,buffer,validate,not,null,buffer,final,int,len,buffer,length,ensure,size,len,buffer,get,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharBuffer buffer);1405090423;Sets the contents of this string to the contents of the given <tt>CharBuffer</tt>._The characters between the buffer's current position (inclusive) and the buffer's_limit (exclusive) will be stored in this string.__@param buffer The character buffer to read the characters from.;public void setValue(CharBuffer buffer) {_		Validate.notNull(buffer)__		final int len = buffer.length()__		ensureSize(len)__		buffer.get(this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,contents,of,this,string,to,the,contents,of,the,given,tt,char,buffer,tt,the,characters,between,the,buffer,s,current,position,inclusive,and,the,buffer,s,limit,exclusive,will,be,stored,in,this,string,param,buffer,the,character,buffer,to,read,the,characters,from;public,void,set,value,char,buffer,buffer,validate,not,null,buffer,final,int,len,buffer,length,ensure,size,len,buffer,get,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharBuffer buffer);1411473593;Sets the contents of this string to the contents of the given <tt>CharBuffer</tt>._The characters between the buffer's current position (inclusive) and the buffer's_limit (exclusive) will be stored in this string.__@param buffer The character buffer to read the characters from.;public void setValue(CharBuffer buffer) {_		Validate.notNull(buffer)__		final int len = buffer.length()__		ensureSize(len)__		buffer.get(this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,contents,of,this,string,to,the,contents,of,the,given,tt,char,buffer,tt,the,characters,between,the,buffer,s,current,position,inclusive,and,the,buffer,s,limit,exclusive,will,be,stored,in,this,string,param,buffer,the,character,buffer,to,read,the,characters,from;public,void,set,value,char,buffer,buffer,validate,not,null,buffer,final,int,len,buffer,length,ensure,size,len,buffer,get,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharBuffer buffer);1414786554;Sets the contents of this string to the contents of the given <tt>CharBuffer</tt>._The characters between the buffer's current position (inclusive) and the buffer's_limit (exclusive) will be stored in this string.__@param buffer The character buffer to read the characters from.;public void setValue(CharBuffer buffer) {_		Validate.notNull(buffer)__		final int len = buffer.length()__		ensureSize(len)__		buffer.get(this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,contents,of,this,string,to,the,contents,of,the,given,tt,char,buffer,tt,the,characters,between,the,buffer,s,current,position,inclusive,and,the,buffer,s,limit,exclusive,will,be,stored,in,this,string,param,buffer,the,character,buffer,to,read,the,characters,from;public,void,set,value,char,buffer,buffer,validate,not,null,buffer,final,int,len,buffer,length,ensure,size,len,buffer,get,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharBuffer buffer);1418912934;Sets the contents of this string to the contents of the given <tt>CharBuffer</tt>._The characters between the buffer's current position (inclusive) and the buffer's_limit (exclusive) will be stored in this string.__@param buffer The character buffer to read the characters from.;public void setValue(CharBuffer buffer) {_		Validate.notNull(buffer)__		final int len = buffer.length()__		ensureSize(len)__		buffer.get(this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,contents,of,this,string,to,the,contents,of,the,given,tt,char,buffer,tt,the,characters,between,the,buffer,s,current,position,inclusive,and,the,buffer,s,limit,exclusive,will,be,stored,in,this,string,param,buffer,the,character,buffer,to,read,the,characters,from;public,void,set,value,char,buffer,buffer,validate,not,null,buffer,final,int,len,buffer,length,ensure,size,len,buffer,get,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharBuffer buffer);1431696388;Sets the contents of this string to the contents of the given <tt>CharBuffer</tt>._The characters between the buffer's current position (inclusive) and the buffer's_limit (exclusive) will be stored in this string.__@param buffer The character buffer to read the characters from.;public void setValue(CharBuffer buffer) {_		Preconditions.checkNotNull(buffer)__		final int len = buffer.length()__		ensureSize(len)__		buffer.get(this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,contents,of,this,string,to,the,contents,of,the,given,tt,char,buffer,tt,the,characters,between,the,buffer,s,current,position,inclusive,and,the,buffer,s,limit,exclusive,will,be,stored,in,this,string,param,buffer,the,character,buffer,to,read,the,characters,from;public,void,set,value,char,buffer,buffer,preconditions,check,not,null,buffer,final,int,len,buffer,length,ensure,size,len,buffer,get,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharBuffer buffer);1434963934;Sets the contents of this string to the contents of the given <tt>CharBuffer</tt>._The characters between the buffer's current position (inclusive) and the buffer's_limit (exclusive) will be stored in this string.__@param buffer The character buffer to read the characters from.;public void setValue(CharBuffer buffer) {_		Preconditions.checkNotNull(buffer)__		final int len = buffer.length()__		ensureSize(len)__		buffer.get(this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,contents,of,this,string,to,the,contents,of,the,given,tt,char,buffer,tt,the,characters,between,the,buffer,s,current,position,inclusive,and,the,buffer,s,limit,exclusive,will,be,stored,in,this,string,param,buffer,the,character,buffer,to,read,the,characters,from;public,void,set,value,char,buffer,buffer,preconditions,check,not,null,buffer,final,int,len,buffer,length,ensure,size,len,buffer,get,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharBuffer buffer);1434974504;Sets the contents of this string to the contents of the given <tt>CharBuffer</tt>._The characters between the buffer's current position (inclusive) and the buffer's_limit (exclusive) will be stored in this string.__@param buffer The character buffer to read the characters from.;public void setValue(CharBuffer buffer) {_		Preconditions.checkNotNull(buffer)__		final int len = buffer.length()__		ensureSize(len)__		buffer.get(this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,contents,of,this,string,to,the,contents,of,the,given,tt,char,buffer,tt,the,characters,between,the,buffer,s,current,position,inclusive,and,the,buffer,s,limit,exclusive,will,be,stored,in,this,string,param,buffer,the,character,buffer,to,read,the,characters,from;public,void,set,value,char,buffer,buffer,preconditions,check,not,null,buffer,final,int,len,buffer,length,ensure,size,len,buffer,get,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharBuffer buffer);1443521887;Sets the contents of this string to the contents of the given <tt>CharBuffer</tt>._The characters between the buffer's current position (inclusive) and the buffer's_limit (exclusive) will be stored in this string.__@param buffer The character buffer to read the characters from.;public void setValue(CharBuffer buffer) {_		Preconditions.checkNotNull(buffer)__		final int len = buffer.length()__		ensureSize(len)__		buffer.get(this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,contents,of,this,string,to,the,contents,of,the,given,tt,char,buffer,tt,the,characters,between,the,buffer,s,current,position,inclusive,and,the,buffer,s,limit,exclusive,will,be,stored,in,this,string,param,buffer,the,character,buffer,to,read,the,characters,from;public,void,set,value,char,buffer,buffer,preconditions,check,not,null,buffer,final,int,len,buffer,length,ensure,size,len,buffer,get,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharBuffer buffer);1446112342;Sets the contents of this string to the contents of the given <tt>CharBuffer</tt>._The characters between the buffer's current position (inclusive) and the buffer's_limit (exclusive) will be stored in this string.__@param buffer The character buffer to read the characters from.;public void setValue(CharBuffer buffer) {_		Preconditions.checkNotNull(buffer)__		final int len = buffer.length()__		ensureSize(len)__		buffer.get(this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,contents,of,this,string,to,the,contents,of,the,given,tt,char,buffer,tt,the,characters,between,the,buffer,s,current,position,inclusive,and,the,buffer,s,limit,exclusive,will,be,stored,in,this,string,param,buffer,the,character,buffer,to,read,the,characters,from;public,void,set,value,char,buffer,buffer,preconditions,check,not,null,buffer,final,int,len,buffer,length,ensure,size,len,buffer,get,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharBuffer buffer);1452178883;Sets the contents of this string to the contents of the given <tt>CharBuffer</tt>._The characters between the buffer's current position (inclusive) and the buffer's_limit (exclusive) will be stored in this string.__@param buffer The character buffer to read the characters from.;public void setValue(CharBuffer buffer) {_		Preconditions.checkNotNull(buffer)__		final int len = buffer.length()__		ensureSize(len)__		buffer.get(this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,contents,of,this,string,to,the,contents,of,the,given,tt,char,buffer,tt,the,characters,between,the,buffer,s,current,position,inclusive,and,the,buffer,s,limit,exclusive,will,be,stored,in,this,string,param,buffer,the,character,buffer,to,read,the,characters,from;public,void,set,value,char,buffer,buffer,preconditions,check,not,null,buffer,final,int,len,buffer,length,ensure,size,len,buffer,get,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharBuffer buffer);1457441341;Sets the contents of this string to the contents of the given <tt>CharBuffer</tt>._The characters between the buffer's current position (inclusive) and the buffer's_limit (exclusive) will be stored in this string.__@param buffer The character buffer to read the characters from.;public void setValue(CharBuffer buffer) {_		Preconditions.checkNotNull(buffer)__		final int len = buffer.length()__		ensureSize(len)__		buffer.get(this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,contents,of,this,string,to,the,contents,of,the,given,tt,char,buffer,tt,the,characters,between,the,buffer,s,current,position,inclusive,and,the,buffer,s,limit,exclusive,will,be,stored,in,this,string,param,buffer,the,character,buffer,to,read,the,characters,from;public,void,set,value,char,buffer,buffer,preconditions,check,not,null,buffer,final,int,len,buffer,length,ensure,size,len,buffer,get,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharBuffer buffer);1460741894;Sets the contents of this string to the contents of the given <tt>CharBuffer</tt>._The characters between the buffer's current position (inclusive) and the buffer's_limit (exclusive) will be stored in this string.__@param buffer The character buffer to read the characters from.;public void setValue(CharBuffer buffer) {_		checkNotNull(buffer)__		final int len = buffer.length()__		ensureSize(len)__		buffer.get(this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,contents,of,this,string,to,the,contents,of,the,given,tt,char,buffer,tt,the,characters,between,the,buffer,s,current,position,inclusive,and,the,buffer,s,limit,exclusive,will,be,stored,in,this,string,param,buffer,the,character,buffer,to,read,the,characters,from;public,void,set,value,char,buffer,buffer,check,not,null,buffer,final,int,len,buffer,length,ensure,size,len,buffer,get,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharBuffer buffer);1471549817;Sets the contents of this string to the contents of the given <tt>CharBuffer</tt>._The characters between the buffer's current position (inclusive) and the buffer's_limit (exclusive) will be stored in this string.__@param buffer The character buffer to read the characters from.;public void setValue(CharBuffer buffer) {_		checkNotNull(buffer)__		final int len = buffer.length()__		ensureSize(len)__		buffer.get(this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,contents,of,this,string,to,the,contents,of,the,given,tt,char,buffer,tt,the,characters,between,the,buffer,s,current,position,inclusive,and,the,buffer,s,limit,exclusive,will,be,stored,in,this,string,param,buffer,the,character,buffer,to,read,the,characters,from;public,void,set,value,char,buffer,buffer,check,not,null,buffer,final,int,len,buffer,length,ensure,size,len,buffer,get,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharBuffer buffer);1529010948;Sets the contents of this string to the contents of the given <tt>CharBuffer</tt>._The characters between the buffer's current position (inclusive) and the buffer's_limit (exclusive) will be stored in this string.__@param buffer The character buffer to read the characters from.;public void setValue(CharBuffer buffer) {_		checkNotNull(buffer)__		final int len = buffer.length()__		ensureSize(len)__		buffer.get(this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,contents,of,this,string,to,the,contents,of,the,given,tt,char,buffer,tt,the,characters,between,the,buffer,s,current,position,inclusive,and,the,buffer,s,limit,exclusive,will,be,stored,in,this,string,param,buffer,the,character,buffer,to,read,the,characters,from;public,void,set,value,char,buffer,buffer,check,not,null,buffer,final,int,len,buffer,length,ensure,size,len,buffer,get,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharBuffer buffer);1530185676;Sets the contents of this string to the contents of the given <tt>CharBuffer</tt>._The characters between the buffer's current position (inclusive) and the buffer's_limit (exclusive) will be stored in this string.__@param buffer The character buffer to read the characters from.;public void setValue(CharBuffer buffer) {_		checkNotNull(buffer)__		final int len = buffer.length()__		ensureSize(len)__		buffer.get(this.value, 0, len)__		this.len = len__		this.hashCode = 0__	};sets,the,contents,of,this,string,to,the,contents,of,the,given,tt,char,buffer,tt,the,characters,between,the,buffer,s,current,position,inclusive,and,the,buffer,s,limit,exclusive,will,be,stored,in,this,string,param,buffer,the,character,buffer,to,read,the,characters,from;public,void,set,value,char,buffer,buffer,check,not,null,buffer,final,int,len,buffer,length,ensure,size,len,buffer,get,this,value,0,len,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharSequence value, int offset, int len);1405024514;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(CharSequence value, int offset, int len) {_		Validate.notNull(value)__		if (offset < 0 || len < 0 || offset > value.length() - len) {_			throw new IndexOutOfBoundsException("offset: " + offset + " len: " + len + " value.len: " + len)__		}__		ensureSize(len)__		this.len = len_		_		for (int i = 0_ i < len_ i++) {_			this.value[i] = value.charAt(offset + i)__		}_		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,sequence,value,int,offset,int,len,validate,not,null,value,if,offset,0,len,0,offset,value,length,len,throw,new,index,out,of,bounds,exception,offset,offset,len,len,value,len,len,ensure,size,len,this,len,len,for,int,i,0,i,len,i,this,value,i,value,char,at,offset,i,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharSequence value, int offset, int len);1405090423;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(CharSequence value, int offset, int len) {_		Validate.notNull(value)__		if (offset < 0 || len < 0 || offset > value.length() - len) {_			throw new IndexOutOfBoundsException("offset: " + offset + " len: " + len + " value.len: " + len)__		}__		ensureSize(len)__		this.len = len_		_		for (int i = 0_ i < len_ i++) {_			this.value[i] = value.charAt(offset + i)__		}_		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,sequence,value,int,offset,int,len,validate,not,null,value,if,offset,0,len,0,offset,value,length,len,throw,new,index,out,of,bounds,exception,offset,offset,len,len,value,len,len,ensure,size,len,this,len,len,for,int,i,0,i,len,i,this,value,i,value,char,at,offset,i,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharSequence value, int offset, int len);1411473593;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(CharSequence value, int offset, int len) {_		Validate.notNull(value)__		if (offset < 0 || len < 0 || offset > value.length() - len) {_			throw new IndexOutOfBoundsException("offset: " + offset + " len: " + len + " value.len: " + len)__		}__		ensureSize(len)__		this.len = len_		_		for (int i = 0_ i < len_ i++) {_			this.value[i] = value.charAt(offset + i)__		}_		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,sequence,value,int,offset,int,len,validate,not,null,value,if,offset,0,len,0,offset,value,length,len,throw,new,index,out,of,bounds,exception,offset,offset,len,len,value,len,len,ensure,size,len,this,len,len,for,int,i,0,i,len,i,this,value,i,value,char,at,offset,i,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharSequence value, int offset, int len);1414786554;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(CharSequence value, int offset, int len) {_		Validate.notNull(value)__		if (offset < 0 || len < 0 || offset > value.length() - len) {_			throw new IndexOutOfBoundsException("offset: " + offset + " len: " + len + " value.len: " + len)__		}__		ensureSize(len)__		this.len = len_		_		for (int i = 0_ i < len_ i++) {_			this.value[i] = value.charAt(offset + i)__		}_		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,sequence,value,int,offset,int,len,validate,not,null,value,if,offset,0,len,0,offset,value,length,len,throw,new,index,out,of,bounds,exception,offset,offset,len,len,value,len,len,ensure,size,len,this,len,len,for,int,i,0,i,len,i,this,value,i,value,char,at,offset,i,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharSequence value, int offset, int len);1418912934;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(CharSequence value, int offset, int len) {_		Validate.notNull(value)__		if (offset < 0 || len < 0 || offset > value.length() - len) {_			throw new IndexOutOfBoundsException("offset: " + offset + " len: " + len + " value.len: " + len)__		}__		ensureSize(len)__		this.len = len_		_		for (int i = 0_ i < len_ i++) {_			this.value[i] = value.charAt(offset + i)__		}_		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,sequence,value,int,offset,int,len,validate,not,null,value,if,offset,0,len,0,offset,value,length,len,throw,new,index,out,of,bounds,exception,offset,offset,len,len,value,len,len,ensure,size,len,this,len,len,for,int,i,0,i,len,i,this,value,i,value,char,at,offset,i,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharSequence value, int offset, int len);1431696388;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(CharSequence value, int offset, int len) {_		Preconditions.checkNotNull(value)__		if (offset < 0 || len < 0 || offset > value.length() - len) {_			throw new IndexOutOfBoundsException("offset: " + offset + " len: " + len + " value.len: " + len)__		}__		ensureSize(len)__		this.len = len_		_		for (int i = 0_ i < len_ i++) {_			this.value[i] = value.charAt(offset + i)__		}_		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,sequence,value,int,offset,int,len,preconditions,check,not,null,value,if,offset,0,len,0,offset,value,length,len,throw,new,index,out,of,bounds,exception,offset,offset,len,len,value,len,len,ensure,size,len,this,len,len,for,int,i,0,i,len,i,this,value,i,value,char,at,offset,i,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharSequence value, int offset, int len);1434963934;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(CharSequence value, int offset, int len) {_		Preconditions.checkNotNull(value)__		if (offset < 0 || len < 0 || offset > value.length() - len) {_			throw new IndexOutOfBoundsException("offset: " + offset + " len: " + len + " value.len: " + len)__		}__		ensureSize(len)__		this.len = len_		_		for (int i = 0_ i < len_ i++) {_			this.value[i] = value.charAt(offset + i)__		}_		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,sequence,value,int,offset,int,len,preconditions,check,not,null,value,if,offset,0,len,0,offset,value,length,len,throw,new,index,out,of,bounds,exception,offset,offset,len,len,value,len,len,ensure,size,len,this,len,len,for,int,i,0,i,len,i,this,value,i,value,char,at,offset,i,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharSequence value, int offset, int len);1434974504;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(CharSequence value, int offset, int len) {_		Preconditions.checkNotNull(value)__		if (offset < 0 || len < 0 || offset > value.length() - len) {_			throw new IndexOutOfBoundsException("offset: " + offset + " len: " + len + " value.len: " + len)__		}__		ensureSize(len)__		this.len = len_		_		for (int i = 0_ i < len_ i++) {_			this.value[i] = value.charAt(offset + i)__		}_		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,sequence,value,int,offset,int,len,preconditions,check,not,null,value,if,offset,0,len,0,offset,value,length,len,throw,new,index,out,of,bounds,exception,offset,offset,len,len,value,len,len,ensure,size,len,this,len,len,for,int,i,0,i,len,i,this,value,i,value,char,at,offset,i,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharSequence value, int offset, int len);1443521887;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(CharSequence value, int offset, int len) {_		Preconditions.checkNotNull(value)__		if (offset < 0 || len < 0 || offset > value.length() - len) {_			throw new IndexOutOfBoundsException("offset: " + offset + " len: " + len + " value.len: " + len)__		}__		ensureSize(len)__		this.len = len_		_		for (int i = 0_ i < len_ i++) {_			this.value[i] = value.charAt(offset + i)__		}_		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,sequence,value,int,offset,int,len,preconditions,check,not,null,value,if,offset,0,len,0,offset,value,length,len,throw,new,index,out,of,bounds,exception,offset,offset,len,len,value,len,len,ensure,size,len,this,len,len,for,int,i,0,i,len,i,this,value,i,value,char,at,offset,i,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharSequence value, int offset, int len);1446112342;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(CharSequence value, int offset, int len) {_		Preconditions.checkNotNull(value)__		if (offset < 0 || len < 0 || offset > value.length() - len) {_			throw new IndexOutOfBoundsException("offset: " + offset + " len: " + len + " value.len: " + len)__		}__		ensureSize(len)__		this.len = len_		_		for (int i = 0_ i < len_ i++) {_			this.value[i] = value.charAt(offset + i)__		}_		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,sequence,value,int,offset,int,len,preconditions,check,not,null,value,if,offset,0,len,0,offset,value,length,len,throw,new,index,out,of,bounds,exception,offset,offset,len,len,value,len,len,ensure,size,len,this,len,len,for,int,i,0,i,len,i,this,value,i,value,char,at,offset,i,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharSequence value, int offset, int len);1452178883;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(CharSequence value, int offset, int len) {_		Preconditions.checkNotNull(value)__		if (offset < 0 || len < 0 || offset > value.length() - len) {_			throw new IndexOutOfBoundsException("offset: " + offset + " len: " + len + " value.len: " + len)__		}__		ensureSize(len)__		this.len = len_		_		for (int i = 0_ i < len_ i++) {_			this.value[i] = value.charAt(offset + i)__		}_		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,sequence,value,int,offset,int,len,preconditions,check,not,null,value,if,offset,0,len,0,offset,value,length,len,throw,new,index,out,of,bounds,exception,offset,offset,len,len,value,len,len,ensure,size,len,this,len,len,for,int,i,0,i,len,i,this,value,i,value,char,at,offset,i,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharSequence value, int offset, int len);1457441341;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(CharSequence value, int offset, int len) {_		Preconditions.checkNotNull(value)__		if (offset < 0 || len < 0 || offset > value.length() - len) {_			throw new IndexOutOfBoundsException("offset: " + offset + " len: " + len + " value.len: " + len)__		}__		ensureSize(len)__		this.len = len_		_		for (int i = 0_ i < len_ i++) {_			this.value[i] = value.charAt(offset + i)__		}_		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,sequence,value,int,offset,int,len,preconditions,check,not,null,value,if,offset,0,len,0,offset,value,length,len,throw,new,index,out,of,bounds,exception,offset,offset,len,len,value,len,len,ensure,size,len,this,len,len,for,int,i,0,i,len,i,this,value,i,value,char,at,offset,i,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharSequence value, int offset, int len);1460741894;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(CharSequence value, int offset, int len) {_		checkNotNull(value)__		if (offset < 0 || len < 0 || offset > value.length() - len) {_			throw new IndexOutOfBoundsException("offset: " + offset + " len: " + len + " value.len: " + len)__		}__		ensureSize(len)__		this.len = len_		_		for (int i = 0_ i < len_ i++) {_			this.value[i] = value.charAt(offset + i)__		}_		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,sequence,value,int,offset,int,len,check,not,null,value,if,offset,0,len,0,offset,value,length,len,throw,new,index,out,of,bounds,exception,offset,offset,len,len,value,len,len,ensure,size,len,this,len,len,for,int,i,0,i,len,i,this,value,i,value,char,at,offset,i,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharSequence value, int offset, int len);1471549817;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(CharSequence value, int offset, int len) {_		checkNotNull(value)__		if (offset < 0 || len < 0 || offset > value.length() - len) {_			throw new IndexOutOfBoundsException("offset: " + offset + " len: " + len + " value.len: " + len)__		}__		ensureSize(len)__		this.len = len_		_		for (int i = 0_ i < len_ i++) {_			this.value[i] = value.charAt(offset + i)__		}_		this.len = len__		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,sequence,value,int,offset,int,len,check,not,null,value,if,offset,0,len,0,offset,value,length,len,throw,new,index,out,of,bounds,exception,offset,offset,len,len,value,len,len,ensure,size,len,this,len,len,for,int,i,0,i,len,i,this,value,i,value,char,at,offset,i,this,len,len,this,hash,code,0
StringValue -> public void setValue(CharSequence value, int offset, int len);1529010948;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(CharSequence value, int offset, int len) {_		checkNotNull(value)__		if (offset < 0 || len < 0 || offset > value.length() - len) {_			throw new IndexOutOfBoundsException("offset: " + offset + " len: " + len + " value.len: " + len)__		}__		ensureSize(len)__		this.len = len_		_		for (int i = 0_ i < len_ i++) {_			this.value[i] = value.charAt(offset + i)__		}_		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,sequence,value,int,offset,int,len,check,not,null,value,if,offset,0,len,0,offset,value,length,len,throw,new,index,out,of,bounds,exception,offset,offset,len,len,value,len,len,ensure,size,len,this,len,len,for,int,i,0,i,len,i,this,value,i,value,char,at,offset,i,this,hash,code,0
StringValue -> public void setValue(CharSequence value, int offset, int len);1530185676;Sets the value of the StringValue to a substring of the given string.__@param value The new string value._@param offset The position to start the substring._@param len The length of the substring.;public void setValue(CharSequence value, int offset, int len) {_		checkNotNull(value)__		if (offset < 0 || len < 0 || offset > value.length() - len) {_			throw new IndexOutOfBoundsException("offset: " + offset + " len: " + len + " value.len: " + len)__		}__		ensureSize(len)__		this.len = len_		_		for (int i = 0_ i < len_ i++) {_			this.value[i] = value.charAt(offset + i)__		}_		this.hashCode = 0__	};sets,the,value,of,the,string,value,to,a,substring,of,the,given,string,param,value,the,new,string,value,param,offset,the,position,to,start,the,substring,param,len,the,length,of,the,substring;public,void,set,value,char,sequence,value,int,offset,int,len,check,not,null,value,if,offset,0,len,0,offset,value,length,len,throw,new,index,out,of,bounds,exception,offset,offset,len,len,value,len,len,ensure,size,len,this,len,len,for,int,i,0,i,len,i,this,value,i,value,char,at,offset,i,this,hash,code,0
StringValue -> public void substring(StringValue target, int start);1405024514;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at end of the string__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public void substring(StringValue target, int start) {_		substring(target, start, this.len)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,void,substring,string,value,target,int,start,substring,target,start,this,len
StringValue -> public void substring(StringValue target, int start);1405090423;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at end of the string__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public void substring(StringValue target, int start) {_		substring(target, start, this.len)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,void,substring,string,value,target,int,start,substring,target,start,this,len
StringValue -> public void substring(StringValue target, int start);1411473593;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at end of the string__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public void substring(StringValue target, int start) {_		substring(target, start, this.len)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,void,substring,string,value,target,int,start,substring,target,start,this,len
StringValue -> public void substring(StringValue target, int start);1414786554;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at end of the string__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public void substring(StringValue target, int start) {_		substring(target, start, this.len)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,void,substring,string,value,target,int,start,substring,target,start,this,len
StringValue -> public void substring(StringValue target, int start);1418912934;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at end of the string__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public void substring(StringValue target, int start) {_		substring(target, start, this.len)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,void,substring,string,value,target,int,start,substring,target,start,this,len
StringValue -> public void substring(StringValue target, int start);1431696388;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at end of the string__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public void substring(StringValue target, int start) {_		substring(target, start, this.len)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,void,substring,string,value,target,int,start,substring,target,start,this,len
StringValue -> public void substring(StringValue target, int start);1434963934;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at end of the string__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public void substring(StringValue target, int start) {_		substring(target, start, this.len)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,void,substring,string,value,target,int,start,substring,target,start,this,len
StringValue -> public void substring(StringValue target, int start);1434974504;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at end of the string__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public void substring(StringValue target, int start) {_		substring(target, start, this.len)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,void,substring,string,value,target,int,start,substring,target,start,this,len
StringValue -> public void substring(StringValue target, int start);1443521887;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at end of the string__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public void substring(StringValue target, int start) {_		substring(target, start, this.len)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,void,substring,string,value,target,int,start,substring,target,start,this,len
StringValue -> public void substring(StringValue target, int start);1446112342;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at end of the string__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public void substring(StringValue target, int start) {_		substring(target, start, this.len)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,void,substring,string,value,target,int,start,substring,target,start,this,len
StringValue -> public void substring(StringValue target, int start);1452178883;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at end of the string__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public void substring(StringValue target, int start) {_		substring(target, start, this.len)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,void,substring,string,value,target,int,start,substring,target,start,this,len
StringValue -> public void substring(StringValue target, int start);1457441341;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at end of the string__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public void substring(StringValue target, int start) {_		substring(target, start, this.len)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,void,substring,string,value,target,int,start,substring,target,start,this,len
StringValue -> public void substring(StringValue target, int start);1460741894;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at end of the string__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public void substring(StringValue target, int start) {_		substring(target, start, this.len)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,void,substring,string,value,target,int,start,substring,target,start,this,len
StringValue -> public void substring(StringValue target, int start);1471549817;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at end of the string__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public void substring(StringValue target, int start) {_		substring(target, start, this.len)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,void,substring,string,value,target,int,start,substring,target,start,this,len
StringValue -> public void substring(StringValue target, int start);1529010948;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at end of the string__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public void substring(StringValue target, int start) {_		substring(target, start, this.len)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,void,substring,string,value,target,int,start,substring,target,start,this,len
StringValue -> public void substring(StringValue target, int start);1530185676;Copies a substring of this string into the given target StringValue. The_substring begins at the given <code>start</code> index and ends at end of the string__@param target The StringValue object to copy the substring to._@param start The beginning index, inclusive._@exception  IndexOutOfBoundsException Thrown, if the start is negative.;public void substring(StringValue target, int start) {_		substring(target, start, this.len)__	};copies,a,substring,of,this,string,into,the,given,target,string,value,the,substring,begins,at,the,given,code,start,code,index,and,ends,at,end,of,the,string,param,target,the,string,value,object,to,copy,the,substring,to,param,start,the,beginning,index,inclusive,exception,index,out,of,bounds,exception,thrown,if,the,start,is,negative;public,void,substring,string,value,target,int,start,substring,target,start,this,len
StringValue -> public void setLength(int len);1405024514;Sets a new length for the string.__@param len The new length.;public void setLength(int len) {_		if (len < 0 || len > this.len) {_			throw new IllegalArgumentException("Length must be between 0 and the current length.")__		}_		this.len = len__	};sets,a,new,length,for,the,string,param,len,the,new,length;public,void,set,length,int,len,if,len,0,len,this,len,throw,new,illegal,argument,exception,length,must,be,between,0,and,the,current,length,this,len,len
StringValue -> public void setLength(int len);1405090423;Sets a new length for the string.__@param len The new length.;public void setLength(int len) {_		if (len < 0 || len > this.len) {_			throw new IllegalArgumentException("Length must be between 0 and the current length.")__		}_		this.len = len__	};sets,a,new,length,for,the,string,param,len,the,new,length;public,void,set,length,int,len,if,len,0,len,this,len,throw,new,illegal,argument,exception,length,must,be,between,0,and,the,current,length,this,len,len
StringValue -> public void setLength(int len);1411473593;Sets a new length for the string.__@param len The new length.;public void setLength(int len) {_		if (len < 0 || len > this.len) {_			throw new IllegalArgumentException("Length must be between 0 and the current length.")__		}_		this.len = len__	};sets,a,new,length,for,the,string,param,len,the,new,length;public,void,set,length,int,len,if,len,0,len,this,len,throw,new,illegal,argument,exception,length,must,be,between,0,and,the,current,length,this,len,len
StringValue -> public void setLength(int len);1414786554;Sets a new length for the string.__@param len The new length.;public void setLength(int len) {_		if (len < 0 || len > this.len) {_			throw new IllegalArgumentException("Length must be between 0 and the current length.")__		}_		this.len = len__	};sets,a,new,length,for,the,string,param,len,the,new,length;public,void,set,length,int,len,if,len,0,len,this,len,throw,new,illegal,argument,exception,length,must,be,between,0,and,the,current,length,this,len,len
StringValue -> public void setLength(int len);1418912934;Sets a new length for the string.__@param len The new length.;public void setLength(int len) {_		if (len < 0 || len > this.len) {_			throw new IllegalArgumentException("Length must be between 0 and the current length.")__		}_		this.len = len__	};sets,a,new,length,for,the,string,param,len,the,new,length;public,void,set,length,int,len,if,len,0,len,this,len,throw,new,illegal,argument,exception,length,must,be,between,0,and,the,current,length,this,len,len
StringValue -> public void setLength(int len);1431696388;Sets a new length for the string.__@param len The new length.;public void setLength(int len) {_		if (len < 0 || len > this.len) {_			throw new IllegalArgumentException("Length must be between 0 and the current length.")__		}_		this.len = len__	};sets,a,new,length,for,the,string,param,len,the,new,length;public,void,set,length,int,len,if,len,0,len,this,len,throw,new,illegal,argument,exception,length,must,be,between,0,and,the,current,length,this,len,len
StringValue -> public void setLength(int len);1434963934;Sets a new length for the string.__@param len The new length.;public void setLength(int len) {_		if (len < 0 || len > this.len) {_			throw new IllegalArgumentException("Length must be between 0 and the current length.")__		}_		this.len = len__	};sets,a,new,length,for,the,string,param,len,the,new,length;public,void,set,length,int,len,if,len,0,len,this,len,throw,new,illegal,argument,exception,length,must,be,between,0,and,the,current,length,this,len,len
StringValue -> public void setLength(int len);1434974504;Sets a new length for the string.__@param len The new length.;public void setLength(int len) {_		if (len < 0 || len > this.len) {_			throw new IllegalArgumentException("Length must be between 0 and the current length.")__		}_		this.len = len__	};sets,a,new,length,for,the,string,param,len,the,new,length;public,void,set,length,int,len,if,len,0,len,this,len,throw,new,illegal,argument,exception,length,must,be,between,0,and,the,current,length,this,len,len
StringValue -> public void setLength(int len);1443521887;Sets a new length for the string.__@param len The new length.;public void setLength(int len) {_		if (len < 0 || len > this.len) {_			throw new IllegalArgumentException("Length must be between 0 and the current length.")__		}_		this.len = len__	};sets,a,new,length,for,the,string,param,len,the,new,length;public,void,set,length,int,len,if,len,0,len,this,len,throw,new,illegal,argument,exception,length,must,be,between,0,and,the,current,length,this,len,len
StringValue -> public void setLength(int len);1446112342;Sets a new length for the string.__@param len The new length.;public void setLength(int len) {_		if (len < 0 || len > this.len) {_			throw new IllegalArgumentException("Length must be between 0 and the current length.")__		}_		this.len = len__	};sets,a,new,length,for,the,string,param,len,the,new,length;public,void,set,length,int,len,if,len,0,len,this,len,throw,new,illegal,argument,exception,length,must,be,between,0,and,the,current,length,this,len,len
StringValue -> public void setLength(int len);1452178883;Sets a new length for the string.__@param len The new length.;public void setLength(int len) {_		if (len < 0 || len > this.len) {_			throw new IllegalArgumentException("Length must be between 0 and the current length.")__		}_		this.len = len__	};sets,a,new,length,for,the,string,param,len,the,new,length;public,void,set,length,int,len,if,len,0,len,this,len,throw,new,illegal,argument,exception,length,must,be,between,0,and,the,current,length,this,len,len
StringValue -> public void setLength(int len);1457441341;Sets a new length for the string.__@param len The new length.;public void setLength(int len) {_		if (len < 0 || len > this.len) {_			throw new IllegalArgumentException("Length must be between 0 and the current length.")__		}_		this.len = len__	};sets,a,new,length,for,the,string,param,len,the,new,length;public,void,set,length,int,len,if,len,0,len,this,len,throw,new,illegal,argument,exception,length,must,be,between,0,and,the,current,length,this,len,len
StringValue -> public void setLength(int len);1460741894;Sets a new length for the string.__@param len The new length.;public void setLength(int len) {_		if (len < 0 || len > this.len) {_			throw new IllegalArgumentException("Length must be between 0 and the current length.")__		}_		this.len = len__	};sets,a,new,length,for,the,string,param,len,the,new,length;public,void,set,length,int,len,if,len,0,len,this,len,throw,new,illegal,argument,exception,length,must,be,between,0,and,the,current,length,this,len,len
StringValue -> public void setLength(int len);1471549817;Sets a new length for the string.__@param len The new length.;public void setLength(int len) {_		if (len < 0 || len > this.len) {_			throw new IllegalArgumentException("Length must be between 0 and the current length.")__		}_		this.len = len__	};sets,a,new,length,for,the,string,param,len,the,new,length;public,void,set,length,int,len,if,len,0,len,this,len,throw,new,illegal,argument,exception,length,must,be,between,0,and,the,current,length,this,len,len
StringValue -> public void setLength(int len);1529010948;Sets a new length for the string.__@param len The new length.;public void setLength(int len) {_		if (len < 0 || len > this.len) {_			throw new IllegalArgumentException("Length must be between 0 and the current length.")__		}_		this.len = len__	};sets,a,new,length,for,the,string,param,len,the,new,length;public,void,set,length,int,len,if,len,0,len,this,len,throw,new,illegal,argument,exception,length,must,be,between,0,and,the,current,length,this,len,len
StringValue -> public void setLength(int len);1530185676;Sets a new length for the string.__@param len The new length.;public void setLength(int len) {_		if (len < 0 || len > this.len) {_			throw new IllegalArgumentException("Length must be between 0 and the current length.")__		}_		this.len = len__	};sets,a,new,length,for,the,string,param,len,the,new,length;public,void,set,length,int,len,if,len,0,len,this,len,throw,new,illegal,argument,exception,length,must,be,between,0,and,the,current,length,this,len,len
StringValue -> public StringValue(StringValue value, int offset, int len);1405024514;Initializes the StringValue to a sub-string of the given StringValue.__@param value The string containing the substring._@param offset The offset of the substring._@param len The length of the substring.;public StringValue(StringValue value, int offset, int len) {_		this.value = EMPTY_STRING__		setValue(value, offset, len)__	};initializes,the,string,value,to,a,sub,string,of,the,given,string,value,param,value,the,string,containing,the,substring,param,offset,the,offset,of,the,substring,param,len,the,length,of,the,substring;public,string,value,string,value,value,int,offset,int,len,this,value,set,value,value,offset,len
StringValue -> public StringValue(StringValue value, int offset, int len);1405090423;Initializes the StringValue to a sub-string of the given StringValue.__@param value The string containing the substring._@param offset The offset of the substring._@param len The length of the substring.;public StringValue(StringValue value, int offset, int len) {_		this.value = EMPTY_STRING__		setValue(value, offset, len)__	};initializes,the,string,value,to,a,sub,string,of,the,given,string,value,param,value,the,string,containing,the,substring,param,offset,the,offset,of,the,substring,param,len,the,length,of,the,substring;public,string,value,string,value,value,int,offset,int,len,this,value,set,value,value,offset,len
StringValue -> public StringValue(StringValue value, int offset, int len);1411473593;Initializes the StringValue to a sub-string of the given StringValue.__@param value The string containing the substring._@param offset The offset of the substring._@param len The length of the substring.;public StringValue(StringValue value, int offset, int len) {_		this.value = EMPTY_STRING__		setValue(value, offset, len)__	};initializes,the,string,value,to,a,sub,string,of,the,given,string,value,param,value,the,string,containing,the,substring,param,offset,the,offset,of,the,substring,param,len,the,length,of,the,substring;public,string,value,string,value,value,int,offset,int,len,this,value,set,value,value,offset,len
StringValue -> public StringValue(StringValue value, int offset, int len);1414786554;Initializes the StringValue to a sub-string of the given StringValue.__@param value The string containing the substring._@param offset The offset of the substring._@param len The length of the substring.;public StringValue(StringValue value, int offset, int len) {_		this.value = EMPTY_STRING__		setValue(value, offset, len)__	};initializes,the,string,value,to,a,sub,string,of,the,given,string,value,param,value,the,string,containing,the,substring,param,offset,the,offset,of,the,substring,param,len,the,length,of,the,substring;public,string,value,string,value,value,int,offset,int,len,this,value,set,value,value,offset,len
StringValue -> public StringValue(StringValue value, int offset, int len);1418912934;Initializes the StringValue to a sub-string of the given StringValue.__@param value The string containing the substring._@param offset The offset of the substring._@param len The length of the substring.;public StringValue(StringValue value, int offset, int len) {_		this.value = EMPTY_STRING__		setValue(value, offset, len)__	};initializes,the,string,value,to,a,sub,string,of,the,given,string,value,param,value,the,string,containing,the,substring,param,offset,the,offset,of,the,substring,param,len,the,length,of,the,substring;public,string,value,string,value,value,int,offset,int,len,this,value,set,value,value,offset,len
StringValue -> public StringValue(StringValue value, int offset, int len);1431696388;Initializes the StringValue to a sub-string of the given StringValue.__@param value The string containing the substring._@param offset The offset of the substring._@param len The length of the substring.;public StringValue(StringValue value, int offset, int len) {_		this.value = EMPTY_STRING__		setValue(value, offset, len)__	};initializes,the,string,value,to,a,sub,string,of,the,given,string,value,param,value,the,string,containing,the,substring,param,offset,the,offset,of,the,substring,param,len,the,length,of,the,substring;public,string,value,string,value,value,int,offset,int,len,this,value,set,value,value,offset,len
StringValue -> public StringValue(StringValue value, int offset, int len);1434963934;Initializes the StringValue to a sub-string of the given StringValue.__@param value The string containing the substring._@param offset The offset of the substring._@param len The length of the substring.;public StringValue(StringValue value, int offset, int len) {_		this.value = EMPTY_STRING__		setValue(value, offset, len)__	};initializes,the,string,value,to,a,sub,string,of,the,given,string,value,param,value,the,string,containing,the,substring,param,offset,the,offset,of,the,substring,param,len,the,length,of,the,substring;public,string,value,string,value,value,int,offset,int,len,this,value,set,value,value,offset,len
StringValue -> public StringValue(StringValue value, int offset, int len);1434974504;Initializes the StringValue to a sub-string of the given StringValue.__@param value The string containing the substring._@param offset The offset of the substring._@param len The length of the substring.;public StringValue(StringValue value, int offset, int len) {_		this.value = EMPTY_STRING__		setValue(value, offset, len)__	};initializes,the,string,value,to,a,sub,string,of,the,given,string,value,param,value,the,string,containing,the,substring,param,offset,the,offset,of,the,substring,param,len,the,length,of,the,substring;public,string,value,string,value,value,int,offset,int,len,this,value,set,value,value,offset,len
StringValue -> public StringValue(StringValue value, int offset, int len);1443521887;Initializes the StringValue to a sub-string of the given StringValue.__@param value The string containing the substring._@param offset The offset of the substring._@param len The length of the substring.;public StringValue(StringValue value, int offset, int len) {_		this.value = EMPTY_STRING__		setValue(value, offset, len)__	};initializes,the,string,value,to,a,sub,string,of,the,given,string,value,param,value,the,string,containing,the,substring,param,offset,the,offset,of,the,substring,param,len,the,length,of,the,substring;public,string,value,string,value,value,int,offset,int,len,this,value,set,value,value,offset,len
StringValue -> public StringValue(StringValue value, int offset, int len);1446112342;Initializes the StringValue to a sub-string of the given StringValue.__@param value The string containing the substring._@param offset The offset of the substring._@param len The length of the substring.;public StringValue(StringValue value, int offset, int len) {_		this.value = EMPTY_STRING__		setValue(value, offset, len)__	};initializes,the,string,value,to,a,sub,string,of,the,given,string,value,param,value,the,string,containing,the,substring,param,offset,the,offset,of,the,substring,param,len,the,length,of,the,substring;public,string,value,string,value,value,int,offset,int,len,this,value,set,value,value,offset,len
StringValue -> public StringValue(StringValue value, int offset, int len);1452178883;Initializes the StringValue to a sub-string of the given StringValue.__@param value The string containing the substring._@param offset The offset of the substring._@param len The length of the substring.;public StringValue(StringValue value, int offset, int len) {_		this.value = EMPTY_STRING__		setValue(value, offset, len)__	};initializes,the,string,value,to,a,sub,string,of,the,given,string,value,param,value,the,string,containing,the,substring,param,offset,the,offset,of,the,substring,param,len,the,length,of,the,substring;public,string,value,string,value,value,int,offset,int,len,this,value,set,value,value,offset,len
StringValue -> public StringValue(StringValue value, int offset, int len);1457441341;Initializes the StringValue to a sub-string of the given StringValue.__@param value The string containing the substring._@param offset The offset of the substring._@param len The length of the substring.;public StringValue(StringValue value, int offset, int len) {_		this.value = EMPTY_STRING__		setValue(value, offset, len)__	};initializes,the,string,value,to,a,sub,string,of,the,given,string,value,param,value,the,string,containing,the,substring,param,offset,the,offset,of,the,substring,param,len,the,length,of,the,substring;public,string,value,string,value,value,int,offset,int,len,this,value,set,value,value,offset,len
StringValue -> public StringValue(StringValue value, int offset, int len);1460741894;Initializes the StringValue to a sub-string of the given StringValue.__@param value The string containing the substring._@param offset The offset of the substring._@param len The length of the substring.;public StringValue(StringValue value, int offset, int len) {_		this.value = EMPTY_STRING__		setValue(value, offset, len)__	};initializes,the,string,value,to,a,sub,string,of,the,given,string,value,param,value,the,string,containing,the,substring,param,offset,the,offset,of,the,substring,param,len,the,length,of,the,substring;public,string,value,string,value,value,int,offset,int,len,this,value,set,value,value,offset,len
StringValue -> public StringValue(StringValue value, int offset, int len);1471549817;Initializes the StringValue to a sub-string of the given StringValue.__@param value The string containing the substring._@param offset The offset of the substring._@param len The length of the substring.;public StringValue(StringValue value, int offset, int len) {_		this.value = EMPTY_STRING__		setValue(value, offset, len)__	};initializes,the,string,value,to,a,sub,string,of,the,given,string,value,param,value,the,string,containing,the,substring,param,offset,the,offset,of,the,substring,param,len,the,length,of,the,substring;public,string,value,string,value,value,int,offset,int,len,this,value,set,value,value,offset,len
StringValue -> public StringValue(StringValue value, int offset, int len);1529010948;Initializes the StringValue to a sub-string of the given StringValue.__@param value The string containing the substring._@param offset The offset of the substring._@param len The length of the substring.;public StringValue(StringValue value, int offset, int len) {_		this.value = EMPTY_STRING__		setValue(value, offset, len)__	};initializes,the,string,value,to,a,sub,string,of,the,given,string,value,param,value,the,string,containing,the,substring,param,offset,the,offset,of,the,substring,param,len,the,length,of,the,substring;public,string,value,string,value,value,int,offset,int,len,this,value,set,value,value,offset,len
StringValue -> public StringValue(StringValue value, int offset, int len);1530185676;Initializes the StringValue to a sub-string of the given StringValue.__@param value The string containing the substring._@param offset The offset of the substring._@param len The length of the substring.;public StringValue(StringValue value, int offset, int len) {_		this.value = EMPTY_STRING__		setValue(value, offset, len)__	};initializes,the,string,value,to,a,sub,string,of,the,given,string,value,param,value,the,string,containing,the,substring,param,offset,the,offset,of,the,substring,param,len,the,length,of,the,substring;public,string,value,string,value,value,int,offset,int,len,this,value,set,value,value,offset,len
StringValue -> public int find(CharSequence str, int start);1405024514;Finds any occurrence of the <code>str</code> character sequence in this StringValue._The search starts at position <code>start</code>.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str, int start) {_		final int pLen = this.len__		final int sLen = str.length()__		_		if (sLen == 0) {_			throw new IllegalArgumentException("Cannot find empty string.")__		}_		_		int pPos = start__		_		final char first = str.charAt(0)__		_		while (pPos < pLen) {_			if (first == this.value[pPos++]) {_				_				final int fallBackPosition = pPos__				int sPos = 1__				boolean found = true__				_				while (sPos < sLen) {_					if (pPos >= pLen) {_						_						pPos = fallBackPosition__						found = false__						break__					}_					_					if (str.charAt(sPos++) != this.value[pPos++]) {_						pPos = fallBackPosition__						found = false__						break__					}_				}_				if (found) {_					return fallBackPosition - 1__				}_			}_		}_		return -1__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,the,search,starts,at,position,code,start,code,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,int,start,final,int,p,len,this,len,final,int,s,len,str,length,if,s,len,0,throw,new,illegal,argument,exception,cannot,find,empty,string,int,p,pos,start,final,char,first,str,char,at,0,while,p,pos,p,len,if,first,this,value,p,pos,final,int,fall,back,position,p,pos,int,s,pos,1,boolean,found,true,while,s,pos,s,len,if,p,pos,p,len,p,pos,fall,back,position,found,false,break,if,str,char,at,s,pos,this,value,p,pos,p,pos,fall,back,position,found,false,break,if,found,return,fall,back,position,1,return,1
StringValue -> public int find(CharSequence str, int start);1405090423;Finds any occurrence of the <code>str</code> character sequence in this StringValue._The search starts at position <code>start</code>.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str, int start) {_		final int pLen = this.len__		final int sLen = str.length()__		_		if (sLen == 0) {_			throw new IllegalArgumentException("Cannot find empty string.")__		}_		_		int pPos = start__		_		final char first = str.charAt(0)__		_		while (pPos < pLen) {_			if (first == this.value[pPos++]) {_				_				final int fallBackPosition = pPos__				int sPos = 1__				boolean found = true__				_				while (sPos < sLen) {_					if (pPos >= pLen) {_						_						pPos = fallBackPosition__						found = false__						break__					}_					_					if (str.charAt(sPos++) != this.value[pPos++]) {_						pPos = fallBackPosition__						found = false__						break__					}_				}_				if (found) {_					return fallBackPosition - 1__				}_			}_		}_		return -1__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,the,search,starts,at,position,code,start,code,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,int,start,final,int,p,len,this,len,final,int,s,len,str,length,if,s,len,0,throw,new,illegal,argument,exception,cannot,find,empty,string,int,p,pos,start,final,char,first,str,char,at,0,while,p,pos,p,len,if,first,this,value,p,pos,final,int,fall,back,position,p,pos,int,s,pos,1,boolean,found,true,while,s,pos,s,len,if,p,pos,p,len,p,pos,fall,back,position,found,false,break,if,str,char,at,s,pos,this,value,p,pos,p,pos,fall,back,position,found,false,break,if,found,return,fall,back,position,1,return,1
StringValue -> public int find(CharSequence str, int start);1411473593;Finds any occurrence of the <code>str</code> character sequence in this StringValue._The search starts at position <code>start</code>.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str, int start) {_		final int pLen = this.len__		final int sLen = str.length()__		_		if (sLen == 0) {_			throw new IllegalArgumentException("Cannot find empty string.")__		}_		_		int pPos = start__		_		final char first = str.charAt(0)__		_		while (pPos < pLen) {_			if (first == this.value[pPos++]) {_				_				final int fallBackPosition = pPos__				int sPos = 1__				boolean found = true__				_				while (sPos < sLen) {_					if (pPos >= pLen) {_						_						pPos = fallBackPosition__						found = false__						break__					}_					_					if (str.charAt(sPos++) != this.value[pPos++]) {_						pPos = fallBackPosition__						found = false__						break__					}_				}_				if (found) {_					return fallBackPosition - 1__				}_			}_		}_		return -1__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,the,search,starts,at,position,code,start,code,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,int,start,final,int,p,len,this,len,final,int,s,len,str,length,if,s,len,0,throw,new,illegal,argument,exception,cannot,find,empty,string,int,p,pos,start,final,char,first,str,char,at,0,while,p,pos,p,len,if,first,this,value,p,pos,final,int,fall,back,position,p,pos,int,s,pos,1,boolean,found,true,while,s,pos,s,len,if,p,pos,p,len,p,pos,fall,back,position,found,false,break,if,str,char,at,s,pos,this,value,p,pos,p,pos,fall,back,position,found,false,break,if,found,return,fall,back,position,1,return,1
StringValue -> public int find(CharSequence str, int start);1414786554;Finds any occurrence of the <code>str</code> character sequence in this StringValue._The search starts at position <code>start</code>.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str, int start) {_		final int pLen = this.len__		final int sLen = str.length()__		_		if (sLen == 0) {_			throw new IllegalArgumentException("Cannot find empty string.")__		}_		_		int pPos = start__		_		final char first = str.charAt(0)__		_		while (pPos < pLen) {_			if (first == this.value[pPos++]) {_				_				final int fallBackPosition = pPos__				int sPos = 1__				boolean found = true__				_				while (sPos < sLen) {_					if (pPos >= pLen) {_						_						pPos = fallBackPosition__						found = false__						break__					}_					_					if (str.charAt(sPos++) != this.value[pPos++]) {_						pPos = fallBackPosition__						found = false__						break__					}_				}_				if (found) {_					return fallBackPosition - 1__				}_			}_		}_		return -1__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,the,search,starts,at,position,code,start,code,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,int,start,final,int,p,len,this,len,final,int,s,len,str,length,if,s,len,0,throw,new,illegal,argument,exception,cannot,find,empty,string,int,p,pos,start,final,char,first,str,char,at,0,while,p,pos,p,len,if,first,this,value,p,pos,final,int,fall,back,position,p,pos,int,s,pos,1,boolean,found,true,while,s,pos,s,len,if,p,pos,p,len,p,pos,fall,back,position,found,false,break,if,str,char,at,s,pos,this,value,p,pos,p,pos,fall,back,position,found,false,break,if,found,return,fall,back,position,1,return,1
StringValue -> public int find(CharSequence str, int start);1418912934;Finds any occurrence of the <code>str</code> character sequence in this StringValue._The search starts at position <code>start</code>.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str, int start) {_		final int pLen = this.len__		final int sLen = str.length()__		_		if (sLen == 0) {_			throw new IllegalArgumentException("Cannot find empty string.")__		}_		_		int pPos = start__		_		final char first = str.charAt(0)__		_		while (pPos < pLen) {_			if (first == this.value[pPos++]) {_				_				final int fallBackPosition = pPos__				int sPos = 1__				boolean found = true__				_				while (sPos < sLen) {_					if (pPos >= pLen) {_						_						pPos = fallBackPosition__						found = false__						break__					}_					_					if (str.charAt(sPos++) != this.value[pPos++]) {_						pPos = fallBackPosition__						found = false__						break__					}_				}_				if (found) {_					return fallBackPosition - 1__				}_			}_		}_		return -1__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,the,search,starts,at,position,code,start,code,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,int,start,final,int,p,len,this,len,final,int,s,len,str,length,if,s,len,0,throw,new,illegal,argument,exception,cannot,find,empty,string,int,p,pos,start,final,char,first,str,char,at,0,while,p,pos,p,len,if,first,this,value,p,pos,final,int,fall,back,position,p,pos,int,s,pos,1,boolean,found,true,while,s,pos,s,len,if,p,pos,p,len,p,pos,fall,back,position,found,false,break,if,str,char,at,s,pos,this,value,p,pos,p,pos,fall,back,position,found,false,break,if,found,return,fall,back,position,1,return,1
StringValue -> public int find(CharSequence str, int start);1431696388;Finds any occurrence of the <code>str</code> character sequence in this StringValue._The search starts at position <code>start</code>.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str, int start) {_		final int pLen = this.len__		final int sLen = str.length()__		_		if (sLen == 0) {_			throw new IllegalArgumentException("Cannot find empty string.")__		}_		_		int pPos = start__		_		final char first = str.charAt(0)__		_		while (pPos < pLen) {_			if (first == this.value[pPos++]) {_				_				final int fallBackPosition = pPos__				int sPos = 1__				boolean found = true__				_				while (sPos < sLen) {_					if (pPos >= pLen) {_						_						pPos = fallBackPosition__						found = false__						break__					}_					_					if (str.charAt(sPos++) != this.value[pPos++]) {_						pPos = fallBackPosition__						found = false__						break__					}_				}_				if (found) {_					return fallBackPosition - 1__				}_			}_		}_		return -1__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,the,search,starts,at,position,code,start,code,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,int,start,final,int,p,len,this,len,final,int,s,len,str,length,if,s,len,0,throw,new,illegal,argument,exception,cannot,find,empty,string,int,p,pos,start,final,char,first,str,char,at,0,while,p,pos,p,len,if,first,this,value,p,pos,final,int,fall,back,position,p,pos,int,s,pos,1,boolean,found,true,while,s,pos,s,len,if,p,pos,p,len,p,pos,fall,back,position,found,false,break,if,str,char,at,s,pos,this,value,p,pos,p,pos,fall,back,position,found,false,break,if,found,return,fall,back,position,1,return,1
StringValue -> public int find(CharSequence str, int start);1434963934;Finds any occurrence of the <code>str</code> character sequence in this StringValue._The search starts at position <code>start</code>.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str, int start) {_		final int pLen = this.len__		final int sLen = str.length()__		_		if (sLen == 0) {_			throw new IllegalArgumentException("Cannot find empty string.")__		}_		_		int pPos = start__		_		final char first = str.charAt(0)__		_		while (pPos < pLen) {_			if (first == this.value[pPos++]) {_				_				final int fallBackPosition = pPos__				int sPos = 1__				boolean found = true__				_				while (sPos < sLen) {_					if (pPos >= pLen) {_						_						pPos = fallBackPosition__						found = false__						break__					}_					_					if (str.charAt(sPos++) != this.value[pPos++]) {_						pPos = fallBackPosition__						found = false__						break__					}_				}_				if (found) {_					return fallBackPosition - 1__				}_			}_		}_		return -1__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,the,search,starts,at,position,code,start,code,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,int,start,final,int,p,len,this,len,final,int,s,len,str,length,if,s,len,0,throw,new,illegal,argument,exception,cannot,find,empty,string,int,p,pos,start,final,char,first,str,char,at,0,while,p,pos,p,len,if,first,this,value,p,pos,final,int,fall,back,position,p,pos,int,s,pos,1,boolean,found,true,while,s,pos,s,len,if,p,pos,p,len,p,pos,fall,back,position,found,false,break,if,str,char,at,s,pos,this,value,p,pos,p,pos,fall,back,position,found,false,break,if,found,return,fall,back,position,1,return,1
StringValue -> public int find(CharSequence str, int start);1434974504;Finds any occurrence of the <code>str</code> character sequence in this StringValue._The search starts at position <code>start</code>.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str, int start) {_		final int pLen = this.len__		final int sLen = str.length()__		_		if (sLen == 0) {_			throw new IllegalArgumentException("Cannot find empty string.")__		}_		_		int pPos = start__		_		final char first = str.charAt(0)__		_		while (pPos < pLen) {_			if (first == this.value[pPos++]) {_				_				final int fallBackPosition = pPos__				int sPos = 1__				boolean found = true__				_				while (sPos < sLen) {_					if (pPos >= pLen) {_						_						pPos = fallBackPosition__						found = false__						break__					}_					_					if (str.charAt(sPos++) != this.value[pPos++]) {_						pPos = fallBackPosition__						found = false__						break__					}_				}_				if (found) {_					return fallBackPosition - 1__				}_			}_		}_		return -1__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,the,search,starts,at,position,code,start,code,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,int,start,final,int,p,len,this,len,final,int,s,len,str,length,if,s,len,0,throw,new,illegal,argument,exception,cannot,find,empty,string,int,p,pos,start,final,char,first,str,char,at,0,while,p,pos,p,len,if,first,this,value,p,pos,final,int,fall,back,position,p,pos,int,s,pos,1,boolean,found,true,while,s,pos,s,len,if,p,pos,p,len,p,pos,fall,back,position,found,false,break,if,str,char,at,s,pos,this,value,p,pos,p,pos,fall,back,position,found,false,break,if,found,return,fall,back,position,1,return,1
StringValue -> public int find(CharSequence str, int start);1443521887;Finds any occurrence of the <code>str</code> character sequence in this StringValue._The search starts at position <code>start</code>.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str, int start) {_		final int pLen = this.len__		final int sLen = str.length()__		_		if (sLen == 0) {_			throw new IllegalArgumentException("Cannot find empty string.")__		}_		_		int pPos = start__		_		final char first = str.charAt(0)__		_		while (pPos < pLen) {_			if (first == this.value[pPos++]) {_				_				final int fallBackPosition = pPos__				int sPos = 1__				boolean found = true__				_				while (sPos < sLen) {_					if (pPos >= pLen) {_						_						pPos = fallBackPosition__						found = false__						break__					}_					_					if (str.charAt(sPos++) != this.value[pPos++]) {_						pPos = fallBackPosition__						found = false__						break__					}_				}_				if (found) {_					return fallBackPosition - 1__				}_			}_		}_		return -1__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,the,search,starts,at,position,code,start,code,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,int,start,final,int,p,len,this,len,final,int,s,len,str,length,if,s,len,0,throw,new,illegal,argument,exception,cannot,find,empty,string,int,p,pos,start,final,char,first,str,char,at,0,while,p,pos,p,len,if,first,this,value,p,pos,final,int,fall,back,position,p,pos,int,s,pos,1,boolean,found,true,while,s,pos,s,len,if,p,pos,p,len,p,pos,fall,back,position,found,false,break,if,str,char,at,s,pos,this,value,p,pos,p,pos,fall,back,position,found,false,break,if,found,return,fall,back,position,1,return,1
StringValue -> public int find(CharSequence str, int start);1446112342;Finds any occurrence of the <code>str</code> character sequence in this StringValue._The search starts at position <code>start</code>.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str, int start) {_		final int pLen = this.len__		final int sLen = str.length()__		_		if (sLen == 0) {_			throw new IllegalArgumentException("Cannot find empty string.")__		}_		_		int pPos = start__		_		final char first = str.charAt(0)__		_		while (pPos < pLen) {_			if (first == this.value[pPos++]) {_				_				final int fallBackPosition = pPos__				int sPos = 1__				boolean found = true__				_				while (sPos < sLen) {_					if (pPos >= pLen) {_						_						pPos = fallBackPosition__						found = false__						break__					}_					_					if (str.charAt(sPos++) != this.value[pPos++]) {_						pPos = fallBackPosition__						found = false__						break__					}_				}_				if (found) {_					return fallBackPosition - 1__				}_			}_		}_		return -1__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,the,search,starts,at,position,code,start,code,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,int,start,final,int,p,len,this,len,final,int,s,len,str,length,if,s,len,0,throw,new,illegal,argument,exception,cannot,find,empty,string,int,p,pos,start,final,char,first,str,char,at,0,while,p,pos,p,len,if,first,this,value,p,pos,final,int,fall,back,position,p,pos,int,s,pos,1,boolean,found,true,while,s,pos,s,len,if,p,pos,p,len,p,pos,fall,back,position,found,false,break,if,str,char,at,s,pos,this,value,p,pos,p,pos,fall,back,position,found,false,break,if,found,return,fall,back,position,1,return,1
StringValue -> public int find(CharSequence str, int start);1452178883;Finds any occurrence of the <code>str</code> character sequence in this StringValue._The search starts at position <code>start</code>.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str, int start) {_		final int pLen = this.len__		final int sLen = str.length()__		_		if (sLen == 0) {_			throw new IllegalArgumentException("Cannot find empty string.")__		}_		_		int pPos = start__		_		final char first = str.charAt(0)__		_		while (pPos < pLen) {_			if (first == this.value[pPos++]) {_				_				final int fallBackPosition = pPos__				int sPos = 1__				boolean found = true__				_				while (sPos < sLen) {_					if (pPos >= pLen) {_						_						pPos = fallBackPosition__						found = false__						break__					}_					_					if (str.charAt(sPos++) != this.value[pPos++]) {_						pPos = fallBackPosition__						found = false__						break__					}_				}_				if (found) {_					return fallBackPosition - 1__				}_			}_		}_		return -1__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,the,search,starts,at,position,code,start,code,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,int,start,final,int,p,len,this,len,final,int,s,len,str,length,if,s,len,0,throw,new,illegal,argument,exception,cannot,find,empty,string,int,p,pos,start,final,char,first,str,char,at,0,while,p,pos,p,len,if,first,this,value,p,pos,final,int,fall,back,position,p,pos,int,s,pos,1,boolean,found,true,while,s,pos,s,len,if,p,pos,p,len,p,pos,fall,back,position,found,false,break,if,str,char,at,s,pos,this,value,p,pos,p,pos,fall,back,position,found,false,break,if,found,return,fall,back,position,1,return,1
StringValue -> public int find(CharSequence str, int start);1457441341;Finds any occurrence of the <code>str</code> character sequence in this StringValue._The search starts at position <code>start</code>.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str, int start) {_		final int pLen = this.len__		final int sLen = str.length()__		_		if (sLen == 0) {_			throw new IllegalArgumentException("Cannot find empty string.")__		}_		_		int pPos = start__		_		final char first = str.charAt(0)__		_		while (pPos < pLen) {_			if (first == this.value[pPos++]) {_				_				final int fallBackPosition = pPos__				int sPos = 1__				boolean found = true__				_				while (sPos < sLen) {_					if (pPos >= pLen) {_						_						pPos = fallBackPosition__						found = false__						break__					}_					_					if (str.charAt(sPos++) != this.value[pPos++]) {_						pPos = fallBackPosition__						found = false__						break__					}_				}_				if (found) {_					return fallBackPosition - 1__				}_			}_		}_		return -1__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,the,search,starts,at,position,code,start,code,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,int,start,final,int,p,len,this,len,final,int,s,len,str,length,if,s,len,0,throw,new,illegal,argument,exception,cannot,find,empty,string,int,p,pos,start,final,char,first,str,char,at,0,while,p,pos,p,len,if,first,this,value,p,pos,final,int,fall,back,position,p,pos,int,s,pos,1,boolean,found,true,while,s,pos,s,len,if,p,pos,p,len,p,pos,fall,back,position,found,false,break,if,str,char,at,s,pos,this,value,p,pos,p,pos,fall,back,position,found,false,break,if,found,return,fall,back,position,1,return,1
StringValue -> public int find(CharSequence str, int start);1460741894;Finds any occurrence of the <code>str</code> character sequence in this StringValue._The search starts at position <code>start</code>.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str, int start) {_		final int pLen = this.len__		final int sLen = str.length()__		_		if (sLen == 0) {_			throw new IllegalArgumentException("Cannot find empty string.")__		}_		_		int pPos = start__		_		final char first = str.charAt(0)__		_		while (pPos < pLen) {_			if (first == this.value[pPos++]) {_				_				final int fallBackPosition = pPos__				int sPos = 1__				boolean found = true__				_				while (sPos < sLen) {_					if (pPos >= pLen) {_						_						pPos = fallBackPosition__						found = false__						break__					}_					_					if (str.charAt(sPos++) != this.value[pPos++]) {_						pPos = fallBackPosition__						found = false__						break__					}_				}_				if (found) {_					return fallBackPosition - 1__				}_			}_		}_		return -1__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,the,search,starts,at,position,code,start,code,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,int,start,final,int,p,len,this,len,final,int,s,len,str,length,if,s,len,0,throw,new,illegal,argument,exception,cannot,find,empty,string,int,p,pos,start,final,char,first,str,char,at,0,while,p,pos,p,len,if,first,this,value,p,pos,final,int,fall,back,position,p,pos,int,s,pos,1,boolean,found,true,while,s,pos,s,len,if,p,pos,p,len,p,pos,fall,back,position,found,false,break,if,str,char,at,s,pos,this,value,p,pos,p,pos,fall,back,position,found,false,break,if,found,return,fall,back,position,1,return,1
StringValue -> public int find(CharSequence str, int start);1471549817;Finds any occurrence of the <code>str</code> character sequence in this StringValue._The search starts at position <code>start</code>.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str, int start) {_		final int pLen = this.len__		final int sLen = str.length()__		_		if (sLen == 0) {_			throw new IllegalArgumentException("Cannot find empty string.")__		}_		_		int pPos = start__		_		final char first = str.charAt(0)__		_		while (pPos < pLen) {_			if (first == this.value[pPos++]) {_				_				final int fallBackPosition = pPos__				int sPos = 1__				boolean found = true__				_				while (sPos < sLen) {_					if (pPos >= pLen) {_						_						pPos = fallBackPosition__						found = false__						break__					}_					_					if (str.charAt(sPos++) != this.value[pPos++]) {_						pPos = fallBackPosition__						found = false__						break__					}_				}_				if (found) {_					return fallBackPosition - 1__				}_			}_		}_		return -1__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,the,search,starts,at,position,code,start,code,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,int,start,final,int,p,len,this,len,final,int,s,len,str,length,if,s,len,0,throw,new,illegal,argument,exception,cannot,find,empty,string,int,p,pos,start,final,char,first,str,char,at,0,while,p,pos,p,len,if,first,this,value,p,pos,final,int,fall,back,position,p,pos,int,s,pos,1,boolean,found,true,while,s,pos,s,len,if,p,pos,p,len,p,pos,fall,back,position,found,false,break,if,str,char,at,s,pos,this,value,p,pos,p,pos,fall,back,position,found,false,break,if,found,return,fall,back,position,1,return,1
StringValue -> public int find(CharSequence str, int start);1529010948;Finds any occurrence of the <code>str</code> character sequence in this StringValue._The search starts at position <code>start</code>.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str, int start) {_		final int pLen = this.len__		final int sLen = str.length()__		_		if (sLen == 0) {_			throw new IllegalArgumentException("Cannot find empty string.")__		}_		_		int pPos = start__		_		final char first = str.charAt(0)__		_		while (pPos < pLen) {_			if (first == this.value[pPos++]) {_				_				final int fallBackPosition = pPos__				int sPos = 1__				boolean found = true__				_				while (sPos < sLen) {_					if (pPos >= pLen) {_						_						pPos = fallBackPosition__						found = false__						break__					}_					_					if (str.charAt(sPos++) != this.value[pPos++]) {_						pPos = fallBackPosition__						found = false__						break__					}_				}_				if (found) {_					return fallBackPosition - 1__				}_			}_		}_		return -1__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,the,search,starts,at,position,code,start,code,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,int,start,final,int,p,len,this,len,final,int,s,len,str,length,if,s,len,0,throw,new,illegal,argument,exception,cannot,find,empty,string,int,p,pos,start,final,char,first,str,char,at,0,while,p,pos,p,len,if,first,this,value,p,pos,final,int,fall,back,position,p,pos,int,s,pos,1,boolean,found,true,while,s,pos,s,len,if,p,pos,p,len,p,pos,fall,back,position,found,false,break,if,str,char,at,s,pos,this,value,p,pos,p,pos,fall,back,position,found,false,break,if,found,return,fall,back,position,1,return,1
StringValue -> public int find(CharSequence str, int start);1530185676;Finds any occurrence of the <code>str</code> character sequence in this StringValue._The search starts at position <code>start</code>.__@return The position of the first occurrence of the search string in the string value, or <code>-1</code>, if_the character sequence was not found.;public int find(CharSequence str, int start) {_		final int pLen = this.len__		final int sLen = str.length()__		_		if (sLen == 0) {_			throw new IllegalArgumentException("Cannot find empty string.")__		}_		_		int pPos = start__		_		final char first = str.charAt(0)__		_		while (pPos < pLen) {_			if (first == this.value[pPos++]) {_				_				final int fallBackPosition = pPos__				int sPos = 1__				boolean found = true__				_				while (sPos < sLen) {_					if (pPos >= pLen) {_						_						pPos = fallBackPosition__						found = false__						break__					}_					_					if (str.charAt(sPos++) != this.value[pPos++]) {_						pPos = fallBackPosition__						found = false__						break__					}_				}_				if (found) {_					return fallBackPosition - 1__				}_			}_		}_		return -1__	};finds,any,occurrence,of,the,code,str,code,character,sequence,in,this,string,value,the,search,starts,at,position,code,start,code,return,the,position,of,the,first,occurrence,of,the,search,string,in,the,string,value,or,code,1,code,if,the,character,sequence,was,not,found;public,int,find,char,sequence,str,int,start,final,int,p,len,this,len,final,int,s,len,str,length,if,s,len,0,throw,new,illegal,argument,exception,cannot,find,empty,string,int,p,pos,start,final,char,first,str,char,at,0,while,p,pos,p,len,if,first,this,value,p,pos,final,int,fall,back,position,p,pos,int,s,pos,1,boolean,found,true,while,s,pos,s,len,if,p,pos,p,len,p,pos,fall,back,position,found,false,break,if,str,char,at,s,pos,this,value,p,pos,p,pos,fall,back,position,found,false,break,if,found,return,fall,back,position,1,return,1
StringValue -> public char[] getCharArray();1405024514;Returns this StringValue's internal character data. The array might be larger than the string_which is currently stored in the StringValue.__@return The character data.;public char[] getCharArray() {_		return this.value__	};returns,this,string,value,s,internal,character,data,the,array,might,be,larger,than,the,string,which,is,currently,stored,in,the,string,value,return,the,character,data;public,char,get,char,array,return,this,value
StringValue -> public char[] getCharArray();1405090423;Returns this StringValue's internal character data. The array might be larger than the string_which is currently stored in the StringValue.__@return The character data.;public char[] getCharArray() {_		return this.value__	};returns,this,string,value,s,internal,character,data,the,array,might,be,larger,than,the,string,which,is,currently,stored,in,the,string,value,return,the,character,data;public,char,get,char,array,return,this,value
StringValue -> public char[] getCharArray();1411473593;Returns this StringValue's internal character data. The array might be larger than the string_which is currently stored in the StringValue.__@return The character data.;public char[] getCharArray() {_		return this.value__	};returns,this,string,value,s,internal,character,data,the,array,might,be,larger,than,the,string,which,is,currently,stored,in,the,string,value,return,the,character,data;public,char,get,char,array,return,this,value
StringValue -> public char[] getCharArray();1414786554;Returns this StringValue's internal character data. The array might be larger than the string_which is currently stored in the StringValue.__@return The character data.;public char[] getCharArray() {_		return this.value__	};returns,this,string,value,s,internal,character,data,the,array,might,be,larger,than,the,string,which,is,currently,stored,in,the,string,value,return,the,character,data;public,char,get,char,array,return,this,value
StringValue -> public char[] getCharArray();1418912934;Returns this StringValue's internal character data. The array might be larger than the string_which is currently stored in the StringValue.__@return The character data.;public char[] getCharArray() {_		return this.value__	};returns,this,string,value,s,internal,character,data,the,array,might,be,larger,than,the,string,which,is,currently,stored,in,the,string,value,return,the,character,data;public,char,get,char,array,return,this,value
StringValue -> public char[] getCharArray();1431696388;Returns this StringValue's internal character data. The array might be larger than the string_which is currently stored in the StringValue.__@return The character data.;public char[] getCharArray() {_		return this.value__	};returns,this,string,value,s,internal,character,data,the,array,might,be,larger,than,the,string,which,is,currently,stored,in,the,string,value,return,the,character,data;public,char,get,char,array,return,this,value
StringValue -> public char[] getCharArray();1434963934;Returns this StringValue's internal character data. The array might be larger than the string_which is currently stored in the StringValue.__@return The character data.;public char[] getCharArray() {_		return this.value__	};returns,this,string,value,s,internal,character,data,the,array,might,be,larger,than,the,string,which,is,currently,stored,in,the,string,value,return,the,character,data;public,char,get,char,array,return,this,value
StringValue -> public char[] getCharArray();1434974504;Returns this StringValue's internal character data. The array might be larger than the string_which is currently stored in the StringValue.__@return The character data.;public char[] getCharArray() {_		return this.value__	};returns,this,string,value,s,internal,character,data,the,array,might,be,larger,than,the,string,which,is,currently,stored,in,the,string,value,return,the,character,data;public,char,get,char,array,return,this,value
StringValue -> public char[] getCharArray();1443521887;Returns this StringValue's internal character data. The array might be larger than the string_which is currently stored in the StringValue.__@return The character data.;public char[] getCharArray() {_		return this.value__	};returns,this,string,value,s,internal,character,data,the,array,might,be,larger,than,the,string,which,is,currently,stored,in,the,string,value,return,the,character,data;public,char,get,char,array,return,this,value
StringValue -> public char[] getCharArray();1446112342;Returns this StringValue's internal character data. The array might be larger than the string_which is currently stored in the StringValue.__@return The character data.;public char[] getCharArray() {_		return this.value__	};returns,this,string,value,s,internal,character,data,the,array,might,be,larger,than,the,string,which,is,currently,stored,in,the,string,value,return,the,character,data;public,char,get,char,array,return,this,value
StringValue -> public char[] getCharArray();1452178883;Returns this StringValue's internal character data. The array might be larger than the string_which is currently stored in the StringValue.__@return The character data.;public char[] getCharArray() {_		return this.value__	};returns,this,string,value,s,internal,character,data,the,array,might,be,larger,than,the,string,which,is,currently,stored,in,the,string,value,return,the,character,data;public,char,get,char,array,return,this,value
StringValue -> public char[] getCharArray();1457441341;Returns this StringValue's internal character data. The array might be larger than the string_which is currently stored in the StringValue.__@return The character data.;public char[] getCharArray() {_		return this.value__	};returns,this,string,value,s,internal,character,data,the,array,might,be,larger,than,the,string,which,is,currently,stored,in,the,string,value,return,the,character,data;public,char,get,char,array,return,this,value
StringValue -> public char[] getCharArray();1460741894;Returns this StringValue's internal character data. The array might be larger than the string_which is currently stored in the StringValue.__@return The character data.;public char[] getCharArray() {_		return this.value__	};returns,this,string,value,s,internal,character,data,the,array,might,be,larger,than,the,string,which,is,currently,stored,in,the,string,value,return,the,character,data;public,char,get,char,array,return,this,value
StringValue -> public char[] getCharArray();1471549817;Returns this StringValue's internal character data. The array might be larger than the string_which is currently stored in the StringValue.__@return The character data.;public char[] getCharArray() {_		return this.value__	};returns,this,string,value,s,internal,character,data,the,array,might,be,larger,than,the,string,which,is,currently,stored,in,the,string,value,return,the,character,data;public,char,get,char,array,return,this,value
StringValue -> public char[] getCharArray();1529010948;Returns this StringValue's internal character data. The array might be larger than the string_which is currently stored in the StringValue.__@return The character data.;public char[] getCharArray() {_		return this.value__	};returns,this,string,value,s,internal,character,data,the,array,might,be,larger,than,the,string,which,is,currently,stored,in,the,string,value,return,the,character,data;public,char,get,char,array,return,this,value
StringValue -> public char[] getCharArray();1530185676;Returns this StringValue's internal character data. The array might be larger than the string_which is currently stored in the StringValue.__@return The character data.;public char[] getCharArray() {_		return this.value__	};returns,this,string,value,s,internal,character,data,the,array,might,be,larger,than,the,string,which,is,currently,stored,in,the,string,value,return,the,character,data;public,char,get,char,array,return,this,value
StringValue -> private void grow(int size);1414786554;Grow and retain content.;private void grow(int size) {_		if (this.value.length < size) {_			char[] value = new char[ Math.max(this.value.length * 3 / 2, size)]__			System.arraycopy(this.value, 0, value, 0, this.len)__			this.value = value__		}_	};grow,and,retain,content;private,void,grow,int,size,if,this,value,length,size,char,value,new,char,math,max,this,value,length,3,2,size,system,arraycopy,this,value,0,value,0,this,len,this,value,value
StringValue -> private void grow(int size);1418912934;Grow and retain content.;private void grow(int size) {_		if (this.value.length < size) {_			char[] value = new char[ Math.max(this.value.length * 3 / 2, size)]__			System.arraycopy(this.value, 0, value, 0, this.len)__			this.value = value__		}_	};grow,and,retain,content;private,void,grow,int,size,if,this,value,length,size,char,value,new,char,math,max,this,value,length,3,2,size,system,arraycopy,this,value,0,value,0,this,len,this,value,value
StringValue -> private void grow(int size);1431696388;Grow and retain content.;private void grow(int size) {_		if (this.value.length < size) {_			char[] value = new char[ Math.max(this.value.length * 3 / 2, size)]__			System.arraycopy(this.value, 0, value, 0, this.len)__			this.value = value__		}_	};grow,and,retain,content;private,void,grow,int,size,if,this,value,length,size,char,value,new,char,math,max,this,value,length,3,2,size,system,arraycopy,this,value,0,value,0,this,len,this,value,value
StringValue -> private void grow(int size);1434963934;Grow and retain content.;private void grow(int size) {_		if (this.value.length < size) {_			char[] value = new char[ Math.max(this.value.length * 3 / 2, size)]__			System.arraycopy(this.value, 0, value, 0, this.len)__			this.value = value__		}_	};grow,and,retain,content;private,void,grow,int,size,if,this,value,length,size,char,value,new,char,math,max,this,value,length,3,2,size,system,arraycopy,this,value,0,value,0,this,len,this,value,value
StringValue -> private void grow(int size);1434974504;Grow and retain content.;private void grow(int size) {_		if (this.value.length < size) {_			char[] value = new char[ Math.max(this.value.length * 3 / 2, size)]__			System.arraycopy(this.value, 0, value, 0, this.len)__			this.value = value__		}_	};grow,and,retain,content;private,void,grow,int,size,if,this,value,length,size,char,value,new,char,math,max,this,value,length,3,2,size,system,arraycopy,this,value,0,value,0,this,len,this,value,value
StringValue -> private void grow(int size);1443521887;Grow and retain content.;private void grow(int size) {_		if (this.value.length < size) {_			char[] value = new char[ Math.max(this.value.length * 3 / 2, size)]__			System.arraycopy(this.value, 0, value, 0, this.len)__			this.value = value__		}_	};grow,and,retain,content;private,void,grow,int,size,if,this,value,length,size,char,value,new,char,math,max,this,value,length,3,2,size,system,arraycopy,this,value,0,value,0,this,len,this,value,value
StringValue -> private void grow(int size);1446112342;Grow and retain content.;private void grow(int size) {_		if (this.value.length < size) {_			char[] value = new char[ Math.max(this.value.length * 3 / 2, size)]__			System.arraycopy(this.value, 0, value, 0, this.len)__			this.value = value__		}_	};grow,and,retain,content;private,void,grow,int,size,if,this,value,length,size,char,value,new,char,math,max,this,value,length,3,2,size,system,arraycopy,this,value,0,value,0,this,len,this,value,value
StringValue -> private void grow(int size);1452178883;Grow and retain content.;private void grow(int size) {_		if (this.value.length < size) {_			char[] value = new char[ Math.max(this.value.length * 3 / 2, size)]__			System.arraycopy(this.value, 0, value, 0, this.len)__			this.value = value__		}_	};grow,and,retain,content;private,void,grow,int,size,if,this,value,length,size,char,value,new,char,math,max,this,value,length,3,2,size,system,arraycopy,this,value,0,value,0,this,len,this,value,value
StringValue -> private void grow(int size);1457441341;Grow and retain content.;private void grow(int size) {_		if (this.value.length < size) {_			char[] value = new char[ Math.max(this.value.length * 3 / 2, size)]__			System.arraycopy(this.value, 0, value, 0, this.len)__			this.value = value__		}_	};grow,and,retain,content;private,void,grow,int,size,if,this,value,length,size,char,value,new,char,math,max,this,value,length,3,2,size,system,arraycopy,this,value,0,value,0,this,len,this,value,value
StringValue -> private void grow(int size);1460741894;Grow and retain content.;private void grow(int size) {_		if (this.value.length < size) {_			char[] value = new char[ Math.max(this.value.length * 3 / 2, size)]__			System.arraycopy(this.value, 0, value, 0, this.len)__			this.value = value__		}_	};grow,and,retain,content;private,void,grow,int,size,if,this,value,length,size,char,value,new,char,math,max,this,value,length,3,2,size,system,arraycopy,this,value,0,value,0,this,len,this,value,value
StringValue -> private void grow(int size);1471549817;Grow and retain content.;private void grow(int size) {_		if (this.value.length < size) {_			char[] value = new char[ Math.max(this.value.length * 3 / 2, size)]__			System.arraycopy(this.value, 0, value, 0, this.len)__			this.value = value__		}_	};grow,and,retain,content;private,void,grow,int,size,if,this,value,length,size,char,value,new,char,math,max,this,value,length,3,2,size,system,arraycopy,this,value,0,value,0,this,len,this,value,value
StringValue -> private void grow(int size);1529010948;Grow and retain content.;private void grow(int size) {_		if (this.value.length < size) {_			char[] value = new char[ Math.max(this.value.length * 3 / 2, size)]__			System.arraycopy(this.value, 0, value, 0, this.len)__			this.value = value__		}_	};grow,and,retain,content;private,void,grow,int,size,if,this,value,length,size,char,value,new,char,math,max,this,value,length,3,2,size,system,arraycopy,this,value,0,value,0,this,len,this,value,value
StringValue -> private void grow(int size);1530185676;Grow and retain content.;private void grow(int size) {_		if (this.value.length < size) {_			char[] value = new char[ Math.max(this.value.length * 3 / 2, size)]__			System.arraycopy(this.value, 0, value, 0, this.len)__			this.value = value__		}_	};grow,and,retain,content;private,void,grow,int,size,if,this,value,length,size,char,value,new,char,math,max,this,value,length,3,2,size,system,arraycopy,this,value,0,value,0,this,len,this,value,value
StringValue -> public boolean startsWith(CharSequence prefix, int startIndex);1405024514;Checks whether the substring, starting at the specified index, starts with the given prefix string.__@param prefix The prefix character sequence._@param startIndex The position to start checking for the prefix.__@return True, if this StringValue substring, starting at position <code>startIndex</code> has </code>prefix</code>_as its prefix.;public boolean startsWith(CharSequence prefix, int startIndex) {_		final char[] thisChars = this.value__		final int pLen = this.len__		final int sLen = prefix.length()__	_		if ((startIndex < 0) || (startIndex > pLen - sLen)) {_			return false__		}_		_		int sPos = 0__		while (sPos < sLen) {_			if (thisChars[startIndex++] != prefix.charAt(sPos++)) {_				return false__			}_		}_		return true__	};checks,whether,the,substring,starting,at,the,specified,index,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,param,start,index,the,position,to,start,checking,for,the,prefix,return,true,if,this,string,value,substring,starting,at,position,code,start,index,code,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,int,start,index,final,char,this,chars,this,value,final,int,p,len,this,len,final,int,s,len,prefix,length,if,start,index,0,start,index,p,len,s,len,return,false,int,s,pos,0,while,s,pos,s,len,if,this,chars,start,index,prefix,char,at,s,pos,return,false,return,true
StringValue -> public boolean startsWith(CharSequence prefix, int startIndex);1405090423;Checks whether the substring, starting at the specified index, starts with the given prefix string.__@param prefix The prefix character sequence._@param startIndex The position to start checking for the prefix.__@return True, if this StringValue substring, starting at position <code>startIndex</code> has </code>prefix</code>_as its prefix.;public boolean startsWith(CharSequence prefix, int startIndex) {_		final char[] thisChars = this.value__		final int pLen = this.len__		final int sLen = prefix.length()__	_		if ((startIndex < 0) || (startIndex > pLen - sLen)) {_			return false__		}_		_		int sPos = 0__		while (sPos < sLen) {_			if (thisChars[startIndex++] != prefix.charAt(sPos++)) {_				return false__			}_		}_		return true__	};checks,whether,the,substring,starting,at,the,specified,index,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,param,start,index,the,position,to,start,checking,for,the,prefix,return,true,if,this,string,value,substring,starting,at,position,code,start,index,code,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,int,start,index,final,char,this,chars,this,value,final,int,p,len,this,len,final,int,s,len,prefix,length,if,start,index,0,start,index,p,len,s,len,return,false,int,s,pos,0,while,s,pos,s,len,if,this,chars,start,index,prefix,char,at,s,pos,return,false,return,true
StringValue -> public boolean startsWith(CharSequence prefix, int startIndex);1411473593;Checks whether the substring, starting at the specified index, starts with the given prefix string.__@param prefix The prefix character sequence._@param startIndex The position to start checking for the prefix.__@return True, if this StringValue substring, starting at position <code>startIndex</code> has </code>prefix</code>_as its prefix.;public boolean startsWith(CharSequence prefix, int startIndex) {_		final char[] thisChars = this.value__		final int pLen = this.len__		final int sLen = prefix.length()__	_		if ((startIndex < 0) || (startIndex > pLen - sLen)) {_			return false__		}_		_		int sPos = 0__		while (sPos < sLen) {_			if (thisChars[startIndex++] != prefix.charAt(sPos++)) {_				return false__			}_		}_		return true__	};checks,whether,the,substring,starting,at,the,specified,index,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,param,start,index,the,position,to,start,checking,for,the,prefix,return,true,if,this,string,value,substring,starting,at,position,code,start,index,code,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,int,start,index,final,char,this,chars,this,value,final,int,p,len,this,len,final,int,s,len,prefix,length,if,start,index,0,start,index,p,len,s,len,return,false,int,s,pos,0,while,s,pos,s,len,if,this,chars,start,index,prefix,char,at,s,pos,return,false,return,true
StringValue -> public boolean startsWith(CharSequence prefix, int startIndex);1414786554;Checks whether the substring, starting at the specified index, starts with the given prefix string.__@param prefix The prefix character sequence._@param startIndex The position to start checking for the prefix.__@return True, if this StringValue substring, starting at position <code>startIndex</code> has </code>prefix</code>_as its prefix.;public boolean startsWith(CharSequence prefix, int startIndex) {_		final char[] thisChars = this.value__		final int pLen = this.len__		final int sLen = prefix.length()__	_		if ((startIndex < 0) || (startIndex > pLen - sLen)) {_			return false__		}_		_		int sPos = 0__		while (sPos < sLen) {_			if (thisChars[startIndex++] != prefix.charAt(sPos++)) {_				return false__			}_		}_		return true__	};checks,whether,the,substring,starting,at,the,specified,index,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,param,start,index,the,position,to,start,checking,for,the,prefix,return,true,if,this,string,value,substring,starting,at,position,code,start,index,code,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,int,start,index,final,char,this,chars,this,value,final,int,p,len,this,len,final,int,s,len,prefix,length,if,start,index,0,start,index,p,len,s,len,return,false,int,s,pos,0,while,s,pos,s,len,if,this,chars,start,index,prefix,char,at,s,pos,return,false,return,true
StringValue -> public boolean startsWith(CharSequence prefix, int startIndex);1418912934;Checks whether the substring, starting at the specified index, starts with the given prefix string.__@param prefix The prefix character sequence._@param startIndex The position to start checking for the prefix.__@return True, if this StringValue substring, starting at position <code>startIndex</code> has </code>prefix</code>_as its prefix.;public boolean startsWith(CharSequence prefix, int startIndex) {_		final char[] thisChars = this.value__		final int pLen = this.len__		final int sLen = prefix.length()__	_		if ((startIndex < 0) || (startIndex > pLen - sLen)) {_			return false__		}_		_		int sPos = 0__		while (sPos < sLen) {_			if (thisChars[startIndex++] != prefix.charAt(sPos++)) {_				return false__			}_		}_		return true__	};checks,whether,the,substring,starting,at,the,specified,index,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,param,start,index,the,position,to,start,checking,for,the,prefix,return,true,if,this,string,value,substring,starting,at,position,code,start,index,code,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,int,start,index,final,char,this,chars,this,value,final,int,p,len,this,len,final,int,s,len,prefix,length,if,start,index,0,start,index,p,len,s,len,return,false,int,s,pos,0,while,s,pos,s,len,if,this,chars,start,index,prefix,char,at,s,pos,return,false,return,true
StringValue -> public boolean startsWith(CharSequence prefix, int startIndex);1431696388;Checks whether the substring, starting at the specified index, starts with the given prefix string.__@param prefix The prefix character sequence._@param startIndex The position to start checking for the prefix.__@return True, if this StringValue substring, starting at position <code>startIndex</code> has </code>prefix</code>_as its prefix.;public boolean startsWith(CharSequence prefix, int startIndex) {_		final char[] thisChars = this.value__		final int pLen = this.len__		final int sLen = prefix.length()__	_		if ((startIndex < 0) || (startIndex > pLen - sLen)) {_			return false__		}_		_		int sPos = 0__		while (sPos < sLen) {_			if (thisChars[startIndex++] != prefix.charAt(sPos++)) {_				return false__			}_		}_		return true__	};checks,whether,the,substring,starting,at,the,specified,index,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,param,start,index,the,position,to,start,checking,for,the,prefix,return,true,if,this,string,value,substring,starting,at,position,code,start,index,code,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,int,start,index,final,char,this,chars,this,value,final,int,p,len,this,len,final,int,s,len,prefix,length,if,start,index,0,start,index,p,len,s,len,return,false,int,s,pos,0,while,s,pos,s,len,if,this,chars,start,index,prefix,char,at,s,pos,return,false,return,true
StringValue -> public boolean startsWith(CharSequence prefix, int startIndex);1434963934;Checks whether the substring, starting at the specified index, starts with the given prefix string.__@param prefix The prefix character sequence._@param startIndex The position to start checking for the prefix.__@return True, if this StringValue substring, starting at position <code>startIndex</code> has </code>prefix</code>_as its prefix.;public boolean startsWith(CharSequence prefix, int startIndex) {_		final char[] thisChars = this.value__		final int pLen = this.len__		final int sLen = prefix.length()__	_		if ((startIndex < 0) || (startIndex > pLen - sLen)) {_			return false__		}_		_		int sPos = 0__		while (sPos < sLen) {_			if (thisChars[startIndex++] != prefix.charAt(sPos++)) {_				return false__			}_		}_		return true__	};checks,whether,the,substring,starting,at,the,specified,index,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,param,start,index,the,position,to,start,checking,for,the,prefix,return,true,if,this,string,value,substring,starting,at,position,code,start,index,code,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,int,start,index,final,char,this,chars,this,value,final,int,p,len,this,len,final,int,s,len,prefix,length,if,start,index,0,start,index,p,len,s,len,return,false,int,s,pos,0,while,s,pos,s,len,if,this,chars,start,index,prefix,char,at,s,pos,return,false,return,true
StringValue -> public boolean startsWith(CharSequence prefix, int startIndex);1434974504;Checks whether the substring, starting at the specified index, starts with the given prefix string.__@param prefix The prefix character sequence._@param startIndex The position to start checking for the prefix.__@return True, if this StringValue substring, starting at position <code>startIndex</code> has </code>prefix</code>_as its prefix.;public boolean startsWith(CharSequence prefix, int startIndex) {_		final char[] thisChars = this.value__		final int pLen = this.len__		final int sLen = prefix.length()__	_		if ((startIndex < 0) || (startIndex > pLen - sLen)) {_			return false__		}_		_		int sPos = 0__		while (sPos < sLen) {_			if (thisChars[startIndex++] != prefix.charAt(sPos++)) {_				return false__			}_		}_		return true__	};checks,whether,the,substring,starting,at,the,specified,index,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,param,start,index,the,position,to,start,checking,for,the,prefix,return,true,if,this,string,value,substring,starting,at,position,code,start,index,code,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,int,start,index,final,char,this,chars,this,value,final,int,p,len,this,len,final,int,s,len,prefix,length,if,start,index,0,start,index,p,len,s,len,return,false,int,s,pos,0,while,s,pos,s,len,if,this,chars,start,index,prefix,char,at,s,pos,return,false,return,true
StringValue -> public boolean startsWith(CharSequence prefix, int startIndex);1443521887;Checks whether the substring, starting at the specified index, starts with the given prefix string.__@param prefix The prefix character sequence._@param startIndex The position to start checking for the prefix.__@return True, if this StringValue substring, starting at position <code>startIndex</code> has </code>prefix</code>_as its prefix.;public boolean startsWith(CharSequence prefix, int startIndex) {_		final char[] thisChars = this.value__		final int pLen = this.len__		final int sLen = prefix.length()__	_		if ((startIndex < 0) || (startIndex > pLen - sLen)) {_			return false__		}_		_		int sPos = 0__		while (sPos < sLen) {_			if (thisChars[startIndex++] != prefix.charAt(sPos++)) {_				return false__			}_		}_		return true__	};checks,whether,the,substring,starting,at,the,specified,index,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,param,start,index,the,position,to,start,checking,for,the,prefix,return,true,if,this,string,value,substring,starting,at,position,code,start,index,code,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,int,start,index,final,char,this,chars,this,value,final,int,p,len,this,len,final,int,s,len,prefix,length,if,start,index,0,start,index,p,len,s,len,return,false,int,s,pos,0,while,s,pos,s,len,if,this,chars,start,index,prefix,char,at,s,pos,return,false,return,true
StringValue -> public boolean startsWith(CharSequence prefix, int startIndex);1446112342;Checks whether the substring, starting at the specified index, starts with the given prefix string.__@param prefix The prefix character sequence._@param startIndex The position to start checking for the prefix.__@return True, if this StringValue substring, starting at position <code>startIndex</code> has <code>prefix</code>_as its prefix.;public boolean startsWith(CharSequence prefix, int startIndex) {_		final char[] thisChars = this.value__		final int pLen = this.len__		final int sLen = prefix.length()__	_		if ((startIndex < 0) || (startIndex > pLen - sLen)) {_			return false__		}_		_		int sPos = 0__		while (sPos < sLen) {_			if (thisChars[startIndex++] != prefix.charAt(sPos++)) {_				return false__			}_		}_		return true__	};checks,whether,the,substring,starting,at,the,specified,index,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,param,start,index,the,position,to,start,checking,for,the,prefix,return,true,if,this,string,value,substring,starting,at,position,code,start,index,code,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,int,start,index,final,char,this,chars,this,value,final,int,p,len,this,len,final,int,s,len,prefix,length,if,start,index,0,start,index,p,len,s,len,return,false,int,s,pos,0,while,s,pos,s,len,if,this,chars,start,index,prefix,char,at,s,pos,return,false,return,true
StringValue -> public boolean startsWith(CharSequence prefix, int startIndex);1452178883;Checks whether the substring, starting at the specified index, starts with the given prefix string.__@param prefix The prefix character sequence._@param startIndex The position to start checking for the prefix.__@return True, if this StringValue substring, starting at position <code>startIndex</code> has <code>prefix</code>_as its prefix.;public boolean startsWith(CharSequence prefix, int startIndex) {_		final char[] thisChars = this.value__		final int pLen = this.len__		final int sLen = prefix.length()__	_		if ((startIndex < 0) || (startIndex > pLen - sLen)) {_			return false__		}_		_		int sPos = 0__		while (sPos < sLen) {_			if (thisChars[startIndex++] != prefix.charAt(sPos++)) {_				return false__			}_		}_		return true__	};checks,whether,the,substring,starting,at,the,specified,index,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,param,start,index,the,position,to,start,checking,for,the,prefix,return,true,if,this,string,value,substring,starting,at,position,code,start,index,code,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,int,start,index,final,char,this,chars,this,value,final,int,p,len,this,len,final,int,s,len,prefix,length,if,start,index,0,start,index,p,len,s,len,return,false,int,s,pos,0,while,s,pos,s,len,if,this,chars,start,index,prefix,char,at,s,pos,return,false,return,true
StringValue -> public boolean startsWith(CharSequence prefix, int startIndex);1457441341;Checks whether the substring, starting at the specified index, starts with the given prefix string.__@param prefix The prefix character sequence._@param startIndex The position to start checking for the prefix.__@return True, if this StringValue substring, starting at position <code>startIndex</code> has <code>prefix</code>_as its prefix.;public boolean startsWith(CharSequence prefix, int startIndex) {_		final char[] thisChars = this.value__		final int pLen = this.len__		final int sLen = prefix.length()__	_		if ((startIndex < 0) || (startIndex > pLen - sLen)) {_			return false__		}_		_		int sPos = 0__		while (sPos < sLen) {_			if (thisChars[startIndex++] != prefix.charAt(sPos++)) {_				return false__			}_		}_		return true__	};checks,whether,the,substring,starting,at,the,specified,index,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,param,start,index,the,position,to,start,checking,for,the,prefix,return,true,if,this,string,value,substring,starting,at,position,code,start,index,code,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,int,start,index,final,char,this,chars,this,value,final,int,p,len,this,len,final,int,s,len,prefix,length,if,start,index,0,start,index,p,len,s,len,return,false,int,s,pos,0,while,s,pos,s,len,if,this,chars,start,index,prefix,char,at,s,pos,return,false,return,true
StringValue -> public boolean startsWith(CharSequence prefix, int startIndex);1460741894;Checks whether the substring, starting at the specified index, starts with the given prefix string.__@param prefix The prefix character sequence._@param startIndex The position to start checking for the prefix.__@return True, if this StringValue substring, starting at position <code>startIndex</code> has <code>prefix</code>_as its prefix.;public boolean startsWith(CharSequence prefix, int startIndex) {_		final char[] thisChars = this.value__		final int pLen = this.len__		final int sLen = prefix.length()__	_		if ((startIndex < 0) || (startIndex > pLen - sLen)) {_			return false__		}_		_		int sPos = 0__		while (sPos < sLen) {_			if (thisChars[startIndex++] != prefix.charAt(sPos++)) {_				return false__			}_		}_		return true__	};checks,whether,the,substring,starting,at,the,specified,index,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,param,start,index,the,position,to,start,checking,for,the,prefix,return,true,if,this,string,value,substring,starting,at,position,code,start,index,code,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,int,start,index,final,char,this,chars,this,value,final,int,p,len,this,len,final,int,s,len,prefix,length,if,start,index,0,start,index,p,len,s,len,return,false,int,s,pos,0,while,s,pos,s,len,if,this,chars,start,index,prefix,char,at,s,pos,return,false,return,true
StringValue -> public boolean startsWith(CharSequence prefix, int startIndex);1471549817;Checks whether the substring, starting at the specified index, starts with the given prefix string.__@param prefix The prefix character sequence._@param startIndex The position to start checking for the prefix.__@return True, if this StringValue substring, starting at position <code>startIndex</code> has <code>prefix</code>_as its prefix.;public boolean startsWith(CharSequence prefix, int startIndex) {_		final char[] thisChars = this.value__		final int pLen = this.len__		final int sLen = prefix.length()__	_		if ((startIndex < 0) || (startIndex > pLen - sLen)) {_			return false__		}_		_		int sPos = 0__		while (sPos < sLen) {_			if (thisChars[startIndex++] != prefix.charAt(sPos++)) {_				return false__			}_		}_		return true__	};checks,whether,the,substring,starting,at,the,specified,index,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,param,start,index,the,position,to,start,checking,for,the,prefix,return,true,if,this,string,value,substring,starting,at,position,code,start,index,code,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,int,start,index,final,char,this,chars,this,value,final,int,p,len,this,len,final,int,s,len,prefix,length,if,start,index,0,start,index,p,len,s,len,return,false,int,s,pos,0,while,s,pos,s,len,if,this,chars,start,index,prefix,char,at,s,pos,return,false,return,true
StringValue -> public boolean startsWith(CharSequence prefix, int startIndex);1529010948;Checks whether the substring, starting at the specified index, starts with the given prefix string.__@param prefix The prefix character sequence._@param startIndex The position to start checking for the prefix.__@return True, if this StringValue substring, starting at position <code>startIndex</code> has <code>prefix</code>_as its prefix.;public boolean startsWith(CharSequence prefix, int startIndex) {_		final char[] thisChars = this.value__		final int pLen = this.len__		final int sLen = prefix.length()__	_		if ((startIndex < 0) || (startIndex > pLen - sLen)) {_			return false__		}_		_		int sPos = 0__		while (sPos < sLen) {_			if (thisChars[startIndex++] != prefix.charAt(sPos++)) {_				return false__			}_		}_		return true__	};checks,whether,the,substring,starting,at,the,specified,index,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,param,start,index,the,position,to,start,checking,for,the,prefix,return,true,if,this,string,value,substring,starting,at,position,code,start,index,code,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,int,start,index,final,char,this,chars,this,value,final,int,p,len,this,len,final,int,s,len,prefix,length,if,start,index,0,start,index,p,len,s,len,return,false,int,s,pos,0,while,s,pos,s,len,if,this,chars,start,index,prefix,char,at,s,pos,return,false,return,true
StringValue -> public boolean startsWith(CharSequence prefix, int startIndex);1530185676;Checks whether the substring, starting at the specified index, starts with the given prefix string.__@param prefix The prefix character sequence._@param startIndex The position to start checking for the prefix.__@return True, if this StringValue substring, starting at position <code>startIndex</code> has <code>prefix</code>_as its prefix.;public boolean startsWith(CharSequence prefix, int startIndex) {_		final char[] thisChars = this.value__		final int pLen = this.len__		final int sLen = prefix.length()__	_		if ((startIndex < 0) || (startIndex > pLen - sLen)) {_			return false__		}_		_		int sPos = 0__		while (sPos < sLen) {_			if (thisChars[startIndex++] != prefix.charAt(sPos++)) {_				return false__			}_		}_		return true__	};checks,whether,the,substring,starting,at,the,specified,index,starts,with,the,given,prefix,string,param,prefix,the,prefix,character,sequence,param,start,index,the,position,to,start,checking,for,the,prefix,return,true,if,this,string,value,substring,starting,at,position,code,start,index,code,has,code,prefix,code,as,its,prefix;public,boolean,starts,with,char,sequence,prefix,int,start,index,final,char,this,chars,this,value,final,int,p,len,this,len,final,int,s,len,prefix,length,if,start,index,0,start,index,p,len,s,len,return,false,int,s,pos,0,while,s,pos,s,len,if,this,chars,start,index,prefix,char,at,s,pos,return,false,return,true
StringValue -> private final void grow(int size);1405024514;Grow and retain content.;private final void grow(int size) {_		if (this.value.length < size) {_			char[] value = new char[ Math.max(this.value.length * 3 / 2, size)]__			System.arraycopy(this.value, 0, value, 0, this.len)__			this.value = value__		}_	};grow,and,retain,content;private,final,void,grow,int,size,if,this,value,length,size,char,value,new,char,math,max,this,value,length,3,2,size,system,arraycopy,this,value,0,value,0,this,len,this,value,value
StringValue -> private final void grow(int size);1405090423;Grow and retain content.;private final void grow(int size) {_		if (this.value.length < size) {_			char[] value = new char[ Math.max(this.value.length * 3 / 2, size)]__			System.arraycopy(this.value, 0, value, 0, this.len)__			this.value = value__		}_	};grow,and,retain,content;private,final,void,grow,int,size,if,this,value,length,size,char,value,new,char,math,max,this,value,length,3,2,size,system,arraycopy,this,value,0,value,0,this,len,this,value,value
StringValue -> private final void grow(int size);1411473593;Grow and retain content.;private final void grow(int size) {_		if (this.value.length < size) {_			char[] value = new char[ Math.max(this.value.length * 3 / 2, size)]__			System.arraycopy(this.value, 0, value, 0, this.len)__			this.value = value__		}_	};grow,and,retain,content;private,final,void,grow,int,size,if,this,value,length,size,char,value,new,char,math,max,this,value,length,3,2,size,system,arraycopy,this,value,0,value,0,this,len,this,value,value
StringValue -> public StringValue(CharSequence value);1405024514;Initializes this StringValue to the value of the given string.__@param value The string containing the value for this StringValue.;public StringValue(CharSequence value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,the,value,of,the,given,string,param,value,the,string,containing,the,value,for,this,string,value;public,string,value,char,sequence,value,this,value,set,value,value
StringValue -> public StringValue(CharSequence value);1405090423;Initializes this StringValue to the value of the given string.__@param value The string containing the value for this StringValue.;public StringValue(CharSequence value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,the,value,of,the,given,string,param,value,the,string,containing,the,value,for,this,string,value;public,string,value,char,sequence,value,this,value,set,value,value
StringValue -> public StringValue(CharSequence value);1411473593;Initializes this StringValue to the value of the given string.__@param value The string containing the value for this StringValue.;public StringValue(CharSequence value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,the,value,of,the,given,string,param,value,the,string,containing,the,value,for,this,string,value;public,string,value,char,sequence,value,this,value,set,value,value
StringValue -> public StringValue(CharSequence value);1414786554;Initializes this StringValue to the value of the given string.__@param value The string containing the value for this StringValue.;public StringValue(CharSequence value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,the,value,of,the,given,string,param,value,the,string,containing,the,value,for,this,string,value;public,string,value,char,sequence,value,this,value,set,value,value
StringValue -> public StringValue(CharSequence value);1418912934;Initializes this StringValue to the value of the given string.__@param value The string containing the value for this StringValue.;public StringValue(CharSequence value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,the,value,of,the,given,string,param,value,the,string,containing,the,value,for,this,string,value;public,string,value,char,sequence,value,this,value,set,value,value
StringValue -> public StringValue(CharSequence value);1431696388;Initializes this StringValue to the value of the given string.__@param value The string containing the value for this StringValue.;public StringValue(CharSequence value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,the,value,of,the,given,string,param,value,the,string,containing,the,value,for,this,string,value;public,string,value,char,sequence,value,this,value,set,value,value
StringValue -> public StringValue(CharSequence value);1434963934;Initializes this StringValue to the value of the given string.__@param value The string containing the value for this StringValue.;public StringValue(CharSequence value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,the,value,of,the,given,string,param,value,the,string,containing,the,value,for,this,string,value;public,string,value,char,sequence,value,this,value,set,value,value
StringValue -> public StringValue(CharSequence value);1434974504;Initializes this StringValue to the value of the given string.__@param value The string containing the value for this StringValue.;public StringValue(CharSequence value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,the,value,of,the,given,string,param,value,the,string,containing,the,value,for,this,string,value;public,string,value,char,sequence,value,this,value,set,value,value
StringValue -> public StringValue(CharSequence value);1443521887;Initializes this StringValue to the value of the given string.__@param value The string containing the value for this StringValue.;public StringValue(CharSequence value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,the,value,of,the,given,string,param,value,the,string,containing,the,value,for,this,string,value;public,string,value,char,sequence,value,this,value,set,value,value
StringValue -> public StringValue(CharSequence value);1446112342;Initializes this StringValue to the value of the given string.__@param value The string containing the value for this StringValue.;public StringValue(CharSequence value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,the,value,of,the,given,string,param,value,the,string,containing,the,value,for,this,string,value;public,string,value,char,sequence,value,this,value,set,value,value
StringValue -> public StringValue(CharSequence value);1452178883;Initializes this StringValue to the value of the given string.__@param value The string containing the value for this StringValue.;public StringValue(CharSequence value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,the,value,of,the,given,string,param,value,the,string,containing,the,value,for,this,string,value;public,string,value,char,sequence,value,this,value,set,value,value
StringValue -> public StringValue(CharSequence value);1457441341;Initializes this StringValue to the value of the given string.__@param value The string containing the value for this StringValue.;public StringValue(CharSequence value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,the,value,of,the,given,string,param,value,the,string,containing,the,value,for,this,string,value;public,string,value,char,sequence,value,this,value,set,value,value
StringValue -> public StringValue(CharSequence value);1460741894;Initializes this StringValue to the value of the given string.__@param value The string containing the value for this StringValue.;public StringValue(CharSequence value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,the,value,of,the,given,string,param,value,the,string,containing,the,value,for,this,string,value;public,string,value,char,sequence,value,this,value,set,value,value
StringValue -> public StringValue(CharSequence value);1471549817;Initializes this StringValue to the value of the given string.__@param value The string containing the value for this StringValue.;public StringValue(CharSequence value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,the,value,of,the,given,string,param,value,the,string,containing,the,value,for,this,string,value;public,string,value,char,sequence,value,this,value,set,value,value
StringValue -> public StringValue(CharSequence value);1529010948;Initializes this StringValue to the value of the given string.__@param value The string containing the value for this StringValue.;public StringValue(CharSequence value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,the,value,of,the,given,string,param,value,the,string,containing,the,value,for,this,string,value;public,string,value,char,sequence,value,this,value,set,value,value
StringValue -> public StringValue(CharSequence value);1530185676;Initializes this StringValue to the value of the given string.__@param value The string containing the value for this StringValue.;public StringValue(CharSequence value) {_		this.value = EMPTY_STRING__		setValue(value)__	};initializes,this,string,value,to,the,value,of,the,given,string,param,value,the,string,containing,the,value,for,this,string,value;public,string,value,char,sequence,value,this,value,set,value,value
