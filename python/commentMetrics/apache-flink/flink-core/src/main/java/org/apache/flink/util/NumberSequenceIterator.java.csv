# id;timestamp;commentText;codeText;commentWords;codeWords
NumberSequenceIterator -> public NumberSequenceIterator(long from, long to);1411236168;Internal constructor to allow for empty iterators.__@param from The first number returned by the iterator._@param to The last number returned by the iterator.;public NumberSequenceIterator(long from, long to) {_		if (from > to) {_			throw new IllegalArgumentException("The 'to' value must not be smaller than the 'from' value.")__		}_		_		this.current = from__		this.to = to__	};internal,constructor,to,allow,for,empty,iterators,param,from,the,first,number,returned,by,the,iterator,param,to,the,last,number,returned,by,the,iterator;public,number,sequence,iterator,long,from,long,to,if,from,to,throw,new,illegal,argument,exception,the,to,value,must,not,be,smaller,than,the,from,value,this,current,from,this,to,to
NumberSequenceIterator -> public NumberSequenceIterator(long from, long to);1411473593;Internal constructor to allow for empty iterators.__@param from The first number returned by the iterator._@param to The last number returned by the iterator.;public NumberSequenceIterator(long from, long to) {_		if (from > to) {_			throw new IllegalArgumentException("The 'to' value must not be smaller than the 'from' value.")__		}_		_		this.current = from__		this.to = to__	};internal,constructor,to,allow,for,empty,iterators,param,from,the,first,number,returned,by,the,iterator,param,to,the,last,number,returned,by,the,iterator;public,number,sequence,iterator,long,from,long,to,if,from,to,throw,new,illegal,argument,exception,the,to,value,must,not,be,smaller,than,the,from,value,this,current,from,this,to,to
NumberSequenceIterator -> public NumberSequenceIterator(long from, long to);1423059671;Internal constructor to allow for empty iterators.__@param from The first number returned by the iterator._@param to The last number returned by the iterator.;public NumberSequenceIterator(long from, long to) {_		if (from > to) {_			throw new IllegalArgumentException("The 'to' value must not be smaller than the 'from' value.")__		}_		_		this.current = from__		this.to = to__	};internal,constructor,to,allow,for,empty,iterators,param,from,the,first,number,returned,by,the,iterator,param,to,the,last,number,returned,by,the,iterator;public,number,sequence,iterator,long,from,long,to,if,from,to,throw,new,illegal,argument,exception,the,to,value,must,not,be,smaller,than,the,from,value,this,current,from,this,to,to
NumberSequenceIterator -> public NumberSequenceIterator(long from, long to);1450111459;Creates a new splittable iterator, returning the range [from, to]._Both boundaries of the interval are inclusive.__@param from The first number returned by the iterator._@param to The last number returned by the iterator.;public NumberSequenceIterator(long from, long to) {_		if (from > to) {_			throw new IllegalArgumentException("The 'to' value must not be smaller than the 'from' value.")__		}_		_		this.current = from__		this.to = to__	};creates,a,new,splittable,iterator,returning,the,range,from,to,both,boundaries,of,the,interval,are,inclusive,param,from,the,first,number,returned,by,the,iterator,param,to,the,last,number,returned,by,the,iterator;public,number,sequence,iterator,long,from,long,to,if,from,to,throw,new,illegal,argument,exception,the,to,value,must,not,be,smaller,than,the,from,value,this,current,from,this,to,to
NumberSequenceIterator -> public NumberSequenceIterator(long from, long to);1452178883;Creates a new splittable iterator, returning the range [from, to]._Both boundaries of the interval are inclusive.__@param from The first number returned by the iterator._@param to The last number returned by the iterator.;public NumberSequenceIterator(long from, long to) {_		if (from > to) {_			throw new IllegalArgumentException("The 'to' value must not be smaller than the 'from' value.")__		}_		_		this.current = from__		this.to = to__	};creates,a,new,splittable,iterator,returning,the,range,from,to,both,boundaries,of,the,interval,are,inclusive,param,from,the,first,number,returned,by,the,iterator,param,to,the,last,number,returned,by,the,iterator;public,number,sequence,iterator,long,from,long,to,if,from,to,throw,new,illegal,argument,exception,the,to,value,must,not,be,smaller,than,the,from,value,this,current,from,this,to,to
NumberSequenceIterator -> public NumberSequenceIterator(long from, long to);1516295284;Creates a new splittable iterator, returning the range [from, to]._Both boundaries of the interval are inclusive.__@param from The first number returned by the iterator._@param to The last number returned by the iterator.;public NumberSequenceIterator(long from, long to) {_		if (from > to) {_			throw new IllegalArgumentException("The 'to' value must not be smaller than the 'from' value.")__		}__		this.current = from__		this.to = to__	};creates,a,new,splittable,iterator,returning,the,range,from,to,both,boundaries,of,the,interval,are,inclusive,param,from,the,first,number,returned,by,the,iterator,param,to,the,last,number,returned,by,the,iterator;public,number,sequence,iterator,long,from,long,to,if,from,to,throw,new,illegal,argument,exception,the,to,value,must,not,be,smaller,than,the,from,value,this,current,from,this,to,to
NumberSequenceIterator -> private NumberSequenceIterator(long from, long to, boolean mark);1405024514;Internal constructor to allow for empty iterators.__@param from_@param to_@param mark;private NumberSequenceIterator(long from, long to, boolean mark) {_		this.current = from__		this.to = to__	};internal,constructor,to,allow,for,empty,iterators,param,from,param,to,param,mark;private,number,sequence,iterator,long,from,long,to,boolean,mark,this,current,from,this,to,to
NumberSequenceIterator -> private NumberSequenceIterator(long from, long to, boolean mark);1405090423;Internal constructor to allow for empty iterators.__@param from_@param to_@param mark;private NumberSequenceIterator(long from, long to, boolean mark) {_		this.current = from__		this.to = to__	};internal,constructor,to,allow,for,empty,iterators,param,from,param,to,param,mark;private,number,sequence,iterator,long,from,long,to,boolean,mark,this,current,from,this,to,to
NumberSequenceIterator -> private NumberSequenceIterator(long from, long to, boolean unused);1411236168;Internal constructor to allow for empty iterators.__@param from The first number returned by the iterator._@param to The last number returned by the iterator._@param unused A dummy parameter to disambiguate the constructor.;private NumberSequenceIterator(long from, long to, boolean unused) {_		this.current = from__		this.to = to__	};internal,constructor,to,allow,for,empty,iterators,param,from,the,first,number,returned,by,the,iterator,param,to,the,last,number,returned,by,the,iterator,param,unused,a,dummy,parameter,to,disambiguate,the,constructor;private,number,sequence,iterator,long,from,long,to,boolean,unused,this,current,from,this,to,to
NumberSequenceIterator -> private NumberSequenceIterator(long from, long to, boolean unused);1411473593;Internal constructor to allow for empty iterators.__@param from The first number returned by the iterator._@param to The last number returned by the iterator._@param unused A dummy parameter to disambiguate the constructor.;private NumberSequenceIterator(long from, long to, boolean unused) {_		this.current = from__		this.to = to__	};internal,constructor,to,allow,for,empty,iterators,param,from,the,first,number,returned,by,the,iterator,param,to,the,last,number,returned,by,the,iterator,param,unused,a,dummy,parameter,to,disambiguate,the,constructor;private,number,sequence,iterator,long,from,long,to,boolean,unused,this,current,from,this,to,to
NumberSequenceIterator -> private NumberSequenceIterator(long from, long to, boolean unused);1423059671;Internal constructor to allow for empty iterators.__@param from The first number returned by the iterator._@param to The last number returned by the iterator._@param unused A dummy parameter to disambiguate the constructor.;private NumberSequenceIterator(long from, long to, boolean unused) {_		this.current = from__		this.to = to__	};internal,constructor,to,allow,for,empty,iterators,param,from,the,first,number,returned,by,the,iterator,param,to,the,last,number,returned,by,the,iterator,param,unused,a,dummy,parameter,to,disambiguate,the,constructor;private,number,sequence,iterator,long,from,long,to,boolean,unused,this,current,from,this,to,to
NumberSequenceIterator -> private NumberSequenceIterator(long from, long to, boolean unused);1450111459;Internal constructor to allow for empty iterators.__@param from The first number returned by the iterator._@param to The last number returned by the iterator._@param unused A dummy parameter to disambiguate the constructor.;private NumberSequenceIterator(long from, long to, boolean unused) {_		this.current = from__		this.to = to__	};internal,constructor,to,allow,for,empty,iterators,param,from,the,first,number,returned,by,the,iterator,param,to,the,last,number,returned,by,the,iterator,param,unused,a,dummy,parameter,to,disambiguate,the,constructor;private,number,sequence,iterator,long,from,long,to,boolean,unused,this,current,from,this,to,to
NumberSequenceIterator -> private NumberSequenceIterator(long from, long to, boolean unused);1452178883;Internal constructor to allow for empty iterators.__@param from The first number returned by the iterator._@param to The last number returned by the iterator._@param unused A dummy parameter to disambiguate the constructor.;private NumberSequenceIterator(long from, long to, boolean unused) {_		this.current = from__		this.to = to__	};internal,constructor,to,allow,for,empty,iterators,param,from,the,first,number,returned,by,the,iterator,param,to,the,last,number,returned,by,the,iterator,param,unused,a,dummy,parameter,to,disambiguate,the,constructor;private,number,sequence,iterator,long,from,long,to,boolean,unused,this,current,from,this,to,to
NumberSequenceIterator -> private NumberSequenceIterator(long from, long to, boolean unused);1516295284;Internal constructor to allow for empty iterators.__@param from The first number returned by the iterator._@param to The last number returned by the iterator._@param unused A dummy parameter to disambiguate the constructor.;private NumberSequenceIterator(long from, long to, boolean unused) {_		this.current = from__		this.to = to__	};internal,constructor,to,allow,for,empty,iterators,param,from,the,first,number,returned,by,the,iterator,param,to,the,last,number,returned,by,the,iterator,param,unused,a,dummy,parameter,to,disambiguate,the,constructor;private,number,sequence,iterator,long,from,long,to,boolean,unused,this,current,from,this,to,to
