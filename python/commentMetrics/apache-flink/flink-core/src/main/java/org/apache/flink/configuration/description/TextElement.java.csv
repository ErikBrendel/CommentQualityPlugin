commented;modifiers;parameterAmount;loc;comment;code
true;public,static;2;3;/**  * Creates a block of text with placeholders ("%s") that will be replaced with proper string representation of  * given {@link InlineElement}. For example:  *  * <p>{@code text("This is a text with a link %s", link("https://somepage", "to here"))}  *  * @param format text with placeholders for elements  * @param elements elements to be put in the text  * @return block of text  */ ;/**  * Creates a block of text with placeholders ("%s") that will be replaced with proper string representation of  * given {@link InlineElement}. For example:  *  * <p>{@code text("This is a text with a link %s", link("https://somepage", "to here"))}  *  * @param format text with placeholders for elements  * @param elements elements to be put in the text  * @return block of text  */ public static TextElement text(String format, InlineElement... elements) {     return new TextElement(format, Arrays.asList(elements)). }
true;public,static;1;3;/**  * Creates a simple block of text.  *  * @param text a simple block of text  * @return block of text  */ ;/**  * Creates a simple block of text.  *  * @param text a simple block of text  * @return block of text  */ public static TextElement text(String text) {     return new TextElement(text, Collections.emptyList()). }
true;public,static;1;5;/**  * Creates a block of text formatted as code.  *  * @param text a block of text that will be formatted as code  * @return block of text formatted as code  */ ;/**  * Creates a block of text formatted as code.  *  * @param text a block of text that will be formatted as code  * @return block of text formatted as code  */ public static TextElement code(String text) {     TextElement element = text(text).     element.textStyles.add(TextStyle.CODE).     return element. }
false;public;0;3;;public String getFormat() {     return format. }
false;public;0;3;;public List<InlineElement> getElements() {     return elements. }
false;public;0;3;;public EnumSet<TextStyle> getStyles() {     return textStyles. }
false;public;1;4;;@Override public void format(Formatter formatter) {     formatter.format(this). }
