commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Returns the name of the task  *  * @return The name of the task  */ ;/**  * Returns the name of the task  *  * @return The name of the task  */ public String getTaskName() {     return this.taskName. }
true;public;0;3;/**  * Gets the max parallelism aka the max number of subtasks.  */ ;/**  * Gets the max parallelism aka the max number of subtasks.  */ public int getMaxNumberOfParallelSubtasks() {     return maxNumberOfParallelSubtasks. }
true;public;0;3;/**  * Gets the number of this parallel subtask. The numbering starts from 0 and goes up to  * parallelism-1 (parallelism as returned by {@link #getNumberOfParallelSubtasks()}).  *  * @return The index of the parallel subtask.  */ ;/**  * Gets the number of this parallel subtask. The numbering starts from 0 and goes up to  * parallelism-1 (parallelism as returned by {@link #getNumberOfParallelSubtasks()}).  *  * @return The index of the parallel subtask.  */ public int getIndexOfThisSubtask() {     return this.indexOfSubtask. }
true;public;0;3;/**  * Gets the parallelism with which the parallel task runs.  *  * @return The parallelism with which the parallel task runs.  */ ;/**  * Gets the parallelism with which the parallel task runs.  *  * @return The parallelism with which the parallel task runs.  */ public int getNumberOfParallelSubtasks() {     return this.numberOfParallelSubtasks. }
true;public;0;3;/**  * Gets the attempt number of this parallel subtask. First attempt is numbered 0.  * The attempt number corresponds to the number of times this task has been restarted(after  * failure/cancellation) since the job was initially started.  *  * @return Attempt number of the subtask.  */ ;/**  * Gets the attempt number of this parallel subtask. First attempt is numbered 0.  * The attempt number corresponds to the number of times this task has been restarted(after  * failure/cancellation) since the job was initially started.  *  * @return Attempt number of the subtask.  */ public int getAttemptNumber() {     return this.attemptNumber. }
true;public;0;3;/**  * Returns the name of the task, appended with the subtask indicator, such as "MyTask (3/6)",  * where 3 would be ({@link #getIndexOfThisSubtask()} + 1), and 6 would be  * {@link #getNumberOfParallelSubtasks()}.  *  * @return The name of the task, with subtask indicator.  */ ;/**  * Returns the name of the task, appended with the subtask indicator, such as "MyTask (3/6)",  * where 3 would be ({@link #getIndexOfThisSubtask()} + 1), and 6 would be  * {@link #getNumberOfParallelSubtasks()}.  *  * @return The name of the task, with subtask indicator.  */ public String getTaskNameWithSubtasks() {     return this.taskNameWithSubtasks. }
true;public;0;3;/**  * Returns the allocation id for where this task is executed.  * @return the allocation id for where this task is executed.  */ ;/**  * Returns the allocation id for where this task is executed.  * @return the allocation id for where this task is executed.  */ public String getAllocationIDAsString() {     return allocationIDAsString. }
