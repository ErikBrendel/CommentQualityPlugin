commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isImmutableType() {     return false. }
false;public;0;4;;@Override public FloatValue createInstance() {     return new FloatValue(). }
false;public;1;4;;@Override public FloatValue copy(FloatValue from) {     return copy(from, new FloatValue()). }
false;public;2;5;;@Override public FloatValue copy(FloatValue from, FloatValue reuse) {     reuse.setValue(from.getValue()).     return reuse. }
false;public;0;4;;@Override public int getLength() {     return 4. }
false;public;2;4;;@Override public void serialize(FloatValue record, DataOutputView target) throws IOException {     record.write(target). }
false;public;1;4;;@Override public FloatValue deserialize(DataInputView source) throws IOException {     return deserialize(new FloatValue(), source). }
false;public;2;5;;@Override public FloatValue deserialize(FloatValue reuse, DataInputView source) throws IOException {     reuse.read(source).     return reuse. }
false;public;2;4;;@Override public void copy(DataInputView source, DataOutputView target) throws IOException {     target.writeFloat(source.readFloat()). }
false;public;0;4;;@Override public TypeSerializerSnapshot<FloatValue> snapshotConfiguration() {     return new FloatValueSerializerSnapshot(). }
