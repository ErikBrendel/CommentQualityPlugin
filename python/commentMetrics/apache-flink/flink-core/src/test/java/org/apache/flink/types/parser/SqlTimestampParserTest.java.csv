commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Override public String[] getValidTestValues() {     return new String[] { "1970-01-01 00:00:00.000", "1990-10-14 02:42:25", "1990-10-14 02:42:25.123", "1990-10-14 02:42:25.123000001", "1990-10-14 02:42:25.123000002", "2013-08-12 14:15:59.478", "2013-08-12 14:15:59.47", "0000-01-01 00:00:00.000" }. }
false;public;0;9;;@Override public Timestamp[] getValidTestResults() {     return new Timestamp[] { Timestamp.valueOf("1970-01-01 00:00:00.000"), Timestamp.valueOf("1990-10-14 02:42:25"), Timestamp.valueOf("1990-10-14 02:42:25.123"), Timestamp.valueOf("1990-10-14 02:42:25.123000001"), Timestamp.valueOf("1990-10-14 02:42:25.123000002"), Timestamp.valueOf("2013-08-12 14:15:59.478"), Timestamp.valueOf("2013-08-12 14:15:59.47"), Timestamp.valueOf("0000-01-01 00:00:00.000") }. }
false;public;0;8;;@Override public String[] getInvalidTestValues() {     return new String[] { " 2013-08-12 14:15:59.479", "2013-08-12 14:15:59.479 ", "1970-01-01 00:00::00", "00x00:00", "2013/08/12", "0000-01-01 00:00:00.f00", "2013-08-12 14:15:59.4788888888888888", " ", "\t" }. }
false;public;0;4;;@Override public boolean allowsEmptyField() {     return false. }
false;public;0;4;;@Override public FieldParser<Timestamp> getParser() {     return new SqlTimestampParser(). }
false;public;0;4;;@Override public Class<Timestamp> getTypeClass() {     return Timestamp.class. }
