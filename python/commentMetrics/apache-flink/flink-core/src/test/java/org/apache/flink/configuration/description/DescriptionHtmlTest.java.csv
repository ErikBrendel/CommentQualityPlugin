commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testDescriptionWithLink() {     Description description = Description.builder().text("This is a text with a link %s", link("https://somepage", "to here")).build().     String formattedDescription = new HtmlFormatter().format(description).     assertEquals("This is a text with a link <a href=\"https://somepage\">" + "to here</a>", formattedDescription). }
false;public;0;10;;@Test public void testDescriptionWithPercents() {     Description description = Description.builder().text("This is a text that has some percentage value of 20%.").build().     String formattedDescription = new HtmlFormatter().format(description).     assertEquals("This is a text that has some percentage value of 20%.", formattedDescription). }
false;public;0;12;;@Test public void testDescriptionWithMultipleLinks() {     Description description = Description.builder().text("This is a text with a link %s and another %s", link("https://somepage", "to here"), link("https://link")).build().     String formattedDescription = new HtmlFormatter().format(description).     assertEquals("This is a text with a link <a href=\"https://somepage\">to here</a> and another " + "<a href=\"https://link\">https://link</a>", formattedDescription). }
false;public;0;17;;@Test public void testDescriptionWithList() {     Description description = Description.builder().text("This is some list: ").list(link("http://first_link"), text("this is second element of list with a %s", link("https://link"))).build().     String formattedDescription = new HtmlFormatter().format(description).     assertEquals("This is some list: <ul><li><a href=\"http://first_link\">http://first_link" + "</a></li><li>this is second element of list " + "with a <a href=\"https://link\">https://link</a></li></ul>", formattedDescription). }
false;public;0;14;;@Test public void testDescriptionWithLineBreak() {     Description description = Description.builder().text("This is first line.").linebreak().text("This is second line.").build().     String formattedDescription = new HtmlFormatter().format(description).     assertEquals("This is first line.<br />This is second line.", formattedDescription). }
false;public;0;15;;@Test public void testDescriptionWithListAndEscaping() {     Description description = Description.builder().text("This is some list: ").list(text("this is first element with illegal character '>' and '<'")).build().     String formattedDescription = new HtmlFormatter().format(description).     assertEquals("This is some list: <ul><li>this is first element with illegal character '&gt.' and '&lt.'</li></ul>", formattedDescription). }
