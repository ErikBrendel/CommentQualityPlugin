commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Before public void setup() {     stream = new ByteArrayInputStreamWithPos(data). }
true;public;0;17;/**  * Test setting position on a {@link ByteArrayInputStreamWithPos}.  */ ;/**  * Test setting position on a {@link ByteArrayInputStreamWithPos}.  */ @Test public void testSetPosition() throws Exception {     Assert.assertEquals(data.length, stream.available()).     Assert.assertEquals('0', stream.read()).     stream.setPosition(1).     Assert.assertEquals(data.length - 1, stream.available()).     Assert.assertEquals('1', stream.read()).     stream.setPosition(3).     Assert.assertEquals(data.length - 3, stream.available()).     Assert.assertEquals('3', stream.read()).     stream.setPosition(data.length).     Assert.assertEquals(0, stream.available()).     Assert.assertEquals(-1, stream.read()). }
true;public;0;6;/**  * Test that the expected position exceeds the capacity of the byte array.  */ ;/**  * Test that the expected position exceeds the capacity of the byte array.  */ @Test public void testSetTooLargePosition() throws Exception {     thrown.expect(IllegalArgumentException.class).     thrown.expectMessage("Position out of bounds.").     stream.setPosition(data.length + 1). }
true;public;0;6;/**  * Test setting a negative position.  */ ;/**  * Test setting a negative position.  */ @Test public void testSetNegativePosition() throws Exception {     thrown.expect(IllegalArgumentException.class).     thrown.expectMessage("Position out of bounds.").     stream.setPosition(-1). }
false;public;0;13;;@Test public void testSetBuffer() {     ByteArrayInputStreamWithPos in = new ByteArrayInputStreamWithPos().     Assert.assertEquals(-1, in.read()).     byte[] testData = new byte[] { 0x42, 0x43, 0x44, 0x45 }.     int off = 1.     int len = 2.     in.setBuffer(testData, off, len).     for (int i = 0. i < len. ++i) {         Assert.assertEquals(testData[i + off], in.read()).     }     Assert.assertEquals(-1, in.read()). }
