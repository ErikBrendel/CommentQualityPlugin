commented;modifiers;parameterAmount;loc;comment;code
true;public;0;6;/**  * All java and Flink classes must be loaded parent first.  */ ;/**  * All java and Flink classes must be loaded parent first.  */ @Test public void testAllCorePatterns() {     assertTrue(PARENT_FIRST_PACKAGES.contains("java.")).     assertTrue(PARENT_FIRST_PACKAGES.contains("org.apache.flink.")).     assertTrue(PARENT_FIRST_PACKAGES.contains("javax.annotation.")). }
true;public;0;8;/**  * To avoid multiple binding problems and warnings for logger frameworks, we load them  * parent-first.  */ ;/**  * To avoid multiple binding problems and warnings for logger frameworks, we load them  * parent-first.  */ @Test public void testLoggersParentFirst() {     assertTrue(PARENT_FIRST_PACKAGES.contains("org.slf4j")).     assertTrue(PARENT_FIRST_PACKAGES.contains("org.apache.log4j")).     assertTrue(PARENT_FIRST_PACKAGES.contains("org.apache.logging")).     assertTrue(PARENT_FIRST_PACKAGES.contains("org.apache.commons.logging")).     assertTrue(PARENT_FIRST_PACKAGES.contains("ch.qos.logback")). }
true;public;0;4;/**  * As long as Scala is not a pure user library, but is also used in the Flink runtime, we need  * to load all Scala classes parent-first.  */ ;/**  * As long as Scala is not a pure user library, but is also used in the Flink runtime, we need  * to load all Scala classes parent-first.  */ @Test public void testScalaParentFirst() {     assertTrue(PARENT_FIRST_PACKAGES.contains("scala.")). }
true;public;0;4;/**  * As long as we have Hadoop classes leaking through some of Flink's APIs (example bucketing sink),  * we need to make them parent first.  */ ;/**  * As long as we have Hadoop classes leaking through some of Flink's APIs (example bucketing sink),  * we need to make them parent first.  */ @Test public void testHadoopParentFirst() {     assertTrue(PARENT_FIRST_PACKAGES.contains("org.apache.hadoop.")). }
