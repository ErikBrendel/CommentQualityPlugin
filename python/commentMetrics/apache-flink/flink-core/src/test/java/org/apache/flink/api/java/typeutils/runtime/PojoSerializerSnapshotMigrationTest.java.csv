commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;21;;@SuppressWarnings("unchecked") @Parameterized.Parameters(name = "Test Specification = {0}") public static Collection<TestSpecification<?>> testSpecifications() {     final TestSpecifications testSpecifications = new TestSpecifications(MigrationVersion.v1_6, MigrationVersion.v1_7).     testSpecifications.add("pojo-serializer", PojoSerializer.class, PojoSerializerSnapshot.class, PojoSerializerSnapshotMigrationTest::testPojoSerializerSupplier).     testSpecifications.addWithCompatibilityMatcher("pojo-new-and-removed-fields-serializer", PojoSerializer.class, PojoSerializerSnapshot.class, PojoSerializerSnapshotMigrationTest::testPojoWithNewAndRemovedFieldsSerializerSupplier, hasSameCompatibilityAs(TypeSerializerSchemaCompatibility.compatibleAfterMigration())).     return testSpecifications.get(). }
false;private,static;0;7;;private static TypeSerializer<TestPojo> testPojoSerializerSupplier() {     TypeSerializer<TestPojo> serializer = TypeExtractor.createTypeInfo(TestPojo.class).createSerializer(new ExecutionConfig()).     assertTrue(serializer instanceof PojoSerializer).     return serializer. }
false;private,static;0;7;;private static TypeSerializer<TestPojoWithNewAndRemovedFields> testPojoWithNewAndRemovedFieldsSerializerSupplier() {     TypeSerializer<TestPojoWithNewAndRemovedFields> serializer = TypeExtractor.createTypeInfo(TestPojoWithNewAndRemovedFields.class).createSerializer(new ExecutionConfig()).     assertTrue(serializer instanceof PojoSerializer).     return serializer. }
