# id;timestamp;commentText;codeText;commentWords;codeWords
InitOutputPathTest -> @Test 	public void testErrorOccursUnSynchronized() throws Exception;1481715812;This test validates that this test case makes sense - that the error can be produced_in the absence of synchronization, if the threads make progress in a certain way,_here enforced by latches.;@Test_	public void testErrorOccursUnSynchronized() throws Exception {_		_		Field lock = FileSystem.class.getDeclaredField("OUTPUT_DIRECTORY_INIT_LOCK")__		lock.setAccessible(true)__		lock.set(null, new NoOpLock())___		try {_			_			_			runTest(true)__			fail("should fail with an exception")__		}_		catch (FileNotFoundException e) {_			_		}_		finally {_			_			lock.set(null, new ReentrantLock(true))__		}_	};this,test,validates,that,this,test,case,makes,sense,that,the,error,can,be,produced,in,the,absence,of,synchronization,if,the,threads,make,progress,in,a,certain,way,here,enforced,by,latches;test,public,void,test,error,occurs,un,synchronized,throws,exception,field,lock,file,system,class,get,declared,field,lock,set,accessible,true,lock,set,null,new,no,op,lock,try,run,test,true,fail,should,fail,with,an,exception,catch,file,not,found,exception,e,finally,lock,set,null,new,reentrant,lock,true
InitOutputPathTest -> @Test 	public void testErrorOccursUnSynchronized() throws Exception;1498220069;This test validates that this test case makes sense - that the error can be produced_in the absence of synchronization, if the threads make progress in a certain way,_here enforced by latches.;@Test_	public void testErrorOccursUnSynchronized() throws Exception {_		_		Field lock = FileSystem.class.getDeclaredField("OUTPUT_DIRECTORY_INIT_LOCK")__		lock.setAccessible(true)__		lock.set(null, new NoOpLock())___		try {_			_			_			runTest(true)__			fail("should fail with an exception")__		}_		catch (FileNotFoundException e) {_			_		}_		finally {_			_			lock.set(null, new ReentrantLock(true))__		}_	};this,test,validates,that,this,test,case,makes,sense,that,the,error,can,be,produced,in,the,absence,of,synchronization,if,the,threads,make,progress,in,a,certain,way,here,enforced,by,latches;test,public,void,test,error,occurs,un,synchronized,throws,exception,field,lock,file,system,class,get,declared,field,lock,set,accessible,true,lock,set,null,new,no,op,lock,try,run,test,true,fail,should,fail,with,an,exception,catch,file,not,found,exception,e,finally,lock,set,null,new,reentrant,lock,true
InitOutputPathTest -> @Test 	public void testErrorOccursUnSynchronized() throws Exception;1512410190;This test validates that this test case makes sense - that the error can be produced_in the absence of synchronization, if the threads make progress in a certain way,_here enforced by latches.;@Test_	public void testErrorOccursUnSynchronized() throws Exception {_		_		Field lock = FileSystem.class.getDeclaredField("OUTPUT_DIRECTORY_INIT_LOCK")__		lock.setAccessible(true)__		lock.set(null, new NoOpLock())___		try {_			_			_			runTest(true)__			fail("should fail with an exception")__		}_		catch (FileNotFoundException e) {_			_		}_		finally {_			_			lock.set(null, new ReentrantLock(true))__		}_	};this,test,validates,that,this,test,case,makes,sense,that,the,error,can,be,produced,in,the,absence,of,synchronization,if,the,threads,make,progress,in,a,certain,way,here,enforced,by,latches;test,public,void,test,error,occurs,un,synchronized,throws,exception,field,lock,file,system,class,get,declared,field,lock,set,accessible,true,lock,set,null,new,no,op,lock,try,run,test,true,fail,should,fail,with,an,exception,catch,file,not,found,exception,e,finally,lock,set,null,new,reentrant,lock,true
