commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Override public String[] getValidTestValues() {     return new String[] { "\"\\\"Hello World\\\"\"", "\"abcdefgh\"", "\"i\"", "\"jklmno\"", "\"abc|de|fgh\"", "\"abc&&&&def&&&&ghij\"", "\"i\"", "\"Hello9\"", "abcdefgh", "i", "jklmno", "Hello9" }. }
false;public;0;9;;@Override public String[] getValidTestResults() {     return new String[] { "\\\"Hello World\\\"", "abcdefgh", "i", "jklmno", "abc|de|fgh", "abc&&&&def&&&&ghij", "i", "Hello9", "abcdefgh", "i", "jklmno", "Hello9" }. }
false;public;0;6;;@Override public String[] getInvalidTestValues() {     return new String[] { "\"abcd\"ef", "\"abcdef" }. }
false;public;0;4;;@Override public boolean allowsEmptyField() {     return true. }
false;public;0;6;;@Override public FieldParser<String> getParser() {     StringParser p = new StringParser().     p.enableQuotedStringParsing((byte) '"').     return p. }
false;public;0;4;;@Override public Class<String> getTypeClass() {     return String.class. }
