commented;modifiers;parameterAmount;loc;comment;code
false;public;0;20;;@Test public void testGet() throws URISyntaxException, IOException {     String scheme = "file".     assertTrue(getFileSystemWithoutSafetyNet(scheme + ":///test/test") instanceof LocalFileSystem).     try {         getFileSystemWithoutSafetyNet(scheme + "://test/test").     } catch (IOException ioe) {         assertTrue(ioe.getMessage().startsWith("Found local file path with authority '")).     }     assertTrue(getFileSystemWithoutSafetyNet(scheme + ":/test/test") instanceof LocalFileSystem).     assertTrue(getFileSystemWithoutSafetyNet(scheme + ":test/test") instanceof LocalFileSystem).     assertTrue(getFileSystemWithoutSafetyNet("/test/test") instanceof LocalFileSystem).     assertTrue(getFileSystemWithoutSafetyNet("test/test") instanceof LocalFileSystem). }
false;private,static;1;10;;private static FileSystem getFileSystemWithoutSafetyNet(final String uri) throws URISyntaxException, IOException {     final FileSystem fileSystem = FileSystem.get(new URI(uri)).     if (fileSystem instanceof WrappingProxy) {         // noinspection unchecked         return WrappingProxyUtil.stripProxy((WrappingProxy<FileSystem>) fileSystem).     }     return fileSystem. }
