# id;timestamp;commentText;codeText;commentWords;codeWords
StateDescriptorTest -> @Test 	public void testSerializerDuplication() throws Exception;1521729960;FLINK-6775, tests that the returned serializer is duplicated._This allows to share the state descriptor across threads.;@Test_	public void testSerializerDuplication() throws Exception {_		_		_		TypeSerializer<String> statefulSerializer = new KryoSerializer<>(String.class, new ExecutionConfig())___		TestStateDescriptor<String> descr = new TestStateDescriptor<>("foobar", statefulSerializer)___		TypeSerializer<String> serializerA = descr.getSerializer()__		TypeSerializer<String> serializerB = descr.getSerializer()___		_		assertNotSame(serializerA, serializerB)__	};flink,6775,tests,that,the,returned,serializer,is,duplicated,this,allows,to,share,the,state,descriptor,across,threads;test,public,void,test,serializer,duplication,throws,exception,type,serializer,string,stateful,serializer,new,kryo,serializer,string,class,new,execution,config,test,state,descriptor,string,descr,new,test,state,descriptor,foobar,stateful,serializer,type,serializer,string,serializer,a,descr,get,serializer,type,serializer,string,serializer,b,descr,get,serializer,assert,not,same,serializer,a,serializer,b
StateDescriptorTest -> @Test 	public void testSerializerDuplication() throws Exception;1521729969;FLINK-6775, tests that the returned serializer is duplicated._This allows to share the state descriptor across threads.;@Test_	public void testSerializerDuplication() throws Exception {_		_		_		TypeSerializer<String> statefulSerializer = new KryoSerializer<>(String.class, new ExecutionConfig())___		TestStateDescriptor<String> descr = new TestStateDescriptor<>("foobar", statefulSerializer)___		TypeSerializer<String> serializerA = descr.getSerializer()__		TypeSerializer<String> serializerB = descr.getSerializer()___		_		assertNotSame(serializerA, serializerB)__	};flink,6775,tests,that,the,returned,serializer,is,duplicated,this,allows,to,share,the,state,descriptor,across,threads;test,public,void,test,serializer,duplication,throws,exception,type,serializer,string,stateful,serializer,new,kryo,serializer,string,class,new,execution,config,test,state,descriptor,string,descr,new,test,state,descriptor,foobar,stateful,serializer,type,serializer,string,serializer,a,descr,get,serializer,type,serializer,string,serializer,b,descr,get,serializer,assert,not,same,serializer,a,serializer,b
StateDescriptorTest -> @Test 	public void testSerializerDuplication() throws Exception;1529325710;FLINK-6775, tests that the returned serializer is duplicated._This allows to share the state descriptor across threads.;@Test_	public void testSerializerDuplication() throws Exception {_		_		_		TypeSerializer<String> statefulSerializer = new KryoSerializer<>(String.class, new ExecutionConfig())___		TestStateDescriptor<String> descr = new TestStateDescriptor<>("foobar", statefulSerializer)___		TypeSerializer<String> serializerA = descr.getSerializer()__		TypeSerializer<String> serializerB = descr.getSerializer()___		_		assertNotSame(serializerA, serializerB)__	};flink,6775,tests,that,the,returned,serializer,is,duplicated,this,allows,to,share,the,state,descriptor,across,threads;test,public,void,test,serializer,duplication,throws,exception,type,serializer,string,stateful,serializer,new,kryo,serializer,string,class,new,execution,config,test,state,descriptor,string,descr,new,test,state,descriptor,foobar,stateful,serializer,type,serializer,string,serializer,a,descr,get,serializer,type,serializer,string,serializer,b,descr,get,serializer,assert,not,same,serializer,a,serializer,b
