commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected TypeSerializer<Map<Long, String>> createSerializer() {     return new MapSerializer<>(LongSerializer.INSTANCE, StringSerializer.INSTANCE). }
false;protected;0;4;;@Override protected int getLength() {     return -1. }
false;protected;0;5;;@SuppressWarnings("unchecked") @Override protected Class<Map<Long, String>> getTypeClass() {     return (Class<Map<Long, String>>) (Class<?>) Map.class. }
false;protected;0;39;;@SuppressWarnings({ "rawtypes", "unchecked" }) @Override protected Map<Long, String>[] getTestData() {     final Random rnd = new Random(123654789).     // empty maps     final Map<Long, String> map1 = Collections.emptyMap().     final Map<Long, String> map2 = new HashMap<>().     final Map<Long, String> map3 = new TreeMap<>().     // single element maps     final Map<Long, String> map4 = Collections.singletonMap(0L, "hello").     final Map<Long, String> map5 = new HashMap<>().     map5.put(12345L, "12345L").     final Map<Long, String> map6 = new TreeMap<>().     map6.put(777888L, "777888L").     // longer maps     final Map<Long, String> map7 = new HashMap<>().     for (int i = 0. i < rnd.nextInt(200). i++) {         map7.put(rnd.nextLong(), Long.toString(rnd.nextLong())).     }     final Map<Long, String> map8 = new TreeMap<>().     for (int i = 0. i < rnd.nextInt(200). i++) {         map8.put(rnd.nextLong(), Long.toString(rnd.nextLong())).     }     // null-value maps     final Map<Long, String> map9 = Collections.singletonMap(0L, null).     final Map<Long, String> map10 = new HashMap<>().     map10.put(999L, null).     final Map<Long, String> map11 = new TreeMap<>().     map11.put(666L, null).     return (Map<Long, String>[]) new Map[] { map1, map2, map3, map4, map5, map6, map7, map8, map9, map10, map11 }. }
