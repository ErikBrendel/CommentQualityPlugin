commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void testControlCharacters() {     String testString = "\b \t \n \f \r default".     String controlString = StringUtils.showControlCharacters(testString).     assertEquals("\\b \\t \\n \\f \\r default", controlString). }
false;public;0;6;;@Test public void testArrayToString() {     double[] array = { 1.0 }.     String controlString = StringUtils.arrayToString(array).     assertEquals("[1.0]", controlString). }
false;public;0;7;;@Test public void testStringToHexArray() {     String hex = "019f314a".     byte[] hexArray = StringUtils.hexStringToByte(hex).     byte[] expectedArray = new byte[] { 1, -97, 49, 74 }.     assertArrayEquals(expectedArray, hexArray). }
false;public;0;6;;@Test public void testHexArrayToString() {     byte[] byteArray = new byte[] { 1, -97, 49, 74 }.     String hex = StringUtils.byteToHexString(byteArray).     assertEquals("019f314a", hex). }
false;public;0;8;;@Test public void testGenerateAlphanumeric() {     String str = StringUtils.generateRandomAlphanumericString(new Random(), 256).     if (!str.matches("[a-zA-Z0-9]{256}")) {         fail("Not alphanumeric: " + str).     } }
