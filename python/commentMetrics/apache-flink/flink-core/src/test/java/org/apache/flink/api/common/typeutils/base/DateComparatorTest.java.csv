commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;4;;@Override protected TypeComparator<Date> createComparator(boolean ascending) {     return new DateComparator(ascending). }
false;protected;0;4;;@Override protected TypeSerializer<Date> createSerializer() {     return new DateSerializer(). }
false;protected;0;20;;@Override protected Date[] getSortedTestData() {     Random rnd = new Random(874597969123412338L).     long rndLong = rnd.nextLong().     if (rndLong < 0) {         rndLong = -rndLong.     }     if (rndLong == Long.MAX_VALUE) {         rndLong -= 3.     }     if (rndLong <= 2) {         rndLong += 3.     }     return new Date[] { new Date(0L), new Date(1L), new Date(2L), new Date(rndLong), new Date(Long.MAX_VALUE) }. }
