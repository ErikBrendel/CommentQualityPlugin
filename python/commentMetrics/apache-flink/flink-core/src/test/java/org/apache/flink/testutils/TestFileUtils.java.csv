commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;14;;public static String createTempFile(long bytes) throws IOException {     File f = File.createTempFile(FILE_PREFIX, FILE_SUFFIX).     f.deleteOnExit().     BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(f)).     try {         for (. bytes > 0. bytes--) {             out.write(0).         }     } finally {         out.close().     }     return f.toURI().toString(). }
false;public,static;2;14;;public static String createTempFileInDirectory(String dir, String contents) throws IOException {     File f.     do {         f = new File(dir + "/" + randomFileName()).     } while (f.exists()).     f.getParentFile().mkdirs().     f.createNewFile().     f.deleteOnExit().     try (BufferedWriter out = new BufferedWriter(new FileWriter(f))) {         out.write(contents).     }     return f.toURI().toString(). }
false;public,static;2;16;;public static String createTempFileInDirectory(String dir, long bytes) throws IOException {     File f.     do {         f = new File(dir + "/" + randomFileName()).     } while (f.exists()).     f.getParentFile().mkdirs().     f.createNewFile().     f.deleteOnExit().     try (BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(f))) {         for (. bytes > 0. bytes--) {             out.write(0).         }     }     return f.toURI().toString(). }
false;public,static;1;9;;public static String createTempFile(String contents) throws IOException {     File f = File.createTempFile(FILE_PREFIX, FILE_SUFFIX).     f.deleteOnExit().     try (BufferedWriter out = new BufferedWriter(new FileWriter(f))) {         out.write(contents).     }     return f.toURI().toString(). }
false;public,static;2;20;;// ------------------------------------------------------------------------ public static String createTempFileDir(File tempDir, long... bytes) throws IOException {     File f = null.     do {         f = new File(tempDir, randomFileName()).     } while (f.exists()).     f.mkdirs().     f.deleteOnExit().     for (long l : bytes) {         File child = new File(f, randomFileName()).         child.deleteOnExit().         try (BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(child))) {             for (. l > 0. l--) {                 out.write(0).             }         }     }     return f.toURI().toString(). }
false;public,static;2;3;;public static String createTempFileDir(File tempDir, String... contents) throws IOException {     return createTempFileDirExtension(tempDir, FILE_SUFFIX, contents). }
false;public,static;3;18;;public static String createTempFileDirExtension(File tempDir, String fileExtension, String... contents) throws IOException {     File f = null.     do {         f = new File(tempDir, randomFileName(FILE_SUFFIX)).     } while (f.exists()).     f.mkdirs().     f.deleteOnExit().     for (String s : contents) {         File child = new File(f, randomFileName(fileExtension)).         child.deleteOnExit().         try (BufferedWriter out = new BufferedWriter(new FileWriter(child))) {             out.write(s).         }     }     return f.toURI().toString(). }
false;public,static;0;3;;public static String randomFileName() {     return randomFileName(FILE_SUFFIX). }
false;public,static;1;3;;public static String randomFileName(String fileSuffix) {     return FILE_PREFIX + ((int) (Math.random() * Integer.MAX_VALUE)) + fileSuffix. }
