commented;modifiers;parameterAmount;loc;comment;code
false;public;0;23;;@Test public void testSimpleValue() {     try {         final String value = "teststring".         SerializedValue<String> v = new SerializedValue<>(value).         SerializedValue<String> copy = CommonTestUtils.createCopySerializable(v).         assertEquals(value, v.deserializeValue(getClass().getClassLoader())).         assertEquals(value, copy.deserializeValue(getClass().getClassLoader())).         assertEquals(v, copy).         assertEquals(v.hashCode(), copy.hashCode()).         assertNotNull(v.toString()).         assertNotNull(copy.toString()).     } catch (Exception e) {         e.printStackTrace().         fail(e.getMessage()).     } }
false;public;0;17;;@Test public void testNullValue() {     try {         SerializedValue<Object> v = new SerializedValue<>(null).         SerializedValue<Object> copy = CommonTestUtils.createCopySerializable(v).         assertNull(copy.deserializeValue(getClass().getClassLoader())).         assertEquals(v, copy).         assertEquals(v.hashCode(), copy.hashCode()).         assertEquals(v.toString(), copy.toString()).     } catch (Exception e) {         e.printStackTrace().         fail(e.getMessage()).     } }
