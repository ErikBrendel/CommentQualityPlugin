commented;modifiers;parameterAmount;loc;comment;code
false;public;0;26;;@Test public void testHashCodeEquals() throws Exception {     final String name = "testName".     ValueStateDescriptor<String> original = new ValueStateDescriptor<>(name, String.class).     ValueStateDescriptor<String> same = new ValueStateDescriptor<>(name, String.class).     ValueStateDescriptor<String> sameBySerializer = new ValueStateDescriptor<>(name, StringSerializer.INSTANCE).     // test that hashCode() works on state descriptors with initialized and uninitialized serializers     assertEquals(original.hashCode(), same.hashCode()).     assertEquals(original.hashCode(), sameBySerializer.hashCode()).     assertEquals(original, same).     assertEquals(original, sameBySerializer).     // equality with a clone     ValueStateDescriptor<String> clone = CommonTestUtils.createCopySerializable(original).     assertEquals(original, clone).     // equality with an initialized     clone.initializeSerializerUnlessSet(new ExecutionConfig()).     assertEquals(original, clone).     original.initializeSerializerUnlessSet(new ExecutionConfig()).     assertEquals(original, same). }
false;public;0;28;;@Test public void testVeryLargeDefaultValue() throws Exception {     // ensure that we correctly read very large data when deserializing the default value     TypeSerializer<String> serializer = new KryoSerializer<>(String.class, new ExecutionConfig()).     byte[] data = new byte[200000].     for (int i = 0. i < 200000. i++) {         data[i] = 65.     }     data[199000] = '\0'.     String defaultValue = new String(data, ConfigConstants.DEFAULT_CHARSET).     ValueStateDescriptor<String> descr = new ValueStateDescriptor<>("testName", serializer, defaultValue).     assertEquals("testName", descr.getName()).     assertEquals(defaultValue, descr.getDefaultValue()).     assertNotNull(descr.getSerializer()).     assertEquals(serializer, descr.getSerializer()).     ValueStateDescriptor<String> copy = CommonTestUtils.createCopySerializable(descr).     assertEquals("testName", copy.getName()).     assertEquals(defaultValue, copy.getDefaultValue()).     assertNotNull(copy.getSerializer()).     assertEquals(serializer, copy.getSerializer()). }
