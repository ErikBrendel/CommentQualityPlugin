commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected TypeSerializer<Float> createSerializer() {     return new FloatSerializer(). }
false;protected;0;4;;@Override protected int getLength() {     return 4. }
false;protected;0;4;;@Override protected Class<Float> getTypeClass() {     return Float.class. }
false;protected;0;11;;@Override protected Float[] getTestData() {     Random rnd = new Random(874597969123412341L).     float rndFloat = rnd.nextFloat() * Float.MAX_VALUE.     return new Float[] { Float.valueOf(0), Float.valueOf(1), Float.valueOf(-1), Float.valueOf(Float.MAX_VALUE), Float.valueOf(Float.MIN_VALUE), Float.valueOf(rndFloat), Float.valueOf(-rndFloat), Float.valueOf(Float.NaN), Float.valueOf(Float.NEGATIVE_INFINITY), Float.valueOf(Float.POSITIVE_INFINITY) }. }
