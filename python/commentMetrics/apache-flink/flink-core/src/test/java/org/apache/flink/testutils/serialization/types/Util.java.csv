commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;3;;public static SerializationTestType randomRecord(SerializationTestTypeFactory type) {     return type.factory().getRandom(Util.random). }
false;protected;0;4;;@Override protected SerializationTestType getRecord() {     return type.factory().getRandom(Util.random). }
false;public,static;2;9;;public static MockRecords randomRecords(final int numElements, final SerializationTestTypeFactory type) {     return new MockRecords(numElements) {          @Override         protected SerializationTestType getRecord() {             return type.factory().getRandom(Util.random).         }     }. }
false;protected;0;8;;@Override protected SerializationTestType getRecord() {     // select random test type factory     SerializationTestTypeFactory[] types = SerializationTestTypeFactory.values().     int i = Util.random.nextInt(types.length).     return types[i].factory().getRandom(Util.random). }
false;public,static;1;13;;public static MockRecords randomRecords(final int numElements) {     return new MockRecords(numElements) {          @Override         protected SerializationTestType getRecord() {             // select random test type factory             SerializationTestTypeFactory[] types = SerializationTestTypeFactory.values().             int i = Util.random.nextInt(types.length).             return types[i].factory().getRandom(Util.random).         }     }. }
false;public;0;4;;@Override public boolean hasNext() {     return numRecords > 0. }
false;public;0;10;;@Override public SerializationTestType next() {     if (numRecords > 0) {         numRecords--.         return getRecord().     }     throw new NoSuchElementException(). }
false;public;0;4;;@Override public void remove() {     throw new UnsupportedOperationException(). }
false;public;0;25;;@Override public Iterator<SerializationTestType> iterator() {     return new Iterator<SerializationTestType>() {          @Override         public boolean hasNext() {             return numRecords > 0.         }          @Override         public SerializationTestType next() {             if (numRecords > 0) {                 numRecords--.                 return getRecord().             }             throw new NoSuchElementException().         }          @Override         public void remove() {             throw new UnsupportedOperationException().         }     }. }
false;abstract,protected;0;1;;abstract protected SerializationTestType getRecord().
