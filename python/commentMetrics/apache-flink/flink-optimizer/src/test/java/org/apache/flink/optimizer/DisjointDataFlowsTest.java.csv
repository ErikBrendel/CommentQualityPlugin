commented;modifiers;parameterAmount;loc;comment;code
false;public;0;21;;@Test public void testDisjointFlows() {     try {         ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment().         // generate two different flows         env.generateSequence(1, 10).output(new DiscardingOutputFormat<Long>()).         env.generateSequence(1, 10).output(new DiscardingOutputFormat<Long>()).         Plan p = env.createProgramPlan().         OptimizedPlan op = compileNoStats(p).         new JobGraphGenerator().compileJobGraph(op).     } catch (Exception e) {         e.printStackTrace().         fail(e.getMessage()).     } }
