commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public DriverStrategy getStrategy() {     return DriverStrategy.ALL_GROUP_COMBINE. }
false;public;2;4;;@Override public SingleInputPlanNode instantiate(Channel in, SingleInputNode node) {     return new SingleInputPlanNode(node, "GroupCombine (" + node.getOperator().getName() + ")", in, DriverStrategy.ALL_GROUP_COMBINE). }
false;protected;0;4;;@Override protected List<RequestedGlobalProperties> createPossibleGlobalProperties() {     return Collections.singletonList(new RequestedGlobalProperties()). }
false;protected;0;4;;@Override protected List<RequestedLocalProperties> createPossibleLocalProperties() {     return Collections.singletonList(new RequestedLocalProperties()). }
false;public;1;10;;@Override public GlobalProperties computeGlobalProperties(GlobalProperties gProps) {     if (gProps.getUniqueFieldCombination() != null && gProps.getUniqueFieldCombination().size() > 0 && gProps.getPartitioning() == PartitioningProperty.RANDOM_PARTITIONED) {         gProps.setAnyPartitioning(gProps.getUniqueFieldCombination().iterator().next().toFieldList()).     }     gProps.clearUniqueFieldCombinations().     return gProps. }
false;public;1;4;;@Override public LocalProperties computeLocalProperties(LocalProperties lProps) {     return lProps.clearUniqueFieldSets(). }
