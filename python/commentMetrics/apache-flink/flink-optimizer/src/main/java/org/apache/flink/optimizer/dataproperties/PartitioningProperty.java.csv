commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Checks, if this property represents in fact a partitioning. That is,  * whether this property is not equal to <tt>PartitionProperty.FULL_REPLICATION</tt>.  *  * @return True, if this enum constant is unequal to <tt>PartitionProperty.FULL_REPLICATION</tt>,  *         false otherwise.  */ ;/**  * Checks, if this property represents in fact a partitioning. That is,  * whether this property is not equal to <tt>PartitionProperty.FULL_REPLICATION</tt>.  *  * @return True, if this enum constant is unequal to <tt>PartitionProperty.FULL_REPLICATION</tt>,  *         false otherwise.  */ public boolean isPartitioned() {     return this != FULL_REPLICATION && this != FORCED_REBALANCED && this != ANY_DISTRIBUTION. }
true;public;0;3;/**  * Checks, if this property represents a full replication.  *  * @return True, if this enum constant is equal to <tt>PartitionProperty.FULL_REPLICATION</tt>,  *         false otherwise.  */ ;/**  * Checks, if this property represents a full replication.  *  * @return True, if this enum constant is equal to <tt>PartitionProperty.FULL_REPLICATION</tt>,  *         false otherwise.  */ public boolean isReplication() {     return this == FULL_REPLICATION. }
true;public;0;3;/**  * Checks if this property presents a partitioning that is not random, but on a partitioning key.  *  * @return True, if the data is partitioned on a key.  */ ;/**  * Checks if this property presents a partitioning that is not random, but on a partitioning key.  *  * @return True, if the data is partitioned on a key.  */ public boolean isPartitionedOnKey() {     return isPartitioned() && this != RANDOM_PARTITIONED. }
true;public;0;3;/**  * Checks, if this property represents a partitioning that is computable.  * A computable partitioning can be recreated through an algorithm. If two sets of data are to  * be co-partitioned, it is crucial, that the partitioning schemes are computable.  * <p>  * Examples for computable partitioning schemes are hash- or range-partitioning. An example for a non-computable  * partitioning is the implicit partitioning that exists though a globally unique key.  *  * @return True, if this enum constant is a re-computable partitioning.  */ ;/**  * Checks, if this property represents a partitioning that is computable.  * A computable partitioning can be recreated through an algorithm. If two sets of data are to  * be co-partitioned, it is crucial, that the partitioning schemes are computable.  * <p>  * Examples for computable partitioning schemes are hash- or range-partitioning. An example for a non-computable  * partitioning is the implicit partitioning that exists though a globally unique key.  *  * @return True, if this enum constant is a re-computable partitioning.  */ public boolean isComputablyPartitioned() {     return this == HASH_PARTITIONED || this == RANGE_PARTITIONED || this == CUSTOM_PARTITIONING. }
