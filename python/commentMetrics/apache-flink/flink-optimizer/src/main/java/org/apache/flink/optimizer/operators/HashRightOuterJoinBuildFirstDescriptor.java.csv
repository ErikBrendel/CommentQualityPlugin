commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public DriverStrategy getStrategy() {     return DriverStrategy.RIGHT_HYBRIDHASH_BUILD_FIRST. }
false;protected;0;5;;@Override protected List<LocalPropertiesPair> createPossibleLocalProperties() {     // all properties are possible     return Collections.singletonList(new LocalPropertiesPair(new RequestedLocalProperties(), new RequestedLocalProperties())). }
false;public;4;5;;@Override public boolean areCoFulfilled(RequestedLocalProperties requested1, RequestedLocalProperties requested2, LocalProperties produced1, LocalProperties produced2) {     return true. }
false;public;3;6;;@Override public DualInputPlanNode instantiate(Channel in1, Channel in2, TwoInputNode node) {     String nodeName = "RightOuterJoin (" + node.getOperator().getName() + ")".     return new DualInputPlanNode(node, nodeName, in1, in2, getStrategy(), this.keys1, this.keys2). }
false;public;2;4;;@Override public LocalProperties computeLocalProperties(LocalProperties in1, LocalProperties in2) {     return new LocalProperties(). }
