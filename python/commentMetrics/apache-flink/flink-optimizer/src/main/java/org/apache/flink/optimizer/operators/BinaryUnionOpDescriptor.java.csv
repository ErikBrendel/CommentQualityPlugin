commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public DriverStrategy getStrategy() {     return DriverStrategy.UNION. }
false;protected;0;4;;@Override protected List<GlobalPropertiesPair> createPossibleGlobalProperties() {     return Collections.emptyList(). }
false;protected;0;4;;@Override protected List<LocalPropertiesPair> createPossibleLocalProperties() {     return Collections.emptyList(). }
false;public;3;4;;@Override public DualInputPlanNode instantiate(Channel in1, Channel in2, TwoInputNode node) {     return new BinaryUnionPlanNode((BinaryUnionNode) node, in1, in2). }
false;public;2;41;;@Override public GlobalProperties computeGlobalProperties(GlobalProperties in1, GlobalProperties in2) {     GlobalProperties newProps = new GlobalProperties().     if (in1.getPartitioning() == PartitioningProperty.HASH_PARTITIONED && in2.getPartitioning() == PartitioningProperty.HASH_PARTITIONED && in1.getPartitioningFields().equals(in2.getPartitioningFields())) {         newProps.setHashPartitioned(in1.getPartitioningFields()).     } else if (in1.getPartitioning() == PartitioningProperty.RANGE_PARTITIONED && in2.getPartitioning() == PartitioningProperty.RANGE_PARTITIONED && in1.getPartitioningOrdering().equals(in2.getPartitioningOrdering()) && (in1.getDataDistribution() == null && in2.getDataDistribution() == null || in1.getDataDistribution() != null && in1.getDataDistribution().equals(in2.getDataDistribution()))) {         if (in1.getDataDistribution() == null) {             newProps.setRangePartitioned(in1.getPartitioningOrdering()).         } else {             newProps.setRangePartitioned(in1.getPartitioningOrdering(), in1.getDataDistribution()).         }     } else if (in1.getPartitioning() == PartitioningProperty.CUSTOM_PARTITIONING && in2.getPartitioning() == PartitioningProperty.CUSTOM_PARTITIONING && in1.getPartitioningFields().equals(in2.getPartitioningFields()) && in1.getCustomPartitioner().equals(in2.getCustomPartitioner())) {         newProps.setCustomPartitioned(in1.getPartitioningFields(), in1.getCustomPartitioner()).     } else if (in1.getPartitioning() == PartitioningProperty.FORCED_REBALANCED && in2.getPartitioning() == PartitioningProperty.FORCED_REBALANCED) {         newProps.setForcedRebalanced().     } else if (in1.getPartitioning() == PartitioningProperty.FULL_REPLICATION && in2.getPartitioning() == PartitioningProperty.FULL_REPLICATION) {         newProps.setFullyReplicated().     }     return newProps. }
false;public;2;5;;@Override public LocalProperties computeLocalProperties(LocalProperties in1, LocalProperties in2) {     // all local properties are destroyed     return new LocalProperties(). }
false;public;4;5;;@Override public boolean areCoFulfilled(RequestedLocalProperties requested1, RequestedLocalProperties requested2, LocalProperties produced1, LocalProperties produced2) {     return true. }
false;public;4;5;;@Override public boolean areCompatible(RequestedGlobalProperties requested1, RequestedGlobalProperties requested2, GlobalProperties produced1, GlobalProperties produced2) {     return true. }
