commented;modifiers;parameterAmount;loc;comment;code
false;public;1;18;;@Override public boolean preVisit(OptimizerNode node) {     // if the current node is a union     if (node instanceof BinaryUnionNode) {         int parallelism = -1.         // set ship strategy of all outgoing connections to FORWARD.         for (DagConnection conn : node.getOutgoingConnections()) {             parallelism = conn.getTarget().getParallelism().             conn.setShipStrategy(ShipStrategyType.FORWARD).         }         // adjust parallelism to be same as successor         node.setParallelism(parallelism).     }     // traverse the whole plan     return true. }
false;public;1;7;;@Override public void postVisit(OptimizerNode node) {     // if required, recurse into the step function     if (node instanceof IterationNode) {         ((IterationNode) node).acceptForStepFunction(this).     } }
