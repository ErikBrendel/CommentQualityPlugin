# id;timestamp;commentText;codeText;commentWords;codeWords
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapper();1467034323;Tests the histogram functionality of the DropwizardHistogramWrapper.;@Test_	public void testDropwizardHistogramWrapper() {_		int size = 10__		DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_			new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___		for (int i = 0_ i < size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(0, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals((size - 1)/2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)___		for (int i = size_ i < 2 * size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(i + 1 - size, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals(size + (size - 1)/2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)__	};tests,the,histogram,functionality,of,the,dropwizard,histogram,wrapper;test,public,void,test,dropwizard,histogram,wrapper,int,size,10,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,0,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001,for,int,i,size,i,2,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,i,1,size,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapper();1468229042;Tests the histogram functionality of the DropwizardHistogramWrapper.;@Test_	public void testDropwizardHistogramWrapper() {_		int size = 10__		DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_			new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___		for (int i = 0_ i < size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(0, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals((size - 1)/2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)___		for (int i = size_ i < 2 * size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(i + 1 - size, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals(size + (size - 1)/2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)__	};tests,the,histogram,functionality,of,the,dropwizard,histogram,wrapper;test,public,void,test,dropwizard,histogram,wrapper,int,size,10,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,0,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001,for,int,i,size,i,2,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,i,1,size,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapper();1468403023;Tests the histogram functionality of the DropwizardHistogramWrapper.;@Test_	public void testDropwizardHistogramWrapper() {_		int size = 10__		DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_			new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___		for (int i = 0_ i < size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(0, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals((size - 1)/2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)___		for (int i = size_ i < 2 * size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(i + 1 - size, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals(size + (size - 1)/2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)__	};tests,the,histogram,functionality,of,the,dropwizard,histogram,wrapper;test,public,void,test,dropwizard,histogram,wrapper,int,size,10,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,0,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001,for,int,i,size,i,2,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,i,1,size,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapper();1469529015;Tests the histogram functionality of the DropwizardHistogramWrapper.;@Test_	public void testDropwizardHistogramWrapper() {_		int size = 10__		DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_			new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___		for (int i = 0_ i < size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(0, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals((size - 1)/2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)___		for (int i = size_ i < 2 * size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(i + 1 - size, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals(size + (size - 1)/2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)__	};tests,the,histogram,functionality,of,the,dropwizard,histogram,wrapper;test,public,void,test,dropwizard,histogram,wrapper,int,size,10,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,0,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001,for,int,i,size,i,2,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,i,1,size,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapper();1469545521;Tests the histogram functionality of the DropwizardHistogramWrapper.;@Test_	public void testDropwizardHistogramWrapper() {_		int size = 10__		DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_			new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___		for (int i = 0_ i < size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(0, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals((size - 1)/2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)___		for (int i = size_ i < 2 * size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(i + 1 - size, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals(size + (size - 1)/2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)__	};tests,the,histogram,functionality,of,the,dropwizard,histogram,wrapper;test,public,void,test,dropwizard,histogram,wrapper,int,size,10,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,0,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001,for,int,i,size,i,2,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,i,1,size,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapper();1474995330;Tests the histogram functionality of the DropwizardHistogramWrapper.;@Test_	public void testDropwizardHistogramWrapper() {_		int size = 10__		DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_			new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___		for (int i = 0_ i < size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(0, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals((size - 1)/2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)___		for (int i = size_ i < 2 * size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(i + 1 - size, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals(size + (size - 1)/2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)__	};tests,the,histogram,functionality,of,the,dropwizard,histogram,wrapper;test,public,void,test,dropwizard,histogram,wrapper,int,size,10,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,0,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001,for,int,i,size,i,2,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,i,1,size,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapper();1492770690;Tests the histogram functionality of the DropwizardHistogramWrapper.;@Test_	public void testDropwizardHistogramWrapper() {_		int size = 10__		DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_			new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___		for (int i = 0_ i < size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(0, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals((size - 1)/2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)___		for (int i = size_ i < 2 * size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(i + 1 - size, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals(size + (size - 1)/2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)__	};tests,the,histogram,functionality,of,the,dropwizard,histogram,wrapper;test,public,void,test,dropwizard,histogram,wrapper,int,size,10,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,0,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001,for,int,i,size,i,2,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,i,1,size,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapper();1495637163;Tests the histogram functionality of the DropwizardHistogramWrapper.;@Test_	public void testDropwizardHistogramWrapper() {_		int size = 10__		DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_			new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___		for (int i = 0_ i < size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(0, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals((size - 1) / 2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)___		for (int i = size_ i < 2 * size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(i + 1 - size, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals(size + (size - 1) / 2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)__	};tests,the,histogram,functionality,of,the,dropwizard,histogram,wrapper;test,public,void,test,dropwizard,histogram,wrapper,int,size,10,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,0,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001,for,int,i,size,i,2,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,i,1,size,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapper();1509547920;Tests the histogram functionality of the DropwizardHistogramWrapper.;@Test_	public void testDropwizardHistogramWrapper() {_		int size = 10__		DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_			new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___		for (int i = 0_ i < size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(0, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals((size - 1) / 2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)___		for (int i = size_ i < 2 * size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(i + 1 - size, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals(size + (size - 1) / 2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)__	};tests,the,histogram,functionality,of,the,dropwizard,histogram,wrapper;test,public,void,test,dropwizard,histogram,wrapper,int,size,10,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,0,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001,for,int,i,size,i,2,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,i,1,size,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapper();1509547921;Tests the histogram functionality of the DropwizardHistogramWrapper.;@Test_	public void testDropwizardHistogramWrapper() {_		int size = 10__		DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_			new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___		for (int i = 0_ i < size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(0, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals((size - 1) / 2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)___		for (int i = size_ i < 2 * size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(i + 1 - size, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals(size + (size - 1) / 2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)__	};tests,the,histogram,functionality,of,the,dropwizard,histogram,wrapper;test,public,void,test,dropwizard,histogram,wrapper,int,size,10,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,0,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001,for,int,i,size,i,2,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,i,1,size,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapper();1513102155;Tests the histogram functionality of the DropwizardHistogramWrapper.;@Test_	public void testDropwizardHistogramWrapper() {_		int size = 10__		DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_			new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___		for (int i = 0_ i < size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(0, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals((size - 1) / 2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)___		for (int i = size_ i < 2 * size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(i + 1 - size, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals(size + (size - 1) / 2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)__	};tests,the,histogram,functionality,of,the,dropwizard,histogram,wrapper;test,public,void,test,dropwizard,histogram,wrapper,int,size,10,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,0,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001,for,int,i,size,i,2,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,i,1,size,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapper();1519406529;Tests the histogram functionality of the DropwizardHistogramWrapper.;@Test_	public void testDropwizardHistogramWrapper() {_		int size = 10__		DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_			new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___		for (int i = 0_ i < size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(0, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals((size - 1) / 2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)___		for (int i = size_ i < 2 * size_ i++) {_			histogramWrapper.update(i)___			assertEquals(i + 1, histogramWrapper.getCount())__			assertEquals(i, histogramWrapper.getStatistics().getMax())__			assertEquals(i + 1 - size, histogramWrapper.getStatistics().getMin())__		}__		assertEquals(size, histogramWrapper.getStatistics().size())__		assertEquals(size + (size - 1) / 2.0, histogramWrapper.getStatistics().getQuantile(0.5), 0.001)__	};tests,the,histogram,functionality,of,the,dropwizard,histogram,wrapper;test,public,void,test,dropwizard,histogram,wrapper,int,size,10,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,0,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001,for,int,i,size,i,2,size,i,histogram,wrapper,update,i,assert,equals,i,1,histogram,wrapper,get,count,assert,equals,i,histogram,wrapper,get,statistics,get,max,assert,equals,i,1,size,histogram,wrapper,get,statistics,get,min,assert,equals,size,histogram,wrapper,get,statistics,size,assert,equals,size,size,1,2,0,histogram,wrapper,get,statistics,get,quantile,0,5,0,001
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapperReporting() throws Exception;1467034323;Tests that the DropwizardHistogramWrapper reports correct dropwizard snapshots to the_ScheduledReporter.;@Test_	public void testDropwizardHistogramWrapperReporting() throws Exception {_		long reportingInterval = 1000__		long timeout = 30000__		int size = 10__		String histogramMetricName = "histogram"__		Configuration config = new Configuration()__		config.setString(MetricRegistry.KEY_METRICS_REPORTER_CLASS, TestingReporter.class.getName())__		config.setString(KEY_METRICS_REPORTER_INTERVAL, reportingInterval + " MILLISECONDS")___		MetricRegistry registry = null___		try {_			registry = new MetricRegistry(config)__			DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_				new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___			TaskManagerMetricGroup metricGroup = new TaskManagerMetricGroup(registry, "localhost", "tmId")___			metricGroup.histogram(histogramMetricName, histogramWrapper)___			String fullMetricName = metricGroup.getScopeString() + "." + histogramMetricName___			Field f = registry.getClass().getDeclaredField("reporter")__			f.setAccessible(true)___			MetricReporter reporter = (MetricReporter) f.get(registry)___			assertTrue(reporter instanceof TestingReporter)___			TestingReporter testingReporter = (TestingReporter) reporter___			TestingScheduledReporter scheduledReporter = testingReporter.scheduledReporter___			_			assertEquals(1, testingReporter.getMetrics().size())___			for (int i = 0_ i < size_ i++) {_				histogramWrapper.update(i)__			}__			Future<Snapshot> snapshotFuture = scheduledReporter.getNextHistogramSnapshot(fullMetricName)___			Snapshot snapshot = snapshotFuture.get(timeout, TimeUnit.MILLISECONDS)___			assertEquals(0, snapshot.getMin())__			assertEquals((size - 1) / 2.0, snapshot.getMedian(), 0.001)__			assertEquals(size - 1, snapshot.getMax())__			assertEquals(size, snapshot.size())___			registry.unregister(histogramWrapper, "histogram", metricGroup)___			_			assertEquals(0, testingReporter.getMetrics().size())__		} finally {_			if (registry != null) {_				registry.shutdown()__			}_		}_	};tests,that,the,dropwizard,histogram,wrapper,reports,correct,dropwizard,snapshots,to,the,scheduled,reporter;test,public,void,test,dropwizard,histogram,wrapper,reporting,throws,exception,long,reporting,interval,1000,long,timeout,30000,int,size,10,string,histogram,metric,name,histogram,configuration,config,new,configuration,config,set,string,metric,registry,testing,reporter,class,get,name,config,set,string,reporting,interval,milliseconds,metric,registry,registry,null,try,registry,new,metric,registry,config,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,task,manager,metric,group,metric,group,new,task,manager,metric,group,registry,localhost,tm,id,metric,group,histogram,histogram,metric,name,histogram,wrapper,string,full,metric,name,metric,group,get,scope,string,histogram,metric,name,field,f,registry,get,class,get,declared,field,reporter,f,set,accessible,true,metric,reporter,reporter,metric,reporter,f,get,registry,assert,true,reporter,instanceof,testing,reporter,testing,reporter,testing,reporter,testing,reporter,reporter,testing,scheduled,reporter,scheduled,reporter,testing,reporter,scheduled,reporter,assert,equals,1,testing,reporter,get,metrics,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,future,snapshot,snapshot,future,scheduled,reporter,get,next,histogram,snapshot,full,metric,name,snapshot,snapshot,snapshot,future,get,timeout,time,unit,milliseconds,assert,equals,0,snapshot,get,min,assert,equals,size,1,2,0,snapshot,get,median,0,001,assert,equals,size,1,snapshot,get,max,assert,equals,size,snapshot,size,registry,unregister,histogram,wrapper,histogram,metric,group,assert,equals,0,testing,reporter,get,metrics,size,finally,if,registry,null,registry,shutdown
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapperReporting() throws Exception;1468229042;Tests that the DropwizardHistogramWrapper reports correct dropwizard snapshots to the_ScheduledReporter.;@Test_	public void testDropwizardHistogramWrapperReporting() throws Exception {_		long reportingInterval = 1000__		long timeout = 30000__		int size = 10__		String histogramMetricName = "histogram"__		Configuration config = new Configuration()__		config.setString(ConfigConstants.METRICS_REPORTER_CLASS, TestingReporter.class.getName())__		config.setString(ConfigConstants.METRICS_REPORTER_INTERVAL, reportingInterval + " MILLISECONDS")___		MetricRegistry registry = null___		try {_			registry = new MetricRegistry(config)__			DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_				new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___			TaskManagerMetricGroup metricGroup = new TaskManagerMetricGroup(registry, "localhost", "tmId")___			metricGroup.histogram(histogramMetricName, histogramWrapper)___			String fullMetricName = metricGroup.getScopeString() + "." + histogramMetricName___			Field f = registry.getClass().getDeclaredField("reporter")__			f.setAccessible(true)___			MetricReporter reporter = (MetricReporter) f.get(registry)___			assertTrue(reporter instanceof TestingReporter)___			TestingReporter testingReporter = (TestingReporter) reporter___			TestingScheduledReporter scheduledReporter = testingReporter.scheduledReporter___			_			assertEquals(1, testingReporter.getMetrics().size())___			for (int i = 0_ i < size_ i++) {_				histogramWrapper.update(i)__			}__			Future<Snapshot> snapshotFuture = scheduledReporter.getNextHistogramSnapshot(fullMetricName)___			Snapshot snapshot = snapshotFuture.get(timeout, TimeUnit.MILLISECONDS)___			assertEquals(0, snapshot.getMin())__			assertEquals((size - 1) / 2.0, snapshot.getMedian(), 0.001)__			assertEquals(size - 1, snapshot.getMax())__			assertEquals(size, snapshot.size())___			registry.unregister(histogramWrapper, "histogram", metricGroup)___			_			assertEquals(0, testingReporter.getMetrics().size())__		} finally {_			if (registry != null) {_				registry.shutdown()__			}_		}_	};tests,that,the,dropwizard,histogram,wrapper,reports,correct,dropwizard,snapshots,to,the,scheduled,reporter;test,public,void,test,dropwizard,histogram,wrapper,reporting,throws,exception,long,reporting,interval,1000,long,timeout,30000,int,size,10,string,histogram,metric,name,histogram,configuration,config,new,configuration,config,set,string,config,constants,testing,reporter,class,get,name,config,set,string,config,constants,reporting,interval,milliseconds,metric,registry,registry,null,try,registry,new,metric,registry,config,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,task,manager,metric,group,metric,group,new,task,manager,metric,group,registry,localhost,tm,id,metric,group,histogram,histogram,metric,name,histogram,wrapper,string,full,metric,name,metric,group,get,scope,string,histogram,metric,name,field,f,registry,get,class,get,declared,field,reporter,f,set,accessible,true,metric,reporter,reporter,metric,reporter,f,get,registry,assert,true,reporter,instanceof,testing,reporter,testing,reporter,testing,reporter,testing,reporter,reporter,testing,scheduled,reporter,scheduled,reporter,testing,reporter,scheduled,reporter,assert,equals,1,testing,reporter,get,metrics,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,future,snapshot,snapshot,future,scheduled,reporter,get,next,histogram,snapshot,full,metric,name,snapshot,snapshot,snapshot,future,get,timeout,time,unit,milliseconds,assert,equals,0,snapshot,get,min,assert,equals,size,1,2,0,snapshot,get,median,0,001,assert,equals,size,1,snapshot,get,max,assert,equals,size,snapshot,size,registry,unregister,histogram,wrapper,histogram,metric,group,assert,equals,0,testing,reporter,get,metrics,size,finally,if,registry,null,registry,shutdown
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapperReporting() throws Exception;1468403023;Tests that the DropwizardHistogramWrapper reports correct dropwizard snapshots to the_ScheduledReporter.;@Test_	public void testDropwizardHistogramWrapperReporting() throws Exception {_		long reportingInterval = 1000__		long timeout = 30000__		int size = 10__		String histogramMetricName = "histogram"__		Configuration config = new Configuration()__		config.setString(ConfigConstants.METRICS_REPORTER_CLASS, TestingReporter.class.getName())__		config.setString(ConfigConstants.METRICS_REPORTER_INTERVAL, reportingInterval + " MILLISECONDS")___		MetricRegistry registry = null___		try {_			registry = new MetricRegistry(config)__			DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_				new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___			TaskManagerMetricGroup metricGroup = new TaskManagerMetricGroup(registry, "localhost", "tmId")___			metricGroup.histogram(histogramMetricName, histogramWrapper)___			String fullMetricName = metricGroup.getMetricIdentifier(histogramMetricName)___			Field f = registry.getClass().getDeclaredField("reporter")__			f.setAccessible(true)___			MetricReporter reporter = (MetricReporter) f.get(registry)___			assertTrue(reporter instanceof TestingReporter)___			TestingReporter testingReporter = (TestingReporter) reporter___			TestingScheduledReporter scheduledReporter = testingReporter.scheduledReporter___			_			assertEquals(1, testingReporter.getMetrics().size())___			for (int i = 0_ i < size_ i++) {_				histogramWrapper.update(i)__			}__			Future<Snapshot> snapshotFuture = scheduledReporter.getNextHistogramSnapshot(fullMetricName)___			Snapshot snapshot = snapshotFuture.get(timeout, TimeUnit.MILLISECONDS)___			assertEquals(0, snapshot.getMin())__			assertEquals((size - 1) / 2.0, snapshot.getMedian(), 0.001)__			assertEquals(size - 1, snapshot.getMax())__			assertEquals(size, snapshot.size())___			registry.unregister(histogramWrapper, "histogram", metricGroup)___			_			assertEquals(0, testingReporter.getMetrics().size())__		} finally {_			if (registry != null) {_				registry.shutdown()__			}_		}_	};tests,that,the,dropwizard,histogram,wrapper,reports,correct,dropwizard,snapshots,to,the,scheduled,reporter;test,public,void,test,dropwizard,histogram,wrapper,reporting,throws,exception,long,reporting,interval,1000,long,timeout,30000,int,size,10,string,histogram,metric,name,histogram,configuration,config,new,configuration,config,set,string,config,constants,testing,reporter,class,get,name,config,set,string,config,constants,reporting,interval,milliseconds,metric,registry,registry,null,try,registry,new,metric,registry,config,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,task,manager,metric,group,metric,group,new,task,manager,metric,group,registry,localhost,tm,id,metric,group,histogram,histogram,metric,name,histogram,wrapper,string,full,metric,name,metric,group,get,metric,identifier,histogram,metric,name,field,f,registry,get,class,get,declared,field,reporter,f,set,accessible,true,metric,reporter,reporter,metric,reporter,f,get,registry,assert,true,reporter,instanceof,testing,reporter,testing,reporter,testing,reporter,testing,reporter,reporter,testing,scheduled,reporter,scheduled,reporter,testing,reporter,scheduled,reporter,assert,equals,1,testing,reporter,get,metrics,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,future,snapshot,snapshot,future,scheduled,reporter,get,next,histogram,snapshot,full,metric,name,snapshot,snapshot,snapshot,future,get,timeout,time,unit,milliseconds,assert,equals,0,snapshot,get,min,assert,equals,size,1,2,0,snapshot,get,median,0,001,assert,equals,size,1,snapshot,get,max,assert,equals,size,snapshot,size,registry,unregister,histogram,wrapper,histogram,metric,group,assert,equals,0,testing,reporter,get,metrics,size,finally,if,registry,null,registry,shutdown
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapperReporting() throws Exception;1469529015;Tests that the DropwizardHistogramWrapper reports correct dropwizard snapshots to the_ScheduledReporter.;@Test_	public void testDropwizardHistogramWrapperReporting() throws Exception {_		long reportingInterval = 1000__		long timeout = 30000__		int size = 10__		String histogramMetricName = "histogram"__		Configuration config = new Configuration()__		config.setString(ConfigConstants.METRICS_REPORTER_CLASS, TestingReporter.class.getName())__		config.setString(ConfigConstants.METRICS_REPORTER_INTERVAL, reportingInterval + " MILLISECONDS")___		MetricRegistry registry = null___		try {_			registry = new MetricRegistry(config)__			DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_				new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___			TaskManagerMetricGroup metricGroup = new TaskManagerMetricGroup(registry, "localhost", "tmId")___			metricGroup.histogram(histogramMetricName, histogramWrapper)___			String fullMetricName = metricGroup.getMetricIdentifier(histogramMetricName)___			Field f = registry.getClass().getDeclaredField("reporter")__			f.setAccessible(true)___			MetricReporter reporter = (MetricReporter) f.get(registry)___			assertTrue(reporter instanceof TestingReporter)___			TestingReporter testingReporter = (TestingReporter) reporter___			TestingScheduledReporter scheduledReporter = testingReporter.scheduledReporter___			_			assertEquals(1, testingReporter.getMetrics().size())___			for (int i = 0_ i < size_ i++) {_				histogramWrapper.update(i)__			}__			Future<Snapshot> snapshotFuture = scheduledReporter.getNextHistogramSnapshot(fullMetricName)___			Snapshot snapshot = snapshotFuture.get(timeout, TimeUnit.MILLISECONDS)___			assertEquals(0, snapshot.getMin())__			assertEquals((size - 1) / 2.0, snapshot.getMedian(), 0.001)__			assertEquals(size - 1, snapshot.getMax())__			assertEquals(size, snapshot.size())___			registry.unregister(histogramWrapper, "histogram", metricGroup)___			_			assertEquals(0, testingReporter.getMetrics().size())__		} finally {_			if (registry != null) {_				registry.shutdown()__			}_		}_	};tests,that,the,dropwizard,histogram,wrapper,reports,correct,dropwizard,snapshots,to,the,scheduled,reporter;test,public,void,test,dropwizard,histogram,wrapper,reporting,throws,exception,long,reporting,interval,1000,long,timeout,30000,int,size,10,string,histogram,metric,name,histogram,configuration,config,new,configuration,config,set,string,config,constants,testing,reporter,class,get,name,config,set,string,config,constants,reporting,interval,milliseconds,metric,registry,registry,null,try,registry,new,metric,registry,config,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,task,manager,metric,group,metric,group,new,task,manager,metric,group,registry,localhost,tm,id,metric,group,histogram,histogram,metric,name,histogram,wrapper,string,full,metric,name,metric,group,get,metric,identifier,histogram,metric,name,field,f,registry,get,class,get,declared,field,reporter,f,set,accessible,true,metric,reporter,reporter,metric,reporter,f,get,registry,assert,true,reporter,instanceof,testing,reporter,testing,reporter,testing,reporter,testing,reporter,reporter,testing,scheduled,reporter,scheduled,reporter,testing,reporter,scheduled,reporter,assert,equals,1,testing,reporter,get,metrics,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,future,snapshot,snapshot,future,scheduled,reporter,get,next,histogram,snapshot,full,metric,name,snapshot,snapshot,snapshot,future,get,timeout,time,unit,milliseconds,assert,equals,0,snapshot,get,min,assert,equals,size,1,2,0,snapshot,get,median,0,001,assert,equals,size,1,snapshot,get,max,assert,equals,size,snapshot,size,registry,unregister,histogram,wrapper,histogram,metric,group,assert,equals,0,testing,reporter,get,metrics,size,finally,if,registry,null,registry,shutdown
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapperReporting() throws Exception;1469545521;Tests that the DropwizardHistogramWrapper reports correct dropwizard snapshots to the_ScheduledReporter.;@Test_	public void testDropwizardHistogramWrapperReporting() throws Exception {_		long reportingInterval = 1000__		long timeout = 30000__		int size = 10__		String histogramMetricName = "histogram"__		Configuration config = new Configuration()__		config.setString(ConfigConstants.METRICS_REPORTERS_LIST, "my_reporter")__		config.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "my_reporter." + ConfigConstants.METRICS_REPORTER_CLASS_SUFFIX, TestingReporter.class.getName())__		config.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "my_reporter." + ConfigConstants.METRICS_REPORTER_INTERVAL_SUFFIX, reportingInterval + " MILLISECONDS")___		MetricRegistry registry = null___		try {_			registry = new MetricRegistry(config)__			DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_				new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___			TaskManagerMetricGroup metricGroup = new TaskManagerMetricGroup(registry, "localhost", "tmId")___			metricGroup.histogram(histogramMetricName, histogramWrapper)___			String fullMetricName = metricGroup.getMetricIdentifier(histogramMetricName)___			assertTrue(registry.getReporters().size() == 1)___			MetricReporter reporter = registry.getReporters().get(0)___			assertTrue(reporter instanceof TestingReporter)___			TestingReporter testingReporter = (TestingReporter) reporter___			TestingScheduledReporter scheduledReporter = testingReporter.scheduledReporter___			_			assertEquals(1, testingReporter.getMetrics().size())___			for (int i = 0_ i < size_ i++) {_				histogramWrapper.update(i)__			}__			Future<Snapshot> snapshotFuture = scheduledReporter.getNextHistogramSnapshot(fullMetricName)___			Snapshot snapshot = snapshotFuture.get(timeout, TimeUnit.MILLISECONDS)___			assertEquals(0, snapshot.getMin())__			assertEquals((size - 1) / 2.0, snapshot.getMedian(), 0.001)__			assertEquals(size - 1, snapshot.getMax())__			assertEquals(size, snapshot.size())___			registry.unregister(histogramWrapper, "histogram", metricGroup)___			_			assertEquals(0, testingReporter.getMetrics().size())__		} finally {_			if (registry != null) {_				registry.shutdown()__			}_		}_	};tests,that,the,dropwizard,histogram,wrapper,reports,correct,dropwizard,snapshots,to,the,scheduled,reporter;test,public,void,test,dropwizard,histogram,wrapper,reporting,throws,exception,long,reporting,interval,1000,long,timeout,30000,int,size,10,string,histogram,metric,name,histogram,configuration,config,new,configuration,config,set,string,config,constants,config,set,string,config,constants,config,constants,testing,reporter,class,get,name,config,set,string,config,constants,config,constants,reporting,interval,milliseconds,metric,registry,registry,null,try,registry,new,metric,registry,config,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,task,manager,metric,group,metric,group,new,task,manager,metric,group,registry,localhost,tm,id,metric,group,histogram,histogram,metric,name,histogram,wrapper,string,full,metric,name,metric,group,get,metric,identifier,histogram,metric,name,assert,true,registry,get,reporters,size,1,metric,reporter,reporter,registry,get,reporters,get,0,assert,true,reporter,instanceof,testing,reporter,testing,reporter,testing,reporter,testing,reporter,reporter,testing,scheduled,reporter,scheduled,reporter,testing,reporter,scheduled,reporter,assert,equals,1,testing,reporter,get,metrics,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,future,snapshot,snapshot,future,scheduled,reporter,get,next,histogram,snapshot,full,metric,name,snapshot,snapshot,snapshot,future,get,timeout,time,unit,milliseconds,assert,equals,0,snapshot,get,min,assert,equals,size,1,2,0,snapshot,get,median,0,001,assert,equals,size,1,snapshot,get,max,assert,equals,size,snapshot,size,registry,unregister,histogram,wrapper,histogram,metric,group,assert,equals,0,testing,reporter,get,metrics,size,finally,if,registry,null,registry,shutdown
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapperReporting() throws Exception;1474995330;Tests that the DropwizardHistogramWrapper reports correct dropwizard snapshots to the_ScheduledReporter.;@Test_	public void testDropwizardHistogramWrapperReporting() throws Exception {_		long reportingInterval = 1000__		long timeout = 30000__		int size = 10__		String histogramMetricName = "histogram"__		Configuration config = new Configuration()__		config.setString(ConfigConstants.METRICS_REPORTERS_LIST, "my_reporter")__		config.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "my_reporter." + ConfigConstants.METRICS_REPORTER_CLASS_SUFFIX, TestingReporter.class.getName())__		config.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "my_reporter." + ConfigConstants.METRICS_REPORTER_INTERVAL_SUFFIX, reportingInterval + " MILLISECONDS")___		MetricRegistry registry = null___		MetricRegistryConfiguration metricRegistryConfiguration = MetricRegistryConfiguration.fromConfiguration(config)___		try {_			registry = new MetricRegistry(metricRegistryConfiguration)__			DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_				new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___			TaskManagerMetricGroup metricGroup = new TaskManagerMetricGroup(registry, "localhost", "tmId")___			metricGroup.histogram(histogramMetricName, histogramWrapper)___			String fullMetricName = metricGroup.getMetricIdentifier(histogramMetricName)___			assertTrue(registry.getReporters().size() == 1)___			MetricReporter reporter = registry.getReporters().get(0)___			assertTrue(reporter instanceof TestingReporter)___			TestingReporter testingReporter = (TestingReporter) reporter___			TestingScheduledReporter scheduledReporter = testingReporter.scheduledReporter___			_			assertEquals(1, testingReporter.getMetrics().size())___			for (int i = 0_ i < size_ i++) {_				histogramWrapper.update(i)__			}__			Future<Snapshot> snapshotFuture = scheduledReporter.getNextHistogramSnapshot(fullMetricName)___			Snapshot snapshot = snapshotFuture.get(timeout, TimeUnit.MILLISECONDS)___			assertEquals(0, snapshot.getMin())__			assertEquals((size - 1) / 2.0, snapshot.getMedian(), 0.001)__			assertEquals(size - 1, snapshot.getMax())__			assertEquals(size, snapshot.size())___			registry.unregister(histogramWrapper, "histogram", metricGroup)___			_			assertEquals(0, testingReporter.getMetrics().size())__		} finally {_			if (registry != null) {_				registry.shutdown()__			}_		}_	};tests,that,the,dropwizard,histogram,wrapper,reports,correct,dropwizard,snapshots,to,the,scheduled,reporter;test,public,void,test,dropwizard,histogram,wrapper,reporting,throws,exception,long,reporting,interval,1000,long,timeout,30000,int,size,10,string,histogram,metric,name,histogram,configuration,config,new,configuration,config,set,string,config,constants,config,set,string,config,constants,config,constants,testing,reporter,class,get,name,config,set,string,config,constants,config,constants,reporting,interval,milliseconds,metric,registry,registry,null,metric,registry,configuration,metric,registry,configuration,metric,registry,configuration,from,configuration,config,try,registry,new,metric,registry,metric,registry,configuration,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,task,manager,metric,group,metric,group,new,task,manager,metric,group,registry,localhost,tm,id,metric,group,histogram,histogram,metric,name,histogram,wrapper,string,full,metric,name,metric,group,get,metric,identifier,histogram,metric,name,assert,true,registry,get,reporters,size,1,metric,reporter,reporter,registry,get,reporters,get,0,assert,true,reporter,instanceof,testing,reporter,testing,reporter,testing,reporter,testing,reporter,reporter,testing,scheduled,reporter,scheduled,reporter,testing,reporter,scheduled,reporter,assert,equals,1,testing,reporter,get,metrics,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,future,snapshot,snapshot,future,scheduled,reporter,get,next,histogram,snapshot,full,metric,name,snapshot,snapshot,snapshot,future,get,timeout,time,unit,milliseconds,assert,equals,0,snapshot,get,min,assert,equals,size,1,2,0,snapshot,get,median,0,001,assert,equals,size,1,snapshot,get,max,assert,equals,size,snapshot,size,registry,unregister,histogram,wrapper,histogram,metric,group,assert,equals,0,testing,reporter,get,metrics,size,finally,if,registry,null,registry,shutdown
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapperReporting() throws Exception;1492770690;Tests that the DropwizardHistogramWrapper reports correct dropwizard snapshots to the_ScheduledReporter.;@Test_	public void testDropwizardHistogramWrapperReporting() throws Exception {_		long reportingInterval = 1000__		long timeout = 30000__		int size = 10__		String histogramMetricName = "histogram"__		Configuration config = new Configuration()__		config.setString(MetricOptions.REPORTERS_LIST, "my_reporter")__		config.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "my_reporter." + ConfigConstants.METRICS_REPORTER_CLASS_SUFFIX, TestingReporter.class.getName())__		config.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "my_reporter." + ConfigConstants.METRICS_REPORTER_INTERVAL_SUFFIX, reportingInterval + " MILLISECONDS")___		MetricRegistry registry = null___		MetricRegistryConfiguration metricRegistryConfiguration = MetricRegistryConfiguration.fromConfiguration(config)___		try {_			registry = new MetricRegistry(metricRegistryConfiguration)__			DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_				new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___			TaskManagerMetricGroup metricGroup = new TaskManagerMetricGroup(registry, "localhost", "tmId")___			metricGroup.histogram(histogramMetricName, histogramWrapper)___			String fullMetricName = metricGroup.getMetricIdentifier(histogramMetricName)___			assertTrue(registry.getReporters().size() == 1)___			MetricReporter reporter = registry.getReporters().get(0)___			assertTrue(reporter instanceof TestingReporter)___			TestingReporter testingReporter = (TestingReporter) reporter___			TestingScheduledReporter scheduledReporter = testingReporter.scheduledReporter___			_			assertEquals(1, testingReporter.getMetrics().size())___			for (int i = 0_ i < size_ i++) {_				histogramWrapper.update(i)__			}__			Future<Snapshot> snapshotFuture = scheduledReporter.getNextHistogramSnapshot(fullMetricName)___			Snapshot snapshot = snapshotFuture.get(timeout, TimeUnit.MILLISECONDS)___			assertEquals(0, snapshot.getMin())__			assertEquals((size - 1) / 2.0, snapshot.getMedian(), 0.001)__			assertEquals(size - 1, snapshot.getMax())__			assertEquals(size, snapshot.size())___			registry.unregister(histogramWrapper, "histogram", metricGroup)___			_			assertEquals(0, testingReporter.getMetrics().size())__		} finally {_			if (registry != null) {_				registry.shutdown()__			}_		}_	};tests,that,the,dropwizard,histogram,wrapper,reports,correct,dropwizard,snapshots,to,the,scheduled,reporter;test,public,void,test,dropwizard,histogram,wrapper,reporting,throws,exception,long,reporting,interval,1000,long,timeout,30000,int,size,10,string,histogram,metric,name,histogram,configuration,config,new,configuration,config,set,string,metric,options,config,set,string,config,constants,config,constants,testing,reporter,class,get,name,config,set,string,config,constants,config,constants,reporting,interval,milliseconds,metric,registry,registry,null,metric,registry,configuration,metric,registry,configuration,metric,registry,configuration,from,configuration,config,try,registry,new,metric,registry,metric,registry,configuration,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,task,manager,metric,group,metric,group,new,task,manager,metric,group,registry,localhost,tm,id,metric,group,histogram,histogram,metric,name,histogram,wrapper,string,full,metric,name,metric,group,get,metric,identifier,histogram,metric,name,assert,true,registry,get,reporters,size,1,metric,reporter,reporter,registry,get,reporters,get,0,assert,true,reporter,instanceof,testing,reporter,testing,reporter,testing,reporter,testing,reporter,reporter,testing,scheduled,reporter,scheduled,reporter,testing,reporter,scheduled,reporter,assert,equals,1,testing,reporter,get,metrics,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,future,snapshot,snapshot,future,scheduled,reporter,get,next,histogram,snapshot,full,metric,name,snapshot,snapshot,snapshot,future,get,timeout,time,unit,milliseconds,assert,equals,0,snapshot,get,min,assert,equals,size,1,2,0,snapshot,get,median,0,001,assert,equals,size,1,snapshot,get,max,assert,equals,size,snapshot,size,registry,unregister,histogram,wrapper,histogram,metric,group,assert,equals,0,testing,reporter,get,metrics,size,finally,if,registry,null,registry,shutdown
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapperReporting() throws Exception;1495637163;Tests that the DropwizardHistogramWrapper reports correct dropwizard snapshots to the_ScheduledReporter.;@Test_	public void testDropwizardHistogramWrapperReporting() throws Exception {_		long reportingInterval = 1000__		long timeout = 30000__		int size = 10__		String histogramMetricName = "histogram"__		Configuration config = new Configuration()__		config.setString(MetricOptions.REPORTERS_LIST, "my_reporter")__		config.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "my_reporter." + ConfigConstants.METRICS_REPORTER_CLASS_SUFFIX, TestingReporter.class.getName())__		config.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "my_reporter." + ConfigConstants.METRICS_REPORTER_INTERVAL_SUFFIX, reportingInterval + " MILLISECONDS")___		MetricRegistry registry = null___		MetricRegistryConfiguration metricRegistryConfiguration = MetricRegistryConfiguration.fromConfiguration(config)___		try {_			registry = new MetricRegistry(metricRegistryConfiguration)__			DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_				new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___			TaskManagerMetricGroup metricGroup = new TaskManagerMetricGroup(registry, "localhost", "tmId")___			metricGroup.histogram(histogramMetricName, histogramWrapper)___			String fullMetricName = metricGroup.getMetricIdentifier(histogramMetricName)___			assertTrue(registry.getReporters().size() == 1)___			MetricReporter reporter = registry.getReporters().get(0)___			assertTrue(reporter instanceof TestingReporter)___			TestingReporter testingReporter = (TestingReporter) reporter___			TestingScheduledReporter scheduledReporter = testingReporter.scheduledReporter___			_			assertEquals(1, testingReporter.getMetrics().size())___			for (int i = 0_ i < size_ i++) {_				histogramWrapper.update(i)__			}__			Future<Snapshot> snapshotFuture = scheduledReporter.getNextHistogramSnapshot(fullMetricName)___			Snapshot snapshot = snapshotFuture.get(timeout, TimeUnit.MILLISECONDS)___			assertEquals(0, snapshot.getMin())__			assertEquals((size - 1) / 2.0, snapshot.getMedian(), 0.001)__			assertEquals(size - 1, snapshot.getMax())__			assertEquals(size, snapshot.size())___			registry.unregister(histogramWrapper, "histogram", metricGroup)___			_			assertEquals(0, testingReporter.getMetrics().size())__		} finally {_			if (registry != null) {_				registry.shutdown()__			}_		}_	};tests,that,the,dropwizard,histogram,wrapper,reports,correct,dropwizard,snapshots,to,the,scheduled,reporter;test,public,void,test,dropwizard,histogram,wrapper,reporting,throws,exception,long,reporting,interval,1000,long,timeout,30000,int,size,10,string,histogram,metric,name,histogram,configuration,config,new,configuration,config,set,string,metric,options,config,set,string,config,constants,config,constants,testing,reporter,class,get,name,config,set,string,config,constants,config,constants,reporting,interval,milliseconds,metric,registry,registry,null,metric,registry,configuration,metric,registry,configuration,metric,registry,configuration,from,configuration,config,try,registry,new,metric,registry,metric,registry,configuration,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,task,manager,metric,group,metric,group,new,task,manager,metric,group,registry,localhost,tm,id,metric,group,histogram,histogram,metric,name,histogram,wrapper,string,full,metric,name,metric,group,get,metric,identifier,histogram,metric,name,assert,true,registry,get,reporters,size,1,metric,reporter,reporter,registry,get,reporters,get,0,assert,true,reporter,instanceof,testing,reporter,testing,reporter,testing,reporter,testing,reporter,reporter,testing,scheduled,reporter,scheduled,reporter,testing,reporter,scheduled,reporter,assert,equals,1,testing,reporter,get,metrics,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,future,snapshot,snapshot,future,scheduled,reporter,get,next,histogram,snapshot,full,metric,name,snapshot,snapshot,snapshot,future,get,timeout,time,unit,milliseconds,assert,equals,0,snapshot,get,min,assert,equals,size,1,2,0,snapshot,get,median,0,001,assert,equals,size,1,snapshot,get,max,assert,equals,size,snapshot,size,registry,unregister,histogram,wrapper,histogram,metric,group,assert,equals,0,testing,reporter,get,metrics,size,finally,if,registry,null,registry,shutdown
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapperReporting() throws Exception;1509547920;Tests that the DropwizardHistogramWrapper reports correct dropwizard snapshots to the_ScheduledReporter.;@Test_	public void testDropwizardHistogramWrapperReporting() throws Exception {_		long reportingInterval = 1000__		long timeout = 30000__		int size = 10__		String histogramMetricName = "histogram"__		Configuration config = new Configuration()__		config.setString(MetricOptions.REPORTERS_LIST, "my_reporter")__		config.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "my_reporter." + ConfigConstants.METRICS_REPORTER_CLASS_SUFFIX, TestingReporter.class.getName())__		config.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "my_reporter." + ConfigConstants.METRICS_REPORTER_INTERVAL_SUFFIX, reportingInterval + " MILLISECONDS")___		MetricRegistryImpl registry = null___		MetricRegistryConfiguration metricRegistryConfiguration = MetricRegistryConfiguration.fromConfiguration(config)___		try {_			registry = new MetricRegistryImpl(metricRegistryConfiguration)__			DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_				new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___			TaskManagerMetricGroup metricGroup = new TaskManagerMetricGroup(registry, "localhost", "tmId")___			metricGroup.histogram(histogramMetricName, histogramWrapper)___			String fullMetricName = metricGroup.getMetricIdentifier(histogramMetricName)___			assertTrue(registry.getReporters().size() == 1)___			MetricReporter reporter = registry.getReporters().get(0)___			assertTrue(reporter instanceof TestingReporter)___			TestingReporter testingReporter = (TestingReporter) reporter___			TestingScheduledReporter scheduledReporter = testingReporter.scheduledReporter___			_			assertEquals(1, testingReporter.getMetrics().size())___			for (int i = 0_ i < size_ i++) {_				histogramWrapper.update(i)__			}__			Future<Snapshot> snapshotFuture = scheduledReporter.getNextHistogramSnapshot(fullMetricName)___			Snapshot snapshot = snapshotFuture.get(timeout, TimeUnit.MILLISECONDS)___			assertEquals(0, snapshot.getMin())__			assertEquals((size - 1) / 2.0, snapshot.getMedian(), 0.001)__			assertEquals(size - 1, snapshot.getMax())__			assertEquals(size, snapshot.size())___			registry.unregister(histogramWrapper, "histogram", metricGroup)___			_			assertEquals(0, testingReporter.getMetrics().size())__		} finally {_			if (registry != null) {_				registry.shutdown()__			}_		}_	};tests,that,the,dropwizard,histogram,wrapper,reports,correct,dropwizard,snapshots,to,the,scheduled,reporter;test,public,void,test,dropwizard,histogram,wrapper,reporting,throws,exception,long,reporting,interval,1000,long,timeout,30000,int,size,10,string,histogram,metric,name,histogram,configuration,config,new,configuration,config,set,string,metric,options,config,set,string,config,constants,config,constants,testing,reporter,class,get,name,config,set,string,config,constants,config,constants,reporting,interval,milliseconds,metric,registry,impl,registry,null,metric,registry,configuration,metric,registry,configuration,metric,registry,configuration,from,configuration,config,try,registry,new,metric,registry,impl,metric,registry,configuration,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,task,manager,metric,group,metric,group,new,task,manager,metric,group,registry,localhost,tm,id,metric,group,histogram,histogram,metric,name,histogram,wrapper,string,full,metric,name,metric,group,get,metric,identifier,histogram,metric,name,assert,true,registry,get,reporters,size,1,metric,reporter,reporter,registry,get,reporters,get,0,assert,true,reporter,instanceof,testing,reporter,testing,reporter,testing,reporter,testing,reporter,reporter,testing,scheduled,reporter,scheduled,reporter,testing,reporter,scheduled,reporter,assert,equals,1,testing,reporter,get,metrics,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,future,snapshot,snapshot,future,scheduled,reporter,get,next,histogram,snapshot,full,metric,name,snapshot,snapshot,snapshot,future,get,timeout,time,unit,milliseconds,assert,equals,0,snapshot,get,min,assert,equals,size,1,2,0,snapshot,get,median,0,001,assert,equals,size,1,snapshot,get,max,assert,equals,size,snapshot,size,registry,unregister,histogram,wrapper,histogram,metric,group,assert,equals,0,testing,reporter,get,metrics,size,finally,if,registry,null,registry,shutdown
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapperReporting() throws Exception;1509547921;Tests that the DropwizardHistogramWrapper reports correct dropwizard snapshots to the_ScheduledReporter.;@Test_	public void testDropwizardHistogramWrapperReporting() throws Exception {_		long reportingInterval = 1000__		long timeout = 30000__		int size = 10__		String histogramMetricName = "histogram"__		Configuration config = new Configuration()__		config.setString(MetricOptions.REPORTERS_LIST, "my_reporter")__		config.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "my_reporter." + ConfigConstants.METRICS_REPORTER_CLASS_SUFFIX, TestingReporter.class.getName())__		config.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "my_reporter." + ConfigConstants.METRICS_REPORTER_INTERVAL_SUFFIX, reportingInterval + " MILLISECONDS")___		MetricRegistryImpl registry = null___		MetricRegistryConfiguration metricRegistryConfiguration = MetricRegistryConfiguration.fromConfiguration(config)___		try {_			registry = new MetricRegistryImpl(metricRegistryConfiguration)__			DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_				new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___			TaskManagerMetricGroup metricGroup = new TaskManagerMetricGroup(registry, "localhost", "tmId")___			metricGroup.histogram(histogramMetricName, histogramWrapper)___			String fullMetricName = metricGroup.getMetricIdentifier(histogramMetricName)___			assertTrue(registry.getReporters().size() == 1)___			MetricReporter reporter = registry.getReporters().get(0)___			assertTrue(reporter instanceof TestingReporter)___			TestingReporter testingReporter = (TestingReporter) reporter___			TestingScheduledReporter scheduledReporter = testingReporter.scheduledReporter___			_			assertEquals(1, testingReporter.getMetrics().size())___			for (int i = 0_ i < size_ i++) {_				histogramWrapper.update(i)__			}__			Future<Snapshot> snapshotFuture = scheduledReporter.getNextHistogramSnapshot(fullMetricName)___			Snapshot snapshot = snapshotFuture.get(timeout, TimeUnit.MILLISECONDS)___			assertEquals(0, snapshot.getMin())__			assertEquals((size - 1) / 2.0, snapshot.getMedian(), 0.001)__			assertEquals(size - 1, snapshot.getMax())__			assertEquals(size, snapshot.size())___			registry.unregister(histogramWrapper, "histogram", metricGroup)___			_			assertEquals(0, testingReporter.getMetrics().size())__		} finally {_			if (registry != null) {_				registry.shutdown()__			}_		}_	};tests,that,the,dropwizard,histogram,wrapper,reports,correct,dropwizard,snapshots,to,the,scheduled,reporter;test,public,void,test,dropwizard,histogram,wrapper,reporting,throws,exception,long,reporting,interval,1000,long,timeout,30000,int,size,10,string,histogram,metric,name,histogram,configuration,config,new,configuration,config,set,string,metric,options,config,set,string,config,constants,config,constants,testing,reporter,class,get,name,config,set,string,config,constants,config,constants,reporting,interval,milliseconds,metric,registry,impl,registry,null,metric,registry,configuration,metric,registry,configuration,metric,registry,configuration,from,configuration,config,try,registry,new,metric,registry,impl,metric,registry,configuration,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,task,manager,metric,group,metric,group,new,task,manager,metric,group,registry,localhost,tm,id,metric,group,histogram,histogram,metric,name,histogram,wrapper,string,full,metric,name,metric,group,get,metric,identifier,histogram,metric,name,assert,true,registry,get,reporters,size,1,metric,reporter,reporter,registry,get,reporters,get,0,assert,true,reporter,instanceof,testing,reporter,testing,reporter,testing,reporter,testing,reporter,reporter,testing,scheduled,reporter,scheduled,reporter,testing,reporter,scheduled,reporter,assert,equals,1,testing,reporter,get,metrics,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,future,snapshot,snapshot,future,scheduled,reporter,get,next,histogram,snapshot,full,metric,name,snapshot,snapshot,snapshot,future,get,timeout,time,unit,milliseconds,assert,equals,0,snapshot,get,min,assert,equals,size,1,2,0,snapshot,get,median,0,001,assert,equals,size,1,snapshot,get,max,assert,equals,size,snapshot,size,registry,unregister,histogram,wrapper,histogram,metric,group,assert,equals,0,testing,reporter,get,metrics,size,finally,if,registry,null,registry,shutdown
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapperReporting() throws Exception;1513102155;Tests that the DropwizardHistogramWrapper reports correct dropwizard snapshots to the_ScheduledReporter.;@Test_	public void testDropwizardHistogramWrapperReporting() throws Exception {_		long reportingInterval = 1000__		long timeout = 30000__		int size = 10__		String histogramMetricName = "histogram"__		Configuration config = new Configuration()__		config.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "my_reporter." + ConfigConstants.METRICS_REPORTER_CLASS_SUFFIX, TestingReporter.class.getName())__		config.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "my_reporter." + ConfigConstants.METRICS_REPORTER_INTERVAL_SUFFIX, reportingInterval + " MILLISECONDS")___		MetricRegistryImpl registry = null___		MetricRegistryConfiguration metricRegistryConfiguration = MetricRegistryConfiguration.fromConfiguration(config)___		try {_			registry = new MetricRegistryImpl(metricRegistryConfiguration)__			DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_				new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___			TaskManagerMetricGroup metricGroup = new TaskManagerMetricGroup(registry, "localhost", "tmId")___			metricGroup.histogram(histogramMetricName, histogramWrapper)___			String fullMetricName = metricGroup.getMetricIdentifier(histogramMetricName)___			assertTrue(registry.getReporters().size() == 1)___			MetricReporter reporter = registry.getReporters().get(0)___			assertTrue(reporter instanceof TestingReporter)___			TestingReporter testingReporter = (TestingReporter) reporter___			TestingScheduledReporter scheduledReporter = testingReporter.scheduledReporter___			_			assertEquals(1, testingReporter.getMetrics().size())___			for (int i = 0_ i < size_ i++) {_				histogramWrapper.update(i)__			}__			Future<Snapshot> snapshotFuture = scheduledReporter.getNextHistogramSnapshot(fullMetricName)___			Snapshot snapshot = snapshotFuture.get(timeout, TimeUnit.MILLISECONDS)___			assertEquals(0, snapshot.getMin())__			assertEquals((size - 1) / 2.0, snapshot.getMedian(), 0.001)__			assertEquals(size - 1, snapshot.getMax())__			assertEquals(size, snapshot.size())___			registry.unregister(histogramWrapper, "histogram", metricGroup)___			_			assertEquals(0, testingReporter.getMetrics().size())__		} finally {_			if (registry != null) {_				registry.shutdown()__			}_		}_	};tests,that,the,dropwizard,histogram,wrapper,reports,correct,dropwizard,snapshots,to,the,scheduled,reporter;test,public,void,test,dropwizard,histogram,wrapper,reporting,throws,exception,long,reporting,interval,1000,long,timeout,30000,int,size,10,string,histogram,metric,name,histogram,configuration,config,new,configuration,config,set,string,config,constants,config,constants,testing,reporter,class,get,name,config,set,string,config,constants,config,constants,reporting,interval,milliseconds,metric,registry,impl,registry,null,metric,registry,configuration,metric,registry,configuration,metric,registry,configuration,from,configuration,config,try,registry,new,metric,registry,impl,metric,registry,configuration,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,task,manager,metric,group,metric,group,new,task,manager,metric,group,registry,localhost,tm,id,metric,group,histogram,histogram,metric,name,histogram,wrapper,string,full,metric,name,metric,group,get,metric,identifier,histogram,metric,name,assert,true,registry,get,reporters,size,1,metric,reporter,reporter,registry,get,reporters,get,0,assert,true,reporter,instanceof,testing,reporter,testing,reporter,testing,reporter,testing,reporter,reporter,testing,scheduled,reporter,scheduled,reporter,testing,reporter,scheduled,reporter,assert,equals,1,testing,reporter,get,metrics,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,future,snapshot,snapshot,future,scheduled,reporter,get,next,histogram,snapshot,full,metric,name,snapshot,snapshot,snapshot,future,get,timeout,time,unit,milliseconds,assert,equals,0,snapshot,get,min,assert,equals,size,1,2,0,snapshot,get,median,0,001,assert,equals,size,1,snapshot,get,max,assert,equals,size,snapshot,size,registry,unregister,histogram,wrapper,histogram,metric,group,assert,equals,0,testing,reporter,get,metrics,size,finally,if,registry,null,registry,shutdown
DropwizardFlinkHistogramWrapperTest -> @Test 	public void testDropwizardHistogramWrapperReporting() throws Exception;1519406529;Tests that the DropwizardHistogramWrapper reports correct dropwizard snapshots to the_ScheduledReporter.;@Test_	public void testDropwizardHistogramWrapperReporting() throws Exception {_		long reportingInterval = 1000__		long timeout = 30000__		int size = 10__		String histogramMetricName = "histogram"__		Configuration config = new Configuration()__		config.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "my_reporter." + ConfigConstants.METRICS_REPORTER_CLASS_SUFFIX, TestingReporter.class.getName())__		config.setString(ConfigConstants.METRICS_REPORTER_PREFIX + "my_reporter." + ConfigConstants.METRICS_REPORTER_INTERVAL_SUFFIX, reportingInterval + " MILLISECONDS")___		MetricRegistryImpl registry = null___		MetricRegistryConfiguration metricRegistryConfiguration = MetricRegistryConfiguration.fromConfiguration(config)___		try {_			registry = new MetricRegistryImpl(metricRegistryConfiguration)__			DropwizardHistogramWrapper histogramWrapper = new DropwizardHistogramWrapper(_				new com.codahale.metrics.Histogram(new SlidingWindowReservoir(size)))___			TaskManagerMetricGroup metricGroup = new TaskManagerMetricGroup(registry, "localhost", "tmId")___			metricGroup.histogram(histogramMetricName, histogramWrapper)___			String fullMetricName = metricGroup.getMetricIdentifier(histogramMetricName)___			assertTrue(registry.getReporters().size() == 1)___			MetricReporter reporter = registry.getReporters().get(0)___			assertTrue(reporter instanceof TestingReporter)___			TestingReporter testingReporter = (TestingReporter) reporter___			TestingScheduledReporter scheduledReporter = testingReporter.scheduledReporter___			_			assertEquals(1, testingReporter.getMetrics().size())___			for (int i = 0_ i < size_ i++) {_				histogramWrapper.update(i)__			}__			Future<Snapshot> snapshotFuture = scheduledReporter.getNextHistogramSnapshot(fullMetricName)___			Snapshot snapshot = snapshotFuture.get(timeout, TimeUnit.MILLISECONDS)___			assertEquals(0, snapshot.getMin())__			assertEquals((size - 1) / 2.0, snapshot.getMedian(), 0.001)__			assertEquals(size - 1, snapshot.getMax())__			assertEquals(size, snapshot.size())___			registry.unregister(histogramWrapper, "histogram", metricGroup)___			_			assertEquals(0, testingReporter.getMetrics().size())__		} finally {_			if (registry != null) {_				registry.shutdown().get()__			}_		}_	};tests,that,the,dropwizard,histogram,wrapper,reports,correct,dropwizard,snapshots,to,the,scheduled,reporter;test,public,void,test,dropwizard,histogram,wrapper,reporting,throws,exception,long,reporting,interval,1000,long,timeout,30000,int,size,10,string,histogram,metric,name,histogram,configuration,config,new,configuration,config,set,string,config,constants,config,constants,testing,reporter,class,get,name,config,set,string,config,constants,config,constants,reporting,interval,milliseconds,metric,registry,impl,registry,null,metric,registry,configuration,metric,registry,configuration,metric,registry,configuration,from,configuration,config,try,registry,new,metric,registry,impl,metric,registry,configuration,dropwizard,histogram,wrapper,histogram,wrapper,new,dropwizard,histogram,wrapper,new,com,codahale,metrics,histogram,new,sliding,window,reservoir,size,task,manager,metric,group,metric,group,new,task,manager,metric,group,registry,localhost,tm,id,metric,group,histogram,histogram,metric,name,histogram,wrapper,string,full,metric,name,metric,group,get,metric,identifier,histogram,metric,name,assert,true,registry,get,reporters,size,1,metric,reporter,reporter,registry,get,reporters,get,0,assert,true,reporter,instanceof,testing,reporter,testing,reporter,testing,reporter,testing,reporter,reporter,testing,scheduled,reporter,scheduled,reporter,testing,reporter,scheduled,reporter,assert,equals,1,testing,reporter,get,metrics,size,for,int,i,0,i,size,i,histogram,wrapper,update,i,future,snapshot,snapshot,future,scheduled,reporter,get,next,histogram,snapshot,full,metric,name,snapshot,snapshot,snapshot,future,get,timeout,time,unit,milliseconds,assert,equals,0,snapshot,get,min,assert,equals,size,1,2,0,snapshot,get,median,0,001,assert,equals,size,1,snapshot,get,max,assert,equals,size,snapshot,size,registry,unregister,histogram,wrapper,histogram,metric,group,assert,equals,0,testing,reporter,get,metrics,size,finally,if,registry,null,registry,shutdown,get
