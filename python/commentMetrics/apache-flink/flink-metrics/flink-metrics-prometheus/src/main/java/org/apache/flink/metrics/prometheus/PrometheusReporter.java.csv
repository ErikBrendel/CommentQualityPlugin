commented;modifiers;parameterAmount;loc;comment;code
false;;0;5;;@VisibleForTesting int getPort() {     Preconditions.checkState(httpServer != null, "Server has not been initialized.").     return port. }
false;public;1;23;;@Override public void open(MetricConfig config) {     super.open(config).     String portsConfig = config.getString(ARG_PORT, DEFAULT_PORT).     Iterator<Integer> ports = NetUtils.getPortRangeFromString(portsConfig).     while (ports.hasNext()) {         int port = ports.next().         try {             // internally accesses CollectorRegistry.defaultRegistry             httpServer = new HTTPServer(port).             this.port = port.             log.info("Started PrometheusReporter HTTP server on port {}.", port).             break.         } catch (IOException ioe) {             // assume port conflict             log.debug("Could not start PrometheusReporter HTTP server on port {}.", port, ioe).         }     }     if (httpServer == null) {         throw new RuntimeException("Could not start PrometheusReporter HTTP server on any configured port. Ports: " + portsConfig).     } }
false;public;0;8;;@Override public void close() {     if (httpServer != null) {         httpServer.stop().     }     super.close(). }
