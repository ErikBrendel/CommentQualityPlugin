# id;timestamp;commentText;codeText;commentWords;codeWords
JMXReporter -> static String replaceInvalidChars(String str);1469529015;Lightweight method to replace unsupported characters._If the string does not contain any unsupported characters, this method creates no_new string (and in fact no new objects at all).__<p>Replacements:__<ul>_<li>{@code "} is removed</li>_<li>{@code space} is replaced by {@code _} (underscore)</li>_<li>{@code , = _ : ? ' *} are replaced by {@code -} (hyphen)</li>_</ul>;static String replaceInvalidChars(String str) {_		char[] chars = null__		final int strLen = str.length()__		int pos = 0__		_		for (int i = 0_ i < strLen_ i++) {_			final char c = str.charAt(i)__			switch (c) {_				case '"':_					_					if (chars == null) {_						chars = str.toCharArray()__					}_					break___				case ' ':_					if (chars == null) {_						chars = str.toCharArray()__					}_					chars[pos++] = '_'__					break__				_				case ',':_				case '=':_				case '_':_				case ':':_				case '?':_				case '\'':_				case '*':_					if (chars == null) {_						chars = str.toCharArray()__					}_					chars[pos++] = '-'__					break___				default:_					if (chars != null) {_						chars[pos] = c__					}_					pos++__			}_		}_		_		return chars == null ? str : new String(chars, 0, pos)__	};lightweight,method,to,replace,unsupported,characters,if,the,string,does,not,contain,any,unsupported,characters,this,method,creates,no,new,string,and,in,fact,no,new,objects,at,all,p,replacements,ul,li,code,is,removed,li,li,code,space,is,replaced,by,code,underscore,li,li,code,are,replaced,by,code,hyphen,li,ul;static,string,replace,invalid,chars,string,str,char,chars,null,final,int,str,len,str,length,int,pos,0,for,int,i,0,i,str,len,i,final,char,c,str,char,at,i,switch,c,case,if,chars,null,chars,str,to,char,array,break,case,if,chars,null,chars,str,to,char,array,chars,pos,break,case,case,case,case,case,case,case,if,chars,null,chars,str,to,char,array,chars,pos,break,default,if,chars,null,chars,pos,c,pos,return,chars,null,str,new,string,chars,0,pos
JMXReporter -> static String replaceInvalidChars(String str);1472489286;Lightweight method to replace unsupported characters._If the string does not contain any unsupported characters, this method creates no_new string (and in fact no new objects at all).__<p>Replacements:__<ul>_<li>{@code "} is removed</li>_<li>{@code space} is replaced by {@code _} (underscore)</li>_<li>{@code , = _ : ? ' *} are replaced by {@code -} (hyphen)</li>_</ul>;static String replaceInvalidChars(String str) {_		char[] chars = null__		final int strLen = str.length()__		int pos = 0__		_		for (int i = 0_ i < strLen_ i++) {_			final char c = str.charAt(i)__			switch (c) {_				case '"':_					_					if (chars == null) {_						chars = str.toCharArray()__					}_					break___				case ' ':_					if (chars == null) {_						chars = str.toCharArray()__					}_					chars[pos++] = '_'__					break__				_				case ',':_				case '=':_				case '_':_				case ':':_				case '?':_				case '\'':_				case '*':_					if (chars == null) {_						chars = str.toCharArray()__					}_					chars[pos++] = '-'__					break___				default:_					if (chars != null) {_						chars[pos] = c__					}_					pos++__			}_		}_		_		return chars == null ? str : new String(chars, 0, pos)__	};lightweight,method,to,replace,unsupported,characters,if,the,string,does,not,contain,any,unsupported,characters,this,method,creates,no,new,string,and,in,fact,no,new,objects,at,all,p,replacements,ul,li,code,is,removed,li,li,code,space,is,replaced,by,code,underscore,li,li,code,are,replaced,by,code,hyphen,li,ul;static,string,replace,invalid,chars,string,str,char,chars,null,final,int,str,len,str,length,int,pos,0,for,int,i,0,i,str,len,i,final,char,c,str,char,at,i,switch,c,case,if,chars,null,chars,str,to,char,array,break,case,if,chars,null,chars,str,to,char,array,chars,pos,break,case,case,case,case,case,case,case,if,chars,null,chars,str,to,char,array,chars,pos,break,default,if,chars,null,chars,pos,c,pos,return,chars,null,str,new,string,chars,0,pos
JMXReporter -> static String replaceInvalidChars(String str);1477916104;Lightweight method to replace unsupported characters._If the string does not contain any unsupported characters, this method creates no_new string (and in fact no new objects at all).__<p>Replacements:__<ul>_<li>{@code "} is removed</li>_<li>{@code space} is replaced by {@code _} (underscore)</li>_<li>{@code , = _ : ? ' *} are replaced by {@code -} (hyphen)</li>_</ul>;static String replaceInvalidChars(String str) {_		char[] chars = null__		final int strLen = str.length()__		int pos = 0__		_		for (int i = 0_ i < strLen_ i++) {_			final char c = str.charAt(i)__			switch (c) {_				case '>':_				case '<':_				case '"':_					_					if (chars == null) {_						chars = str.toCharArray()__					}_					break___				case ' ':_					if (chars == null) {_						chars = str.toCharArray()__					}_					chars[pos++] = '_'__					break__				_				case ',':_				case '=':_				case '_':_				case ':':_				case '?':_				case '\'':_				case '*':_					if (chars == null) {_						chars = str.toCharArray()__					}_					chars[pos++] = '-'__					break___				default:_					if (chars != null) {_						chars[pos] = c__					}_					pos++__			}_		}_		_		return chars == null ? str : new String(chars, 0, pos)__	};lightweight,method,to,replace,unsupported,characters,if,the,string,does,not,contain,any,unsupported,characters,this,method,creates,no,new,string,and,in,fact,no,new,objects,at,all,p,replacements,ul,li,code,is,removed,li,li,code,space,is,replaced,by,code,underscore,li,li,code,are,replaced,by,code,hyphen,li,ul;static,string,replace,invalid,chars,string,str,char,chars,null,final,int,str,len,str,length,int,pos,0,for,int,i,0,i,str,len,i,final,char,c,str,char,at,i,switch,c,case,case,case,if,chars,null,chars,str,to,char,array,break,case,if,chars,null,chars,str,to,char,array,chars,pos,break,case,case,case,case,case,case,case,if,chars,null,chars,str,to,char,array,chars,pos,break,default,if,chars,null,chars,pos,c,pos,return,chars,null,str,new,string,chars,0,pos
JMXReporter -> static String replaceInvalidChars(String str);1477916118;Lightweight method to replace unsupported characters._If the string does not contain any unsupported characters, this method creates no_new string (and in fact no new objects at all).__<p>Replacements:__<ul>_<li>{@code "} is removed</li>_<li>{@code space} is replaced by {@code _} (underscore)</li>_<li>{@code , = _ : ? ' *} are replaced by {@code -} (hyphen)</li>_</ul>;static String replaceInvalidChars(String str) {_		char[] chars = null__		final int strLen = str.length()__		int pos = 0__		_		for (int i = 0_ i < strLen_ i++) {_			final char c = str.charAt(i)__			switch (c) {_				case '>':_				case '<':_				case '"':_					_					if (chars == null) {_						chars = str.toCharArray()__					}_					break___				case ' ':_					if (chars == null) {_						chars = str.toCharArray()__					}_					chars[pos++] = '_'__					break__				_				case ',':_				case '=':_				case '_':_				case ':':_				case '?':_				case '\'':_				case '*':_					if (chars == null) {_						chars = str.toCharArray()__					}_					chars[pos++] = '-'__					break___				default:_					if (chars != null) {_						chars[pos] = c__					}_					pos++__			}_		}_		_		return chars == null ? str : new String(chars, 0, pos)__	};lightweight,method,to,replace,unsupported,characters,if,the,string,does,not,contain,any,unsupported,characters,this,method,creates,no,new,string,and,in,fact,no,new,objects,at,all,p,replacements,ul,li,code,is,removed,li,li,code,space,is,replaced,by,code,underscore,li,li,code,are,replaced,by,code,hyphen,li,ul;static,string,replace,invalid,chars,string,str,char,chars,null,final,int,str,len,str,length,int,pos,0,for,int,i,0,i,str,len,i,final,char,c,str,char,at,i,switch,c,case,case,case,if,chars,null,chars,str,to,char,array,break,case,if,chars,null,chars,str,to,char,array,chars,pos,break,case,case,case,case,case,case,case,if,chars,null,chars,str,to,char,array,chars,pos,break,default,if,chars,null,chars,pos,c,pos,return,chars,null,str,new,string,chars,0,pos
JMXReporter -> static String replaceInvalidChars(String str);1481715813;Lightweight method to replace unsupported characters._If the string does not contain any unsupported characters, this method creates no_new string (and in fact no new objects at all).__<p>Replacements:__<ul>_<li>{@code "} is removed</li>_<li>{@code space} is replaced by {@code _} (underscore)</li>_<li>{@code , = _ : ? ' *} are replaced by {@code -} (hyphen)</li>_</ul>;static String replaceInvalidChars(String str) {_		char[] chars = null__		final int strLen = str.length()__		int pos = 0__		_		for (int i = 0_ i < strLen_ i++) {_			final char c = str.charAt(i)__			switch (c) {_				case '>':_				case '<':_				case '"':_					_					if (chars == null) {_						chars = str.toCharArray()__					}_					break___				case ' ':_					if (chars == null) {_						chars = str.toCharArray()__					}_					chars[pos++] = '_'__					break__				_				case ',':_				case '=':_				case '_':_				case ':':_				case '?':_				case '\'':_				case '*':_					if (chars == null) {_						chars = str.toCharArray()__					}_					chars[pos++] = '-'__					break___				default:_					if (chars != null) {_						chars[pos] = c__					}_					pos++__			}_		}_		_		return chars == null ? str : new String(chars, 0, pos)__	};lightweight,method,to,replace,unsupported,characters,if,the,string,does,not,contain,any,unsupported,characters,this,method,creates,no,new,string,and,in,fact,no,new,objects,at,all,p,replacements,ul,li,code,is,removed,li,li,code,space,is,replaced,by,code,underscore,li,li,code,are,replaced,by,code,hyphen,li,ul;static,string,replace,invalid,chars,string,str,char,chars,null,final,int,str,len,str,length,int,pos,0,for,int,i,0,i,str,len,i,final,char,c,str,char,at,i,switch,c,case,case,case,if,chars,null,chars,str,to,char,array,break,case,if,chars,null,chars,str,to,char,array,chars,pos,break,case,case,case,case,case,case,case,if,chars,null,chars,str,to,char,array,chars,pos,break,default,if,chars,null,chars,pos,c,pos,return,chars,null,str,new,string,chars,0,pos
JMXReporter -> static String replaceInvalidChars(String str);1495637163;Lightweight method to replace unsupported characters._If the string does not contain any unsupported characters, this method creates no_new string (and in fact no new objects at all).__<p>Replacements:__<ul>_<li>{@code "} is removed</li>_<li>{@code space} is replaced by {@code _} (underscore)</li>_<li>{@code , = _ : ? ' *} are replaced by {@code -} (hyphen)</li>_</ul>;static String replaceInvalidChars(String str) {_		char[] chars = null__		final int strLen = str.length()__		int pos = 0___		for (int i = 0_ i < strLen_ i++) {_			final char c = str.charAt(i)__			switch (c) {_				case '>':_				case '<':_				case '"':_					_					if (chars == null) {_						chars = str.toCharArray()__					}_					break___				case ' ':_					if (chars == null) {_						chars = str.toCharArray()__					}_					chars[pos++] = '_'__					break___				case ',':_				case '=':_				case '_':_				case ':':_				case '?':_				case '\'':_				case '*':_					if (chars == null) {_						chars = str.toCharArray()__					}_					chars[pos++] = '-'__					break___				default:_					if (chars != null) {_						chars[pos] = c__					}_					pos++__			}_		}__		return chars == null ? str : new String(chars, 0, pos)__	};lightweight,method,to,replace,unsupported,characters,if,the,string,does,not,contain,any,unsupported,characters,this,method,creates,no,new,string,and,in,fact,no,new,objects,at,all,p,replacements,ul,li,code,is,removed,li,li,code,space,is,replaced,by,code,underscore,li,li,code,are,replaced,by,code,hyphen,li,ul;static,string,replace,invalid,chars,string,str,char,chars,null,final,int,str,len,str,length,int,pos,0,for,int,i,0,i,str,len,i,final,char,c,str,char,at,i,switch,c,case,case,case,if,chars,null,chars,str,to,char,array,break,case,if,chars,null,chars,str,to,char,array,chars,pos,break,case,case,case,case,case,case,case,if,chars,null,chars,str,to,char,array,chars,pos,break,default,if,chars,null,chars,pos,c,pos,return,chars,null,str,new,string,chars,0,pos
JMXReporter -> static String replaceInvalidChars(String str);1515177485;Lightweight method to replace unsupported characters._If the string does not contain any unsupported characters, this method creates no_new string (and in fact no new objects at all).__<p>Replacements:__<ul>_<li>{@code "} is removed</li>_<li>{@code space} is replaced by {@code _} (underscore)</li>_<li>{@code , = _ : ? ' *} are replaced by {@code -} (hyphen)</li>_</ul>;static String replaceInvalidChars(String str) {_		char[] chars = null__		final int strLen = str.length()__		int pos = 0___		for (int i = 0_ i < strLen_ i++) {_			final char c = str.charAt(i)__			switch (c) {_				case '>':_				case '<':_				case '"':_					_					if (chars == null) {_						chars = str.toCharArray()__					}_					break___				case ' ':_					if (chars == null) {_						chars = str.toCharArray()__					}_					chars[pos++] = '_'__					break___				case ',':_				case '=':_				case '_':_				case ':':_				case '?':_				case '\'':_				case '*':_					if (chars == null) {_						chars = str.toCharArray()__					}_					chars[pos++] = '-'__					break___				default:_					if (chars != null) {_						chars[pos] = c__					}_					pos++__			}_		}__		return chars == null ? str : new String(chars, 0, pos)__	};lightweight,method,to,replace,unsupported,characters,if,the,string,does,not,contain,any,unsupported,characters,this,method,creates,no,new,string,and,in,fact,no,new,objects,at,all,p,replacements,ul,li,code,is,removed,li,li,code,space,is,replaced,by,code,underscore,li,li,code,are,replaced,by,code,hyphen,li,ul;static,string,replace,invalid,chars,string,str,char,chars,null,final,int,str,len,str,length,int,pos,0,for,int,i,0,i,str,len,i,final,char,c,str,char,at,i,switch,c,case,case,case,if,chars,null,chars,str,to,char,array,break,case,if,chars,null,chars,str,to,char,array,chars,pos,break,case,case,case,case,case,case,case,if,chars,null,chars,str,to,char,array,chars,pos,break,default,if,chars,null,chars,pos,c,pos,return,chars,null,str,new,string,chars,0,pos
JMXReporter -> JMXServer -> private void startRmiRegistry(int port) throws IOException;1469529015;Starts an RMI Registry that allows clients to lookup the JMX IP/port.__@param port rmi port to use_@throws IOException;private void startRmiRegistry(int port) throws IOException {_			rmiRegistry = LocateRegistry.createRegistry(port)__		};starts,an,rmi,registry,that,allows,clients,to,lookup,the,jmx,ip,port,param,port,rmi,port,to,use,throws,ioexception;private,void,start,rmi,registry,int,port,throws,ioexception,rmi,registry,locate,registry,create,registry,port
JMXReporter -> JMXServer -> private void startRmiRegistry(int port) throws IOException;1472489286;Starts an RMI Registry that allows clients to lookup the JMX IP/port.__@param port rmi port to use_@throws IOException;private void startRmiRegistry(int port) throws IOException {_			rmiRegistry = LocateRegistry.createRegistry(port)__		};starts,an,rmi,registry,that,allows,clients,to,lookup,the,jmx,ip,port,param,port,rmi,port,to,use,throws,ioexception;private,void,start,rmi,registry,int,port,throws,ioexception,rmi,registry,locate,registry,create,registry,port
JMXReporter -> JMXServer -> private void startRmiRegistry(int port) throws IOException;1477916104;Starts an RMI Registry that allows clients to lookup the JMX IP/port.__@param port rmi port to use_@throws IOException;private void startRmiRegistry(int port) throws IOException {_			rmiRegistry = LocateRegistry.createRegistry(port)__		};starts,an,rmi,registry,that,allows,clients,to,lookup,the,jmx,ip,port,param,port,rmi,port,to,use,throws,ioexception;private,void,start,rmi,registry,int,port,throws,ioexception,rmi,registry,locate,registry,create,registry,port
JMXReporter -> JMXServer -> private void startRmiRegistry(int port) throws IOException;1477916118;Starts an RMI Registry that allows clients to lookup the JMX IP/port.__@param port rmi port to use_@throws IOException;private void startRmiRegistry(int port) throws IOException {_			rmiRegistry = LocateRegistry.createRegistry(port)__		};starts,an,rmi,registry,that,allows,clients,to,lookup,the,jmx,ip,port,param,port,rmi,port,to,use,throws,ioexception;private,void,start,rmi,registry,int,port,throws,ioexception,rmi,registry,locate,registry,create,registry,port
JMXReporter -> JMXServer -> private void startRmiRegistry(int port) throws IOException;1481715813;Starts an RMI Registry that allows clients to lookup the JMX IP/port.__@param port rmi port to use_@throws IOException;private void startRmiRegistry(int port) throws IOException {_			rmiRegistry = LocateRegistry.createRegistry(port)__		};starts,an,rmi,registry,that,allows,clients,to,lookup,the,jmx,ip,port,param,port,rmi,port,to,use,throws,ioexception;private,void,start,rmi,registry,int,port,throws,ioexception,rmi,registry,locate,registry,create,registry,port
JMXReporter -> JMXServer -> private void startRmiRegistry(int port) throws IOException;1495637163;Starts an RMI Registry that allows clients to lookup the JMX IP/port.__@param port rmi port to use_@throws IOException;private void startRmiRegistry(int port) throws IOException {_			rmiRegistry = LocateRegistry.createRegistry(port)__		};starts,an,rmi,registry,that,allows,clients,to,lookup,the,jmx,ip,port,param,port,rmi,port,to,use,throws,ioexception;private,void,start,rmi,registry,int,port,throws,ioexception,rmi,registry,locate,registry,create,registry,port
JMXReporter -> JMXServer -> private void startRmiRegistry(int port) throws IOException;1515177485;Starts an RMI Registry that allows clients to lookup the JMX IP/port.__@param port rmi port to use_@throws IOException;private void startRmiRegistry(int port) throws IOException {_			rmiRegistry = LocateRegistry.createRegistry(port)__		};starts,an,rmi,registry,that,allows,clients,to,lookup,the,jmx,ip,port,param,port,rmi,port,to,use,throws,ioexception;private,void,start,rmi,registry,int,port,throws,ioexception,rmi,registry,locate,registry,create,registry,port
JMXReporter -> public JMXReporter();1469529015;Creates a new JMXReporter;public JMXReporter() {_		this.mBeanServer = ManagementFactory.getPlatformMBeanServer()__		this.registeredMetrics = new HashMap<>()__	};creates,a,new,jmxreporter;public,jmxreporter,this,m,bean,server,management,factory,get,platform,mbean,server,this,registered,metrics,new,hash,map
JMXReporter -> public JMXReporter();1472489286;Creates a new JMXReporter;public JMXReporter() {_		this.mBeanServer = ManagementFactory.getPlatformMBeanServer()__		this.registeredMetrics = new HashMap<>()__	};creates,a,new,jmxreporter;public,jmxreporter,this,m,bean,server,management,factory,get,platform,mbean,server,this,registered,metrics,new,hash,map
JMXReporter -> public JMXReporter();1477916104;Creates a new JMXReporter;public JMXReporter() {_		this.mBeanServer = ManagementFactory.getPlatformMBeanServer()__		this.registeredMetrics = new HashMap<>()__	};creates,a,new,jmxreporter;public,jmxreporter,this,m,bean,server,management,factory,get,platform,mbean,server,this,registered,metrics,new,hash,map
JMXReporter -> public JMXReporter();1477916118;Creates a new JMXReporter;public JMXReporter() {_		this.mBeanServer = ManagementFactory.getPlatformMBeanServer()__		this.registeredMetrics = new HashMap<>()__	};creates,a,new,jmxreporter;public,jmxreporter,this,m,bean,server,management,factory,get,platform,mbean,server,this,registered,metrics,new,hash,map
JMXReporter -> public JMXReporter();1481715813;Creates a new JMXReporter;public JMXReporter() {_		this.mBeanServer = ManagementFactory.getPlatformMBeanServer()__		this.registeredMetrics = new HashMap<>()__	};creates,a,new,jmxreporter;public,jmxreporter,this,m,bean,server,management,factory,get,platform,mbean,server,this,registered,metrics,new,hash,map
JMXReporter -> JMXServer -> private void startJmxService(int port) throws IOException;1469529015;Starts a JMX connector that allows (un)registering MBeans with the MBean server and RMI invocations.__@param port jmx port to use_@throws IOException;private void startJmxService(int port) throws IOException {_			String serviceUrl = "service:jmx:rmi://localhost:" + port + "/jndi/rmi://localhost:" + port + "/jmxrmi"__			JMXServiceURL url__			try {_				url = new JMXServiceURL(serviceUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("Malformed service url created " + serviceUrl, e)__			}__			connector = JMXConnectorServerFactory.newJMXConnectorServer(url, null, ManagementFactory.getPlatformMBeanServer())___			connector.start()__		};starts,a,jmx,connector,that,allows,un,registering,mbeans,with,the,mbean,server,and,rmi,invocations,param,port,jmx,port,to,use,throws,ioexception;private,void,start,jmx,service,int,port,throws,ioexception,string,service,url,service,jmx,rmi,localhost,port,jndi,rmi,localhost,port,jmxrmi,jmxservice,url,url,try,url,new,jmxservice,url,service,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,malformed,service,url,created,service,url,e,connector,jmxconnector,server,factory,new,jmxconnector,server,url,null,management,factory,get,platform,mbean,server,connector,start
JMXReporter -> JMXServer -> private void startJmxService(int port) throws IOException;1472489286;Starts a JMX connector that allows (un)registering MBeans with the MBean server and RMI invocations.__@param port jmx port to use_@throws IOException;private void startJmxService(int port) throws IOException {_			String serviceUrl = "service:jmx:rmi://localhost:" + port + "/jndi/rmi://localhost:" + port + "/jmxrmi"__			JMXServiceURL url__			try {_				url = new JMXServiceURL(serviceUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("Malformed service url created " + serviceUrl, e)__			}__			connector = JMXConnectorServerFactory.newJMXConnectorServer(url, null, ManagementFactory.getPlatformMBeanServer())___			connector.start()__		};starts,a,jmx,connector,that,allows,un,registering,mbeans,with,the,mbean,server,and,rmi,invocations,param,port,jmx,port,to,use,throws,ioexception;private,void,start,jmx,service,int,port,throws,ioexception,string,service,url,service,jmx,rmi,localhost,port,jndi,rmi,localhost,port,jmxrmi,jmxservice,url,url,try,url,new,jmxservice,url,service,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,malformed,service,url,created,service,url,e,connector,jmxconnector,server,factory,new,jmxconnector,server,url,null,management,factory,get,platform,mbean,server,connector,start
JMXReporter -> JMXServer -> private void startJmxService(int port) throws IOException;1477916104;Starts a JMX connector that allows (un)registering MBeans with the MBean server and RMI invocations.__@param port jmx port to use_@throws IOException;private void startJmxService(int port) throws IOException {_			String serviceUrl = "service:jmx:rmi://localhost:" + port + "/jndi/rmi://localhost:" + port + "/jmxrmi"__			JMXServiceURL url__			try {_				url = new JMXServiceURL(serviceUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("Malformed service url created " + serviceUrl, e)__			}__			connector = JMXConnectorServerFactory.newJMXConnectorServer(url, null, ManagementFactory.getPlatformMBeanServer())___			connector.start()__		};starts,a,jmx,connector,that,allows,un,registering,mbeans,with,the,mbean,server,and,rmi,invocations,param,port,jmx,port,to,use,throws,ioexception;private,void,start,jmx,service,int,port,throws,ioexception,string,service,url,service,jmx,rmi,localhost,port,jndi,rmi,localhost,port,jmxrmi,jmxservice,url,url,try,url,new,jmxservice,url,service,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,malformed,service,url,created,service,url,e,connector,jmxconnector,server,factory,new,jmxconnector,server,url,null,management,factory,get,platform,mbean,server,connector,start
JMXReporter -> JMXServer -> private void startJmxService(int port) throws IOException;1477916118;Starts a JMX connector that allows (un)registering MBeans with the MBean server and RMI invocations.__@param port jmx port to use_@throws IOException;private void startJmxService(int port) throws IOException {_			String serviceUrl = "service:jmx:rmi://localhost:" + port + "/jndi/rmi://localhost:" + port + "/jmxrmi"__			JMXServiceURL url__			try {_				url = new JMXServiceURL(serviceUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("Malformed service url created " + serviceUrl, e)__			}__			connector = JMXConnectorServerFactory.newJMXConnectorServer(url, null, ManagementFactory.getPlatformMBeanServer())___			connector.start()__		};starts,a,jmx,connector,that,allows,un,registering,mbeans,with,the,mbean,server,and,rmi,invocations,param,port,jmx,port,to,use,throws,ioexception;private,void,start,jmx,service,int,port,throws,ioexception,string,service,url,service,jmx,rmi,localhost,port,jndi,rmi,localhost,port,jmxrmi,jmxservice,url,url,try,url,new,jmxservice,url,service,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,malformed,service,url,created,service,url,e,connector,jmxconnector,server,factory,new,jmxconnector,server,url,null,management,factory,get,platform,mbean,server,connector,start
JMXReporter -> JMXServer -> private void startJmxService(int port) throws IOException;1481715813;Starts a JMX connector that allows (un)registering MBeans with the MBean server and RMI invocations.__@param port jmx port to use_@throws IOException;private void startJmxService(int port) throws IOException {_			String serviceUrl = "service:jmx:rmi://localhost:" + port + "/jndi/rmi://localhost:" + port + "/jmxrmi"__			JMXServiceURL url__			try {_				url = new JMXServiceURL(serviceUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("Malformed service url created " + serviceUrl, e)__			}__			connector = JMXConnectorServerFactory.newJMXConnectorServer(url, null, ManagementFactory.getPlatformMBeanServer())___			connector.start()__		};starts,a,jmx,connector,that,allows,un,registering,mbeans,with,the,mbean,server,and,rmi,invocations,param,port,jmx,port,to,use,throws,ioexception;private,void,start,jmx,service,int,port,throws,ioexception,string,service,url,service,jmx,rmi,localhost,port,jndi,rmi,localhost,port,jmxrmi,jmxservice,url,url,try,url,new,jmxservice,url,service,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,malformed,service,url,created,service,url,e,connector,jmxconnector,server,factory,new,jmxconnector,server,url,null,management,factory,get,platform,mbean,server,connector,start
JMXReporter -> JMXServer -> private void startJmxService(int port) throws IOException;1495637163;Starts a JMX connector that allows (un)registering MBeans with the MBean server and RMI invocations.__@param port jmx port to use_@throws IOException;private void startJmxService(int port) throws IOException {_			String serviceUrl = "service:jmx:rmi://localhost:" + port + "/jndi/rmi://localhost:" + port + "/jmxrmi"__			JMXServiceURL url__			try {_				url = new JMXServiceURL(serviceUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("Malformed service url created " + serviceUrl, e)__			}__			connector = JMXConnectorServerFactory.newJMXConnectorServer(url, null, ManagementFactory.getPlatformMBeanServer())___			connector.start()__		};starts,a,jmx,connector,that,allows,un,registering,mbeans,with,the,mbean,server,and,rmi,invocations,param,port,jmx,port,to,use,throws,ioexception;private,void,start,jmx,service,int,port,throws,ioexception,string,service,url,service,jmx,rmi,localhost,port,jndi,rmi,localhost,port,jmxrmi,jmxservice,url,url,try,url,new,jmxservice,url,service,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,malformed,service,url,created,service,url,e,connector,jmxconnector,server,factory,new,jmxconnector,server,url,null,management,factory,get,platform,mbean,server,connector,start
JMXReporter -> JMXServer -> private void startJmxService(int port) throws IOException;1515177485;Starts a JMX connector that allows (un)registering MBeans with the MBean server and RMI invocations.__@param port jmx port to use_@throws IOException;private void startJmxService(int port) throws IOException {_			String serviceUrl = "service:jmx:rmi://localhost:" + port + "/jndi/rmi://localhost:" + port + "/jmxrmi"__			JMXServiceURL url__			try {_				url = new JMXServiceURL(serviceUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("Malformed service url created " + serviceUrl, e)__			}__			connector = JMXConnectorServerFactory.newJMXConnectorServer(url, null, ManagementFactory.getPlatformMBeanServer())___			connector.start()__		};starts,a,jmx,connector,that,allows,un,registering,mbeans,with,the,mbean,server,and,rmi,invocations,param,port,jmx,port,to,use,throws,ioexception;private,void,start,jmx,service,int,port,throws,ioexception,string,service,url,service,jmx,rmi,localhost,port,jndi,rmi,localhost,port,jmxrmi,jmxservice,url,url,try,url,new,jmxservice,url,service,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,malformed,service,url,created,service,url,e,connector,jmxconnector,server,factory,new,jmxconnector,server,url,null,management,factory,get,platform,mbean,server,connector,start
