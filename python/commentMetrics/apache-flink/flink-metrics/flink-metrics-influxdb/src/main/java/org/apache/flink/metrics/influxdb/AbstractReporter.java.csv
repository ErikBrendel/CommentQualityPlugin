commented;modifiers;parameterAmount;loc;comment;code
false;public;3;18;;@Override public void notifyOfAddedMetric(Metric metric, String metricName, MetricGroup group) {     final MetricInfo metricInfo = metricInfoProvider.getMetricInfo(metricName, group).     synchronized (this) {         if (metric instanceof Counter) {             counters.put((Counter) metric, metricInfo).         } else if (metric instanceof Gauge) {             gauges.put((Gauge<?>) metric, metricInfo).         } else if (metric instanceof Histogram) {             histograms.put((Histogram) metric, metricInfo).         } else if (metric instanceof Meter) {             meters.put((Meter) metric, metricInfo).         } else {             log.warn("Cannot add unknown metric type {}. This indicates that the reporter " + "does not support this metric type.", metric.getClass().getName()).         }     } }
false;public;3;17;;@Override public void notifyOfRemovedMetric(Metric metric, String metricName, MetricGroup group) {     synchronized (this) {         if (metric instanceof Counter) {             counters.remove(metric).         } else if (metric instanceof Gauge) {             gauges.remove(metric).         } else if (metric instanceof Histogram) {             histograms.remove(metric).         } else if (metric instanceof Meter) {             meters.remove(metric).         } else {             log.warn("Cannot remove unknown metric type {}. This indicates that the reporter " + "does not support this metric type.", metric.getClass().getName()).         }     } }
