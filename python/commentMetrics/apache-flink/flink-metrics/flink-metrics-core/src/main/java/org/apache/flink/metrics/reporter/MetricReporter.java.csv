commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Configures this reporter. Since reporters are instantiated generically and hence parameter-less,  * this method is the place where the reporters set their basic fields based on configuration values.  *  * <p>This method is always called first on a newly instantiated reporter.  *  * @param config A properties object that contains all parameters set for this reporter.  */ ;// ------------------------------------------------------------------------ // life cycle // ------------------------------------------------------------------------ /**  * Configures this reporter. Since reporters are instantiated generically and hence parameter-less,  * this method is the place where the reporters set their basic fields based on configuration values.  *  * <p>This method is always called first on a newly instantiated reporter.  *  * @param config A properties object that contains all parameters set for this reporter.  */ void open(MetricConfig config).
true;;0;1;/**  * Closes this reporter. Should be used to close channels, streams and release resources.  */ ;/**  * Closes this reporter. Should be used to close channels, streams and release resources.  */ void close().
true;;3;1;/**  * Called when a new {@link Metric} was added.  *  * @param metric      the metric that was added  * @param metricName  the name of the metric  * @param group       the group that contains the metric  */ ;// ------------------------------------------------------------------------ // adding / removing metrics // ------------------------------------------------------------------------ /**  * Called when a new {@link Metric} was added.  *  * @param metric      the metric that was added  * @param metricName  the name of the metric  * @param group       the group that contains the metric  */ void notifyOfAddedMetric(Metric metric, String metricName, MetricGroup group).
true;;3;1;/**  * Called when a {@link Metric} was should be removed.  *  * @param metric      the metric that should be removed  * @param metricName  the name of the metric  * @param group       the group that contains the metric  */ ;/**  * Called when a {@link Metric} was should be removed.  *  * @param metric      the metric that should be removed  * @param metricName  the name of the metric  * @param group       the group that contains the metric  */ void notifyOfRemovedMetric(Metric metric, String metricName, MetricGroup group).
