commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public Counter counter(int name) {     return new SimpleCounter(). }
false;public;1;4;;@Override public Counter counter(String name) {     return new SimpleCounter(). }
false;public;2;4;;@Override public <C extends Counter> C counter(int name, C counter) {     return counter. }
false;public;2;4;;@Override public <C extends Counter> C counter(String name, C counter) {     return counter. }
false;public;2;4;;@Override public <T, G extends Gauge<T>> G gauge(int name, G gauge) {     return gauge. }
false;public;2;4;;@Override public <T, G extends Gauge<T>> G gauge(String name, G gauge) {     return gauge. }
false;public;2;4;;@Override public <H extends Histogram> H histogram(int name, H histogram) {     return histogram. }
false;public;2;4;;@Override public <M extends Meter> M meter(String name, M meter) {     return meter. }
false;public;2;4;;@Override public <M extends Meter> M meter(int name, M meter) {     return meter. }
false;public;2;4;;@Override public <H extends Histogram> H histogram(String name, H histogram) {     return histogram. }
false;public;1;4;;@Override public MetricGroup addGroup(int name) {     return addGroup(String.valueOf(name)). }
false;public;1;4;;@Override public MetricGroup addGroup(String name) {     return new UnregisteredMetricsGroup(). }
false;public;2;4;;@Override public MetricGroup addGroup(String key, String value) {     return new UnregisteredMetricsGroup(). }
false;public;0;4;;@Override public String[] getScopeComponents() {     return new String[0]. }
false;public;0;4;;@Override public Map<String, String> getAllVariables() {     return Collections.emptyMap(). }
false;public;1;4;;@Override public String getMetricIdentifier(String metricName) {     return metricName. }
false;public;2;4;;@Override public String getMetricIdentifier(String metricName, CharacterFilter filter) {     return metricName. }
