commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;4;;@Override protected SecurityContext installSecurityContext(Configuration configuration) throws Exception {     return YarnEntrypointUtils.installSecurityContext(configuration, workingDirectory). }
false;protected;1;4;;@Override protected String getRPCPortRange(Configuration configuration) {     return configuration.getString(YarnConfigOptions.APPLICATION_MASTER_PORT). }
false;protected;1;6;;@Override protected DispatcherResourceManagerComponentFactory<?> createDispatcherResourceManagerComponentFactory(Configuration configuration) {     return new JobDispatcherResourceManagerComponentFactory(YarnResourceManagerFactory.INSTANCE, FileJobGraphRetriever.createFrom(configuration)). }
false;public,static;1;28;;// ------------------------------------------------------------------------ // The executable entry point for the Yarn Application Master Process // for a single Flink job. // ------------------------------------------------------------------------ public static void main(String[] args) {     // startup checks and logging     EnvironmentInformation.logEnvironmentInfo(LOG, YarnJobClusterEntrypoint.class.getSimpleName(), args).     SignalHandler.register(LOG).     JvmShutdownSafeguard.installAsShutdownHook(LOG).     Map<String, String> env = System.getenv().     final String workingDirectory = env.get(ApplicationConstants.Environment.PWD.key()).     Preconditions.checkArgument(workingDirectory != null, "Working directory variable (%s) not set", ApplicationConstants.Environment.PWD.key()).     try {         YarnEntrypointUtils.logYarnEnvironmentInformation(env, LOG).     } catch (IOException e) {         LOG.warn("Could not log YARN environment information.", e).     }     Configuration configuration = YarnEntrypointUtils.loadConfiguration(workingDirectory, env, LOG).     YarnJobClusterEntrypoint yarnJobClusterEntrypoint = new YarnJobClusterEntrypoint(configuration, workingDirectory).     ClusterEntrypoint.runClusterEntrypoint(yarnJobClusterEntrypoint). }
