commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;// ------------------------------------------------------------------------ // Services // ------------------------------------------------------------------------ @Override public LeaderRetrievalService getResourceManagerLeaderRetriever() {     enter().     try {         return new StandaloneLeaderRetrievalService(resourceManagerRpcUrl, DEFAULT_LEADER_ID).     } finally {         exit().     } }
false;public;0;10;;@Override public LeaderRetrievalService getDispatcherLeaderRetriever() {     enter().     try {         return new StandaloneLeaderRetrievalService(dispatcherRpcUrl, DEFAULT_LEADER_ID).     } finally {         exit().     } }
false;public;0;10;;@Override public LeaderElectionService getResourceManagerLeaderElectionService() {     enter().     try {         throw new UnsupportedOperationException("Not supported on the TaskManager side").     } finally {         exit().     } }
false;public;0;9;;@Override public LeaderElectionService getDispatcherLeaderElectionService() {     enter().     try {         throw new UnsupportedOperationException("Not supported on the TaskManager side").     } finally {         exit().     } }
false;public;1;10;;@Override public LeaderElectionService getJobManagerLeaderElectionService(JobID jobID) {     enter().     try {         throw new UnsupportedOperationException("needs refactoring to accept default address").     } finally {         exit().     } }
false;public;0;10;;@Override public LeaderElectionService getWebMonitorLeaderElectionService() {     enter().     try {         throw new UnsupportedOperationException().     } finally {         exit().     } }
false;public;1;10;;@Override public LeaderRetrievalService getJobManagerLeaderRetriever(JobID jobID) {     enter().     try {         throw new UnsupportedOperationException("needs refactoring to accept default address").     } finally {         exit().     } }
false;public;2;9;;@Override public LeaderRetrievalService getJobManagerLeaderRetriever(JobID jobID, String defaultJobManagerAddress) {     enter().     try {         return new StandaloneLeaderRetrievalService(defaultJobManagerAddress, DEFAULT_LEADER_ID).     } finally {         exit().     } }
false;public;0;10;;@Override public LeaderRetrievalService getWebMonitorLeaderRetriever() {     enter().     try {         throw new UnsupportedOperationException().     } finally {         exit().     } }
