# id;timestamp;commentText;codeText;commentWords;codeWords
YarnResourceManagerTest -> Context -> public void stopResourceManager() throws Exception;1510152676;Stop the Akka actor system.;public void stopResourceManager() throws Exception {_			rpcService.stopService()__		};stop,the,akka,actor,system;public,void,stop,resource,manager,throws,exception,rpc,service,stop,service
YarnResourceManagerTest -> Context -> public void stopResourceManager() throws Exception;1510152677;Stop the Akka actor system.;public void stopResourceManager() throws Exception {_			rpcService.stopService()__		};stop,the,akka,actor,system;public,void,stop,resource,manager,throws,exception,rpc,service,stop,service
YarnResourceManagerTest -> Context -> public void stopResourceManager() throws Exception;1512394695;Stop the Akka actor system.;public void stopResourceManager() throws Exception {_			rpcService.stopService()__		};stop,the,akka,actor,system;public,void,stop,resource,manager,throws,exception,rpc,service,stop,service
YarnResourceManagerTest -> Context -> public void stopResourceManager() throws Exception;1513102156;Stop the Akka actor system.;public void stopResourceManager() throws Exception {_			rpcService.stopService()__		};stop,the,akka,actor,system;public,void,stop,resource,manager,throws,exception,rpc,service,stop,service
YarnResourceManagerTest -> Context -> public void stopResourceManager() throws Exception;1513258343;Stop the Akka actor system.;public void stopResourceManager() throws Exception {_			rpcService.stopService()__		};stop,the,akka,actor,system;public,void,stop,resource,manager,throws,exception,rpc,service,stop,service
YarnResourceManagerTest -> Context -> public void stopResourceManager() throws Exception;1513263078;Stop the Akka actor system.;public void stopResourceManager() throws Exception {_			rpcService.stopService()__		};stop,the,akka,actor,system;public,void,stop,resource,manager,throws,exception,rpc,service,stop,service
YarnResourceManagerTest -> Context -> public void stopResourceManager() throws Exception;1516890809;Stop the Akka actor system.;public void stopResourceManager() throws Exception {_			rpcService.stopService()__		};stop,the,akka,actor,system;public,void,stop,resource,manager,throws,exception,rpc,service,stop,service
YarnResourceManagerTest -> Context -> public void stopResourceManager() throws Exception;1517915730;Stop the Akka actor system.;public void stopResourceManager() throws Exception {_			rpcService.stopService()__		};stop,the,akka,actor,system;public,void,stop,resource,manager,throws,exception,rpc,service,stop,service
YarnResourceManagerTest -> Context -> public void stopResourceManager() throws Exception;1519406526;Stop the Akka actor system.;public void stopResourceManager() throws Exception {_			rpcService.stopService().get()__		};stop,the,akka,actor,system;public,void,stop,resource,manager,throws,exception,rpc,service,stop,service,get
YarnResourceManagerTest -> Context -> public void stopResourceManager() throws Exception;1521382480;Stop the Akka actor system.;public void stopResourceManager() throws Exception {_			rpcService.stopService().get()__		};stop,the,akka,actor,system;public,void,stop,resource,manager,throws,exception,rpc,service,stop,service,get
YarnResourceManagerTest -> Context -> public void stopResourceManager() throws Exception;1525116069;Stop the Akka actor system.;public void stopResourceManager() throws Exception {_			rpcService.stopService().get()__		};stop,the,akka,actor,system;public,void,stop,resource,manager,throws,exception,rpc,service,stop,service,get
YarnResourceManagerTest -> Context -> public void stopResourceManager() throws Exception;1527173115;Stop the Akka actor system.;public void stopResourceManager() throws Exception {_			rpcService.stopService().get()__		};stop,the,akka,actor,system;public,void,stop,resource,manager,throws,exception,rpc,service,stop,service,get
YarnResourceManagerTest -> Context -> public void stopResourceManager() throws Exception;1530542668;Stop the Akka actor system.;public void stopResourceManager() throws Exception {_			rpcService.stopService().get()__		};stop,the,akka,actor,system;public,void,stop,resource,manager,throws,exception,rpc,service,stop,service,get
YarnResourceManagerTest -> Context -> public void stopResourceManager() throws Exception;1532290976;Stop the Akka actor system.;public void stopResourceManager() throws Exception {_			rpcService.stopService().get()__		};stop,the,akka,actor,system;public,void,stop,resource,manager,throws,exception,rpc,service,stop,service,get
YarnResourceManagerTest -> Context -> void stopResourceManager() throws Exception;1533827661;Stop the Akka actor system.;void stopResourceManager() throws Exception {_			rpcService.stopService().get()__		};stop,the,akka,actor,system;void,stop,resource,manager,throws,exception,rpc,service,stop,service,get
YarnResourceManagerTest -> Context -> void stopResourceManager() throws Exception;1539582211;Stop the Akka actor system.;void stopResourceManager() throws Exception {_			rpcService.stopService().get()__		};stop,the,akka,actor,system;void,stop,resource,manager,throws,exception,rpc,service,stop,service,get
YarnResourceManagerTest -> Context -> void stopResourceManager() throws Exception;1546618773;Stop the Akka actor system.;void stopResourceManager() throws Exception {_			rpcService.stopService().get()__		};stop,the,akka,actor,system;void,stop,resource,manager,throws,exception,rpc,service,stop,service,get
YarnResourceManagerTest -> Context -> void stopResourceManager() throws Exception;1546953479;Stop the Akka actor system.;void stopResourceManager() throws Exception {_			rpcService.stopService().get()__		};stop,the,akka,actor,system;void,stop,resource,manager,throws,exception,rpc,service,stop,service,get
YarnResourceManagerTest -> Context -> void stopResourceManager() throws Exception;1547219864;Stop the Akka actor system.;void stopResourceManager() throws Exception {_			rpcService.stopService().get()__		};stop,the,akka,actor,system;void,stop,resource,manager,throws,exception,rpc,service,stop,service,get
YarnResourceManagerTest -> Context -> void stopResourceManager() throws Exception;1550005040;Stop the Akka actor system.;void stopResourceManager() throws Exception {_			rpcService.stopService().get()__		};stop,the,akka,actor,system;void,stop,resource,manager,throws,exception,rpc,service,stop,service,get
YarnResourceManagerTest -> Context -> Context() throws Exception;1510152676;Create mock RM dependencies.;Context() throws Exception {_			rpcService = new TestingRpcService()__			fatalErrorHandler = new TestingFatalErrorHandler()__			rmServices = new MockResourceManagerRuntimeServices()___			_			rmConfiguration = new ResourceManagerConfiguration(_					Time.seconds(5L),_					Time.seconds(5L))__			rmResourceID = ResourceID.generate()__			resourceManager =_					new TestingYarnResourceManager(_							rpcService,_							RM_ADDRESS,_							rmResourceID,_							flinkConfig,_							env,_							rmConfiguration,_							rmServices.highAvailabilityServices,_							rmServices.heartbeatServices,_							rmServices.slotManager,_							rmServices.metricRegistry,_							rmServices.jobLeaderIdService,_							fatalErrorHandler,_							mockResourceManagerClient,_							mockNMClient_					)__		};create,mock,rm,dependencies;context,throws,exception,rpc,service,new,testing,rpc,service,fatal,error,handler,new,testing,fatal,error,handler,rm,services,new,mock,resource,manager,runtime,services,rm,configuration,new,resource,manager,configuration,time,seconds,5l,time,seconds,5l,rm,resource,id,resource,id,generate,resource,manager,new,testing,yarn,resource,manager,rpc,service,rm,resource,id,flink,config,env,rm,configuration,rm,services,high,availability,services,rm,services,heartbeat,services,rm,services,slot,manager,rm,services,metric,registry,rm,services,job,leader,id,service,fatal,error,handler,mock,resource,manager,client,mock,nmclient
YarnResourceManagerTest -> Context -> Context() throws Exception;1510152677;Create mock RM dependencies.;Context() throws Exception {_			rpcService = new TestingRpcService()__			fatalErrorHandler = new TestingFatalErrorHandler()__			rmServices = new MockResourceManagerRuntimeServices()___			_			rmConfiguration = new ResourceManagerConfiguration(_					Time.seconds(5L),_					Time.seconds(5L))__			rmResourceID = ResourceID.generate()__			resourceManager =_					new TestingYarnResourceManager(_							rpcService,_							RM_ADDRESS,_							rmResourceID,_							flinkConfig,_							env,_							rmConfiguration,_							rmServices.highAvailabilityServices,_							rmServices.heartbeatServices,_							rmServices.slotManager,_							rmServices.metricRegistry,_							rmServices.jobLeaderIdService,_							fatalErrorHandler,_							mockResourceManagerClient,_							mockNMClient_					)__		};create,mock,rm,dependencies;context,throws,exception,rpc,service,new,testing,rpc,service,fatal,error,handler,new,testing,fatal,error,handler,rm,services,new,mock,resource,manager,runtime,services,rm,configuration,new,resource,manager,configuration,time,seconds,5l,time,seconds,5l,rm,resource,id,resource,id,generate,resource,manager,new,testing,yarn,resource,manager,rpc,service,rm,resource,id,flink,config,env,rm,configuration,rm,services,high,availability,services,rm,services,heartbeat,services,rm,services,slot,manager,rm,services,metric,registry,rm,services,job,leader,id,service,fatal,error,handler,mock,resource,manager,client,mock,nmclient
YarnResourceManagerTest -> Context -> Context() throws Exception;1512394695;Create mock RM dependencies.;Context() throws Exception {_			rpcService = new TestingRpcService()__			fatalErrorHandler = new TestingFatalErrorHandler()__			rmServices = new MockResourceManagerRuntimeServices()___			_			rmConfiguration = new ResourceManagerConfiguration(_					Time.seconds(5L),_					Time.seconds(5L))__			rmResourceID = ResourceID.generate()__			resourceManager =_					new TestingYarnResourceManager(_							rpcService,_							RM_ADDRESS,_							rmResourceID,_							flinkConfig,_							env,_							rmConfiguration,_							rmServices.highAvailabilityServices,_							rmServices.heartbeatServices,_							rmServices.slotManager,_							rmServices.metricRegistry,_							rmServices.jobLeaderIdService,_							fatalErrorHandler,_							mockResourceManagerClient,_							mockNMClient_					)__		};create,mock,rm,dependencies;context,throws,exception,rpc,service,new,testing,rpc,service,fatal,error,handler,new,testing,fatal,error,handler,rm,services,new,mock,resource,manager,runtime,services,rm,configuration,new,resource,manager,configuration,time,seconds,5l,time,seconds,5l,rm,resource,id,resource,id,generate,resource,manager,new,testing,yarn,resource,manager,rpc,service,rm,resource,id,flink,config,env,rm,configuration,rm,services,high,availability,services,rm,services,heartbeat,services,rm,services,slot,manager,rm,services,metric,registry,rm,services,job,leader,id,service,fatal,error,handler,mock,resource,manager,client,mock,nmclient
YarnResourceManagerTest -> Context -> Context() throws Exception;1513102156;Create mock RM dependencies.;Context() throws Exception {_			rpcService = new TestingRpcService()__			fatalErrorHandler = new TestingFatalErrorHandler()__			rmServices = new MockResourceManagerRuntimeServices()___			_			rmConfiguration = new ResourceManagerConfiguration(_					Time.seconds(5L),_					Time.seconds(5L))__			rmResourceID = ResourceID.generate()__			resourceManager =_					new TestingYarnResourceManager(_							rpcService,_							RM_ADDRESS,_							rmResourceID,_							flinkConfig,_							env,_							rmConfiguration,_							rmServices.highAvailabilityServices,_							rmServices.heartbeatServices,_							rmServices.slotManager,_							rmServices.metricRegistry,_							rmServices.jobLeaderIdService,_							fatalErrorHandler,_							mockResourceManagerClient,_							mockNMClient_					)__		};create,mock,rm,dependencies;context,throws,exception,rpc,service,new,testing,rpc,service,fatal,error,handler,new,testing,fatal,error,handler,rm,services,new,mock,resource,manager,runtime,services,rm,configuration,new,resource,manager,configuration,time,seconds,5l,time,seconds,5l,rm,resource,id,resource,id,generate,resource,manager,new,testing,yarn,resource,manager,rpc,service,rm,resource,id,flink,config,env,rm,configuration,rm,services,high,availability,services,rm,services,heartbeat,services,rm,services,slot,manager,rm,services,metric,registry,rm,services,job,leader,id,service,fatal,error,handler,mock,resource,manager,client,mock,nmclient
YarnResourceManagerTest -> Context -> Context() throws Exception;1513258343;Create mock RM dependencies.;Context() throws Exception {_			rpcService = new TestingRpcService()__			fatalErrorHandler = new TestingFatalErrorHandler()__			rmServices = new MockResourceManagerRuntimeServices()___			_			rmConfiguration = new ResourceManagerConfiguration(_					Time.seconds(5L),_					Time.seconds(5L))__			rmResourceID = ResourceID.generate()__			resourceManager =_					new TestingYarnResourceManager(_							rpcService,_							RM_ADDRESS,_							rmResourceID,_							flinkConfig,_							env,_							rmConfiguration,_							rmServices.highAvailabilityServices,_							rmServices.heartbeatServices,_							rmServices.slotManager,_							rmServices.metricRegistry,_							rmServices.jobLeaderIdService,_							fatalErrorHandler,_							null,_							mockResourceManagerClient,_							mockNMClient)__		};create,mock,rm,dependencies;context,throws,exception,rpc,service,new,testing,rpc,service,fatal,error,handler,new,testing,fatal,error,handler,rm,services,new,mock,resource,manager,runtime,services,rm,configuration,new,resource,manager,configuration,time,seconds,5l,time,seconds,5l,rm,resource,id,resource,id,generate,resource,manager,new,testing,yarn,resource,manager,rpc,service,rm,resource,id,flink,config,env,rm,configuration,rm,services,high,availability,services,rm,services,heartbeat,services,rm,services,slot,manager,rm,services,metric,registry,rm,services,job,leader,id,service,fatal,error,handler,null,mock,resource,manager,client,mock,nmclient
YarnResourceManagerTest -> Context -> Context() throws Exception;1513263078;Create mock RM dependencies.;Context() throws Exception {_			rpcService = new TestingRpcService()__			fatalErrorHandler = new TestingFatalErrorHandler()__			rmServices = new MockResourceManagerRuntimeServices()___			_			rmConfiguration = new ResourceManagerConfiguration(_					Time.seconds(5L),_					Time.seconds(5L))__			rmResourceID = ResourceID.generate()__			resourceManager =_					new TestingYarnResourceManager(_							rpcService,_							RM_ADDRESS,_							rmResourceID,_							flinkConfig,_							env,_							rmConfiguration,_							rmServices.highAvailabilityServices,_							rmServices.heartbeatServices,_							rmServices.slotManager,_							rmServices.metricRegistry,_							rmServices.jobLeaderIdService,_							fatalErrorHandler,_							null,_							mockResourceManagerClient,_							mockNMClient)__		};create,mock,rm,dependencies;context,throws,exception,rpc,service,new,testing,rpc,service,fatal,error,handler,new,testing,fatal,error,handler,rm,services,new,mock,resource,manager,runtime,services,rm,configuration,new,resource,manager,configuration,time,seconds,5l,time,seconds,5l,rm,resource,id,resource,id,generate,resource,manager,new,testing,yarn,resource,manager,rpc,service,rm,resource,id,flink,config,env,rm,configuration,rm,services,high,availability,services,rm,services,heartbeat,services,rm,services,slot,manager,rm,services,metric,registry,rm,services,job,leader,id,service,fatal,error,handler,null,mock,resource,manager,client,mock,nmclient
YarnResourceManagerTest -> Context -> Context() throws Exception;1516890809;Create mock RM dependencies.;Context() throws Exception {_			rpcService = new TestingRpcService()__			fatalErrorHandler = new TestingFatalErrorHandler()__			rmServices = new MockResourceManagerRuntimeServices()___			_			rmConfiguration = new ResourceManagerConfiguration(_					Time.seconds(5L),_					Time.seconds(5L))__			rmResourceID = ResourceID.generate()__			resourceManager =_					new TestingYarnResourceManager(_							rpcService,_							RM_ADDRESS,_							rmResourceID,_							flinkConfig,_							env,_							rmConfiguration,_							rmServices.highAvailabilityServices,_							rmServices.heartbeatServices,_							rmServices.slotManager,_							rmServices.metricRegistry,_							rmServices.jobLeaderIdService,_							fatalErrorHandler,_							null,_							mockResourceManagerClient,_							mockNMClient)__		};create,mock,rm,dependencies;context,throws,exception,rpc,service,new,testing,rpc,service,fatal,error,handler,new,testing,fatal,error,handler,rm,services,new,mock,resource,manager,runtime,services,rm,configuration,new,resource,manager,configuration,time,seconds,5l,time,seconds,5l,rm,resource,id,resource,id,generate,resource,manager,new,testing,yarn,resource,manager,rpc,service,rm,resource,id,flink,config,env,rm,configuration,rm,services,high,availability,services,rm,services,heartbeat,services,rm,services,slot,manager,rm,services,metric,registry,rm,services,job,leader,id,service,fatal,error,handler,null,mock,resource,manager,client,mock,nmclient
YarnResourceManagerTest -> Context -> Context() throws Exception;1517915730;Create mock RM dependencies.;Context() throws Exception {_			rpcService = new TestingRpcService()__			fatalErrorHandler = new TestingFatalErrorHandler()__			rmServices = new MockResourceManagerRuntimeServices()___			_			rmConfiguration = new ResourceManagerConfiguration(_					Time.seconds(5L),_					Time.seconds(5L))__			rmResourceID = ResourceID.generate()__			resourceManager =_					new TestingYarnResourceManager(_							rpcService,_							RM_ADDRESS,_							rmResourceID,_							flinkConfig,_							env,_							rmConfiguration,_							rmServices.highAvailabilityServices,_							rmServices.heartbeatServices,_							rmServices.slotManager,_							rmServices.metricRegistry,_							rmServices.jobLeaderIdService,_							new ClusterInformation("localhost", 1234),_							fatalErrorHandler,_							null,_							mockResourceManagerClient,_							mockNMClient)__		};create,mock,rm,dependencies;context,throws,exception,rpc,service,new,testing,rpc,service,fatal,error,handler,new,testing,fatal,error,handler,rm,services,new,mock,resource,manager,runtime,services,rm,configuration,new,resource,manager,configuration,time,seconds,5l,time,seconds,5l,rm,resource,id,resource,id,generate,resource,manager,new,testing,yarn,resource,manager,rpc,service,rm,resource,id,flink,config,env,rm,configuration,rm,services,high,availability,services,rm,services,heartbeat,services,rm,services,slot,manager,rm,services,metric,registry,rm,services,job,leader,id,service,new,cluster,information,localhost,1234,fatal,error,handler,null,mock,resource,manager,client,mock,nmclient
YarnResourceManagerTest -> Context -> Context() throws Exception;1519406526;Create mock RM dependencies.;Context() throws Exception {_			rpcService = new TestingRpcService()__			fatalErrorHandler = new TestingFatalErrorHandler()__			rmServices = new MockResourceManagerRuntimeServices()___			_			rmConfiguration = new ResourceManagerConfiguration(_					Time.seconds(5L),_					Time.seconds(5L))__			rmResourceID = ResourceID.generate()__			resourceManager =_					new TestingYarnResourceManager(_							rpcService,_							RM_ADDRESS,_							rmResourceID,_							flinkConfig,_							env,_							rmConfiguration,_							rmServices.highAvailabilityServices,_							rmServices.heartbeatServices,_							rmServices.slotManager,_							rmServices.metricRegistry,_							rmServices.jobLeaderIdService,_							new ClusterInformation("localhost", 1234),_							fatalErrorHandler,_							null,_							mockResourceManagerClient,_							mockNMClient)__		};create,mock,rm,dependencies;context,throws,exception,rpc,service,new,testing,rpc,service,fatal,error,handler,new,testing,fatal,error,handler,rm,services,new,mock,resource,manager,runtime,services,rm,configuration,new,resource,manager,configuration,time,seconds,5l,time,seconds,5l,rm,resource,id,resource,id,generate,resource,manager,new,testing,yarn,resource,manager,rpc,service,rm,resource,id,flink,config,env,rm,configuration,rm,services,high,availability,services,rm,services,heartbeat,services,rm,services,slot,manager,rm,services,metric,registry,rm,services,job,leader,id,service,new,cluster,information,localhost,1234,fatal,error,handler,null,mock,resource,manager,client,mock,nmclient
YarnResourceManagerTest -> Context -> Context() throws Exception;1521382480;Create mock RM dependencies.;Context() throws Exception {_			rpcService = new TestingRpcService()__			fatalErrorHandler = new TestingFatalErrorHandler()__			rmServices = new MockResourceManagerRuntimeServices()___			_			rmConfiguration = new ResourceManagerConfiguration(_					Time.seconds(5L),_					Time.seconds(5L))__			rmResourceID = ResourceID.generate()__			resourceManager =_					new TestingYarnResourceManager(_							rpcService,_							RM_ADDRESS,_							rmResourceID,_							flinkConfig,_							env,_							rmConfiguration,_							rmServices.highAvailabilityServices,_							rmServices.heartbeatServices,_							rmServices.slotManager,_							rmServices.metricRegistry,_							rmServices.jobLeaderIdService,_							new ClusterInformation("localhost", 1234),_							fatalErrorHandler,_							null,_							mockResourceManagerClient,_							mockNMClient)__		};create,mock,rm,dependencies;context,throws,exception,rpc,service,new,testing,rpc,service,fatal,error,handler,new,testing,fatal,error,handler,rm,services,new,mock,resource,manager,runtime,services,rm,configuration,new,resource,manager,configuration,time,seconds,5l,time,seconds,5l,rm,resource,id,resource,id,generate,resource,manager,new,testing,yarn,resource,manager,rpc,service,rm,resource,id,flink,config,env,rm,configuration,rm,services,high,availability,services,rm,services,heartbeat,services,rm,services,slot,manager,rm,services,metric,registry,rm,services,job,leader,id,service,new,cluster,information,localhost,1234,fatal,error,handler,null,mock,resource,manager,client,mock,nmclient
YarnResourceManagerTest -> Context -> Context() throws Exception;1525116069;Create mock RM dependencies.;Context() throws Exception {_			rpcService = new TestingRpcService()__			fatalErrorHandler = new TestingFatalErrorHandler()__			rmServices = new MockResourceManagerRuntimeServices()___			_			rmConfiguration = new ResourceManagerConfiguration(_					Time.seconds(5L),_					Time.seconds(5L))__			rmResourceID = ResourceID.generate()__			resourceManager =_					new TestingYarnResourceManager(_							rpcService,_							RM_ADDRESS,_							rmResourceID,_							flinkConfig,_							env,_							rmConfiguration,_							rmServices.highAvailabilityServices,_							rmServices.heartbeatServices,_							rmServices.slotManager,_							rmServices.metricRegistry,_							rmServices.jobLeaderIdService,_							new ClusterInformation("localhost", 1234),_							fatalErrorHandler,_							null,_							mockResourceManagerClient,_							mockNMClient)__		};create,mock,rm,dependencies;context,throws,exception,rpc,service,new,testing,rpc,service,fatal,error,handler,new,testing,fatal,error,handler,rm,services,new,mock,resource,manager,runtime,services,rm,configuration,new,resource,manager,configuration,time,seconds,5l,time,seconds,5l,rm,resource,id,resource,id,generate,resource,manager,new,testing,yarn,resource,manager,rpc,service,rm,resource,id,flink,config,env,rm,configuration,rm,services,high,availability,services,rm,services,heartbeat,services,rm,services,slot,manager,rm,services,metric,registry,rm,services,job,leader,id,service,new,cluster,information,localhost,1234,fatal,error,handler,null,mock,resource,manager,client,mock,nmclient
YarnResourceManagerTest -> Context -> Context() throws Exception;1527173115;Create mock RM dependencies.;Context() throws Exception {_			rpcService = new TestingRpcService()__			fatalErrorHandler = new TestingFatalErrorHandler()__			rmServices = new MockResourceManagerRuntimeServices()___			_			rmConfiguration = new ResourceManagerConfiguration(_					Time.seconds(5L),_					Time.seconds(5L))__			rmResourceID = ResourceID.generate()__			resourceManager =_					new TestingYarnResourceManager(_							rpcService,_							RM_ADDRESS,_							rmResourceID,_							flinkConfig,_							env,_							rmConfiguration,_							rmServices.highAvailabilityServices,_							rmServices.heartbeatServices,_							rmServices.slotManager,_							rmServices.metricRegistry,_							rmServices.jobLeaderIdService,_							new ClusterInformation("localhost", 1234),_							fatalErrorHandler,_							null,_							mockResourceManagerClient,_							mockNMClient)__		};create,mock,rm,dependencies;context,throws,exception,rpc,service,new,testing,rpc,service,fatal,error,handler,new,testing,fatal,error,handler,rm,services,new,mock,resource,manager,runtime,services,rm,configuration,new,resource,manager,configuration,time,seconds,5l,time,seconds,5l,rm,resource,id,resource,id,generate,resource,manager,new,testing,yarn,resource,manager,rpc,service,rm,resource,id,flink,config,env,rm,configuration,rm,services,high,availability,services,rm,services,heartbeat,services,rm,services,slot,manager,rm,services,metric,registry,rm,services,job,leader,id,service,new,cluster,information,localhost,1234,fatal,error,handler,null,mock,resource,manager,client,mock,nmclient
YarnResourceManagerTest -> Context -> Context() throws Exception;1530542668;Create mock RM dependencies.;Context() throws Exception {_			rpcService = new TestingRpcService()__			fatalErrorHandler = new TestingFatalErrorHandler()__			rmServices = new MockResourceManagerRuntimeServices()___			_			rmConfiguration = new ResourceManagerConfiguration(_					Time.seconds(5L),_					Time.seconds(5L))__			rmResourceID = ResourceID.generate()__			resourceManager =_					new TestingYarnResourceManager(_							rpcService,_							RM_ADDRESS,_							rmResourceID,_							flinkConfig,_							env,_							rmConfiguration,_							rmServices.highAvailabilityServices,_							rmServices.heartbeatServices,_							rmServices.slotManager,_							rmServices.metricRegistry,_							rmServices.jobLeaderIdService,_							new ClusterInformation("localhost", 1234),_							fatalErrorHandler,_							null,_							mockResourceManagerClient,_							mockNMClient)__		};create,mock,rm,dependencies;context,throws,exception,rpc,service,new,testing,rpc,service,fatal,error,handler,new,testing,fatal,error,handler,rm,services,new,mock,resource,manager,runtime,services,rm,configuration,new,resource,manager,configuration,time,seconds,5l,time,seconds,5l,rm,resource,id,resource,id,generate,resource,manager,new,testing,yarn,resource,manager,rpc,service,rm,resource,id,flink,config,env,rm,configuration,rm,services,high,availability,services,rm,services,heartbeat,services,rm,services,slot,manager,rm,services,metric,registry,rm,services,job,leader,id,service,new,cluster,information,localhost,1234,fatal,error,handler,null,mock,resource,manager,client,mock,nmclient
YarnResourceManagerTest -> Context -> Context() throws Exception;1532290976;Create mock RM dependencies.;Context() throws Exception {_			rpcService = new TestingRpcService()__			fatalErrorHandler = new TestingFatalErrorHandler()__			rmServices = new MockResourceManagerRuntimeServices()___			_			rmResourceID = ResourceID.generate()__			resourceManager =_					new TestingYarnResourceManager(_							rpcService,_							RM_ADDRESS,_							rmResourceID,_							flinkConfig,_							env,_							rmServices.highAvailabilityServices,_							rmServices.heartbeatServices,_							rmServices.slotManager,_							rmServices.metricRegistry,_							rmServices.jobLeaderIdService,_							new ClusterInformation("localhost", 1234),_							fatalErrorHandler,_							null,_							mockResourceManagerClient,_							mockNMClient)__		};create,mock,rm,dependencies;context,throws,exception,rpc,service,new,testing,rpc,service,fatal,error,handler,new,testing,fatal,error,handler,rm,services,new,mock,resource,manager,runtime,services,rm,resource,id,resource,id,generate,resource,manager,new,testing,yarn,resource,manager,rpc,service,rm,resource,id,flink,config,env,rm,services,high,availability,services,rm,services,heartbeat,services,rm,services,slot,manager,rm,services,metric,registry,rm,services,job,leader,id,service,new,cluster,information,localhost,1234,fatal,error,handler,null,mock,resource,manager,client,mock,nmclient
YarnResourceManagerTest -> Context -> Context() throws Exception;1533827661;Create mock RM dependencies.;Context() throws Exception {_			rpcService = new TestingRpcService()__			rmServices = new MockResourceManagerRuntimeServices()___			_			rmResourceID = ResourceID.generate()__			resourceManager =_					new TestingYarnResourceManager(_							rpcService,_							RM_ADDRESS,_							rmResourceID,_							flinkConfig,_							env,_							rmServices.highAvailabilityServices,_							rmServices.heartbeatServices,_							rmServices.slotManager,_							rmServices.metricRegistry,_							rmServices.jobLeaderIdService,_							new ClusterInformation("localhost", 1234),_							testingFatalErrorHandler,_							null,_							mockResourceManagerClient,_							mockNMClient)__		};create,mock,rm,dependencies;context,throws,exception,rpc,service,new,testing,rpc,service,rm,services,new,mock,resource,manager,runtime,services,rm,resource,id,resource,id,generate,resource,manager,new,testing,yarn,resource,manager,rpc,service,rm,resource,id,flink,config,env,rm,services,high,availability,services,rm,services,heartbeat,services,rm,services,slot,manager,rm,services,metric,registry,rm,services,job,leader,id,service,new,cluster,information,localhost,1234,testing,fatal,error,handler,null,mock,resource,manager,client,mock,nmclient
YarnResourceManagerTest -> Context -> Context() throws Exception;1539582211;Create mock RM dependencies.;Context() throws Exception {_			rpcService = new TestingRpcService()__			rmServices = new MockResourceManagerRuntimeServices()___			_			rmResourceID = ResourceID.generate()__			resourceManager =_					new TestingYarnResourceManager(_							rpcService,_							RM_ADDRESS,_							rmResourceID,_							flinkConfig,_							env,_							rmServices.highAvailabilityServices,_							rmServices.heartbeatServices,_							rmServices.slotManager,_							rmServices.metricRegistry,_							rmServices.jobLeaderIdService,_							new ClusterInformation("localhost", 1234),_							testingFatalErrorHandler,_							null,_							mockResourceManagerClient,_							mockNMClient,_							mockJMMetricGroup)__		};create,mock,rm,dependencies;context,throws,exception,rpc,service,new,testing,rpc,service,rm,services,new,mock,resource,manager,runtime,services,rm,resource,id,resource,id,generate,resource,manager,new,testing,yarn,resource,manager,rpc,service,rm,resource,id,flink,config,env,rm,services,high,availability,services,rm,services,heartbeat,services,rm,services,slot,manager,rm,services,metric,registry,rm,services,job,leader,id,service,new,cluster,information,localhost,1234,testing,fatal,error,handler,null,mock,resource,manager,client,mock,nmclient,mock,jmmetric,group
YarnResourceManagerTest -> Context -> Context() throws Exception;1546618773;Create mock RM dependencies.;Context() throws Exception {_			rpcService = new TestingRpcService()__			rmServices = new MockResourceManagerRuntimeServices()___			_			rmResourceID = ResourceID.generate()__			resourceManager =_					new TestingYarnResourceManager(_							rpcService,_							RM_ADDRESS,_							rmResourceID,_							flinkConfig,_							env,_							rmServices.highAvailabilityServices,_							rmServices.heartbeatServices,_							rmServices.slotManager,_							rmServices.metricRegistry,_							rmServices.jobLeaderIdService,_							new ClusterInformation("localhost", 1234),_							testingFatalErrorHandler,_							null,_							mockResourceManagerClient,_							mockNMClient,_							mockJMMetricGroup)__		};create,mock,rm,dependencies;context,throws,exception,rpc,service,new,testing,rpc,service,rm,services,new,mock,resource,manager,runtime,services,rm,resource,id,resource,id,generate,resource,manager,new,testing,yarn,resource,manager,rpc,service,rm,resource,id,flink,config,env,rm,services,high,availability,services,rm,services,heartbeat,services,rm,services,slot,manager,rm,services,metric,registry,rm,services,job,leader,id,service,new,cluster,information,localhost,1234,testing,fatal,error,handler,null,mock,resource,manager,client,mock,nmclient,mock,jmmetric,group
YarnResourceManagerTest -> Context -> Context() throws Exception;1546953479;Create mock RM dependencies.;Context() throws Exception {_			rpcService = new TestingRpcService()__			rmServices = new MockResourceManagerRuntimeServices()___			_			rmResourceID = ResourceID.generate()__			resourceManager =_					new TestingYarnResourceManager(_							rpcService,_							RM_ADDRESS,_							rmResourceID,_							flinkConfig,_							env,_							rmServices.highAvailabilityServices,_							rmServices.heartbeatServices,_							rmServices.slotManager,_							rmServices.metricRegistry,_							rmServices.jobLeaderIdService,_							new ClusterInformation("localhost", 1234),_							testingFatalErrorHandler,_							null,_							mockResourceManagerClient,_							mockNMClient,_							mockJMMetricGroup)__		};create,mock,rm,dependencies;context,throws,exception,rpc,service,new,testing,rpc,service,rm,services,new,mock,resource,manager,runtime,services,rm,resource,id,resource,id,generate,resource,manager,new,testing,yarn,resource,manager,rpc,service,rm,resource,id,flink,config,env,rm,services,high,availability,services,rm,services,heartbeat,services,rm,services,slot,manager,rm,services,metric,registry,rm,services,job,leader,id,service,new,cluster,information,localhost,1234,testing,fatal,error,handler,null,mock,resource,manager,client,mock,nmclient,mock,jmmetric,group
YarnResourceManagerTest -> Context -> Context() throws Exception;1547219864;Create mock RM dependencies.;Context() throws Exception {_			rpcService = new TestingRpcService()__			rmServices = new MockResourceManagerRuntimeServices()___			_			rmResourceID = ResourceID.generate()__			resourceManager =_					new TestingYarnResourceManager(_							rpcService,_							RM_ADDRESS,_							rmResourceID,_							flinkConfig,_							env,_							rmServices.highAvailabilityServices,_							rmServices.heartbeatServices,_							rmServices.slotManager,_							rmServices.metricRegistry,_							rmServices.jobLeaderIdService,_							new ClusterInformation("localhost", 1234),_							testingFatalErrorHandler,_							null,_							mockResourceManagerClient,_							mockNMClient,_							mockJMMetricGroup)__		};create,mock,rm,dependencies;context,throws,exception,rpc,service,new,testing,rpc,service,rm,services,new,mock,resource,manager,runtime,services,rm,resource,id,resource,id,generate,resource,manager,new,testing,yarn,resource,manager,rpc,service,rm,resource,id,flink,config,env,rm,services,high,availability,services,rm,services,heartbeat,services,rm,services,slot,manager,rm,services,metric,registry,rm,services,job,leader,id,service,new,cluster,information,localhost,1234,testing,fatal,error,handler,null,mock,resource,manager,client,mock,nmclient,mock,jmmetric,group
YarnResourceManagerTest -> Context -> Context() throws Exception;1550005040;Create mock RM dependencies.;Context() throws Exception {_			rpcService = new TestingRpcService()__			rmServices = new MockResourceManagerRuntimeServices()___			_			rmResourceID = ResourceID.generate()__			resourceManager =_					new TestingYarnResourceManager(_							rpcService,_							RM_ADDRESS,_							rmResourceID,_							flinkConfig,_							env,_							rmServices.highAvailabilityServices,_							rmServices.heartbeatServices,_							rmServices.slotManager,_							rmServices.metricRegistry,_							rmServices.jobLeaderIdService,_							new ClusterInformation("localhost", 1234),_							testingFatalErrorHandler,_							null,_							mockResourceManagerClient,_							mockNMClient,_							mockJMMetricGroup)__		};create,mock,rm,dependencies;context,throws,exception,rpc,service,new,testing,rpc,service,rm,services,new,mock,resource,manager,runtime,services,rm,resource,id,resource,id,generate,resource,manager,new,testing,yarn,resource,manager,rpc,service,rm,resource,id,flink,config,env,rm,services,high,availability,services,rm,services,heartbeat,services,rm,services,slot,manager,rm,services,metric,registry,rm,services,job,leader,id,service,new,cluster,information,localhost,1234,testing,fatal,error,handler,null,mock,resource,manager,client,mock,nmclient,mock,jmmetric,group
YarnResourceManagerTest -> Context -> void startResourceManager() throws Exception;1533827661;Start the resource manager and grant leadership to it.;void startResourceManager() throws Exception {_			resourceManager.start()__			rmServices.grantLeadership()__		};start,the,resource,manager,and,grant,leadership,to,it;void,start,resource,manager,throws,exception,resource,manager,start,rm,services,grant,leadership
YarnResourceManagerTest -> Context -> void startResourceManager() throws Exception;1539582211;Start the resource manager and grant leadership to it.;void startResourceManager() throws Exception {_			resourceManager.start()__			rmServices.grantLeadership()__		};start,the,resource,manager,and,grant,leadership,to,it;void,start,resource,manager,throws,exception,resource,manager,start,rm,services,grant,leadership
YarnResourceManagerTest -> Context -> void startResourceManager() throws Exception;1546618773;Start the resource manager and grant leadership to it.;void startResourceManager() throws Exception {_			resourceManager.start()__			rmServices.grantLeadership()__		};start,the,resource,manager,and,grant,leadership,to,it;void,start,resource,manager,throws,exception,resource,manager,start,rm,services,grant,leadership
YarnResourceManagerTest -> Context -> void startResourceManager() throws Exception;1546953479;Start the resource manager and grant leadership to it.;void startResourceManager() throws Exception {_			resourceManager.start()__			rmServices.grantLeadership()__		};start,the,resource,manager,and,grant,leadership,to,it;void,start,resource,manager,throws,exception,resource,manager,start,rm,services,grant,leadership
YarnResourceManagerTest -> Context -> void startResourceManager() throws Exception;1547219864;Start the resource manager and grant leadership to it.;void startResourceManager() throws Exception {_			resourceManager.start()__			rmServices.grantLeadership()__		};start,the,resource,manager,and,grant,leadership,to,it;void,start,resource,manager,throws,exception,resource,manager,start,rm,services,grant,leadership
YarnResourceManagerTest -> Context -> void startResourceManager() throws Exception;1550005040;Start the resource manager and grant leadership to it.;void startResourceManager() throws Exception {_			resourceManager.start()__			rmServices.grantLeadership()__		};start,the,resource,manager,and,grant,leadership,to,it;void,start,resource,manager,throws,exception,resource,manager,start,rm,services,grant,leadership
YarnResourceManagerTest -> Context -> void runTest(RunnableWithException testMethod) throws Exception;1533827661;A wrapper function for running test. Deal with setup and teardown logic_in Context._@param testMethod the real test body.;void runTest(RunnableWithException testMethod) throws Exception {_			startResourceManager()__			try {_				testMethod.run()__			} finally {_				stopResourceManager()__			}_		};a,wrapper,function,for,running,test,deal,with,setup,and,teardown,logic,in,context,param,test,method,the,real,test,body;void,run,test,runnable,with,exception,test,method,throws,exception,start,resource,manager,try,test,method,run,finally,stop,resource,manager
YarnResourceManagerTest -> Context -> void runTest(RunnableWithException testMethod) throws Exception;1539582211;A wrapper function for running test. Deal with setup and teardown logic_in Context._@param testMethod the real test body.;void runTest(RunnableWithException testMethod) throws Exception {_			startResourceManager()__			try {_				testMethod.run()__			} finally {_				stopResourceManager()__			}_		};a,wrapper,function,for,running,test,deal,with,setup,and,teardown,logic,in,context,param,test,method,the,real,test,body;void,run,test,runnable,with,exception,test,method,throws,exception,start,resource,manager,try,test,method,run,finally,stop,resource,manager
YarnResourceManagerTest -> Context -> void runTest(RunnableWithException testMethod) throws Exception;1546618773;A wrapper function for running test. Deal with setup and teardown logic_in Context._@param testMethod the real test body.;void runTest(RunnableWithException testMethod) throws Exception {_			startResourceManager()__			try {_				testMethod.run()__			} finally {_				stopResourceManager()__			}_		};a,wrapper,function,for,running,test,deal,with,setup,and,teardown,logic,in,context,param,test,method,the,real,test,body;void,run,test,runnable,with,exception,test,method,throws,exception,start,resource,manager,try,test,method,run,finally,stop,resource,manager
YarnResourceManagerTest -> Context -> void runTest(RunnableWithException testMethod) throws Exception;1546953479;A wrapper function for running test. Deal with setup and teardown logic_in Context._@param testMethod the real test body.;void runTest(RunnableWithException testMethod) throws Exception {_			startResourceManager()__			try {_				testMethod.run()__			} finally {_				stopResourceManager()__			}_		};a,wrapper,function,for,running,test,deal,with,setup,and,teardown,logic,in,context,param,test,method,the,real,test,body;void,run,test,runnable,with,exception,test,method,throws,exception,start,resource,manager,try,test,method,run,finally,stop,resource,manager
YarnResourceManagerTest -> Context -> void runTest(RunnableWithException testMethod) throws Exception;1547219864;A wrapper function for running test. Deal with setup and teardown logic_in Context._@param testMethod the real test body.;void runTest(RunnableWithException testMethod) throws Exception {_			startResourceManager()__			try {_				testMethod.run()__			} finally {_				stopResourceManager()__			}_		};a,wrapper,function,for,running,test,deal,with,setup,and,teardown,logic,in,context,param,test,method,the,real,test,body;void,run,test,runnable,with,exception,test,method,throws,exception,start,resource,manager,try,test,method,run,finally,stop,resource,manager
YarnResourceManagerTest -> Context -> void runTest(RunnableWithException testMethod) throws Exception;1550005040;A wrapper function for running test. Deal with setup and teardown logic_in Context._@param testMethod the real test body.;void runTest(RunnableWithException testMethod) throws Exception {_			startResourceManager()__			try {_				testMethod.run()__			} finally {_				stopResourceManager()__			}_		};a,wrapper,function,for,running,test,deal,with,setup,and,teardown,logic,in,context,param,test,method,the,real,test,body;void,run,test,runnable,with,exception,test,method,throws,exception,start,resource,manager,try,test,method,run,finally,stop,resource,manager
YarnResourceManagerTest -> Context -> public void startResourceManager() throws Exception;1510152676;Start the resource manager and grant leadership to it.;public void startResourceManager() throws Exception {_			resourceManager.start()__			rmServices.grantLeadership()__		};start,the,resource,manager,and,grant,leadership,to,it;public,void,start,resource,manager,throws,exception,resource,manager,start,rm,services,grant,leadership
YarnResourceManagerTest -> Context -> public void startResourceManager() throws Exception;1510152677;Start the resource manager and grant leadership to it.;public void startResourceManager() throws Exception {_			resourceManager.start()__			rmServices.grantLeadership()__		};start,the,resource,manager,and,grant,leadership,to,it;public,void,start,resource,manager,throws,exception,resource,manager,start,rm,services,grant,leadership
YarnResourceManagerTest -> Context -> public void startResourceManager() throws Exception;1512394695;Start the resource manager and grant leadership to it.;public void startResourceManager() throws Exception {_			resourceManager.start()__			rmServices.grantLeadership()__		};start,the,resource,manager,and,grant,leadership,to,it;public,void,start,resource,manager,throws,exception,resource,manager,start,rm,services,grant,leadership
YarnResourceManagerTest -> Context -> public void startResourceManager() throws Exception;1513102156;Start the resource manager and grant leadership to it.;public void startResourceManager() throws Exception {_			resourceManager.start()__			rmServices.grantLeadership()__		};start,the,resource,manager,and,grant,leadership,to,it;public,void,start,resource,manager,throws,exception,resource,manager,start,rm,services,grant,leadership
YarnResourceManagerTest -> Context -> public void startResourceManager() throws Exception;1513258343;Start the resource manager and grant leadership to it.;public void startResourceManager() throws Exception {_			resourceManager.start()__			rmServices.grantLeadership()__		};start,the,resource,manager,and,grant,leadership,to,it;public,void,start,resource,manager,throws,exception,resource,manager,start,rm,services,grant,leadership
YarnResourceManagerTest -> Context -> public void startResourceManager() throws Exception;1513263078;Start the resource manager and grant leadership to it.;public void startResourceManager() throws Exception {_			resourceManager.start()__			rmServices.grantLeadership()__		};start,the,resource,manager,and,grant,leadership,to,it;public,void,start,resource,manager,throws,exception,resource,manager,start,rm,services,grant,leadership
YarnResourceManagerTest -> Context -> public void startResourceManager() throws Exception;1516890809;Start the resource manager and grant leadership to it.;public void startResourceManager() throws Exception {_			resourceManager.start()__			rmServices.grantLeadership()__		};start,the,resource,manager,and,grant,leadership,to,it;public,void,start,resource,manager,throws,exception,resource,manager,start,rm,services,grant,leadership
YarnResourceManagerTest -> Context -> public void startResourceManager() throws Exception;1517915730;Start the resource manager and grant leadership to it.;public void startResourceManager() throws Exception {_			resourceManager.start()__			rmServices.grantLeadership()__		};start,the,resource,manager,and,grant,leadership,to,it;public,void,start,resource,manager,throws,exception,resource,manager,start,rm,services,grant,leadership
YarnResourceManagerTest -> Context -> public void startResourceManager() throws Exception;1519406526;Start the resource manager and grant leadership to it.;public void startResourceManager() throws Exception {_			resourceManager.start()__			rmServices.grantLeadership()__		};start,the,resource,manager,and,grant,leadership,to,it;public,void,start,resource,manager,throws,exception,resource,manager,start,rm,services,grant,leadership
YarnResourceManagerTest -> Context -> public void startResourceManager() throws Exception;1521382480;Start the resource manager and grant leadership to it.;public void startResourceManager() throws Exception {_			resourceManager.start()__			rmServices.grantLeadership()__		};start,the,resource,manager,and,grant,leadership,to,it;public,void,start,resource,manager,throws,exception,resource,manager,start,rm,services,grant,leadership
YarnResourceManagerTest -> Context -> public void startResourceManager() throws Exception;1525116069;Start the resource manager and grant leadership to it.;public void startResourceManager() throws Exception {_			resourceManager.start()__			rmServices.grantLeadership()__		};start,the,resource,manager,and,grant,leadership,to,it;public,void,start,resource,manager,throws,exception,resource,manager,start,rm,services,grant,leadership
YarnResourceManagerTest -> Context -> public void startResourceManager() throws Exception;1527173115;Start the resource manager and grant leadership to it.;public void startResourceManager() throws Exception {_			resourceManager.start()__			rmServices.grantLeadership()__		};start,the,resource,manager,and,grant,leadership,to,it;public,void,start,resource,manager,throws,exception,resource,manager,start,rm,services,grant,leadership
YarnResourceManagerTest -> Context -> public void startResourceManager() throws Exception;1530542668;Start the resource manager and grant leadership to it.;public void startResourceManager() throws Exception {_			resourceManager.start()__			rmServices.grantLeadership()__		};start,the,resource,manager,and,grant,leadership,to,it;public,void,start,resource,manager,throws,exception,resource,manager,start,rm,services,grant,leadership
YarnResourceManagerTest -> Context -> public void startResourceManager() throws Exception;1532290976;Start the resource manager and grant leadership to it.;public void startResourceManager() throws Exception {_			resourceManager.start()__			rmServices.grantLeadership()__		};start,the,resource,manager,and,grant,leadership,to,it;public,void,start,resource,manager,throws,exception,resource,manager,start,rm,services,grant,leadership
YarnResourceManagerTest -> @Test 	public void testOnContainerCompleted() throws Exception;1530542668;Tests that YarnResourceManager will not request more containers than needs during_callback from Yarn when container is Completed._@throws Exception;@Test_	public void testOnContainerCompleted() throws Exception {_		new Context() {{_			startResourceManager()__			CompletableFuture<?> registerSlotRequestFuture = resourceManager.runInMainThread(() -> {_				rmServices.slotManager.registerSlotRequest(_					new SlotRequest(new JobID(), new AllocationID(), resourceProfile1, taskHost))__				return null__			})___			_			registerSlotRequestFuture.get()___			ContainerId testContainerId = ContainerId.newInstance(_				ApplicationAttemptId.newInstance(_					ApplicationId.newInstance(System.currentTimeMillis(), 1),_					1),_				1)___			_			Container testingContainer = mock(Container.class)__			when(testingContainer.getId()).thenReturn(testContainerId)__			when(testingContainer.getNodeId()).thenReturn(NodeId.newInstance("container", 1234))__			when(testingContainer.getResource()).thenReturn(Resource.newInstance(200, 1))__			when(testingContainer.getPriority()).thenReturn(Priority.UNDEFINED)__			resourceManager.onContainersAllocated(ImmutableList.of(testingContainer))__			verify(mockResourceManagerClient).addContainerRequest(any(AMRMClient.ContainerRequest.class))__			verify(mockNMClient).startContainer(eq(testingContainer), any(ContainerLaunchContext.class))___			_			_			ContainerStatus testingContainerStatus = mock(ContainerStatus.class)__			when(testingContainerStatus.getContainerId()).thenReturn(testContainerId)__			when(testingContainerStatus.getState()).thenReturn(ContainerState.COMPLETE)__			when(testingContainerStatus.getDiagnostics()).thenReturn("Test exit")__			when(testingContainerStatus.getExitStatus()).thenReturn(-1)__			resourceManager.onContainersCompleted(ImmutableList.of(testingContainerStatus))__			verify(mockResourceManagerClient, times(2)).addContainerRequest(any(AMRMClient.ContainerRequest.class))___			_			_			when(testingContainerStatus.getContainerId()).thenReturn(testContainerId)__			when(testingContainerStatus.getState()).thenReturn(ContainerState.COMPLETE)__			when(testingContainerStatus.getDiagnostics()).thenReturn("Test exit")__			when(testingContainerStatus.getExitStatus()).thenReturn(-1)__			resourceManager.onContainersCompleted(ImmutableList.of(testingContainerStatus))__			verify(mockResourceManagerClient, times(2)).addContainerRequest(any(AMRMClient.ContainerRequest.class))__		}}__	};tests,that,yarn,resource,manager,will,not,request,more,containers,than,needs,during,callback,from,yarn,when,container,is,completed,throws,exception;test,public,void,test,on,container,completed,throws,exception,new,context,start,resource,manager,completable,future,register,slot,request,future,resource,manager,run,in,main,thread,rm,services,slot,manager,register,slot,request,new,slot,request,new,job,id,new,allocation,id,resource,profile1,task,host,return,null,register,slot,request,future,get,container,id,test,container,id,container,id,new,instance,application,attempt,id,new,instance,application,id,new,instance,system,current,time,millis,1,1,1,container,testing,container,mock,container,class,when,testing,container,get,id,then,return,test,container,id,when,testing,container,get,node,id,then,return,node,id,new,instance,container,1234,when,testing,container,get,resource,then,return,resource,new,instance,200,1,when,testing,container,get,priority,then,return,priority,undefined,resource,manager,on,containers,allocated,immutable,list,of,testing,container,verify,mock,resource,manager,client,add,container,request,any,amrmclient,container,request,class,verify,mock,nmclient,start,container,eq,testing,container,any,container,launch,context,class,container,status,testing,container,status,mock,container,status,class,when,testing,container,status,get,container,id,then,return,test,container,id,when,testing,container,status,get,state,then,return,container,state,complete,when,testing,container,status,get,diagnostics,then,return,test,exit,when,testing,container,status,get,exit,status,then,return,1,resource,manager,on,containers,completed,immutable,list,of,testing,container,status,verify,mock,resource,manager,client,times,2,add,container,request,any,amrmclient,container,request,class,when,testing,container,status,get,container,id,then,return,test,container,id,when,testing,container,status,get,state,then,return,container,state,complete,when,testing,container,status,get,diagnostics,then,return,test,exit,when,testing,container,status,get,exit,status,then,return,1,resource,manager,on,containers,completed,immutable,list,of,testing,container,status,verify,mock,resource,manager,client,times,2,add,container,request,any,amrmclient,container,request,class
YarnResourceManagerTest -> @Test 	public void testOnContainerCompleted() throws Exception;1532290976;Tests that YarnResourceManager will not request more containers than needs during_callback from Yarn when container is Completed._@throws Exception;@Test_	public void testOnContainerCompleted() throws Exception {_		new Context() {{_			startResourceManager()__			CompletableFuture<?> registerSlotRequestFuture = resourceManager.runInMainThread(() -> {_				rmServices.slotManager.registerSlotRequest(_					new SlotRequest(new JobID(), new AllocationID(), resourceProfile1, taskHost))__				return null__			})___			_			registerSlotRequestFuture.get()___			ContainerId testContainerId = ContainerId.newInstance(_				ApplicationAttemptId.newInstance(_					ApplicationId.newInstance(System.currentTimeMillis(), 1),_					1),_				1)___			_			Container testingContainer = mock(Container.class)__			when(testingContainer.getId()).thenReturn(testContainerId)__			when(testingContainer.getNodeId()).thenReturn(NodeId.newInstance("container", 1234))__			when(testingContainer.getResource()).thenReturn(Resource.newInstance(200, 1))__			when(testingContainer.getPriority()).thenReturn(Priority.UNDEFINED)__			resourceManager.onContainersAllocated(ImmutableList.of(testingContainer))__			verify(mockResourceManagerClient).addContainerRequest(any(AMRMClient.ContainerRequest.class))__			verify(mockNMClient).startContainer(eq(testingContainer), any(ContainerLaunchContext.class))___			_			_			ContainerStatus testingContainerStatus = mock(ContainerStatus.class)__			when(testingContainerStatus.getContainerId()).thenReturn(testContainerId)__			when(testingContainerStatus.getState()).thenReturn(ContainerState.COMPLETE)__			when(testingContainerStatus.getDiagnostics()).thenReturn("Test exit")__			when(testingContainerStatus.getExitStatus()).thenReturn(-1)__			resourceManager.onContainersCompleted(ImmutableList.of(testingContainerStatus))__			verify(mockResourceManagerClient, times(2)).addContainerRequest(any(AMRMClient.ContainerRequest.class))___			_			_			when(testingContainerStatus.getContainerId()).thenReturn(testContainerId)__			when(testingContainerStatus.getState()).thenReturn(ContainerState.COMPLETE)__			when(testingContainerStatus.getDiagnostics()).thenReturn("Test exit")__			when(testingContainerStatus.getExitStatus()).thenReturn(-1)__			resourceManager.onContainersCompleted(ImmutableList.of(testingContainerStatus))__			verify(mockResourceManagerClient, times(2)).addContainerRequest(any(AMRMClient.ContainerRequest.class))__		}}__	};tests,that,yarn,resource,manager,will,not,request,more,containers,than,needs,during,callback,from,yarn,when,container,is,completed,throws,exception;test,public,void,test,on,container,completed,throws,exception,new,context,start,resource,manager,completable,future,register,slot,request,future,resource,manager,run,in,main,thread,rm,services,slot,manager,register,slot,request,new,slot,request,new,job,id,new,allocation,id,resource,profile1,task,host,return,null,register,slot,request,future,get,container,id,test,container,id,container,id,new,instance,application,attempt,id,new,instance,application,id,new,instance,system,current,time,millis,1,1,1,container,testing,container,mock,container,class,when,testing,container,get,id,then,return,test,container,id,when,testing,container,get,node,id,then,return,node,id,new,instance,container,1234,when,testing,container,get,resource,then,return,resource,new,instance,200,1,when,testing,container,get,priority,then,return,priority,undefined,resource,manager,on,containers,allocated,immutable,list,of,testing,container,verify,mock,resource,manager,client,add,container,request,any,amrmclient,container,request,class,verify,mock,nmclient,start,container,eq,testing,container,any,container,launch,context,class,container,status,testing,container,status,mock,container,status,class,when,testing,container,status,get,container,id,then,return,test,container,id,when,testing,container,status,get,state,then,return,container,state,complete,when,testing,container,status,get,diagnostics,then,return,test,exit,when,testing,container,status,get,exit,status,then,return,1,resource,manager,on,containers,completed,immutable,list,of,testing,container,status,verify,mock,resource,manager,client,times,2,add,container,request,any,amrmclient,container,request,class,when,testing,container,status,get,container,id,then,return,test,container,id,when,testing,container,status,get,state,then,return,container,state,complete,when,testing,container,status,get,diagnostics,then,return,test,exit,when,testing,container,status,get,exit,status,then,return,1,resource,manager,on,containers,completed,immutable,list,of,testing,container,status,verify,mock,resource,manager,client,times,2,add,container,request,any,amrmclient,container,request,class
YarnResourceManagerTest -> @Test 	public void testOnContainerCompleted() throws Exception;1533827661;Tests that YarnResourceManager will not request more containers than needs during_callback from Yarn when container is Completed.;@Test_	public void testOnContainerCompleted() throws Exception {_		new Context() {{_			runTest(() -> {_				CompletableFuture<?> registerSlotRequestFuture = resourceManager.runInMainThread(() -> {_					rmServices.slotManager.registerSlotRequest(_						new SlotRequest(new JobID(), new AllocationID(), resourceProfile1, taskHost))__					return null__				})___				_				registerSlotRequestFuture.get()___				_				Container testingContainer = mockContainer("container", 1234, 1)___				resourceManager.onContainersAllocated(ImmutableList.of(testingContainer))__				verify(mockResourceManagerClient).addContainerRequest(any(AMRMClient.ContainerRequest.class))__				verify(mockNMClient).startContainer(eq(testingContainer), any(ContainerLaunchContext.class))___				_				_				ContainerStatus testingContainerStatus = mockContainerStatus(testingContainer.getId())___				resourceManager.onContainersCompleted(ImmutableList.of(testingContainerStatus))__				verify(mockResourceManagerClient, times(2)).addContainerRequest(any(AMRMClient.ContainerRequest.class))___				_				_				resourceManager.onContainersCompleted(ImmutableList.of(testingContainerStatus))__				verify(mockResourceManagerClient, times(2)).addContainerRequest(any(AMRMClient.ContainerRequest.class))__			})__		}}__	};tests,that,yarn,resource,manager,will,not,request,more,containers,than,needs,during,callback,from,yarn,when,container,is,completed;test,public,void,test,on,container,completed,throws,exception,new,context,run,test,completable,future,register,slot,request,future,resource,manager,run,in,main,thread,rm,services,slot,manager,register,slot,request,new,slot,request,new,job,id,new,allocation,id,resource,profile1,task,host,return,null,register,slot,request,future,get,container,testing,container,mock,container,container,1234,1,resource,manager,on,containers,allocated,immutable,list,of,testing,container,verify,mock,resource,manager,client,add,container,request,any,amrmclient,container,request,class,verify,mock,nmclient,start,container,eq,testing,container,any,container,launch,context,class,container,status,testing,container,status,mock,container,status,testing,container,get,id,resource,manager,on,containers,completed,immutable,list,of,testing,container,status,verify,mock,resource,manager,client,times,2,add,container,request,any,amrmclient,container,request,class,resource,manager,on,containers,completed,immutable,list,of,testing,container,status,verify,mock,resource,manager,client,times,2,add,container,request,any,amrmclient,container,request,class
YarnResourceManagerTest -> @Test 	public void testOnContainerCompleted() throws Exception;1539582211;Tests that YarnResourceManager will not request more containers than needs during_callback from Yarn when container is Completed.;@Test_	public void testOnContainerCompleted() throws Exception {_		new Context() {{_			runTest(() -> {_				CompletableFuture<?> registerSlotRequestFuture = resourceManager.runInMainThread(() -> {_					rmServices.slotManager.registerSlotRequest(_						new SlotRequest(new JobID(), new AllocationID(), resourceProfile1, taskHost))__					return null__				})___				_				registerSlotRequestFuture.get()___				_				Container testingContainer = mockContainer("container", 1234, 1)___				resourceManager.onContainersAllocated(ImmutableList.of(testingContainer))__				verify(mockResourceManagerClient).addContainerRequest(any(AMRMClient.ContainerRequest.class))__				verify(mockNMClient).startContainer(eq(testingContainer), any(ContainerLaunchContext.class))___				_				_				ContainerStatus testingContainerStatus = mockContainerStatus(testingContainer.getId())___				resourceManager.onContainersCompleted(ImmutableList.of(testingContainerStatus))__				verify(mockResourceManagerClient, times(2)).addContainerRequest(any(AMRMClient.ContainerRequest.class))___				_				_				resourceManager.onContainersCompleted(ImmutableList.of(testingContainerStatus))__				verify(mockResourceManagerClient, times(2)).addContainerRequest(any(AMRMClient.ContainerRequest.class))__			})__		}}__	};tests,that,yarn,resource,manager,will,not,request,more,containers,than,needs,during,callback,from,yarn,when,container,is,completed;test,public,void,test,on,container,completed,throws,exception,new,context,run,test,completable,future,register,slot,request,future,resource,manager,run,in,main,thread,rm,services,slot,manager,register,slot,request,new,slot,request,new,job,id,new,allocation,id,resource,profile1,task,host,return,null,register,slot,request,future,get,container,testing,container,mock,container,container,1234,1,resource,manager,on,containers,allocated,immutable,list,of,testing,container,verify,mock,resource,manager,client,add,container,request,any,amrmclient,container,request,class,verify,mock,nmclient,start,container,eq,testing,container,any,container,launch,context,class,container,status,testing,container,status,mock,container,status,testing,container,get,id,resource,manager,on,containers,completed,immutable,list,of,testing,container,status,verify,mock,resource,manager,client,times,2,add,container,request,any,amrmclient,container,request,class,resource,manager,on,containers,completed,immutable,list,of,testing,container,status,verify,mock,resource,manager,client,times,2,add,container,request,any,amrmclient,container,request,class
YarnResourceManagerTest -> @Test 	public void testOnContainerCompleted() throws Exception;1546618773;Tests that YarnResourceManager will not request more containers than needs during_callback from Yarn when container is Completed.;@Test_	public void testOnContainerCompleted() throws Exception {_		new Context() {{_			runTest(() -> {_				CompletableFuture<?> registerSlotRequestFuture = resourceManager.runInMainThread(() -> {_					rmServices.slotManager.registerSlotRequest(_						new SlotRequest(new JobID(), new AllocationID(), resourceProfile1, taskHost))__					return null__				})___				_				registerSlotRequestFuture.get()___				_				Container testingContainer = mockContainer("container", 1234, 1)___				resourceManager.onContainersAllocated(ImmutableList.of(testingContainer))__				verify(mockResourceManagerClient).addContainerRequest(any(AMRMClient.ContainerRequest.class))__				verify(mockResourceManagerClient).removeContainerRequest(_						any(AMRMClient.ContainerRequest.class))__				verify(mockNMClient).startContainer(eq(testingContainer), any(ContainerLaunchContext.class))___				_				_				ContainerStatus testingContainerStatus = mockContainerStatus(testingContainer.getId())___				resourceManager.onContainersCompleted(ImmutableList.of(testingContainerStatus))__				verify(mockResourceManagerClient, times(2)).addContainerRequest(any(AMRMClient.ContainerRequest.class))___				_				_				resourceManager.onContainersCompleted(ImmutableList.of(testingContainerStatus))__				verify(mockResourceManagerClient, times(2)).addContainerRequest(any(AMRMClient.ContainerRequest.class))__			})__		}}__	};tests,that,yarn,resource,manager,will,not,request,more,containers,than,needs,during,callback,from,yarn,when,container,is,completed;test,public,void,test,on,container,completed,throws,exception,new,context,run,test,completable,future,register,slot,request,future,resource,manager,run,in,main,thread,rm,services,slot,manager,register,slot,request,new,slot,request,new,job,id,new,allocation,id,resource,profile1,task,host,return,null,register,slot,request,future,get,container,testing,container,mock,container,container,1234,1,resource,manager,on,containers,allocated,immutable,list,of,testing,container,verify,mock,resource,manager,client,add,container,request,any,amrmclient,container,request,class,verify,mock,resource,manager,client,remove,container,request,any,amrmclient,container,request,class,verify,mock,nmclient,start,container,eq,testing,container,any,container,launch,context,class,container,status,testing,container,status,mock,container,status,testing,container,get,id,resource,manager,on,containers,completed,immutable,list,of,testing,container,status,verify,mock,resource,manager,client,times,2,add,container,request,any,amrmclient,container,request,class,resource,manager,on,containers,completed,immutable,list,of,testing,container,status,verify,mock,resource,manager,client,times,2,add,container,request,any,amrmclient,container,request,class
YarnResourceManagerTest -> @Test 	public void testOnContainerCompleted() throws Exception;1546953479;Tests that YarnResourceManager will not request more containers than needs during_callback from Yarn when container is Completed.;@Test_	public void testOnContainerCompleted() throws Exception {_		new Context() {{_			runTest(() -> {_				CompletableFuture<?> registerSlotRequestFuture = resourceManager.runInMainThread(() -> {_					rmServices.slotManager.registerSlotRequest(_						new SlotRequest(new JobID(), new AllocationID(), resourceProfile1, taskHost))__					return null__				})___				_				registerSlotRequestFuture.get()___				_				Container testingContainer = mockContainer("container", 1234, 1)___				resourceManager.onContainersAllocated(ImmutableList.of(testingContainer))__				verify(mockResourceManagerClient).addContainerRequest(any(AMRMClient.ContainerRequest.class))__				verify(mockNMClient).startContainer(eq(testingContainer), any(ContainerLaunchContext.class))___				_				_				ContainerStatus testingContainerStatus = mockContainerStatus(testingContainer.getId())___				resourceManager.onContainersCompleted(ImmutableList.of(testingContainerStatus))__				verify(mockResourceManagerClient, times(2)).addContainerRequest(any(AMRMClient.ContainerRequest.class))___				_				_				resourceManager.onContainersCompleted(ImmutableList.of(testingContainerStatus))__				verify(mockResourceManagerClient, times(2)).addContainerRequest(any(AMRMClient.ContainerRequest.class))__			})__		}}__	};tests,that,yarn,resource,manager,will,not,request,more,containers,than,needs,during,callback,from,yarn,when,container,is,completed;test,public,void,test,on,container,completed,throws,exception,new,context,run,test,completable,future,register,slot,request,future,resource,manager,run,in,main,thread,rm,services,slot,manager,register,slot,request,new,slot,request,new,job,id,new,allocation,id,resource,profile1,task,host,return,null,register,slot,request,future,get,container,testing,container,mock,container,container,1234,1,resource,manager,on,containers,allocated,immutable,list,of,testing,container,verify,mock,resource,manager,client,add,container,request,any,amrmclient,container,request,class,verify,mock,nmclient,start,container,eq,testing,container,any,container,launch,context,class,container,status,testing,container,status,mock,container,status,testing,container,get,id,resource,manager,on,containers,completed,immutable,list,of,testing,container,status,verify,mock,resource,manager,client,times,2,add,container,request,any,amrmclient,container,request,class,resource,manager,on,containers,completed,immutable,list,of,testing,container,status,verify,mock,resource,manager,client,times,2,add,container,request,any,amrmclient,container,request,class
YarnResourceManagerTest -> @Test 	public void testOnContainerCompleted() throws Exception;1547219864;Tests that YarnResourceManager will not request more containers than needs during_callback from Yarn when container is Completed.;@Test_	public void testOnContainerCompleted() throws Exception {_		new Context() {{_			runTest(() -> {_				CompletableFuture<?> registerSlotRequestFuture = resourceManager.runInMainThread(() -> {_					rmServices.slotManager.registerSlotRequest(_						new SlotRequest(new JobID(), new AllocationID(), resourceProfile1, taskHost))__					return null__				})___				_				registerSlotRequestFuture.get()___				_				Container testingContainer = mockContainer("container", 1234, 1, resourceManager.getContainerResource())___				doReturn(Collections.singletonList(Collections.singletonList(resourceManager.getContainerRequest())))_					.when(mockResourceManagerClient).getMatchingRequests(any(Priority.class), anyString(), any(Resource.class))___				resourceManager.onContainersAllocated(ImmutableList.of(testingContainer))__				verify(mockResourceManagerClient).addContainerRequest(any(AMRMClient.ContainerRequest.class))__				verify(mockResourceManagerClient).removeContainerRequest(any(AMRMClient.ContainerRequest.class))__				verify(mockNMClient).startContainer(eq(testingContainer), any(ContainerLaunchContext.class))___				_				_				ContainerStatus testingContainerStatus = mockContainerStatus(testingContainer.getId())___				resourceManager.onContainersCompleted(ImmutableList.of(testingContainerStatus))__				verify(mockResourceManagerClient, times(2)).addContainerRequest(any(AMRMClient.ContainerRequest.class))___				_				_				resourceManager.onContainersCompleted(ImmutableList.of(testingContainerStatus))__				verify(mockResourceManagerClient, times(2)).addContainerRequest(any(AMRMClient.ContainerRequest.class))__			})__		}}__	};tests,that,yarn,resource,manager,will,not,request,more,containers,than,needs,during,callback,from,yarn,when,container,is,completed;test,public,void,test,on,container,completed,throws,exception,new,context,run,test,completable,future,register,slot,request,future,resource,manager,run,in,main,thread,rm,services,slot,manager,register,slot,request,new,slot,request,new,job,id,new,allocation,id,resource,profile1,task,host,return,null,register,slot,request,future,get,container,testing,container,mock,container,container,1234,1,resource,manager,get,container,resource,do,return,collections,singleton,list,collections,singleton,list,resource,manager,get,container,request,when,mock,resource,manager,client,get,matching,requests,any,priority,class,any,string,any,resource,class,resource,manager,on,containers,allocated,immutable,list,of,testing,container,verify,mock,resource,manager,client,add,container,request,any,amrmclient,container,request,class,verify,mock,resource,manager,client,remove,container,request,any,amrmclient,container,request,class,verify,mock,nmclient,start,container,eq,testing,container,any,container,launch,context,class,container,status,testing,container,status,mock,container,status,testing,container,get,id,resource,manager,on,containers,completed,immutable,list,of,testing,container,status,verify,mock,resource,manager,client,times,2,add,container,request,any,amrmclient,container,request,class,resource,manager,on,containers,completed,immutable,list,of,testing,container,status,verify,mock,resource,manager,client,times,2,add,container,request,any,amrmclient,container,request,class
YarnResourceManagerTest -> @Test 	public void testOnContainerCompleted() throws Exception;1550005040;Tests that YarnResourceManager will not request more containers than needs during_callback from Yarn when container is Completed.;@Test_	public void testOnContainerCompleted() throws Exception {_		new Context() {{_			runTest(() -> {_				CompletableFuture<?> registerSlotRequestFuture = resourceManager.runInMainThread(() -> {_					rmServices.slotManager.registerSlotRequest(_						new SlotRequest(new JobID(), new AllocationID(), resourceProfile1, taskHost))__					return null__				})___				_				registerSlotRequestFuture.get()___				_				Container testingContainer = mockContainer("container", 1234, 1, resourceManager.getContainerResource())___				doReturn(Collections.singletonList(Collections.singletonList(resourceManager.getContainerRequest())))_					.when(mockResourceManagerClient).getMatchingRequests(any(Priority.class), anyString(), any(Resource.class))___				resourceManager.onContainersAllocated(ImmutableList.of(testingContainer))__				verify(mockResourceManagerClient).addContainerRequest(any(AMRMClient.ContainerRequest.class))__				verify(mockResourceManagerClient).removeContainerRequest(any(AMRMClient.ContainerRequest.class))__				verify(mockNMClient).startContainer(eq(testingContainer), any(ContainerLaunchContext.class))___				_				_				ContainerStatus testingContainerStatus = mockContainerStatus(testingContainer.getId())___				resourceManager.onContainersCompleted(ImmutableList.of(testingContainerStatus))__				verify(mockResourceManagerClient, times(2)).addContainerRequest(any(AMRMClient.ContainerRequest.class))___				_				_				resourceManager.onContainersCompleted(ImmutableList.of(testingContainerStatus))__				verify(mockResourceManagerClient, times(2)).addContainerRequest(any(AMRMClient.ContainerRequest.class))__			})__		}}__	};tests,that,yarn,resource,manager,will,not,request,more,containers,than,needs,during,callback,from,yarn,when,container,is,completed;test,public,void,test,on,container,completed,throws,exception,new,context,run,test,completable,future,register,slot,request,future,resource,manager,run,in,main,thread,rm,services,slot,manager,register,slot,request,new,slot,request,new,job,id,new,allocation,id,resource,profile1,task,host,return,null,register,slot,request,future,get,container,testing,container,mock,container,container,1234,1,resource,manager,get,container,resource,do,return,collections,singleton,list,collections,singleton,list,resource,manager,get,container,request,when,mock,resource,manager,client,get,matching,requests,any,priority,class,any,string,any,resource,class,resource,manager,on,containers,allocated,immutable,list,of,testing,container,verify,mock,resource,manager,client,add,container,request,any,amrmclient,container,request,class,verify,mock,resource,manager,client,remove,container,request,any,amrmclient,container,request,class,verify,mock,nmclient,start,container,eq,testing,container,any,container,launch,context,class,container,status,testing,container,status,mock,container,status,testing,container,get,id,resource,manager,on,containers,completed,immutable,list,of,testing,container,status,verify,mock,resource,manager,client,times,2,add,container,request,any,amrmclient,container,request,class,resource,manager,on,containers,completed,immutable,list,of,testing,container,status,verify,mock,resource,manager,client,times,2,add,container,request,any,amrmclient,container,request,class
YarnResourceManagerTest -> @Test 	public void testDeleteApplicationFiles() throws Exception;1525116069;Tests that application files are deleted when the YARN application master is de-registered.;@Test_	public void testDeleteApplicationFiles() throws Exception {_		new Context() {{_			final File applicationDir = folder.newFolder(".flink")__			env.put(FLINK_YARN_FILES, applicationDir.getCanonicalPath())___			startResourceManager()___			resourceManager.deregisterApplication(ApplicationStatus.SUCCEEDED, null)__			assertFalse("YARN application directory was not removed", Files.exists(applicationDir.toPath()))__		}}__	};tests,that,application,files,are,deleted,when,the,yarn,application,master,is,de,registered;test,public,void,test,delete,application,files,throws,exception,new,context,final,file,application,dir,folder,new,folder,flink,env,put,application,dir,get,canonical,path,start,resource,manager,resource,manager,deregister,application,application,status,succeeded,null,assert,false,yarn,application,directory,was,not,removed,files,exists,application,dir,to,path
YarnResourceManagerTest -> @Test 	public void testDeleteApplicationFiles() throws Exception;1527173115;Tests that application files are deleted when the YARN application master is de-registered.;@Test_	public void testDeleteApplicationFiles() throws Exception {_		new Context() {{_			final File applicationDir = folder.newFolder(".flink")__			env.put(FLINK_YARN_FILES, applicationDir.getCanonicalPath())___			startResourceManager()___			resourceManager.deregisterApplication(ApplicationStatus.SUCCEEDED, null)__			assertFalse("YARN application directory was not removed", Files.exists(applicationDir.toPath()))__		}}__	};tests,that,application,files,are,deleted,when,the,yarn,application,master,is,de,registered;test,public,void,test,delete,application,files,throws,exception,new,context,final,file,application,dir,folder,new,folder,flink,env,put,application,dir,get,canonical,path,start,resource,manager,resource,manager,deregister,application,application,status,succeeded,null,assert,false,yarn,application,directory,was,not,removed,files,exists,application,dir,to,path
YarnResourceManagerTest -> @Test 	public void testDeleteApplicationFiles() throws Exception;1530542668;Tests that application files are deleted when the YARN application master is de-registered.;@Test_	public void testDeleteApplicationFiles() throws Exception {_		new Context() {{_			final File applicationDir = folder.newFolder(".flink")__			env.put(FLINK_YARN_FILES, applicationDir.getCanonicalPath())___			startResourceManager()___			resourceManager.deregisterApplication(ApplicationStatus.SUCCEEDED, null)__			assertFalse("YARN application directory was not removed", Files.exists(applicationDir.toPath()))__		}}__	};tests,that,application,files,are,deleted,when,the,yarn,application,master,is,de,registered;test,public,void,test,delete,application,files,throws,exception,new,context,final,file,application,dir,folder,new,folder,flink,env,put,application,dir,get,canonical,path,start,resource,manager,resource,manager,deregister,application,application,status,succeeded,null,assert,false,yarn,application,directory,was,not,removed,files,exists,application,dir,to,path
YarnResourceManagerTest -> @Test 	public void testDeleteApplicationFiles() throws Exception;1532290976;Tests that application files are deleted when the YARN application master is de-registered.;@Test_	public void testDeleteApplicationFiles() throws Exception {_		new Context() {{_			final File applicationDir = folder.newFolder(".flink")__			env.put(FLINK_YARN_FILES, applicationDir.getCanonicalPath())___			startResourceManager()___			resourceManager.deregisterApplication(ApplicationStatus.SUCCEEDED, null)__			assertFalse("YARN application directory was not removed", Files.exists(applicationDir.toPath()))__		}}__	};tests,that,application,files,are,deleted,when,the,yarn,application,master,is,de,registered;test,public,void,test,delete,application,files,throws,exception,new,context,final,file,application,dir,folder,new,folder,flink,env,put,application,dir,get,canonical,path,start,resource,manager,resource,manager,deregister,application,application,status,succeeded,null,assert,false,yarn,application,directory,was,not,removed,files,exists,application,dir,to,path
YarnResourceManagerTest -> @Test 	public void testDeleteApplicationFiles() throws Exception;1533827661;Tests that application files are deleted when the YARN application master is de-registered.;@Test_	public void testDeleteApplicationFiles() throws Exception {_		new Context() {{_			final File applicationDir = folder.newFolder(".flink")__			env.put(FLINK_YARN_FILES, applicationDir.getCanonicalPath())___			runTest(() -> {_				resourceManager.deregisterApplication(ApplicationStatus.SUCCEEDED, null)__				assertFalse("YARN application directory was not removed", Files.exists(applicationDir.toPath()))__			})__		}}__	};tests,that,application,files,are,deleted,when,the,yarn,application,master,is,de,registered;test,public,void,test,delete,application,files,throws,exception,new,context,final,file,application,dir,folder,new,folder,flink,env,put,application,dir,get,canonical,path,run,test,resource,manager,deregister,application,application,status,succeeded,null,assert,false,yarn,application,directory,was,not,removed,files,exists,application,dir,to,path
YarnResourceManagerTest -> @Test 	public void testDeleteApplicationFiles() throws Exception;1539582211;Tests that application files are deleted when the YARN application master is de-registered.;@Test_	public void testDeleteApplicationFiles() throws Exception {_		new Context() {{_			final File applicationDir = folder.newFolder(".flink")__			env.put(FLINK_YARN_FILES, applicationDir.getCanonicalPath())___			runTest(() -> {_				resourceManager.deregisterApplication(ApplicationStatus.SUCCEEDED, null)__				assertFalse("YARN application directory was not removed", Files.exists(applicationDir.toPath()))__			})__		}}__	};tests,that,application,files,are,deleted,when,the,yarn,application,master,is,de,registered;test,public,void,test,delete,application,files,throws,exception,new,context,final,file,application,dir,folder,new,folder,flink,env,put,application,dir,get,canonical,path,run,test,resource,manager,deregister,application,application,status,succeeded,null,assert,false,yarn,application,directory,was,not,removed,files,exists,application,dir,to,path
YarnResourceManagerTest -> @Test 	public void testDeleteApplicationFiles() throws Exception;1546618773;Tests that application files are deleted when the YARN application master is de-registered.;@Test_	public void testDeleteApplicationFiles() throws Exception {_		new Context() {{_			final File applicationDir = folder.newFolder(".flink")__			env.put(FLINK_YARN_FILES, applicationDir.getCanonicalPath())___			runTest(() -> {_				resourceManager.deregisterApplication(ApplicationStatus.SUCCEEDED, null)__				assertFalse("YARN application directory was not removed", Files.exists(applicationDir.toPath()))__			})__		}}__	};tests,that,application,files,are,deleted,when,the,yarn,application,master,is,de,registered;test,public,void,test,delete,application,files,throws,exception,new,context,final,file,application,dir,folder,new,folder,flink,env,put,application,dir,get,canonical,path,run,test,resource,manager,deregister,application,application,status,succeeded,null,assert,false,yarn,application,directory,was,not,removed,files,exists,application,dir,to,path
YarnResourceManagerTest -> @Test 	public void testDeleteApplicationFiles() throws Exception;1546953479;Tests that application files are deleted when the YARN application master is de-registered.;@Test_	public void testDeleteApplicationFiles() throws Exception {_		new Context() {{_			final File applicationDir = folder.newFolder(".flink")__			env.put(FLINK_YARN_FILES, applicationDir.getCanonicalPath())___			runTest(() -> {_				resourceManager.deregisterApplication(ApplicationStatus.SUCCEEDED, null)__				assertFalse("YARN application directory was not removed", Files.exists(applicationDir.toPath()))__			})__		}}__	};tests,that,application,files,are,deleted,when,the,yarn,application,master,is,de,registered;test,public,void,test,delete,application,files,throws,exception,new,context,final,file,application,dir,folder,new,folder,flink,env,put,application,dir,get,canonical,path,run,test,resource,manager,deregister,application,application,status,succeeded,null,assert,false,yarn,application,directory,was,not,removed,files,exists,application,dir,to,path
YarnResourceManagerTest -> @Test 	public void testDeleteApplicationFiles() throws Exception;1547219864;Tests that application files are deleted when the YARN application master is de-registered.;@Test_	public void testDeleteApplicationFiles() throws Exception {_		new Context() {{_			final File applicationDir = folder.newFolder(".flink")__			env.put(FLINK_YARN_FILES, applicationDir.getCanonicalPath())___			runTest(() -> {_				resourceManager.deregisterApplication(ApplicationStatus.SUCCEEDED, null)__				assertFalse("YARN application directory was not removed", Files.exists(applicationDir.toPath()))__			})__		}}__	};tests,that,application,files,are,deleted,when,the,yarn,application,master,is,de,registered;test,public,void,test,delete,application,files,throws,exception,new,context,final,file,application,dir,folder,new,folder,flink,env,put,application,dir,get,canonical,path,run,test,resource,manager,deregister,application,application,status,succeeded,null,assert,false,yarn,application,directory,was,not,removed,files,exists,application,dir,to,path
YarnResourceManagerTest -> @Test 	public void testDeleteApplicationFiles() throws Exception;1550005040;Tests that application files are deleted when the YARN application master is de-registered.;@Test_	public void testDeleteApplicationFiles() throws Exception {_		new Context() {{_			final File applicationDir = folder.newFolder(".flink")__			env.put(FLINK_YARN_FILES, applicationDir.getCanonicalPath())___			runTest(() -> {_				resourceManager.deregisterApplication(ApplicationStatus.SUCCEEDED, null)__				assertFalse("YARN application directory was not removed", Files.exists(applicationDir.toPath()))__			})__		}}__	};tests,that,application,files,are,deleted,when,the,yarn,application,master,is,de,registered;test,public,void,test,delete,application,files,throws,exception,new,context,final,file,application,dir,folder,new,folder,flink,env,put,application,dir,get,canonical,path,run,test,resource,manager,deregister,application,application,status,succeeded,null,assert,false,yarn,application,directory,was,not,removed,files,exists,application,dir,to,path
