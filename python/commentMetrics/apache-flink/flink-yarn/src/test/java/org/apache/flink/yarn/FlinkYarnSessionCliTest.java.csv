# id;timestamp;commentText;codeText;commentWords;codeWords
FlinkYarnSessionCliTest -> @Test 	public void testResumeFromYarnPropertiesFile() throws Exception;1515699606;Test that the CliFrontend is able to pick up the .yarn-properties file from a specified location.;@Test_	public void testResumeFromYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(validPropertiesFile)___		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli("y", "yarn")___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		final CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true)___		final String clusterId = flinkYarnSessionCli.getClusterId(_			configuration,_			commandLine)___		assertEquals(TEST_YARN_APPLICATION_ID.toString(), clusterId)__	};test,that,the,cli,frontend,is,able,to,pick,up,the,yarn,properties,file,from,a,specified,location;test,public,void,test,resume,from,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,valid,properties,file,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,y,yarn,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,final,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,new,string,true,final,string,cluster,id,flink,yarn,session,cli,get,cluster,id,configuration,command,line,assert,equals,to,string,cluster,id
FlinkYarnSessionCliTest -> @Test 	public void testResumeFromYarnPropertiesFile() throws Exception;1515770042;Test that the CliFrontend is able to pick up the .yarn-properties file from a specified location.;@Test_	public void testResumeFromYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(validPropertiesFile)___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		final CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true)___		final String clusterId = flinkYarnSessionCli.getClusterId(commandLine)___		assertEquals(TEST_YARN_APPLICATION_ID.toString(), clusterId)__	};test,that,the,cli,frontend,is,able,to,pick,up,the,yarn,properties,file,from,a,specified,location;test,public,void,test,resume,from,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,valid,properties,file,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,final,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,new,string,true,final,string,cluster,id,flink,yarn,session,cli,get,cluster,id,command,line,assert,equals,to,string,cluster,id
FlinkYarnSessionCliTest -> @Test 	public void testResumeFromYarnPropertiesFile() throws Exception;1515770044;Test that the CliFrontend is able to pick up the .yarn-properties file from a specified location.;@Test_	public void testResumeFromYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(validPropertiesFile)___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		final CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true)___		final ApplicationId clusterId = flinkYarnSessionCli.getClusterId(commandLine)___		assertEquals(TEST_YARN_APPLICATION_ID, clusterId)__	};test,that,the,cli,frontend,is,able,to,pick,up,the,yarn,properties,file,from,a,specified,location;test,public,void,test,resume,from,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,valid,properties,file,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,final,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,new,string,true,final,application,id,cluster,id,flink,yarn,session,cli,get,cluster,id,command,line,assert,equals,cluster,id
FlinkYarnSessionCliTest -> @Test 	public void testResumeFromYarnPropertiesFile() throws Exception;1519249748;Test that the CliFrontend is able to pick up the .yarn-properties file from a specified location.;@Test_	public void testResumeFromYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(validPropertiesFile)___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		final CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true)___		final ApplicationId clusterId = flinkYarnSessionCli.getClusterId(commandLine)___		assertEquals(TEST_YARN_APPLICATION_ID, clusterId)__	};test,that,the,cli,frontend,is,able,to,pick,up,the,yarn,properties,file,from,a,specified,location;test,public,void,test,resume,from,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,valid,properties,file,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,final,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,new,string,true,final,application,id,cluster,id,flink,yarn,session,cli,get,cluster,id,command,line,assert,equals,cluster,id
FlinkYarnSessionCliTest -> @Test 	public void testResumeFromYarnPropertiesFile() throws Exception;1520032158;Test that the CliFrontend is able to pick up the .yarn-properties file from a specified location.;@Test_	public void testResumeFromYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(validPropertiesFile)___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		final CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true)___		final ApplicationId clusterId = flinkYarnSessionCli.getClusterId(commandLine)___		assertEquals(TEST_YARN_APPLICATION_ID, clusterId)__	};test,that,the,cli,frontend,is,able,to,pick,up,the,yarn,properties,file,from,a,specified,location;test,public,void,test,resume,from,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,valid,properties,file,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,final,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,new,string,true,final,application,id,cluster,id,flink,yarn,session,cli,get,cluster,id,command,line,assert,equals,cluster,id
FlinkYarnSessionCliTest -> @Test 	public void testResumeFromYarnPropertiesFile() throws Exception;1521626214;Test that the CliFrontend is able to pick up the .yarn-properties file from a specified location.;@Test_	public void testResumeFromYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(validPropertiesFile)___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		final CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true)___		final ApplicationId clusterId = flinkYarnSessionCli.getClusterId(commandLine)___		assertEquals(TEST_YARN_APPLICATION_ID, clusterId)__	};test,that,the,cli,frontend,is,able,to,pick,up,the,yarn,properties,file,from,a,specified,location;test,public,void,test,resume,from,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,valid,properties,file,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,final,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,new,string,true,final,application,id,cluster,id,flink,yarn,session,cli,get,cluster,id,command,line,assert,equals,cluster,id
FlinkYarnSessionCliTest -> @Test 	public void testResumeFromYarnPropertiesFile() throws Exception;1521626214;Test that the CliFrontend is able to pick up the .yarn-properties file from a specified location.;@Test_	public void testResumeFromYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(validPropertiesFile)___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		final CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true)___		final ApplicationId clusterId = flinkYarnSessionCli.getClusterId(commandLine)___		assertEquals(TEST_YARN_APPLICATION_ID, clusterId)__	};test,that,the,cli,frontend,is,able,to,pick,up,the,yarn,properties,file,from,a,specified,location;test,public,void,test,resume,from,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,valid,properties,file,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,final,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,new,string,true,final,application,id,cluster,id,flink,yarn,session,cli,get,cluster,id,command,line,assert,equals,cluster,id
FlinkYarnSessionCliTest -> @Test 	public void testResumeFromYarnPropertiesFile() throws Exception;1523641106;Test that the CliFrontend is able to pick up the .yarn-properties file from a specified location.;@Test_	public void testResumeFromYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(validPropertiesFile)___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		final CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true)___		final ApplicationId clusterId = flinkYarnSessionCli.getClusterId(commandLine)___		assertEquals(TEST_YARN_APPLICATION_ID, clusterId)__	};test,that,the,cli,frontend,is,able,to,pick,up,the,yarn,properties,file,from,a,specified,location;test,public,void,test,resume,from,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,valid,properties,file,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,final,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,new,string,true,final,application,id,cluster,id,flink,yarn,session,cli,get,cluster,id,command,line,assert,equals,cluster,id
FlinkYarnSessionCliTest -> @Test 	public void testResumeFromYarnPropertiesFile() throws Exception;1527695275;Test that the CliFrontend is able to pick up the .yarn-properties file from a specified location.;@Test_	public void testResumeFromYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(validPropertiesFile)___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		final CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true)___		final ApplicationId clusterId = flinkYarnSessionCli.getClusterId(commandLine)___		assertEquals(TEST_YARN_APPLICATION_ID, clusterId)__	};test,that,the,cli,frontend,is,able,to,pick,up,the,yarn,properties,file,from,a,specified,location;test,public,void,test,resume,from,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,valid,properties,file,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,final,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,new,string,true,final,application,id,cluster,id,flink,yarn,session,cli,get,cluster,id,command,line,assert,equals,cluster,id
FlinkYarnSessionCliTest -> @Test 	public void testResumeFromYarnPropertiesFile() throws Exception;1530798894;Test that the CliFrontend is able to pick up the .yarn-properties file from a specified location.;@Test_	public void testResumeFromYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(validPropertiesFile)___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		final CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true)___		final ApplicationId clusterId = flinkYarnSessionCli.getClusterId(commandLine)___		assertEquals(TEST_YARN_APPLICATION_ID, clusterId)__	};test,that,the,cli,frontend,is,able,to,pick,up,the,yarn,properties,file,from,a,specified,location;test,public,void,test,resume,from,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,valid,properties,file,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,final,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,new,string,true,final,application,id,cluster,id,flink,yarn,session,cli,get,cluster,id,command,line,assert,equals,cluster,id
FlinkYarnSessionCliTest -> @Test 	public void testResumeFromYarnPropertiesFile() throws Exception;1531895624;Test that the CliFrontend is able to pick up the .yarn-properties file from a specified location.;@Test_	public void testResumeFromYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(validPropertiesFile)___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		final CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true)___		final ApplicationId clusterId = flinkYarnSessionCli.getClusterId(commandLine)___		assertEquals(TEST_YARN_APPLICATION_ID, clusterId)__	};test,that,the,cli,frontend,is,able,to,pick,up,the,yarn,properties,file,from,a,specified,location;test,public,void,test,resume,from,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,valid,properties,file,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,final,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,new,string,true,final,application,id,cluster,id,flink,yarn,session,cli,get,cluster,id,command,line,assert,equals,cluster,id
FlinkYarnSessionCliTest -> @Test 	public void testResumeFromYarnPropertiesFile() throws Exception;1547121799;Test that the CliFrontend is able to pick up the .yarn-properties file from a specified location.;@Test_	public void testResumeFromYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(validPropertiesFile)___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		final CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[] {}, true)___		final ApplicationId clusterId = flinkYarnSessionCli.getClusterId(commandLine)___		assertEquals(TEST_YARN_APPLICATION_ID, clusterId)__	};test,that,the,cli,frontend,is,able,to,pick,up,the,yarn,properties,file,from,a,specified,location;test,public,void,test,resume,from,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,valid,properties,file,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,final,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,new,string,true,final,application,id,cluster,id,flink,yarn,session,cli,get,cluster,id,command,line,assert,equals,cluster,id
FlinkYarnSessionCliTest -> @Test(expected = FlinkException.class) 	public void testInvalidYarnPropertiesFile() throws Exception;1515770042;Tests that we fail when reading an invalid yarn properties file when retrieving_the cluster id.;@Test(expected = FlinkException.class)_	public void testInvalidYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(invalidPropertiesFile)___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")__	};tests,that,we,fail,when,reading,an,invalid,yarn,properties,file,when,retrieving,the,cluster,id;test,expected,flink,exception,class,public,void,test,invalid,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,invalid,properties,file,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn
FlinkYarnSessionCliTest -> @Test(expected = FlinkException.class) 	public void testInvalidYarnPropertiesFile() throws Exception;1515770044;Tests that we fail when reading an invalid yarn properties file when retrieving_the cluster id.;@Test(expected = FlinkException.class)_	public void testInvalidYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(invalidPropertiesFile)___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")__	};tests,that,we,fail,when,reading,an,invalid,yarn,properties,file,when,retrieving,the,cluster,id;test,expected,flink,exception,class,public,void,test,invalid,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,invalid,properties,file,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn
FlinkYarnSessionCliTest -> @Test(expected = FlinkException.class) 	public void testInvalidYarnPropertiesFile() throws Exception;1519249748;Tests that we fail when reading an invalid yarn properties file when retrieving_the cluster id.;@Test(expected = FlinkException.class)_	public void testInvalidYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(invalidPropertiesFile)___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")__	};tests,that,we,fail,when,reading,an,invalid,yarn,properties,file,when,retrieving,the,cluster,id;test,expected,flink,exception,class,public,void,test,invalid,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,invalid,properties,file,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn
FlinkYarnSessionCliTest -> @Test(expected = FlinkException.class) 	public void testInvalidYarnPropertiesFile() throws Exception;1520032158;Tests that we fail when reading an invalid yarn properties file when retrieving_the cluster id.;@Test(expected = FlinkException.class)_	public void testInvalidYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(invalidPropertiesFile)___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")__	};tests,that,we,fail,when,reading,an,invalid,yarn,properties,file,when,retrieving,the,cluster,id;test,expected,flink,exception,class,public,void,test,invalid,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,invalid,properties,file,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn
FlinkYarnSessionCliTest -> @Test(expected = FlinkException.class) 	public void testInvalidYarnPropertiesFile() throws Exception;1521626214;Tests that we fail when reading an invalid yarn properties file when retrieving_the cluster id.;@Test(expected = FlinkException.class)_	public void testInvalidYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(invalidPropertiesFile)___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")__	};tests,that,we,fail,when,reading,an,invalid,yarn,properties,file,when,retrieving,the,cluster,id;test,expected,flink,exception,class,public,void,test,invalid,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,invalid,properties,file,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn
FlinkYarnSessionCliTest -> @Test(expected = FlinkException.class) 	public void testInvalidYarnPropertiesFile() throws Exception;1521626214;Tests that we fail when reading an invalid yarn properties file when retrieving_the cluster id.;@Test(expected = FlinkException.class)_	public void testInvalidYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(invalidPropertiesFile)___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")__	};tests,that,we,fail,when,reading,an,invalid,yarn,properties,file,when,retrieving,the,cluster,id;test,expected,flink,exception,class,public,void,test,invalid,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,invalid,properties,file,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn
FlinkYarnSessionCliTest -> @Test(expected = FlinkException.class) 	public void testInvalidYarnPropertiesFile() throws Exception;1523641106;Tests that we fail when reading an invalid yarn properties file when retrieving_the cluster id.;@Test(expected = FlinkException.class)_	public void testInvalidYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(invalidPropertiesFile)___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")__	};tests,that,we,fail,when,reading,an,invalid,yarn,properties,file,when,retrieving,the,cluster,id;test,expected,flink,exception,class,public,void,test,invalid,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,invalid,properties,file,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn
FlinkYarnSessionCliTest -> @Test(expected = FlinkException.class) 	public void testInvalidYarnPropertiesFile() throws Exception;1527695275;Tests that we fail when reading an invalid yarn properties file when retrieving_the cluster id.;@Test(expected = FlinkException.class)_	public void testInvalidYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(invalidPropertiesFile)___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")__	};tests,that,we,fail,when,reading,an,invalid,yarn,properties,file,when,retrieving,the,cluster,id;test,expected,flink,exception,class,public,void,test,invalid,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,invalid,properties,file,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn
FlinkYarnSessionCliTest -> @Test(expected = FlinkException.class) 	public void testInvalidYarnPropertiesFile() throws Exception;1530798894;Tests that we fail when reading an invalid yarn properties file when retrieving_the cluster id.;@Test(expected = FlinkException.class)_	public void testInvalidYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(invalidPropertiesFile)___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")__	};tests,that,we,fail,when,reading,an,invalid,yarn,properties,file,when,retrieving,the,cluster,id;test,expected,flink,exception,class,public,void,test,invalid,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,invalid,properties,file,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn
FlinkYarnSessionCliTest -> @Test(expected = FlinkException.class) 	public void testInvalidYarnPropertiesFile() throws Exception;1531895624;Tests that we fail when reading an invalid yarn properties file when retrieving_the cluster id.;@Test(expected = FlinkException.class)_	public void testInvalidYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(invalidPropertiesFile)___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")__	};tests,that,we,fail,when,reading,an,invalid,yarn,properties,file,when,retrieving,the,cluster,id;test,expected,flink,exception,class,public,void,test,invalid,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,invalid,properties,file,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn
FlinkYarnSessionCliTest -> @Test(expected = FlinkException.class) 	public void testInvalidYarnPropertiesFile() throws Exception;1547121799;Tests that we fail when reading an invalid yarn properties file when retrieving_the cluster id.;@Test(expected = FlinkException.class)_	public void testInvalidYarnPropertiesFile() throws Exception {__		File directoryPath = writeYarnPropertiesFile(invalidPropertiesFile)___		final Configuration configuration = new Configuration()__		configuration.setString(YarnConfigOptions.PROPERTIES_FILE_LOCATION, directoryPath.getAbsolutePath())___		new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")__	};tests,that,we,fail,when,reading,an,invalid,yarn,properties,file,when,retrieving,the,cluster,id;test,expected,flink,exception,class,public,void,test,invalid,yarn,properties,file,throws,exception,file,directory,path,write,yarn,properties,file,invalid,properties,file,final,configuration,configuration,new,configuration,configuration,set,string,yarn,config,options,directory,path,get,absolute,path,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn
FlinkYarnSessionCliTest -> @Test 	public void testHeapMemoryPropertyWithUnitMB() throws Exception;1531895624;Tests the specifying heap memory with unit (MB) for job manager and task manager.;@Test_	public void testHeapMemoryPropertyWithUnitMB() throws Exception {_		final String[] args = new String[] { "-yn", "2", "-yjm", "1024m", "-ytm", "2048m" }__		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			new Configuration(),_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")__		final CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false)__		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(1024))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(2048))__	};tests,the,specifying,heap,memory,with,unit,mb,for,job,manager,and,task,manager;test,public,void,test,heap,memory,property,with,unit,mb,throws,exception,final,string,args,new,string,yn,2,yjm,1024m,ytm,2048m,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,new,configuration,tmp,get,root,get,absolute,path,y,yarn,final,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,args,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,1024,assert,that,cluster,specification,get,task,manager,memory,mb,is,2048
FlinkYarnSessionCliTest -> @Test 	public void testHeapMemoryPropertyWithUnitMB() throws Exception;1547121799;Tests the specifying heap memory with unit (MB) for job manager and task manager.;@Test_	public void testHeapMemoryPropertyWithUnitMB() throws Exception {_		final String[] args = new String[] { "-yn", "2", "-yjm", "1024m", "-ytm", "2048m" }__		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			new Configuration(),_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")__		final CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false)__		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(1024))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(2048))__	};tests,the,specifying,heap,memory,with,unit,mb,for,job,manager,and,task,manager;test,public,void,test,heap,memory,property,with,unit,mb,throws,exception,final,string,args,new,string,yn,2,yjm,1024m,ytm,2048m,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,new,configuration,tmp,get,root,get,absolute,path,y,yarn,final,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,args,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,1024,assert,that,cluster,specification,get,task,manager,memory,mb,is,2048
FlinkYarnSessionCliTest -> @Test 	public void testHeapMemoryPropertyWithOldConfigKey() throws Exception;1531895624;Tests the specifying heap memory with old config key for job manager and task manager.;@Test_	public void testHeapMemoryPropertyWithOldConfigKey() throws Exception {_		Configuration configuration = new Configuration()__		configuration.setInteger(JobManagerOptions.JOB_MANAGER_HEAP_MEMORY_MB, 2048)__		configuration.setInteger(TaskManagerOptions.TASK_MANAGER_HEAP_MEMORY_MB, 4096)___		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		final CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[0], false)___		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(2048))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(4096))__	};tests,the,specifying,heap,memory,with,old,config,key,for,job,manager,and,task,manager;test,public,void,test,heap,memory,property,with,old,config,key,throws,exception,configuration,configuration,new,configuration,configuration,set,integer,job,manager,options,2048,configuration,set,integer,task,manager,options,4096,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,final,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,new,string,0,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,2048,assert,that,cluster,specification,get,task,manager,memory,mb,is,4096
FlinkYarnSessionCliTest -> @Test 	public void testHeapMemoryPropertyWithOldConfigKey() throws Exception;1547121799;Tests the specifying heap memory with old config key for job manager and task manager.;@Test_	public void testHeapMemoryPropertyWithOldConfigKey() throws Exception {_		Configuration configuration = new Configuration()__		configuration.setInteger(JobManagerOptions.JOB_MANAGER_HEAP_MEMORY_MB, 2048)__		configuration.setInteger(TaskManagerOptions.TASK_MANAGER_HEAP_MEMORY_MB, 4096)___		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		final CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[0], false)___		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(2048))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(4096))__	};tests,the,specifying,heap,memory,with,old,config,key,for,job,manager,and,task,manager;test,public,void,test,heap,memory,property,with,old,config,key,throws,exception,configuration,configuration,new,configuration,configuration,set,integer,job,manager,options,2048,configuration,set,integer,task,manager,options,4096,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,final,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,new,string,0,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,2048,assert,that,cluster,specification,get,task,manager,memory,mb,is,4096
FlinkYarnSessionCliTest -> @Test 	public void testHeapMemoryPropertyWithArbitraryUnit() throws Exception;1531895624;Tests the specifying heap memory with arbitrary unit for job manager and task manager.;@Test_	public void testHeapMemoryPropertyWithArbitraryUnit() throws Exception {_		final String[] args = new String[] { "-yn", "2", "-yjm", "1g", "-ytm", "2g" }__		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			new Configuration(),_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")__		final CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false)__		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(1024))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(2048))__	};tests,the,specifying,heap,memory,with,arbitrary,unit,for,job,manager,and,task,manager;test,public,void,test,heap,memory,property,with,arbitrary,unit,throws,exception,final,string,args,new,string,yn,2,yjm,1g,ytm,2g,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,new,configuration,tmp,get,root,get,absolute,path,y,yarn,final,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,args,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,1024,assert,that,cluster,specification,get,task,manager,memory,mb,is,2048
FlinkYarnSessionCliTest -> @Test 	public void testHeapMemoryPropertyWithArbitraryUnit() throws Exception;1547121799;Tests the specifying heap memory with arbitrary unit for job manager and task manager.;@Test_	public void testHeapMemoryPropertyWithArbitraryUnit() throws Exception {_		final String[] args = new String[] { "-yn", "2", "-yjm", "1g", "-ytm", "2g" }__		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			new Configuration(),_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")__		final CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false)__		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(1024))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(2048))__	};tests,the,specifying,heap,memory,with,arbitrary,unit,for,job,manager,and,task,manager;test,public,void,test,heap,memory,property,with,arbitrary,unit,throws,exception,final,string,args,new,string,yn,2,yjm,1g,ytm,2g,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,new,configuration,tmp,get,root,get,absolute,path,y,yarn,final,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,args,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,1024,assert,that,cluster,specification,get,task,manager,memory,mb,is,2048
FlinkYarnSessionCliTest -> @Test 	public void testConfigurationClusterSpecification() throws Exception;1520032158;Tests that the configuration settings are used to create the_{@link ClusterSpecification}.;@Test_	public void testConfigurationClusterSpecification() throws Exception {_		final Configuration configuration = new Configuration()__		final int jobManagerMemory = 1337__		configuration.setInteger(JobManagerOptions.JOB_MANAGER_HEAP_MEMORY, jobManagerMemory)__		final int taskManagerMemory = 7331__		configuration.setInteger(TaskManagerOptions.TASK_MANAGER_HEAP_MEMORY, taskManagerMemory)__		final int slotsPerTaskManager = 42__		configuration.setInteger(TaskManagerOptions.NUM_TASK_SLOTS, slotsPerTaskManager)___		final String[] args = {}__		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false)___		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(jobManagerMemory))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(taskManagerMemory))__		assertThat(clusterSpecification.getSlotsPerTaskManager(), is(slotsPerTaskManager))__	};tests,that,the,configuration,settings,are,used,to,create,the,link,cluster,specification;test,public,void,test,configuration,cluster,specification,throws,exception,final,configuration,configuration,new,configuration,final,int,job,manager,memory,1337,configuration,set,integer,job,manager,options,job,manager,memory,final,int,task,manager,memory,7331,configuration,set,integer,task,manager,options,task,manager,memory,final,int,slots,per,task,manager,42,configuration,set,integer,task,manager,options,slots,per,task,manager,final,string,args,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,args,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,job,manager,memory,assert,that,cluster,specification,get,task,manager,memory,mb,is,task,manager,memory,assert,that,cluster,specification,get,slots,per,task,manager,is,slots,per,task,manager
FlinkYarnSessionCliTest -> @Test 	public void testConfigurationClusterSpecification() throws Exception;1521626214;Tests that the configuration settings are used to create the_{@link ClusterSpecification}.;@Test_	public void testConfigurationClusterSpecification() throws Exception {_		final Configuration configuration = new Configuration()__		final int jobManagerMemory = 1337__		configuration.setInteger(JobManagerOptions.JOB_MANAGER_HEAP_MEMORY, jobManagerMemory)__		final int taskManagerMemory = 7331__		configuration.setInteger(TaskManagerOptions.TASK_MANAGER_HEAP_MEMORY, taskManagerMemory)__		final int slotsPerTaskManager = 42__		configuration.setInteger(TaskManagerOptions.NUM_TASK_SLOTS, slotsPerTaskManager)___		final String[] args = {}__		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false)___		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(jobManagerMemory))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(taskManagerMemory))__		assertThat(clusterSpecification.getSlotsPerTaskManager(), is(slotsPerTaskManager))__	};tests,that,the,configuration,settings,are,used,to,create,the,link,cluster,specification;test,public,void,test,configuration,cluster,specification,throws,exception,final,configuration,configuration,new,configuration,final,int,job,manager,memory,1337,configuration,set,integer,job,manager,options,job,manager,memory,final,int,task,manager,memory,7331,configuration,set,integer,task,manager,options,task,manager,memory,final,int,slots,per,task,manager,42,configuration,set,integer,task,manager,options,slots,per,task,manager,final,string,args,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,args,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,job,manager,memory,assert,that,cluster,specification,get,task,manager,memory,mb,is,task,manager,memory,assert,that,cluster,specification,get,slots,per,task,manager,is,slots,per,task,manager
FlinkYarnSessionCliTest -> @Test 	public void testConfigurationClusterSpecification() throws Exception;1521626214;Tests that the configuration settings are used to create the_{@link ClusterSpecification}.;@Test_	public void testConfigurationClusterSpecification() throws Exception {_		final Configuration configuration = new Configuration()__		final int jobManagerMemory = 1337__		configuration.setInteger(JobManagerOptions.JOB_MANAGER_HEAP_MEMORY, jobManagerMemory)__		final int taskManagerMemory = 7331__		configuration.setInteger(TaskManagerOptions.TASK_MANAGER_HEAP_MEMORY, taskManagerMemory)__		final int slotsPerTaskManager = 42__		configuration.setInteger(TaskManagerOptions.NUM_TASK_SLOTS, slotsPerTaskManager)___		final String[] args = {}__		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false)___		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(jobManagerMemory))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(taskManagerMemory))__		assertThat(clusterSpecification.getSlotsPerTaskManager(), is(slotsPerTaskManager))__	};tests,that,the,configuration,settings,are,used,to,create,the,link,cluster,specification;test,public,void,test,configuration,cluster,specification,throws,exception,final,configuration,configuration,new,configuration,final,int,job,manager,memory,1337,configuration,set,integer,job,manager,options,job,manager,memory,final,int,task,manager,memory,7331,configuration,set,integer,task,manager,options,task,manager,memory,final,int,slots,per,task,manager,42,configuration,set,integer,task,manager,options,slots,per,task,manager,final,string,args,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,args,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,job,manager,memory,assert,that,cluster,specification,get,task,manager,memory,mb,is,task,manager,memory,assert,that,cluster,specification,get,slots,per,task,manager,is,slots,per,task,manager
FlinkYarnSessionCliTest -> @Test 	public void testConfigurationClusterSpecification() throws Exception;1523641106;Tests that the configuration settings are used to create the_{@link ClusterSpecification}.;@Test_	public void testConfigurationClusterSpecification() throws Exception {_		final Configuration configuration = new Configuration()__		final int jobManagerMemory = 1337__		configuration.setInteger(JobManagerOptions.JOB_MANAGER_HEAP_MEMORY, jobManagerMemory)__		final int taskManagerMemory = 7331__		configuration.setInteger(TaskManagerOptions.TASK_MANAGER_HEAP_MEMORY, taskManagerMemory)__		final int slotsPerTaskManager = 42__		configuration.setInteger(TaskManagerOptions.NUM_TASK_SLOTS, slotsPerTaskManager)___		final String[] args = {}__		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false)___		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(jobManagerMemory))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(taskManagerMemory))__		assertThat(clusterSpecification.getSlotsPerTaskManager(), is(slotsPerTaskManager))__	};tests,that,the,configuration,settings,are,used,to,create,the,link,cluster,specification;test,public,void,test,configuration,cluster,specification,throws,exception,final,configuration,configuration,new,configuration,final,int,job,manager,memory,1337,configuration,set,integer,job,manager,options,job,manager,memory,final,int,task,manager,memory,7331,configuration,set,integer,task,manager,options,task,manager,memory,final,int,slots,per,task,manager,42,configuration,set,integer,task,manager,options,slots,per,task,manager,final,string,args,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,args,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,job,manager,memory,assert,that,cluster,specification,get,task,manager,memory,mb,is,task,manager,memory,assert,that,cluster,specification,get,slots,per,task,manager,is,slots,per,task,manager
FlinkYarnSessionCliTest -> @Test 	public void testConfigurationClusterSpecification() throws Exception;1527695275;Tests that the configuration settings are used to create the_{@link ClusterSpecification}.;@Test_	public void testConfigurationClusterSpecification() throws Exception {_		final Configuration configuration = new Configuration()__		final int jobManagerMemory = 1337__		configuration.setInteger(JobManagerOptions.JOB_MANAGER_HEAP_MEMORY, jobManagerMemory)__		final int taskManagerMemory = 7331__		configuration.setInteger(TaskManagerOptions.TASK_MANAGER_HEAP_MEMORY, taskManagerMemory)__		final int slotsPerTaskManager = 42__		configuration.setInteger(TaskManagerOptions.NUM_TASK_SLOTS, slotsPerTaskManager)___		final String[] args = {}__		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false)___		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(jobManagerMemory))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(taskManagerMemory))__		assertThat(clusterSpecification.getSlotsPerTaskManager(), is(slotsPerTaskManager))__	};tests,that,the,configuration,settings,are,used,to,create,the,link,cluster,specification;test,public,void,test,configuration,cluster,specification,throws,exception,final,configuration,configuration,new,configuration,final,int,job,manager,memory,1337,configuration,set,integer,job,manager,options,job,manager,memory,final,int,task,manager,memory,7331,configuration,set,integer,task,manager,options,task,manager,memory,final,int,slots,per,task,manager,42,configuration,set,integer,task,manager,options,slots,per,task,manager,final,string,args,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,args,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,job,manager,memory,assert,that,cluster,specification,get,task,manager,memory,mb,is,task,manager,memory,assert,that,cluster,specification,get,slots,per,task,manager,is,slots,per,task,manager
FlinkYarnSessionCliTest -> @Test 	public void testConfigurationClusterSpecification() throws Exception;1530798894;Tests that the configuration settings are used to create the_{@link ClusterSpecification}.;@Test_	public void testConfigurationClusterSpecification() throws Exception {_		final Configuration configuration = new Configuration()__		final int jobManagerMemory = 1337__		configuration.setString(JobManagerOptions.JOB_MANAGER_HEAP_MEMORY, jobManagerMemory + "m")__		final int taskManagerMemory = 7331__		configuration.setString(TaskManagerOptions.TASK_MANAGER_HEAP_MEMORY, taskManagerMemory + "m")__		final int slotsPerTaskManager = 42__		configuration.setInteger(TaskManagerOptions.NUM_TASK_SLOTS, slotsPerTaskManager)___		final String[] args = {}__		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false)___		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(jobManagerMemory))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(taskManagerMemory))__		assertThat(clusterSpecification.getSlotsPerTaskManager(), is(slotsPerTaskManager))__	};tests,that,the,configuration,settings,are,used,to,create,the,link,cluster,specification;test,public,void,test,configuration,cluster,specification,throws,exception,final,configuration,configuration,new,configuration,final,int,job,manager,memory,1337,configuration,set,string,job,manager,options,job,manager,memory,m,final,int,task,manager,memory,7331,configuration,set,string,task,manager,options,task,manager,memory,m,final,int,slots,per,task,manager,42,configuration,set,integer,task,manager,options,slots,per,task,manager,final,string,args,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,args,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,job,manager,memory,assert,that,cluster,specification,get,task,manager,memory,mb,is,task,manager,memory,assert,that,cluster,specification,get,slots,per,task,manager,is,slots,per,task,manager
FlinkYarnSessionCliTest -> @Test 	public void testConfigurationClusterSpecification() throws Exception;1531895624;Tests that the configuration settings are used to create the_{@link ClusterSpecification}.;@Test_	public void testConfigurationClusterSpecification() throws Exception {_		final Configuration configuration = new Configuration()__		final int jobManagerMemory = 1337__		configuration.setString(JobManagerOptions.JOB_MANAGER_HEAP_MEMORY, jobManagerMemory + "m")__		final int taskManagerMemory = 7331__		configuration.setString(TaskManagerOptions.TASK_MANAGER_HEAP_MEMORY, taskManagerMemory + "m")__		final int slotsPerTaskManager = 42__		configuration.setInteger(TaskManagerOptions.NUM_TASK_SLOTS, slotsPerTaskManager)___		final String[] args = {}__		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false)___		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(jobManagerMemory))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(taskManagerMemory))__		assertThat(clusterSpecification.getSlotsPerTaskManager(), is(slotsPerTaskManager))__	};tests,that,the,configuration,settings,are,used,to,create,the,link,cluster,specification;test,public,void,test,configuration,cluster,specification,throws,exception,final,configuration,configuration,new,configuration,final,int,job,manager,memory,1337,configuration,set,string,job,manager,options,job,manager,memory,m,final,int,task,manager,memory,7331,configuration,set,string,task,manager,options,task,manager,memory,m,final,int,slots,per,task,manager,42,configuration,set,integer,task,manager,options,slots,per,task,manager,final,string,args,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,args,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,job,manager,memory,assert,that,cluster,specification,get,task,manager,memory,mb,is,task,manager,memory,assert,that,cluster,specification,get,slots,per,task,manager,is,slots,per,task,manager
FlinkYarnSessionCliTest -> @Test 	public void testConfigurationClusterSpecification() throws Exception;1547121799;Tests that the configuration settings are used to create the_{@link ClusterSpecification}.;@Test_	public void testConfigurationClusterSpecification() throws Exception {_		final Configuration configuration = new Configuration()__		final int jobManagerMemory = 1337__		configuration.setString(JobManagerOptions.JOB_MANAGER_HEAP_MEMORY, jobManagerMemory + "m")__		final int taskManagerMemory = 7331__		configuration.setString(TaskManagerOptions.TASK_MANAGER_HEAP_MEMORY, taskManagerMemory + "m")__		final int slotsPerTaskManager = 42__		configuration.setInteger(TaskManagerOptions.NUM_TASK_SLOTS, slotsPerTaskManager)___		final String[] args = {}__		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false)___		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(jobManagerMemory))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(taskManagerMemory))__		assertThat(clusterSpecification.getSlotsPerTaskManager(), is(slotsPerTaskManager))__	};tests,that,the,configuration,settings,are,used,to,create,the,link,cluster,specification;test,public,void,test,configuration,cluster,specification,throws,exception,final,configuration,configuration,new,configuration,final,int,job,manager,memory,1337,configuration,set,string,job,manager,options,job,manager,memory,m,final,int,task,manager,memory,7331,configuration,set,string,task,manager,options,task,manager,memory,m,final,int,slots,per,task,manager,42,configuration,set,integer,task,manager,options,slots,per,task,manager,final,string,args,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,args,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,job,manager,memory,assert,that,cluster,specification,get,task,manager,memory,mb,is,task,manager,memory,assert,that,cluster,specification,get,slots,per,task,manager,is,slots,per,task,manager
FlinkYarnSessionCliTest -> @Test 	public void testHeapMemoryPropertyWithoutUnit() throws Exception;1531895624;Tests the specifying heap memory without unit for job manager and task manager.;@Test_	public void testHeapMemoryPropertyWithoutUnit() throws Exception {_		final String[] args = new String[] { "-yn", "2", "-yjm", "1024", "-ytm", "2048" }__		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			new Configuration(),_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		final CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false)___		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(1024))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(2048))__	};tests,the,specifying,heap,memory,without,unit,for,job,manager,and,task,manager;test,public,void,test,heap,memory,property,without,unit,throws,exception,final,string,args,new,string,yn,2,yjm,1024,ytm,2048,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,new,configuration,tmp,get,root,get,absolute,path,y,yarn,final,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,args,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,1024,assert,that,cluster,specification,get,task,manager,memory,mb,is,2048
FlinkYarnSessionCliTest -> @Test 	public void testHeapMemoryPropertyWithoutUnit() throws Exception;1547121799;Tests the specifying heap memory without unit for job manager and task manager.;@Test_	public void testHeapMemoryPropertyWithoutUnit() throws Exception {_		final String[] args = new String[] { "-yn", "2", "-yjm", "1024", "-ytm", "2048" }__		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			new Configuration(),_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		final CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false)___		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(1024))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(2048))__	};tests,the,specifying,heap,memory,without,unit,for,job,manager,and,task,manager;test,public,void,test,heap,memory,property,without,unit,throws,exception,final,string,args,new,string,yn,2,yjm,1024,ytm,2048,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,new,configuration,tmp,get,root,get,absolute,path,y,yarn,final,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,args,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,1024,assert,that,cluster,specification,get,task,manager,memory,mb,is,2048
FlinkYarnSessionCliTest -> @Test 	public void testHeapMemoryPropertyWithConfigDefaultValue() throws Exception;1531895624;Tests the specifying heap memory with config default value for job manager and task manager.;@Test_	public void testHeapMemoryPropertyWithConfigDefaultValue() throws Exception {_		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			new Configuration(),_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		final CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[0], false)___		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(1024))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(1024))__	};tests,the,specifying,heap,memory,with,config,default,value,for,job,manager,and,task,manager;test,public,void,test,heap,memory,property,with,config,default,value,throws,exception,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,new,configuration,tmp,get,root,get,absolute,path,y,yarn,final,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,new,string,0,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,1024,assert,that,cluster,specification,get,task,manager,memory,mb,is,1024
FlinkYarnSessionCliTest -> @Test 	public void testHeapMemoryPropertyWithConfigDefaultValue() throws Exception;1547121799;Tests the specifying heap memory with config default value for job manager and task manager.;@Test_	public void testHeapMemoryPropertyWithConfigDefaultValue() throws Exception {_		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			new Configuration(),_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		final CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(new String[0], false)___		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(1024))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(1024))__	};tests,the,specifying,heap,memory,with,config,default,value,for,job,manager,and,task,manager;test,public,void,test,heap,memory,property,with,config,default,value,throws,exception,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,new,configuration,tmp,get,root,get,absolute,path,y,yarn,final,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,new,string,0,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,1024,assert,that,cluster,specification,get,task,manager,memory,mb,is,1024
FlinkYarnSessionCliTest -> @Test 	public void testCommandLineClusterSpecification() throws Exception;1520032158;Tests that the command line arguments override the configuration settings_when the {@link ClusterSpecification} is created.;@Test_	public void testCommandLineClusterSpecification() throws Exception {_		final Configuration configuration = new Configuration()__		configuration.setInteger(JobManagerOptions.JOB_MANAGER_HEAP_MEMORY, 1337)__		configuration.setInteger(TaskManagerOptions.TASK_MANAGER_HEAP_MEMORY, 7331)__		configuration.setInteger(TaskManagerOptions.NUM_TASK_SLOTS, 2)___		final int jobManagerMemory = 42__		final int taskManagerMemory = 41__		final int slotsPerTaskManager = 30__		final String[] args = {"-yjm", String.valueOf(jobManagerMemory), "-ytm", String.valueOf(taskManagerMemory), "-ys", String.valueOf(slotsPerTaskManager)}__		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false)___		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(jobManagerMemory))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(taskManagerMemory))__		assertThat(clusterSpecification.getSlotsPerTaskManager(), is(slotsPerTaskManager))__	};tests,that,the,command,line,arguments,override,the,configuration,settings,when,the,link,cluster,specification,is,created;test,public,void,test,command,line,cluster,specification,throws,exception,final,configuration,configuration,new,configuration,configuration,set,integer,job,manager,options,1337,configuration,set,integer,task,manager,options,7331,configuration,set,integer,task,manager,options,2,final,int,job,manager,memory,42,final,int,task,manager,memory,41,final,int,slots,per,task,manager,30,final,string,args,yjm,string,value,of,job,manager,memory,ytm,string,value,of,task,manager,memory,ys,string,value,of,slots,per,task,manager,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,args,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,job,manager,memory,assert,that,cluster,specification,get,task,manager,memory,mb,is,task,manager,memory,assert,that,cluster,specification,get,slots,per,task,manager,is,slots,per,task,manager
FlinkYarnSessionCliTest -> @Test 	public void testCommandLineClusterSpecification() throws Exception;1521626214;Tests that the command line arguments override the configuration settings_when the {@link ClusterSpecification} is created.;@Test_	public void testCommandLineClusterSpecification() throws Exception {_		final Configuration configuration = new Configuration()__		configuration.setInteger(JobManagerOptions.JOB_MANAGER_HEAP_MEMORY, 1337)__		configuration.setInteger(TaskManagerOptions.TASK_MANAGER_HEAP_MEMORY, 7331)__		configuration.setInteger(TaskManagerOptions.NUM_TASK_SLOTS, 2)___		final int jobManagerMemory = 1337__		final int taskManagerMemory = 7331__		final int slotsPerTaskManager = 30__		final String[] args = {"-yjm", String.valueOf(jobManagerMemory), "-ytm", String.valueOf(taskManagerMemory), "-ys", String.valueOf(slotsPerTaskManager)}__		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false)___		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(jobManagerMemory))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(taskManagerMemory))__		assertThat(clusterSpecification.getSlotsPerTaskManager(), is(slotsPerTaskManager))__	};tests,that,the,command,line,arguments,override,the,configuration,settings,when,the,link,cluster,specification,is,created;test,public,void,test,command,line,cluster,specification,throws,exception,final,configuration,configuration,new,configuration,configuration,set,integer,job,manager,options,1337,configuration,set,integer,task,manager,options,7331,configuration,set,integer,task,manager,options,2,final,int,job,manager,memory,1337,final,int,task,manager,memory,7331,final,int,slots,per,task,manager,30,final,string,args,yjm,string,value,of,job,manager,memory,ytm,string,value,of,task,manager,memory,ys,string,value,of,slots,per,task,manager,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,args,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,job,manager,memory,assert,that,cluster,specification,get,task,manager,memory,mb,is,task,manager,memory,assert,that,cluster,specification,get,slots,per,task,manager,is,slots,per,task,manager
FlinkYarnSessionCliTest -> @Test 	public void testCommandLineClusterSpecification() throws Exception;1521626214;Tests that the command line arguments override the configuration settings_when the {@link ClusterSpecification} is created.;@Test_	public void testCommandLineClusterSpecification() throws Exception {_		final Configuration configuration = new Configuration()__		final int jobManagerMemory = 1337__		final int taskManagerMemory = 7331__		final int slotsPerTaskManager = 30___		configuration.setInteger(JobManagerOptions.JOB_MANAGER_HEAP_MEMORY, jobManagerMemory)__		configuration.setInteger(TaskManagerOptions.TASK_MANAGER_HEAP_MEMORY, taskManagerMemory)__		configuration.setInteger(TaskManagerOptions.NUM_TASK_SLOTS, slotsPerTaskManager)___		final String[] args = {"-yjm", String.valueOf(jobManagerMemory), "-ytm", String.valueOf(taskManagerMemory), "-ys", String.valueOf(slotsPerTaskManager)}__		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false)___		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(jobManagerMemory))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(taskManagerMemory))__		assertThat(clusterSpecification.getSlotsPerTaskManager(), is(slotsPerTaskManager))__	};tests,that,the,command,line,arguments,override,the,configuration,settings,when,the,link,cluster,specification,is,created;test,public,void,test,command,line,cluster,specification,throws,exception,final,configuration,configuration,new,configuration,final,int,job,manager,memory,1337,final,int,task,manager,memory,7331,final,int,slots,per,task,manager,30,configuration,set,integer,job,manager,options,job,manager,memory,configuration,set,integer,task,manager,options,task,manager,memory,configuration,set,integer,task,manager,options,slots,per,task,manager,final,string,args,yjm,string,value,of,job,manager,memory,ytm,string,value,of,task,manager,memory,ys,string,value,of,slots,per,task,manager,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,args,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,job,manager,memory,assert,that,cluster,specification,get,task,manager,memory,mb,is,task,manager,memory,assert,that,cluster,specification,get,slots,per,task,manager,is,slots,per,task,manager
FlinkYarnSessionCliTest -> @Test 	public void testCommandLineClusterSpecification() throws Exception;1523641106;Tests that the command line arguments override the configuration settings_when the {@link ClusterSpecification} is created.;@Test_	public void testCommandLineClusterSpecification() throws Exception {_		final Configuration configuration = new Configuration()__		final int jobManagerMemory = 1337__		final int taskManagerMemory = 7331__		final int slotsPerTaskManager = 30___		configuration.setInteger(JobManagerOptions.JOB_MANAGER_HEAP_MEMORY, jobManagerMemory)__		configuration.setInteger(TaskManagerOptions.TASK_MANAGER_HEAP_MEMORY, taskManagerMemory)__		configuration.setInteger(TaskManagerOptions.NUM_TASK_SLOTS, slotsPerTaskManager)___		final String[] args = {"-yjm", String.valueOf(jobManagerMemory), "-ytm", String.valueOf(taskManagerMemory), "-ys", String.valueOf(slotsPerTaskManager)}__		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false)___		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(jobManagerMemory))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(taskManagerMemory))__		assertThat(clusterSpecification.getSlotsPerTaskManager(), is(slotsPerTaskManager))__	};tests,that,the,command,line,arguments,override,the,configuration,settings,when,the,link,cluster,specification,is,created;test,public,void,test,command,line,cluster,specification,throws,exception,final,configuration,configuration,new,configuration,final,int,job,manager,memory,1337,final,int,task,manager,memory,7331,final,int,slots,per,task,manager,30,configuration,set,integer,job,manager,options,job,manager,memory,configuration,set,integer,task,manager,options,task,manager,memory,configuration,set,integer,task,manager,options,slots,per,task,manager,final,string,args,yjm,string,value,of,job,manager,memory,ytm,string,value,of,task,manager,memory,ys,string,value,of,slots,per,task,manager,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,args,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,job,manager,memory,assert,that,cluster,specification,get,task,manager,memory,mb,is,task,manager,memory,assert,that,cluster,specification,get,slots,per,task,manager,is,slots,per,task,manager
FlinkYarnSessionCliTest -> @Test 	public void testCommandLineClusterSpecification() throws Exception;1527695275;Tests that the command line arguments override the configuration settings_when the {@link ClusterSpecification} is created.;@Test_	public void testCommandLineClusterSpecification() throws Exception {_		final Configuration configuration = new Configuration()__		final int jobManagerMemory = 1337__		final int taskManagerMemory = 7331__		final int slotsPerTaskManager = 30___		configuration.setInteger(JobManagerOptions.JOB_MANAGER_HEAP_MEMORY, jobManagerMemory)__		configuration.setInteger(TaskManagerOptions.TASK_MANAGER_HEAP_MEMORY, taskManagerMemory)__		configuration.setInteger(TaskManagerOptions.NUM_TASK_SLOTS, slotsPerTaskManager)___		final String[] args = {"-yjm", String.valueOf(jobManagerMemory), "-ytm", String.valueOf(taskManagerMemory), "-ys", String.valueOf(slotsPerTaskManager)}__		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false)___		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(jobManagerMemory))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(taskManagerMemory))__		assertThat(clusterSpecification.getSlotsPerTaskManager(), is(slotsPerTaskManager))__	};tests,that,the,command,line,arguments,override,the,configuration,settings,when,the,link,cluster,specification,is,created;test,public,void,test,command,line,cluster,specification,throws,exception,final,configuration,configuration,new,configuration,final,int,job,manager,memory,1337,final,int,task,manager,memory,7331,final,int,slots,per,task,manager,30,configuration,set,integer,job,manager,options,job,manager,memory,configuration,set,integer,task,manager,options,task,manager,memory,configuration,set,integer,task,manager,options,slots,per,task,manager,final,string,args,yjm,string,value,of,job,manager,memory,ytm,string,value,of,task,manager,memory,ys,string,value,of,slots,per,task,manager,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,args,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,job,manager,memory,assert,that,cluster,specification,get,task,manager,memory,mb,is,task,manager,memory,assert,that,cluster,specification,get,slots,per,task,manager,is,slots,per,task,manager
FlinkYarnSessionCliTest -> @Test 	public void testCommandLineClusterSpecification() throws Exception;1530798894;Tests that the command line arguments override the configuration settings_when the {@link ClusterSpecification} is created.;@Test_	public void testCommandLineClusterSpecification() throws Exception {_		final Configuration configuration = new Configuration()__		final int jobManagerMemory = 1337__		final int taskManagerMemory = 7331__		final int slotsPerTaskManager = 30___		configuration.setString(JobManagerOptions.JOB_MANAGER_HEAP_MEMORY, jobManagerMemory + "m")__		configuration.setString(TaskManagerOptions.TASK_MANAGER_HEAP_MEMORY, taskManagerMemory + "m")__		configuration.setInteger(TaskManagerOptions.NUM_TASK_SLOTS, slotsPerTaskManager)___		final String[] args = {"-yjm", String.valueOf(jobManagerMemory) + "m", "-ytm", String.valueOf(taskManagerMemory) + "m", "-ys", String.valueOf(slotsPerTaskManager)}__		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false)___		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(jobManagerMemory))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(taskManagerMemory))__		assertThat(clusterSpecification.getSlotsPerTaskManager(), is(slotsPerTaskManager))__	};tests,that,the,command,line,arguments,override,the,configuration,settings,when,the,link,cluster,specification,is,created;test,public,void,test,command,line,cluster,specification,throws,exception,final,configuration,configuration,new,configuration,final,int,job,manager,memory,1337,final,int,task,manager,memory,7331,final,int,slots,per,task,manager,30,configuration,set,string,job,manager,options,job,manager,memory,m,configuration,set,string,task,manager,options,task,manager,memory,m,configuration,set,integer,task,manager,options,slots,per,task,manager,final,string,args,yjm,string,value,of,job,manager,memory,m,ytm,string,value,of,task,manager,memory,m,ys,string,value,of,slots,per,task,manager,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,args,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,job,manager,memory,assert,that,cluster,specification,get,task,manager,memory,mb,is,task,manager,memory,assert,that,cluster,specification,get,slots,per,task,manager,is,slots,per,task,manager
FlinkYarnSessionCliTest -> @Test 	public void testCommandLineClusterSpecification() throws Exception;1531895624;Tests that the command line arguments override the configuration settings_when the {@link ClusterSpecification} is created.;@Test_	public void testCommandLineClusterSpecification() throws Exception {_		final Configuration configuration = new Configuration()__		final int jobManagerMemory = 1337__		final int taskManagerMemory = 7331__		final int slotsPerTaskManager = 30___		configuration.setString(JobManagerOptions.JOB_MANAGER_HEAP_MEMORY, jobManagerMemory + "m")__		configuration.setString(TaskManagerOptions.TASK_MANAGER_HEAP_MEMORY, taskManagerMemory + "m")__		configuration.setInteger(TaskManagerOptions.NUM_TASK_SLOTS, slotsPerTaskManager)___		final String[] args = {"-yjm", String.valueOf(jobManagerMemory) + "m", "-ytm", String.valueOf(taskManagerMemory) + "m", "-ys", String.valueOf(slotsPerTaskManager)}__		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false)___		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(jobManagerMemory))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(taskManagerMemory))__		assertThat(clusterSpecification.getSlotsPerTaskManager(), is(slotsPerTaskManager))__	};tests,that,the,command,line,arguments,override,the,configuration,settings,when,the,link,cluster,specification,is,created;test,public,void,test,command,line,cluster,specification,throws,exception,final,configuration,configuration,new,configuration,final,int,job,manager,memory,1337,final,int,task,manager,memory,7331,final,int,slots,per,task,manager,30,configuration,set,string,job,manager,options,job,manager,memory,m,configuration,set,string,task,manager,options,task,manager,memory,m,configuration,set,integer,task,manager,options,slots,per,task,manager,final,string,args,yjm,string,value,of,job,manager,memory,m,ytm,string,value,of,task,manager,memory,m,ys,string,value,of,slots,per,task,manager,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,args,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,job,manager,memory,assert,that,cluster,specification,get,task,manager,memory,mb,is,task,manager,memory,assert,that,cluster,specification,get,slots,per,task,manager,is,slots,per,task,manager
FlinkYarnSessionCliTest -> @Test 	public void testCommandLineClusterSpecification() throws Exception;1547121799;Tests that the command line arguments override the configuration settings_when the {@link ClusterSpecification} is created.;@Test_	public void testCommandLineClusterSpecification() throws Exception {_		final Configuration configuration = new Configuration()__		final int jobManagerMemory = 1337__		final int taskManagerMemory = 7331__		final int slotsPerTaskManager = 30___		configuration.setString(JobManagerOptions.JOB_MANAGER_HEAP_MEMORY, jobManagerMemory + "m")__		configuration.setString(TaskManagerOptions.TASK_MANAGER_HEAP_MEMORY, taskManagerMemory + "m")__		configuration.setInteger(TaskManagerOptions.NUM_TASK_SLOTS, slotsPerTaskManager)___		final String[] args = {"-yjm", String.valueOf(jobManagerMemory) + "m", "-ytm", String.valueOf(taskManagerMemory) + "m", "-ys", String.valueOf(slotsPerTaskManager)}__		final FlinkYarnSessionCli flinkYarnSessionCli = new FlinkYarnSessionCli(_			configuration,_			tmp.getRoot().getAbsolutePath(),_			"y",_			"yarn")___		CommandLine commandLine = flinkYarnSessionCli.parseCommandLineOptions(args, false)___		final ClusterSpecification clusterSpecification = flinkYarnSessionCli.getClusterSpecification(commandLine)___		assertThat(clusterSpecification.getMasterMemoryMB(), is(jobManagerMemory))__		assertThat(clusterSpecification.getTaskManagerMemoryMB(), is(taskManagerMemory))__		assertThat(clusterSpecification.getSlotsPerTaskManager(), is(slotsPerTaskManager))__	};tests,that,the,command,line,arguments,override,the,configuration,settings,when,the,link,cluster,specification,is,created;test,public,void,test,command,line,cluster,specification,throws,exception,final,configuration,configuration,new,configuration,final,int,job,manager,memory,1337,final,int,task,manager,memory,7331,final,int,slots,per,task,manager,30,configuration,set,string,job,manager,options,job,manager,memory,m,configuration,set,string,task,manager,options,task,manager,memory,m,configuration,set,integer,task,manager,options,slots,per,task,manager,final,string,args,yjm,string,value,of,job,manager,memory,m,ytm,string,value,of,task,manager,memory,m,ys,string,value,of,slots,per,task,manager,final,flink,yarn,session,cli,flink,yarn,session,cli,new,flink,yarn,session,cli,configuration,tmp,get,root,get,absolute,path,y,yarn,command,line,command,line,flink,yarn,session,cli,parse,command,line,options,args,false,final,cluster,specification,cluster,specification,flink,yarn,session,cli,get,cluster,specification,command,line,assert,that,cluster,specification,get,master,memory,mb,is,job,manager,memory,assert,that,cluster,specification,get,task,manager,memory,mb,is,task,manager,memory,assert,that,cluster,specification,get,slots,per,task,manager,is,slots,per,task,manager
