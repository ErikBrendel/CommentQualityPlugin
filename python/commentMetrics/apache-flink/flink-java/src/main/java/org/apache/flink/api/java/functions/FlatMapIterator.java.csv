commented;modifiers;parameterAmount;loc;comment;code
true;public,abstract;1;1;/**  * The core method of the function. Takes an element from the input data set and transforms  * it into zero, one, or more elements.  *  * @param value The input value.  * @return An iterator over the returned elements.  *  * @throws Exception This method may throw exceptions. Throwing an exception will cause the operation  *                   to fail and may trigger recovery.  */ ;/**  * The core method of the function. Takes an element from the input data set and transforms  * it into zero, one, or more elements.  *  * @param value The input value.  * @return An iterator over the returned elements.  *  * @throws Exception This method may throw exceptions. Throwing an exception will cause the operation  *                   to fail and may trigger recovery.  */ public abstract Iterator<OUT> flatMap(IN value) throws Exception.
true;public,final;2;6;/**  * Delegates calls to the {@link #flatMap(Object)} method.  */ ;// -------------------------------------------------------------------------------------------- /**  * Delegates calls to the {@link #flatMap(Object)} method.  */ @Override public final void flatMap(IN value, Collector<OUT> out) throws Exception {     for (Iterator<OUT> iter = flatMap(value). iter.hasNext(). ) {         out.collect(iter.next()).     } }
