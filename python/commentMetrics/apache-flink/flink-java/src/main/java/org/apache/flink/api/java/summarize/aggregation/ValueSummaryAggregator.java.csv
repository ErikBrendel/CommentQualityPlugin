commented;modifiers;parameterAmount;loc;comment;code
false;public;1;9;;@Override public void aggregate(VT value) {     if (value != null) {         aggregator.aggregate(getValue(value)).     } else {         aggregator.aggregate(null).     } }
false;public;1;6;;@Override @SuppressWarnings("unchecked") public void combine(Aggregator<VT, R> otherSameType) {     ValueSummaryAggregator<VT, PT, R, A> other = (ValueSummaryAggregator<VT, PT, R, A>) otherSameType.     aggregator.combine(other.aggregator). }
false;public;0;4;;@Override public R result() {     return aggregator.result(). }
true;protected,abstract;0;1;/**  * Initialize an aggregator that can be used for the underlying primitive in the Value type.  *  * <p>E.g. DoubleValues can easily be converted to Double and could use an underlying Aggregator&lt.Double,?&gt.  */ ;/**  * Initialize an aggregator that can be used for the underlying primitive in the Value type.  *  * <p>E.g. DoubleValues can easily be converted to Double and could use an underlying Aggregator&lt.Double,?&gt.  */ protected abstract A initPrimitiveAggregator().
true;protected,abstract;1;1;/**  * Get the value out of a value type.  */ ;/**  * Get the value out of a value type.  */ protected abstract PT getValue(VT value).
false;protected;0;4;;@Override protected ShortSummaryAggregator initPrimitiveAggregator() {     return new ShortSummaryAggregator(). }
false;protected;1;4;;@Override protected Short getValue(ShortValue value) {     return value.getValue(). }
false;protected;0;4;;@Override protected IntegerSummaryAggregator initPrimitiveAggregator() {     return new IntegerSummaryAggregator(). }
false;protected;1;4;;@Override protected Integer getValue(IntValue value) {     return value.getValue(). }
false;protected;0;4;;@Override protected LongSummaryAggregator initPrimitiveAggregator() {     return new LongSummaryAggregator(). }
false;protected;1;4;;@Override protected Long getValue(LongValue value) {     return value.getValue(). }
false;protected;0;4;;@Override protected FloatSummaryAggregator initPrimitiveAggregator() {     return new FloatSummaryAggregator(). }
false;protected;1;4;;@Override protected Float getValue(FloatValue value) {     return value.getValue(). }
false;protected;0;4;;@Override protected DoubleSummaryAggregator initPrimitiveAggregator() {     return new DoubleSummaryAggregator(). }
false;protected;1;4;;@Override protected Double getValue(DoubleValue value) {     return value.getValue(). }
false;protected;0;4;;@Override protected BooleanSummaryAggregator initPrimitiveAggregator() {     return new BooleanSummaryAggregator(). }
false;protected;1;4;;@Override protected Boolean getValue(BooleanValue value) {     return value.getValue(). }
false;protected;0;4;;@Override protected StringSummaryAggregator initPrimitiveAggregator() {     return new StringSummaryAggregator(). }
false;protected;1;4;;@Override protected String getValue(StringValue value) {     return value.getValue(). }
