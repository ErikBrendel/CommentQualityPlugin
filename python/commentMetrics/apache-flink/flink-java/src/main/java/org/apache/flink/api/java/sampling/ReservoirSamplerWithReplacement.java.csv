# id;timestamp;commentText;codeText;commentWords;codeWords
ReservoirSamplerWithReplacement -> public ReservoirSamplerWithReplacement(int numSamples);1440164487;Create a sampler with fixed sample size and default random number generator.__@param numSamples Number of selected elements, must be non-negative.;public ReservoirSamplerWithReplacement(int numSamples) {_		this(numSamples, new Random())__	};create,a,sampler,with,fixed,sample,size,and,default,random,number,generator,param,num,samples,number,of,selected,elements,must,be,non,negative;public,reservoir,sampler,with,replacement,int,num,samples,this,num,samples,new,random
ReservoirSamplerWithReplacement -> public ReservoirSamplerWithReplacement(int numSamples);1445420638;Create a sampler with fixed sample size and default random number generator.__@param numSamples Number of selected elements, must be non-negative.;public ReservoirSamplerWithReplacement(int numSamples) {_		this(numSamples, new XORShiftRandom())__	};create,a,sampler,with,fixed,sample,size,and,default,random,number,generator,param,num,samples,number,of,selected,elements,must,be,non,negative;public,reservoir,sampler,with,replacement,int,num,samples,this,num,samples,new,xorshift,random
ReservoirSamplerWithReplacement -> public ReservoirSamplerWithReplacement(int numSamples);1455477986;Create a sampler with fixed sample size and default random number generator.__@param numSamples Number of selected elements, must be non-negative.;public ReservoirSamplerWithReplacement(int numSamples) {_		this(numSamples, new XORShiftRandom())__	};create,a,sampler,with,fixed,sample,size,and,default,random,number,generator,param,num,samples,number,of,selected,elements,must,be,non,negative;public,reservoir,sampler,with,replacement,int,num,samples,this,num,samples,new,xorshift,random
ReservoirSamplerWithReplacement -> public ReservoirSamplerWithReplacement(int numSamples);1462899491;Create a sampler with fixed sample size and default random number generator.__@param numSamples Number of selected elements, must be non-negative.;public ReservoirSamplerWithReplacement(int numSamples) {_		this(numSamples, new XORShiftRandom())__	};create,a,sampler,with,fixed,sample,size,and,default,random,number,generator,param,num,samples,number,of,selected,elements,must,be,non,negative;public,reservoir,sampler,with,replacement,int,num,samples,this,num,samples,new,xorshift,random
ReservoirSamplerWithReplacement -> public ReservoirSamplerWithReplacement(int numSamples);1500387231;Create a sampler with fixed sample size and default random number generator.__@param numSamples Number of selected elements, must be non-negative.;public ReservoirSamplerWithReplacement(int numSamples) {_		this(numSamples, new XORShiftRandom())__	};create,a,sampler,with,fixed,sample,size,and,default,random,number,generator,param,num,samples,number,of,selected,elements,must,be,non,negative;public,reservoir,sampler,with,replacement,int,num,samples,this,num,samples,new,xorshift,random
ReservoirSamplerWithReplacement -> public ReservoirSamplerWithReplacement(int numSamples, Random random);1440164487;Create a sampler with fixed sample size and random number generator.__@param numSamples Number of selected elements, must be non-negative._@param random     Random number generator;public ReservoirSamplerWithReplacement(int numSamples, Random random) {_		super(numSamples)__		Preconditions.checkArgument(numSamples >= 0, "numSamples should be non-negative.")__		this.random = random__	};create,a,sampler,with,fixed,sample,size,and,random,number,generator,param,num,samples,number,of,selected,elements,must,be,non,negative,param,random,random,number,generator;public,reservoir,sampler,with,replacement,int,num,samples,random,random,super,num,samples,preconditions,check,argument,num,samples,0,num,samples,should,be,non,negative,this,random,random
ReservoirSamplerWithReplacement -> public ReservoirSamplerWithReplacement(int numSamples, Random random);1445420638;Create a sampler with fixed sample size and random number generator.__@param numSamples Number of selected elements, must be non-negative._@param random     Random number generator;public ReservoirSamplerWithReplacement(int numSamples, Random random) {_		super(numSamples)__		Preconditions.checkArgument(numSamples >= 0, "numSamples should be non-negative.")__		this.random = random__	};create,a,sampler,with,fixed,sample,size,and,random,number,generator,param,num,samples,number,of,selected,elements,must,be,non,negative,param,random,random,number,generator;public,reservoir,sampler,with,replacement,int,num,samples,random,random,super,num,samples,preconditions,check,argument,num,samples,0,num,samples,should,be,non,negative,this,random,random
ReservoirSamplerWithReplacement -> public ReservoirSamplerWithReplacement(int numSamples, Random random);1455477986;Create a sampler with fixed sample size and random number generator.__@param numSamples Number of selected elements, must be non-negative._@param random     Random number generator;public ReservoirSamplerWithReplacement(int numSamples, Random random) {_		super(numSamples)__		Preconditions.checkArgument(numSamples >= 0, "numSamples should be non-negative.")__		this.random = random__	};create,a,sampler,with,fixed,sample,size,and,random,number,generator,param,num,samples,number,of,selected,elements,must,be,non,negative,param,random,random,number,generator;public,reservoir,sampler,with,replacement,int,num,samples,random,random,super,num,samples,preconditions,check,argument,num,samples,0,num,samples,should,be,non,negative,this,random,random
ReservoirSamplerWithReplacement -> public ReservoirSamplerWithReplacement(int numSamples, Random random);1462899491;Create a sampler with fixed sample size and random number generator.__@param numSamples Number of selected elements, must be non-negative._@param random     Random number generator;public ReservoirSamplerWithReplacement(int numSamples, Random random) {_		super(numSamples)__		Preconditions.checkArgument(numSamples >= 0, "numSamples should be non-negative.")__		this.random = random__	};create,a,sampler,with,fixed,sample,size,and,random,number,generator,param,num,samples,number,of,selected,elements,must,be,non,negative,param,random,random,number,generator;public,reservoir,sampler,with,replacement,int,num,samples,random,random,super,num,samples,preconditions,check,argument,num,samples,0,num,samples,should,be,non,negative,this,random,random
ReservoirSamplerWithReplacement -> public ReservoirSamplerWithReplacement(int numSamples, Random random);1500387231;Create a sampler with fixed sample size and random number generator.__@param numSamples Number of selected elements, must be non-negative._@param random     Random number generator;public ReservoirSamplerWithReplacement(int numSamples, Random random) {_		super(numSamples)__		Preconditions.checkArgument(numSamples >= 0, "numSamples should be non-negative.")__		this.random = random__	};create,a,sampler,with,fixed,sample,size,and,random,number,generator,param,num,samples,number,of,selected,elements,must,be,non,negative,param,random,random,number,generator;public,reservoir,sampler,with,replacement,int,num,samples,random,random,super,num,samples,preconditions,check,argument,num,samples,0,num,samples,should,be,non,negative,this,random,random
ReservoirSamplerWithReplacement -> public ReservoirSamplerWithReplacement(int numSamples, long seed);1440164487;Create a sampler with fixed sample size and random number generator seed.__@param numSamples Number of selected elements, must be non-negative._@param seed       Random number generator seed;public ReservoirSamplerWithReplacement(int numSamples, long seed) {_		this(numSamples, new Random(seed))__	};create,a,sampler,with,fixed,sample,size,and,random,number,generator,seed,param,num,samples,number,of,selected,elements,must,be,non,negative,param,seed,random,number,generator,seed;public,reservoir,sampler,with,replacement,int,num,samples,long,seed,this,num,samples,new,random,seed
ReservoirSamplerWithReplacement -> public ReservoirSamplerWithReplacement(int numSamples, long seed);1445420638;Create a sampler with fixed sample size and random number generator seed.__@param numSamples Number of selected elements, must be non-negative._@param seed       Random number generator seed;public ReservoirSamplerWithReplacement(int numSamples, long seed) {_		this(numSamples, new XORShiftRandom(seed))__	};create,a,sampler,with,fixed,sample,size,and,random,number,generator,seed,param,num,samples,number,of,selected,elements,must,be,non,negative,param,seed,random,number,generator,seed;public,reservoir,sampler,with,replacement,int,num,samples,long,seed,this,num,samples,new,xorshift,random,seed
ReservoirSamplerWithReplacement -> public ReservoirSamplerWithReplacement(int numSamples, long seed);1455477986;Create a sampler with fixed sample size and random number generator seed.__@param numSamples Number of selected elements, must be non-negative._@param seed       Random number generator seed;public ReservoirSamplerWithReplacement(int numSamples, long seed) {_		this(numSamples, new XORShiftRandom(seed))__	};create,a,sampler,with,fixed,sample,size,and,random,number,generator,seed,param,num,samples,number,of,selected,elements,must,be,non,negative,param,seed,random,number,generator,seed;public,reservoir,sampler,with,replacement,int,num,samples,long,seed,this,num,samples,new,xorshift,random,seed
ReservoirSamplerWithReplacement -> public ReservoirSamplerWithReplacement(int numSamples, long seed);1462899491;Create a sampler with fixed sample size and random number generator seed.__@param numSamples Number of selected elements, must be non-negative._@param seed       Random number generator seed;public ReservoirSamplerWithReplacement(int numSamples, long seed) {_		this(numSamples, new XORShiftRandom(seed))__	};create,a,sampler,with,fixed,sample,size,and,random,number,generator,seed,param,num,samples,number,of,selected,elements,must,be,non,negative,param,seed,random,number,generator,seed;public,reservoir,sampler,with,replacement,int,num,samples,long,seed,this,num,samples,new,xorshift,random,seed
ReservoirSamplerWithReplacement -> public ReservoirSamplerWithReplacement(int numSamples, long seed);1500387231;Create a sampler with fixed sample size and random number generator seed.__@param numSamples Number of selected elements, must be non-negative._@param seed       Random number generator seed;public ReservoirSamplerWithReplacement(int numSamples, long seed) {_		this(numSamples, new XORShiftRandom(seed))__	};create,a,sampler,with,fixed,sample,size,and,random,number,generator,seed,param,num,samples,number,of,selected,elements,must,be,non,negative,param,seed,random,number,generator,seed;public,reservoir,sampler,with,replacement,int,num,samples,long,seed,this,num,samples,new,xorshift,random,seed
