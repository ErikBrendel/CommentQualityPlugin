commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected FilterFunction<T> getFunction() {     return function. }
false;protected;1;20;;@Override protected org.apache.flink.api.common.operators.base.FilterOperatorBase<T, FlatMapFunction<T, T>> translateToDataFlow(Operator<T> input) {     String name = getName() != null ? getName() : "Filter at " + defaultName.     // create operator     PlanFilterOperator<T> po = new PlanFilterOperator<T>(function, name, getInputType()).     po.setInput(input).     // set parallelism     if (getParallelism() > 0) {         // use specified parallelism         po.setParallelism(getParallelism()).     } else {         // if no parallelism has been specified, use parallelism of input operator to enable chaining         po.setParallelism(input.getParallelism()).     }     return po. }
