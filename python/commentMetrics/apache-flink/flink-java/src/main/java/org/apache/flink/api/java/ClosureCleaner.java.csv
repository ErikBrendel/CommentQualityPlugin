# id;timestamp;commentText;codeText;commentWords;codeWords
ClosureCleaner -> public static void clean(Object func, boolean checkSerializable);1459850394;Tries to clean the closure of the given object, if the object is a non-static inner_class.__@param func The object whose closure should be cleaned._@param checkSerializable Flag to indicate whether serializability should be checked after_the closure cleaning attempt.__@throws InvalidProgramException Thrown, if 'checkSerializable' is true, and the object was_not serializable after the closure cleaning.__@throws RuntimeException A RuntimeException may be thrown, if the code of the class could not_be loaded, in order to process during teh closure cleaning.;public static void clean(Object func, boolean checkSerializable) {_		if (func == null) {_			return__		}_		_		final Class<?> cls = func.getClass()___		_		_		boolean closureAccessed = false__		_		for (Field f: cls.getDeclaredFields()) {_			if (f.getName().startsWith("this$")) {_				_				closureAccessed |= cleanThis0(func, cls, f.getName())__			}_		}_		_		if (checkSerializable) {_			try {_				InstantiationUtil.serializeObject(func)__			}_			catch (Exception e) {_				String functionType = getSuperClassOrInterfaceName(func.getClass())__				_				String msg = functionType == null ?_						(func + " is not serializable.") :_						("The implementation of the " + functionType + " is not serializable.")__				_				_				if (closureAccessed) {_					msg += " The implementation accesses fields of its enclosing class, which is " +_							"a common reason for non-serializability. " +_							"A common solution is to make the function a proper (non-inner) class, or" +_							"a static inner class."__				} else {_					msg += " The object probably contains or references non serializable fields."__				}_				_				throw new InvalidProgramException(msg, e)__			}_		}_	};tries,to,clean,the,closure,of,the,given,object,if,the,object,is,a,non,static,inner,class,param,func,the,object,whose,closure,should,be,cleaned,param,check,serializable,flag,to,indicate,whether,serializability,should,be,checked,after,the,closure,cleaning,attempt,throws,invalid,program,exception,thrown,if,check,serializable,is,true,and,the,object,was,not,serializable,after,the,closure,cleaning,throws,runtime,exception,a,runtime,exception,may,be,thrown,if,the,code,of,the,class,could,not,be,loaded,in,order,to,process,during,teh,closure,cleaning;public,static,void,clean,object,func,boolean,check,serializable,if,func,null,return,final,class,cls,func,get,class,boolean,closure,accessed,false,for,field,f,cls,get,declared,fields,if,f,get,name,starts,with,this,closure,accessed,clean,this0,func,cls,f,get,name,if,check,serializable,try,instantiation,util,serialize,object,func,catch,exception,e,string,function,type,get,super,class,or,interface,name,func,get,class,string,msg,function,type,null,func,is,not,serializable,the,implementation,of,the,function,type,is,not,serializable,if,closure,accessed,msg,the,implementation,accesses,fields,of,its,enclosing,class,which,is,a,common,reason,for,non,serializability,a,common,solution,is,to,make,the,function,a,proper,non,inner,class,or,a,static,inner,class,else,msg,the,object,probably,contains,or,references,non,serializable,fields,throw,new,invalid,program,exception,msg,e
ClosureCleaner -> public static void clean(Object func, boolean checkSerializable);1500974867;Tries to clean the closure of the given object, if the object is a non-static inner_class.__@param func The object whose closure should be cleaned._@param checkSerializable Flag to indicate whether serializability should be checked after_the closure cleaning attempt.__@throws InvalidProgramException Thrown, if 'checkSerializable' is true, and the object was_not serializable after the closure cleaning.__@throws RuntimeException A RuntimeException may be thrown, if the code of the class could not_be loaded, in order to process during teh closure cleaning.;public static void clean(Object func, boolean checkSerializable) {_		if (func == null) {_			return__		}__		final Class<?> cls = func.getClass()___		_		_		boolean closureAccessed = false___		for (Field f: cls.getDeclaredFields()) {_			if (f.getName().startsWith("this$")) {_				_				closureAccessed |= cleanThis0(func, cls, f.getName())__			}_		}__		if (checkSerializable) {_			try {_				InstantiationUtil.serializeObject(func)__			}_			catch (Exception e) {_				String functionType = getSuperClassOrInterfaceName(func.getClass())___				String msg = functionType == null ?_						(func + " is not serializable.") :_						("The implementation of the " + functionType + " is not serializable.")___				if (closureAccessed) {_					msg += " The implementation accesses fields of its enclosing class, which is " +_							"a common reason for non-serializability. " +_							"A common solution is to make the function a proper (non-inner) class, or" +_							"a static inner class."__				} else {_					msg += " The object probably contains or references non serializable fields."__				}__				throw new InvalidProgramException(msg, e)__			}_		}_	};tries,to,clean,the,closure,of,the,given,object,if,the,object,is,a,non,static,inner,class,param,func,the,object,whose,closure,should,be,cleaned,param,check,serializable,flag,to,indicate,whether,serializability,should,be,checked,after,the,closure,cleaning,attempt,throws,invalid,program,exception,thrown,if,check,serializable,is,true,and,the,object,was,not,serializable,after,the,closure,cleaning,throws,runtime,exception,a,runtime,exception,may,be,thrown,if,the,code,of,the,class,could,not,be,loaded,in,order,to,process,during,teh,closure,cleaning;public,static,void,clean,object,func,boolean,check,serializable,if,func,null,return,final,class,cls,func,get,class,boolean,closure,accessed,false,for,field,f,cls,get,declared,fields,if,f,get,name,starts,with,this,closure,accessed,clean,this0,func,cls,f,get,name,if,check,serializable,try,instantiation,util,serialize,object,func,catch,exception,e,string,function,type,get,super,class,or,interface,name,func,get,class,string,msg,function,type,null,func,is,not,serializable,the,implementation,of,the,function,type,is,not,serializable,if,closure,accessed,msg,the,implementation,accesses,fields,of,its,enclosing,class,which,is,a,common,reason,for,non,serializability,a,common,solution,is,to,make,the,function,a,proper,non,inner,class,or,a,static,inner,class,else,msg,the,object,probably,contains,or,references,non,serializable,fields,throw,new,invalid,program,exception,msg,e
ClosureCleaner -> public static void clean(Object func, boolean checkSerializable);1502357786;Tries to clean the closure of the given object, if the object is a non-static inner_class.__@param func The object whose closure should be cleaned._@param checkSerializable Flag to indicate whether serializability should be checked after_the closure cleaning attempt.__@throws InvalidProgramException Thrown, if 'checkSerializable' is true, and the object was_not serializable after the closure cleaning.__@throws RuntimeException A RuntimeException may be thrown, if the code of the class could not_be loaded, in order to process during teh closure cleaning.;public static void clean(Object func, boolean checkSerializable) {_		if (func == null) {_			return__		}__		final Class<?> cls = func.getClass()___		_		_		boolean closureAccessed = false___		for (Field f: cls.getDeclaredFields()) {_			if (f.getName().startsWith("this$")) {_				_				closureAccessed |= cleanThis0(func, cls, f.getName())__			}_		}__		if (checkSerializable) {_			try {_				InstantiationUtil.serializeObject(func)__			}_			catch (Exception e) {_				String functionType = getSuperClassOrInterfaceName(func.getClass())___				String msg = functionType == null ?_						(func + " is not serializable.") :_						("The implementation of the " + functionType + " is not serializable.")___				if (closureAccessed) {_					msg += " The implementation accesses fields of its enclosing class, which is " +_							"a common reason for non-serializability. " +_							"A common solution is to make the function a proper (non-inner) class, or" +_							"a static inner class."__				} else {_					msg += " The object probably contains or references non serializable fields."__				}__				throw new InvalidProgramException(msg, e)__			}_		}_	};tries,to,clean,the,closure,of,the,given,object,if,the,object,is,a,non,static,inner,class,param,func,the,object,whose,closure,should,be,cleaned,param,check,serializable,flag,to,indicate,whether,serializability,should,be,checked,after,the,closure,cleaning,attempt,throws,invalid,program,exception,thrown,if,check,serializable,is,true,and,the,object,was,not,serializable,after,the,closure,cleaning,throws,runtime,exception,a,runtime,exception,may,be,thrown,if,the,code,of,the,class,could,not,be,loaded,in,order,to,process,during,teh,closure,cleaning;public,static,void,clean,object,func,boolean,check,serializable,if,func,null,return,final,class,cls,func,get,class,boolean,closure,accessed,false,for,field,f,cls,get,declared,fields,if,f,get,name,starts,with,this,closure,accessed,clean,this0,func,cls,f,get,name,if,check,serializable,try,instantiation,util,serialize,object,func,catch,exception,e,string,function,type,get,super,class,or,interface,name,func,get,class,string,msg,function,type,null,func,is,not,serializable,the,implementation,of,the,function,type,is,not,serializable,if,closure,accessed,msg,the,implementation,accesses,fields,of,its,enclosing,class,which,is,a,common,reason,for,non,serializability,a,common,solution,is,to,make,the,function,a,proper,non,inner,class,or,a,static,inner,class,else,msg,the,object,probably,contains,or,references,non,serializable,fields,throw,new,invalid,program,exception,msg,e
ClosureCleaner -> public static void clean(Object func, boolean checkSerializable);1509972541;Tries to clean the closure of the given object, if the object is a non-static inner_class.__@param func The object whose closure should be cleaned._@param checkSerializable Flag to indicate whether serializability should be checked after_the closure cleaning attempt.__@throws InvalidProgramException Thrown, if 'checkSerializable' is true, and the object was_not serializable after the closure cleaning.__@throws RuntimeException A RuntimeException may be thrown, if the code of the class could not_be loaded, in order to process during teh closure cleaning.;public static void clean(Object func, boolean checkSerializable) {_		if (func == null) {_			return__		}__		final Class<?> cls = func.getClass()___		_		_		boolean closureAccessed = false___		for (Field f: cls.getDeclaredFields()) {_			if (f.getName().startsWith("this$")) {_				_				closureAccessed |= cleanThis0(func, cls, f.getName())__			}_		}__		if (checkSerializable) {_			try {_				InstantiationUtil.serializeObject(func)__			}_			catch (Exception e) {_				String functionType = getSuperClassOrInterfaceName(func.getClass())___				String msg = functionType == null ?_						(func + " is not serializable.") :_						("The implementation of the " + functionType + " is not serializable.")___				if (closureAccessed) {_					msg += " The implementation accesses fields of its enclosing class, which is " +_							"a common reason for non-serializability. " +_							"A common solution is to make the function a proper (non-inner) class, or " +_							"a static inner class."__				} else {_					msg += " The object probably contains or references non serializable fields."__				}__				throw new InvalidProgramException(msg, e)__			}_		}_	};tries,to,clean,the,closure,of,the,given,object,if,the,object,is,a,non,static,inner,class,param,func,the,object,whose,closure,should,be,cleaned,param,check,serializable,flag,to,indicate,whether,serializability,should,be,checked,after,the,closure,cleaning,attempt,throws,invalid,program,exception,thrown,if,check,serializable,is,true,and,the,object,was,not,serializable,after,the,closure,cleaning,throws,runtime,exception,a,runtime,exception,may,be,thrown,if,the,code,of,the,class,could,not,be,loaded,in,order,to,process,during,teh,closure,cleaning;public,static,void,clean,object,func,boolean,check,serializable,if,func,null,return,final,class,cls,func,get,class,boolean,closure,accessed,false,for,field,f,cls,get,declared,fields,if,f,get,name,starts,with,this,closure,accessed,clean,this0,func,cls,f,get,name,if,check,serializable,try,instantiation,util,serialize,object,func,catch,exception,e,string,function,type,get,super,class,or,interface,name,func,get,class,string,msg,function,type,null,func,is,not,serializable,the,implementation,of,the,function,type,is,not,serializable,if,closure,accessed,msg,the,implementation,accesses,fields,of,its,enclosing,class,which,is,a,common,reason,for,non,serializability,a,common,solution,is,to,make,the,function,a,proper,non,inner,class,or,a,static,inner,class,else,msg,the,object,probably,contains,or,references,non,serializable,fields,throw,new,invalid,program,exception,msg,e
ClosureCleaner -> public static void clean(Object func, boolean checkSerializable);1544726248;Tries to clean the closure of the given object, if the object is a non-static inner_class.__@param func The object whose closure should be cleaned._@param checkSerializable Flag to indicate whether serializability should be checked after_the closure cleaning attempt.__@throws InvalidProgramException Thrown, if 'checkSerializable' is true, and the object was_not serializable after the closure cleaning.__@throws RuntimeException A RuntimeException may be thrown, if the code of the class could not_be loaded, in order to process during teh closure cleaning.;public static void clean(Object func, boolean checkSerializable) {_		if (func == null) {_			return__		}__		final Class<?> cls = func.getClass()___		_		_		boolean closureAccessed = false___		for (Field f: cls.getDeclaredFields()) {_			if (f.getName().startsWith("this$")) {_				_				closureAccessed |= cleanThis0(func, cls, f.getName())__			}_		}__		if (checkSerializable) {_			try {_				InstantiationUtil.serializeObject(func)__			}_			catch (Exception e) {_				String functionType = getSuperClassOrInterfaceName(func.getClass())___				String msg = functionType == null ?_						(func + " is not serializable.") :_						("The implementation of the " + functionType + " is not serializable.")___				if (closureAccessed) {_					msg += " The implementation accesses fields of its enclosing class, which is " +_							"a common reason for non-serializability. " +_							"A common solution is to make the function a proper (non-inner) class, or " +_							"a static inner class."__				} else {_					msg += " The object probably contains or references non serializable fields."__				}__				throw new InvalidProgramException(msg, e)__			}_		}_	};tries,to,clean,the,closure,of,the,given,object,if,the,object,is,a,non,static,inner,class,param,func,the,object,whose,closure,should,be,cleaned,param,check,serializable,flag,to,indicate,whether,serializability,should,be,checked,after,the,closure,cleaning,attempt,throws,invalid,program,exception,thrown,if,check,serializable,is,true,and,the,object,was,not,serializable,after,the,closure,cleaning,throws,runtime,exception,a,runtime,exception,may,be,thrown,if,the,code,of,the,class,could,not,be,loaded,in,order,to,process,during,teh,closure,cleaning;public,static,void,clean,object,func,boolean,check,serializable,if,func,null,return,final,class,cls,func,get,class,boolean,closure,accessed,false,for,field,f,cls,get,declared,fields,if,f,get,name,starts,with,this,closure,accessed,clean,this0,func,cls,f,get,name,if,check,serializable,try,instantiation,util,serialize,object,func,catch,exception,e,string,function,type,get,super,class,or,interface,name,func,get,class,string,msg,function,type,null,func,is,not,serializable,the,implementation,of,the,function,type,is,not,serializable,if,closure,accessed,msg,the,implementation,accesses,fields,of,its,enclosing,class,which,is,a,common,reason,for,non,serializability,a,common,solution,is,to,make,the,function,a,proper,non,inner,class,or,a,static,inner,class,else,msg,the,object,probably,contains,or,references,non,serializable,fields,throw,new,invalid,program,exception,msg,e
ClosureCleaner -> public static void clean(Object func, boolean checkSerializable);1546180287;Tries to clean the closure of the given object, if the object is a non-static inner_class.__@param func The object whose closure should be cleaned._@param checkSerializable Flag to indicate whether serializability should be checked after_the closure cleaning attempt.__@throws InvalidProgramException Thrown, if 'checkSerializable' is true, and the object was_not serializable after the closure cleaning.__@throws RuntimeException A RuntimeException may be thrown, if the code of the class could not_be loaded, in order to process during the closure cleaning.;public static void clean(Object func, boolean checkSerializable) {_		if (func == null) {_			return__		}__		final Class<?> cls = func.getClass()___		_		_		boolean closureAccessed = false___		for (Field f: cls.getDeclaredFields()) {_			if (f.getName().startsWith("this$")) {_				_				closureAccessed |= cleanThis0(func, cls, f.getName())__			}_		}__		if (checkSerializable) {_			try {_				InstantiationUtil.serializeObject(func)__			}_			catch (Exception e) {_				String functionType = getSuperClassOrInterfaceName(func.getClass())___				String msg = functionType == null ?_						(func + " is not serializable.") :_						("The implementation of the " + functionType + " is not serializable.")___				if (closureAccessed) {_					msg += " The implementation accesses fields of its enclosing class, which is " +_							"a common reason for non-serializability. " +_							"A common solution is to make the function a proper (non-inner) class, or " +_							"a static inner class."__				} else {_					msg += " The object probably contains or references non serializable fields."__				}__				throw new InvalidProgramException(msg, e)__			}_		}_	};tries,to,clean,the,closure,of,the,given,object,if,the,object,is,a,non,static,inner,class,param,func,the,object,whose,closure,should,be,cleaned,param,check,serializable,flag,to,indicate,whether,serializability,should,be,checked,after,the,closure,cleaning,attempt,throws,invalid,program,exception,thrown,if,check,serializable,is,true,and,the,object,was,not,serializable,after,the,closure,cleaning,throws,runtime,exception,a,runtime,exception,may,be,thrown,if,the,code,of,the,class,could,not,be,loaded,in,order,to,process,during,the,closure,cleaning;public,static,void,clean,object,func,boolean,check,serializable,if,func,null,return,final,class,cls,func,get,class,boolean,closure,accessed,false,for,field,f,cls,get,declared,fields,if,f,get,name,starts,with,this,closure,accessed,clean,this0,func,cls,f,get,name,if,check,serializable,try,instantiation,util,serialize,object,func,catch,exception,e,string,function,type,get,super,class,or,interface,name,func,get,class,string,msg,function,type,null,func,is,not,serializable,the,implementation,of,the,function,type,is,not,serializable,if,closure,accessed,msg,the,implementation,accesses,fields,of,its,enclosing,class,which,is,a,common,reason,for,non,serializability,a,common,solution,is,to,make,the,function,a,proper,non,inner,class,or,a,static,inner,class,else,msg,the,object,probably,contains,or,references,non,serializable,fields,throw,new,invalid,program,exception,msg,e
