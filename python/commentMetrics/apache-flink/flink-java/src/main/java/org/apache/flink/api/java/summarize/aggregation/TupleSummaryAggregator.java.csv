commented;modifiers;parameterAmount;loc;comment;code
false;public;1;8;;@Override @SuppressWarnings("unchecked") public void aggregate(Tuple value) {     for (int i = 0. i < columnAggregators.length. i++) {         columnAggregators[i].aggregate(value.getField(i)).     } }
false;public;1;8;;@Override @SuppressWarnings("unchecked") public void combine(Aggregator<Tuple, R> other) {     TupleSummaryAggregator tupleSummaryAggregator = (TupleSummaryAggregator) other.     for (int i = 0. i < columnAggregators.length. i++) {         columnAggregators[i].combine(tupleSummaryAggregator.columnAggregators[i]).     } }
false;public;0;16;;@Override @SuppressWarnings("unchecked") public R result() {     try {         Class tupleClass = Tuple.getTupleClass(columnAggregators.length).         R tuple = (R) tupleClass.newInstance().         for (int i = 0. i < columnAggregators.length. i++) {             tuple.setField(columnAggregators[i].result(), i).         }         return tuple.     } catch (InstantiationException | IllegalAccessException e) {         throw new RuntimeException("Unexpected error instantiating Tuple class for aggregation results", e).     } }
