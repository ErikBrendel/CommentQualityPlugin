commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;@Override public Frame init(Frame src) {     mergePriority = ((ModifiedASMFrame) src).mergePriority.     return super.init(src). }
false;public;2;7;;@Override public void execute(AbstractInsnNode insn, Interpreter interpreter) throws AnalyzerException {     NestedMethodAnalyzer nma = ((NestedMethodAnalyzer) interpreter).     nma.currentFrame = (ModifiedASMFrame) this.     super.execute(insn, interpreter). }
false;public;2;10;;@Override public boolean merge(Frame frame, Interpreter interpreter) throws AnalyzerException {     if (((ModifiedASMFrame) frame).mergePriority) {         ((NestedMethodAnalyzer) interpreter).rightMergePriority = true.     }     final boolean result = super.merge(frame, interpreter).     ((NestedMethodAnalyzer) interpreter).rightMergePriority = false.     ((ModifiedASMFrame) frame).mergePriority = false.     return result. }
false;public;0;14;;@Override public String toString() {     // FOR DEBUGGING     try {         Class<?> frame = Frame.class.         Field valuesField = frame.getDeclaredField("values").         valuesField.setAccessible(true).         Value[] newValues = (Value[]) valuesField.get(this).         return Arrays.toString(newValues).     } catch (Exception e) {         throw new RuntimeException(e).     } }
