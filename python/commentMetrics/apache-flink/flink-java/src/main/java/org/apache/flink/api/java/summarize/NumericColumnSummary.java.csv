commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * The number of "missing" values where "missing" is defined as null, NaN, or Infinity.  *  * <p>These values are ignored in some calculations like mean, variance, and standardDeviation.  */ ;/**  * The number of "missing" values where "missing" is defined as null, NaN, or Infinity.  *  * <p>These values are ignored in some calculations like mean, variance, and standardDeviation.  */ public long getMissingCount() {     return nullCount + nanCount + infinityCount. }
true;public;0;3;/**  * The number of values that are not null, NaN, or Infinity.  */ ;/**  * The number of values that are not null, NaN, or Infinity.  */ public long getNonMissingCount() {     return nonMissingCount. }
true;public;0;4;/**  * The number of non-null values in this column.  */ ;/**  * The number of non-null values in this column.  */ @Override public long getNonNullCount() {     return nonMissingCount + nanCount + infinityCount. }
false;public;0;4;;@Override public long getNullCount() {     return nullCount. }
true;public;0;3;/**  * Number of values that are NaN.  *  * <p>(always zero for types like Short, Integer, Long)  */ ;/**  * Number of values that are NaN.  *  * <p>(always zero for types like Short, Integer, Long)  */ public long getNanCount() {     return nanCount. }
true;public;0;3;/**  * Number of values that are positive or negative infinity.  *  * <p>(always zero for types like Short, Integer, Long)  */ ;/**  * Number of values that are positive or negative infinity.  *  * <p>(always zero for types like Short, Integer, Long)  */ public long getInfinityCount() {     return infinityCount. }
false;public;0;3;;public T getMin() {     return min. }
false;public;0;3;;public T getMax() {     return max. }
false;public;0;3;;public T getSum() {     return sum. }
true;public;0;3;/**  * Null, NaN, and Infinite values are ignored in this calculation.  *  * @see <a href="https://en.wikipedia.org/wiki/Mean">Arithmetic Mean</a>  */ ;/**  * Null, NaN, and Infinite values are ignored in this calculation.  *  * @see <a href="https://en.wikipedia.org/wiki/Mean">Arithmetic Mean</a>  */ public Double getMean() {     return mean. }
true;public;0;3;/**  * Variance is a measure of how far a set of numbers are spread out.  *  * <p>Null, NaN, and Infinite values are ignored in this calculation.  *  * @see <a href="https://en.wikipedia.org/wiki/Variance">Variance</a>  */ ;/**  * Variance is a measure of how far a set of numbers are spread out.  *  * <p>Null, NaN, and Infinite values are ignored in this calculation.  *  * @see <a href="https://en.wikipedia.org/wiki/Variance">Variance</a>  */ public Double getVariance() {     return variance. }
true;public;0;3;/**  * Standard Deviation is a measure of variation in a set of numbers.  It is the square root of the variance.  *  * <p>Null, NaN, and Infinite values are ignored in this calculation.  *  * @see <a href="https://en.wikipedia.org/wiki/Standard_deviation">Standard Deviation</a>  */ ;/**  * Standard Deviation is a measure of variation in a set of numbers.  It is the square root of the variance.  *  * <p>Null, NaN, and Infinite values are ignored in this calculation.  *  * @see <a href="https://en.wikipedia.org/wiki/Standard_deviation">Standard Deviation</a>  */ public Double getStandardDeviation() {     return standardDeviation. }
false;public;0;18;;@Override public String toString() {     return "NumericColumnSummary{" + "totalCount=" + getTotalCount() + ", nullCount=" + nullCount + ", nonNullCount=" + getNonNullCount() + ", missingCount=" + getMissingCount() + ", nonMissingCount=" + nonMissingCount + ", nanCount=" + nanCount + ", infinityCount=" + infinityCount + ", min=" + min + ", max=" + max + ", sum=" + sum + ", mean=" + mean + ", variance=" + variance + ", standardDeviation=" + standardDeviation + '}'. }
