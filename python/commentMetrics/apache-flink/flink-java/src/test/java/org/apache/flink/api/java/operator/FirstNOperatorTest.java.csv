commented;modifiers;parameterAmount;loc;comment;code
false;public;0;41;;@Test public void testUngroupedFirstN() {     final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment().     DataSet<Tuple5<Integer, Long, String, Long, Integer>> tupleDs = env.fromCollection(emptyTupleData, tupleTypeInfo).     // should work     try {         tupleDs.first(1).     } catch (Exception e) {         Assert.fail().     }     // should work     try {         tupleDs.first(10).     } catch (Exception e) {         Assert.fail().     }     // should not work n == 0     try {         tupleDs.first(0).         Assert.fail().     } catch (InvalidProgramException ipe) {     // we're good here     } catch (Exception e) {         Assert.fail().     }     // should not work n == -1     try {         tupleDs.first(-1).         Assert.fail().     } catch (InvalidProgramException ipe) {     // we're good here     } catch (Exception e) {         Assert.fail().     } }
false;public;0;40;;@Test public void testGroupedFirstN() {     final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment().     DataSet<Tuple5<Integer, Long, String, Long, Integer>> tupleDs = env.fromCollection(emptyTupleData, tupleTypeInfo).     // should work     try {         tupleDs.groupBy(2).first(1).     } catch (Exception e) {         Assert.fail().     }     // should work     try {         tupleDs.groupBy(1, 3).first(10).     } catch (Exception e) {         Assert.fail().     }     // should not work n == 0     try {         tupleDs.groupBy(0).first(0).         Assert.fail().     } catch (InvalidProgramException ipe) {     // we're good here     } catch (Exception e) {         Assert.fail().     }     // should not work n == -1     try {         tupleDs.groupBy(2).first(-1).         Assert.fail().     } catch (InvalidProgramException ipe) {     // we're good here     } catch (Exception e) {         Assert.fail().     } }
false;public;0;40;;@Test public void testGroupedSortedFirstN() {     final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment().     DataSet<Tuple5<Integer, Long, String, Long, Integer>> tupleDs = env.fromCollection(emptyTupleData, tupleTypeInfo).     // should work     try {         tupleDs.groupBy(2).sortGroup(4, Order.ASCENDING).first(1).     } catch (Exception e) {         Assert.fail().     }     // should work     try {         tupleDs.groupBy(1, 3).sortGroup(4, Order.ASCENDING).first(10).     } catch (Exception e) {         Assert.fail().     }     // should not work n == 0     try {         tupleDs.groupBy(0).sortGroup(4, Order.ASCENDING).first(0).         Assert.fail().     } catch (InvalidProgramException ipe) {     // we're good here     } catch (Exception e) {         Assert.fail().     }     // should not work n == -1     try {         tupleDs.groupBy(2).sortGroup(4, Order.ASCENDING).first(-1).         Assert.fail().     } catch (InvalidProgramException ipe) {     // we're good here     } catch (Exception e) {         Assert.fail().     } }
