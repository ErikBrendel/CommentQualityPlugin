commented;modifiers;parameterAmount;loc;comment;code
false;public;0;35;;@Test public void testSemanticPropsWithKeySelector1() {     final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment().     DataSet<Tuple5<Integer, Long, String, Long, Integer>> tupleDs = env.fromCollection(emptyTupleData, tupleTypeInfo).     GroupCombineOperator<Tuple5<Integer, Long, String, Long, Integer>, Tuple5<Integer, Long, String, Long, Integer>> combineOp = tupleDs.groupBy(new DummyTestKeySelector()).combineGroup(new DummyGroupCombineFunction1()).     SemanticProperties semProps = combineOp.getSemanticProperties().     assertTrue(semProps.getForwardingTargetFields(0, 0).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 1).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 2).size() == 1).     assertTrue(semProps.getForwardingTargetFields(0, 2).contains(4)).     assertTrue(semProps.getForwardingTargetFields(0, 3).size() == 2).     assertTrue(semProps.getForwardingTargetFields(0, 3).contains(1)).     assertTrue(semProps.getForwardingTargetFields(0, 3).contains(3)).     assertTrue(semProps.getForwardingTargetFields(0, 4).size() == 1).     assertTrue(semProps.getForwardingTargetFields(0, 4).contains(2)).     assertTrue(semProps.getForwardingTargetFields(0, 5).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 6).size() == 0).     assertTrue(semProps.getForwardingSourceField(0, 0) < 0).     assertTrue(semProps.getForwardingSourceField(0, 1) == 3).     assertTrue(semProps.getForwardingSourceField(0, 2) == 4).     assertTrue(semProps.getForwardingSourceField(0, 3) == 3).     assertTrue(semProps.getForwardingSourceField(0, 4) == 2).     assertTrue(semProps.getReadFields(0).size() == 3).     assertTrue(semProps.getReadFields(0).contains(2)).     assertTrue(semProps.getReadFields(0).contains(5)).     assertTrue(semProps.getReadFields(0).contains(6)). }
false;public;0;38;;@Test public void testSemanticPropsWithKeySelector2() {     final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment().     DataSet<Tuple5<Integer, Long, String, Long, Integer>> tupleDs = env.fromCollection(emptyTupleData, tupleTypeInfo).     GroupCombineOperator<Tuple5<Integer, Long, String, Long, Integer>, Tuple5<Integer, Long, String, Long, Integer>> combineOp = tupleDs.groupBy(new DummyTestKeySelector()).sortGroup(new DummyTestKeySelector(), Order.ASCENDING).combineGroup(new DummyGroupCombineFunction1()).     SemanticProperties semProps = combineOp.getSemanticProperties().     assertTrue(semProps.getForwardingTargetFields(0, 0).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 1).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 2).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 3).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 4).size() == 1).     assertTrue(semProps.getForwardingTargetFields(0, 4).contains(4)).     assertTrue(semProps.getForwardingTargetFields(0, 5).size() == 2).     assertTrue(semProps.getForwardingTargetFields(0, 5).contains(1)).     assertTrue(semProps.getForwardingTargetFields(0, 5).contains(3)).     assertTrue(semProps.getForwardingTargetFields(0, 6).size() == 1).     assertTrue(semProps.getForwardingTargetFields(0, 6).contains(2)).     assertTrue(semProps.getForwardingTargetFields(0, 7).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 8).size() == 0).     assertTrue(semProps.getForwardingSourceField(0, 0) < 0).     assertTrue(semProps.getForwardingSourceField(0, 1) == 5).     assertTrue(semProps.getForwardingSourceField(0, 2) == 6).     assertTrue(semProps.getForwardingSourceField(0, 3) == 5).     assertTrue(semProps.getForwardingSourceField(0, 4) == 4).     assertTrue(semProps.getReadFields(0).size() == 3).     assertTrue(semProps.getReadFields(0).contains(4)).     assertTrue(semProps.getReadFields(0).contains(7)).     assertTrue(semProps.getReadFields(0).contains(8)). }
false;public;0;36;;@Test public void testSemanticPropsWithKeySelector3() {     final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment().     DataSet<Tuple5<Integer, Long, String, Long, Integer>> tupleDs = env.fromCollection(emptyTupleData, tupleTypeInfo).     GroupCombineOperator<Tuple5<Integer, Long, String, Long, Integer>, Tuple5<Integer, Long, String, Long, Integer>> combineOp = tupleDs.groupBy(new DummyTestKeySelector()).combineGroup(new DummyGroupCombineFunction2()).withForwardedFields("0->4.1.1->3.2").     SemanticProperties semProps = combineOp.getSemanticProperties().     assertTrue(semProps.getForwardingTargetFields(0, 0).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 1).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 2).size() == 1).     assertTrue(semProps.getForwardingTargetFields(0, 2).contains(4)).     assertTrue(semProps.getForwardingTargetFields(0, 3).size() == 2).     assertTrue(semProps.getForwardingTargetFields(0, 3).contains(1)).     assertTrue(semProps.getForwardingTargetFields(0, 3).contains(3)).     assertTrue(semProps.getForwardingTargetFields(0, 4).size() == 1).     assertTrue(semProps.getForwardingTargetFields(0, 4).contains(2)).     assertTrue(semProps.getForwardingTargetFields(0, 5).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 6).size() == 0).     assertTrue(semProps.getForwardingSourceField(0, 0) < 0).     assertTrue(semProps.getForwardingSourceField(0, 1) == 3).     assertTrue(semProps.getForwardingSourceField(0, 2) == 4).     assertTrue(semProps.getForwardingSourceField(0, 3) == 3).     assertTrue(semProps.getForwardingSourceField(0, 4) == 2).     assertTrue(semProps.getReadFields(0).size() == 3).     assertTrue(semProps.getReadFields(0).contains(2)).     assertTrue(semProps.getReadFields(0).contains(5)).     assertTrue(semProps.getReadFields(0).contains(6)). }
false;public;0;39;;@Test public void testSemanticPropsWithKeySelector4() {     final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment().     DataSet<Tuple5<Integer, Long, String, Long, Integer>> tupleDs = env.fromCollection(emptyTupleData, tupleTypeInfo).     GroupCombineOperator<Tuple5<Integer, Long, String, Long, Integer>, Tuple5<Integer, Long, String, Long, Integer>> combineOp = tupleDs.groupBy(new DummyTestKeySelector()).sortGroup(new DummyTestKeySelector(), Order.ASCENDING).combineGroup(new DummyGroupCombineFunction2()).withForwardedFields("0->4.1.1->3.2").     SemanticProperties semProps = combineOp.getSemanticProperties().     assertTrue(semProps.getForwardingTargetFields(0, 0).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 1).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 2).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 3).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 4).size() == 1).     assertTrue(semProps.getForwardingTargetFields(0, 4).contains(4)).     assertTrue(semProps.getForwardingTargetFields(0, 5).size() == 2).     assertTrue(semProps.getForwardingTargetFields(0, 5).contains(1)).     assertTrue(semProps.getForwardingTargetFields(0, 5).contains(3)).     assertTrue(semProps.getForwardingTargetFields(0, 6).size() == 1).     assertTrue(semProps.getForwardingTargetFields(0, 6).contains(2)).     assertTrue(semProps.getForwardingTargetFields(0, 7).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 8).size() == 0).     assertTrue(semProps.getForwardingSourceField(0, 0) < 0).     assertTrue(semProps.getForwardingSourceField(0, 1) == 5).     assertTrue(semProps.getForwardingSourceField(0, 2) == 6).     assertTrue(semProps.getForwardingSourceField(0, 3) == 5).     assertTrue(semProps.getForwardingSourceField(0, 4) == 4).     assertTrue(semProps.getReadFields(0).size() == 3).     assertTrue(semProps.getReadFields(0).contains(4)).     assertTrue(semProps.getReadFields(0).contains(7)).     assertTrue(semProps.getReadFields(0).contains(8)). }
false;public;0;33;;@Test public void testSemanticPropsWithKeySelector5() {     final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment().     DataSet<Tuple5<Integer, Long, String, Long, Integer>> tupleDs = env.fromCollection(emptyTupleData, tupleTypeInfo).     GroupCombineOperator<Tuple5<Integer, Long, String, Long, Integer>, Tuple5<Integer, Long, String, Long, Integer>> combineOp = tupleDs.groupBy(new DummyTestKeySelector()).combineGroup(new DummyGroupCombineFunction3()).withForwardedFields("4->0.3.3->1.2").     SemanticProperties semProps = combineOp.getSemanticProperties().     assertTrue(semProps.getForwardingTargetFields(0, 0).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 1).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 2).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 3).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 4).size() == 1).     assertTrue(semProps.getForwardingTargetFields(0, 4).contains(2)).     assertTrue(semProps.getForwardingTargetFields(0, 5).size() == 2).     assertTrue(semProps.getForwardingTargetFields(0, 5).contains(1)).     assertTrue(semProps.getForwardingTargetFields(0, 5).contains(3)).     assertTrue(semProps.getForwardingTargetFields(0, 6).size() == 1).     assertTrue(semProps.getForwardingTargetFields(0, 6).contains(0)).     assertTrue(semProps.getForwardingSourceField(0, 0) == 6).     assertTrue(semProps.getForwardingSourceField(0, 1) == 5).     assertTrue(semProps.getForwardingSourceField(0, 2) == 4).     assertTrue(semProps.getForwardingSourceField(0, 3) == 5).     assertTrue(semProps.getForwardingSourceField(0, 4) < 0).     assertTrue(semProps.getReadFields(0) == null). }
false;public;0;36;;@Test public void testSemanticPropsWithKeySelector6() {     final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment().     DataSet<Tuple5<Integer, Long, String, Long, Integer>> tupleDs = env.fromCollection(emptyTupleData, tupleTypeInfo).     GroupCombineOperator<Tuple5<Integer, Long, String, Long, Integer>, Tuple5<Integer, Long, String, Long, Integer>> combineOp = tupleDs.groupBy(new DummyTestKeySelector()).sortGroup(new DummyTestKeySelector(), Order.ASCENDING).combineGroup(new DummyGroupCombineFunction3()).withForwardedFields("4->0.3.3->1.2").     SemanticProperties semProps = combineOp.getSemanticProperties().     assertTrue(semProps.getForwardingTargetFields(0, 0).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 1).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 2).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 3).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 4).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 5).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 6).size() == 1).     assertTrue(semProps.getForwardingTargetFields(0, 6).contains(2)).     assertTrue(semProps.getForwardingTargetFields(0, 7).size() == 2).     assertTrue(semProps.getForwardingTargetFields(0, 7).contains(1)).     assertTrue(semProps.getForwardingTargetFields(0, 7).contains(3)).     assertTrue(semProps.getForwardingTargetFields(0, 8).size() == 1).     assertTrue(semProps.getForwardingTargetFields(0, 8).contains(0)).     assertTrue(semProps.getForwardingSourceField(0, 0) == 8).     assertTrue(semProps.getForwardingSourceField(0, 1) == 7).     assertTrue(semProps.getForwardingSourceField(0, 2) == 6).     assertTrue(semProps.getForwardingSourceField(0, 3) == 7).     assertTrue(semProps.getForwardingSourceField(0, 4) < 0).     assertTrue(semProps.getReadFields(0) == null). }
false;public;0;31;;@Test public void testSemanticPropsWithKeySelector7() {     final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment().     DataSet<Tuple5<Integer, Long, String, Long, Integer>> tupleDs = env.fromCollection(emptyTupleData, tupleTypeInfo).     GroupCombineOperator<Tuple5<Integer, Long, String, Long, Integer>, Tuple5<Integer, Long, String, Long, Integer>> combineOp = tupleDs.groupBy(new DummyTestKeySelector()).combineGroup(new DummyGroupCombineFunction4()).     SemanticProperties semProps = combineOp.getSemanticProperties().     assertTrue(semProps.getForwardingTargetFields(0, 0).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 1).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 2).size() == 1).     assertTrue(semProps.getForwardingTargetFields(0, 2).contains(0)).     assertTrue(semProps.getForwardingTargetFields(0, 3).size() == 1).     assertTrue(semProps.getForwardingTargetFields(0, 3).contains(1)).     assertTrue(semProps.getForwardingTargetFields(0, 4).size() == 0).     assertTrue(semProps.getForwardingTargetFields(0, 5).size() == 1).     assertTrue(semProps.getForwardingTargetFields(0, 5).contains(3)).     assertTrue(semProps.getForwardingTargetFields(0, 6).size() == 0).     assertTrue(semProps.getForwardingSourceField(0, 0) == 2).     assertTrue(semProps.getForwardingSourceField(0, 1) == 3).     assertTrue(semProps.getForwardingSourceField(0, 2) < 0).     assertTrue(semProps.getForwardingSourceField(0, 3) == 5).     assertTrue(semProps.getForwardingSourceField(0, 4) < 0).     assertTrue(semProps.getReadFields(0) == null). }
false;public;1;4;;@Override public Tuple2<Long, Integer> getKey(Tuple5<Integer, Long, String, Long, Integer> value) throws Exception {     return new Tuple2<Long, Integer>(). }
false;public;2;3;;@Override public void combine(Iterable<Tuple5<Integer, Long, String, Long, Integer>> values, Collector<Tuple5<Integer, Long, String, Long, Integer>> out) throws Exception { }
false;public;2;3;;@Override public void combine(Iterable<Tuple5<Integer, Long, String, Long, Integer>> values, Collector<Tuple5<Integer, Long, String, Long, Integer>> out) throws Exception { }
false;public;2;3;;@Override public void combine(Iterable<Tuple5<Integer, Long, String, Long, Integer>> values, Collector<Tuple5<Integer, Long, String, Long, Integer>> out) throws Exception { }
false;public;2;3;;@Override public void combine(Iterable<Tuple5<Integer, Long, String, Long, Integer>> values, Collector<Tuple5<Integer, Long, String, Long, Integer>> out) throws Exception { }
