# id;timestamp;commentText;codeText;commentWords;codeWords
PatternTest -> @Test 	public void testStrictContiguity();1454421848;These test simply test that the pattern construction completes without failure;@Test_	public void testStrictContiguity() {_		Pattern<Object, ?> pattern = Pattern.begin("start").next("next").next("end")__		Pattern<Object, ?> previous__		Pattern<Object, ?> previous2___		assertNotNull(previous = pattern.getPrevious())__		assertNotNull(previous2 = previous.getPrevious())__		assertNull(previous2.getPrevious())___		assertEquals(pattern.getName(), "end")__		assertEquals(previous.getName(), "next")__		assertEquals(previous2.getName(), "start")__	};these,test,simply,test,that,the,pattern,construction,completes,without,failure;test,public,void,test,strict,contiguity,pattern,object,pattern,pattern,begin,start,next,next,next,end,pattern,object,previous,pattern,object,previous2,assert,not,null,previous,pattern,get,previous,assert,not,null,previous2,previous,get,previous,assert,null,previous2,get,previous,assert,equals,pattern,get,name,end,assert,equals,previous,get,name,next,assert,equals,previous2,get,name,start
PatternTest -> @Test 	public void testStrictContiguity();1471613162;These test simply test that the pattern construction completes without failure;@Test_	public void testStrictContiguity() {_		Pattern<Object, ?> pattern = Pattern.begin("start").next("next").next("end")__		Pattern<Object, ?> previous__		Pattern<Object, ?> previous2___		assertNotNull(previous = pattern.getPrevious())__		assertNotNull(previous2 = previous.getPrevious())__		assertNull(previous2.getPrevious())___		assertEquals(pattern.getName(), "end")__		assertEquals(previous.getName(), "next")__		assertEquals(previous2.getName(), "start")__	};these,test,simply,test,that,the,pattern,construction,completes,without,failure;test,public,void,test,strict,contiguity,pattern,object,pattern,pattern,begin,start,next,next,next,end,pattern,object,previous,pattern,object,previous2,assert,not,null,previous,pattern,get,previous,assert,not,null,previous2,previous,get,previous,assert,null,previous2,get,previous,assert,equals,pattern,get,name,end,assert,equals,previous,get,name,next,assert,equals,previous2,get,name,start
PatternTest -> @Test 	public void testStrictContiguity();1490262475;These test simply test that the pattern construction completes without failure;@Test_	public void testStrictContiguity() {_		Pattern<Object, ?> pattern = Pattern.begin("start").next("next").next("end")__		Pattern<Object, ?> previous__		Pattern<Object, ?> previous2___		assertNotNull(previous = pattern.getPrevious())__		assertNotNull(previous2 = previous.getPrevious())__		assertNull(previous2.getPrevious())___		assertEquals(pattern.getName(), "end")__		assertEquals(previous.getName(), "next")__		assertEquals(previous2.getName(), "start")__	};these,test,simply,test,that,the,pattern,construction,completes,without,failure;test,public,void,test,strict,contiguity,pattern,object,pattern,pattern,begin,start,next,next,next,end,pattern,object,previous,pattern,object,previous2,assert,not,null,previous,pattern,get,previous,assert,not,null,previous2,previous,get,previous,assert,null,previous2,get,previous,assert,equals,pattern,get,name,end,assert,equals,previous,get,name,next,assert,equals,previous2,get,name,start
PatternTest -> @Test 	public void testStrictContiguity();1490638274;These test simply test that the pattern construction completes without failure;@Test_	public void testStrictContiguity() {_		Pattern<Object, ?> pattern = Pattern.begin("start").next("next").next("end")__		Pattern<Object, ?> previous__		Pattern<Object, ?> previous2___		assertNotNull(previous = pattern.getPrevious())__		assertNotNull(previous2 = previous.getPrevious())__		assertNull(previous2.getPrevious())___		assertEquals(pattern.getName(), "end")__		assertEquals(previous.getName(), "next")__		assertEquals(previous2.getName(), "start")__	};these,test,simply,test,that,the,pattern,construction,completes,without,failure;test,public,void,test,strict,contiguity,pattern,object,pattern,pattern,begin,start,next,next,next,end,pattern,object,previous,pattern,object,previous2,assert,not,null,previous,pattern,get,previous,assert,not,null,previous2,previous,get,previous,assert,null,previous2,get,previous,assert,equals,pattern,get,name,end,assert,equals,previous,get,name,next,assert,equals,previous2,get,name,start
PatternTest -> @Test 	public void testStrictContiguity();1493201751;These test simply test that the pattern construction completes without failure;@Test_	public void testStrictContiguity() {_		Pattern<Object, ?> pattern = Pattern.begin("start").next("next").next("end")__		Pattern<Object, ?> previous__		Pattern<Object, ?> previous2___		assertNotNull(previous = pattern.getPrevious())__		assertNotNull(previous2 = previous.getPrevious())__		assertNull(previous2.getPrevious())___		assertEquals(pattern.getName(), "end")__		assertEquals(previous.getName(), "next")__		assertEquals(previous2.getName(), "start")__	};these,test,simply,test,that,the,pattern,construction,completes,without,failure;test,public,void,test,strict,contiguity,pattern,object,pattern,pattern,begin,start,next,next,next,end,pattern,object,previous,pattern,object,previous2,assert,not,null,previous,pattern,get,previous,assert,not,null,previous2,previous,get,previous,assert,null,previous2,get,previous,assert,equals,pattern,get,name,end,assert,equals,previous,get,name,next,assert,equals,previous2,get,name,start
PatternTest -> @Test 	public void testStrictContiguity();1493382517;These test simply test that the pattern construction completes without failure;@Test_	public void testStrictContiguity() {_		Pattern<Object, ?> pattern = Pattern.begin("start").next("next").next("end")__		Pattern<Object, ?> previous__		Pattern<Object, ?> previous2___		assertNotNull(previous = pattern.getPrevious())__		assertNotNull(previous2 = previous.getPrevious())__		assertNull(previous2.getPrevious())___		assertEquals(pattern.getName(), "end")__		assertEquals(previous.getName(), "next")__		assertEquals(previous2.getName(), "start")__	};these,test,simply,test,that,the,pattern,construction,completes,without,failure;test,public,void,test,strict,contiguity,pattern,object,pattern,pattern,begin,start,next,next,next,end,pattern,object,previous,pattern,object,previous2,assert,not,null,previous,pattern,get,previous,assert,not,null,previous2,previous,get,previous,assert,null,previous2,get,previous,assert,equals,pattern,get,name,end,assert,equals,previous,get,name,next,assert,equals,previous2,get,name,start
PatternTest -> @Test 	public void testStrictContiguity();1493985576;These test simply test that the pattern construction completes without failure;@Test_	public void testStrictContiguity() {_		Pattern<Object, ?> pattern = Pattern.begin("start").next("next").next("end")__		Pattern<Object, ?> previous__		Pattern<Object, ?> previous2___		assertNotNull(previous = pattern.getPrevious())__		assertNotNull(previous2 = previous.getPrevious())__		assertNull(previous2.getPrevious())___		assertEquals(pattern.getName(), "end")__		assertEquals(previous.getName(), "next")__		assertEquals(previous2.getName(), "start")__	};these,test,simply,test,that,the,pattern,construction,completes,without,failure;test,public,void,test,strict,contiguity,pattern,object,pattern,pattern,begin,start,next,next,next,end,pattern,object,previous,pattern,object,previous2,assert,not,null,previous,pattern,get,previous,assert,not,null,previous2,previous,get,previous,assert,null,previous2,get,previous,assert,equals,pattern,get,name,end,assert,equals,previous,get,name,next,assert,equals,previous2,get,name,start
PatternTest -> @Test 	public void testStrictContiguity();1495961498;These test simply test that the pattern construction completes without failure.;@Test_	public void testStrictContiguity() {_		Pattern<Object, ?> pattern = Pattern.begin("start").next("next").next("end")__		Pattern<Object, ?> previous__		Pattern<Object, ?> previous2___		assertNotNull(previous = pattern.getPrevious())__		assertNotNull(previous2 = previous.getPrevious())__		assertNull(previous2.getPrevious())___		assertEquals(pattern.getName(), "end")__		assertEquals(previous.getName(), "next")__		assertEquals(previous2.getName(), "start")__	};these,test,simply,test,that,the,pattern,construction,completes,without,failure;test,public,void,test,strict,contiguity,pattern,object,pattern,pattern,begin,start,next,next,next,end,pattern,object,previous,pattern,object,previous2,assert,not,null,previous,pattern,get,previous,assert,not,null,previous2,previous,get,previous,assert,null,previous2,get,previous,assert,equals,pattern,get,name,end,assert,equals,previous,get,name,next,assert,equals,previous2,get,name,start
PatternTest -> @Test 	public void testStrictContiguity();1498548074;These test simply test that the pattern construction completes without failure.;@Test_	public void testStrictContiguity() {_		Pattern<Object, ?> pattern = Pattern.begin("start").next("next").next("end")__		Pattern<Object, ?> previous__		Pattern<Object, ?> previous2___		assertNotNull(previous = pattern.getPrevious())__		assertNotNull(previous2 = previous.getPrevious())__		assertNull(previous2.getPrevious())___		assertEquals(pattern.getName(), "end")__		assertEquals(previous.getName(), "next")__		assertEquals(previous2.getName(), "start")__	};these,test,simply,test,that,the,pattern,construction,completes,without,failure;test,public,void,test,strict,contiguity,pattern,object,pattern,pattern,begin,start,next,next,next,end,pattern,object,previous,pattern,object,previous2,assert,not,null,previous,pattern,get,previous,assert,not,null,previous2,previous,get,previous,assert,null,previous2,get,previous,assert,equals,pattern,get,name,end,assert,equals,previous,get,name,next,assert,equals,previous2,get,name,start
PatternTest -> @Test 	public void testStrictContiguity();1499248439;These test simply test that the pattern construction completes without failure.;@Test_	public void testStrictContiguity() {_		Pattern<Object, ?> pattern = Pattern.begin("start").next("next").next("end")__		Pattern<Object, ?> previous__		Pattern<Object, ?> previous2___		assertNotNull(previous = pattern.getPrevious())__		assertNotNull(previous2 = previous.getPrevious())__		assertNull(previous2.getPrevious())___		assertEquals(pattern.getName(), "end")__		assertEquals(previous.getName(), "next")__		assertEquals(previous2.getName(), "start")__	};these,test,simply,test,that,the,pattern,construction,completes,without,failure;test,public,void,test,strict,contiguity,pattern,object,pattern,pattern,begin,start,next,next,next,end,pattern,object,previous,pattern,object,previous2,assert,not,null,previous,pattern,get,previous,assert,not,null,previous2,previous,get,previous,assert,null,previous2,get,previous,assert,equals,pattern,get,name,end,assert,equals,previous,get,name,next,assert,equals,previous2,get,name,start
PatternTest -> @Test 	public void testStrictContiguity();1543413704;These test simply test that the pattern construction completes without failure.;@Test_	public void testStrictContiguity() {_		Pattern<Object, ?> pattern = Pattern.begin("start").next("next").next("end")__		Pattern<Object, ?> previous__		Pattern<Object, ?> previous2___		assertNotNull(previous = pattern.getPrevious())__		assertNotNull(previous2 = previous.getPrevious())__		assertNull(previous2.getPrevious())___		assertEquals(pattern.getName(), "end")__		assertEquals(previous.getName(), "next")__		assertEquals(previous2.getName(), "start")__	};these,test,simply,test,that,the,pattern,construction,completes,without,failure;test,public,void,test,strict,contiguity,pattern,object,pattern,pattern,begin,start,next,next,next,end,pattern,object,previous,pattern,object,previous2,assert,not,null,previous,pattern,get,previous,assert,not,null,previous2,previous,get,previous,assert,null,previous2,get,previous,assert,equals,pattern,get,name,end,assert,equals,previous,get,name,next,assert,equals,previous2,get,name,start
