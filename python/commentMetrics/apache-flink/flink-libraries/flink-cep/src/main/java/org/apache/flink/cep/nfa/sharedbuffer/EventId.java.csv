commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public int getId() {     return id. }
false;public;0;3;;public long getTimestamp() {     return timestamp. }
false;public;1;12;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     EventId eventId = (EventId) o.     return id == eventId.id && timestamp == eventId.timestamp. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(id, timestamp). }
false;public;0;7;;@Override public String toString() {     return "EventId{" + "id=" + id + ", timestamp=" + timestamp + '}'. }
false;public;1;4;;@Override public int compareTo(EventId o) {     return COMPARATOR.compare(this, o). }
false;public;0;4;;@Override public boolean isImmutableType() {     return true. }
false;public;0;4;;@Override public EventId createInstance() {     return null. }
false;public;1;4;;@Override public EventId copy(EventId from) {     return new EventId(from.id, from.timestamp). }
false;public;2;4;;@Override public EventId copy(EventId from, EventId reuse) {     return copy(from). }
false;public;0;4;;@Override public int getLength() {     return Integer.BYTES + Long.BYTES. }
false;public;2;5;;@Override public void serialize(EventId record, DataOutputView target) throws IOException {     target.writeInt(record.id).     target.writeLong(record.timestamp). }
false;public;1;7;;@Override public EventId deserialize(DataInputView source) throws IOException {     int id = source.readInt().     long timestamp = source.readLong().     return new EventId(id, timestamp). }
false;public;2;4;;@Override public EventId deserialize(EventId reuse, DataInputView source) throws IOException {     return deserialize(source). }
false;public;2;5;;@Override public void copy(DataInputView source, DataOutputView target) throws IOException {     target.writeInt(source.readInt()).     target.writeLong(source.readLong()). }
false;public;0;4;;// ----------------------------------------------------------------------------------- @Override public TypeSerializerSnapshot<EventId> snapshotConfiguration() {     return new EventIdSerializerSnapshot(). }
