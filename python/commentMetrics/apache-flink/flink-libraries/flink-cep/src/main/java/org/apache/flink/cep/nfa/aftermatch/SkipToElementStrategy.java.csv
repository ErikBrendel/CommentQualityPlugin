# id;timestamp;commentText;codeText;commentWords;codeWords
SkipToElementStrategy -> abstract int getIndex(int size)_;1538379997;Tells which element from the list of events mapped to *PatternName* to use.__@param size number of elements mapped to the *PatternName*_@return index of event mapped to *PatternName* to use for pruning;abstract int getIndex(int size)_;tells,which,element,from,the,list,of,events,mapped,to,pattern,name,to,use,param,size,number,of,elements,mapped,to,the,pattern,name,return,index,of,event,mapped,to,pattern,name,to,use,for,pruning;abstract,int,get,index,int,size
SkipToElementStrategy -> abstract int getIndex(int size)_;1540208358;Tells which element from the list of events mapped to *PatternName* to use.__@param size number of elements mapped to the *PatternName*_@return index of event mapped to *PatternName* to use for pruning;abstract int getIndex(int size)_;tells,which,element,from,the,list,of,events,mapped,to,pattern,name,to,use,param,size,number,of,elements,mapped,to,the,pattern,name,return,index,of,event,mapped,to,pattern,name,to,use,for,pruning;abstract,int,get,index,int,size
SkipToElementStrategy -> abstract int getIndex(int size)_;1540208358;Tells which element from the list of events mapped to *PatternName* to use.__@param size number of elements mapped to the *PatternName*_@return index of event mapped to *PatternName* to use for pruning;abstract int getIndex(int size)_;tells,which,element,from,the,list,of,events,mapped,to,pattern,name,to,use,param,size,number,of,elements,mapped,to,the,pattern,name,return,index,of,event,mapped,to,pattern,name,to,use,for,pruning;abstract,int,get,index,int,size
SkipToElementStrategy -> public abstract SkipToElementStrategy throwExceptionOnMiss()_;1538379997;Enables throwing exception if no events mapped to the *PatternName*. If not enabled and no events were mapped,_{@link NoSkipStrategy} will be used;public abstract SkipToElementStrategy throwExceptionOnMiss()_;enables,throwing,exception,if,no,events,mapped,to,the,pattern,name,if,not,enabled,and,no,events,were,mapped,link,no,skip,strategy,will,be,used;public,abstract,skip,to,element,strategy,throw,exception,on,miss
SkipToElementStrategy -> public abstract SkipToElementStrategy throwExceptionOnMiss()_;1540208358;Enables throwing exception if no events mapped to the *PatternName*. If not enabled and no events were mapped,_{@link NoSkipStrategy} will be used;public abstract SkipToElementStrategy throwExceptionOnMiss()_;enables,throwing,exception,if,no,events,mapped,to,the,pattern,name,if,not,enabled,and,no,events,were,mapped,link,no,skip,strategy,will,be,used;public,abstract,skip,to,element,strategy,throw,exception,on,miss
SkipToElementStrategy -> public abstract SkipToElementStrategy throwExceptionOnMiss()_;1540208358;Enables throwing exception if no events mapped to the *PatternName*. If not enabled and no events were mapped,_{@link NoSkipStrategy} will be used;public abstract SkipToElementStrategy throwExceptionOnMiss()_;enables,throwing,exception,if,no,events,mapped,to,the,pattern,name,if,not,enabled,and,no,events,were,mapped,link,no,skip,strategy,will,be,used;public,abstract,skip,to,element,strategy,throw,exception,on,miss
