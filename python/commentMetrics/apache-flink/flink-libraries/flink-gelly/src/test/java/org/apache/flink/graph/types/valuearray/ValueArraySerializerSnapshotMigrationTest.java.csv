commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;54;;@SuppressWarnings("unchecked") @Parameterized.Parameters(name = "Test Specification = {0}") public static Collection<TestSpecification<?>> testSpecifications() {     final TestSpecifications testSpecifications = new TestSpecifications(MigrationVersion.v1_6, MigrationVersion.v1_7).     testSpecifications.add("byte-value-array-serializer", ByteValueArraySerializer.class, ByteValueArraySerializer.ByteValueArraySerializerSnapshot.class, ByteValueArraySerializer::new).     testSpecifications.add("char-value-array-serializer", CharValueArraySerializer.class, CharValueArraySerializer.CharValueArraySerializerSnapshot.class, CharValueArraySerializer::new).     testSpecifications.add("double-value-array-serializer", DoubleValueArraySerializer.class, DoubleValueArraySerializer.DoubleValueArraySerializerSnapshot.class, DoubleValueArraySerializer::new).     testSpecifications.add("float-value-array-serializer", FloatValueArraySerializer.class, FloatValueArraySerializer.FloatValueArraySerializerSnapshot.class, FloatValueArraySerializer::new).     testSpecifications.add("int-value-array-serializer", IntValueArraySerializer.class, IntValueArraySerializer.IntValueArraySerializerSnapshot.class, IntValueArraySerializer::new).     testSpecifications.add("long-value-array-serializer", LongValueArraySerializer.class, LongValueArraySerializer.LongValueArraySerializerSnapshot.class, LongValueArraySerializer::new).     testSpecifications.add("null-value-array-serializer", NullValueArraySerializer.class, NullValueArraySerializer.NullValueArraySerializerSnapshot.class, NullValueArraySerializer::new).     testSpecifications.add("short-value-array-serializer", ShortValueArraySerializer.class, ShortValueArraySerializer.ShortValueArraySerializerSnapshot.class, ShortValueArraySerializer::new).     testSpecifications.add("string-value-array-serializer", StringValueArraySerializer.class, StringValueArraySerializer.StringValueArraySerializerSnapshot.class, StringValueArraySerializer::new).     return testSpecifications.get(). }
