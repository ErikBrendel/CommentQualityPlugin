commented;modifiers;parameterAmount;loc;comment;code
false;public;0;20;;@Test public void testWithDoubleValueMapper() throws Exception {     /* 		 * Test create() with edge dataset and a mapper that assigns a double constant as value 	     */     final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment().     Graph<Long, Double, Long> graph = Graph.fromDataSet(TestGraphUtils.getLongLongEdgeData(env), new AssignDoubleValueMapper(), env).     DataSet<Vertex<Long, Double>> data = graph.getVertices().     List<Vertex<Long, Double>> result = data.collect().     expectedResult = "1,0.1\n" + "2,0.1\n" + "3,0.1\n" + "4,0.1\n" + "5,0.1\n".     compareResultAsTuples(result, expectedResult). }
false;public;0;20;;@Test public void testWithTuple2ValueMapper() throws Exception {     /* 		 * Test create() with edge dataset and a mapper that assigns a Tuple2 as value 		 */     final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment().     Graph<Long, Tuple2<Long, Long>, Long> graph = Graph.fromDataSet(TestGraphUtils.getLongLongEdgeData(env), new AssignTuple2ValueMapper(), env).     DataSet<Vertex<Long, Tuple2<Long, Long>>> data = graph.getVertices().     List<Vertex<Long, Tuple2<Long, Long>>> result = data.collect().     expectedResult = "1,(2,42)\n" + "2,(4,42)\n" + "3,(6,42)\n" + "4,(8,42)\n" + "5,(10,42)\n".     compareResultAsTuples(result, expectedResult). }
false;public;0;21;;@Test public void testWithConstantValueMapper() throws Exception {     /* 		 * Test create() with edge dataset with String key type 		 * and a mapper that assigns a double constant as value 		 */     final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment().     Graph<String, Double, Long> graph = Graph.fromDataSet(TestGraphUtils.getStringLongEdgeData(env), new AssignDoubleConstantMapper(), env).     DataSet<Vertex<String, Double>> data = graph.getVertices().     List<Vertex<String, Double>> result = data.collect().     expectedResult = "1,0.1\n" + "2,0.1\n" + "3,0.1\n" + "4,0.1\n" + "5,0.1\n".     compareResultAsTuples(result, expectedResult). }
false;public;0;20;;@Test public void testWithDCustomValueMapper() throws Exception {     /* 		 * Test create() with edge dataset and a mapper that assigns a custom vertex value 		 */     final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment().     Graph<Long, DummyCustomType, Long> graph = Graph.fromDataSet(TestGraphUtils.getLongLongEdgeData(env), new AssignCustomValueMapper(), env).     DataSet<Vertex<Long, DummyCustomType>> data = graph.getVertices().     List<Vertex<Long, DummyCustomType>> result = data.collect().     expectedResult = "1,(F,0)\n" + "2,(F,1)\n" + "3,(F,2)\n" + "4,(F,3)\n" + "5,(F,4)\n".     compareResultAsTuples(result, expectedResult). }
false;public;1;3;;public Double map(Long value) {     return 0.1d. }
false;public;1;3;;public Tuple2<Long, Long> map(Long vertexId) {     return new Tuple2<>(vertexId * 2, 42L). }
false;public;1;3;;public Double map(String value) {     return 0.1d. }
false;public;1;3;;public DummyCustomType map(Long vertexId) {     return new DummyCustomType(vertexId.intValue() - 1, false). }
