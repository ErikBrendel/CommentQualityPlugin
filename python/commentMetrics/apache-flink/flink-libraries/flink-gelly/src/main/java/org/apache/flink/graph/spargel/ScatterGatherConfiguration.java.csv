commented;modifiers;parameterAmount;loc;comment;code
true;public;2;3;/**  * Adds a data set as a broadcast set to the scatter function.  *  * @param name The name under which the broadcast data is available in the scatter function.  * @param data The data set to be broadcast.  */ ;/**  * Adds a data set as a broadcast set to the scatter function.  *  * @param name The name under which the broadcast data is available in the scatter function.  * @param data The data set to be broadcast.  */ public void addBroadcastSetForScatterFunction(String name, DataSet<?> data) {     this.bcVarsScatter.add(new Tuple2<>(name, data)). }
true;public;2;3;/**  * Adds a data set as a broadcast set to the gather function.  *  * @param name The name under which the broadcast data is available in the gather function.  * @param data The data set to be broadcast.  */ ;/**  * Adds a data set as a broadcast set to the gather function.  *  * @param name The name under which the broadcast data is available in the gather function.  * @param data The data set to be broadcast.  */ public void addBroadcastSetForGatherFunction(String name, DataSet<?> data) {     this.bcVarsGather.add(new Tuple2<>(name, data)). }
true;public;0;3;/**  * Get the broadcast variables of the ScatterFunction.  *  * @return a List of Tuple2, where the first field is the broadcast variable name  * and the second field is the broadcast DataSet.  */ ;/**  * Get the broadcast variables of the ScatterFunction.  *  * @return a List of Tuple2, where the first field is the broadcast variable name  * and the second field is the broadcast DataSet.  */ public List<Tuple2<String, DataSet<?>>> getScatterBcastVars() {     return this.bcVarsScatter. }
true;public;0;3;/**  * Get the broadcast variables of the GatherFunction.  *  * @return a List of Tuple2, where the first field is the broadcast variable name  * and the second field is the broadcast DataSet.  */ ;/**  * Get the broadcast variables of the GatherFunction.  *  * @return a List of Tuple2, where the first field is the broadcast variable name  * and the second field is the broadcast DataSet.  */ public List<Tuple2<String, DataSet<?>>> getGatherBcastVars() {     return this.bcVarsGather. }
true;public;0;3;/**  * Gets whether the degrees option is set.  * By default, the degrees option is not set.  *  * @return True, if the degree option is set, false otherwise.  */ ;/**  * Gets whether the degrees option is set.  * By default, the degrees option is not set.  *  * @return True, if the degree option is set, false otherwise.  */ public boolean isOptDegrees() {     return optDegrees. }
true;public;1;3;/**  * Sets the degree option.  * By default, the degrees option is not set.  *  * @param optDegrees True, to set this option, false otherwise.  */ ;/**  * Sets the degree option.  * By default, the degrees option is not set.  *  * @param optDegrees True, to set this option, false otherwise.  */ public void setOptDegrees(boolean optDegrees) {     this.optDegrees = optDegrees. }
true;public;0;3;/**  * Gets the direction in which messages are sent in the ScatterFunction.  * By default the messaging direction is OUT.  *  * @return an EdgeDirection, which can be either IN, OUT or ALL.  */ ;/**  * Gets the direction in which messages are sent in the ScatterFunction.  * By default the messaging direction is OUT.  *  * @return an EdgeDirection, which can be either IN, OUT or ALL.  */ public EdgeDirection getDirection() {     return direction. }
true;public;1;3;/**  * Sets the direction in which messages are sent in the ScatterFunction.  * By default the messaging direction is OUT.  *  * @param direction - IN, OUT or ALL  */ ;/**  * Sets the direction in which messages are sent in the ScatterFunction.  * By default the messaging direction is OUT.  *  * @param direction - IN, OUT or ALL  */ public void setDirection(EdgeDirection direction) {     this.direction = direction. }
