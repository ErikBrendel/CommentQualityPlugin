commented;modifiers;parameterAmount;loc;comment;code
false;;1;1;;/**  * All {@code DataSetAnalytic} processing must be terminated by an  * {@link OutputFormat} and obtained via accumulators rather than  * returned by a {@link DataSet}.  *  * @param input input dataset  * @return this  * @throws Exception  */ DataSetAnalytic<T, R> run(DataSet<T> input) throws Exception.
true;;0;1;/**  * Execute the program and return the result.  *  * @return the result  * @throws Exception  */ ;/**  * Execute the program and return the result.  *  * @return the result  * @throws Exception  */ R execute() throws Exception.
true;;1;1;/**  * Execute the program and return the result.  *  * @param jobName the name to assign to the job  * @return the result  * @throws Exception  */ ;/**  * Execute the program and return the result.  *  * @param jobName the name to assign to the job  * @return the result  * @throws Exception  */ R execute(String jobName) throws Exception.
true;;0;1;/**  * This method must be called after the program has executed.  *  1) "run" analytics and algorithms  *  2) call ExecutionEnvironment.execute()  *  3) get analytic results  *  * @return the result  */ ;/**  * This method must be called after the program has executed.  *  1) "run" analytics and algorithms  *  2) call ExecutionEnvironment.execute()  *  3) get analytic results  *  * @return the result  */ R getResult().
