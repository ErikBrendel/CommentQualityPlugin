# id;timestamp;commentText;codeText;commentWords;codeWords
SingletonEdgeGraph -> public SingletonEdgeGraph(ExecutionEnvironment env, long vertexPairCount);1460571929;An undirected {@link Graph} containing isolated two-paths.__@param env the Flink execution environment_@param vertexPairCount number of pairs of vertices;public SingletonEdgeGraph(ExecutionEnvironment env, long vertexPairCount) {_		if (vertexPairCount <= 0) {_			throw new IllegalArgumentException("Vertex pair count must be greater than zero")__		}__		this.env = env__		this.vertexPairCount = vertexPairCount__	};an,undirected,link,graph,containing,isolated,two,paths,param,env,the,flink,execution,environment,param,vertex,pair,count,number,of,pairs,of,vertices;public,singleton,edge,graph,execution,environment,env,long,vertex,pair,count,if,vertex,pair,count,0,throw,new,illegal,argument,exception,vertex,pair,count,must,be,greater,than,zero,this,env,env,this,vertex,pair,count,vertex,pair,count
SingletonEdgeGraph -> public SingletonEdgeGraph(ExecutionEnvironment env, long vertexPairCount);1467052745;An undirected {@link Graph} containing isolated two-paths.__@param env the Flink execution environment_@param vertexPairCount number of pairs of vertices;public SingletonEdgeGraph(ExecutionEnvironment env, long vertexPairCount) {_		if (vertexPairCount <= 0) {_			throw new IllegalArgumentException("Vertex pair count must be greater than zero")__		}__		this.env = env__		this.vertexPairCount = vertexPairCount__	};an,undirected,link,graph,containing,isolated,two,paths,param,env,the,flink,execution,environment,param,vertex,pair,count,number,of,pairs,of,vertices;public,singleton,edge,graph,execution,environment,env,long,vertex,pair,count,if,vertex,pair,count,0,throw,new,illegal,argument,exception,vertex,pair,count,must,be,greater,than,zero,this,env,env,this,vertex,pair,count,vertex,pair,count
SingletonEdgeGraph -> public SingletonEdgeGraph(ExecutionEnvironment env, long vertexPairCount);1484685504;An undirected {@link Graph} containing isolated two-paths.__@param env the Flink execution environment_@param vertexPairCount number of pairs of vertices;public SingletonEdgeGraph(ExecutionEnvironment env, long vertexPairCount) {_		if (vertexPairCount <= 0) {_			throw new IllegalArgumentException("Vertex pair count must be greater than zero")__		}__		this.env = env__		this.vertexPairCount = vertexPairCount__	};an,undirected,link,graph,containing,isolated,two,paths,param,env,the,flink,execution,environment,param,vertex,pair,count,number,of,pairs,of,vertices;public,singleton,edge,graph,execution,environment,env,long,vertex,pair,count,if,vertex,pair,count,0,throw,new,illegal,argument,exception,vertex,pair,count,must,be,greater,than,zero,this,env,env,this,vertex,pair,count,vertex,pair,count
SingletonEdgeGraph -> public SingletonEdgeGraph(ExecutionEnvironment env, long vertexPairCount);1489068942;An undirected {@link Graph} containing isolated two-paths.__@param env the Flink execution environment_@param vertexPairCount number of pairs of vertices;public SingletonEdgeGraph(ExecutionEnvironment env, long vertexPairCount) {_		Preconditions.checkArgument(vertexPairCount >= MINIMUM_VERTEX_PAIR_COUNT,_			"Vertex pair count must be at least " + MINIMUM_VERTEX_PAIR_COUNT)___		this.env = env__		this.vertexPairCount = vertexPairCount__	};an,undirected,link,graph,containing,isolated,two,paths,param,env,the,flink,execution,environment,param,vertex,pair,count,number,of,pairs,of,vertices;public,singleton,edge,graph,execution,environment,env,long,vertex,pair,count,preconditions,check,argument,vertex,pair,count,vertex,pair,count,must,be,at,least,this,env,env,this,vertex,pair,count,vertex,pair,count
SingletonEdgeGraph -> public SingletonEdgeGraph(ExecutionEnvironment env, long vertexPairCount);1494520945;An undirected {@link Graph} containing one or more isolated two-paths._The in- and out-degree of every vertex is 1. For {@code n} vertices_there are {@code n/2} components.__@param env the Flink execution environment_@param vertexPairCount number of pairs of vertices;public SingletonEdgeGraph(ExecutionEnvironment env, long vertexPairCount) {_		Preconditions.checkArgument(vertexPairCount >= MINIMUM_VERTEX_PAIR_COUNT,_			"Vertex pair count must be at least " + MINIMUM_VERTEX_PAIR_COUNT)___		this.env = env__		this.vertexPairCount = vertexPairCount__	};an,undirected,link,graph,containing,one,or,more,isolated,two,paths,the,in,and,out,degree,of,every,vertex,is,1,for,code,n,vertices,there,are,code,n,2,components,param,env,the,flink,execution,environment,param,vertex,pair,count,number,of,pairs,of,vertices;public,singleton,edge,graph,execution,environment,env,long,vertex,pair,count,preconditions,check,argument,vertex,pair,count,vertex,pair,count,must,be,at,least,this,env,env,this,vertex,pair,count,vertex,pair,count
SingletonEdgeGraph -> public SingletonEdgeGraph(ExecutionEnvironment env, long vertexPairCount);1495819075;An undirected {@link Graph} containing one or more isolated two-paths._The in- and out-degree of every vertex is 1. For {@code n} vertices_there are {@code n/2} components.__@param env the Flink execution environment_@param vertexPairCount number of pairs of vertices;public SingletonEdgeGraph(ExecutionEnvironment env, long vertexPairCount) {_		Preconditions.checkArgument(vertexPairCount >= MINIMUM_VERTEX_PAIR_COUNT,_			"Vertex pair count must be at least " + MINIMUM_VERTEX_PAIR_COUNT)___		this.env = env__		this.vertexPairCount = vertexPairCount__	};an,undirected,link,graph,containing,one,or,more,isolated,two,paths,the,in,and,out,degree,of,every,vertex,is,1,for,code,n,vertices,there,are,code,n,2,components,param,env,the,flink,execution,environment,param,vertex,pair,count,number,of,pairs,of,vertices;public,singleton,edge,graph,execution,environment,env,long,vertex,pair,count,preconditions,check,argument,vertex,pair,count,vertex,pair,count,must,be,at,least,this,env,env,this,vertex,pair,count,vertex,pair,count
SingletonEdgeGraph -> public SingletonEdgeGraph(ExecutionEnvironment env, long vertexPairCount);1505445925;An undirected {@link Graph} containing one or more isolated two-paths._The in- and out-degree of every vertex is 1. For {@code n} vertices_there are {@code n/2} components.__@param env the Flink execution environment_@param vertexPairCount number of pairs of vertices;public SingletonEdgeGraph(ExecutionEnvironment env, long vertexPairCount) {_		Preconditions.checkArgument(vertexPairCount >= MINIMUM_VERTEX_PAIR_COUNT,_			"Vertex pair count must be at least " + MINIMUM_VERTEX_PAIR_COUNT)___		this.env = env__		this.vertexPairCount = vertexPairCount__	};an,undirected,link,graph,containing,one,or,more,isolated,two,paths,the,in,and,out,degree,of,every,vertex,is,1,for,code,n,vertices,there,are,code,n,2,components,param,env,the,flink,execution,environment,param,vertex,pair,count,number,of,pairs,of,vertices;public,singleton,edge,graph,execution,environment,env,long,vertex,pair,count,preconditions,check,argument,vertex,pair,count,vertex,pair,count,must,be,at,least,this,env,env,this,vertex,pair,count,vertex,pair,count
