commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isImmutableType() {     return false. }
false;public;0;4;;@Override public NullValueArray createInstance() {     return new NullValueArray(). }
false;public;1;4;;@Override public NullValueArray copy(NullValueArray from) {     return copy(from, new NullValueArray()). }
false;public;2;5;;@Override public NullValueArray copy(NullValueArray from, NullValueArray reuse) {     reuse.setValue(from).     return reuse. }
false;public;0;4;;@Override public int getLength() {     return 4. }
false;public;2;4;;@Override public void serialize(NullValueArray record, DataOutputView target) throws IOException {     record.write(target). }
false;public;1;4;;@Override public NullValueArray deserialize(DataInputView source) throws IOException {     return deserialize(new NullValueArray(), source). }
false;public;2;5;;@Override public NullValueArray deserialize(NullValueArray reuse, DataInputView source) throws IOException {     reuse.read(source).     return reuse. }
false;public;2;4;;@Override public void copy(DataInputView source, DataOutputView target) throws IOException {     target.write(source, getLength()). }
false;public;0;4;;// ----------------------------------------------------------------------------------- @Override public TypeSerializerSnapshot<NullValueArray> snapshotConfiguration() {     return new NullValueArraySerializerSnapshot(). }
