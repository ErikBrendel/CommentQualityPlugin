# id;timestamp;commentText;codeText;commentWords;codeWords
ReduceEdgesFunction -> EV reduceEdges(EV firstEdgeValue, EV secondEdgeValue)_;1445261977;It combines two neighboring edge values into one new value of the same type._For each vertex, this function is consecutively called,_until only a single value for each edge remains.__@param firstEdgeValue the first neighboring edge value to combine_@param secondEdgeValue the second neighboring edge value to combine_@return the combined value of both input values;EV reduceEdges(EV firstEdgeValue, EV secondEdgeValue)_;it,combines,two,neighboring,edge,values,into,one,new,value,of,the,same,type,for,each,vertex,this,function,is,consecutively,called,until,only,a,single,value,for,each,edge,remains,param,first,edge,value,the,first,neighboring,edge,value,to,combine,param,second,edge,value,the,second,neighboring,edge,value,to,combine,return,the,combined,value,of,both,input,values;ev,reduce,edges,ev,first,edge,value,ev,second,edge,value
ReduceEdgesFunction -> EV reduceEdges(EV firstEdgeValue, EV secondEdgeValue)_;1495819075;It combines two neighboring edge values into one new value of the same type._For each vertex, this function is consecutively called,_until only a single value for each edge remains.__@param firstEdgeValue the first neighboring edge value to combine_@param secondEdgeValue the second neighboring edge value to combine_@return the combined value of both input values;EV reduceEdges(EV firstEdgeValue, EV secondEdgeValue)_;it,combines,two,neighboring,edge,values,into,one,new,value,of,the,same,type,for,each,vertex,this,function,is,consecutively,called,until,only,a,single,value,for,each,edge,remains,param,first,edge,value,the,first,neighboring,edge,value,to,combine,param,second,edge,value,the,second,neighboring,edge,value,to,combine,return,the,combined,value,of,both,input,values;ev,reduce,edges,ev,first,edge,value,ev,second,edge,value
