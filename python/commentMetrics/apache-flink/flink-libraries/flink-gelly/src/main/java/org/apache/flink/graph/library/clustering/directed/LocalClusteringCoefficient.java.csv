# id;timestamp;commentText;codeText;commentWords;codeWords
LocalClusteringCoefficient -> Result -> public void setTriangleCount(LongValue triangleCount);1499282568;Set the number of triangles containing this vertex_ equivalently,_this is the number of edges between neighbors of this vertex.__@param triangleCount triangle count;public void setTriangleCount(LongValue triangleCount) {_			this.triangleCount = triangleCount__		};set,the,number,of,triangles,containing,this,vertex,equivalently,this,is,the,number,of,edges,between,neighbors,of,this,vertex,param,triangle,count,triangle,count;public,void,set,triangle,count,long,value,triangle,count,this,triangle,count,triangle,count
LocalClusteringCoefficient -> Result -> public void setTriangleCount(LongValue triangleCount);1499777483;Set the number of triangles containing this vertex_ equivalently,_this is the number of edges between neighbors of this vertex.__@param triangleCount triangle count;public void setTriangleCount(LongValue triangleCount) {_			this.triangleCount = triangleCount__		};set,the,number,of,triangles,containing,this,vertex,equivalently,this,is,the,number,of,edges,between,neighbors,of,this,vertex,param,triangle,count,triangle,count;public,void,set,triangle,count,long,value,triangle,count,this,triangle,count,triangle,count
LocalClusteringCoefficient -> Result -> public void setTriangleCount(LongValue triangleCount);1502111816;Set the number of triangles containing this vertex_ equivalently,_this is the number of edges between neighbors of this vertex.__@param triangleCount triangle count;public void setTriangleCount(LongValue triangleCount) {_			this.triangleCount = triangleCount__		};set,the,number,of,triangles,containing,this,vertex,equivalently,this,is,the,number,of,edges,between,neighbors,of,this,vertex,param,triangle,count,triangle,count;public,void,set,triangle,count,long,value,triangle,count,this,triangle,count,triangle,count
LocalClusteringCoefficient -> Result -> public void setTriangleCount(LongValue triangleCount);1505445931;Set the number of triangles containing this vertex_ equivalently,_this is the number of edges between neighbors of this vertex.__@param triangleCount triangle count;public void setTriangleCount(LongValue triangleCount) {_			this.triangleCount = triangleCount__		};set,the,number,of,triangles,containing,this,vertex,equivalently,this,is,the,number,of,edges,between,neighbors,of,this,vertex,param,triangle,count,triangle,count;public,void,set,triangle,count,long,value,triangle,count,this,triangle,count,triangle,count
LocalClusteringCoefficient -> Result -> public double getLocalClusteringCoefficientScore();1466789678;Get the local clustering coefficient score. This is computed as the_number of edges between neighbors, equal to the triangle count,_divided by the number of potential edges between neighbors.__A score of {@code Double.NaN} is returned for a vertex with degree 1_for which both the triangle count and number of neighbors are zero.__@return local clustering coefficient score;public double getLocalClusteringCoefficientScore() {_			long degree = getDegree().getValue()__			long neighborPairs = degree * (degree - 1)___			return (neighborPairs == 0) ? Double.NaN : getTriangleCount().getValue() / (double)neighborPairs__		};get,the,local,clustering,coefficient,score,this,is,computed,as,the,number,of,edges,between,neighbors,equal,to,the,triangle,count,divided,by,the,number,of,potential,edges,between,neighbors,a,score,of,code,double,na,n,is,returned,for,a,vertex,with,degree,1,for,which,both,the,triangle,count,and,number,of,neighbors,are,zero,return,local,clustering,coefficient,score;public,double,get,local,clustering,coefficient,score,long,degree,get,degree,get,value,long,neighbor,pairs,degree,degree,1,return,neighbor,pairs,0,double,na,n,get,triangle,count,get,value,double,neighbor,pairs
LocalClusteringCoefficient -> Result -> public double getLocalClusteringCoefficientScore();1467052745;Get the local clustering coefficient score. This is computed as the_number of edges between neighbors, equal to the triangle count,_divided by the number of potential edges between neighbors.__A score of {@code Double.NaN} is returned for a vertex with degree 1_for which both the triangle count and number of neighbors are zero.__@return local clustering coefficient score;public double getLocalClusteringCoefficientScore() {_			long degree = getDegree().getValue()__			long neighborPairs = degree * (degree - 1)___			return (neighborPairs == 0) ? Double.NaN : getTriangleCount().getValue() / (double)neighborPairs__		};get,the,local,clustering,coefficient,score,this,is,computed,as,the,number,of,edges,between,neighbors,equal,to,the,triangle,count,divided,by,the,number,of,potential,edges,between,neighbors,a,score,of,code,double,na,n,is,returned,for,a,vertex,with,degree,1,for,which,both,the,triangle,count,and,number,of,neighbors,are,zero,return,local,clustering,coefficient,score;public,double,get,local,clustering,coefficient,score,long,degree,get,degree,get,value,long,neighbor,pairs,degree,degree,1,return,neighbor,pairs,0,double,na,n,get,triangle,count,get,value,double,neighbor,pairs
LocalClusteringCoefficient -> Result -> public double getLocalClusteringCoefficientScore();1467398142;Get the local clustering coefficient score. This is computed as the_number of edges between neighbors, equal to the triangle count,_divided by the number of potential edges between neighbors.__A score of {@code Double.NaN} is returned for a vertex with degree 1_for which both the triangle count and number of neighbors are zero.__@return local clustering coefficient score;public double getLocalClusteringCoefficientScore() {_			long degree = getDegree().getValue()__			long neighborPairs = degree * (degree - 1)___			return (neighborPairs == 0) ? Double.NaN : getTriangleCount().getValue() / (double)neighborPairs__		};get,the,local,clustering,coefficient,score,this,is,computed,as,the,number,of,edges,between,neighbors,equal,to,the,triangle,count,divided,by,the,number,of,potential,edges,between,neighbors,a,score,of,code,double,na,n,is,returned,for,a,vertex,with,degree,1,for,which,both,the,triangle,count,and,number,of,neighbors,are,zero,return,local,clustering,coefficient,score;public,double,get,local,clustering,coefficient,score,long,degree,get,degree,get,value,long,neighbor,pairs,degree,degree,1,return,neighbor,pairs,0,double,na,n,get,triangle,count,get,value,double,neighbor,pairs
LocalClusteringCoefficient -> Result -> public double getLocalClusteringCoefficientScore();1469210839;Get the local clustering coefficient score. This is computed as the_number of edges between neighbors, equal to the triangle count,_divided by the number of potential edges between neighbors.__A score of {@code Double.NaN} is returned for a vertex with degree 1_for which both the triangle count and number of neighbors are zero.__@return local clustering coefficient score;public double getLocalClusteringCoefficientScore() {_			long degree = getDegree().getValue()__			long neighborPairs = degree * (degree - 1)___			return (neighborPairs == 0) ? Double.NaN : getTriangleCount().getValue() / (double)neighborPairs__		};get,the,local,clustering,coefficient,score,this,is,computed,as,the,number,of,edges,between,neighbors,equal,to,the,triangle,count,divided,by,the,number,of,potential,edges,between,neighbors,a,score,of,code,double,na,n,is,returned,for,a,vertex,with,degree,1,for,which,both,the,triangle,count,and,number,of,neighbors,are,zero,return,local,clustering,coefficient,score;public,double,get,local,clustering,coefficient,score,long,degree,get,degree,get,value,long,neighbor,pairs,degree,degree,1,return,neighbor,pairs,0,double,na,n,get,triangle,count,get,value,double,neighbor,pairs
LocalClusteringCoefficient -> Result -> public double getLocalClusteringCoefficientScore();1472047512;Get the local clustering coefficient score. This is computed as the_number of edges between neighbors, equal to the triangle count,_divided by the number of potential edges between neighbors.__A score of {@code Double.NaN} is returned for a vertex with degree 1_for which both the triangle count and number of neighbors are zero.__@return local clustering coefficient score;public double getLocalClusteringCoefficientScore() {_			long degree = getDegree().getValue()__			long neighborPairs = degree * (degree - 1)___			return (neighborPairs == 0) ? Double.NaN : getTriangleCount().getValue() / (double)neighborPairs__		};get,the,local,clustering,coefficient,score,this,is,computed,as,the,number,of,edges,between,neighbors,equal,to,the,triangle,count,divided,by,the,number,of,potential,edges,between,neighbors,a,score,of,code,double,na,n,is,returned,for,a,vertex,with,degree,1,for,which,both,the,triangle,count,and,number,of,neighbors,are,zero,return,local,clustering,coefficient,score;public,double,get,local,clustering,coefficient,score,long,degree,get,degree,get,value,long,neighbor,pairs,degree,degree,1,return,neighbor,pairs,0,double,na,n,get,triangle,count,get,value,double,neighbor,pairs
LocalClusteringCoefficient -> Result -> public double getLocalClusteringCoefficientScore();1473368789;Get the local clustering coefficient score. This is computed as the_number of edges between neighbors, equal to the triangle count,_divided by the number of potential edges between neighbors.__A score of {@code Double.NaN} is returned for a vertex with degree 1_for which both the triangle count and number of neighbors are zero.__@return local clustering coefficient score;public double getLocalClusteringCoefficientScore() {_			long degree = getDegree().getValue()__			long neighborPairs = degree * (degree - 1)___			return (neighborPairs == 0) ? Double.NaN : getTriangleCount().getValue() / (double)neighborPairs__		};get,the,local,clustering,coefficient,score,this,is,computed,as,the,number,of,edges,between,neighbors,equal,to,the,triangle,count,divided,by,the,number,of,potential,edges,between,neighbors,a,score,of,code,double,na,n,is,returned,for,a,vertex,with,degree,1,for,which,both,the,triangle,count,and,number,of,neighbors,are,zero,return,local,clustering,coefficient,score;public,double,get,local,clustering,coefficient,score,long,degree,get,degree,get,value,long,neighbor,pairs,degree,degree,1,return,neighbor,pairs,0,double,na,n,get,triangle,count,get,value,double,neighbor,pairs
LocalClusteringCoefficient -> Result -> public double getLocalClusteringCoefficientScore();1473368789;Get the local clustering coefficient score. This is computed as the_number of edges between neighbors, equal to the triangle count,_divided by the number of potential edges between neighbors.__A score of {@code Double.NaN} is returned for a vertex with degree 1_for which both the triangle count and number of neighbors are zero.__@return local clustering coefficient score;public double getLocalClusteringCoefficientScore() {_			long degree = getDegree().getValue()__			long neighborPairs = degree * (degree - 1)___			return (neighborPairs == 0) ? Double.NaN : getTriangleCount().getValue() / (double)neighborPairs__		};get,the,local,clustering,coefficient,score,this,is,computed,as,the,number,of,edges,between,neighbors,equal,to,the,triangle,count,divided,by,the,number,of,potential,edges,between,neighbors,a,score,of,code,double,na,n,is,returned,for,a,vertex,with,degree,1,for,which,both,the,triangle,count,and,number,of,neighbors,are,zero,return,local,clustering,coefficient,score;public,double,get,local,clustering,coefficient,score,long,degree,get,degree,get,value,long,neighbor,pairs,degree,degree,1,return,neighbor,pairs,0,double,na,n,get,triangle,count,get,value,double,neighbor,pairs
LocalClusteringCoefficient -> Result -> public double getLocalClusteringCoefficientScore();1477498003;Get the local clustering coefficient score. This is computed as the_number of edges between neighbors, equal to the triangle count,_divided by the number of potential edges between neighbors.__A score of {@code Double.NaN} is returned for a vertex with degree 1_for which both the triangle count and number of neighbors are zero.__@return local clustering coefficient score;public double getLocalClusteringCoefficientScore() {_			long degree = getDegree().getValue()__			long neighborPairs = degree * (degree - 1)___			return (neighborPairs == 0) ? Double.NaN : getTriangleCount().getValue() / (double)neighborPairs__		};get,the,local,clustering,coefficient,score,this,is,computed,as,the,number,of,edges,between,neighbors,equal,to,the,triangle,count,divided,by,the,number,of,potential,edges,between,neighbors,a,score,of,code,double,na,n,is,returned,for,a,vertex,with,degree,1,for,which,both,the,triangle,count,and,number,of,neighbors,are,zero,return,local,clustering,coefficient,score;public,double,get,local,clustering,coefficient,score,long,degree,get,degree,get,value,long,neighbor,pairs,degree,degree,1,return,neighbor,pairs,0,double,na,n,get,triangle,count,get,value,double,neighbor,pairs
LocalClusteringCoefficient -> Result -> public double getLocalClusteringCoefficientScore();1484685504;Get the local clustering coefficient score. This is computed as the_number of edges between neighbors, equal to the triangle count,_divided by the number of potential edges between neighbors.__A score of {@code Double.NaN} is returned for a vertex with degree 1_for which both the triangle count and number of neighbors are zero.__@return local clustering coefficient score;public double getLocalClusteringCoefficientScore() {_			long degree = getDegree().getValue()__			long neighborPairs = degree * (degree - 1)___			return (neighborPairs == 0) ? Double.NaN : getTriangleCount().getValue() / (double)neighborPairs__		};get,the,local,clustering,coefficient,score,this,is,computed,as,the,number,of,edges,between,neighbors,equal,to,the,triangle,count,divided,by,the,number,of,potential,edges,between,neighbors,a,score,of,code,double,na,n,is,returned,for,a,vertex,with,degree,1,for,which,both,the,triangle,count,and,number,of,neighbors,are,zero,return,local,clustering,coefficient,score;public,double,get,local,clustering,coefficient,score,long,degree,get,degree,get,value,long,neighbor,pairs,degree,degree,1,return,neighbor,pairs,0,double,na,n,get,triangle,count,get,value,double,neighbor,pairs
LocalClusteringCoefficient -> Result -> public double getLocalClusteringCoefficientScore();1488490978;Get the local clustering coefficient score. This is computed as the_number of edges between neighbors, equal to the triangle count,_divided by the number of potential edges between neighbors.__A score of {@code Double.NaN} is returned for a vertex with degree 1_for which both the triangle count and number of neighbors are zero.__@return local clustering coefficient score;public double getLocalClusteringCoefficientScore() {_			long degree = getDegree().getValue()__			long neighborPairs = degree * (degree - 1)___			return (neighborPairs == 0) ? Double.NaN : getTriangleCount().getValue() / (double)neighborPairs__		};get,the,local,clustering,coefficient,score,this,is,computed,as,the,number,of,edges,between,neighbors,equal,to,the,triangle,count,divided,by,the,number,of,potential,edges,between,neighbors,a,score,of,code,double,na,n,is,returned,for,a,vertex,with,degree,1,for,which,both,the,triangle,count,and,number,of,neighbors,are,zero,return,local,clustering,coefficient,score;public,double,get,local,clustering,coefficient,score,long,degree,get,degree,get,value,long,neighbor,pairs,degree,degree,1,return,neighbor,pairs,0,double,na,n,get,triangle,count,get,value,double,neighbor,pairs
LocalClusteringCoefficient -> Result -> public double getLocalClusteringCoefficientScore();1489068942;Get the local clustering coefficient score. This is computed as the_number of edges between neighbors, equal to the triangle count,_divided by the number of potential edges between neighbors.__A score of {@code Double.NaN} is returned for a vertex with degree 1_for which both the triangle count and number of neighbors are zero.__@return local clustering coefficient score;public double getLocalClusteringCoefficientScore() {_			long degree = getDegree().getValue()__			long neighborPairs = degree * (degree - 1)___			return (neighborPairs == 0) ? Double.NaN : getTriangleCount().getValue() / (double)neighborPairs__		};get,the,local,clustering,coefficient,score,this,is,computed,as,the,number,of,edges,between,neighbors,equal,to,the,triangle,count,divided,by,the,number,of,potential,edges,between,neighbors,a,score,of,code,double,na,n,is,returned,for,a,vertex,with,degree,1,for,which,both,the,triangle,count,and,number,of,neighbors,are,zero,return,local,clustering,coefficient,score;public,double,get,local,clustering,coefficient,score,long,degree,get,degree,get,value,long,neighbor,pairs,degree,degree,1,return,neighbor,pairs,0,double,na,n,get,triangle,count,get,value,double,neighbor,pairs
LocalClusteringCoefficient -> Result -> public double getLocalClusteringCoefficientScore();1492103503;Get the local clustering coefficient score. This is computed as the_number of edges between neighbors, equal to the triangle count,_divided by the number of potential edges between neighbors.__A score of {@code Double.NaN} is returned for a vertex with degree 1_for which both the triangle count and number of neighbors are zero.__@return local clustering coefficient score;public double getLocalClusteringCoefficientScore() {_			long degree = getDegree().getValue()__			long neighborPairs = degree * (degree - 1)___			return (neighborPairs == 0) ? Double.NaN : getTriangleCount().getValue() / (double)neighborPairs__		};get,the,local,clustering,coefficient,score,this,is,computed,as,the,number,of,edges,between,neighbors,equal,to,the,triangle,count,divided,by,the,number,of,potential,edges,between,neighbors,a,score,of,code,double,na,n,is,returned,for,a,vertex,with,degree,1,for,which,both,the,triangle,count,and,number,of,neighbors,are,zero,return,local,clustering,coefficient,score;public,double,get,local,clustering,coefficient,score,long,degree,get,degree,get,value,long,neighbor,pairs,degree,degree,1,return,neighbor,pairs,0,double,na,n,get,triangle,count,get,value,double,neighbor,pairs
LocalClusteringCoefficient -> Result -> public double getLocalClusteringCoefficientScore();1495819075;Get the local clustering coefficient score. This is computed as the_number of edges between neighbors, equal to the triangle count,_divided by the number of potential edges between neighbors.__<p>A score of {@code Double.NaN} is returned for a vertex with degree 1_for which both the triangle count and number of neighbors are zero.__@return local clustering coefficient score;public double getLocalClusteringCoefficientScore() {_			long degree = getDegree().getValue()__			long neighborPairs = degree * (degree - 1)___			return (neighborPairs == 0) ? Double.NaN : getTriangleCount().getValue() / (double) neighborPairs__		};get,the,local,clustering,coefficient,score,this,is,computed,as,the,number,of,edges,between,neighbors,equal,to,the,triangle,count,divided,by,the,number,of,potential,edges,between,neighbors,p,a,score,of,code,double,na,n,is,returned,for,a,vertex,with,degree,1,for,which,both,the,triangle,count,and,number,of,neighbors,are,zero,return,local,clustering,coefficient,score;public,double,get,local,clustering,coefficient,score,long,degree,get,degree,get,value,long,neighbor,pairs,degree,degree,1,return,neighbor,pairs,0,double,na,n,get,triangle,count,get,value,double,neighbor,pairs
LocalClusteringCoefficient -> Result -> public double getLocalClusteringCoefficientScore();1499282568;Get the local clustering coefficient score. This is computed as the_number of edges between neighbors, equal to the triangle count,_divided by the number of potential edges between neighbors.__<p>A score of {@code Double.NaN} is returned for a vertex with degree 1_for which both the triangle count and number of neighbors are zero.__@return local clustering coefficient score;public double getLocalClusteringCoefficientScore() {_			long degree = getDegree().getValue()__			long neighborPairs = degree * (degree - 1)___			return (neighborPairs == 0) ? Double.NaN : getTriangleCount().getValue() / (double) neighborPairs__		};get,the,local,clustering,coefficient,score,this,is,computed,as,the,number,of,edges,between,neighbors,equal,to,the,triangle,count,divided,by,the,number,of,potential,edges,between,neighbors,p,a,score,of,code,double,na,n,is,returned,for,a,vertex,with,degree,1,for,which,both,the,triangle,count,and,number,of,neighbors,are,zero,return,local,clustering,coefficient,score;public,double,get,local,clustering,coefficient,score,long,degree,get,degree,get,value,long,neighbor,pairs,degree,degree,1,return,neighbor,pairs,0,double,na,n,get,triangle,count,get,value,double,neighbor,pairs
LocalClusteringCoefficient -> Result -> public double getLocalClusteringCoefficientScore();1499777483;Get the local clustering coefficient score. This is computed as the_number of edges between neighbors, equal to the triangle count,_divided by the number of potential edges between neighbors.__<p>A score of {@code Double.NaN} is returned for a vertex with degree 1_for which both the triangle count and number of neighbors are zero.__@return local clustering coefficient score;public double getLocalClusteringCoefficientScore() {_			long degree = getDegree().getValue()__			long neighborPairs = degree * (degree - 1)___			return (neighborPairs == 0) ? Double.NaN : getTriangleCount().getValue() / (double) neighborPairs__		};get,the,local,clustering,coefficient,score,this,is,computed,as,the,number,of,edges,between,neighbors,equal,to,the,triangle,count,divided,by,the,number,of,potential,edges,between,neighbors,p,a,score,of,code,double,na,n,is,returned,for,a,vertex,with,degree,1,for,which,both,the,triangle,count,and,number,of,neighbors,are,zero,return,local,clustering,coefficient,score;public,double,get,local,clustering,coefficient,score,long,degree,get,degree,get,value,long,neighbor,pairs,degree,degree,1,return,neighbor,pairs,0,double,na,n,get,triangle,count,get,value,double,neighbor,pairs
LocalClusteringCoefficient -> Result -> public double getLocalClusteringCoefficientScore();1502111816;Get the local clustering coefficient score. This is computed as the_number of edges between neighbors, equal to the triangle count,_divided by the number of potential edges between neighbors.__<p>A score of {@code Double.NaN} is returned for a vertex with degree 1_for which both the triangle count and number of neighbors are zero.__@return local clustering coefficient score;public double getLocalClusteringCoefficientScore() {_			long degree = getDegree().getValue()__			long neighborPairs = degree * (degree - 1)___			return (neighborPairs == 0) ? Double.NaN : getTriangleCount().getValue() / (double) neighborPairs__		};get,the,local,clustering,coefficient,score,this,is,computed,as,the,number,of,edges,between,neighbors,equal,to,the,triangle,count,divided,by,the,number,of,potential,edges,between,neighbors,p,a,score,of,code,double,na,n,is,returned,for,a,vertex,with,degree,1,for,which,both,the,triangle,count,and,number,of,neighbors,are,zero,return,local,clustering,coefficient,score;public,double,get,local,clustering,coefficient,score,long,degree,get,degree,get,value,long,neighbor,pairs,degree,degree,1,return,neighbor,pairs,0,double,na,n,get,triangle,count,get,value,double,neighbor,pairs
LocalClusteringCoefficient -> Result -> public double getLocalClusteringCoefficientScore();1505445931;Get the local clustering coefficient score. This is computed as the_number of edges between neighbors, equal to the triangle count,_divided by the number of potential edges between neighbors.__<p>A score of {@code Double.NaN} is returned for a vertex with degree 1_for which both the triangle count and number of neighbors are zero.__@return local clustering coefficient score;public double getLocalClusteringCoefficientScore() {_			long degree = getDegree().getValue()__			long neighborPairs = degree * (degree - 1)___			return (neighborPairs == 0) ? Double.NaN : getTriangleCount().getValue() / (double) neighborPairs__		};get,the,local,clustering,coefficient,score,this,is,computed,as,the,number,of,edges,between,neighbors,equal,to,the,triangle,count,divided,by,the,number,of,potential,edges,between,neighbors,p,a,score,of,code,double,na,n,is,returned,for,a,vertex,with,degree,1,for,which,both,the,triangle,count,and,number,of,neighbors,are,zero,return,local,clustering,coefficient,score;public,double,get,local,clustering,coefficient,score,long,degree,get,degree,get,value,long,neighbor,pairs,degree,degree,1,return,neighbor,pairs,0,double,na,n,get,triangle,count,get,value,double,neighbor,pairs
LocalClusteringCoefficient -> Result -> public Result();1466789678;No-args constructor.;public Result() {_			f1 = new Tuple2<>()__		};no,args,constructor;public,result,f1,new,tuple2
LocalClusteringCoefficient -> Result -> public Result();1467052745;No-args constructor.;public Result() {_			f1 = new Tuple2<>()__		};no,args,constructor;public,result,f1,new,tuple2
LocalClusteringCoefficient -> Result -> public Result();1467398142;No-args constructor.;public Result() {_			f1 = new Tuple2<>()__		};no,args,constructor;public,result,f1,new,tuple2
LocalClusteringCoefficient -> Result -> public Result();1469210839;No-args constructor.;public Result() {_			f1 = new Tuple2<>()__		};no,args,constructor;public,result,f1,new,tuple2
LocalClusteringCoefficient -> Result -> public Result();1472047512;No-args constructor.;public Result() {_			f1 = new Tuple2<>()__		};no,args,constructor;public,result,f1,new,tuple2
LocalClusteringCoefficient -> Result -> public Result();1473368789;No-args constructor.;public Result() {_			f1 = new Tuple2<>()__		};no,args,constructor;public,result,f1,new,tuple2
LocalClusteringCoefficient -> Result -> public Result();1473368789;No-args constructor.;public Result() {_			f1 = new Tuple2<>()__		};no,args,constructor;public,result,f1,new,tuple2
LocalClusteringCoefficient -> Result -> public Result();1477498003;No-args constructor.;public Result() {_			f1 = new Tuple2<>()__		};no,args,constructor;public,result,f1,new,tuple2
LocalClusteringCoefficient -> Result -> public Result();1484685504;No-args constructor.;public Result() {_			f1 = new Tuple2<>()__		};no,args,constructor;public,result,f1,new,tuple2
LocalClusteringCoefficient -> Result -> public Result();1488490978;No-args constructor.;public Result() {_			f1 = new Tuple2<>()__		};no,args,constructor;public,result,f1,new,tuple2
LocalClusteringCoefficient -> Result -> @Override 		public String toPrintableString();1499282568;Format values into a human-readable string.__@return verbose string;@Override_		public String toPrintableString() {_			return "Vertex ID: " + getVertexId0()_				+ ", vertex degree: " + getDegree()_				+ ", triangle count: " + getTriangleCount()_				+ ", local clustering coefficient: " + getLocalClusteringCoefficientScore()__		};format,values,into,a,human,readable,string,return,verbose,string;override,public,string,to,printable,string,return,vertex,id,get,vertex,id0,vertex,degree,get,degree,triangle,count,get,triangle,count,local,clustering,coefficient,get,local,clustering,coefficient,score
LocalClusteringCoefficient -> Result -> @Override 		public String toPrintableString();1499777483;Format values into a human-readable string.__@return verbose string;@Override_		public String toPrintableString() {_			return "Vertex ID: " + getVertexId0()_				+ ", vertex degree: " + getDegree()_				+ ", triangle count: " + getTriangleCount()_				+ ", local clustering coefficient: " + getLocalClusteringCoefficientScore()__		};format,values,into,a,human,readable,string,return,verbose,string;override,public,string,to,printable,string,return,vertex,id,get,vertex,id0,vertex,degree,get,degree,triangle,count,get,triangle,count,local,clustering,coefficient,get,local,clustering,coefficient,score
LocalClusteringCoefficient -> Result -> @Override 		public String toPrintableString();1502111816;Format values into a human-readable string.__@return verbose string;@Override_		public String toPrintableString() {_			return "Vertex ID: " + getVertexId0()_				+ ", vertex degree: " + getDegree()_				+ ", triangle count: " + getTriangleCount()_				+ ", local clustering coefficient: " + getLocalClusteringCoefficientScore()__		};format,values,into,a,human,readable,string,return,verbose,string;override,public,string,to,printable,string,return,vertex,id,get,vertex,id0,vertex,degree,get,degree,triangle,count,get,triangle,count,local,clustering,coefficient,get,local,clustering,coefficient,score
LocalClusteringCoefficient -> Result -> @Override 		public String toPrintableString();1505445931;Format values into a human-readable string.__@return verbose string;@Override_		public String toPrintableString() {_			return "Vertex ID: " + getVertexId0()_				+ ", vertex degree: " + getDegree()_				+ ", triangle count: " + getTriangleCount()_				+ ", local clustering coefficient: " + getLocalClusteringCoefficientScore()__		};format,values,into,a,human,readable,string,return,verbose,string;override,public,string,to,printable,string,return,vertex,id,get,vertex,id0,vertex,degree,get,degree,triangle,count,get,triangle,count,local,clustering,coefficient,get,local,clustering,coefficient,score
LocalClusteringCoefficient -> Result -> public LongValue getDegree();1466789678;Get the vertex degree.__@return vertex degree;public LongValue getDegree() {_			return f1.f0__		};get,the,vertex,degree,return,vertex,degree;public,long,value,get,degree,return,f1,f0
LocalClusteringCoefficient -> Result -> public LongValue getDegree();1467052745;Get the vertex degree.__@return vertex degree;public LongValue getDegree() {_			return f1.f0__		};get,the,vertex,degree,return,vertex,degree;public,long,value,get,degree,return,f1,f0
LocalClusteringCoefficient -> Result -> public LongValue getDegree();1467398142;Get the vertex degree.__@return vertex degree;public LongValue getDegree() {_			return f1.f0__		};get,the,vertex,degree,return,vertex,degree;public,long,value,get,degree,return,f1,f0
LocalClusteringCoefficient -> Result -> public LongValue getDegree();1469210839;Get the vertex degree.__@return vertex degree;public LongValue getDegree() {_			return f1.f0__		};get,the,vertex,degree,return,vertex,degree;public,long,value,get,degree,return,f1,f0
LocalClusteringCoefficient -> Result -> public LongValue getDegree();1472047512;Get the vertex degree.__@return vertex degree;public LongValue getDegree() {_			return f1.f0__		};get,the,vertex,degree,return,vertex,degree;public,long,value,get,degree,return,f1,f0
LocalClusteringCoefficient -> Result -> public LongValue getDegree();1473368789;Get the vertex degree.__@return vertex degree;public LongValue getDegree() {_			return f1.f0__		};get,the,vertex,degree,return,vertex,degree;public,long,value,get,degree,return,f1,f0
LocalClusteringCoefficient -> Result -> public LongValue getDegree();1473368789;Get the vertex degree.__@return vertex degree;public LongValue getDegree() {_			return f1.f0__		};get,the,vertex,degree,return,vertex,degree;public,long,value,get,degree,return,f1,f0
LocalClusteringCoefficient -> Result -> public LongValue getDegree();1477498003;Get the vertex degree.__@return vertex degree;public LongValue getDegree() {_			return f1.f0__		};get,the,vertex,degree,return,vertex,degree;public,long,value,get,degree,return,f1,f0
LocalClusteringCoefficient -> Result -> public LongValue getDegree();1484685504;Get the vertex degree.__@return vertex degree;public LongValue getDegree() {_			return f1.f0__		};get,the,vertex,degree,return,vertex,degree;public,long,value,get,degree,return,f1,f0
LocalClusteringCoefficient -> Result -> public LongValue getDegree();1488490978;Get the vertex degree.__@return vertex degree;public LongValue getDegree() {_			return f1.f0__		};get,the,vertex,degree,return,vertex,degree;public,long,value,get,degree,return,f1,f0
LocalClusteringCoefficient -> Result -> public LongValue getDegree();1489068942;Get the vertex degree.__@return vertex degree;public LongValue getDegree() {_			return f1__		};get,the,vertex,degree,return,vertex,degree;public,long,value,get,degree,return,f1
LocalClusteringCoefficient -> Result -> public LongValue getDegree();1492103503;Get the vertex degree.__@return vertex degree;public LongValue getDegree() {_			return f1__		};get,the,vertex,degree,return,vertex,degree;public,long,value,get,degree,return,f1
LocalClusteringCoefficient -> Result -> public LongValue getDegree();1495819075;Get the vertex degree.__@return vertex degree;public LongValue getDegree() {_			return f1__		};get,the,vertex,degree,return,vertex,degree;public,long,value,get,degree,return,f1
LocalClusteringCoefficient -> Result -> public LongValue getDegree();1499282568;Get the vertex degree.__@return vertex degree;public LongValue getDegree() {_			return degree__		};get,the,vertex,degree,return,vertex,degree;public,long,value,get,degree,return,degree
LocalClusteringCoefficient -> Result -> public LongValue getDegree();1499777483;Get the vertex degree.__@return vertex degree;public LongValue getDegree() {_			return degree__		};get,the,vertex,degree,return,vertex,degree;public,long,value,get,degree,return,degree
LocalClusteringCoefficient -> Result -> public LongValue getDegree();1502111816;Get the vertex degree.__@return vertex degree;public LongValue getDegree() {_			return degree__		};get,the,vertex,degree,return,vertex,degree;public,long,value,get,degree,return,degree
LocalClusteringCoefficient -> Result -> public LongValue getDegree();1505445931;Get the vertex degree.__@return vertex degree;public LongValue getDegree() {_			return degree__		};get,the,vertex,degree,return,vertex,degree;public,long,value,get,degree,return,degree
LocalClusteringCoefficient -> Result -> public String toVerboseString();1466789678;Format values into a human-readable string.__@return verbose string;public String toVerboseString() {_			return "Vertex ID: " + f0_				+ ", vertex degree: " + getDegree()_				+ ", triangle count: " + getTriangleCount()_				+ ", local clustering coefficient: " + getLocalClusteringCoefficientScore()__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,verbose,string,return,vertex,id,f0,vertex,degree,get,degree,triangle,count,get,triangle,count,local,clustering,coefficient,get,local,clustering,coefficient,score
LocalClusteringCoefficient -> Result -> public String toVerboseString();1467052745;Format values into a human-readable string.__@return verbose string;public String toVerboseString() {_			return "Vertex ID: " + f0_				+ ", vertex degree: " + getDegree()_				+ ", triangle count: " + getTriangleCount()_				+ ", local clustering coefficient: " + getLocalClusteringCoefficientScore()__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,verbose,string,return,vertex,id,f0,vertex,degree,get,degree,triangle,count,get,triangle,count,local,clustering,coefficient,get,local,clustering,coefficient,score
LocalClusteringCoefficient -> Result -> public String toVerboseString();1467398142;Format values into a human-readable string.__@return verbose string;public String toVerboseString() {_			return "Vertex ID: " + f0_				+ ", vertex degree: " + getDegree()_				+ ", triangle count: " + getTriangleCount()_				+ ", local clustering coefficient: " + getLocalClusteringCoefficientScore()__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,verbose,string,return,vertex,id,f0,vertex,degree,get,degree,triangle,count,get,triangle,count,local,clustering,coefficient,get,local,clustering,coefficient,score
LocalClusteringCoefficient -> Result -> public String toVerboseString();1469210839;Format values into a human-readable string.__@return verbose string;public String toVerboseString() {_			return "Vertex ID: " + f0_				+ ", vertex degree: " + getDegree()_				+ ", triangle count: " + getTriangleCount()_				+ ", local clustering coefficient: " + getLocalClusteringCoefficientScore()__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,verbose,string,return,vertex,id,f0,vertex,degree,get,degree,triangle,count,get,triangle,count,local,clustering,coefficient,get,local,clustering,coefficient,score
LocalClusteringCoefficient -> Result -> public String toVerboseString();1472047512;Format values into a human-readable string.__@return verbose string;public String toVerboseString() {_			return "Vertex ID: " + f0_				+ ", vertex degree: " + getDegree()_				+ ", triangle count: " + getTriangleCount()_				+ ", local clustering coefficient: " + getLocalClusteringCoefficientScore()__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,verbose,string,return,vertex,id,f0,vertex,degree,get,degree,triangle,count,get,triangle,count,local,clustering,coefficient,get,local,clustering,coefficient,score
LocalClusteringCoefficient -> Result -> public String toVerboseString();1473368789;Format values into a human-readable string.__@return verbose string;public String toVerboseString() {_			return "Vertex ID: " + f0_				+ ", vertex degree: " + getDegree()_				+ ", triangle count: " + getTriangleCount()_				+ ", local clustering coefficient: " + getLocalClusteringCoefficientScore()__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,verbose,string,return,vertex,id,f0,vertex,degree,get,degree,triangle,count,get,triangle,count,local,clustering,coefficient,get,local,clustering,coefficient,score
LocalClusteringCoefficient -> Result -> public String toVerboseString();1473368789;Format values into a human-readable string.__@return verbose string;public String toVerboseString() {_			return "Vertex ID: " + f0_				+ ", vertex degree: " + getDegree()_				+ ", triangle count: " + getTriangleCount()_				+ ", local clustering coefficient: " + getLocalClusteringCoefficientScore()__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,verbose,string,return,vertex,id,f0,vertex,degree,get,degree,triangle,count,get,triangle,count,local,clustering,coefficient,get,local,clustering,coefficient,score
LocalClusteringCoefficient -> Result -> public String toVerboseString();1477498003;Format values into a human-readable string.__@return verbose string;public String toVerboseString() {_			return "Vertex ID: " + f0_				+ ", vertex degree: " + getDegree()_				+ ", triangle count: " + getTriangleCount()_				+ ", local clustering coefficient: " + getLocalClusteringCoefficientScore()__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,verbose,string,return,vertex,id,f0,vertex,degree,get,degree,triangle,count,get,triangle,count,local,clustering,coefficient,get,local,clustering,coefficient,score
LocalClusteringCoefficient -> Result -> public String toVerboseString();1484685504;Format values into a human-readable string.__@return verbose string;public String toVerboseString() {_			return "Vertex ID: " + f0_				+ ", vertex degree: " + getDegree()_				+ ", triangle count: " + getTriangleCount()_				+ ", local clustering coefficient: " + getLocalClusteringCoefficientScore()__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,verbose,string,return,vertex,id,f0,vertex,degree,get,degree,triangle,count,get,triangle,count,local,clustering,coefficient,get,local,clustering,coefficient,score
LocalClusteringCoefficient -> Result -> public String toVerboseString();1488490978;Format values into a human-readable string.__@return verbose string;public String toVerboseString() {_			return "Vertex ID: " + f0_				+ ", vertex degree: " + getDegree()_				+ ", triangle count: " + getTriangleCount()_				+ ", local clustering coefficient: " + getLocalClusteringCoefficientScore()__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,verbose,string,return,vertex,id,f0,vertex,degree,get,degree,triangle,count,get,triangle,count,local,clustering,coefficient,get,local,clustering,coefficient,score
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1472047512;By default the vertex set is checked for zero degree vertices. When this_flag is disabled only clustering coefficient scores for vertices with_a degree of a least one will be produced.__@param includeZeroDegreeVertices whether to output scores for vertices_with a degree of zero_@return this;public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,the,vertex,set,is,checked,for,zero,degree,vertices,when,this,flag,is,disabled,only,clustering,coefficient,scores,for,vertices,with,a,degree,of,a,least,one,will,be,produced,param,include,zero,degree,vertices,whether,to,output,scores,for,vertices,with,a,degree,of,zero,return,this;public,local,clustering,coefficient,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1473368789;By default the vertex set is checked for zero degree vertices. When this_flag is disabled only clustering coefficient scores for vertices with_a degree of a least one will be produced.__@param includeZeroDegreeVertices whether to output scores for vertices_with a degree of zero_@return this;public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,the,vertex,set,is,checked,for,zero,degree,vertices,when,this,flag,is,disabled,only,clustering,coefficient,scores,for,vertices,with,a,degree,of,a,least,one,will,be,produced,param,include,zero,degree,vertices,whether,to,output,scores,for,vertices,with,a,degree,of,zero,return,this;public,local,clustering,coefficient,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1473368789;By default the vertex set is checked for zero degree vertices. When this_flag is disabled only clustering coefficient scores for vertices with_a degree of a least one will be produced.__@param includeZeroDegreeVertices whether to output scores for vertices_with a degree of zero_@return this;public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,the,vertex,set,is,checked,for,zero,degree,vertices,when,this,flag,is,disabled,only,clustering,coefficient,scores,for,vertices,with,a,degree,of,a,least,one,will,be,produced,param,include,zero,degree,vertices,whether,to,output,scores,for,vertices,with,a,degree,of,zero,return,this;public,local,clustering,coefficient,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1477498003;By default the vertex set is checked for zero degree vertices. When this_flag is disabled only clustering coefficient scores for vertices with_a degree of a least one will be produced.__@param includeZeroDegreeVertices whether to output scores for vertices_with a degree of zero_@return this;public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,the,vertex,set,is,checked,for,zero,degree,vertices,when,this,flag,is,disabled,only,clustering,coefficient,scores,for,vertices,with,a,degree,of,a,least,one,will,be,produced,param,include,zero,degree,vertices,whether,to,output,scores,for,vertices,with,a,degree,of,zero,return,this;public,local,clustering,coefficient,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1484685504;By default the vertex set is checked for zero degree vertices. When this_flag is disabled only clustering coefficient scores for vertices with_a degree of a least one will be produced.__@param includeZeroDegreeVertices whether to output scores for vertices_with a degree of zero_@return this;public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,the,vertex,set,is,checked,for,zero,degree,vertices,when,this,flag,is,disabled,only,clustering,coefficient,scores,for,vertices,with,a,degree,of,a,least,one,will,be,produced,param,include,zero,degree,vertices,whether,to,output,scores,for,vertices,with,a,degree,of,zero,return,this;public,local,clustering,coefficient,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1488490978;By default the vertex set is checked for zero degree vertices. When this_flag is disabled only clustering coefficient scores for vertices with_a degree of a least one will be produced.__@param includeZeroDegreeVertices whether to output scores for vertices_with a degree of zero_@return this;public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,the,vertex,set,is,checked,for,zero,degree,vertices,when,this,flag,is,disabled,only,clustering,coefficient,scores,for,vertices,with,a,degree,of,a,least,one,will,be,produced,param,include,zero,degree,vertices,whether,to,output,scores,for,vertices,with,a,degree,of,zero,return,this;public,local,clustering,coefficient,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1489068942;By default the vertex set is checked for zero degree vertices. When this_flag is disabled only clustering coefficient scores for vertices with_a degree of a least one will be produced.__@param includeZeroDegreeVertices whether to output scores for vertices_with a degree of zero_@return this;public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,the,vertex,set,is,checked,for,zero,degree,vertices,when,this,flag,is,disabled,only,clustering,coefficient,scores,for,vertices,with,a,degree,of,a,least,one,will,be,produced,param,include,zero,degree,vertices,whether,to,output,scores,for,vertices,with,a,degree,of,zero,return,this;public,local,clustering,coefficient,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1492103503;By default the vertex set is checked for zero degree vertices. When this_flag is disabled only clustering coefficient scores for vertices with_a degree of a least one will be produced.__@param includeZeroDegreeVertices whether to output scores for vertices_with a degree of zero_@return this;public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,the,vertex,set,is,checked,for,zero,degree,vertices,when,this,flag,is,disabled,only,clustering,coefficient,scores,for,vertices,with,a,degree,of,a,least,one,will,be,produced,param,include,zero,degree,vertices,whether,to,output,scores,for,vertices,with,a,degree,of,zero,return,this;public,local,clustering,coefficient,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1495819075;By default the vertex set is checked for zero degree vertices. When this_flag is disabled only clustering coefficient scores for vertices with_a degree of a least one will be produced.__@param includeZeroDegreeVertices whether to output scores for vertices_with a degree of zero_@return this;public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,the,vertex,set,is,checked,for,zero,degree,vertices,when,this,flag,is,disabled,only,clustering,coefficient,scores,for,vertices,with,a,degree,of,a,least,one,will,be,produced,param,include,zero,degree,vertices,whether,to,output,scores,for,vertices,with,a,degree,of,zero,return,this;public,local,clustering,coefficient,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1499282568;By default the vertex set is checked for zero degree vertices. When this_flag is disabled only clustering coefficient scores for vertices with_a degree of a least one will be produced.__@param includeZeroDegreeVertices whether to output scores for vertices_with a degree of zero_@return this;public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,the,vertex,set,is,checked,for,zero,degree,vertices,when,this,flag,is,disabled,only,clustering,coefficient,scores,for,vertices,with,a,degree,of,a,least,one,will,be,produced,param,include,zero,degree,vertices,whether,to,output,scores,for,vertices,with,a,degree,of,zero,return,this;public,local,clustering,coefficient,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1499777483;By default the vertex set is checked for zero degree vertices. When this_flag is disabled only clustering coefficient scores for vertices with_a degree of a least one will be produced.__@param includeZeroDegreeVertices whether to output scores for vertices_with a degree of zero_@return this;public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,the,vertex,set,is,checked,for,zero,degree,vertices,when,this,flag,is,disabled,only,clustering,coefficient,scores,for,vertices,with,a,degree,of,a,least,one,will,be,produced,param,include,zero,degree,vertices,whether,to,output,scores,for,vertices,with,a,degree,of,zero,return,this;public,local,clustering,coefficient,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1502111816;By default the vertex set is checked for zero degree vertices. When this_flag is disabled only clustering coefficient scores for vertices with_a degree of a least one will be produced.__@param includeZeroDegreeVertices whether to output scores for vertices_with a degree of zero_@return this;public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,the,vertex,set,is,checked,for,zero,degree,vertices,when,this,flag,is,disabled,only,clustering,coefficient,scores,for,vertices,with,a,degree,of,a,least,one,will,be,produced,param,include,zero,degree,vertices,whether,to,output,scores,for,vertices,with,a,degree,of,zero,return,this;public,local,clustering,coefficient,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1505445931;By default the vertex set is checked for zero degree vertices. When this_flag is disabled only clustering coefficient scores for vertices with_a degree of a least one will be produced.__@param includeZeroDegreeVertices whether to output scores for vertices_with a degree of zero_@return this;public LocalClusteringCoefficient<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,the,vertex,set,is,checked,for,zero,degree,vertices,when,this,flag,is,disabled,only,clustering,coefficient,scores,for,vertices,with,a,degree,of,a,least,one,will,be,produced,param,include,zero,degree,vertices,whether,to,output,scores,for,vertices,with,a,degree,of,zero,return,this;public,local,clustering,coefficient,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
LocalClusteringCoefficient -> Result -> public void setDegree(LongValue degree);1499282568;Set the vertex degree.__@param degree vertex degree;public void setDegree(LongValue degree) {_			this.degree = degree__		};set,the,vertex,degree,param,degree,vertex,degree;public,void,set,degree,long,value,degree,this,degree,degree
LocalClusteringCoefficient -> Result -> public void setDegree(LongValue degree);1499777483;Set the vertex degree.__@param degree vertex degree;public void setDegree(LongValue degree) {_			this.degree = degree__		};set,the,vertex,degree,param,degree,vertex,degree;public,void,set,degree,long,value,degree,this,degree,degree
LocalClusteringCoefficient -> Result -> public void setDegree(LongValue degree);1502111816;Set the vertex degree.__@param degree vertex degree;public void setDegree(LongValue degree) {_			this.degree = degree__		};set,the,vertex,degree,param,degree,vertex,degree;public,void,set,degree,long,value,degree,this,degree,degree
LocalClusteringCoefficient -> Result -> public void setDegree(LongValue degree);1505445931;Set the vertex degree.__@param degree vertex degree;public void setDegree(LongValue degree) {_			this.degree = degree__		};set,the,vertex,degree,param,degree,vertex,degree;public,void,set,degree,long,value,degree,this,degree,degree
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism);1466789678;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,local,clustering,coefficient,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism);1467052745;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,local,clustering,coefficient,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism);1467398142;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,local,clustering,coefficient,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism);1469210839;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,local,clustering,coefficient,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism);1472047512;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,local,clustering,coefficient,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism);1473368789;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,local,clustering,coefficient,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism);1473368789;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,local,clustering,coefficient,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism);1477498003;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,local,clustering,coefficient,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism);1484685504;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,local,clustering,coefficient,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism);1488490978;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,local,clustering,coefficient,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism);1489068942;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,local,clustering,coefficient,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism);1492103503;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,local,clustering,coefficient,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism);1495819075;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,local,clustering,coefficient,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
LocalClusteringCoefficient -> public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism);1499282568;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public LocalClusteringCoefficient<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,local,clustering,coefficient,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
LocalClusteringCoefficient -> Result -> public LongValue getTriangleCount();1466789678;Get the number of triangles containing this vertex_ equivalently,_this is the number of edges between neighbors of this vertex.__@return triangle count;public LongValue getTriangleCount() {_			return f1.f1__		};get,the,number,of,triangles,containing,this,vertex,equivalently,this,is,the,number,of,edges,between,neighbors,of,this,vertex,return,triangle,count;public,long,value,get,triangle,count,return,f1,f1
LocalClusteringCoefficient -> Result -> public LongValue getTriangleCount();1467052745;Get the number of triangles containing this vertex_ equivalently,_this is the number of edges between neighbors of this vertex.__@return triangle count;public LongValue getTriangleCount() {_			return f1.f1__		};get,the,number,of,triangles,containing,this,vertex,equivalently,this,is,the,number,of,edges,between,neighbors,of,this,vertex,return,triangle,count;public,long,value,get,triangle,count,return,f1,f1
LocalClusteringCoefficient -> Result -> public LongValue getTriangleCount();1467398142;Get the number of triangles containing this vertex_ equivalently,_this is the number of edges between neighbors of this vertex.__@return triangle count;public LongValue getTriangleCount() {_			return f1.f1__		};get,the,number,of,triangles,containing,this,vertex,equivalently,this,is,the,number,of,edges,between,neighbors,of,this,vertex,return,triangle,count;public,long,value,get,triangle,count,return,f1,f1
LocalClusteringCoefficient -> Result -> public LongValue getTriangleCount();1469210839;Get the number of triangles containing this vertex_ equivalently,_this is the number of edges between neighbors of this vertex.__@return triangle count;public LongValue getTriangleCount() {_			return f1.f1__		};get,the,number,of,triangles,containing,this,vertex,equivalently,this,is,the,number,of,edges,between,neighbors,of,this,vertex,return,triangle,count;public,long,value,get,triangle,count,return,f1,f1
LocalClusteringCoefficient -> Result -> public LongValue getTriangleCount();1472047512;Get the number of triangles containing this vertex_ equivalently,_this is the number of edges between neighbors of this vertex.__@return triangle count;public LongValue getTriangleCount() {_			return f1.f1__		};get,the,number,of,triangles,containing,this,vertex,equivalently,this,is,the,number,of,edges,between,neighbors,of,this,vertex,return,triangle,count;public,long,value,get,triangle,count,return,f1,f1
LocalClusteringCoefficient -> Result -> public LongValue getTriangleCount();1473368789;Get the number of triangles containing this vertex_ equivalently,_this is the number of edges between neighbors of this vertex.__@return triangle count;public LongValue getTriangleCount() {_			return f1.f1__		};get,the,number,of,triangles,containing,this,vertex,equivalently,this,is,the,number,of,edges,between,neighbors,of,this,vertex,return,triangle,count;public,long,value,get,triangle,count,return,f1,f1
LocalClusteringCoefficient -> Result -> public LongValue getTriangleCount();1473368789;Get the number of triangles containing this vertex_ equivalently,_this is the number of edges between neighbors of this vertex.__@return triangle count;public LongValue getTriangleCount() {_			return f1.f1__		};get,the,number,of,triangles,containing,this,vertex,equivalently,this,is,the,number,of,edges,between,neighbors,of,this,vertex,return,triangle,count;public,long,value,get,triangle,count,return,f1,f1
LocalClusteringCoefficient -> Result -> public LongValue getTriangleCount();1477498003;Get the number of triangles containing this vertex_ equivalently,_this is the number of edges between neighbors of this vertex.__@return triangle count;public LongValue getTriangleCount() {_			return f1.f1__		};get,the,number,of,triangles,containing,this,vertex,equivalently,this,is,the,number,of,edges,between,neighbors,of,this,vertex,return,triangle,count;public,long,value,get,triangle,count,return,f1,f1
LocalClusteringCoefficient -> Result -> public LongValue getTriangleCount();1484685504;Get the number of triangles containing this vertex_ equivalently,_this is the number of edges between neighbors of this vertex.__@return triangle count;public LongValue getTriangleCount() {_			return f1.f1__		};get,the,number,of,triangles,containing,this,vertex,equivalently,this,is,the,number,of,edges,between,neighbors,of,this,vertex,return,triangle,count;public,long,value,get,triangle,count,return,f1,f1
LocalClusteringCoefficient -> Result -> public LongValue getTriangleCount();1488490978;Get the number of triangles containing this vertex_ equivalently,_this is the number of edges between neighbors of this vertex.__@return triangle count;public LongValue getTriangleCount() {_			return f1.f1__		};get,the,number,of,triangles,containing,this,vertex,equivalently,this,is,the,number,of,edges,between,neighbors,of,this,vertex,return,triangle,count;public,long,value,get,triangle,count,return,f1,f1
LocalClusteringCoefficient -> Result -> public LongValue getTriangleCount();1489068942;Get the number of triangles containing this vertex_ equivalently,_this is the number of edges between neighbors of this vertex.__@return triangle count;public LongValue getTriangleCount() {_			return f2__		};get,the,number,of,triangles,containing,this,vertex,equivalently,this,is,the,number,of,edges,between,neighbors,of,this,vertex,return,triangle,count;public,long,value,get,triangle,count,return,f2
LocalClusteringCoefficient -> Result -> public LongValue getTriangleCount();1492103503;Get the number of triangles containing this vertex_ equivalently,_this is the number of edges between neighbors of this vertex.__@return triangle count;public LongValue getTriangleCount() {_			return f2__		};get,the,number,of,triangles,containing,this,vertex,equivalently,this,is,the,number,of,edges,between,neighbors,of,this,vertex,return,triangle,count;public,long,value,get,triangle,count,return,f2
LocalClusteringCoefficient -> Result -> public LongValue getTriangleCount();1495819075;Get the number of triangles containing this vertex_ equivalently,_this is the number of edges between neighbors of this vertex.__@return triangle count;public LongValue getTriangleCount() {_			return f2__		};get,the,number,of,triangles,containing,this,vertex,equivalently,this,is,the,number,of,edges,between,neighbors,of,this,vertex,return,triangle,count;public,long,value,get,triangle,count,return,f2
LocalClusteringCoefficient -> Result -> public LongValue getTriangleCount();1499282568;Get the number of triangles containing this vertex_ equivalently,_this is the number of edges between neighbors of this vertex.__@return triangle count;public LongValue getTriangleCount() {_			return triangleCount__		};get,the,number,of,triangles,containing,this,vertex,equivalently,this,is,the,number,of,edges,between,neighbors,of,this,vertex,return,triangle,count;public,long,value,get,triangle,count,return,triangle,count
LocalClusteringCoefficient -> Result -> public LongValue getTriangleCount();1499777483;Get the number of triangles containing this vertex_ equivalently,_this is the number of edges between neighbors of this vertex.__@return triangle count;public LongValue getTriangleCount() {_			return triangleCount__		};get,the,number,of,triangles,containing,this,vertex,equivalently,this,is,the,number,of,edges,between,neighbors,of,this,vertex,return,triangle,count;public,long,value,get,triangle,count,return,triangle,count
LocalClusteringCoefficient -> Result -> public LongValue getTriangleCount();1502111816;Get the number of triangles containing this vertex_ equivalently,_this is the number of edges between neighbors of this vertex.__@return triangle count;public LongValue getTriangleCount() {_			return triangleCount__		};get,the,number,of,triangles,containing,this,vertex,equivalently,this,is,the,number,of,edges,between,neighbors,of,this,vertex,return,triangle,count;public,long,value,get,triangle,count,return,triangle,count
LocalClusteringCoefficient -> Result -> public LongValue getTriangleCount();1505445931;Get the number of triangles containing this vertex_ equivalently,_this is the number of edges between neighbors of this vertex.__@return triangle count;public LongValue getTriangleCount() {_			return triangleCount__		};get,the,number,of,triangles,containing,this,vertex,equivalently,this,is,the,number,of,edges,between,neighbors,of,this,vertex,return,triangle,count;public,long,value,get,triangle,count,return,triangle,count
LocalClusteringCoefficient -> Result -> public String toPrintableString();1489068942;Format values into a human-readable string.__@return verbose string;public String toPrintableString() {_			return "Vertex ID: " + getVertexId0()_				+ ", vertex degree: " + getDegree()_				+ ", triangle count: " + getTriangleCount()_				+ ", local clustering coefficient: " + getLocalClusteringCoefficientScore()__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,printable,string,return,vertex,id,get,vertex,id0,vertex,degree,get,degree,triangle,count,get,triangle,count,local,clustering,coefficient,get,local,clustering,coefficient,score
LocalClusteringCoefficient -> Result -> public String toPrintableString();1492103503;Format values into a human-readable string.__@return verbose string;public String toPrintableString() {_			return "Vertex ID: " + getVertexId0()_				+ ", vertex degree: " + getDegree()_				+ ", triangle count: " + getTriangleCount()_				+ ", local clustering coefficient: " + getLocalClusteringCoefficientScore()__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,printable,string,return,vertex,id,get,vertex,id0,vertex,degree,get,degree,triangle,count,get,triangle,count,local,clustering,coefficient,get,local,clustering,coefficient,score
LocalClusteringCoefficient -> Result -> public String toPrintableString();1495819075;Format values into a human-readable string.__@return verbose string;public String toPrintableString() {_			return "Vertex ID: " + getVertexId0()_				+ ", vertex degree: " + getDegree()_				+ ", triangle count: " + getTriangleCount()_				+ ", local clustering coefficient: " + getLocalClusteringCoefficientScore()__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,printable,string,return,vertex,id,get,vertex,id0,vertex,degree,get,degree,triangle,count,get,triangle,count,local,clustering,coefficient,get,local,clustering,coefficient,score
