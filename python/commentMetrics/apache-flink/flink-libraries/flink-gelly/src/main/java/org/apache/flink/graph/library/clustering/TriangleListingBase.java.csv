commented;modifiers;parameterAmount;loc;comment;code
true;public;1;5;/**  * By default only one result is output for each triangle, whether vertices  * are sorted or unsorted. When permutation is enabled a result is instead  * output for each of the six permutations of the three vertex IDs.  *  * @param permuteResults whether output results should be permuted  * @return this  */ ;/**  * By default only one result is output for each triangle, whether vertices  * are sorted or unsorted. When permutation is enabled a result is instead  * output for each of the six permutations of the three vertex IDs.  *  * @param permuteResults whether output results should be permuted  * @return this  */ public TriangleListingBase<K, VV, EV, R> setPermuteResults(boolean permuteResults) {     this.permuteResults = permuteResults.     return this. }
true;public;1;5;/**  * Normalize the triangle listing such that for each result (K0, K1, K2)  * the vertex IDs are sorted K0 < K1 < K2.  *  * @param sortTriangleVertices whether to output each triangle's vertices in sorted order  * @return this  */ ;/**  * Normalize the triangle listing such that for each result (K0, K1, K2)  * the vertex IDs are sorted K0 < K1 < K2.  *  * @param sortTriangleVertices whether to output each triangle's vertices in sorted order  * @return this  */ public TriangleListingBase<K, VV, EV, R> setSortTriangleVertices(boolean sortTriangleVertices) {     this.sortTriangleVertices.set(sortTriangleVertices).     return this. }
false;protected;1;10;;@Override protected boolean canMergeConfigurationWith(GraphAlgorithmWrappingBase other) {     if (!super.canMergeConfigurationWith(other)) {         return false.     }     TriangleListingBase rhs = (TriangleListingBase) other.     return permuteResults == rhs.permuteResults. }
false;protected,final;1;8;;@Override protected final void mergeConfiguration(GraphAlgorithmWrappingBase other) {     super.mergeConfiguration(other).     TriangleListingBase rhs = (TriangleListingBase) other.     sortTriangleVertices.mergeWith(rhs.sortTriangleVertices). }
