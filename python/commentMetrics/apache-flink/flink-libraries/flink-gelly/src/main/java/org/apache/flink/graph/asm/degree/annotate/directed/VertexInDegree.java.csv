# id;timestamp;commentText;codeText;commentWords;codeWords
VertexInDegree -> public VertexInDegree<K, VV, EV> setParallelism(int parallelism);1462796709;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexInDegree<K, VV, EV> setParallelism(int parallelism) {_		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,in,degree,k,vv,ev,set,parallelism,int,parallelism,this,parallelism,parallelism,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setParallelism(int parallelism);1464877349;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexInDegree<K, VV, EV> setParallelism(int parallelism) {_		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,in,degree,k,vv,ev,set,parallelism,int,parallelism,this,parallelism,parallelism,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setParallelism(int parallelism);1465304462;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexInDegree<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,in,degree,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setParallelism(int parallelism);1467398142;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexInDegree<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,in,degree,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setParallelism(int parallelism);1469210839;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexInDegree<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,in,degree,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setParallelism(int parallelism);1473368789;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexInDegree<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,in,degree,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setParallelism(int parallelism);1473368789;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexInDegree<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,in,degree,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setParallelism(int parallelism);1477498003;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexInDegree<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,in,degree,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setParallelism(int parallelism);1495819075;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexInDegree<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,in,degree,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setParallelism(int parallelism);1499282568;Override the operator parallelism.__@param parallelism operator parallelism_@return this;public VertexInDegree<K, VV, EV> setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.parallelism = parallelism___		return this__	};override,the,operator,parallelism,param,parallelism,operator,parallelism,return,this;public,vertex,in,degree,k,vv,ev,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,the,parallelism,must,be,greater,than,zero,this,parallelism,parallelism,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1462796709;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices = includeZeroDegreeVertices___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,include,zero,degree,vertices,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1464877349;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices = includeZeroDegreeVertices___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,include,zero,degree,vertices,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1465304462;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices = includeZeroDegreeVertices___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,include,zero,degree,vertices,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1467398142;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1469210839;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1473368789;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1473368789;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1477498003;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1495819075;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1499282568;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1499777483;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
VertexInDegree -> public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices);1502111816;By default only the edge set is processed for the computation of degree._When this flag is set an additional join is performed against the vertex_set in order to output vertices with an in-degree of zero.__@param includeZeroDegreeVertices whether to output vertices with an_in-degree of zero_@return this;public VertexInDegree<K, VV, EV> setIncludeZeroDegreeVertices(boolean includeZeroDegreeVertices) {_		this.includeZeroDegreeVertices.set(includeZeroDegreeVertices)___		return this__	};by,default,only,the,edge,set,is,processed,for,the,computation,of,degree,when,this,flag,is,set,an,additional,join,is,performed,against,the,vertex,set,in,order,to,output,vertices,with,an,in,degree,of,zero,param,include,zero,degree,vertices,whether,to,output,vertices,with,an,in,degree,of,zero,return,this;public,vertex,in,degree,k,vv,ev,set,include,zero,degree,vertices,boolean,include,zero,degree,vertices,this,include,zero,degree,vertices,set,include,zero,degree,vertices,return,this
