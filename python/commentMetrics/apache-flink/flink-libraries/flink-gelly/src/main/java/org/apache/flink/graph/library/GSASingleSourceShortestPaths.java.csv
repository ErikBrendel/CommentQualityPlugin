commented;modifiers;parameterAmount;loc;comment;code
false;public;1;8;;@Override public DataSet<Vertex<K, Double>> run(Graph<K, VV, Double> input) {     return input.mapVertices(new InitVerticesMapper<>(srcVertexId)).runGatherSumApplyIteration(new CalculateDistances(), new ChooseMinDistance(), new UpdateDistance<>(), maxIterations).getVertices(). }
false;public;1;7;;public Double map(Vertex<K, VV> value) {     if (value.f0.equals(srcVertexId)) {         return 0.0.     } else {         return Double.MAX_VALUE.     } }
false;public;1;3;;public Double gather(Neighbor<Double, Double> neighbor) {     return neighbor.getNeighborValue() + neighbor.getEdgeValue(). }
false;public;2;3;;public Double sum(Double newValue, Double currentValue) {     return Math.min(newValue, currentValue). }
false;public;2;5;;public void apply(Double newDistance, Double oldDistance) {     if (newDistance < oldDistance) {         setResult(newDistance).     } }
