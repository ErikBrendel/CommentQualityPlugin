# id;timestamp;commentText;codeText;commentWords;codeWords
AnalyticHelper -> public <A> A getAccumulator(ExecutionEnvironment env, String accumulatorName);1478616101;Gets the accumulator with the given name. Returns {@code null}, if no accumulator with_that name was produced.__@param accumulatorName The name of the accumulator_@param <A> The generic type of the accumulator value_@return The value of the accumulator with the given name;public <A> A getAccumulator(ExecutionEnvironment env, String accumulatorName) {_		return env.getLastJobExecutionResult().getAccumulatorResult(id + SEPARATOR + accumulatorName)__	};gets,the,accumulator,with,the,given,name,returns,code,null,if,no,accumulator,with,that,name,was,produced,param,accumulator,name,the,name,of,the,accumulator,param,a,the,generic,type,of,the,accumulator,value,return,the,value,of,the,accumulator,with,the,given,name;public,a,a,get,accumulator,execution,environment,env,string,accumulator,name,return,env,get,last,job,execution,result,get,accumulator,result,id,separator,accumulator,name
AnalyticHelper -> public <A> A getAccumulator(ExecutionEnvironment env, String accumulatorName);1485176584;Gets the accumulator with the given name. Returns {@code null}, if no accumulator with_that name was produced.__@param accumulatorName The name of the accumulator_@param <A> The generic type of the accumulator value_@return The value of the accumulator with the given name;public <A> A getAccumulator(ExecutionEnvironment env, String accumulatorName) {_		JobExecutionResult result = env.getLastJobExecutionResult()___		Preconditions.checkNotNull(result, "No result found for job, was execute() called before getting the result?")___		return result.getAccumulatorResult(id + SEPARATOR + accumulatorName)__	};gets,the,accumulator,with,the,given,name,returns,code,null,if,no,accumulator,with,that,name,was,produced,param,accumulator,name,the,name,of,the,accumulator,param,a,the,generic,type,of,the,accumulator,value,return,the,value,of,the,accumulator,with,the,given,name;public,a,a,get,accumulator,execution,environment,env,string,accumulator,name,job,execution,result,result,env,get,last,job,execution,result,preconditions,check,not,null,result,no,result,found,for,job,was,execute,called,before,getting,the,result,return,result,get,accumulator,result,id,separator,accumulator,name
AnalyticHelper -> public <A> A getAccumulator(ExecutionEnvironment env, String accumulatorName);1495819075;Gets the accumulator with the given name. Returns {@code null}, if no accumulator with_that name was produced.__@param accumulatorName The name of the accumulator_@param <A> The generic type of the accumulator value_@return The value of the accumulator with the given name;public <A> A getAccumulator(ExecutionEnvironment env, String accumulatorName) {_		JobExecutionResult result = env.getLastJobExecutionResult()___		Preconditions.checkNotNull(result, "No result found for job, was execute() called before getting the result?")___		return result.getAccumulatorResult(id + SEPARATOR + accumulatorName)__	};gets,the,accumulator,with,the,given,name,returns,code,null,if,no,accumulator,with,that,name,was,produced,param,accumulator,name,the,name,of,the,accumulator,param,a,the,generic,type,of,the,accumulator,value,return,the,value,of,the,accumulator,with,the,given,name;public,a,a,get,accumulator,execution,environment,env,string,accumulator,name,job,execution,result,result,env,get,last,job,execution,result,preconditions,check,not,null,result,no,result,found,for,job,was,execute,called,before,getting,the,result,return,result,get,accumulator,result,id,separator,accumulator,name
AnalyticHelper -> public <V, A extends Serializable> void addAccumulator(String name, Accumulator<V, A> accumulator);1478616101;Adds an accumulator by prepending the given name with a random string.__@param name The name of the accumulator_@param accumulator The accumulator_@param <V> Type of values that are added to the accumulator_@param <A> Type of the accumulator result as it will be reported to the client;public <V, A extends Serializable> void addAccumulator(String name, Accumulator<V, A> accumulator) {_		getRuntimeContext().addAccumulator(id + SEPARATOR + name, accumulator)__	};adds,an,accumulator,by,prepending,the,given,name,with,a,random,string,param,name,the,name,of,the,accumulator,param,accumulator,the,accumulator,param,v,type,of,values,that,are,added,to,the,accumulator,param,a,type,of,the,accumulator,result,as,it,will,be,reported,to,the,client;public,v,a,extends,serializable,void,add,accumulator,string,name,accumulator,v,a,accumulator,get,runtime,context,add,accumulator,id,separator,name,accumulator
AnalyticHelper -> public <V, A extends Serializable> void addAccumulator(String name, Accumulator<V, A> accumulator);1485176584;Adds an accumulator by prepending the given name with a random string.__@param name The name of the accumulator_@param accumulator The accumulator_@param <V> Type of values that are added to the accumulator_@param <A> Type of the accumulator result as it will be reported to the client;public <V, A extends Serializable> void addAccumulator(String name, Accumulator<V, A> accumulator) {_		getRuntimeContext().addAccumulator(id + SEPARATOR + name, accumulator)__	};adds,an,accumulator,by,prepending,the,given,name,with,a,random,string,param,name,the,name,of,the,accumulator,param,accumulator,the,accumulator,param,v,type,of,values,that,are,added,to,the,accumulator,param,a,type,of,the,accumulator,result,as,it,will,be,reported,to,the,client;public,v,a,extends,serializable,void,add,accumulator,string,name,accumulator,v,a,accumulator,get,runtime,context,add,accumulator,id,separator,name,accumulator
AnalyticHelper -> public <V, A extends Serializable> void addAccumulator(String name, Accumulator<V, A> accumulator);1495819075;Adds an accumulator by prepending the given name with a random string.__@param name The name of the accumulator_@param accumulator The accumulator_@param <V> Type of values that are added to the accumulator_@param <A> Type of the accumulator result as it will be reported to the client;public <V, A extends Serializable> void addAccumulator(String name, Accumulator<V, A> accumulator) {_		getRuntimeContext().addAccumulator(id + SEPARATOR + name, accumulator)__	};adds,an,accumulator,by,prepending,the,given,name,with,a,random,string,param,name,the,name,of,the,accumulator,param,accumulator,the,accumulator,param,v,type,of,values,that,are,added,to,the,accumulator,param,a,type,of,the,accumulator,result,as,it,will,be,reported,to,the,client;public,v,a,extends,serializable,void,add,accumulator,string,name,accumulator,v,a,accumulator,get,runtime,context,add,accumulator,id,separator,name,accumulator
