# id;timestamp;commentText;codeText;commentWords;codeWords
IterationConfiguration -> public Map<String, Aggregator<?>> getAggregators();1444404795;Gets the set of aggregators that are registered for this vertex-centric iteration.__@return a Map of the registered aggregators, where the key is the aggregator name_and the value is the Aggregator object;public Map<String, Aggregator<?>> getAggregators() {_		return this.aggregators__	};gets,the,set,of,aggregators,that,are,registered,for,this,vertex,centric,iteration,return,a,map,of,the,registered,aggregators,where,the,key,is,the,aggregator,name,and,the,value,is,the,aggregator,object;public,map,string,aggregator,get,aggregators,return,this,aggregators
IterationConfiguration -> public Map<String, Aggregator<?>> getAggregators();1461749067;Gets the set of aggregators that are registered for this vertex-centric iteration.__@return a Map of the registered aggregators, where the key is the aggregator name_and the value is the Aggregator object;public Map<String, Aggregator<?>> getAggregators() {_		return this.aggregators__	};gets,the,set,of,aggregators,that,are,registered,for,this,vertex,centric,iteration,return,a,map,of,the,registered,aggregators,where,the,key,is,the,aggregator,name,and,the,value,is,the,aggregator,object;public,map,string,aggregator,get,aggregators,return,this,aggregators
IterationConfiguration -> public Map<String, Aggregator<?>> getAggregators();1467306272;Gets the set of aggregators that are registered for this vertex-centric iteration.__@return a Map of the registered aggregators, where the key is the aggregator name_and the value is the Aggregator object;public Map<String, Aggregator<?>> getAggregators() {_		return this.aggregators__	};gets,the,set,of,aggregators,that,are,registered,for,this,vertex,centric,iteration,return,a,map,of,the,registered,aggregators,where,the,key,is,the,aggregator,name,and,the,value,is,the,aggregator,object;public,map,string,aggregator,get,aggregators,return,this,aggregators
IterationConfiguration -> public Map<String, Aggregator<?>> getAggregators();1475684776;Gets the set of aggregators that are registered for this vertex-centric iteration.__@return a Map of the registered aggregators, where the key is the aggregator name_and the value is the Aggregator object;public Map<String, Aggregator<?>> getAggregators() {_		return this.aggregators__	};gets,the,set,of,aggregators,that,are,registered,for,this,vertex,centric,iteration,return,a,map,of,the,registered,aggregators,where,the,key,is,the,aggregator,name,and,the,value,is,the,aggregator,object;public,map,string,aggregator,get,aggregators,return,this,aggregators
IterationConfiguration -> public Map<String, Aggregator<?>> getAggregators();1495819075;Gets the set of aggregators that are registered for this vertex-centric iteration.__@return a Map of the registered aggregators, where the key is the aggregator name_and the value is the Aggregator object;public Map<String, Aggregator<?>> getAggregators() {_		return this.aggregators__	};gets,the,set,of,aggregators,that,are,registered,for,this,vertex,centric,iteration,return,a,map,of,the,registered,aggregators,where,the,key,is,the,aggregator,name,and,the,value,is,the,aggregator,object;public,map,string,aggregator,get,aggregators,return,this,aggregators
IterationConfiguration -> public Map<String, Aggregator<?>> getAggregators();1514902843;Gets the set of aggregators that are registered for this vertex-centric iteration.__@return a Map of the registered aggregators, where the key is the aggregator name_and the value is the Aggregator object;public Map<String, Aggregator<?>> getAggregators() {_		return this.aggregators__	};gets,the,set,of,aggregators,that,are,registered,for,this,vertex,centric,iteration,return,a,map,of,the,registered,aggregators,where,the,key,is,the,aggregator,name,and,the,value,is,the,aggregator,object;public,map,string,aggregator,get,aggregators,return,this,aggregators
IterationConfiguration -> public void registerAggregator(String name, Aggregator<?> aggregator);1444404795;Registers a new aggregator. Aggregators registered here are available during the execution of the vertex updates_via {@link org.apache.flink.graph.spargel.VertexUpdateFunction#getIterationAggregator(String)} and_{@link org.apache.flink.graph.spargel.VertexUpdateFunction#getPreviousIterationAggregate(String)}.__@param name The name of the aggregator, used to retrieve it and its aggregates during execution._@param aggregator The aggregator.;public void registerAggregator(String name, Aggregator<?> aggregator) {_		this.aggregators.put(name, aggregator)__	};registers,a,new,aggregator,aggregators,registered,here,are,available,during,the,execution,of,the,vertex,updates,via,link,org,apache,flink,graph,spargel,vertex,update,function,get,iteration,aggregator,string,and,link,org,apache,flink,graph,spargel,vertex,update,function,get,previous,iteration,aggregate,string,param,name,the,name,of,the,aggregator,used,to,retrieve,it,and,its,aggregates,during,execution,param,aggregator,the,aggregator;public,void,register,aggregator,string,name,aggregator,aggregator,this,aggregators,put,name,aggregator
IterationConfiguration -> public void registerAggregator(String name, Aggregator<?> aggregator);1461749067;Registers a new aggregator. Aggregators registered here are available during the execution of the vertex updates_via {@link org.apache.flink.graph.spargel.VertexUpdateFunction#getIterationAggregator(String)} and_{@link org.apache.flink.graph.spargel.VertexUpdateFunction#getPreviousIterationAggregate(String)}.__@param name The name of the aggregator, used to retrieve it and its aggregates during execution._@param aggregator The aggregator.;public void registerAggregator(String name, Aggregator<?> aggregator) {_		this.aggregators.put(name, aggregator)__	};registers,a,new,aggregator,aggregators,registered,here,are,available,during,the,execution,of,the,vertex,updates,via,link,org,apache,flink,graph,spargel,vertex,update,function,get,iteration,aggregator,string,and,link,org,apache,flink,graph,spargel,vertex,update,function,get,previous,iteration,aggregate,string,param,name,the,name,of,the,aggregator,used,to,retrieve,it,and,its,aggregates,during,execution,param,aggregator,the,aggregator;public,void,register,aggregator,string,name,aggregator,aggregator,this,aggregators,put,name,aggregator
IterationConfiguration -> public void registerAggregator(String name, Aggregator<?> aggregator);1467306272;Registers a new aggregator. Aggregators registered here are available during the execution of the vertex updates_via {@link GatherFunction#getIterationAggregator(String)} and_{@link GatherFunction#getPreviousIterationAggregate(String)}.__@param name The name of the aggregator, used to retrieve it and its aggregates during execution._@param aggregator The aggregator.;public void registerAggregator(String name, Aggregator<?> aggregator) {_		this.aggregators.put(name, aggregator)__	};registers,a,new,aggregator,aggregators,registered,here,are,available,during,the,execution,of,the,vertex,updates,via,link,gather,function,get,iteration,aggregator,string,and,link,gather,function,get,previous,iteration,aggregate,string,param,name,the,name,of,the,aggregator,used,to,retrieve,it,and,its,aggregates,during,execution,param,aggregator,the,aggregator;public,void,register,aggregator,string,name,aggregator,aggregator,this,aggregators,put,name,aggregator
IterationConfiguration -> public void registerAggregator(String name, Aggregator<?> aggregator);1475684776;Registers a new aggregator. Aggregators registered here are available during the execution of the vertex updates_via {@link GatherFunction#getIterationAggregator(String)} and_{@link GatherFunction#getPreviousIterationAggregate(String)}.__@param name The name of the aggregator, used to retrieve it and its aggregates during execution._@param aggregator The aggregator.;public void registerAggregator(String name, Aggregator<?> aggregator) {_		this.aggregators.put(name, aggregator)__	};registers,a,new,aggregator,aggregators,registered,here,are,available,during,the,execution,of,the,vertex,updates,via,link,gather,function,get,iteration,aggregator,string,and,link,gather,function,get,previous,iteration,aggregate,string,param,name,the,name,of,the,aggregator,used,to,retrieve,it,and,its,aggregates,during,execution,param,aggregator,the,aggregator;public,void,register,aggregator,string,name,aggregator,aggregator,this,aggregators,put,name,aggregator
IterationConfiguration -> public void registerAggregator(String name, Aggregator<?> aggregator);1495819075;Registers a new aggregator. Aggregators registered here are available during the execution of the vertex updates_via {@link GatherFunction#getIterationAggregator(String)} and_{@link GatherFunction#getPreviousIterationAggregate(String)}.__@param name The name of the aggregator, used to retrieve it and its aggregates during execution._@param aggregator The aggregator.;public void registerAggregator(String name, Aggregator<?> aggregator) {_		this.aggregators.put(name, aggregator)__	};registers,a,new,aggregator,aggregators,registered,here,are,available,during,the,execution,of,the,vertex,updates,via,link,gather,function,get,iteration,aggregator,string,and,link,gather,function,get,previous,iteration,aggregate,string,param,name,the,name,of,the,aggregator,used,to,retrieve,it,and,its,aggregates,during,execution,param,aggregator,the,aggregator;public,void,register,aggregator,string,name,aggregator,aggregator,this,aggregators,put,name,aggregator
IterationConfiguration -> public void registerAggregator(String name, Aggregator<?> aggregator);1514902843;Registers a new aggregator. Aggregators registered here are available during the execution of the vertex updates_via {@link GatherFunction#getIterationAggregator(String)} and_{@link GatherFunction#getPreviousIterationAggregate(String)}.__@param name The name of the aggregator, used to retrieve it and its aggregates during execution._@param aggregator The aggregator.;public void registerAggregator(String name, Aggregator<?> aggregator) {_		this.aggregators.put(name, aggregator)__	};registers,a,new,aggregator,aggregators,registered,here,are,available,during,the,execution,of,the,vertex,updates,via,link,gather,function,get,iteration,aggregator,string,and,link,gather,function,get,previous,iteration,aggregate,string,param,name,the,name,of,the,aggregator,used,to,retrieve,it,and,its,aggregates,during,execution,param,aggregator,the,aggregator;public,void,register,aggregator,string,name,aggregator,aggregator,this,aggregators,put,name,aggregator
IterationConfiguration -> public void setName(String name);1444404795;Sets the name for the iteration. The name is displayed in logs and messages.__@param name The name for the iteration.;public void setName(String name) {_		this.name = name__	};sets,the,name,for,the,iteration,the,name,is,displayed,in,logs,and,messages,param,name,the,name,for,the,iteration;public,void,set,name,string,name,this,name,name
IterationConfiguration -> public void setName(String name);1461749067;Sets the name for the iteration. The name is displayed in logs and messages.__@param name The name for the iteration.;public void setName(String name) {_		this.name = name__	};sets,the,name,for,the,iteration,the,name,is,displayed,in,logs,and,messages,param,name,the,name,for,the,iteration;public,void,set,name,string,name,this,name,name
IterationConfiguration -> public void setName(String name);1467306272;Sets the name for the iteration. The name is displayed in logs and messages.__@param name The name for the iteration.;public void setName(String name) {_		this.name = name__	};sets,the,name,for,the,iteration,the,name,is,displayed,in,logs,and,messages,param,name,the,name,for,the,iteration;public,void,set,name,string,name,this,name,name
IterationConfiguration -> public void setName(String name);1475684776;Sets the name for the iteration. The name is displayed in logs and messages.__@param name The name for the iteration.;public void setName(String name) {_		this.name = name__	};sets,the,name,for,the,iteration,the,name,is,displayed,in,logs,and,messages,param,name,the,name,for,the,iteration;public,void,set,name,string,name,this,name,name
IterationConfiguration -> public void setName(String name);1495819075;Sets the name for the iteration. The name is displayed in logs and messages.__@param name The name for the iteration.;public void setName(String name) {_		this.name = name__	};sets,the,name,for,the,iteration,the,name,is,displayed,in,logs,and,messages,param,name,the,name,for,the,iteration;public,void,set,name,string,name,this,name,name
IterationConfiguration -> public void setName(String name);1514902843;Sets the name for the iteration. The name is displayed in logs and messages.__@param name The name for the iteration.;public void setName(String name) {_		this.name = name__	};sets,the,name,for,the,iteration,the,name,is,displayed,in,logs,and,messages,param,name,the,name,for,the,iteration;public,void,set,name,string,name,this,name,name
IterationConfiguration -> public void setParallelism(int parallelism);1444404795;Sets the parallelism for the iteration.__@param parallelism The parallelism.;public void setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == -1, "The parallelism must be positive, or -1 (use default).")__		this.parallelism = parallelism__	};sets,the,parallelism,for,the,iteration,param,parallelism,the,parallelism;public,void,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,1,the,parallelism,must,be,positive,or,1,use,default,this,parallelism,parallelism
IterationConfiguration -> public void setParallelism(int parallelism);1461749067;Sets the parallelism for the iteration.__@param parallelism The parallelism.;public void setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == -1, "The parallelism must be positive, or -1 (use default).")__		this.parallelism = parallelism__	};sets,the,parallelism,for,the,iteration,param,parallelism,the,parallelism;public,void,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,1,the,parallelism,must,be,positive,or,1,use,default,this,parallelism,parallelism
IterationConfiguration -> public void setParallelism(int parallelism);1467306272;Sets the parallelism for the iteration.__@param parallelism The parallelism.;public void setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == -1, "The parallelism must be positive, or -1 (use default).")__		this.parallelism = parallelism__	};sets,the,parallelism,for,the,iteration,param,parallelism,the,parallelism;public,void,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,1,the,parallelism,must,be,positive,or,1,use,default,this,parallelism,parallelism
IterationConfiguration -> public void setParallelism(int parallelism);1475684776;Sets the parallelism for the iteration.__@param parallelism The parallelism.;public void setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == -1, "The parallelism must be positive, or -1 (use default).")__		this.parallelism = parallelism__	};sets,the,parallelism,for,the,iteration,param,parallelism,the,parallelism;public,void,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,1,the,parallelism,must,be,positive,or,1,use,default,this,parallelism,parallelism
IterationConfiguration -> public void setParallelism(int parallelism);1495819075;Sets the parallelism for the iteration.__@param parallelism The parallelism.;public void setParallelism(int parallelism) {_		Preconditions.checkArgument(parallelism > 0 || parallelism == -1, "The parallelism must be positive, or -1 (use default).")__		this.parallelism = parallelism__	};sets,the,parallelism,for,the,iteration,param,parallelism,the,parallelism;public,void,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,1,the,parallelism,must,be,positive,or,1,use,default,this,parallelism,parallelism
IterationConfiguration -> public void setParallelism(int parallelism);1514902843;Sets the parallelism for the iteration.__@param parallelism The parallelism.;public void setParallelism(int parallelism) {_		Preconditions.checkArgument(_				parallelism > 0 || parallelism == ExecutionConfig.PARALLELISM_DEFAULT,_				"The parallelism must be at least one, or ExecutionConfig.PARALLELISM_DEFAULT (use system default).")__		this.parallelism = parallelism__	};sets,the,parallelism,for,the,iteration,param,parallelism,the,parallelism;public,void,set,parallelism,int,parallelism,preconditions,check,argument,parallelism,0,parallelism,execution,config,the,parallelism,must,be,at,least,one,or,execution,config,use,system,default,this,parallelism,parallelism
IterationConfiguration -> public void setSolutionSetUnmanagedMemory(boolean unmanaged);1444404795;Defines whether the solution set is kept in managed memory (Flink's internal way of keeping object_in serialized form) or as a simple object map._By default, the solution set runs in managed memory.__@param unmanaged True, to keep the solution set in unmanaged memory, false otherwise.;public void setSolutionSetUnmanagedMemory(boolean unmanaged) {_		this.unmanagedSolutionSet = unmanaged__	};defines,whether,the,solution,set,is,kept,in,managed,memory,flink,s,internal,way,of,keeping,object,in,serialized,form,or,as,a,simple,object,map,by,default,the,solution,set,runs,in,managed,memory,param,unmanaged,true,to,keep,the,solution,set,in,unmanaged,memory,false,otherwise;public,void,set,solution,set,unmanaged,memory,boolean,unmanaged,this,unmanaged,solution,set,unmanaged
IterationConfiguration -> public void setSolutionSetUnmanagedMemory(boolean unmanaged);1461749067;Defines whether the solution set is kept in managed memory (Flink's internal way of keeping object_in serialized form) or as a simple object map._By default, the solution set runs in managed memory.__@param unmanaged True, to keep the solution set in unmanaged memory, false otherwise.;public void setSolutionSetUnmanagedMemory(boolean unmanaged) {_		this.unmanagedSolutionSet = unmanaged__	};defines,whether,the,solution,set,is,kept,in,managed,memory,flink,s,internal,way,of,keeping,object,in,serialized,form,or,as,a,simple,object,map,by,default,the,solution,set,runs,in,managed,memory,param,unmanaged,true,to,keep,the,solution,set,in,unmanaged,memory,false,otherwise;public,void,set,solution,set,unmanaged,memory,boolean,unmanaged,this,unmanaged,solution,set,unmanaged
IterationConfiguration -> public void setSolutionSetUnmanagedMemory(boolean unmanaged);1467306272;Defines whether the solution set is kept in managed memory (Flink's internal way of keeping object_in serialized form) or as a simple object map._By default, the solution set runs in managed memory.__@param unmanaged True, to keep the solution set in unmanaged memory, false otherwise.;public void setSolutionSetUnmanagedMemory(boolean unmanaged) {_		this.unmanagedSolutionSet = unmanaged__	};defines,whether,the,solution,set,is,kept,in,managed,memory,flink,s,internal,way,of,keeping,object,in,serialized,form,or,as,a,simple,object,map,by,default,the,solution,set,runs,in,managed,memory,param,unmanaged,true,to,keep,the,solution,set,in,unmanaged,memory,false,otherwise;public,void,set,solution,set,unmanaged,memory,boolean,unmanaged,this,unmanaged,solution,set,unmanaged
IterationConfiguration -> public void setSolutionSetUnmanagedMemory(boolean unmanaged);1475684776;Defines whether the solution set is kept in managed memory (Flink's internal way of keeping object_in serialized form) or as a simple object map._By default, the solution set runs in managed memory.__@param unmanaged True, to keep the solution set in unmanaged memory, false otherwise.;public void setSolutionSetUnmanagedMemory(boolean unmanaged) {_		this.unmanagedSolutionSet = unmanaged__	};defines,whether,the,solution,set,is,kept,in,managed,memory,flink,s,internal,way,of,keeping,object,in,serialized,form,or,as,a,simple,object,map,by,default,the,solution,set,runs,in,managed,memory,param,unmanaged,true,to,keep,the,solution,set,in,unmanaged,memory,false,otherwise;public,void,set,solution,set,unmanaged,memory,boolean,unmanaged,this,unmanaged,solution,set,unmanaged
IterationConfiguration -> public void setSolutionSetUnmanagedMemory(boolean unmanaged);1495819075;Defines whether the solution set is kept in managed memory (Flink's internal way of keeping object_in serialized form) or as a simple object map._By default, the solution set runs in managed memory.__@param unmanaged True, to keep the solution set in unmanaged memory, false otherwise.;public void setSolutionSetUnmanagedMemory(boolean unmanaged) {_		this.unmanagedSolutionSet = unmanaged__	};defines,whether,the,solution,set,is,kept,in,managed,memory,flink,s,internal,way,of,keeping,object,in,serialized,form,or,as,a,simple,object,map,by,default,the,solution,set,runs,in,managed,memory,param,unmanaged,true,to,keep,the,solution,set,in,unmanaged,memory,false,otherwise;public,void,set,solution,set,unmanaged,memory,boolean,unmanaged,this,unmanaged,solution,set,unmanaged
IterationConfiguration -> public void setSolutionSetUnmanagedMemory(boolean unmanaged);1514902843;Defines whether the solution set is kept in managed memory (Flink's internal way of keeping object_in serialized form) or as a simple object map._By default, the solution set runs in managed memory.__@param unmanaged True, to keep the solution set in unmanaged memory, false otherwise.;public void setSolutionSetUnmanagedMemory(boolean unmanaged) {_		this.unmanagedSolutionSet = unmanaged__	};defines,whether,the,solution,set,is,kept,in,managed,memory,flink,s,internal,way,of,keeping,object,in,serialized,form,or,as,a,simple,object,map,by,default,the,solution,set,runs,in,managed,memory,param,unmanaged,true,to,keep,the,solution,set,in,unmanaged,memory,false,otherwise;public,void,set,solution,set,unmanaged,memory,boolean,unmanaged,this,unmanaged,solution,set,unmanaged
IterationConfiguration -> public void setOptNumVertices(boolean optNumVertices);1444404795;Sets the number of vertices option._By default, the number of vertices option is not set.__@param optNumVertices True, to set this option, false otherwise.;public void setOptNumVertices(boolean optNumVertices) {_		this.optNumVertices = optNumVertices__	};sets,the,number,of,vertices,option,by,default,the,number,of,vertices,option,is,not,set,param,opt,num,vertices,true,to,set,this,option,false,otherwise;public,void,set,opt,num,vertices,boolean,opt,num,vertices,this,opt,num,vertices,opt,num,vertices
IterationConfiguration -> public void setOptNumVertices(boolean optNumVertices);1461749067;Sets the number of vertices option._By default, the number of vertices option is not set.__@param optNumVertices True, to set this option, false otherwise.;public void setOptNumVertices(boolean optNumVertices) {_		this.optNumVertices = optNumVertices__	};sets,the,number,of,vertices,option,by,default,the,number,of,vertices,option,is,not,set,param,opt,num,vertices,true,to,set,this,option,false,otherwise;public,void,set,opt,num,vertices,boolean,opt,num,vertices,this,opt,num,vertices,opt,num,vertices
IterationConfiguration -> public void setOptNumVertices(boolean optNumVertices);1467306272;Sets the number of vertices option._By default, the number of vertices option is not set.__@param optNumVertices True, to set this option, false otherwise.;public void setOptNumVertices(boolean optNumVertices) {_		this.optNumVertices = optNumVertices__	};sets,the,number,of,vertices,option,by,default,the,number,of,vertices,option,is,not,set,param,opt,num,vertices,true,to,set,this,option,false,otherwise;public,void,set,opt,num,vertices,boolean,opt,num,vertices,this,opt,num,vertices,opt,num,vertices
IterationConfiguration -> public void setOptNumVertices(boolean optNumVertices);1475684776;Sets the number of vertices option._By default, the number of vertices option is not set.__@param optNumVertices True, to set this option, false otherwise.;public void setOptNumVertices(boolean optNumVertices) {_		this.optNumVertices = optNumVertices__	};sets,the,number,of,vertices,option,by,default,the,number,of,vertices,option,is,not,set,param,opt,num,vertices,true,to,set,this,option,false,otherwise;public,void,set,opt,num,vertices,boolean,opt,num,vertices,this,opt,num,vertices,opt,num,vertices
IterationConfiguration -> public void setOptNumVertices(boolean optNumVertices);1495819075;Sets the number of vertices option._By default, the number of vertices option is not set.__@param optNumVertices True, to set this option, false otherwise.;public void setOptNumVertices(boolean optNumVertices) {_		this.optNumVertices = optNumVertices__	};sets,the,number,of,vertices,option,by,default,the,number,of,vertices,option,is,not,set,param,opt,num,vertices,true,to,set,this,option,false,otherwise;public,void,set,opt,num,vertices,boolean,opt,num,vertices,this,opt,num,vertices,opt,num,vertices
IterationConfiguration -> public void setOptNumVertices(boolean optNumVertices);1514902843;Sets the number of vertices option._By default, the number of vertices option is not set.__@param optNumVertices True, to set this option, false otherwise.;public void setOptNumVertices(boolean optNumVertices) {_		this.optNumVertices = optNumVertices__	};sets,the,number,of,vertices,option,by,default,the,number,of,vertices,option,is,not,set,param,opt,num,vertices,true,to,set,this,option,false,otherwise;public,void,set,opt,num,vertices,boolean,opt,num,vertices,this,opt,num,vertices,opt,num,vertices
IterationConfiguration -> public boolean isSolutionSetUnmanagedMemory();1444404795;Gets whether the solution set is kept in managed memory (Flink's internal way of keeping object_in serialized form) or as a simple object map._By default, the solution set runs in managed memory.__@return True, if the solution set is in unmanaged memory, false otherwise.;public boolean isSolutionSetUnmanagedMemory() {_		return this.unmanagedSolutionSet__	};gets,whether,the,solution,set,is,kept,in,managed,memory,flink,s,internal,way,of,keeping,object,in,serialized,form,or,as,a,simple,object,map,by,default,the,solution,set,runs,in,managed,memory,return,true,if,the,solution,set,is,in,unmanaged,memory,false,otherwise;public,boolean,is,solution,set,unmanaged,memory,return,this,unmanaged,solution,set
IterationConfiguration -> public boolean isSolutionSetUnmanagedMemory();1461749067;Gets whether the solution set is kept in managed memory (Flink's internal way of keeping object_in serialized form) or as a simple object map._By default, the solution set runs in managed memory.__@return True, if the solution set is in unmanaged memory, false otherwise.;public boolean isSolutionSetUnmanagedMemory() {_		return this.unmanagedSolutionSet__	};gets,whether,the,solution,set,is,kept,in,managed,memory,flink,s,internal,way,of,keeping,object,in,serialized,form,or,as,a,simple,object,map,by,default,the,solution,set,runs,in,managed,memory,return,true,if,the,solution,set,is,in,unmanaged,memory,false,otherwise;public,boolean,is,solution,set,unmanaged,memory,return,this,unmanaged,solution,set
IterationConfiguration -> public boolean isSolutionSetUnmanagedMemory();1467306272;Gets whether the solution set is kept in managed memory (Flink's internal way of keeping object_in serialized form) or as a simple object map._By default, the solution set runs in managed memory.__@return True, if the solution set is in unmanaged memory, false otherwise.;public boolean isSolutionSetUnmanagedMemory() {_		return this.unmanagedSolutionSet__	};gets,whether,the,solution,set,is,kept,in,managed,memory,flink,s,internal,way,of,keeping,object,in,serialized,form,or,as,a,simple,object,map,by,default,the,solution,set,runs,in,managed,memory,return,true,if,the,solution,set,is,in,unmanaged,memory,false,otherwise;public,boolean,is,solution,set,unmanaged,memory,return,this,unmanaged,solution,set
IterationConfiguration -> public boolean isSolutionSetUnmanagedMemory();1475684776;Gets whether the solution set is kept in managed memory (Flink's internal way of keeping object_in serialized form) or as a simple object map._By default, the solution set runs in managed memory.__@return True, if the solution set is in unmanaged memory, false otherwise.;public boolean isSolutionSetUnmanagedMemory() {_		return this.unmanagedSolutionSet__	};gets,whether,the,solution,set,is,kept,in,managed,memory,flink,s,internal,way,of,keeping,object,in,serialized,form,or,as,a,simple,object,map,by,default,the,solution,set,runs,in,managed,memory,return,true,if,the,solution,set,is,in,unmanaged,memory,false,otherwise;public,boolean,is,solution,set,unmanaged,memory,return,this,unmanaged,solution,set
IterationConfiguration -> public boolean isSolutionSetUnmanagedMemory();1495819075;Gets whether the solution set is kept in managed memory (Flink's internal way of keeping object_in serialized form) or as a simple object map._By default, the solution set runs in managed memory.__@return True, if the solution set is in unmanaged memory, false otherwise.;public boolean isSolutionSetUnmanagedMemory() {_		return this.unmanagedSolutionSet__	};gets,whether,the,solution,set,is,kept,in,managed,memory,flink,s,internal,way,of,keeping,object,in,serialized,form,or,as,a,simple,object,map,by,default,the,solution,set,runs,in,managed,memory,return,true,if,the,solution,set,is,in,unmanaged,memory,false,otherwise;public,boolean,is,solution,set,unmanaged,memory,return,this,unmanaged,solution,set
IterationConfiguration -> public boolean isSolutionSetUnmanagedMemory();1514902843;Gets whether the solution set is kept in managed memory (Flink's internal way of keeping object_in serialized form) or as a simple object map._By default, the solution set runs in managed memory.__@return True, if the solution set is in unmanaged memory, false otherwise.;public boolean isSolutionSetUnmanagedMemory() {_		return this.unmanagedSolutionSet__	};gets,whether,the,solution,set,is,kept,in,managed,memory,flink,s,internal,way,of,keeping,object,in,serialized,form,or,as,a,simple,object,map,by,default,the,solution,set,runs,in,managed,memory,return,true,if,the,solution,set,is,in,unmanaged,memory,false,otherwise;public,boolean,is,solution,set,unmanaged,memory,return,this,unmanaged,solution,set
IterationConfiguration -> public String getName(String defaultName);1444404795;Gets the name of the iteration._@param defaultName__@return The name of the iteration.;public String getName(String defaultName) {_		if (name != null) {_			return name_			_		}_		else {_			return defaultName__		}_	};gets,the,name,of,the,iteration,param,default,name,return,the,name,of,the,iteration;public,string,get,name,string,default,name,if,name,null,return,name,else,return,default,name
IterationConfiguration -> public String getName(String defaultName);1461749067;Gets the name of the iteration._@param defaultName__@return The name of the iteration.;public String getName(String defaultName) {_		if (name != null) {_			return name_			_		}_		else {_			return defaultName__		}_	};gets,the,name,of,the,iteration,param,default,name,return,the,name,of,the,iteration;public,string,get,name,string,default,name,if,name,null,return,name,else,return,default,name
IterationConfiguration -> public String getName(String defaultName);1467306272;Gets the name of the iteration._@param defaultName__@return The name of the iteration.;public String getName(String defaultName) {_		if (name != null) {_			return name_			_		}_		else {_			return defaultName__		}_	};gets,the,name,of,the,iteration,param,default,name,return,the,name,of,the,iteration;public,string,get,name,string,default,name,if,name,null,return,name,else,return,default,name
IterationConfiguration -> public String getName(String defaultName);1475684776;Gets the name of the iteration._@param defaultName__@return The name of the iteration.;public String getName(String defaultName) {_		if (name != null) {_			return name_			_		}_		else {_			return defaultName__		}_	};gets,the,name,of,the,iteration,param,default,name,return,the,name,of,the,iteration;public,string,get,name,string,default,name,if,name,null,return,name,else,return,default,name
IterationConfiguration -> public String getName(String defaultName);1495819075;Gets the name of the iteration._@param defaultName__@return The name of the iteration.;public String getName(String defaultName) {_		if (name != null) {_			return name__		}_		else {_			return defaultName__		}_	};gets,the,name,of,the,iteration,param,default,name,return,the,name,of,the,iteration;public,string,get,name,string,default,name,if,name,null,return,name,else,return,default,name
IterationConfiguration -> public String getName(String defaultName);1514902843;Gets the name of the iteration._@param defaultName__@return The name of the iteration.;public String getName(String defaultName) {_		if (name != null) {_			return name__		}_		else {_			return defaultName__		}_	};gets,the,name,of,the,iteration,param,default,name,return,the,name,of,the,iteration;public,string,get,name,string,default,name,if,name,null,return,name,else,return,default,name
IterationConfiguration -> public int getParallelism();1444404795;Gets the iteration's parallelism.__@return The iterations parallelism, or -1, if not set.;public int getParallelism() {_		return parallelism__	};gets,the,iteration,s,parallelism,return,the,iterations,parallelism,or,1,if,not,set;public,int,get,parallelism,return,parallelism
IterationConfiguration -> public int getParallelism();1461749067;Gets the iteration's parallelism.__@return The iterations parallelism, or -1, if not set.;public int getParallelism() {_		return parallelism__	};gets,the,iteration,s,parallelism,return,the,iterations,parallelism,or,1,if,not,set;public,int,get,parallelism,return,parallelism
IterationConfiguration -> public int getParallelism();1467306272;Gets the iteration's parallelism.__@return The iterations parallelism, or -1, if not set.;public int getParallelism() {_		return parallelism__	};gets,the,iteration,s,parallelism,return,the,iterations,parallelism,or,1,if,not,set;public,int,get,parallelism,return,parallelism
IterationConfiguration -> public int getParallelism();1475684776;Gets the iteration's parallelism.__@return The iterations parallelism, or -1, if not set.;public int getParallelism() {_		return parallelism__	};gets,the,iteration,s,parallelism,return,the,iterations,parallelism,or,1,if,not,set;public,int,get,parallelism,return,parallelism
IterationConfiguration -> public int getParallelism();1495819075;Gets the iteration's parallelism.__@return The iterations parallelism, or -1, if not set.;public int getParallelism() {_		return parallelism__	};gets,the,iteration,s,parallelism,return,the,iterations,parallelism,or,1,if,not,set;public,int,get,parallelism,return,parallelism
IterationConfiguration -> public int getParallelism();1514902843;Gets the iteration's parallelism.__@return The iterations parallelism, or -1, if not set.;public int getParallelism() {_		return parallelism__	};gets,the,iteration,s,parallelism,return,the,iterations,parallelism,or,1,if,not,set;public,int,get,parallelism,return,parallelism
IterationConfiguration -> public boolean isOptNumVertices();1444404795;Gets whether the number of vertices option is set._By default, the number of vertices option is not set.__@return True, if the number of vertices option is set, false otherwise.;public boolean isOptNumVertices() {_		return optNumVertices__	};gets,whether,the,number,of,vertices,option,is,set,by,default,the,number,of,vertices,option,is,not,set,return,true,if,the,number,of,vertices,option,is,set,false,otherwise;public,boolean,is,opt,num,vertices,return,opt,num,vertices
IterationConfiguration -> public boolean isOptNumVertices();1461749067;Gets whether the number of vertices option is set._By default, the number of vertices option is not set.__@return True, if the number of vertices option is set, false otherwise.;public boolean isOptNumVertices() {_		return optNumVertices__	};gets,whether,the,number,of,vertices,option,is,set,by,default,the,number,of,vertices,option,is,not,set,return,true,if,the,number,of,vertices,option,is,set,false,otherwise;public,boolean,is,opt,num,vertices,return,opt,num,vertices
IterationConfiguration -> public boolean isOptNumVertices();1467306272;Gets whether the number of vertices option is set._By default, the number of vertices option is not set.__@return True, if the number of vertices option is set, false otherwise.;public boolean isOptNumVertices() {_		return optNumVertices__	};gets,whether,the,number,of,vertices,option,is,set,by,default,the,number,of,vertices,option,is,not,set,return,true,if,the,number,of,vertices,option,is,set,false,otherwise;public,boolean,is,opt,num,vertices,return,opt,num,vertices
IterationConfiguration -> public boolean isOptNumVertices();1475684776;Gets whether the number of vertices option is set._By default, the number of vertices option is not set.__@return True, if the number of vertices option is set, false otherwise.;public boolean isOptNumVertices() {_		return optNumVertices__	};gets,whether,the,number,of,vertices,option,is,set,by,default,the,number,of,vertices,option,is,not,set,return,true,if,the,number,of,vertices,option,is,set,false,otherwise;public,boolean,is,opt,num,vertices,return,opt,num,vertices
IterationConfiguration -> public boolean isOptNumVertices();1495819075;Gets whether the number of vertices option is set._By default, the number of vertices option is not set.__@return True, if the number of vertices option is set, false otherwise.;public boolean isOptNumVertices() {_		return optNumVertices__	};gets,whether,the,number,of,vertices,option,is,set,by,default,the,number,of,vertices,option,is,not,set,return,true,if,the,number,of,vertices,option,is,set,false,otherwise;public,boolean,is,opt,num,vertices,return,opt,num,vertices
IterationConfiguration -> public boolean isOptNumVertices();1514902843;Gets whether the number of vertices option is set._By default, the number of vertices option is not set.__@return True, if the number of vertices option is set, false otherwise.;public boolean isOptNumVertices() {_		return optNumVertices__	};gets,whether,the,number,of,vertices,option,is,set,by,default,the,number,of,vertices,option,is,not,set,return,true,if,the,number,of,vertices,option,is,set,false,otherwise;public,boolean,is,opt,num,vertices,return,opt,num,vertices
