# id;timestamp;commentText;codeText;commentWords;codeWords
TriangleListing -> public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism);1463421808;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism) {_		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triangle,listing,k,vv,ev,set,little,parallelism,int,little,parallelism,this,little,parallelism,little,parallelism,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism);1465304462;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triangle,listing,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism);1465316775;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triangle,listing,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism);1466789678;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triangle,listing,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism);1467398142;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triangle,listing,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism);1473368789;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triangle,listing,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism);1473368789;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triangle,listing,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism);1488490978;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triangle,listing,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism);1489068942;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triangle,listing,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism);1492103503;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triangle,listing,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism);1495819075;Override the parallelism of operators processing small amounts of data.__@param littleParallelism operator parallelism_@return this;public TriangleListing<K, VV, EV> setLittleParallelism(int littleParallelism) {_		Preconditions.checkArgument(littleParallelism > 0 || littleParallelism == PARALLELISM_DEFAULT,_			"The parallelism must be greater than zero.")___		this.littleParallelism = littleParallelism___		return this__	};override,the,parallelism,of,operators,processing,small,amounts,of,data,param,little,parallelism,operator,parallelism,return,this;public,triangle,listing,k,vv,ev,set,little,parallelism,int,little,parallelism,preconditions,check,argument,little,parallelism,0,little,parallelism,the,parallelism,must,be,greater,than,zero,this,little,parallelism,little,parallelism,return,this
TriangleListing -> Result -> public String toPrintableString();1489068942;Format values into a human-readable string.__@return verbose string;public String toPrintableString() {_			return "1st vertex ID: " + getVertexId0()_				+ ", 2nd vertex ID: " + getVertexId1()_				+ ", 3rd vertex ID: " + getVertexId2()__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,printable,string,return,1st,vertex,id,get,vertex,id0,2nd,vertex,id,get,vertex,id1,3rd,vertex,id,get,vertex,id2
TriangleListing -> Result -> public String toPrintableString();1492103503;Format values into a human-readable string.__@return verbose string;public String toPrintableString() {_			return "1st vertex ID: " + getVertexId0()_				+ ", 2nd vertex ID: " + getVertexId1()_				+ ", 3rd vertex ID: " + getVertexId2()__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,printable,string,return,1st,vertex,id,get,vertex,id0,2nd,vertex,id,get,vertex,id1,3rd,vertex,id,get,vertex,id2
TriangleListing -> Result -> public String toPrintableString();1495819075;Format values into a human-readable string.__@return verbose string;public String toPrintableString() {_			return "1st vertex ID: " + getVertexId0()_				+ ", 2nd vertex ID: " + getVertexId1()_				+ ", 3rd vertex ID: " + getVertexId2()__		};format,values,into,a,human,readable,string,return,verbose,string;public,string,to,printable,string,return,1st,vertex,id,get,vertex,id0,2nd,vertex,id,get,vertex,id1,3rd,vertex,id,get,vertex,id2
TriangleListing -> public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices);1463421808;Normalize the triangle listing such that for each result (K0, K1, K2)_the vertex IDs are sorted K0 < K1 < K2.__@param sortTriangleVertices whether to output each triangle's vertices in sorted order_@return this;public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices) {_		this.sortTriangleVertices = sortTriangleVertices___		return this__	};normalize,the,triangle,listing,such,that,for,each,result,k0,k1,k2,the,vertex,ids,are,sorted,k0,k1,k2,param,sort,triangle,vertices,whether,to,output,each,triangle,s,vertices,in,sorted,order,return,this;public,triangle,listing,k,vv,ev,set,sort,triangle,vertices,boolean,sort,triangle,vertices,this,sort,triangle,vertices,sort,triangle,vertices,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices);1465304462;Normalize the triangle listing such that for each result (K0, K1, K2)_the vertex IDs are sorted K0 < K1 < K2.__@param sortTriangleVertices whether to output each triangle's vertices in sorted order_@return this;public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices) {_		this.sortTriangleVertices = sortTriangleVertices___		return this__	};normalize,the,triangle,listing,such,that,for,each,result,k0,k1,k2,the,vertex,ids,are,sorted,k0,k1,k2,param,sort,triangle,vertices,whether,to,output,each,triangle,s,vertices,in,sorted,order,return,this;public,triangle,listing,k,vv,ev,set,sort,triangle,vertices,boolean,sort,triangle,vertices,this,sort,triangle,vertices,sort,triangle,vertices,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices);1465316775;Normalize the triangle listing such that for each result (K0, K1, K2)_the vertex IDs are sorted K0 < K1 < K2.__@param sortTriangleVertices whether to output each triangle's vertices in sorted order_@return this;public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices) {_		this.sortTriangleVertices = sortTriangleVertices___		return this__	};normalize,the,triangle,listing,such,that,for,each,result,k0,k1,k2,the,vertex,ids,are,sorted,k0,k1,k2,param,sort,triangle,vertices,whether,to,output,each,triangle,s,vertices,in,sorted,order,return,this;public,triangle,listing,k,vv,ev,set,sort,triangle,vertices,boolean,sort,triangle,vertices,this,sort,triangle,vertices,sort,triangle,vertices,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices);1466789678;Normalize the triangle listing such that for each result (K0, K1, K2)_the vertex IDs are sorted K0 < K1 < K2.__@param sortTriangleVertices whether to output each triangle's vertices in sorted order_@return this;public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices) {_		this.sortTriangleVertices = sortTriangleVertices___		return this__	};normalize,the,triangle,listing,such,that,for,each,result,k0,k1,k2,the,vertex,ids,are,sorted,k0,k1,k2,param,sort,triangle,vertices,whether,to,output,each,triangle,s,vertices,in,sorted,order,return,this;public,triangle,listing,k,vv,ev,set,sort,triangle,vertices,boolean,sort,triangle,vertices,this,sort,triangle,vertices,sort,triangle,vertices,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices);1467398142;Normalize the triangle listing such that for each result (K0, K1, K2)_the vertex IDs are sorted K0 < K1 < K2.__@param sortTriangleVertices whether to output each triangle's vertices in sorted order_@return this;public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices) {_		this.sortTriangleVertices.set(sortTriangleVertices)___		return this__	};normalize,the,triangle,listing,such,that,for,each,result,k0,k1,k2,the,vertex,ids,are,sorted,k0,k1,k2,param,sort,triangle,vertices,whether,to,output,each,triangle,s,vertices,in,sorted,order,return,this;public,triangle,listing,k,vv,ev,set,sort,triangle,vertices,boolean,sort,triangle,vertices,this,sort,triangle,vertices,set,sort,triangle,vertices,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices);1473368789;Normalize the triangle listing such that for each result (K0, K1, K2)_the vertex IDs are sorted K0 < K1 < K2.__@param sortTriangleVertices whether to output each triangle's vertices in sorted order_@return this;public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices) {_		this.sortTriangleVertices.set(sortTriangleVertices)___		return this__	};normalize,the,triangle,listing,such,that,for,each,result,k0,k1,k2,the,vertex,ids,are,sorted,k0,k1,k2,param,sort,triangle,vertices,whether,to,output,each,triangle,s,vertices,in,sorted,order,return,this;public,triangle,listing,k,vv,ev,set,sort,triangle,vertices,boolean,sort,triangle,vertices,this,sort,triangle,vertices,set,sort,triangle,vertices,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices);1473368789;Normalize the triangle listing such that for each result (K0, K1, K2)_the vertex IDs are sorted K0 < K1 < K2.__@param sortTriangleVertices whether to output each triangle's vertices in sorted order_@return this;public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices) {_		this.sortTriangleVertices.set(sortTriangleVertices)___		return this__	};normalize,the,triangle,listing,such,that,for,each,result,k0,k1,k2,the,vertex,ids,are,sorted,k0,k1,k2,param,sort,triangle,vertices,whether,to,output,each,triangle,s,vertices,in,sorted,order,return,this;public,triangle,listing,k,vv,ev,set,sort,triangle,vertices,boolean,sort,triangle,vertices,this,sort,triangle,vertices,set,sort,triangle,vertices,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices);1488490978;Normalize the triangle listing such that for each result (K0, K1, K2)_the vertex IDs are sorted K0 < K1 < K2.__@param sortTriangleVertices whether to output each triangle's vertices in sorted order_@return this;public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices) {_		this.sortTriangleVertices.set(sortTriangleVertices)___		return this__	};normalize,the,triangle,listing,such,that,for,each,result,k0,k1,k2,the,vertex,ids,are,sorted,k0,k1,k2,param,sort,triangle,vertices,whether,to,output,each,triangle,s,vertices,in,sorted,order,return,this;public,triangle,listing,k,vv,ev,set,sort,triangle,vertices,boolean,sort,triangle,vertices,this,sort,triangle,vertices,set,sort,triangle,vertices,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices);1489068942;Normalize the triangle listing such that for each result (K0, K1, K2)_the vertex IDs are sorted K0 < K1 < K2.__@param sortTriangleVertices whether to output each triangle's vertices in sorted order_@return this;public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices) {_		this.sortTriangleVertices.set(sortTriangleVertices)___		return this__	};normalize,the,triangle,listing,such,that,for,each,result,k0,k1,k2,the,vertex,ids,are,sorted,k0,k1,k2,param,sort,triangle,vertices,whether,to,output,each,triangle,s,vertices,in,sorted,order,return,this;public,triangle,listing,k,vv,ev,set,sort,triangle,vertices,boolean,sort,triangle,vertices,this,sort,triangle,vertices,set,sort,triangle,vertices,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices);1492103503;Normalize the triangle listing such that for each result (K0, K1, K2)_the vertex IDs are sorted K0 < K1 < K2.__@param sortTriangleVertices whether to output each triangle's vertices in sorted order_@return this;public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices) {_		this.sortTriangleVertices.set(sortTriangleVertices)___		return this__	};normalize,the,triangle,listing,such,that,for,each,result,k0,k1,k2,the,vertex,ids,are,sorted,k0,k1,k2,param,sort,triangle,vertices,whether,to,output,each,triangle,s,vertices,in,sorted,order,return,this;public,triangle,listing,k,vv,ev,set,sort,triangle,vertices,boolean,sort,triangle,vertices,this,sort,triangle,vertices,set,sort,triangle,vertices,return,this
TriangleListing -> public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices);1495819075;Normalize the triangle listing such that for each result (K0, K1, K2)_the vertex IDs are sorted K0 < K1 < K2.__@param sortTriangleVertices whether to output each triangle's vertices in sorted order_@return this;public TriangleListing<K, VV, EV> setSortTriangleVertices(boolean sortTriangleVertices) {_		this.sortTriangleVertices.set(sortTriangleVertices)___		return this__	};normalize,the,triangle,listing,such,that,for,each,result,k0,k1,k2,the,vertex,ids,are,sorted,k0,k1,k2,param,sort,triangle,vertices,whether,to,output,each,triangle,s,vertices,in,sorted,order,return,this;public,triangle,listing,k,vv,ev,set,sort,triangle,vertices,boolean,sort,triangle,vertices,this,sort,triangle,vertices,set,sort,triangle,vertices,return,this
