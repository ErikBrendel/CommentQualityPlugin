commented;modifiers;parameterAmount;loc;comment;code
false;;2;5;;void set(K target, Collector<Tuple2<K, Either<NullValue, Message>>> collector) {     this.out = collector.     this.outValue = new Tuple2<>().     outValue.f0 = target. }
true;public,abstract;1;1;/**  * Combines messages sent from different vertices to a target vertex.  * Implementing this method might reduce communication costs during a vertex-centric  * iteration.  *  * @param messages the input messages to combine  * @throws Exception  */ ;/**  * Combines messages sent from different vertices to a target vertex.  * Implementing this method might reduce communication costs during a vertex-centric  * iteration.  *  * @param messages the input messages to combine  * @throws Exception  */ public abstract void combineMessages(MessageIterator<Message> messages) throws Exception.
true;public,final;1;4;/**  * Sends the combined message to the target vertex.  *  * @param combinedMessage  * @throws Exception  */ ;/**  * Sends the combined message to the target vertex.  *  * @param combinedMessage  * @throws Exception  */ public final void sendCombinedMessage(Message combinedMessage) {     outValue.f1 = Either.Right(combinedMessage).     out.collect(outValue). }
