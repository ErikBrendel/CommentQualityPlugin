commented;modifiers;parameterAmount;loc;comment;code
false;public;1;13;;@Override public void open(Configuration parameters) throws Exception {     this.fun = InterpreterUtils.deserializeFunction(getRuntimeContext(), this.serFun).     if (this.fun instanceof RichFunction) {         try {             final RichFunction winFun = (RichFunction) this.fun.             winFun.setRuntimeContext(getRuntimeContext()).             winFun.open(parameters).         } catch (PyException pe) {             throw AbstractPythonUDF.createAndLogException(pe, LOG).         }     } }
false;public;1;10;;@Override public void run(SourceContext<Object> ctx) throws Exception {     try {         while (isRunning && this.fun.hasNext()) {             ctx.collect(this.fun.next()).         }     } catch (PyException pe) {         throw AbstractPythonUDF.createAndLogException(pe, LOG).     } }
false;public;0;10;;@Override public void close() throws Exception {     if (this.fun instanceof RichFunction) {         try {             ((RichFunction) this.fun).close().         } catch (PyException pe) {             throw AbstractPythonUDF.createAndLogException(pe, LOG).         }     } }
false;public;0;4;;@Override public void cancel() {     isRunning = false. }
