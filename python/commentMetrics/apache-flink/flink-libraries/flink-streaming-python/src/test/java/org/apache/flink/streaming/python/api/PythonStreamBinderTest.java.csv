commented;modifiers;parameterAmount;loc;comment;code
false;private,static;0;4;;private static Path getBaseTestPythonDir() {     FileSystem fs = new LocalFileSystem().     return new Path(fs.getWorkingDirectory(), "src/test/python/org/apache/flink/streaming/python/api"). }
false;private,static;0;3;;private static Path findUtilsModule() {     return new Path(getBaseTestPythonDir(), "utils"). }
false;private,static;0;13;;private static List<String> findTestFiles() throws Exception {     List<String> files = new ArrayList<>().     FileSystem fs = FileSystem.getLocalFileSystem().     FileStatus[] status = fs.listStatus(getBaseTestPythonDir()).     for (FileStatus f : status) {         Path filePath = f.getPath().         String fileName = filePath.getName().         if (fileName.startsWith("test_") && fileName.endsWith(".py")) {             files.add(filePath.getPath()).         }     }     return files. }
false;public;0;28;;@Test public void testProgram() throws Exception {     Path testEntryPoint = new Path(getBaseTestPythonDir(), "run_all_tests.py").     List<String> testFiles = findTestFiles().     Preconditions.checkState(testFiles.size() > 0, "No test files were found in {}.", getBaseTestPythonDir()).     String[] arguments = new String[1 + 1 + testFiles.size()].     arguments[0] = testEntryPoint.getPath().     arguments[1] = findUtilsModule().getPath().     int index = 2.     for (String testFile : testFiles) {         arguments[index] = testFile.         index++.     }     try {         new PythonStreamBinder(new Configuration()).runPlan(arguments).     } catch (PyException e) {         if (e.getCause() instanceof JobExecutionException) {             // JobExecutionExceptions are wrapped again by the jython interpreter resulting in horrible stacktraces             throw (JobExecutionException) e.getCause().         } else {             // probably caused by some issue in the main script itself             throw e.         }     } }
