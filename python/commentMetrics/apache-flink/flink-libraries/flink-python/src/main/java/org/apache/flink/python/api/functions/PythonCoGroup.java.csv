commented;modifiers;parameterAmount;loc;comment;code
true;public;1;5;/**  * Opens this function.  *  * @param config configuration  * @throws IOException  */ ;/**  * Opens this function.  *  * @param config configuration  * @throws IOException  */ @Override public void open(Configuration config) throws IOException {     streamer.open().     streamer.sendBroadCastVariables(config). }
true;public,final;3;4;/**  * Calls the external python function.  *  * @param first  * @param second  * @param out collector  * @throws IOException  */ ;/**  * Calls the external python function.  *  * @param first  * @param second  * @param out collector  * @throws IOException  */ @Override public final void coGroup(Iterable<IN1> first, Iterable<IN2> second, Collector<OUT> out) throws Exception {     streamer.streamBufferWithGroups(first.iterator(), second.iterator(), out). }
true;public;0;4;/**  * Closes this function.  *  * @throws IOException  */ ;/**  * Closes this function.  *  * @throws IOException  */ @Override public void close() throws IOException {     streamer.close(). }
false;public;0;4;;@Override public TypeInformation<OUT> getProducedType() {     return typeInformation. }
