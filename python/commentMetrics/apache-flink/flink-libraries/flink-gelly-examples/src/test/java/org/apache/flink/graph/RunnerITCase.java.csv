commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testWithoutAlgorithm() throws Exception {     String expected = "Select an algorithm to view usage:".     thrown.expect(ProgramParametrizationException.class).     thrown.expectMessage(expected).     expectedOutput(new String[] {}, expected). }
false;public;0;9;;@Test public void testWithUnknownAlgorithm() throws Exception {     String expected = "Unknown algorithm name: NotAnAlgorithm".     thrown.expect(ProgramParametrizationException.class).     thrown.expectMessage(expected).     expectedOutput(new String[] { "--algorithm", "NotAnAlgorithm" }, expected). }
false;public;0;9;;@Test public void testAlgorithmUsage() throws Exception {     String expected = "Pass-through of the graph's edge list.".     thrown.expect(ProgramParametrizationException.class).     thrown.expectMessage(expected).     expectedOutput(new String[] { "--algorithm", "EdgeList" }, expected). }
false;public;0;12;;@Test public void testWithoutInput() throws Exception {     String expected = "No input given".     thrown.expect(ProgramParametrizationException.class).     thrown.expectMessage(expected).     expectedOutput(new String[] { "--algorithm", "EdgeList", "--output", "NotAnOutput" }, expected). }
false;public;0;12;;@Test public void testWithUnknownInput() throws Exception {     String expected = "Unknown input type: NotAnInput".     thrown.expect(ProgramParametrizationException.class).     thrown.expectMessage(expected).     expectedOutput(new String[] { "--algorithm", "EdgeList", "--input", "NotAnInput" }, expected). }
false;public;0;12;;@Test public void testWithoutOutput() throws Exception {     String expected = "No output given".     thrown.expect(ProgramParametrizationException.class).     thrown.expectMessage(expected).     expectedOutput(new String[] { "--algorithm", "EdgeList", "--input", "RMatGraph" }, expected). }
false;public;0;13;;@Test public void testWithUnknownOutput() throws Exception {     String expected = "Unknown output type: NotAnOutput".     thrown.expect(ProgramParametrizationException.class).     thrown.expectMessage(expected).     expectedOutput(new String[] { "--algorithm", "EdgeList", "--input", "RMatGraph", "--output", "NotAnOutput" }, expected). }
