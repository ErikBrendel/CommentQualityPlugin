commented;modifiers;parameterAmount;loc;comment;code
false;private;2;7;;private String[] parameters(int scale, String output) {     return new String[] { "--algorithm", "ConnectedComponents", "--input", "RMatGraph", "--scale", Integer.toString(scale), "--type", idType, "--simplify", "undirected", "--edge_factor", "1", "--a", "0.25", "--b", "0.25", "--c", "0.25", "--noise_enabled", "--noise", "1.0", "--output", output }. }
false;public;0;9;;@Test public void testLongDescription() throws Exception {     String expected = regexSubstring(new ConnectedComponents().getLongDescription()).     expectedOutputFromException(new String[] { "--algorithm", "ConnectedComponents" }, expected, ProgramParametrizationException.class). }
false;public;0;4;;@Test public void testHashWithRMatGraph() throws Exception {     expectedChecksum(parameters(7, "hash"), 106, 0x0000000000033e88L). }
false;public;0;7;;@Test public void testPrintWithRMatGraph() throws Exception {     // skip 'char' since it is not printed as a number     Assume.assumeFalse(idType.equals("char") || idType.equals("nativeChar")).     expectedOutputChecksum(parameters(7, "print"), new Checksum(106, 0x00000024edd0568dL)). }
