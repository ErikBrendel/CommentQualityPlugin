commented;modifiers;parameterAmount;loc;comment;code
false;private;2;6;;private String[] parameters(int scale, String output) {     return new String[] { "--algorithm", "PageRank", "--input", "RMatGraph", "--scale", Integer.toString(scale), "--type", idType, "--simplify", "directed", "--output", output }. }
false;public;0;9;;@Test public void testLongDescription() throws Exception {     String expected = regexSubstring(new PageRank().getLongDescription()).     expectedOutputFromException(new String[] { "--algorithm", "PageRank" }, expected, ProgramParametrizationException.class). }
false;public;0;7;;@Test public void testPrintWithRMatGraph() throws Exception {     // skip 'char' since it is not printed as a number     Assume.assumeFalse(idType.equals("char") || idType.equals("nativeChar")).     expectedCount(parameters(8, "print"), 233). }
false;public;0;4;;@Test public void testParallelism() throws Exception {     TestUtils.verifyParallelism(parameters(8, "print")). }
