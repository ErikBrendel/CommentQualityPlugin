commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getShortDescription() {     return "similarity score as fraction of common neighbors". }
false;public;0;12;;@Override public String getLongDescription() {     return WordUtils.wrap(new StrBuilder().appendln("Jaccard Index measures the similarity between vertex neighborhoods and " + "is computed as the number of shared neighbors divided by the number of " + "distinct neighbors. Scores range from 0.0 (no shared neighbors) to 1.0 (all " + "neighbors are shared).").appendNewLine().append("The result contains two vertex IDs, the number of shared neighbors, and " + "the number of distinct neighbors.").toString(), 80). }
false;public;1;9;;@Override public DataSet plan(Graph<K, VV, EV> graph) throws Exception {     return graph.run(new org.apache.flink.graph.library.similarity.JaccardIndex<K, VV, EV>().setMinimumScore(minNumerator.getValue().intValue(), minDenominator.getValue().intValue()).setMaximumScore(maxNumerator.getValue().intValue(), maxDenominator.getValue().intValue()).setMirrorResults(mirrorResults.getValue()).setParallelism(parallelism.getValue().intValue())). }
