commented;modifiers;parameterAmount;loc;comment;code
false;public;1;24;;@Override public void run(SourceContext<TtlStateUpdate> ctx) throws Exception {     Random random = new Random().     long elementsBeforeSleep = sleepAfterElements.     while (running) {         for (int i = 0. i < sleepAfterElements. i++) {             synchronized (ctx.getCheckpointLock()) {                 Map<String, Object> updates = TtlStateVerifier.VERIFIERS.stream().collect(Collectors.toMap(TtlStateVerifier::getId, TtlStateVerifier::generateRandomUpdate)).                 ctx.collect(new TtlStateUpdate(random.nextInt(maxKey), updates)).             }         }         if (sleepTime > 0) {             if (elementsBeforeSleep == 1) {                 elementsBeforeSleep = sleepAfterElements.                 long rnd = sleepTime < Integer.MAX_VALUE ? random.nextInt((int) sleepTime) : 0L.                 Thread.sleep(rnd + sleepTime).             } else if (elementsBeforeSleep > 1) {                 --elementsBeforeSleep.             }         }     } }
false;public;0;4;;@Override public void cancel() {     running = false. }
