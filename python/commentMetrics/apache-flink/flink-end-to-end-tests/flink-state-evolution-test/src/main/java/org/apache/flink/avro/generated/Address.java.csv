commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;1;;public static org.apache.avro.Schema getClassSchema() {     return SCHEMA$. }
true;public,static;0;3;/**  * Return the BinaryMessageDecoder instance used by this class.  */ ;/**  * Return the BinaryMessageDecoder instance used by this class.  */ public static BinaryMessageDecoder<Address> getDecoder() {     return DECODER. }
true;public,static;1;3;/**  * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.  * @param resolver a {@link SchemaStore} used to find schemas by fingerprint  */ ;/**  * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.  * @param resolver a {@link SchemaStore} used to find schemas by fingerprint  */ public static BinaryMessageDecoder<Address> createDecoder(SchemaStore resolver) {     return new BinaryMessageDecoder<Address>(MODEL$, SCHEMA$, resolver). }
true;public;0;3;/**  * Serializes this Address to a ByteBuffer.  */ ;/**  * Serializes this Address to a ByteBuffer.  */ public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {     return ENCODER.encode(this). }
true;public,static;1;4;/**  * Deserializes a Address from a ByteBuffer.  */ ;/**  * Deserializes a Address from a ByteBuffer.  */ public static Address fromByteBuffer(java.nio.ByteBuffer b) throws java.io.IOException {     return DECODER.decode(b). }
false;public;0;1;;public org.apache.avro.Schema getSchema() {     return SCHEMA$. }
true;public;1;11;// Used by DatumWriter.  Applications should not call. ;// Used by DatumWriter.  Applications should not call. public java.lang.Object get(int field$) {     switch(field$) {         case 0:             return num.         case 1:             return street.         case 2:             return city.         case 3:             return state.         case 4:             return zip.         case 5:             return appno.         default:             throw new org.apache.avro.AvroRuntimeException("Bad index").     } }
true;public;2;12;// Used by DatumReader.  Applications should not call. ;// Used by DatumReader.  Applications should not call. @SuppressWarnings(value = "unchecked") public void put(int field$, java.lang.Object value$) {     switch(field$) {         case 0:             num = (java.lang.Integer) value$.             break.         case 1:             street = (java.lang.String) value$.             break.         case 2:             city = (java.lang.String) value$.             break.         case 3:             state = (java.lang.String) value$.             break.         case 4:             zip = (java.lang.String) value$.             break.         case 5:             appno = (java.lang.String) value$.             break.         default:             throw new org.apache.avro.AvroRuntimeException("Bad index").     } }
true;public;0;3;/**  * Gets the value of the 'num' field.  * @return The value of the 'num' field.  */ ;/**  * Gets the value of the 'num' field.  * @return The value of the 'num' field.  */ public java.lang.Integer getNum() {     return num. }
true;public;1;3;/**  * Sets the value of the 'num' field.  * @param value the value to set.  */ ;/**  * Sets the value of the 'num' field.  * @param value the value to set.  */ public void setNum(java.lang.Integer value) {     this.num = value. }
true;public;0;3;/**  * Gets the value of the 'street' field.  * @return The value of the 'street' field.  */ ;/**  * Gets the value of the 'street' field.  * @return The value of the 'street' field.  */ public java.lang.String getStreet() {     return street. }
true;public;1;3;/**  * Sets the value of the 'street' field.  * @param value the value to set.  */ ;/**  * Sets the value of the 'street' field.  * @param value the value to set.  */ public void setStreet(java.lang.String value) {     this.street = value. }
true;public;0;3;/**  * Gets the value of the 'city' field.  * @return The value of the 'city' field.  */ ;/**  * Gets the value of the 'city' field.  * @return The value of the 'city' field.  */ public java.lang.String getCity() {     return city. }
true;public;1;3;/**  * Sets the value of the 'city' field.  * @param value the value to set.  */ ;/**  * Sets the value of the 'city' field.  * @param value the value to set.  */ public void setCity(java.lang.String value) {     this.city = value. }
true;public;0;3;/**  * Gets the value of the 'state' field.  * @return The value of the 'state' field.  */ ;/**  * Gets the value of the 'state' field.  * @return The value of the 'state' field.  */ public java.lang.String getState() {     return state. }
true;public;1;3;/**  * Sets the value of the 'state' field.  * @param value the value to set.  */ ;/**  * Sets the value of the 'state' field.  * @param value the value to set.  */ public void setState(java.lang.String value) {     this.state = value. }
true;public;0;3;/**  * Gets the value of the 'zip' field.  * @return The value of the 'zip' field.  */ ;/**  * Gets the value of the 'zip' field.  * @return The value of the 'zip' field.  */ public java.lang.String getZip() {     return zip. }
true;public;1;3;/**  * Sets the value of the 'zip' field.  * @param value the value to set.  */ ;/**  * Sets the value of the 'zip' field.  * @param value the value to set.  */ public void setZip(java.lang.String value) {     this.zip = value. }
true;public;0;3;/**  * Gets the value of the 'appno' field.  * @return The value of the 'appno' field.  */ ;/**  * Gets the value of the 'appno' field.  * @return The value of the 'appno' field.  */ public java.lang.String getAppno() {     return appno. }
true;public;1;3;/**  * Sets the value of the 'appno' field.  * @param value the value to set.  */ ;/**  * Sets the value of the 'appno' field.  * @param value the value to set.  */ public void setAppno(java.lang.String value) {     this.appno = value. }
true;public,static;0;3;/**  * Creates a new Address RecordBuilder.  * @return A new Address RecordBuilder  */ ;/**  * Creates a new Address RecordBuilder.  * @return A new Address RecordBuilder  */ public static org.apache.flink.avro.generated.Address.Builder newBuilder() {     return new org.apache.flink.avro.generated.Address.Builder(). }
true;public,static;1;3;/**  * Creates a new Address RecordBuilder by copying an existing Builder.  * @param other The existing builder to copy.  * @return A new Address RecordBuilder  */ ;/**  * Creates a new Address RecordBuilder by copying an existing Builder.  * @param other The existing builder to copy.  * @return A new Address RecordBuilder  */ public static org.apache.flink.avro.generated.Address.Builder newBuilder(org.apache.flink.avro.generated.Address.Builder other) {     return new org.apache.flink.avro.generated.Address.Builder(other). }
true;public,static;1;3;/**  * Creates a new Address RecordBuilder by copying an existing Address instance.  * @param other The existing instance to copy.  * @return A new Address RecordBuilder  */ ;/**  * Creates a new Address RecordBuilder by copying an existing Address instance.  * @param other The existing instance to copy.  * @return A new Address RecordBuilder  */ public static org.apache.flink.avro.generated.Address.Builder newBuilder(org.apache.flink.avro.generated.Address other) {     return new org.apache.flink.avro.generated.Address.Builder(other). }
true;public;0;3;/**  * Gets the value of the 'num' field.  * @return The value.  */ ;/**  * Gets the value of the 'num' field.  * @return The value.  */ public java.lang.Integer getNum() {     return num. }
true;public;1;6;/**  * Sets the value of the 'num' field.  * @param value The value of 'num'.  * @return This builder.  */ ;/**  * Sets the value of the 'num' field.  * @param value The value of 'num'.  * @return This builder.  */ public org.apache.flink.avro.generated.Address.Builder setNum(int value) {     validate(fields()[0], value).     this.num = value.     fieldSetFlags()[0] = true.     return this. }
true;public;0;3;/**  * Checks whether the 'num' field has been set.  * @return True if the 'num' field has been set, false otherwise.  */ ;/**  * Checks whether the 'num' field has been set.  * @return True if the 'num' field has been set, false otherwise.  */ public boolean hasNum() {     return fieldSetFlags()[0]. }
true;public;0;4;/**  * Clears the value of the 'num' field.  * @return This builder.  */ ;/**  * Clears the value of the 'num' field.  * @return This builder.  */ public org.apache.flink.avro.generated.Address.Builder clearNum() {     fieldSetFlags()[0] = false.     return this. }
true;public;0;3;/**  * Gets the value of the 'street' field.  * @return The value.  */ ;/**  * Gets the value of the 'street' field.  * @return The value.  */ public java.lang.String getStreet() {     return street. }
true;public;1;6;/**  * Sets the value of the 'street' field.  * @param value The value of 'street'.  * @return This builder.  */ ;/**  * Sets the value of the 'street' field.  * @param value The value of 'street'.  * @return This builder.  */ public org.apache.flink.avro.generated.Address.Builder setStreet(java.lang.String value) {     validate(fields()[1], value).     this.street = value.     fieldSetFlags()[1] = true.     return this. }
true;public;0;3;/**  * Checks whether the 'street' field has been set.  * @return True if the 'street' field has been set, false otherwise.  */ ;/**  * Checks whether the 'street' field has been set.  * @return True if the 'street' field has been set, false otherwise.  */ public boolean hasStreet() {     return fieldSetFlags()[1]. }
true;public;0;5;/**  * Clears the value of the 'street' field.  * @return This builder.  */ ;/**  * Clears the value of the 'street' field.  * @return This builder.  */ public org.apache.flink.avro.generated.Address.Builder clearStreet() {     street = null.     fieldSetFlags()[1] = false.     return this. }
true;public;0;3;/**  * Gets the value of the 'city' field.  * @return The value.  */ ;/**  * Gets the value of the 'city' field.  * @return The value.  */ public java.lang.String getCity() {     return city. }
true;public;1;6;/**  * Sets the value of the 'city' field.  * @param value The value of 'city'.  * @return This builder.  */ ;/**  * Sets the value of the 'city' field.  * @param value The value of 'city'.  * @return This builder.  */ public org.apache.flink.avro.generated.Address.Builder setCity(java.lang.String value) {     validate(fields()[2], value).     this.city = value.     fieldSetFlags()[2] = true.     return this. }
true;public;0;3;/**  * Checks whether the 'city' field has been set.  * @return True if the 'city' field has been set, false otherwise.  */ ;/**  * Checks whether the 'city' field has been set.  * @return True if the 'city' field has been set, false otherwise.  */ public boolean hasCity() {     return fieldSetFlags()[2]. }
true;public;0;5;/**  * Clears the value of the 'city' field.  * @return This builder.  */ ;/**  * Clears the value of the 'city' field.  * @return This builder.  */ public org.apache.flink.avro.generated.Address.Builder clearCity() {     city = null.     fieldSetFlags()[2] = false.     return this. }
true;public;0;3;/**  * Gets the value of the 'state' field.  * @return The value.  */ ;/**  * Gets the value of the 'state' field.  * @return The value.  */ public java.lang.String getState() {     return state. }
true;public;1;6;/**  * Sets the value of the 'state' field.  * @param value The value of 'state'.  * @return This builder.  */ ;/**  * Sets the value of the 'state' field.  * @param value The value of 'state'.  * @return This builder.  */ public org.apache.flink.avro.generated.Address.Builder setState(java.lang.String value) {     validate(fields()[3], value).     this.state = value.     fieldSetFlags()[3] = true.     return this. }
true;public;0;3;/**  * Checks whether the 'state' field has been set.  * @return True if the 'state' field has been set, false otherwise.  */ ;/**  * Checks whether the 'state' field has been set.  * @return True if the 'state' field has been set, false otherwise.  */ public boolean hasState() {     return fieldSetFlags()[3]. }
true;public;0;5;/**  * Clears the value of the 'state' field.  * @return This builder.  */ ;/**  * Clears the value of the 'state' field.  * @return This builder.  */ public org.apache.flink.avro.generated.Address.Builder clearState() {     state = null.     fieldSetFlags()[3] = false.     return this. }
true;public;0;3;/**  * Gets the value of the 'zip' field.  * @return The value.  */ ;/**  * Gets the value of the 'zip' field.  * @return The value.  */ public java.lang.String getZip() {     return zip. }
true;public;1;6;/**  * Sets the value of the 'zip' field.  * @param value The value of 'zip'.  * @return This builder.  */ ;/**  * Sets the value of the 'zip' field.  * @param value The value of 'zip'.  * @return This builder.  */ public org.apache.flink.avro.generated.Address.Builder setZip(java.lang.String value) {     validate(fields()[4], value).     this.zip = value.     fieldSetFlags()[4] = true.     return this. }
true;public;0;3;/**  * Checks whether the 'zip' field has been set.  * @return True if the 'zip' field has been set, false otherwise.  */ ;/**  * Checks whether the 'zip' field has been set.  * @return True if the 'zip' field has been set, false otherwise.  */ public boolean hasZip() {     return fieldSetFlags()[4]. }
true;public;0;5;/**  * Clears the value of the 'zip' field.  * @return This builder.  */ ;/**  * Clears the value of the 'zip' field.  * @return This builder.  */ public org.apache.flink.avro.generated.Address.Builder clearZip() {     zip = null.     fieldSetFlags()[4] = false.     return this. }
true;public;0;3;/**  * Gets the value of the 'appno' field.  * @return The value.  */ ;/**  * Gets the value of the 'appno' field.  * @return The value.  */ public java.lang.String getAppno() {     return appno. }
true;public;1;6;/**  * Sets the value of the 'appno' field.  * @param value The value of 'appno'.  * @return This builder.  */ ;/**  * Sets the value of the 'appno' field.  * @param value The value of 'appno'.  * @return This builder.  */ public org.apache.flink.avro.generated.Address.Builder setAppno(java.lang.String value) {     validate(fields()[5], value).     this.appno = value.     fieldSetFlags()[5] = true.     return this. }
true;public;0;3;/**  * Checks whether the 'appno' field has been set.  * @return True if the 'appno' field has been set, false otherwise.  */ ;/**  * Checks whether the 'appno' field has been set.  * @return True if the 'appno' field has been set, false otherwise.  */ public boolean hasAppno() {     return fieldSetFlags()[5]. }
true;public;0;5;/**  * Clears the value of the 'appno' field.  * @return This builder.  */ ;/**  * Clears the value of the 'appno' field.  * @return This builder.  */ public org.apache.flink.avro.generated.Address.Builder clearAppno() {     appno = null.     fieldSetFlags()[5] = false.     return this. }
false;public;0;16;;@Override @SuppressWarnings("unchecked") public Address build() {     try {         Address record = new Address().         record.num = fieldSetFlags()[0] ? this.num : (java.lang.Integer) defaultValue(fields()[0]).         record.street = fieldSetFlags()[1] ? this.street : (java.lang.String) defaultValue(fields()[1]).         record.city = fieldSetFlags()[2] ? this.city : (java.lang.String) defaultValue(fields()[2]).         record.state = fieldSetFlags()[3] ? this.state : (java.lang.String) defaultValue(fields()[3]).         record.zip = fieldSetFlags()[4] ? this.zip : (java.lang.String) defaultValue(fields()[4]).         record.appno = fieldSetFlags()[5] ? this.appno : (java.lang.String) defaultValue(fields()[5]).         return record.     } catch (java.lang.Exception e) {         throw new org.apache.avro.AvroRuntimeException(e).     } }
false;public;1;4;;@Override public void writeExternal(java.io.ObjectOutput out) throws java.io.IOException {     WRITER$.write(this, SpecificData.getEncoder(out)). }
false;public;1;4;;@Override public void readExternal(java.io.ObjectInput in) throws java.io.IOException {     READER$.read(this, SpecificData.getDecoder(in)). }
