commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;20;;@Override protected R handleRequest(HandlerRequest<EmptyRequestBody, M> request, AccessExecutionVertex executionVertex) throws RestHandlerException {     final Integer attemptNumber = request.getPathParameter(SubtaskAttemptPathParameter.class).     final AccessExecution currentAttempt = executionVertex.getCurrentExecutionAttempt().     if (attemptNumber == currentAttempt.getAttemptNumber()) {         return handleRequest(request, currentAttempt).     } else if (attemptNumber >= 0 && attemptNumber < currentAttempt.getAttemptNumber()) {         final AccessExecution execution = executionVertex.getPriorExecutionAttempt(attemptNumber).         if (execution != null) {             return handleRequest(request, execution).         } else {             throw new RestHandlerException("Attempt " + attemptNumber + " not found in subtask " + executionVertex.getTaskNameWithSubtaskIndex(), HttpResponseStatus.NOT_FOUND).         }     } else {         throw new RestHandlerException("Invalid attempt num " + attemptNumber, HttpResponseStatus.NOT_FOUND).     } }
true;protected,abstract;2;1;/**  * Called for each request after the corresponding {@link AccessExecution} has been retrieved from the  * {@link AccessExecutionVertex}.  *  * @param request   the request  * @param execution the execution  * @return the response  * @throws RestHandlerException the rest handler exception  */ ;/**  * Called for each request after the corresponding {@link AccessExecution} has been retrieved from the  * {@link AccessExecutionVertex}.  *  * @param request   the request  * @param execution the execution  * @return the response  * @throws RestHandlerException the rest handler exception  */ protected abstract R handleRequest(HandlerRequest<EmptyRequestBody, M> request, AccessExecution execution) throws RestHandlerException.
