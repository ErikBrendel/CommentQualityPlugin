commented;modifiers;parameterAmount;loc;comment;code
true;public,static;1;16;/**  * Return the configured {@link HighAvailabilityMode}.  *  * @param config The config to parse  * @return Configured recovery mode or {@link HighAvailabilityMode#NONE} if not  * configured.  */ ;/**  * Return the configured {@link HighAvailabilityMode}.  *  * @param config The config to parse  * @return Configured recovery mode or {@link HighAvailabilityMode#NONE} if not  * configured.  */ public static HighAvailabilityMode fromConfig(Configuration config) {     String haMode = config.getValue(HighAvailabilityOptions.HA_MODE).     if (haMode == null) {         return HighAvailabilityMode.NONE.     } else if (haMode.equalsIgnoreCase(ConfigConstants.DEFAULT_RECOVERY_MODE)) {         // Map old default to new default         return HighAvailabilityMode.NONE.     } else {         try {             return HighAvailabilityMode.valueOf(haMode.toUpperCase()).         } catch (IllegalArgumentException e) {             return FACTORY_CLASS.         }     } }
true;public,static;1;4;/**  * Returns true if the defined recovery mode supports high availability.  *  * @param configuration Configuration which contains the recovery mode  * @return true if high availability is supported by the recovery mode, otherwise false  */ ;/**  * Returns true if the defined recovery mode supports high availability.  *  * @param configuration Configuration which contains the recovery mode  * @return true if high availability is supported by the recovery mode, otherwise false  */ public static boolean isHighAvailabilityModeActivated(Configuration configuration) {     HighAvailabilityMode mode = fromConfig(configuration).     return mode.haActive. }
