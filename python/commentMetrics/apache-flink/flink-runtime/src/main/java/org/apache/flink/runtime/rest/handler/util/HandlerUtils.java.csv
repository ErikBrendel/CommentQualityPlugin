# id;timestamp;commentText;codeText;commentWords;codeWords
HandlerUtils -> public static void sendErrorResponse( 			ChannelHandlerContext channelHandlerContext, 			HttpRequest httpRequest, 			ErrorResponseBody errorMessage, 			HttpResponseStatus statusCode);1505859747;Sends the given error response and status code to the given channel.__@param channelHandlerContext identifying the open channel_@param httpRequest originating http request_@param errorMessage which should be sent_@param statusCode of the message to send;public static void sendErrorResponse(_			ChannelHandlerContext channelHandlerContext,_			HttpRequest httpRequest,_			ErrorResponseBody errorMessage,_			HttpResponseStatus statusCode) {__		StringWriter sw = new StringWriter()__		try {_			mapper.writeValue(sw, errorMessage)__		} catch (IOException e) {_			_			sendResponse(channelHandlerContext, httpRequest, "Internal server error. Could not map error response to JSON.", HttpResponseStatus.INTERNAL_SERVER_ERROR)__		}_		sendResponse(channelHandlerContext, httpRequest, sw.toString(), statusCode)__	};sends,the,given,error,response,and,status,code,to,the,given,channel,param,channel,handler,context,identifying,the,open,channel,param,http,request,originating,http,request,param,error,message,which,should,be,sent,param,status,code,of,the,message,to,send;public,static,void,send,error,response,channel,handler,context,channel,handler,context,http,request,http,request,error,response,body,error,message,http,response,status,status,code,string,writer,sw,new,string,writer,try,mapper,write,value,sw,error,message,catch,ioexception,e,send,response,channel,handler,context,http,request,internal,server,error,could,not,map,error,response,to,json,http,response,status,send,response,channel,handler,context,http,request,sw,to,string,status,code
HandlerUtils -> public static void sendErrorResponse( 			ChannelHandlerContext channelHandlerContext, 			HttpRequest httpRequest, 			ErrorResponseBody errorMessage, 			HttpResponseStatus statusCode);1507752418;Sends the given error response and status code to the given channel.__@param channelHandlerContext identifying the open channel_@param httpRequest originating http request_@param errorMessage which should be sent_@param statusCode of the message to send;public static void sendErrorResponse(_			ChannelHandlerContext channelHandlerContext,_			HttpRequest httpRequest,_			ErrorResponseBody errorMessage,_			HttpResponseStatus statusCode) {__		StringWriter sw = new StringWriter()__		try {_			mapper.writeValue(sw, errorMessage)__		} catch (IOException e) {_			_			LOG.error("Internal server error. Could not map error response to JSON.", e)__			sendResponse(channelHandlerContext, httpRequest, "Internal server error. Could not map error response to JSON.", HttpResponseStatus.INTERNAL_SERVER_ERROR)__		}_		sendResponse(channelHandlerContext, httpRequest, sw.toString(), statusCode)__	};sends,the,given,error,response,and,status,code,to,the,given,channel,param,channel,handler,context,identifying,the,open,channel,param,http,request,originating,http,request,param,error,message,which,should,be,sent,param,status,code,of,the,message,to,send;public,static,void,send,error,response,channel,handler,context,channel,handler,context,http,request,http,request,error,response,body,error,message,http,response,status,status,code,string,writer,sw,new,string,writer,try,mapper,write,value,sw,error,message,catch,ioexception,e,log,error,internal,server,error,could,not,map,error,response,to,json,e,send,response,channel,handler,context,http,request,internal,server,error,could,not,map,error,response,to,json,http,response,status,send,response,channel,handler,context,http,request,sw,to,string,status,code
HandlerUtils -> public static void sendErrorResponse( 			ChannelHandlerContext channelHandlerContext, 			HttpRequest httpRequest, 			ErrorResponseBody errorMessage, 			HttpResponseStatus statusCode);1509447226;Sends the given error response and status code to the given channel.__@param channelHandlerContext identifying the open channel_@param httpRequest originating http request_@param errorMessage which should be sent_@param statusCode of the message to send;public static void sendErrorResponse(_			ChannelHandlerContext channelHandlerContext,_			HttpRequest httpRequest,_			ErrorResponseBody errorMessage,_			HttpResponseStatus statusCode) {__		StringWriter sw = new StringWriter()__		try {_			mapper.writeValue(sw, errorMessage)__		} catch (IOException e) {_			_			LOG.error("Internal server error. Could not map error response to JSON.", e)__			sendResponse(channelHandlerContext, httpRequest, "Internal server error. Could not map error response to JSON.", HttpResponseStatus.INTERNAL_SERVER_ERROR)__		}_		sendResponse(channelHandlerContext, httpRequest, sw.toString(), statusCode)__	};sends,the,given,error,response,and,status,code,to,the,given,channel,param,channel,handler,context,identifying,the,open,channel,param,http,request,originating,http,request,param,error,message,which,should,be,sent,param,status,code,of,the,message,to,send;public,static,void,send,error,response,channel,handler,context,channel,handler,context,http,request,http,request,error,response,body,error,message,http,response,status,status,code,string,writer,sw,new,string,writer,try,mapper,write,value,sw,error,message,catch,ioexception,e,log,error,internal,server,error,could,not,map,error,response,to,json,e,send,response,channel,handler,context,http,request,internal,server,error,could,not,map,error,response,to,json,http,response,status,send,response,channel,handler,context,http,request,sw,to,string,status,code
HandlerUtils -> public static void sendResponse( 			@Nonnull ChannelHandlerContext channelHandlerContext, 			@Nonnull HttpRequest httpRequest, 			@Nonnull String message, 			@Nonnull HttpResponseStatus statusCode);1505859747;Sends the given response and status code to the given channel.__@param channelHandlerContext identifying the open channel_@param httpRequest originating http request_@param message which should be sent_@param statusCode of the message to send;public static void sendResponse(_			@Nonnull ChannelHandlerContext channelHandlerContext,_			@Nonnull HttpRequest httpRequest,_			@Nonnull String message,_			@Nonnull HttpResponseStatus statusCode) {_		HttpResponse response = new DefaultHttpResponse(HTTP_1_1, statusCode)___		response.headers().set(CONTENT_TYPE, "application/json")___		if (HttpHeaders.isKeepAlive(httpRequest)) {_			response.headers().set(CONNECTION, HttpHeaders.Values.KEEP_ALIVE)__		}__		byte[] buf = message.getBytes(ConfigConstants.DEFAULT_CHARSET)__		ByteBuf b = Unpooled.copiedBuffer(buf)__		HttpHeaders.setContentLength(response, buf.length)___		_		channelHandlerContext.write(response)___		channelHandlerContext.write(b)___		ChannelFuture lastContentFuture = channelHandlerContext.writeAndFlush(LastHttpContent.EMPTY_LAST_CONTENT)___		_		if (!HttpHeaders.isKeepAlive(httpRequest)) {_			lastContentFuture.addListener(ChannelFutureListener.CLOSE)__		}_	};sends,the,given,response,and,status,code,to,the,given,channel,param,channel,handler,context,identifying,the,open,channel,param,http,request,originating,http,request,param,message,which,should,be,sent,param,status,code,of,the,message,to,send;public,static,void,send,response,nonnull,channel,handler,context,channel,handler,context,nonnull,http,request,http,request,nonnull,string,message,nonnull,http,response,status,status,code,http,response,response,new,default,http,response,status,code,response,headers,set,application,json,if,http,headers,is,keep,alive,http,request,response,headers,set,connection,http,headers,values,byte,buf,message,get,bytes,config,constants,byte,buf,b,unpooled,copied,buffer,buf,http,headers,set,content,length,response,buf,length,channel,handler,context,write,response,channel,handler,context,write,b,channel,future,last,content,future,channel,handler,context,write,and,flush,last,http,content,if,http,headers,is,keep,alive,http,request,last,content,future,add,listener,channel,future,listener,close
HandlerUtils -> public static void sendResponse( 			@Nonnull ChannelHandlerContext channelHandlerContext, 			@Nonnull HttpRequest httpRequest, 			@Nonnull String message, 			@Nonnull HttpResponseStatus statusCode);1507752418;Sends the given response and status code to the given channel.__@param channelHandlerContext identifying the open channel_@param httpRequest originating http request_@param message which should be sent_@param statusCode of the message to send;public static void sendResponse(_			@Nonnull ChannelHandlerContext channelHandlerContext,_			@Nonnull HttpRequest httpRequest,_			@Nonnull String message,_			@Nonnull HttpResponseStatus statusCode) {_		HttpResponse response = new DefaultHttpResponse(HTTP_1_1, statusCode)___		response.headers().set(CONTENT_TYPE, "application/json")___		if (HttpHeaders.isKeepAlive(httpRequest)) {_			response.headers().set(CONNECTION, HttpHeaders.Values.KEEP_ALIVE)__		}__		byte[] buf = message.getBytes(ConfigConstants.DEFAULT_CHARSET)__		ByteBuf b = Unpooled.copiedBuffer(buf)__		HttpHeaders.setContentLength(response, buf.length)___		_		channelHandlerContext.write(response)___		channelHandlerContext.write(b)___		ChannelFuture lastContentFuture = channelHandlerContext.writeAndFlush(LastHttpContent.EMPTY_LAST_CONTENT)___		_		if (!HttpHeaders.isKeepAlive(httpRequest)) {_			lastContentFuture.addListener(ChannelFutureListener.CLOSE)__		}_	};sends,the,given,response,and,status,code,to,the,given,channel,param,channel,handler,context,identifying,the,open,channel,param,http,request,originating,http,request,param,message,which,should,be,sent,param,status,code,of,the,message,to,send;public,static,void,send,response,nonnull,channel,handler,context,channel,handler,context,nonnull,http,request,http,request,nonnull,string,message,nonnull,http,response,status,status,code,http,response,response,new,default,http,response,status,code,response,headers,set,application,json,if,http,headers,is,keep,alive,http,request,response,headers,set,connection,http,headers,values,byte,buf,message,get,bytes,config,constants,byte,buf,b,unpooled,copied,buffer,buf,http,headers,set,content,length,response,buf,length,channel,handler,context,write,response,channel,handler,context,write,b,channel,future,last,content,future,channel,handler,context,write,and,flush,last,http,content,if,http,headers,is,keep,alive,http,request,last,content,future,add,listener,channel,future,listener,close
HandlerUtils -> public static void sendResponse( 			@Nonnull ChannelHandlerContext channelHandlerContext, 			@Nonnull HttpRequest httpRequest, 			@Nonnull String message, 			@Nonnull HttpResponseStatus statusCode);1509447226;Sends the given response and status code to the given channel.__@param channelHandlerContext identifying the open channel_@param httpRequest originating http request_@param message which should be sent_@param statusCode of the message to send;public static void sendResponse(_			@Nonnull ChannelHandlerContext channelHandlerContext,_			@Nonnull HttpRequest httpRequest,_			@Nonnull String message,_			@Nonnull HttpResponseStatus statusCode) {_		HttpResponse response = new DefaultHttpResponse(HTTP_1_1, statusCode)___		response.headers().set(CONTENT_TYPE, "application/json")___		if (HttpHeaders.isKeepAlive(httpRequest)) {_			response.headers().set(CONNECTION, HttpHeaders.Values.KEEP_ALIVE)__		}__		byte[] buf = message.getBytes(ConfigConstants.DEFAULT_CHARSET)__		ByteBuf b = Unpooled.copiedBuffer(buf)__		HttpHeaders.setContentLength(response, buf.length)___		_		channelHandlerContext.write(response)___		channelHandlerContext.write(b)___		ChannelFuture lastContentFuture = channelHandlerContext.writeAndFlush(LastHttpContent.EMPTY_LAST_CONTENT)___		_		if (!HttpHeaders.isKeepAlive(httpRequest)) {_			lastContentFuture.addListener(ChannelFutureListener.CLOSE)__		}_	};sends,the,given,response,and,status,code,to,the,given,channel,param,channel,handler,context,identifying,the,open,channel,param,http,request,originating,http,request,param,message,which,should,be,sent,param,status,code,of,the,message,to,send;public,static,void,send,response,nonnull,channel,handler,context,channel,handler,context,nonnull,http,request,http,request,nonnull,string,message,nonnull,http,response,status,status,code,http,response,response,new,default,http,response,status,code,response,headers,set,application,json,if,http,headers,is,keep,alive,http,request,response,headers,set,connection,http,headers,values,byte,buf,message,get,bytes,config,constants,byte,buf,b,unpooled,copied,buffer,buf,http,headers,set,content,length,response,buf,length,channel,handler,context,write,response,channel,handler,context,write,b,channel,future,last,content,future,channel,handler,context,write,and,flush,last,http,content,if,http,headers,is,keep,alive,http,request,last,content,future,add,listener,channel,future,listener,close
HandlerUtils -> public static <P extends ResponseBody> void sendResponse( 			ChannelHandlerContext channelHandlerContext, 			HttpRequest httpRequest, 			P response, 			HttpResponseStatus statusCode);1505859747;Sends the given response and status code to the given channel.__@param channelHandlerContext identifying the open channel_@param httpRequest originating http request_@param response which should be sent_@param statusCode of the message to send_@param <P> type of the response;public static <P extends ResponseBody> void sendResponse(_			ChannelHandlerContext channelHandlerContext,_			HttpRequest httpRequest,_			P response,_			HttpResponseStatus statusCode) {_		StringWriter sw = new StringWriter()__		try {_			mapper.writeValue(sw, response)__		} catch (IOException ioe) {_			sendErrorResponse(channelHandlerContext, httpRequest, new ErrorResponseBody("Internal server error. Could not map response to JSON."), HttpResponseStatus.INTERNAL_SERVER_ERROR)__			return__		}_		sendResponse(channelHandlerContext, httpRequest, sw.toString(), statusCode)__	};sends,the,given,response,and,status,code,to,the,given,channel,param,channel,handler,context,identifying,the,open,channel,param,http,request,originating,http,request,param,response,which,should,be,sent,param,status,code,of,the,message,to,send,param,p,type,of,the,response;public,static,p,extends,response,body,void,send,response,channel,handler,context,channel,handler,context,http,request,http,request,p,response,http,response,status,status,code,string,writer,sw,new,string,writer,try,mapper,write,value,sw,response,catch,ioexception,ioe,send,error,response,channel,handler,context,http,request,new,error,response,body,internal,server,error,could,not,map,response,to,json,http,response,status,return,send,response,channel,handler,context,http,request,sw,to,string,status,code
HandlerUtils -> public static <P extends ResponseBody> void sendResponse( 			ChannelHandlerContext channelHandlerContext, 			HttpRequest httpRequest, 			P response, 			HttpResponseStatus statusCode);1507752418;Sends the given response and status code to the given channel.__@param channelHandlerContext identifying the open channel_@param httpRequest originating http request_@param response which should be sent_@param statusCode of the message to send_@param <P> type of the response;public static <P extends ResponseBody> void sendResponse(_			ChannelHandlerContext channelHandlerContext,_			HttpRequest httpRequest,_			P response,_			HttpResponseStatus statusCode) {_		StringWriter sw = new StringWriter()__		try {_			mapper.writeValue(sw, response)__		} catch (IOException ioe) {_			LOG.error("Internal server error. Could not map response to JSON.", ioe)__			sendErrorResponse(channelHandlerContext, httpRequest, new ErrorResponseBody("Internal server error. Could not map response to JSON."), HttpResponseStatus.INTERNAL_SERVER_ERROR)__			return__		}_		sendResponse(channelHandlerContext, httpRequest, sw.toString(), statusCode)__	};sends,the,given,response,and,status,code,to,the,given,channel,param,channel,handler,context,identifying,the,open,channel,param,http,request,originating,http,request,param,response,which,should,be,sent,param,status,code,of,the,message,to,send,param,p,type,of,the,response;public,static,p,extends,response,body,void,send,response,channel,handler,context,channel,handler,context,http,request,http,request,p,response,http,response,status,status,code,string,writer,sw,new,string,writer,try,mapper,write,value,sw,response,catch,ioexception,ioe,log,error,internal,server,error,could,not,map,response,to,json,ioe,send,error,response,channel,handler,context,http,request,new,error,response,body,internal,server,error,could,not,map,response,to,json,http,response,status,return,send,response,channel,handler,context,http,request,sw,to,string,status,code
HandlerUtils -> public static <P extends ResponseBody> void sendResponse( 			ChannelHandlerContext channelHandlerContext, 			HttpRequest httpRequest, 			P response, 			HttpResponseStatus statusCode);1509447226;Sends the given response and status code to the given channel.__@param channelHandlerContext identifying the open channel_@param httpRequest originating http request_@param response which should be sent_@param statusCode of the message to send_@param <P> type of the response;public static <P extends ResponseBody> void sendResponse(_			ChannelHandlerContext channelHandlerContext,_			HttpRequest httpRequest,_			P response,_			HttpResponseStatus statusCode) {_		StringWriter sw = new StringWriter()__		try {_			mapper.writeValue(sw, response)__		} catch (IOException ioe) {_			LOG.error("Internal server error. Could not map response to JSON.", ioe)__			sendErrorResponse(channelHandlerContext, httpRequest, new ErrorResponseBody("Internal server error. Could not map response to JSON."), HttpResponseStatus.INTERNAL_SERVER_ERROR)__			return__		}_		sendResponse(channelHandlerContext, httpRequest, sw.toString(), statusCode)__	};sends,the,given,response,and,status,code,to,the,given,channel,param,channel,handler,context,identifying,the,open,channel,param,http,request,originating,http,request,param,response,which,should,be,sent,param,status,code,of,the,message,to,send,param,p,type,of,the,response;public,static,p,extends,response,body,void,send,response,channel,handler,context,channel,handler,context,http,request,http,request,p,response,http,response,status,status,code,string,writer,sw,new,string,writer,try,mapper,write,value,sw,response,catch,ioexception,ioe,log,error,internal,server,error,could,not,map,response,to,json,ioe,send,error,response,channel,handler,context,http,request,new,error,response,body,internal,server,error,could,not,map,response,to,json,http,response,status,return,send,response,channel,handler,context,http,request,sw,to,string,status,code
HandlerUtils -> public static void sendResponse( 			@Nonnull ChannelHandlerContext channelHandlerContext, 			@Nonnull HttpRequest httpRequest, 			@Nonnull String message, 			@Nonnull HttpResponseStatus statusCode, 			@Nonnull Map<String, String> headers);1510063661;Sends the given response and status code to the given channel.__@param channelHandlerContext identifying the open channel_@param httpRequest originating http request_@param message which should be sent_@param statusCode of the message to send_@param headers additional header values;public static void sendResponse(_			@Nonnull ChannelHandlerContext channelHandlerContext,_			@Nonnull HttpRequest httpRequest,_			@Nonnull String message,_			@Nonnull HttpResponseStatus statusCode,_			@Nonnull Map<String, String> headers) {_		HttpResponse response = new DefaultHttpResponse(HTTP_1_1, statusCode)___		response.headers().set(CONTENT_TYPE, "application/json")___		for (Map.Entry<String, String> headerEntry : headers.entrySet()) {_			response.headers().set(headerEntry.getKey(), headerEntry.getValue())__		}__		if (HttpHeaders.isKeepAlive(httpRequest)) {_			response.headers().set(CONNECTION, HttpHeaders.Values.KEEP_ALIVE)__		}__		byte[] buf = message.getBytes(ConfigConstants.DEFAULT_CHARSET)__		ByteBuf b = Unpooled.copiedBuffer(buf)__		HttpHeaders.setContentLength(response, buf.length)___		_		channelHandlerContext.write(response)___		channelHandlerContext.write(b)___		ChannelFuture lastContentFuture = channelHandlerContext.writeAndFlush(LastHttpContent.EMPTY_LAST_CONTENT)___		_		if (!HttpHeaders.isKeepAlive(httpRequest)) {_			lastContentFuture.addListener(ChannelFutureListener.CLOSE)__		}_	};sends,the,given,response,and,status,code,to,the,given,channel,param,channel,handler,context,identifying,the,open,channel,param,http,request,originating,http,request,param,message,which,should,be,sent,param,status,code,of,the,message,to,send,param,headers,additional,header,values;public,static,void,send,response,nonnull,channel,handler,context,channel,handler,context,nonnull,http,request,http,request,nonnull,string,message,nonnull,http,response,status,status,code,nonnull,map,string,string,headers,http,response,response,new,default,http,response,status,code,response,headers,set,application,json,for,map,entry,string,string,header,entry,headers,entry,set,response,headers,set,header,entry,get,key,header,entry,get,value,if,http,headers,is,keep,alive,http,request,response,headers,set,connection,http,headers,values,byte,buf,message,get,bytes,config,constants,byte,buf,b,unpooled,copied,buffer,buf,http,headers,set,content,length,response,buf,length,channel,handler,context,write,response,channel,handler,context,write,b,channel,future,last,content,future,channel,handler,context,write,and,flush,last,http,content,if,http,headers,is,keep,alive,http,request,last,content,future,add,listener,channel,future,listener,close
HandlerUtils -> public static void sendResponse( 			@Nonnull ChannelHandlerContext channelHandlerContext, 			@Nonnull HttpRequest httpRequest, 			@Nonnull String message, 			@Nonnull HttpResponseStatus statusCode, 			@Nonnull Map<String, String> headers);1520268868;Sends the given response and status code to the given channel.__@param channelHandlerContext identifying the open channel_@param httpRequest originating http request_@param message which should be sent_@param statusCode of the message to send_@param headers additional header values;public static void sendResponse(_			@Nonnull ChannelHandlerContext channelHandlerContext,_			@Nonnull HttpRequest httpRequest,_			@Nonnull String message,_			@Nonnull HttpResponseStatus statusCode,_			@Nonnull Map<String, String> headers) {_		HttpResponse response = new DefaultHttpResponse(HTTP_1_1, statusCode)___		response.headers().set(CONTENT_TYPE, RestConstants.REST_CONTENT_TYPE)___		for (Map.Entry<String, String> headerEntry : headers.entrySet()) {_			response.headers().set(headerEntry.getKey(), headerEntry.getValue())__		}__		if (HttpHeaders.isKeepAlive(httpRequest)) {_			response.headers().set(CONNECTION, HttpHeaders.Values.KEEP_ALIVE)__		}__		byte[] buf = message.getBytes(ConfigConstants.DEFAULT_CHARSET)__		ByteBuf b = Unpooled.copiedBuffer(buf)__		HttpHeaders.setContentLength(response, buf.length)___		_		channelHandlerContext.write(response)___		channelHandlerContext.write(b)___		ChannelFuture lastContentFuture = channelHandlerContext.writeAndFlush(LastHttpContent.EMPTY_LAST_CONTENT)___		_		if (!HttpHeaders.isKeepAlive(httpRequest)) {_			lastContentFuture.addListener(ChannelFutureListener.CLOSE)__		}_	};sends,the,given,response,and,status,code,to,the,given,channel,param,channel,handler,context,identifying,the,open,channel,param,http,request,originating,http,request,param,message,which,should,be,sent,param,status,code,of,the,message,to,send,param,headers,additional,header,values;public,static,void,send,response,nonnull,channel,handler,context,channel,handler,context,nonnull,http,request,http,request,nonnull,string,message,nonnull,http,response,status,status,code,nonnull,map,string,string,headers,http,response,response,new,default,http,response,status,code,response,headers,set,rest,constants,for,map,entry,string,string,header,entry,headers,entry,set,response,headers,set,header,entry,get,key,header,entry,get,value,if,http,headers,is,keep,alive,http,request,response,headers,set,connection,http,headers,values,byte,buf,message,get,bytes,config,constants,byte,buf,b,unpooled,copied,buffer,buf,http,headers,set,content,length,response,buf,length,channel,handler,context,write,response,channel,handler,context,write,b,channel,future,last,content,future,channel,handler,context,write,and,flush,last,http,content,if,http,headers,is,keep,alive,http,request,last,content,future,add,listener,channel,future,listener,close
HandlerUtils -> public static void sendResponse( 			@Nonnull ChannelHandlerContext channelHandlerContext, 			@Nonnull HttpRequest httpRequest, 			@Nonnull String message, 			@Nonnull HttpResponseStatus statusCode, 			@Nonnull Map<String, String> headers);1521016671;Sends the given response and status code to the given channel.__@param channelHandlerContext identifying the open channel_@param httpRequest originating http request_@param message which should be sent_@param statusCode of the message to send_@param headers additional header values;public static void sendResponse(_			@Nonnull ChannelHandlerContext channelHandlerContext,_			@Nonnull HttpRequest httpRequest,_			@Nonnull String message,_			@Nonnull HttpResponseStatus statusCode,_			@Nonnull Map<String, String> headers) {__		sendResponse(_			channelHandlerContext,_			HttpHeaders.isKeepAlive(httpRequest),_			message,_			statusCode,_			headers)__	};sends,the,given,response,and,status,code,to,the,given,channel,param,channel,handler,context,identifying,the,open,channel,param,http,request,originating,http,request,param,message,which,should,be,sent,param,status,code,of,the,message,to,send,param,headers,additional,header,values;public,static,void,send,response,nonnull,channel,handler,context,channel,handler,context,nonnull,http,request,http,request,nonnull,string,message,nonnull,http,response,status,status,code,nonnull,map,string,string,headers,send,response,channel,handler,context,http,headers,is,keep,alive,http,request,message,status,code,headers
HandlerUtils -> public static <P extends ResponseBody> void sendResponse( 			ChannelHandlerContext channelHandlerContext, 			HttpRequest httpRequest, 			P response, 			HttpResponseStatus statusCode, 			Map<String, String> headers);1510063661;Sends the given response and status code to the given channel.__@param channelHandlerContext identifying the open channel_@param httpRequest originating http request_@param response which should be sent_@param statusCode of the message to send_@param headers additional header values_@param <P> type of the response;public static <P extends ResponseBody> void sendResponse(_			ChannelHandlerContext channelHandlerContext,_			HttpRequest httpRequest,_			P response,_			HttpResponseStatus statusCode,_			Map<String, String> headers) {_		StringWriter sw = new StringWriter()__		try {_			mapper.writeValue(sw, response)__		} catch (IOException ioe) {_			LOG.error("Internal server error. Could not map response to JSON.", ioe)__			sendErrorResponse(_				channelHandlerContext,_				httpRequest,_				new ErrorResponseBody("Internal server error. Could not map response to JSON."),_				HttpResponseStatus.INTERNAL_SERVER_ERROR,_				headers)__			return__		}_		sendResponse(_			channelHandlerContext,_			httpRequest,_			sw.toString(),_			statusCode,_			headers)__	};sends,the,given,response,and,status,code,to,the,given,channel,param,channel,handler,context,identifying,the,open,channel,param,http,request,originating,http,request,param,response,which,should,be,sent,param,status,code,of,the,message,to,send,param,headers,additional,header,values,param,p,type,of,the,response;public,static,p,extends,response,body,void,send,response,channel,handler,context,channel,handler,context,http,request,http,request,p,response,http,response,status,status,code,map,string,string,headers,string,writer,sw,new,string,writer,try,mapper,write,value,sw,response,catch,ioexception,ioe,log,error,internal,server,error,could,not,map,response,to,json,ioe,send,error,response,channel,handler,context,http,request,new,error,response,body,internal,server,error,could,not,map,response,to,json,http,response,status,headers,return,send,response,channel,handler,context,http,request,sw,to,string,status,code,headers
HandlerUtils -> public static <P extends ResponseBody> void sendResponse( 			ChannelHandlerContext channelHandlerContext, 			HttpRequest httpRequest, 			P response, 			HttpResponseStatus statusCode, 			Map<String, String> headers);1520268868;Sends the given response and status code to the given channel.__@param channelHandlerContext identifying the open channel_@param httpRequest originating http request_@param response which should be sent_@param statusCode of the message to send_@param headers additional header values_@param <P> type of the response;public static <P extends ResponseBody> void sendResponse(_			ChannelHandlerContext channelHandlerContext,_			HttpRequest httpRequest,_			P response,_			HttpResponseStatus statusCode,_			Map<String, String> headers) {_		StringWriter sw = new StringWriter()__		try {_			mapper.writeValue(sw, response)__		} catch (IOException ioe) {_			LOG.error("Internal server error. Could not map response to JSON.", ioe)__			sendErrorResponse(_				channelHandlerContext,_				httpRequest,_				new ErrorResponseBody("Internal server error. Could not map response to JSON."),_				HttpResponseStatus.INTERNAL_SERVER_ERROR,_				headers)__			return__		}_		sendResponse(_			channelHandlerContext,_			httpRequest,_			sw.toString(),_			statusCode,_			headers)__	};sends,the,given,response,and,status,code,to,the,given,channel,param,channel,handler,context,identifying,the,open,channel,param,http,request,originating,http,request,param,response,which,should,be,sent,param,status,code,of,the,message,to,send,param,headers,additional,header,values,param,p,type,of,the,response;public,static,p,extends,response,body,void,send,response,channel,handler,context,channel,handler,context,http,request,http,request,p,response,http,response,status,status,code,map,string,string,headers,string,writer,sw,new,string,writer,try,mapper,write,value,sw,response,catch,ioexception,ioe,log,error,internal,server,error,could,not,map,response,to,json,ioe,send,error,response,channel,handler,context,http,request,new,error,response,body,internal,server,error,could,not,map,response,to,json,http,response,status,headers,return,send,response,channel,handler,context,http,request,sw,to,string,status,code,headers
HandlerUtils -> public static <P extends ResponseBody> void sendResponse( 			ChannelHandlerContext channelHandlerContext, 			HttpRequest httpRequest, 			P response, 			HttpResponseStatus statusCode, 			Map<String, String> headers);1521016671;Sends the given response and status code to the given channel.__@param channelHandlerContext identifying the open channel_@param httpRequest originating http request_@param response which should be sent_@param statusCode of the message to send_@param headers additional header values_@param <P> type of the response;public static <P extends ResponseBody> void sendResponse(_			ChannelHandlerContext channelHandlerContext,_			HttpRequest httpRequest,_			P response,_			HttpResponseStatus statusCode,_			Map<String, String> headers) {_		StringWriter sw = new StringWriter()__		try {_			mapper.writeValue(sw, response)__		} catch (IOException ioe) {_			LOG.error("Internal server error. Could not map response to JSON.", ioe)__			sendErrorResponse(_				channelHandlerContext,_				httpRequest,_				new ErrorResponseBody("Internal server error. Could not map response to JSON."),_				HttpResponseStatus.INTERNAL_SERVER_ERROR,_				headers)__			return__		}_		sendResponse(_			channelHandlerContext,_			httpRequest,_			sw.toString(),_			statusCode,_			headers)__	};sends,the,given,response,and,status,code,to,the,given,channel,param,channel,handler,context,identifying,the,open,channel,param,http,request,originating,http,request,param,response,which,should,be,sent,param,status,code,of,the,message,to,send,param,headers,additional,header,values,param,p,type,of,the,response;public,static,p,extends,response,body,void,send,response,channel,handler,context,channel,handler,context,http,request,http,request,p,response,http,response,status,status,code,map,string,string,headers,string,writer,sw,new,string,writer,try,mapper,write,value,sw,response,catch,ioexception,ioe,log,error,internal,server,error,could,not,map,response,to,json,ioe,send,error,response,channel,handler,context,http,request,new,error,response,body,internal,server,error,could,not,map,response,to,json,http,response,status,headers,return,send,response,channel,handler,context,http,request,sw,to,string,status,code,headers
HandlerUtils -> public static void sendErrorResponse( 			ChannelHandlerContext channelHandlerContext, 			HttpRequest httpRequest, 			ErrorResponseBody errorMessage, 			HttpResponseStatus statusCode, 			Map<String, String> headers);1510063661;Sends the given error response and status code to the given channel.__@param channelHandlerContext identifying the open channel_@param httpRequest originating http request_@param errorMessage which should be sent_@param statusCode of the message to send_@param headers additional header values;public static void sendErrorResponse(_			ChannelHandlerContext channelHandlerContext,_			HttpRequest httpRequest,_			ErrorResponseBody errorMessage,_			HttpResponseStatus statusCode,_			Map<String, String> headers) {__		StringWriter sw = new StringWriter()__		try {_			mapper.writeValue(sw, errorMessage)__		} catch (IOException e) {_			_			LOG.error("Internal server error. Could not map error response to JSON.", e)__			sendResponse(_				channelHandlerContext,_				httpRequest,_				"Internal server error. Could not map error response to JSON.",_				HttpResponseStatus.INTERNAL_SERVER_ERROR,_				headers)__		}_		sendResponse(_			channelHandlerContext,_			httpRequest,_			sw.toString(),_			statusCode,_			headers)__	};sends,the,given,error,response,and,status,code,to,the,given,channel,param,channel,handler,context,identifying,the,open,channel,param,http,request,originating,http,request,param,error,message,which,should,be,sent,param,status,code,of,the,message,to,send,param,headers,additional,header,values;public,static,void,send,error,response,channel,handler,context,channel,handler,context,http,request,http,request,error,response,body,error,message,http,response,status,status,code,map,string,string,headers,string,writer,sw,new,string,writer,try,mapper,write,value,sw,error,message,catch,ioexception,e,log,error,internal,server,error,could,not,map,error,response,to,json,e,send,response,channel,handler,context,http,request,internal,server,error,could,not,map,error,response,to,json,http,response,status,headers,send,response,channel,handler,context,http,request,sw,to,string,status,code,headers
HandlerUtils -> public static void sendErrorResponse( 			ChannelHandlerContext channelHandlerContext, 			HttpRequest httpRequest, 			ErrorResponseBody errorMessage, 			HttpResponseStatus statusCode, 			Map<String, String> headers);1520268868;Sends the given error response and status code to the given channel.__@param channelHandlerContext identifying the open channel_@param httpRequest originating http request_@param errorMessage which should be sent_@param statusCode of the message to send_@param headers additional header values;public static void sendErrorResponse(_			ChannelHandlerContext channelHandlerContext,_			HttpRequest httpRequest,_			ErrorResponseBody errorMessage,_			HttpResponseStatus statusCode,_			Map<String, String> headers) {__		StringWriter sw = new StringWriter()__		try {_			mapper.writeValue(sw, errorMessage)__		} catch (IOException e) {_			_			LOG.error("Internal server error. Could not map error response to JSON.", e)__			sendResponse(_				channelHandlerContext,_				httpRequest,_				"Internal server error. Could not map error response to JSON.",_				HttpResponseStatus.INTERNAL_SERVER_ERROR,_				headers)__		}_		sendResponse(_			channelHandlerContext,_			httpRequest,_			sw.toString(),_			statusCode,_			headers)__	};sends,the,given,error,response,and,status,code,to,the,given,channel,param,channel,handler,context,identifying,the,open,channel,param,http,request,originating,http,request,param,error,message,which,should,be,sent,param,status,code,of,the,message,to,send,param,headers,additional,header,values;public,static,void,send,error,response,channel,handler,context,channel,handler,context,http,request,http,request,error,response,body,error,message,http,response,status,status,code,map,string,string,headers,string,writer,sw,new,string,writer,try,mapper,write,value,sw,error,message,catch,ioexception,e,log,error,internal,server,error,could,not,map,error,response,to,json,e,send,response,channel,handler,context,http,request,internal,server,error,could,not,map,error,response,to,json,http,response,status,headers,send,response,channel,handler,context,http,request,sw,to,string,status,code,headers
HandlerUtils -> public static void sendErrorResponse( 			ChannelHandlerContext channelHandlerContext, 			HttpRequest httpRequest, 			ErrorResponseBody errorMessage, 			HttpResponseStatus statusCode, 			Map<String, String> headers);1521016671;Sends the given error response and status code to the given channel.__@param channelHandlerContext identifying the open channel_@param httpRequest originating http request_@param errorMessage which should be sent_@param statusCode of the message to send_@param headers additional header values;public static void sendErrorResponse(_			ChannelHandlerContext channelHandlerContext,_			HttpRequest httpRequest,_			ErrorResponseBody errorMessage,_			HttpResponseStatus statusCode,_			Map<String, String> headers) {__		sendErrorResponse(_			channelHandlerContext,_			HttpHeaders.isKeepAlive(httpRequest),_			errorMessage,_			statusCode,_			headers)__	};sends,the,given,error,response,and,status,code,to,the,given,channel,param,channel,handler,context,identifying,the,open,channel,param,http,request,originating,http,request,param,error,message,which,should,be,sent,param,status,code,of,the,message,to,send,param,headers,additional,header,values;public,static,void,send,error,response,channel,handler,context,channel,handler,context,http,request,http,request,error,response,body,error,message,http,response,status,status,code,map,string,string,headers,send,error,response,channel,handler,context,http,headers,is,keep,alive,http,request,error,message,status,code,headers
