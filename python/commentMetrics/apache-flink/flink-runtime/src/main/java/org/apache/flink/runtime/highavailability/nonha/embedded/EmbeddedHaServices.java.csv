commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;// ------------------------------------------------------------------------ // services // ------------------------------------------------------------------------ @Override public LeaderRetrievalService getResourceManagerLeaderRetriever() {     return resourceManagerLeaderService.createLeaderRetrievalService(). }
false;public;0;4;;@Override public LeaderRetrievalService getDispatcherLeaderRetriever() {     return dispatcherLeaderService.createLeaderRetrievalService(). }
false;public;0;4;;@Override public LeaderElectionService getResourceManagerLeaderElectionService() {     return resourceManagerLeaderService.createLeaderElectionService(). }
false;public;0;4;;@Override public LeaderElectionService getDispatcherLeaderElectionService() {     return dispatcherLeaderService.createLeaderElectionService(). }
false;public;1;10;;@Override public LeaderRetrievalService getJobManagerLeaderRetriever(JobID jobID) {     checkNotNull(jobID).     synchronized (lock) {         checkNotShutdown().         EmbeddedLeaderService service = getOrCreateJobManagerService(jobID).         return service.createLeaderRetrievalService().     } }
false;public;2;4;;@Override public LeaderRetrievalService getJobManagerLeaderRetriever(JobID jobID, String defaultJobManagerAddress) {     return getJobManagerLeaderRetriever(jobID). }
false;public;0;4;;@Override public LeaderRetrievalService getWebMonitorLeaderRetriever() {     return webMonitorLeaderService.createLeaderRetrievalService(). }
false;public;1;10;;@Override public LeaderElectionService getJobManagerLeaderElectionService(JobID jobID) {     checkNotNull(jobID).     synchronized (lock) {         checkNotShutdown().         EmbeddedLeaderService service = getOrCreateJobManagerService(jobID).         return service.createLeaderElectionService().     } }
false;public;0;4;;@Override public LeaderElectionService getWebMonitorLeaderElectionService() {     return webMonitorLeaderService.createLeaderElectionService(). }
false;;0;3;;// ------------------------------------------------------------------------ // internal // ------------------------------------------------------------------------ EmbeddedLeaderService getDispatcherLeaderService() {     return dispatcherLeaderService. }
false;;1;3;;EmbeddedLeaderService getJobManagerLeaderService(JobID jobId) {     return jobManagerLeaderServices.get(jobId). }
false;;0;3;;EmbeddedLeaderService getResourceManagerLeaderService() {     return resourceManagerLeaderService. }
false;private;1;4;;@Nonnull private EmbeddedLeaderService createEmbeddedLeaderService(Executor executor) {     return new EmbeddedLeaderService(executor). }
false;private;1;9;;@GuardedBy("lock") private EmbeddedLeaderService getOrCreateJobManagerService(JobID jobID) {     EmbeddedLeaderService service = jobManagerLeaderServices.get(jobID).     if (service == null) {         service = createEmbeddedLeaderService(executor).         jobManagerLeaderServices.put(jobID, service).     }     return service. }
false;public;0;18;;// ------------------------------------------------------------------------ // shutdown // ------------------------------------------------------------------------ @Override public void close() throws Exception {     synchronized (lock) {         if (!isShutDown()) {             // stop all job manager leader services             for (EmbeddedLeaderService service : jobManagerLeaderServices.values()) {                 service.shutdown().             }             jobManagerLeaderServices.clear().             resourceManagerLeaderService.shutdown().             webMonitorLeaderService.shutdown().         }         super.close().     } }
