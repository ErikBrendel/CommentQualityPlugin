# id;timestamp;commentText;codeText;commentWords;codeWords
MetricRegistryConfiguration -> static ScopeFormats createScopeConfig(Configuration configuration);1474995330;Create the scope formats from the given {@link Configuration}.__@param configuration to extract the scope formats from_@return Scope formats extracted from the given configuration;static ScopeFormats createScopeConfig(Configuration configuration) {_		String jmFormat = configuration.getString(_			ConfigConstants.METRICS_SCOPE_NAMING_JM, ScopeFormat.DEFAULT_SCOPE_JOBMANAGER_GROUP)__		String jmJobFormat = configuration.getString(_			ConfigConstants.METRICS_SCOPE_NAMING_JM_JOB, ScopeFormat.DEFAULT_SCOPE_JOBMANAGER_JOB_GROUP)__		String tmFormat = configuration.getString(_			ConfigConstants.METRICS_SCOPE_NAMING_TM, ScopeFormat.DEFAULT_SCOPE_TASKMANAGER_GROUP)__		String tmJobFormat = configuration.getString(_			ConfigConstants.METRICS_SCOPE_NAMING_TM_JOB, ScopeFormat.DEFAULT_SCOPE_TASKMANAGER_JOB_GROUP)__		String taskFormat = configuration.getString(_			ConfigConstants.METRICS_SCOPE_NAMING_TASK, ScopeFormat.DEFAULT_SCOPE_TASK_GROUP)__		String operatorFormat = configuration.getString(_			ConfigConstants.METRICS_SCOPE_NAMING_OPERATOR, ScopeFormat.DEFAULT_SCOPE_OPERATOR_GROUP)___		return new ScopeFormats(jmFormat, jmJobFormat, tmFormat, tmJobFormat, taskFormat, operatorFormat)__	};create,the,scope,formats,from,the,given,link,configuration,param,configuration,to,extract,the,scope,formats,from,return,scope,formats,extracted,from,the,given,configuration;static,scope,formats,create,scope,config,configuration,configuration,string,jm,format,configuration,get,string,config,constants,scope,format,string,jm,job,format,configuration,get,string,config,constants,scope,format,string,tm,format,configuration,get,string,config,constants,scope,format,string,tm,job,format,configuration,get,string,config,constants,scope,format,string,task,format,configuration,get,string,config,constants,scope,format,string,operator,format,configuration,get,string,config,constants,scope,format,return,new,scope,formats,jm,format,jm,job,format,tm,format,tm,job,format,task,format,operator,format
MetricRegistryConfiguration -> static ScopeFormats createScopeConfig(Configuration configuration);1492770690;Create the scope formats from the given {@link Configuration}.__@param configuration to extract the scope formats from_@return Scope formats extracted from the given configuration;static ScopeFormats createScopeConfig(Configuration configuration) {_		String jmFormat = configuration.getString(MetricOptions.SCOPE_NAMING_JM)__		String jmJobFormat = configuration.getString(MetricOptions.SCOPE_NAMING_JM_JOB)__		String tmFormat = configuration.getString(MetricOptions.SCOPE_NAMING_TM)__		String tmJobFormat = configuration.getString(MetricOptions.SCOPE_NAMING_TM_JOB)__		String taskFormat = configuration.getString(MetricOptions.SCOPE_NAMING_TASK)__		String operatorFormat = configuration.getString(MetricOptions.SCOPE_NAMING_OPERATOR)___		return new ScopeFormats(jmFormat, jmJobFormat, tmFormat, tmJobFormat, taskFormat, operatorFormat)__	};create,the,scope,formats,from,the,given,link,configuration,param,configuration,to,extract,the,scope,formats,from,return,scope,formats,extracted,from,the,given,configuration;static,scope,formats,create,scope,config,configuration,configuration,string,jm,format,configuration,get,string,metric,options,string,jm,job,format,configuration,get,string,metric,options,string,tm,format,configuration,get,string,metric,options,string,tm,job,format,configuration,get,string,metric,options,string,task,format,configuration,get,string,metric,options,string,operator,format,configuration,get,string,metric,options,return,new,scope,formats,jm,format,jm,job,format,tm,format,tm,job,format,task,format,operator,format
MetricRegistryConfiguration -> static ScopeFormats createScopeConfig(Configuration configuration);1496409235;Create the scope formats from the given {@link Configuration}.__@param configuration to extract the scope formats from_@return Scope formats extracted from the given configuration;static ScopeFormats createScopeConfig(Configuration configuration) {_		String jmFormat = configuration.getString(MetricOptions.SCOPE_NAMING_JM)__		String jmJobFormat = configuration.getString(MetricOptions.SCOPE_NAMING_JM_JOB)__		String tmFormat = configuration.getString(MetricOptions.SCOPE_NAMING_TM)__		String tmJobFormat = configuration.getString(MetricOptions.SCOPE_NAMING_TM_JOB)__		String taskFormat = configuration.getString(MetricOptions.SCOPE_NAMING_TASK)__		String operatorFormat = configuration.getString(MetricOptions.SCOPE_NAMING_OPERATOR)___		return new ScopeFormats(jmFormat, jmJobFormat, tmFormat, tmJobFormat, taskFormat, operatorFormat)__	};create,the,scope,formats,from,the,given,link,configuration,param,configuration,to,extract,the,scope,formats,from,return,scope,formats,extracted,from,the,given,configuration;static,scope,formats,create,scope,config,configuration,configuration,string,jm,format,configuration,get,string,metric,options,string,jm,job,format,configuration,get,string,metric,options,string,tm,format,configuration,get,string,metric,options,string,tm,job,format,configuration,get,string,metric,options,string,task,format,configuration,get,string,metric,options,string,operator,format,configuration,get,string,metric,options,return,new,scope,formats,jm,format,jm,job,format,tm,format,tm,job,format,task,format,operator,format
MetricRegistryConfiguration -> public static MetricRegistryConfiguration fromConfiguration(Configuration configuration);1474995330;Create a metric registry configuration object from the given {@link Configuration}.__@param configuration to generate the metric registry configuration from_@return Metric registry configuration generated from the configuration;public static MetricRegistryConfiguration fromConfiguration(Configuration configuration) {_		ScopeFormats scopeFormats__		try {_			scopeFormats = createScopeConfig(configuration)__		} catch (Exception e) {_			LOG.warn("Failed to parse scope format, using default scope formats", e)__			scopeFormats = new ScopeFormats()__		}__		char delim__		try {_			delim = configuration.getString(ConfigConstants.METRICS_SCOPE_DELIMITER, ".").charAt(0)__		} catch (Exception e) {_			LOG.warn("Failed to parse delimiter, using default delimiter.", e)__			delim = '.'__		}__		final String definedReporters = configuration.getString(ConfigConstants.METRICS_REPORTERS_LIST, null)__		List<Tuple2<String, Configuration>> reporterConfigurations___		if (definedReporters == null) {_			reporterConfigurations = Collections.emptyList()__		} else {_			String[] namedReporters = splitPattern.split(definedReporters)___			reporterConfigurations = new ArrayList<>(namedReporters.length)___			for (String namedReporter: namedReporters) {_				DelegatingConfiguration delegatingConfiguration = new DelegatingConfiguration(_					configuration,_					ConfigConstants.METRICS_REPORTER_PREFIX + namedReporter + '.')___				reporterConfigurations.add(Tuple2.of(namedReporter, (Configuration) delegatingConfiguration))__			}_		}__		return new MetricRegistryConfiguration(scopeFormats, delim, reporterConfigurations)__	};create,a,metric,registry,configuration,object,from,the,given,link,configuration,param,configuration,to,generate,the,metric,registry,configuration,from,return,metric,registry,configuration,generated,from,the,configuration;public,static,metric,registry,configuration,from,configuration,configuration,configuration,scope,formats,scope,formats,try,scope,formats,create,scope,config,configuration,catch,exception,e,log,warn,failed,to,parse,scope,format,using,default,scope,formats,e,scope,formats,new,scope,formats,char,delim,try,delim,configuration,get,string,config,constants,char,at,0,catch,exception,e,log,warn,failed,to,parse,delimiter,using,default,delimiter,e,delim,final,string,defined,reporters,configuration,get,string,config,constants,null,list,tuple2,string,configuration,reporter,configurations,if,defined,reporters,null,reporter,configurations,collections,empty,list,else,string,named,reporters,split,pattern,split,defined,reporters,reporter,configurations,new,array,list,named,reporters,length,for,string,named,reporter,named,reporters,delegating,configuration,delegating,configuration,new,delegating,configuration,configuration,config,constants,named,reporter,reporter,configurations,add,tuple2,of,named,reporter,configuration,delegating,configuration,return,new,metric,registry,configuration,scope,formats,delim,reporter,configurations
MetricRegistryConfiguration -> public static MetricRegistryConfiguration fromConfiguration(Configuration configuration);1492770690;Create a metric registry configuration object from the given {@link Configuration}.__@param configuration to generate the metric registry configuration from_@return Metric registry configuration generated from the configuration;public static MetricRegistryConfiguration fromConfiguration(Configuration configuration) {_		ScopeFormats scopeFormats__		try {_			scopeFormats = createScopeConfig(configuration)__		} catch (Exception e) {_			LOG.warn("Failed to parse scope format, using default scope formats", e)__			scopeFormats = new ScopeFormats()__		}__		char delim__		try {_			delim = configuration.getString(MetricOptions.SCOPE_DELIMITER).charAt(0)__		} catch (Exception e) {_			LOG.warn("Failed to parse delimiter, using default delimiter.", e)__			delim = '.'__		}__		final String definedReporters = configuration.getString(MetricOptions.REPORTERS_LIST)__		List<Tuple2<String, Configuration>> reporterConfigurations___		if (definedReporters == null) {_			reporterConfigurations = Collections.emptyList()__		} else {_			String[] namedReporters = splitPattern.split(definedReporters)___			reporterConfigurations = new ArrayList<>(namedReporters.length)___			for (String namedReporter: namedReporters) {_				DelegatingConfiguration delegatingConfiguration = new DelegatingConfiguration(_					configuration,_					ConfigConstants.METRICS_REPORTER_PREFIX + namedReporter + '.')___				reporterConfigurations.add(Tuple2.of(namedReporter, (Configuration) delegatingConfiguration))__			}_		}__		return new MetricRegistryConfiguration(scopeFormats, delim, reporterConfigurations)__	};create,a,metric,registry,configuration,object,from,the,given,link,configuration,param,configuration,to,generate,the,metric,registry,configuration,from,return,metric,registry,configuration,generated,from,the,configuration;public,static,metric,registry,configuration,from,configuration,configuration,configuration,scope,formats,scope,formats,try,scope,formats,create,scope,config,configuration,catch,exception,e,log,warn,failed,to,parse,scope,format,using,default,scope,formats,e,scope,formats,new,scope,formats,char,delim,try,delim,configuration,get,string,metric,options,char,at,0,catch,exception,e,log,warn,failed,to,parse,delimiter,using,default,delimiter,e,delim,final,string,defined,reporters,configuration,get,string,metric,options,list,tuple2,string,configuration,reporter,configurations,if,defined,reporters,null,reporter,configurations,collections,empty,list,else,string,named,reporters,split,pattern,split,defined,reporters,reporter,configurations,new,array,list,named,reporters,length,for,string,named,reporter,named,reporters,delegating,configuration,delegating,configuration,new,delegating,configuration,configuration,config,constants,named,reporter,reporter,configurations,add,tuple2,of,named,reporter,configuration,delegating,configuration,return,new,metric,registry,configuration,scope,formats,delim,reporter,configurations
MetricRegistryConfiguration -> public static MetricRegistryConfiguration fromConfiguration(Configuration configuration);1496409235;Create a metric registry configuration object from the given {@link Configuration}.__@param configuration to generate the metric registry configuration from_@return Metric registry configuration generated from the configuration;public static MetricRegistryConfiguration fromConfiguration(Configuration configuration) {_		ScopeFormats scopeFormats__		try {_			scopeFormats = createScopeConfig(configuration)__		} catch (Exception e) {_			LOG.warn("Failed to parse scope format, using default scope formats", e)__			scopeFormats = new ScopeFormats()__		}__		char delim__		try {_			delim = configuration.getString(MetricOptions.SCOPE_DELIMITER).charAt(0)__		} catch (Exception e) {_			LOG.warn("Failed to parse delimiter, using default delimiter.", e)__			delim = '.'__		}__		final String definedReporters = configuration.getString(MetricOptions.REPORTERS_LIST)__		List<Tuple2<String, Configuration>> reporterConfigurations___		if (definedReporters == null) {_			reporterConfigurations = Collections.emptyList()__		} else {_			String[] namedReporters = splitPattern.split(definedReporters)___			reporterConfigurations = new ArrayList<>(namedReporters.length)___			for (String namedReporter: namedReporters) {_				DelegatingConfiguration delegatingConfiguration = new DelegatingConfiguration(_					configuration,_					ConfigConstants.METRICS_REPORTER_PREFIX + namedReporter + '.')___				reporterConfigurations.add(Tuple2.of(namedReporter, (Configuration) delegatingConfiguration))__			}_		}__		return new MetricRegistryConfiguration(scopeFormats, delim, reporterConfigurations)__	};create,a,metric,registry,configuration,object,from,the,given,link,configuration,param,configuration,to,generate,the,metric,registry,configuration,from,return,metric,registry,configuration,generated,from,the,configuration;public,static,metric,registry,configuration,from,configuration,configuration,configuration,scope,formats,scope,formats,try,scope,formats,create,scope,config,configuration,catch,exception,e,log,warn,failed,to,parse,scope,format,using,default,scope,formats,e,scope,formats,new,scope,formats,char,delim,try,delim,configuration,get,string,metric,options,char,at,0,catch,exception,e,log,warn,failed,to,parse,delimiter,using,default,delimiter,e,delim,final,string,defined,reporters,configuration,get,string,metric,options,list,tuple2,string,configuration,reporter,configurations,if,defined,reporters,null,reporter,configurations,collections,empty,list,else,string,named,reporters,split,pattern,split,defined,reporters,reporter,configurations,new,array,list,named,reporters,length,for,string,named,reporter,named,reporters,delegating,configuration,delegating,configuration,new,delegating,configuration,configuration,config,constants,named,reporter,reporter,configurations,add,tuple2,of,named,reporter,configuration,delegating,configuration,return,new,metric,registry,configuration,scope,formats,delim,reporter,configurations
MetricRegistryConfiguration -> public static MetricRegistryConfiguration fromConfiguration(Configuration configuration);1509447225;Create a metric registry configuration object from the given {@link Configuration}.__@param configuration to generate the metric registry configuration from_@return Metric registry configuration generated from the configuration;public static MetricRegistryConfiguration fromConfiguration(Configuration configuration) {_		ScopeFormats scopeFormats__		try {_			scopeFormats = ScopeFormats.fromConfig(configuration)__		} catch (Exception e) {_			LOG.warn("Failed to parse scope format, using default scope formats", e)__			scopeFormats = new ScopeFormats()__		}__		char delim__		try {_			delim = configuration.getString(MetricOptions.SCOPE_DELIMITER).charAt(0)__		} catch (Exception e) {_			LOG.warn("Failed to parse delimiter, using default delimiter.", e)__			delim = '.'__		}__		final String definedReporters = configuration.getString(MetricOptions.REPORTERS_LIST)__		List<Tuple2<String, Configuration>> reporterConfigurations___		if (definedReporters == null) {_			reporterConfigurations = Collections.emptyList()__		} else {_			String[] namedReporters = splitPattern.split(definedReporters)___			reporterConfigurations = new ArrayList<>(namedReporters.length)___			for (String namedReporter: namedReporters) {_				DelegatingConfiguration delegatingConfiguration = new DelegatingConfiguration(_					configuration,_					ConfigConstants.METRICS_REPORTER_PREFIX + namedReporter + '.')___				reporterConfigurations.add(Tuple2.of(namedReporter, (Configuration) delegatingConfiguration))__			}_		}__		return new MetricRegistryConfiguration(scopeFormats, delim, reporterConfigurations)__	};create,a,metric,registry,configuration,object,from,the,given,link,configuration,param,configuration,to,generate,the,metric,registry,configuration,from,return,metric,registry,configuration,generated,from,the,configuration;public,static,metric,registry,configuration,from,configuration,configuration,configuration,scope,formats,scope,formats,try,scope,formats,scope,formats,from,config,configuration,catch,exception,e,log,warn,failed,to,parse,scope,format,using,default,scope,formats,e,scope,formats,new,scope,formats,char,delim,try,delim,configuration,get,string,metric,options,char,at,0,catch,exception,e,log,warn,failed,to,parse,delimiter,using,default,delimiter,e,delim,final,string,defined,reporters,configuration,get,string,metric,options,list,tuple2,string,configuration,reporter,configurations,if,defined,reporters,null,reporter,configurations,collections,empty,list,else,string,named,reporters,split,pattern,split,defined,reporters,reporter,configurations,new,array,list,named,reporters,length,for,string,named,reporter,named,reporters,delegating,configuration,delegating,configuration,new,delegating,configuration,configuration,config,constants,named,reporter,reporter,configurations,add,tuple2,of,named,reporter,configuration,delegating,configuration,return,new,metric,registry,configuration,scope,formats,delim,reporter,configurations
MetricRegistryConfiguration -> public static MetricRegistryConfiguration fromConfiguration(Configuration configuration);1509447225;Create a metric registry configuration object from the given {@link Configuration}.__@param configuration to generate the metric registry configuration from_@return Metric registry configuration generated from the configuration;public static MetricRegistryConfiguration fromConfiguration(Configuration configuration) {_		ScopeFormats scopeFormats__		try {_			scopeFormats = ScopeFormats.fromConfig(configuration)__		} catch (Exception e) {_			LOG.warn("Failed to parse scope format, using default scope formats", e)__			scopeFormats = ScopeFormats.fromConfig(new Configuration())__		}__		char delim__		try {_			delim = configuration.getString(MetricOptions.SCOPE_DELIMITER).charAt(0)__		} catch (Exception e) {_			LOG.warn("Failed to parse delimiter, using default delimiter.", e)__			delim = '.'__		}__		final String definedReporters = configuration.getString(MetricOptions.REPORTERS_LIST)__		List<Tuple2<String, Configuration>> reporterConfigurations___		if (definedReporters == null) {_			reporterConfigurations = Collections.emptyList()__		} else {_			String[] namedReporters = splitPattern.split(definedReporters)___			reporterConfigurations = new ArrayList<>(namedReporters.length)___			for (String namedReporter: namedReporters) {_				DelegatingConfiguration delegatingConfiguration = new DelegatingConfiguration(_					configuration,_					ConfigConstants.METRICS_REPORTER_PREFIX + namedReporter + '.')___				reporterConfigurations.add(Tuple2.of(namedReporter, (Configuration) delegatingConfiguration))__			}_		}__		return new MetricRegistryConfiguration(scopeFormats, delim, reporterConfigurations)__	};create,a,metric,registry,configuration,object,from,the,given,link,configuration,param,configuration,to,generate,the,metric,registry,configuration,from,return,metric,registry,configuration,generated,from,the,configuration;public,static,metric,registry,configuration,from,configuration,configuration,configuration,scope,formats,scope,formats,try,scope,formats,scope,formats,from,config,configuration,catch,exception,e,log,warn,failed,to,parse,scope,format,using,default,scope,formats,e,scope,formats,scope,formats,from,config,new,configuration,char,delim,try,delim,configuration,get,string,metric,options,char,at,0,catch,exception,e,log,warn,failed,to,parse,delimiter,using,default,delimiter,e,delim,final,string,defined,reporters,configuration,get,string,metric,options,list,tuple2,string,configuration,reporter,configurations,if,defined,reporters,null,reporter,configurations,collections,empty,list,else,string,named,reporters,split,pattern,split,defined,reporters,reporter,configurations,new,array,list,named,reporters,length,for,string,named,reporter,named,reporters,delegating,configuration,delegating,configuration,new,delegating,configuration,configuration,config,constants,named,reporter,reporter,configurations,add,tuple2,of,named,reporter,configuration,delegating,configuration,return,new,metric,registry,configuration,scope,formats,delim,reporter,configurations
MetricRegistryConfiguration -> public static MetricRegistryConfiguration fromConfiguration(Configuration configuration);1509547920;Create a metric registry configuration object from the given {@link Configuration}.__@param configuration to generate the metric registry configuration from_@return Metric registry configuration generated from the configuration;public static MetricRegistryConfiguration fromConfiguration(Configuration configuration) {_		ScopeFormats scopeFormats__		try {_			scopeFormats = ScopeFormats.fromConfig(configuration)__		} catch (Exception e) {_			LOG.warn("Failed to parse scope format, using default scope formats", e)__			scopeFormats = ScopeFormats.fromConfig(new Configuration())__		}__		char delim__		try {_			delim = configuration.getString(MetricOptions.SCOPE_DELIMITER).charAt(0)__		} catch (Exception e) {_			LOG.warn("Failed to parse delimiter, using default delimiter.", e)__			delim = '.'__		}__		final String definedReporters = configuration.getString(MetricOptions.REPORTERS_LIST)__		List<Tuple2<String, Configuration>> reporterConfigurations___		if (definedReporters == null) {_			reporterConfigurations = Collections.emptyList()__		} else {_			String[] namedReporters = splitPattern.split(definedReporters)___			reporterConfigurations = new ArrayList<>(namedReporters.length)___			for (String namedReporter: namedReporters) {_				DelegatingConfiguration delegatingConfiguration = new DelegatingConfiguration(_					configuration,_					ConfigConstants.METRICS_REPORTER_PREFIX + namedReporter + '.')___				reporterConfigurations.add(Tuple2.of(namedReporter, (Configuration) delegatingConfiguration))__			}_		}__		return new MetricRegistryConfiguration(scopeFormats, delim, reporterConfigurations)__	};create,a,metric,registry,configuration,object,from,the,given,link,configuration,param,configuration,to,generate,the,metric,registry,configuration,from,return,metric,registry,configuration,generated,from,the,configuration;public,static,metric,registry,configuration,from,configuration,configuration,configuration,scope,formats,scope,formats,try,scope,formats,scope,formats,from,config,configuration,catch,exception,e,log,warn,failed,to,parse,scope,format,using,default,scope,formats,e,scope,formats,scope,formats,from,config,new,configuration,char,delim,try,delim,configuration,get,string,metric,options,char,at,0,catch,exception,e,log,warn,failed,to,parse,delimiter,using,default,delimiter,e,delim,final,string,defined,reporters,configuration,get,string,metric,options,list,tuple2,string,configuration,reporter,configurations,if,defined,reporters,null,reporter,configurations,collections,empty,list,else,string,named,reporters,split,pattern,split,defined,reporters,reporter,configurations,new,array,list,named,reporters,length,for,string,named,reporter,named,reporters,delegating,configuration,delegating,configuration,new,delegating,configuration,configuration,config,constants,named,reporter,reporter,configurations,add,tuple2,of,named,reporter,configuration,delegating,configuration,return,new,metric,registry,configuration,scope,formats,delim,reporter,configurations
MetricRegistryConfiguration -> public static MetricRegistryConfiguration fromConfiguration(Configuration configuration);1513102155;Create a metric registry configuration object from the given {@link Configuration}.__@param configuration to generate the metric registry configuration from_@return Metric registry configuration generated from the configuration;public static MetricRegistryConfiguration fromConfiguration(Configuration configuration) {_		ScopeFormats scopeFormats__		try {_			scopeFormats = ScopeFormats.fromConfig(configuration)__		} catch (Exception e) {_			LOG.warn("Failed to parse scope format, using default scope formats", e)__			scopeFormats = ScopeFormats.fromConfig(new Configuration())__		}__		char delim__		try {_			delim = configuration.getString(MetricOptions.SCOPE_DELIMITER).charAt(0)__		} catch (Exception e) {_			LOG.warn("Failed to parse delimiter, using default delimiter.", e)__			delim = '.'__		}__		String includedReportersString = configuration.getString(MetricOptions.REPORTERS_LIST, "")__		Set<String> includedReporters = reporterListPattern.splitAsStream(includedReportersString)_			.collect(Collectors.toSet())___		_		Set<String> namedReporters = new TreeSet<>(String::compareTo)__		_		for (String key : configuration.keySet()) {_			if (key.startsWith(ConfigConstants.METRICS_REPORTER_PREFIX)) {_				Matcher matcher = reporterClassPattern.matcher(key)__				if (matcher.matches()) {_					String reporterName = matcher.group(1)__					if (includedReporters.isEmpty() || includedReporters.contains(reporterName)) {_						if (namedReporters.contains(reporterName)) {_							LOG.warn("Duplicate class configuration detected for reporter {}.", reporterName)__						} else {_							namedReporters.add(reporterName)__						}_					} else {_						LOG.info("Excluding reporter {}, not configured in reporter list ({}).", reporterName, includedReportersString)__					}_				}_			}_		}__		List<Tuple2<String, Configuration>> reporterConfigurations___		if (namedReporters.isEmpty()) {_			reporterConfigurations = Collections.emptyList()__		} else {_			reporterConfigurations = new ArrayList<>(namedReporters.size())___			for (String namedReporter: namedReporters) {_				DelegatingConfiguration delegatingConfiguration = new DelegatingConfiguration(_					configuration,_					ConfigConstants.METRICS_REPORTER_PREFIX + namedReporter + '.')___				reporterConfigurations.add(Tuple2.of(namedReporter, (Configuration) delegatingConfiguration))__			}_		}__		return new MetricRegistryConfiguration(scopeFormats, delim, reporterConfigurations)__	};create,a,metric,registry,configuration,object,from,the,given,link,configuration,param,configuration,to,generate,the,metric,registry,configuration,from,return,metric,registry,configuration,generated,from,the,configuration;public,static,metric,registry,configuration,from,configuration,configuration,configuration,scope,formats,scope,formats,try,scope,formats,scope,formats,from,config,configuration,catch,exception,e,log,warn,failed,to,parse,scope,format,using,default,scope,formats,e,scope,formats,scope,formats,from,config,new,configuration,char,delim,try,delim,configuration,get,string,metric,options,char,at,0,catch,exception,e,log,warn,failed,to,parse,delimiter,using,default,delimiter,e,delim,string,included,reporters,string,configuration,get,string,metric,options,set,string,included,reporters,reporter,list,pattern,split,as,stream,included,reporters,string,collect,collectors,to,set,set,string,named,reporters,new,tree,set,string,compare,to,for,string,key,configuration,key,set,if,key,starts,with,config,constants,matcher,matcher,reporter,class,pattern,matcher,key,if,matcher,matches,string,reporter,name,matcher,group,1,if,included,reporters,is,empty,included,reporters,contains,reporter,name,if,named,reporters,contains,reporter,name,log,warn,duplicate,class,configuration,detected,for,reporter,reporter,name,else,named,reporters,add,reporter,name,else,log,info,excluding,reporter,not,configured,in,reporter,list,reporter,name,included,reporters,string,list,tuple2,string,configuration,reporter,configurations,if,named,reporters,is,empty,reporter,configurations,collections,empty,list,else,reporter,configurations,new,array,list,named,reporters,size,for,string,named,reporter,named,reporters,delegating,configuration,delegating,configuration,new,delegating,configuration,configuration,config,constants,named,reporter,reporter,configurations,add,tuple2,of,named,reporter,configuration,delegating,configuration,return,new,metric,registry,configuration,scope,formats,delim,reporter,configurations
MetricRegistryConfiguration -> public static MetricRegistryConfiguration fromConfiguration(Configuration configuration);1544536073;Create a metric registry configuration object from the given {@link Configuration}.__@param configuration to generate the metric registry configuration from_@return Metric registry configuration generated from the configuration;public static MetricRegistryConfiguration fromConfiguration(Configuration configuration) {_		ScopeFormats scopeFormats__		try {_			scopeFormats = ScopeFormats.fromConfig(configuration)__		} catch (Exception e) {_			LOG.warn("Failed to parse scope format, using default scope formats", e)__			scopeFormats = ScopeFormats.fromConfig(new Configuration())__		}__		char delim__		try {_			delim = configuration.getString(MetricOptions.SCOPE_DELIMITER).charAt(0)__		} catch (Exception e) {_			LOG.warn("Failed to parse delimiter, using default delimiter.", e)__			delim = '.'__		}__		String includedReportersString = configuration.getString(MetricOptions.REPORTERS_LIST, "")__		Set<String> includedReporters = reporterListPattern.splitAsStream(includedReportersString)_			.collect(Collectors.toSet())___		_		Set<String> namedReporters = new TreeSet<>(String::compareTo)__		_		for (String key : configuration.keySet()) {_			if (key.startsWith(ConfigConstants.METRICS_REPORTER_PREFIX)) {_				Matcher matcher = reporterClassPattern.matcher(key)__				if (matcher.matches()) {_					String reporterName = matcher.group(1)__					if (includedReporters.isEmpty() || includedReporters.contains(reporterName)) {_						if (namedReporters.contains(reporterName)) {_							LOG.warn("Duplicate class configuration detected for reporter {}.", reporterName)__						} else {_							namedReporters.add(reporterName)__						}_					} else {_						LOG.info("Excluding reporter {}, not configured in reporter list ({}).", reporterName, includedReportersString)__					}_				}_			}_		}__		List<Tuple2<String, Configuration>> reporterConfigurations___		if (namedReporters.isEmpty()) {_			reporterConfigurations = Collections.emptyList()__		} else {_			reporterConfigurations = new ArrayList<>(namedReporters.size())___			for (String namedReporter: namedReporters) {_				DelegatingConfiguration delegatingConfiguration = new DelegatingConfiguration(_					configuration,_					ConfigConstants.METRICS_REPORTER_PREFIX + namedReporter + '.')___				reporterConfigurations.add(Tuple2.of(namedReporter, (Configuration) delegatingConfiguration))__			}_		}__		final String maxFrameSizeStr = configuration.getString(AkkaOptions.FRAMESIZE)__		final String akkaConfigStr = String.format("akka {remote {netty.tcp {maximum-frame-size = %s}}}", maxFrameSizeStr)__		final Config akkaConfig = ConfigFactory.parseString(akkaConfigStr)__		final long maximumFrameSize = akkaConfig.getBytes("akka.remote.netty.tcp.maximum-frame-size")___		_		final long messageSizeLimitPadding = 256___		return new MetricRegistryConfiguration(scopeFormats, delim, reporterConfigurations, maximumFrameSize - messageSizeLimitPadding)__	};create,a,metric,registry,configuration,object,from,the,given,link,configuration,param,configuration,to,generate,the,metric,registry,configuration,from,return,metric,registry,configuration,generated,from,the,configuration;public,static,metric,registry,configuration,from,configuration,configuration,configuration,scope,formats,scope,formats,try,scope,formats,scope,formats,from,config,configuration,catch,exception,e,log,warn,failed,to,parse,scope,format,using,default,scope,formats,e,scope,formats,scope,formats,from,config,new,configuration,char,delim,try,delim,configuration,get,string,metric,options,char,at,0,catch,exception,e,log,warn,failed,to,parse,delimiter,using,default,delimiter,e,delim,string,included,reporters,string,configuration,get,string,metric,options,set,string,included,reporters,reporter,list,pattern,split,as,stream,included,reporters,string,collect,collectors,to,set,set,string,named,reporters,new,tree,set,string,compare,to,for,string,key,configuration,key,set,if,key,starts,with,config,constants,matcher,matcher,reporter,class,pattern,matcher,key,if,matcher,matches,string,reporter,name,matcher,group,1,if,included,reporters,is,empty,included,reporters,contains,reporter,name,if,named,reporters,contains,reporter,name,log,warn,duplicate,class,configuration,detected,for,reporter,reporter,name,else,named,reporters,add,reporter,name,else,log,info,excluding,reporter,not,configured,in,reporter,list,reporter,name,included,reporters,string,list,tuple2,string,configuration,reporter,configurations,if,named,reporters,is,empty,reporter,configurations,collections,empty,list,else,reporter,configurations,new,array,list,named,reporters,size,for,string,named,reporter,named,reporters,delegating,configuration,delegating,configuration,new,delegating,configuration,configuration,config,constants,named,reporter,reporter,configurations,add,tuple2,of,named,reporter,configuration,delegating,configuration,final,string,max,frame,size,str,configuration,get,string,akka,options,framesize,final,string,akka,config,str,string,format,akka,remote,netty,tcp,maximum,frame,size,s,max,frame,size,str,final,config,akka,config,config,factory,parse,string,akka,config,str,final,long,maximum,frame,size,akka,config,get,bytes,akka,remote,netty,tcp,maximum,frame,size,final,long,message,size,limit,padding,256,return,new,metric,registry,configuration,scope,formats,delim,reporter,configurations,maximum,frame,size,message,size,limit,padding
MetricRegistryConfiguration -> public static MetricRegistryConfiguration fromConfiguration(Configuration configuration);1548326020;Create a metric registry configuration object from the given {@link Configuration}.__@param configuration to generate the metric registry configuration from_@return Metric registry configuration generated from the configuration;public static MetricRegistryConfiguration fromConfiguration(Configuration configuration) {_		ScopeFormats scopeFormats__		try {_			scopeFormats = ScopeFormats.fromConfig(configuration)__		} catch (Exception e) {_			LOG.warn("Failed to parse scope format, using default scope formats", e)__			scopeFormats = ScopeFormats.fromConfig(new Configuration())__		}__		char delim__		try {_			delim = configuration.getString(MetricOptions.SCOPE_DELIMITER).charAt(0)__		} catch (Exception e) {_			LOG.warn("Failed to parse delimiter, using default delimiter.", e)__			delim = '.'__		}__		String includedReportersString = configuration.getString(MetricOptions.REPORTERS_LIST, "")__		Set<String> includedReporters = reporterListPattern.splitAsStream(includedReportersString)_			.collect(Collectors.toSet())___		_		Set<String> namedReporters = new TreeSet<>(String::compareTo)__		_		for (String key : configuration.keySet()) {_			if (key.startsWith(ConfigConstants.METRICS_REPORTER_PREFIX)) {_				Matcher matcher = reporterClassPattern.matcher(key)__				if (matcher.matches()) {_					String reporterName = matcher.group(1)__					if (includedReporters.isEmpty() || includedReporters.contains(reporterName)) {_						if (namedReporters.contains(reporterName)) {_							LOG.warn("Duplicate class configuration detected for reporter {}.", reporterName)__						} else {_							namedReporters.add(reporterName)__						}_					} else {_						LOG.info("Excluding reporter {}, not configured in reporter list ({}).", reporterName, includedReportersString)__					}_				}_			}_		}__		List<Tuple2<String, Configuration>> reporterConfigurations___		if (namedReporters.isEmpty()) {_			reporterConfigurations = Collections.emptyList()__		} else {_			reporterConfigurations = new ArrayList<>(namedReporters.size())___			for (String namedReporter: namedReporters) {_				DelegatingConfiguration delegatingConfiguration = new DelegatingConfiguration(_					configuration,_					ConfigConstants.METRICS_REPORTER_PREFIX + namedReporter + '.')___				reporterConfigurations.add(Tuple2.of(namedReporter, (Configuration) delegatingConfiguration))__			}_		}__		final long maximumFrameSize = AkkaRpcServiceUtils.extractMaximumFramesize(configuration)___		_		final long messageSizeLimitPadding = 256___		return new MetricRegistryConfiguration(scopeFormats, delim, reporterConfigurations, maximumFrameSize - messageSizeLimitPadding)__	};create,a,metric,registry,configuration,object,from,the,given,link,configuration,param,configuration,to,generate,the,metric,registry,configuration,from,return,metric,registry,configuration,generated,from,the,configuration;public,static,metric,registry,configuration,from,configuration,configuration,configuration,scope,formats,scope,formats,try,scope,formats,scope,formats,from,config,configuration,catch,exception,e,log,warn,failed,to,parse,scope,format,using,default,scope,formats,e,scope,formats,scope,formats,from,config,new,configuration,char,delim,try,delim,configuration,get,string,metric,options,char,at,0,catch,exception,e,log,warn,failed,to,parse,delimiter,using,default,delimiter,e,delim,string,included,reporters,string,configuration,get,string,metric,options,set,string,included,reporters,reporter,list,pattern,split,as,stream,included,reporters,string,collect,collectors,to,set,set,string,named,reporters,new,tree,set,string,compare,to,for,string,key,configuration,key,set,if,key,starts,with,config,constants,matcher,matcher,reporter,class,pattern,matcher,key,if,matcher,matches,string,reporter,name,matcher,group,1,if,included,reporters,is,empty,included,reporters,contains,reporter,name,if,named,reporters,contains,reporter,name,log,warn,duplicate,class,configuration,detected,for,reporter,reporter,name,else,named,reporters,add,reporter,name,else,log,info,excluding,reporter,not,configured,in,reporter,list,reporter,name,included,reporters,string,list,tuple2,string,configuration,reporter,configurations,if,named,reporters,is,empty,reporter,configurations,collections,empty,list,else,reporter,configurations,new,array,list,named,reporters,size,for,string,named,reporter,named,reporters,delegating,configuration,delegating,configuration,new,delegating,configuration,configuration,config,constants,named,reporter,reporter,configurations,add,tuple2,of,named,reporter,configuration,delegating,configuration,final,long,maximum,frame,size,akka,rpc,service,utils,extract,maximum,framesize,configuration,final,long,message,size,limit,padding,256,return,new,metric,registry,configuration,scope,formats,delim,reporter,configurations,maximum,frame,size,message,size,limit,padding
MetricRegistryConfiguration -> public static MetricRegistryConfiguration fromConfiguration(Configuration configuration);1549787706;Create a metric registry configuration object from the given {@link Configuration}.__@param configuration to generate the metric registry configuration from_@return Metric registry configuration generated from the configuration;public static MetricRegistryConfiguration fromConfiguration(Configuration configuration) {_		ScopeFormats scopeFormats__		try {_			scopeFormats = ScopeFormats.fromConfig(configuration)__		} catch (Exception e) {_			LOG.warn("Failed to parse scope format, using default scope formats", e)__			scopeFormats = ScopeFormats.fromConfig(new Configuration())__		}__		char delim__		try {_			delim = configuration.getString(MetricOptions.SCOPE_DELIMITER).charAt(0)__		} catch (Exception e) {_			LOG.warn("Failed to parse delimiter, using default delimiter.", e)__			delim = '.'__		}__		String includedReportersString = configuration.getString(MetricOptions.REPORTERS_LIST, "")__		Set<String> includedReporters = reporterListPattern.splitAsStream(includedReportersString)_			.filter(r -> !r.isEmpty()) _			.collect(Collectors.toSet())___		_		Set<String> namedReporters = new TreeSet<>(String::compareTo)__		_		for (String key : configuration.keySet()) {_			if (key.startsWith(ConfigConstants.METRICS_REPORTER_PREFIX)) {_				Matcher matcher = reporterClassPattern.matcher(key)__				if (matcher.matches()) {_					String reporterName = matcher.group(1)__					if (includedReporters.isEmpty() || includedReporters.contains(reporterName)) {_						if (namedReporters.contains(reporterName)) {_							LOG.warn("Duplicate class configuration detected for reporter {}.", reporterName)__						} else {_							namedReporters.add(reporterName)__						}_					} else {_						LOG.info("Excluding reporter {}, not configured in reporter list ({}).", reporterName, includedReportersString)__					}_				}_			}_		}__		List<Tuple2<String, Configuration>> reporterConfigurations___		if (namedReporters.isEmpty()) {_			reporterConfigurations = Collections.emptyList()__		} else {_			reporterConfigurations = new ArrayList<>(namedReporters.size())___			for (String namedReporter: namedReporters) {_				DelegatingConfiguration delegatingConfiguration = new DelegatingConfiguration(_					configuration,_					ConfigConstants.METRICS_REPORTER_PREFIX + namedReporter + '.')___				reporterConfigurations.add(Tuple2.of(namedReporter, (Configuration) delegatingConfiguration))__			}_		}__		final long maximumFrameSize = AkkaRpcServiceUtils.extractMaximumFramesize(configuration)___		_		final long messageSizeLimitPadding = 256___		return new MetricRegistryConfiguration(scopeFormats, delim, reporterConfigurations, maximumFrameSize - messageSizeLimitPadding)__	};create,a,metric,registry,configuration,object,from,the,given,link,configuration,param,configuration,to,generate,the,metric,registry,configuration,from,return,metric,registry,configuration,generated,from,the,configuration;public,static,metric,registry,configuration,from,configuration,configuration,configuration,scope,formats,scope,formats,try,scope,formats,scope,formats,from,config,configuration,catch,exception,e,log,warn,failed,to,parse,scope,format,using,default,scope,formats,e,scope,formats,scope,formats,from,config,new,configuration,char,delim,try,delim,configuration,get,string,metric,options,char,at,0,catch,exception,e,log,warn,failed,to,parse,delimiter,using,default,delimiter,e,delim,string,included,reporters,string,configuration,get,string,metric,options,set,string,included,reporters,reporter,list,pattern,split,as,stream,included,reporters,string,filter,r,r,is,empty,collect,collectors,to,set,set,string,named,reporters,new,tree,set,string,compare,to,for,string,key,configuration,key,set,if,key,starts,with,config,constants,matcher,matcher,reporter,class,pattern,matcher,key,if,matcher,matches,string,reporter,name,matcher,group,1,if,included,reporters,is,empty,included,reporters,contains,reporter,name,if,named,reporters,contains,reporter,name,log,warn,duplicate,class,configuration,detected,for,reporter,reporter,name,else,named,reporters,add,reporter,name,else,log,info,excluding,reporter,not,configured,in,reporter,list,reporter,name,included,reporters,string,list,tuple2,string,configuration,reporter,configurations,if,named,reporters,is,empty,reporter,configurations,collections,empty,list,else,reporter,configurations,new,array,list,named,reporters,size,for,string,named,reporter,named,reporters,delegating,configuration,delegating,configuration,new,delegating,configuration,configuration,config,constants,named,reporter,reporter,configurations,add,tuple2,of,named,reporter,configuration,delegating,configuration,final,long,maximum,frame,size,akka,rpc,service,utils,extract,maximum,framesize,configuration,final,long,message,size,limit,padding,256,return,new,metric,registry,configuration,scope,formats,delim,reporter,configurations,maximum,frame,size,message,size,limit,padding
