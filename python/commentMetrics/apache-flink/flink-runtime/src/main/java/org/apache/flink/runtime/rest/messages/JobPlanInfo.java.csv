commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@JsonIgnore public String getJsonPlan() {     return jsonPlan.json. }
false;public;1;11;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     JobPlanInfo that = (JobPlanInfo) o.     return Objects.equals(jsonPlan, that.jsonPlan). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(jsonPlan). }
false;public;0;6;;@Override public String toString() {     return "JobPlanInfo{" + "jsonPlan=" + jsonPlan + '}'. }
false;public;1;11;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     RawJson rawJson = (RawJson) o.     return Objects.equals(json, rawJson.json). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(json). }
false;public;0;6;;@Override public String toString() {     return "RawJson{" + "json='" + json + '\'' + '}'. }
false;public;3;7;;@Override public void serialize(RawJson jobPlanInfo, JsonGenerator jsonGenerator, SerializerProvider serializerProvider) throws IOException {     jsonGenerator.writeRawValue(jobPlanInfo.json). }
false;public;2;7;;@Override public RawJson deserialize(JsonParser jsonParser, DeserializationContext deserializationContext) throws IOException {     final JsonNode rootNode = jsonParser.readValueAsTree().     return new RawJson(rootNode.toString()). }
