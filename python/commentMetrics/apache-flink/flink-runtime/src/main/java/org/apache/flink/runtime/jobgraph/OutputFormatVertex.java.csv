commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;public void setFormatDescription(String formatDescription) {     this.formatDescription = formatDescription. }
false;public;0;3;;public String getFormatDescription() {     return formatDescription. }
false;public;1;42;;@Override public void initializeOnMaster(ClassLoader loader) throws Exception {     final TaskConfig cfg = new TaskConfig(getConfiguration()).     UserCodeWrapper<OutputFormat<?>> wrapper.     try {         wrapper = cfg.<OutputFormat<?>>getStubWrapper(loader).     } catch (Throwable t) {         throw new Exception("Deserializing the OutputFormat (" + formatDescription + ") failed: " + t.getMessage(), t).     }     if (wrapper == null) {         throw new Exception("No input format present in InputFormatVertex's task configuration.").     }     OutputFormat<?> outputFormat.     try {         outputFormat = wrapper.getUserCodeObject(OutputFormat.class, loader).     } catch (Throwable t) {         throw new Exception("Instantiating the OutputFormat (" + formatDescription + ") failed: " + t.getMessage(), t).     }     // set user classloader before calling user code     final ClassLoader prevContextCl = Thread.currentThread().getContextClassLoader().     Thread.currentThread().setContextClassLoader(loader).     try {         // configure output format         try {             outputFormat.configure(cfg.getStubParameters()).         } catch (Throwable t) {             throw new Exception("Configuring the OutputFormat (" + formatDescription + ") failed: " + t.getMessage(), t).         }         if (outputFormat instanceof InitializeOnMaster) {             ((InitializeOnMaster) outputFormat).initializeGlobal(getParallelism()).         }     } finally {         // restore previous classloader         Thread.currentThread().setContextClassLoader(prevContextCl).     } }
false;public;1;42;;@Override public void finalizeOnMaster(ClassLoader loader) throws Exception {     final TaskConfig cfg = new TaskConfig(getConfiguration()).     UserCodeWrapper<OutputFormat<?>> wrapper.     try {         wrapper = cfg.<OutputFormat<?>>getStubWrapper(loader).     } catch (Throwable t) {         throw new Exception("Deserializing the OutputFormat (" + formatDescription + ") failed: " + t.getMessage(), t).     }     if (wrapper == null) {         throw new Exception("No input format present in InputFormatVertex's task configuration.").     }     OutputFormat<?> outputFormat.     try {         outputFormat = wrapper.getUserCodeObject(OutputFormat.class, loader).     } catch (Throwable t) {         throw new Exception("Instantiating the OutputFormat (" + formatDescription + ") failed: " + t.getMessage(), t).     }     // set user classloader before calling user code     final ClassLoader prevContextCl = Thread.currentThread().getContextClassLoader().     Thread.currentThread().setContextClassLoader(loader).     try {         // configure output format         try {             outputFormat.configure(cfg.getStubParameters()).         } catch (Throwable t) {             throw new Exception("Configuring the OutputFormat (" + formatDescription + ") failed: " + t.getMessage(), t).         }         if (outputFormat instanceof FinalizeOnMaster) {             ((FinalizeOnMaster) outputFormat).finalizeGlobal(getParallelism()).         }     } finally {         // restore previous classloader         Thread.currentThread().setContextClassLoader(prevContextCl).     } }
