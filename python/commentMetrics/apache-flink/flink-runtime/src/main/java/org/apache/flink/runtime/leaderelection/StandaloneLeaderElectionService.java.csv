commented;modifiers;parameterAmount;loc;comment;code
false;public;1;12;;@Override public void start(LeaderContender newContender) throws Exception {     if (contender != null) {         // Service was already started         throw new IllegalArgumentException("Leader election service cannot be started multiple times.").     }     contender = Preconditions.checkNotNull(newContender).     // directly grant leadership to the given contender     contender.grantLeadership(HighAvailabilityServices.DEFAULT_LEADER_ID). }
false;public;0;7;;@Override public void stop() {     if (contender != null) {         contender.revokeLeadership().         contender = null.     } }
false;public;1;2;;@Override public void confirmLeaderSessionID(UUID leaderSessionID) { }
false;public;1;4;;@Override public boolean hasLeadership(@Nonnull UUID leaderSessionId) {     return (contender != null && HighAvailabilityServices.DEFAULT_LEADER_ID.equals(leaderSessionId)). }
