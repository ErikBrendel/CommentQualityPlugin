commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public Class<JobSubmitRequestBody> getRequestClass() {     return JobSubmitRequestBody.class. }
false;public;0;4;;@Override public HttpMethodWrapper getHttpMethod() {     return HttpMethodWrapper.POST. }
false;public;0;4;;@Override public String getTargetRestEndpointURL() {     return URL. }
false;public;0;4;;@Override public Class<JobSubmitResponseBody> getResponseClass() {     return JobSubmitResponseBody.class. }
false;public;0;4;;@Override public HttpResponseStatus getResponseStatusCode() {     return HttpResponseStatus.ACCEPTED. }
false;public;0;4;;@Override public EmptyMessageParameters getUnresolvedMessageParameters() {     return EmptyMessageParameters.getInstance(). }
false;public,static;0;3;;public static JobSubmitHeaders getInstance() {     return INSTANCE. }
false;public;0;7;;@Override public String getDescription() {     return "Submits a job. This call is primarily intended to be used by the Flink client. This call expects a " + "multipart/form-data request that consists of file uploads for the serialized JobGraph, jars and " + "distributed cache artifacts and an attribute named \"" + FileUploadHandler.HTTP_ATTRIBUTE_REQUEST + "\" for " + "the JSON payload.". }
false;public;0;4;;@Override public boolean acceptsFileUploads() {     return true. }
