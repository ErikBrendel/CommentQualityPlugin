# id;timestamp;commentText;codeText;commentWords;codeWords
AsynchronousBlockWriterWithCallback -> protected AsynchronousBlockWriterWithCallback(FileIOChannel.ID channelID, RequestQueue<WriteRequest> requestQueue, 			RequestDoneCallback<MemorySegment> callback) throws IOException;1421050512;Creates a new asynchronous block writer for the given channel.__@param channelID The ID of the channel to write to._@param requestQueue The request queue of the asynchronous writer thread, to which the I/O requests are added._@param callback The callback to be invoked when requests are done._@throws IOException Thrown, if the underlying file channel could not be opened exclusively.;protected AsynchronousBlockWriterWithCallback(FileIOChannel.ID channelID, RequestQueue<WriteRequest> requestQueue,_			RequestDoneCallback<MemorySegment> callback) throws IOException_	{_		super(channelID, requestQueue, callback, true)__	};creates,a,new,asynchronous,block,writer,for,the,given,channel,param,channel,id,the,id,of,the,channel,to,write,to,param,request,queue,the,request,queue,of,the,asynchronous,writer,thread,to,which,the,i,o,requests,are,added,param,callback,the,callback,to,be,invoked,when,requests,are,done,throws,ioexception,thrown,if,the,underlying,file,channel,could,not,be,opened,exclusively;protected,asynchronous,block,writer,with,callback,file,iochannel,id,channel,id,request,queue,write,request,request,queue,request,done,callback,memory,segment,callback,throws,ioexception,super,channel,id,request,queue,callback,true
AsynchronousBlockWriterWithCallback -> protected AsynchronousBlockWriterWithCallback(FileIOChannel.ID channelID, RequestQueue<WriteRequest> requestQueue, 			RequestDoneCallback<MemorySegment> callback) throws IOException;1426697080;Creates a new asynchronous block writer for the given channel.__@param channelID The ID of the channel to write to._@param requestQueue The request queue of the asynchronous writer thread, to which the I/O requests are added._@param callback The callback to be invoked when requests are done._@throws IOException Thrown, if the underlying file channel could not be opened exclusively.;protected AsynchronousBlockWriterWithCallback(FileIOChannel.ID channelID, RequestQueue<WriteRequest> requestQueue,_			RequestDoneCallback<MemorySegment> callback) throws IOException_	{_		super(channelID, requestQueue, callback, true)__	};creates,a,new,asynchronous,block,writer,for,the,given,channel,param,channel,id,the,id,of,the,channel,to,write,to,param,request,queue,the,request,queue,of,the,asynchronous,writer,thread,to,which,the,i,o,requests,are,added,param,callback,the,callback,to,be,invoked,when,requests,are,done,throws,ioexception,thrown,if,the,underlying,file,channel,could,not,be,opened,exclusively;protected,asynchronous,block,writer,with,callback,file,iochannel,id,channel,id,request,queue,write,request,request,queue,request,done,callback,memory,segment,callback,throws,ioexception,super,channel,id,request,queue,callback,true
AsynchronousBlockWriterWithCallback -> @Override 	public void writeBlock(MemorySegment segment) throws IOException;1415702894;Issues a asynchronous write request to the writer.__@param segment The segment to be written._@throws IOException Thrown, when the writer encounters an I/O error. Due to the asynchronous nature of the_writer, the exception thrown here may have been caused by an earlier write request.;@Override_	public void writeBlock(MemorySegment segment) throws IOException {_		_		checkErroneous()__		_		_		this.requestsNotReturned.incrementAndGet()__		if (this.closed || this.requestQueue.isClosed()) {_			_			_			this.requestsNotReturned.decrementAndGet()__			throw new IOException("The writer has been closed.")__		}_		this.requestQueue.add(new SegmentWriteRequest(this, segment))__	};issues,a,asynchronous,write,request,to,the,writer,param,segment,the,segment,to,be,written,throws,ioexception,thrown,when,the,writer,encounters,an,i,o,error,due,to,the,asynchronous,nature,of,the,writer,the,exception,thrown,here,may,have,been,caused,by,an,earlier,write,request;override,public,void,write,block,memory,segment,segment,throws,ioexception,check,erroneous,this,requests,not,returned,increment,and,get,if,this,closed,this,request,queue,is,closed,this,requests,not,returned,decrement,and,get,throw,new,ioexception,the,writer,has,been,closed,this,request,queue,add,new,segment,write,request,this,segment
AsynchronousBlockWriterWithCallback -> @Override 	public void writeBlock(MemorySegment segment) throws IOException;1421050512;Issues a asynchronous write request to the writer.__@param segment The segment to be written._@throws IOException Thrown, when the writer encounters an I/O error. Due to the asynchronous nature of the_writer, the exception thrown here may have been caused by an earlier write request.;@Override_	public void writeBlock(MemorySegment segment) throws IOException {_		addRequest(new SegmentWriteRequest(this, segment))__	};issues,a,asynchronous,write,request,to,the,writer,param,segment,the,segment,to,be,written,throws,ioexception,thrown,when,the,writer,encounters,an,i,o,error,due,to,the,asynchronous,nature,of,the,writer,the,exception,thrown,here,may,have,been,caused,by,an,earlier,write,request;override,public,void,write,block,memory,segment,segment,throws,ioexception,add,request,new,segment,write,request,this,segment
AsynchronousBlockWriterWithCallback -> @Override 	public void writeBlock(MemorySegment segment) throws IOException;1426697080;Issues a asynchronous write request to the writer.__@param segment The segment to be written._@throws IOException Thrown, when the writer encounters an I/O error. Due to the asynchronous nature of the_writer, the exception thrown here may have been caused by an earlier write request.;@Override_	public void writeBlock(MemorySegment segment) throws IOException {_		addRequest(new SegmentWriteRequest(this, segment))__	};issues,a,asynchronous,write,request,to,the,writer,param,segment,the,segment,to,be,written,throws,ioexception,thrown,when,the,writer,encounters,an,i,o,error,due,to,the,asynchronous,nature,of,the,writer,the,exception,thrown,here,may,have,been,caused,by,an,earlier,write,request;override,public,void,write,block,memory,segment,segment,throws,ioexception,add,request,new,segment,write,request,this,segment
