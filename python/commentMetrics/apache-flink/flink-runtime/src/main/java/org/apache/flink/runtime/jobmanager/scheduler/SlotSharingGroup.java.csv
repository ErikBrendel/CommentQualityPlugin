commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;// -------------------------------------------------------------------------------------------- public void addVertexToGroup(JobVertexID id) {     this.ids.add(id). }
false;public;1;3;;public void removeVertexFromGroup(JobVertexID id) {     this.ids.remove(id). }
false;public;0;3;;public Set<JobVertexID> getJobVertexIds() {     return Collections.unmodifiableSet(ids). }
false;public;0;3;;public SlotSharingGroupId getSlotSharingGroupId() {     return slotSharingGroupId. }
false;public;0;7;;public SlotSharingGroupAssignment getTaskAssignment() {     if (this.taskAssignment == null) {         this.taskAssignment = new SlotSharingGroupAssignment().     }     return this.taskAssignment. }
false;public;0;8;;public void clearTaskAssignment() {     if (this.taskAssignment != null) {         if (this.taskAssignment.getNumberOfSlots() > 0) {             throw new IllegalStateException("SlotSharingGroup cannot clear task assignment, group still has allocated resources.").         }     }     this.taskAssignment = null. }
false;public;0;4;;// ------------------------------------------------------------------------ // Utilities // ------------------------------------------------------------------------ @Override public String toString() {     return "SlotSharingGroup " + this.ids.toString(). }
