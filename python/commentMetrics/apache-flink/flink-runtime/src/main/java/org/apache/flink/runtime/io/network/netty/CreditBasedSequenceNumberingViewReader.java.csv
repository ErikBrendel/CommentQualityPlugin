# id;timestamp;commentText;codeText;commentWords;codeWords
CreditBasedSequenceNumberingViewReader -> @Override 	public boolean isAvailable();1518785736;Returns true only if the next buffer is an event or the reader has both available_credits and buffers.;@Override_	public boolean isAvailable() {_		_		return numBuffersAvailable.get() > 0 &&_			(numCreditsAvailable > 0 || subpartitionView.nextBufferIsEvent())__	};returns,true,only,if,the,next,buffer,is,an,event,or,the,reader,has,both,available,credits,and,buffers;override,public,boolean,is,available,return,num,buffers,available,get,0,num,credits,available,0,subpartition,view,next,buffer,is,event
CreditBasedSequenceNumberingViewReader -> @Override 	public boolean isAvailable();1519039301;Returns true only if the next buffer is an event or the reader has both available_credits and buffers.;@Override_	public boolean isAvailable() {_		_		return buffersAvailable.get() &&_			(numCreditsAvailable > 0 || subpartitionView.nextBufferIsEvent())__	};returns,true,only,if,the,next,buffer,is,an,event,or,the,reader,has,both,available,credits,and,buffers;override,public,boolean,is,available,return,buffers,available,get,num,credits,available,0,subpartition,view,next,buffer,is,event
CreditBasedSequenceNumberingViewReader -> @Override 	public boolean isAvailable();1519834372;Returns true only if the next buffer is an event or the reader has both available_credits and buffers.;@Override_	public boolean isAvailable() {_		_		return hasBuffersAvailable() &&_			(numCreditsAvailable > 0 || subpartitionView.nextBufferIsEvent())__	};returns,true,only,if,the,next,buffer,is,an,event,or,the,reader,has,both,available,credits,and,buffers;override,public,boolean,is,available,return,has,buffers,available,num,credits,available,0,subpartition,view,next,buffer,is,event
CreditBasedSequenceNumberingViewReader -> @Override 	public boolean isAvailable();1520610580;Returns true only if the next buffer is an event or the reader has both available_credits and buffers.;@Override_	public boolean isAvailable() {_		_		return hasBuffersAvailable() &&_			(numCreditsAvailable > 0 || subpartitionView.nextBufferIsEvent())__	};returns,true,only,if,the,next,buffer,is,an,event,or,the,reader,has,both,available,credits,and,buffers;override,public,boolean,is,available,return,has,buffers,available,num,credits,available,0,subpartition,view,next,buffer,is,event
CreditBasedSequenceNumberingViewReader -> private boolean isAvailable(BufferAndBacklog bufferAndBacklog);1519039301;Check whether this reader is available or not (internal use, in sync with_{@link #isAvailable()}, but slightly faster).__<p>Returns true only if the next buffer is an event or the reader has both available_credits and buffers.__@param bufferAndBacklog_current buffer and backlog including information about the next buffer;private boolean isAvailable(BufferAndBacklog bufferAndBacklog) {_		return bufferAndBacklog.isMoreAvailable() &&_			(numCreditsAvailable > 0 || bufferAndBacklog.nextBufferIsEvent())__	};check,whether,this,reader,is,available,or,not,internal,use,in,sync,with,link,is,available,but,slightly,faster,p,returns,true,only,if,the,next,buffer,is,an,event,or,the,reader,has,both,available,credits,and,buffers,param,buffer,and,backlog,current,buffer,and,backlog,including,information,about,the,next,buffer;private,boolean,is,available,buffer,and,backlog,buffer,and,backlog,return,buffer,and,backlog,is,more,available,num,credits,available,0,buffer,and,backlog,next,buffer,is,event
CreditBasedSequenceNumberingViewReader -> private boolean isAvailable(BufferAndBacklog bufferAndBacklog);1519834372;Check whether this reader is available or not (internal use, in sync with_{@link #isAvailable()}, but slightly faster).__<p>Returns true only if the next buffer is an event or the reader has both available_credits and buffers.__@param bufferAndBacklog_current buffer and backlog including information about the next buffer;private boolean isAvailable(BufferAndBacklog bufferAndBacklog) {_		return bufferAndBacklog.isMoreAvailable() &&_			(numCreditsAvailable > 0 || bufferAndBacklog.nextBufferIsEvent())__	};check,whether,this,reader,is,available,or,not,internal,use,in,sync,with,link,is,available,but,slightly,faster,p,returns,true,only,if,the,next,buffer,is,an,event,or,the,reader,has,both,available,credits,and,buffers,param,buffer,and,backlog,current,buffer,and,backlog,including,information,about,the,next,buffer;private,boolean,is,available,buffer,and,backlog,buffer,and,backlog,return,buffer,and,backlog,is,more,available,num,credits,available,0,buffer,and,backlog,next,buffer,is,event
CreditBasedSequenceNumberingViewReader -> private boolean isAvailable(BufferAndBacklog bufferAndBacklog);1520610580;Check whether this reader is available or not (internal use, in sync with_{@link #isAvailable()}, but slightly faster).__<p>Returns true only if the next buffer is an event or the reader has both available_credits and buffers.__@param bufferAndBacklog_current buffer and backlog including information about the next buffer;private boolean isAvailable(BufferAndBacklog bufferAndBacklog) {_		_		return bufferAndBacklog.isMoreAvailable() &&_			(numCreditsAvailable > 0 || bufferAndBacklog.nextBufferIsEvent())__	};check,whether,this,reader,is,available,or,not,internal,use,in,sync,with,link,is,available,but,slightly,faster,p,returns,true,only,if,the,next,buffer,is,an,event,or,the,reader,has,both,available,credits,and,buffers,param,buffer,and,backlog,current,buffer,and,backlog,including,information,about,the,next,buffer;private,boolean,is,available,buffer,and,backlog,buffer,and,backlog,return,buffer,and,backlog,is,more,available,num,credits,available,0,buffer,and,backlog,next,buffer,is,event
