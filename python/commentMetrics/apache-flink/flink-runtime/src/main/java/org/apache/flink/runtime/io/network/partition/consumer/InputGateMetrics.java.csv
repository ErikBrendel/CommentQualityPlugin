# id;timestamp;commentText;codeText;commentWords;codeWords
InputGateMetrics -> int refreshAndGetMin();1493302348;Iterates over all input channels and collects the minimum number of queued buffers in a_channel in a best-effort way.__@return minimum number of queued buffers per channel (<tt>0</tt> if no channels exist);int refreshAndGetMin() {_		int min = Integer.MAX_VALUE___		Collection<InputChannel> channels = inputGate.getInputChannels().values()__		if (channels.isEmpty()) {_			_			return 0__		}__		for (InputChannel channel : channels) {_			if (channel instanceof RemoteInputChannel) {_				RemoteInputChannel rc = (RemoteInputChannel) channel___				int size = rc.unsynchronizedGetNumberOfQueuedBuffers()__				min = Math.min(min, size)__			}_		}__		return min__	};iterates,over,all,input,channels,and,collects,the,minimum,number,of,queued,buffers,in,a,channel,in,a,best,effort,way,return,minimum,number,of,queued,buffers,per,channel,tt,0,tt,if,no,channels,exist;int,refresh,and,get,min,int,min,integer,collection,input,channel,channels,input,gate,get,input,channels,values,if,channels,is,empty,return,0,for,input,channel,channel,channels,if,channel,instanceof,remote,input,channel,remote,input,channel,rc,remote,input,channel,channel,int,size,rc,unsynchronized,get,number,of,queued,buffers,min,math,min,min,size,return,min
InputGateMetrics -> int refreshAndGetMin();1495122255;Iterates over all input channels and collects the minimum number of queued buffers in a_channel in a best-effort way.__@return minimum number of queued buffers per channel (<tt>0</tt> if no channels exist);int refreshAndGetMin() {_		int min = Integer.MAX_VALUE___		Collection<InputChannel> channels = inputGate.getInputChannels().values()__		if (channels.isEmpty()) {_			_			return 0__		}__		for (InputChannel channel : channels) {_			if (channel instanceof RemoteInputChannel) {_				RemoteInputChannel rc = (RemoteInputChannel) channel___				int size = rc.unsynchronizedGetNumberOfQueuedBuffers()__				min = Math.min(min, size)__			}_		}__		return min__	};iterates,over,all,input,channels,and,collects,the,minimum,number,of,queued,buffers,in,a,channel,in,a,best,effort,way,return,minimum,number,of,queued,buffers,per,channel,tt,0,tt,if,no,channels,exist;int,refresh,and,get,min,int,min,integer,collection,input,channel,channels,input,gate,get,input,channels,values,if,channels,is,empty,return,0,for,input,channel,channel,channels,if,channel,instanceof,remote,input,channel,remote,input,channel,rc,remote,input,channel,channel,int,size,rc,unsynchronized,get,number,of,queued,buffers,min,math,min,min,size,return,min
InputGateMetrics -> int refreshAndGetMin();1495220914;Iterates over all input channels and collects the minimum number of queued buffers in a_channel in a best-effort way.__@return minimum number of queued buffers per channel (<tt>0</tt> if no channels exist);int refreshAndGetMin() {_		int min = Integer.MAX_VALUE___		Collection<InputChannel> channels = inputGate.getInputChannels().values()___		for (InputChannel channel : channels) {_			if (channel instanceof RemoteInputChannel) {_				RemoteInputChannel rc = (RemoteInputChannel) channel___				int size = rc.unsynchronizedGetNumberOfQueuedBuffers()__				min = Math.min(min, size)__			}_		}__		if (min == Integer.MAX_VALUE) { _			return 0__		}_		return min__	};iterates,over,all,input,channels,and,collects,the,minimum,number,of,queued,buffers,in,a,channel,in,a,best,effort,way,return,minimum,number,of,queued,buffers,per,channel,tt,0,tt,if,no,channels,exist;int,refresh,and,get,min,int,min,integer,collection,input,channel,channels,input,gate,get,input,channels,values,for,input,channel,channel,channels,if,channel,instanceof,remote,input,channel,remote,input,channel,rc,remote,input,channel,channel,int,size,rc,unsynchronized,get,number,of,queued,buffers,min,math,min,min,size,if,min,integer,return,0,return,min
InputGateMetrics -> int refreshAndGetMin();1537385496;Iterates over all input channels and collects the minimum number of queued buffers in a_channel in a best-effort way.__@return minimum number of queued buffers per channel (<tt>0</tt> if no channels exist);int refreshAndGetMin() {_		int min = Integer.MAX_VALUE___		Collection<InputChannel> channels = inputGate.getInputChannels().values()___		for (InputChannel channel : channels) {_			if (channel instanceof RemoteInputChannel) {_				RemoteInputChannel rc = (RemoteInputChannel) channel___				int size = rc.unsynchronizedGetNumberOfQueuedBuffers()__				min = Math.min(min, size)__			}_		}__		if (min == Integer.MAX_VALUE) { _			return 0__		}_		return min__	};iterates,over,all,input,channels,and,collects,the,minimum,number,of,queued,buffers,in,a,channel,in,a,best,effort,way,return,minimum,number,of,queued,buffers,per,channel,tt,0,tt,if,no,channels,exist;int,refresh,and,get,min,int,min,integer,collection,input,channel,channels,input,gate,get,input,channels,values,for,input,channel,channel,channels,if,channel,instanceof,remote,input,channel,remote,input,channel,rc,remote,input,channel,channel,int,size,rc,unsynchronized,get,number,of,queued,buffers,min,math,min,min,size,if,min,integer,return,0,return,min
InputGateMetrics -> long refreshAndGetTotal();1493302348;Iterates over all input channels and collects the total number of queued buffers in a_best-effort way.__@return total number of queued buffers;long refreshAndGetTotal() {_		long total = 0___		for (InputChannel channel : inputGate.getInputChannels().values()) {_			if (channel instanceof RemoteInputChannel) {_				RemoteInputChannel rc = (RemoteInputChannel) channel___				total += rc.unsynchronizedGetNumberOfQueuedBuffers()__			}_		}__		return total__	};iterates,over,all,input,channels,and,collects,the,total,number,of,queued,buffers,in,a,best,effort,way,return,total,number,of,queued,buffers;long,refresh,and,get,total,long,total,0,for,input,channel,channel,input,gate,get,input,channels,values,if,channel,instanceof,remote,input,channel,remote,input,channel,rc,remote,input,channel,channel,total,rc,unsynchronized,get,number,of,queued,buffers,return,total
InputGateMetrics -> long refreshAndGetTotal();1495122255;Iterates over all input channels and collects the total number of queued buffers in a_best-effort way.__@return total number of queued buffers;long refreshAndGetTotal() {_		long total = 0___		for (InputChannel channel : inputGate.getInputChannels().values()) {_			if (channel instanceof RemoteInputChannel) {_				RemoteInputChannel rc = (RemoteInputChannel) channel___				total += rc.unsynchronizedGetNumberOfQueuedBuffers()__			}_		}__		return total__	};iterates,over,all,input,channels,and,collects,the,total,number,of,queued,buffers,in,a,best,effort,way,return,total,number,of,queued,buffers;long,refresh,and,get,total,long,total,0,for,input,channel,channel,input,gate,get,input,channels,values,if,channel,instanceof,remote,input,channel,remote,input,channel,rc,remote,input,channel,channel,total,rc,unsynchronized,get,number,of,queued,buffers,return,total
InputGateMetrics -> long refreshAndGetTotal();1495220914;Iterates over all input channels and collects the total number of queued buffers in a_best-effort way.__@return total number of queued buffers;long refreshAndGetTotal() {_		long total = 0___		for (InputChannel channel : inputGate.getInputChannels().values()) {_			if (channel instanceof RemoteInputChannel) {_				RemoteInputChannel rc = (RemoteInputChannel) channel___				total += rc.unsynchronizedGetNumberOfQueuedBuffers()__			}_		}__		return total__	};iterates,over,all,input,channels,and,collects,the,total,number,of,queued,buffers,in,a,best,effort,way,return,total,number,of,queued,buffers;long,refresh,and,get,total,long,total,0,for,input,channel,channel,input,gate,get,input,channels,values,if,channel,instanceof,remote,input,channel,remote,input,channel,rc,remote,input,channel,channel,total,rc,unsynchronized,get,number,of,queued,buffers,return,total
InputGateMetrics -> long refreshAndGetTotal();1537385496;Iterates over all input channels and collects the total number of queued buffers in a_best-effort way.__@return total number of queued buffers;long refreshAndGetTotal() {_		long total = 0___		for (InputChannel channel : inputGate.getInputChannels().values()) {_			if (channel instanceof RemoteInputChannel) {_				RemoteInputChannel rc = (RemoteInputChannel) channel___				total += rc.unsynchronizedGetNumberOfQueuedBuffers()__			}_		}__		return total__	};iterates,over,all,input,channels,and,collects,the,total,number,of,queued,buffers,in,a,best,effort,way,return,total,number,of,queued,buffers;long,refresh,and,get,total,long,total,0,for,input,channel,channel,input,gate,get,input,channels,values,if,channel,instanceof,remote,input,channel,remote,input,channel,rc,remote,input,channel,channel,total,rc,unsynchronized,get,number,of,queued,buffers,return,total
InputGateMetrics -> int refreshAndGetMax();1493302348;Iterates over all input channels and collects the maximum number of queued buffers in a_channel in a best-effort way.__@return maximum number of queued buffers per channel;int refreshAndGetMax() {_		int max = 0___		for (InputChannel channel : inputGate.getInputChannels().values()) {_			if (channel instanceof RemoteInputChannel) {_				RemoteInputChannel rc = (RemoteInputChannel) channel___				int size = rc.unsynchronizedGetNumberOfQueuedBuffers()__				max = Math.max(max, size)__			}_		}__		return max__	};iterates,over,all,input,channels,and,collects,the,maximum,number,of,queued,buffers,in,a,channel,in,a,best,effort,way,return,maximum,number,of,queued,buffers,per,channel;int,refresh,and,get,max,int,max,0,for,input,channel,channel,input,gate,get,input,channels,values,if,channel,instanceof,remote,input,channel,remote,input,channel,rc,remote,input,channel,channel,int,size,rc,unsynchronized,get,number,of,queued,buffers,max,math,max,max,size,return,max
InputGateMetrics -> int refreshAndGetMax();1495122255;Iterates over all input channels and collects the maximum number of queued buffers in a_channel in a best-effort way.__@return maximum number of queued buffers per channel;int refreshAndGetMax() {_		int max = 0___		for (InputChannel channel : inputGate.getInputChannels().values()) {_			if (channel instanceof RemoteInputChannel) {_				RemoteInputChannel rc = (RemoteInputChannel) channel___				int size = rc.unsynchronizedGetNumberOfQueuedBuffers()__				max = Math.max(max, size)__			}_		}__		return max__	};iterates,over,all,input,channels,and,collects,the,maximum,number,of,queued,buffers,in,a,channel,in,a,best,effort,way,return,maximum,number,of,queued,buffers,per,channel;int,refresh,and,get,max,int,max,0,for,input,channel,channel,input,gate,get,input,channels,values,if,channel,instanceof,remote,input,channel,remote,input,channel,rc,remote,input,channel,channel,int,size,rc,unsynchronized,get,number,of,queued,buffers,max,math,max,max,size,return,max
InputGateMetrics -> int refreshAndGetMax();1495220914;Iterates over all input channels and collects the maximum number of queued buffers in a_channel in a best-effort way.__@return maximum number of queued buffers per channel;int refreshAndGetMax() {_		int max = 0___		for (InputChannel channel : inputGate.getInputChannels().values()) {_			if (channel instanceof RemoteInputChannel) {_				RemoteInputChannel rc = (RemoteInputChannel) channel___				int size = rc.unsynchronizedGetNumberOfQueuedBuffers()__				max = Math.max(max, size)__			}_		}__		return max__	};iterates,over,all,input,channels,and,collects,the,maximum,number,of,queued,buffers,in,a,channel,in,a,best,effort,way,return,maximum,number,of,queued,buffers,per,channel;int,refresh,and,get,max,int,max,0,for,input,channel,channel,input,gate,get,input,channels,values,if,channel,instanceof,remote,input,channel,remote,input,channel,rc,remote,input,channel,channel,int,size,rc,unsynchronized,get,number,of,queued,buffers,max,math,max,max,size,return,max
InputGateMetrics -> int refreshAndGetMax();1537385496;Iterates over all input channels and collects the maximum number of queued buffers in a_channel in a best-effort way.__@return maximum number of queued buffers per channel;int refreshAndGetMax() {_		int max = 0___		for (InputChannel channel : inputGate.getInputChannels().values()) {_			if (channel instanceof RemoteInputChannel) {_				RemoteInputChannel rc = (RemoteInputChannel) channel___				int size = rc.unsynchronizedGetNumberOfQueuedBuffers()__				max = Math.max(max, size)__			}_		}__		return max__	};iterates,over,all,input,channels,and,collects,the,maximum,number,of,queued,buffers,in,a,channel,in,a,best,effort,way,return,maximum,number,of,queued,buffers,per,channel;int,refresh,and,get,max,int,max,0,for,input,channel,channel,input,gate,get,input,channels,values,if,channel,instanceof,remote,input,channel,remote,input,channel,rc,remote,input,channel,channel,int,size,rc,unsynchronized,get,number,of,queued,buffers,max,math,max,max,size,return,max
InputGateMetrics -> float refreshAndGetAvg();1493302348;Iterates over all input channels and collects the average number of queued buffers in a_channel in a best-effort way.__@return average number of queued buffers per channel;float refreshAndGetAvg() {_		long total = 0__		int count = 0___		for (InputChannel channel : inputGate.getInputChannels().values()) {_			if (channel instanceof RemoteInputChannel) {_				RemoteInputChannel rc = (RemoteInputChannel) channel___				int size = rc.unsynchronizedGetNumberOfQueuedBuffers()__				total += size__				++count__			}_		}__		return total / (float) count__	};iterates,over,all,input,channels,and,collects,the,average,number,of,queued,buffers,in,a,channel,in,a,best,effort,way,return,average,number,of,queued,buffers,per,channel;float,refresh,and,get,avg,long,total,0,int,count,0,for,input,channel,channel,input,gate,get,input,channels,values,if,channel,instanceof,remote,input,channel,remote,input,channel,rc,remote,input,channel,channel,int,size,rc,unsynchronized,get,number,of,queued,buffers,total,size,count,return,total,float,count
InputGateMetrics -> float refreshAndGetAvg();1495122255;Iterates over all input channels and collects the average number of queued buffers in a_channel in a best-effort way.__@return average number of queued buffers per channel;float refreshAndGetAvg() {_		long total = 0__		int count = 0___		for (InputChannel channel : inputGate.getInputChannels().values()) {_			if (channel instanceof RemoteInputChannel) {_				RemoteInputChannel rc = (RemoteInputChannel) channel___				int size = rc.unsynchronizedGetNumberOfQueuedBuffers()__				total += size__				++count__			}_		}__		return count == 0 ? 0 : total / (float) count__	};iterates,over,all,input,channels,and,collects,the,average,number,of,queued,buffers,in,a,channel,in,a,best,effort,way,return,average,number,of,queued,buffers,per,channel;float,refresh,and,get,avg,long,total,0,int,count,0,for,input,channel,channel,input,gate,get,input,channels,values,if,channel,instanceof,remote,input,channel,remote,input,channel,rc,remote,input,channel,channel,int,size,rc,unsynchronized,get,number,of,queued,buffers,total,size,count,return,count,0,0,total,float,count
InputGateMetrics -> float refreshAndGetAvg();1495220914;Iterates over all input channels and collects the average number of queued buffers in a_channel in a best-effort way.__@return average number of queued buffers per channel;float refreshAndGetAvg() {_		long total = 0__		int count = 0___		for (InputChannel channel : inputGate.getInputChannels().values()) {_			if (channel instanceof RemoteInputChannel) {_				RemoteInputChannel rc = (RemoteInputChannel) channel___				int size = rc.unsynchronizedGetNumberOfQueuedBuffers()__				total += size__				++count__			}_		}__		return count == 0 ? 0 : total / (float) count__	};iterates,over,all,input,channels,and,collects,the,average,number,of,queued,buffers,in,a,channel,in,a,best,effort,way,return,average,number,of,queued,buffers,per,channel;float,refresh,and,get,avg,long,total,0,int,count,0,for,input,channel,channel,input,gate,get,input,channels,values,if,channel,instanceof,remote,input,channel,remote,input,channel,rc,remote,input,channel,channel,int,size,rc,unsynchronized,get,number,of,queued,buffers,total,size,count,return,count,0,0,total,float,count
InputGateMetrics -> float refreshAndGetAvg();1537385496;Iterates over all input channels and collects the average number of queued buffers in a_channel in a best-effort way.__@return average number of queued buffers per channel;float refreshAndGetAvg() {_		long total = 0__		int count = 0___		for (InputChannel channel : inputGate.getInputChannels().values()) {_			if (channel instanceof RemoteInputChannel) {_				RemoteInputChannel rc = (RemoteInputChannel) channel___				int size = rc.unsynchronizedGetNumberOfQueuedBuffers()__				total += size__				++count__			}_		}__		return count == 0 ? 0 : total / (float) count__	};iterates,over,all,input,channels,and,collects,the,average,number,of,queued,buffers,in,a,channel,in,a,best,effort,way,return,average,number,of,queued,buffers,per,channel;float,refresh,and,get,avg,long,total,0,int,count,0,for,input,channel,channel,input,gate,get,input,channels,values,if,channel,instanceof,remote,input,channel,remote,input,channel,rc,remote,input,channel,channel,int,size,rc,unsynchronized,get,number,of,queued,buffers,total,size,count,return,count,0,0,total,float,count
