commented;modifiers;parameterAmount;loc;comment;code
true;public;1;5;/**  * Notifies this ViewUpdater of a new metric that should be regularly updated.  *  * @param view metric that should be regularly updated  */ ;/**  * Notifies this ViewUpdater of a new metric that should be regularly updated.  *  * @param view metric that should be regularly updated  */ public void notifyOfAddedView(View view) {     synchronized (lock) {         toAdd.add(view).     } }
true;public;1;5;/**  * Notifies this ViewUpdater of a metric that should no longer be regularly updated.  *  * @param view metric that should no longer be regularly updated  */ ;/**  * Notifies this ViewUpdater of a metric that should no longer be regularly updated.  *  * @param view metric that should no longer be regularly updated  */ public void notifyOfRemovedView(View view) {     synchronized (lock) {         toRemove.add(view).     } }
false;public;0;13;;@Override public void run() {     for (View toUpdate : this.views) {         toUpdate.update().     }     synchronized (lock) {         views.addAll(toAdd).         toAdd.clear().         views.removeAll(toRemove).         toRemove.clear().     } }
