commented;modifiers;parameterAmount;loc;comment;code
false;public;1;16;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     CheckpointConfigInfo that = (CheckpointConfigInfo) o.     return checkpointInterval == that.checkpointInterval && checkpointTimeout == that.checkpointTimeout && minPauseBetweenCheckpoints == that.minPauseBetweenCheckpoints && maxConcurrentCheckpoints == that.maxConcurrentCheckpoints && processingMode == that.processingMode && Objects.equals(externalizedCheckpointInfo, that.externalizedCheckpointInfo). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(processingMode, checkpointInterval, checkpointTimeout, minPauseBetweenCheckpoints, maxConcurrentCheckpoints, externalizedCheckpointInfo). }
false;public;1;12;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     ExternalizedCheckpointInfo that = (ExternalizedCheckpointInfo) o.     return enabled == that.enabled && deleteOnCancellation == that.deleteOnCancellation. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(enabled, deleteOnCancellation). }
false;public;3;5;;@Override public void serialize(ProcessingMode mode, JsonGenerator generator, SerializerProvider serializerProvider) throws IOException {     generator.writeString(mode.name().toLowerCase()). }
false;public;2;5;;@Override public ProcessingMode deserialize(JsonParser jsonParser, DeserializationContext deserializationContext) throws IOException {     return ProcessingMode.valueOf(jsonParser.getValueAsString().toUpperCase()). }
