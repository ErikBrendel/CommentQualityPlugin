commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public T getJobManagerOwnedSnapshot() {     return jobManagerOwnedSnapshot. }
false;public;0;3;;public T getTaskLocalSnapshot() {     return taskLocalSnapshot. }
false;public;0;25;;@Override public void discardState() throws Exception {     Exception aggregatedExceptions = null.     if (jobManagerOwnedSnapshot != null) {         try {             jobManagerOwnedSnapshot.discardState().         } catch (Exception remoteDiscardEx) {             aggregatedExceptions = remoteDiscardEx.         }     }     if (taskLocalSnapshot != null) {         try {             taskLocalSnapshot.discardState().         } catch (Exception localDiscardEx) {             aggregatedExceptions = ExceptionUtils.firstOrSuppressed(localDiscardEx, aggregatedExceptions).         }     }     if (aggregatedExceptions != null) {         throw aggregatedExceptions.     } }
false;public;0;4;;@Override public long getStateSize() {     return jobManagerOwnedSnapshot != null ? jobManagerOwnedSnapshot.getStateSize() : 0L. }
false;public,static;0;4;;@SuppressWarnings("unchecked") public static <T extends StateObject> SnapshotResult<T> empty() {     return (SnapshotResult<T>) EMPTY. }
false;public,static;1;3;;public static <T extends StateObject> SnapshotResult<T> of(@Nullable T jobManagerState) {     return jobManagerState != null ? new SnapshotResult<>(jobManagerState, null) : empty(). }
false;public,static;2;5;;public static <T extends StateObject> SnapshotResult<T> withLocalState(@Nonnull T jobManagerState, @Nonnull T localState) {     return new SnapshotResult<>(jobManagerState, localState). }
