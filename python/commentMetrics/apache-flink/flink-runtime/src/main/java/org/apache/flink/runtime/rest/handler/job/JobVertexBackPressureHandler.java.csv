commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;14;;@Override protected CompletableFuture<JobVertexBackPressureInfo> handleRequest(@Nonnull HandlerRequest<EmptyRequestBody, JobVertexMessageParameters> request, @Nonnull RestfulGateway gateway) throws RestHandlerException {     final JobID jobId = request.getPathParameter(JobIDPathParameter.class).     final JobVertexID jobVertexId = request.getPathParameter(JobVertexIdPathParameter.class).     return gateway.requestOperatorBackPressureStats(jobId, jobVertexId).thenApply(operatorBackPressureStats -> operatorBackPressureStats.getOperatorBackPressureStats().map(JobVertexBackPressureHandler::createJobVertexBackPressureInfo).orElse(JobVertexBackPressureInfo.deprecated())). }
false;private,static;1;16;;private static JobVertexBackPressureInfo createJobVertexBackPressureInfo(final OperatorBackPressureStats operatorBackPressureStats) {     return new JobVertexBackPressureInfo(JobVertexBackPressureInfo.VertexBackPressureStatus.OK, getBackPressureLevel(operatorBackPressureStats.getMaxBackPressureRatio()), operatorBackPressureStats.getEndTimestamp(), IntStream.range(0, operatorBackPressureStats.getNumberOfSubTasks()).mapToObj(subtask -> {         final double backPressureRatio = operatorBackPressureStats.getBackPressureRatio(subtask).         return new JobVertexBackPressureInfo.SubtaskBackPressureInfo(subtask, getBackPressureLevel(backPressureRatio), backPressureRatio).     }).collect(Collectors.toList())). }
true;private,static;1;9;/**  * Returns the back pressure level as a String.  *  * @param backPressureRatio Ratio of back pressures samples to total number of samples.  *  * @return Back pressure level ('ok', 'low', or 'high')  */ ;/**  * Returns the back pressure level as a String.  *  * @param backPressureRatio Ratio of back pressures samples to total number of samples.  *  * @return Back pressure level ('ok', 'low', or 'high')  */ private static JobVertexBackPressureInfo.VertexBackPressureLevel getBackPressureLevel(double backPressureRatio) {     if (backPressureRatio <= 0.10) {         return JobVertexBackPressureInfo.VertexBackPressureLevel.OK.     } else if (backPressureRatio <= 0.5) {         return JobVertexBackPressureInfo.VertexBackPressureLevel.LOW.     } else {         return JobVertexBackPressureInfo.VertexBackPressureLevel.HIGH.     } }
