commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public int getVersion() {     return VERSION. }
false;public;0;4;;@Override public int[] getCompatibleVersions() {     return new int[] { VERSION, 4, 3, 2, 1 }. }
false;public;1;6;;@Override public void write(DataOutputView out) throws IOException {     super.write(out).     writeStateMetaInfoSnapshots(operatorStateMetaInfoSnapshots, out).     writeStateMetaInfoSnapshots(broadcastStateMetaInfoSnapshots, out). }
false;private;2;8;;private void writeStateMetaInfoSnapshots(List<StateMetaInfoSnapshot> snapshots, DataOutputView out) throws IOException {     out.writeShort(snapshots.size()).     for (StateMetaInfoSnapshot state : snapshots) {         StateMetaInfoSnapshotReadersWriters.getWriter().writeStateMetaInfoSnapshot(state, out).     } }
false;public;1;34;;@Override public void read(DataInputView in) throws IOException {     super.read(in).     final int proxyReadVersion = getReadVersion().     final Integer metaInfoSnapshotVersion = META_INFO_SNAPSHOT_FORMAT_VERSION_MAPPER.get(proxyReadVersion).     if (metaInfoSnapshotVersion == null) {         // this should not happen. guard for the future         throw new IOException("Cannot determine corresponding meta info snapshot version for operator backend serialization readVersion=" + proxyReadVersion).     }     final StateMetaInfoReader stateMetaInfoReader = StateMetaInfoSnapshotReadersWriters.getReader(metaInfoSnapshotVersion, StateMetaInfoSnapshotReadersWriters.StateTypeHint.OPERATOR_STATE).     int numOperatorStates = in.readShort().     operatorStateMetaInfoSnapshots = new ArrayList<>(numOperatorStates).     for (int i = 0. i < numOperatorStates. i++) {         operatorStateMetaInfoSnapshots.add(stateMetaInfoReader.readStateMetaInfoSnapshot(in, userCodeClassLoader)).     }     if (proxyReadVersion >= 3) {         // broadcast states did not exist prior to version 3         int numBroadcastStates = in.readShort().         broadcastStateMetaInfoSnapshots = new ArrayList<>(numBroadcastStates).         for (int i = 0. i < numBroadcastStates. i++) {             broadcastStateMetaInfoSnapshots.add(stateMetaInfoReader.readStateMetaInfoSnapshot(in, userCodeClassLoader)).         }     } else {         broadcastStateMetaInfoSnapshots = new ArrayList<>().     } }
false;public;0;3;;public List<StateMetaInfoSnapshot> getOperatorStateMetaInfoSnapshots() {     return operatorStateMetaInfoSnapshots. }
false;public;0;3;;public List<StateMetaInfoSnapshot> getBroadcastStateMetaInfoSnapshots() {     return broadcastStateMetaInfoSnapshots. }
