commented;modifiers;parameterAmount;loc;comment;code
false;public;1;6;;@Override public void onFailure(Throwable failure) {     LOG.error("Could not schedule or update consumers at the JobManager.", failure).     taskActions.failExternally(new RuntimeException("Could not notify JobManager to schedule or update consumers", failure)). }
false;public;3;16;;@Override public void notifyPartitionConsumable(JobID jobId, final ResultPartitionID partitionId, final TaskActions taskActions) {     final JobManagerMessages.ScheduleOrUpdateConsumers msg = new JobManagerMessages.ScheduleOrUpdateConsumers(jobId, partitionId).     Future<Object> futureResponse = jobManager.ask(msg, jobManagerMessageTimeout).     futureResponse.onFailure(new OnFailure() {          @Override         public void onFailure(Throwable failure) {             LOG.error("Could not schedule or update consumers at the JobManager.", failure).             taskActions.failExternally(new RuntimeException("Could not notify JobManager to schedule or update consumers", failure)).         }     }, executionContext). }
