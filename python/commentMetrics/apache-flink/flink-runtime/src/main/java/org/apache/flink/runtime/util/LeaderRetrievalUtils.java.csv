# id;timestamp;commentText;codeText;commentWords;codeWords
LeaderRetrievalUtils -> public static LeaderConnectionInfo retrieveLeaderConnectionInfo( 			LeaderRetrievalService leaderRetrievalService, 			FiniteDuration timeout 	) throws LeaderRetrievalException;1441011751;Retrieves the leader akka url and the current leader session ID. The values are stored in a_{@link LeaderConnectionInfo} instance.__@param leaderRetrievalService Leader retrieval service to retrieve the leader connection_information_@param timeout Timeout when to give up looking for the leader_@return LeaderConnectionInfo containing the leader's akka URL and the current leader session__@throws LeaderRetrievalException;public static LeaderConnectionInfo retrieveLeaderConnectionInfo(_			LeaderRetrievalService leaderRetrievalService,_			FiniteDuration timeout_	) throws LeaderRetrievalException {_		LeaderConnectionInfoListener listener = new LeaderConnectionInfoListener()___		try {_			leaderRetrievalService.start(listener)___			Future<LeaderConnectionInfo> connectionInfoFuture = listener.getLeaderConnectionInfoFuture()___			LeaderConnectionInfo result = Await.result(connectionInfoFuture, timeout)___			return result__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader address and leader " +_					"session ID.", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,leader,akka,url,and,the,current,leader,session,id,the,values,are,stored,in,a,link,leader,connection,info,instance,param,leader,retrieval,service,leader,retrieval,service,to,retrieve,the,leader,connection,information,param,timeout,timeout,when,to,give,up,looking,for,the,leader,return,leader,connection,info,containing,the,leader,s,akka,url,and,the,current,leader,session,throws,leader,retrieval,exception;public,static,leader,connection,info,retrieve,leader,connection,info,leader,retrieval,service,leader,retrieval,service,finite,duration,timeout,throws,leader,retrieval,exception,leader,connection,info,listener,listener,new,leader,connection,info,listener,try,leader,retrieval,service,start,listener,future,leader,connection,info,connection,info,future,listener,get,leader,connection,info,future,leader,connection,info,result,await,result,connection,info,future,timeout,return,result,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,address,and,leader,session,id,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static LeaderConnectionInfo retrieveLeaderConnectionInfo( 			LeaderRetrievalService leaderRetrievalService, 			FiniteDuration timeout 	) throws LeaderRetrievalException;1443564120;Retrieves the leader akka url and the current leader session ID. The values are stored in a_{@link LeaderConnectionInfo} instance.__@param leaderRetrievalService Leader retrieval service to retrieve the leader connection_information_@param timeout Timeout when to give up looking for the leader_@return LeaderConnectionInfo containing the leader's akka URL and the current leader session__@throws LeaderRetrievalException;public static LeaderConnectionInfo retrieveLeaderConnectionInfo(_			LeaderRetrievalService leaderRetrievalService,_			FiniteDuration timeout_	) throws LeaderRetrievalException {_		LeaderConnectionInfoListener listener = new LeaderConnectionInfoListener()___		try {_			leaderRetrievalService.start(listener)___			Future<LeaderConnectionInfo> connectionInfoFuture = listener.getLeaderConnectionInfoFuture()___			LeaderConnectionInfo result = Await.result(connectionInfoFuture, timeout)___			return result__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader address and leader " +_					"session ID.", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,leader,akka,url,and,the,current,leader,session,id,the,values,are,stored,in,a,link,leader,connection,info,instance,param,leader,retrieval,service,leader,retrieval,service,to,retrieve,the,leader,connection,information,param,timeout,timeout,when,to,give,up,looking,for,the,leader,return,leader,connection,info,containing,the,leader,s,akka,url,and,the,current,leader,session,throws,leader,retrieval,exception;public,static,leader,connection,info,retrieve,leader,connection,info,leader,retrieval,service,leader,retrieval,service,finite,duration,timeout,throws,leader,retrieval,exception,leader,connection,info,listener,listener,new,leader,connection,info,listener,try,leader,retrieval,service,start,listener,future,leader,connection,info,connection,info,future,listener,get,leader,connection,info,future,leader,connection,info,result,await,result,connection,info,future,timeout,return,result,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,address,and,leader,session,id,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static LeaderConnectionInfo retrieveLeaderConnectionInfo( 			LeaderRetrievalService leaderRetrievalService, 			FiniteDuration timeout 	) throws LeaderRetrievalException;1443682795;Retrieves the leader akka url and the current leader session ID. The values are stored in a_{@link LeaderConnectionInfo} instance.__@param leaderRetrievalService Leader retrieval service to retrieve the leader connection_information_@param timeout Timeout when to give up looking for the leader_@return LeaderConnectionInfo containing the leader's akka URL and the current leader session__@throws LeaderRetrievalException;public static LeaderConnectionInfo retrieveLeaderConnectionInfo(_			LeaderRetrievalService leaderRetrievalService,_			FiniteDuration timeout_	) throws LeaderRetrievalException {_		LeaderConnectionInfoListener listener = new LeaderConnectionInfoListener()___		try {_			leaderRetrievalService.start(listener)___			Future<LeaderConnectionInfo> connectionInfoFuture = listener.getLeaderConnectionInfoFuture()___			LeaderConnectionInfo result = Await.result(connectionInfoFuture, timeout)___			return result__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader address and leader " +_					"session ID.", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,leader,akka,url,and,the,current,leader,session,id,the,values,are,stored,in,a,link,leader,connection,info,instance,param,leader,retrieval,service,leader,retrieval,service,to,retrieve,the,leader,connection,information,param,timeout,timeout,when,to,give,up,looking,for,the,leader,return,leader,connection,info,containing,the,leader,s,akka,url,and,the,current,leader,session,throws,leader,retrieval,exception;public,static,leader,connection,info,retrieve,leader,connection,info,leader,retrieval,service,leader,retrieval,service,finite,duration,timeout,throws,leader,retrieval,exception,leader,connection,info,listener,listener,new,leader,connection,info,listener,try,leader,retrieval,service,start,listener,future,leader,connection,info,connection,info,future,listener,get,leader,connection,info,future,leader,connection,info,result,await,result,connection,info,future,timeout,return,result,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,address,and,leader,session,id,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static LeaderConnectionInfo retrieveLeaderConnectionInfo( 			LeaderRetrievalService leaderRetrievalService, 			FiniteDuration timeout 	) throws LeaderRetrievalException;1444307021;Retrieves the leader akka url and the current leader session ID. The values are stored in a_{@link LeaderConnectionInfo} instance.__@param leaderRetrievalService Leader retrieval service to retrieve the leader connection_information_@param timeout Timeout when to give up looking for the leader_@return LeaderConnectionInfo containing the leader's akka URL and the current leader session__@throws LeaderRetrievalException;public static LeaderConnectionInfo retrieveLeaderConnectionInfo(_			LeaderRetrievalService leaderRetrievalService,_			FiniteDuration timeout_	) throws LeaderRetrievalException {_		LeaderConnectionInfoListener listener = new LeaderConnectionInfoListener()___		try {_			leaderRetrievalService.start(listener)___			Future<LeaderConnectionInfo> connectionInfoFuture = listener.getLeaderConnectionInfoFuture()___			return Await.result(connectionInfoFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader address and leader " +_					"session ID.", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,leader,akka,url,and,the,current,leader,session,id,the,values,are,stored,in,a,link,leader,connection,info,instance,param,leader,retrieval,service,leader,retrieval,service,to,retrieve,the,leader,connection,information,param,timeout,timeout,when,to,give,up,looking,for,the,leader,return,leader,connection,info,containing,the,leader,s,akka,url,and,the,current,leader,session,throws,leader,retrieval,exception;public,static,leader,connection,info,retrieve,leader,connection,info,leader,retrieval,service,leader,retrieval,service,finite,duration,timeout,throws,leader,retrieval,exception,leader,connection,info,listener,listener,new,leader,connection,info,listener,try,leader,retrieval,service,start,listener,future,leader,connection,info,connection,info,future,listener,get,leader,connection,info,future,return,await,result,connection,info,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,address,and,leader,session,id,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static LeaderConnectionInfo retrieveLeaderConnectionInfo( 			LeaderRetrievalService leaderRetrievalService, 			FiniteDuration timeout 	) throws LeaderRetrievalException;1459248687;Retrieves the leader akka url and the current leader session ID. The values are stored in a_{@link LeaderConnectionInfo} instance.__@param leaderRetrievalService Leader retrieval service to retrieve the leader connection_information_@param timeout Timeout when to give up looking for the leader_@return LeaderConnectionInfo containing the leader's akka URL and the current leader session__@throws LeaderRetrievalException;public static LeaderConnectionInfo retrieveLeaderConnectionInfo(_			LeaderRetrievalService leaderRetrievalService,_			FiniteDuration timeout_	) throws LeaderRetrievalException {_		LeaderConnectionInfoListener listener = new LeaderConnectionInfoListener()___		try {_			leaderRetrievalService.start(listener)___			Future<LeaderConnectionInfo> connectionInfoFuture = listener.getLeaderConnectionInfoFuture()___			return Await.result(connectionInfoFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader address and leader " +_					"session ID.", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,leader,akka,url,and,the,current,leader,session,id,the,values,are,stored,in,a,link,leader,connection,info,instance,param,leader,retrieval,service,leader,retrieval,service,to,retrieve,the,leader,connection,information,param,timeout,timeout,when,to,give,up,looking,for,the,leader,return,leader,connection,info,containing,the,leader,s,akka,url,and,the,current,leader,session,throws,leader,retrieval,exception;public,static,leader,connection,info,retrieve,leader,connection,info,leader,retrieval,service,leader,retrieval,service,finite,duration,timeout,throws,leader,retrieval,exception,leader,connection,info,listener,listener,new,leader,connection,info,listener,try,leader,retrieval,service,start,listener,future,leader,connection,info,connection,info,future,listener,get,leader,connection,info,future,return,await,result,connection,info,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,address,and,leader,session,id,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static LeaderConnectionInfo retrieveLeaderConnectionInfo( 			LeaderRetrievalService leaderRetrievalService, 			FiniteDuration timeout 	) throws LeaderRetrievalException;1472033364;Retrieves the leader akka url and the current leader session ID. The values are stored in a_{@link LeaderConnectionInfo} instance.__@param leaderRetrievalService Leader retrieval service to retrieve the leader connection_information_@param timeout Timeout when to give up looking for the leader_@return LeaderConnectionInfo containing the leader's akka URL and the current leader session__@throws LeaderRetrievalException;public static LeaderConnectionInfo retrieveLeaderConnectionInfo(_			LeaderRetrievalService leaderRetrievalService,_			FiniteDuration timeout_	) throws LeaderRetrievalException {_		LeaderConnectionInfoListener listener = new LeaderConnectionInfoListener()___		try {_			leaderRetrievalService.start(listener)___			Future<LeaderConnectionInfo> connectionInfoFuture = listener.getLeaderConnectionInfoFuture()___			return Await.result(connectionInfoFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader address and leader " +_					"session ID.", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,leader,akka,url,and,the,current,leader,session,id,the,values,are,stored,in,a,link,leader,connection,info,instance,param,leader,retrieval,service,leader,retrieval,service,to,retrieve,the,leader,connection,information,param,timeout,timeout,when,to,give,up,looking,for,the,leader,return,leader,connection,info,containing,the,leader,s,akka,url,and,the,current,leader,session,throws,leader,retrieval,exception;public,static,leader,connection,info,retrieve,leader,connection,info,leader,retrieval,service,leader,retrieval,service,finite,duration,timeout,throws,leader,retrieval,exception,leader,connection,info,listener,listener,new,leader,connection,info,listener,try,leader,retrieval,service,start,listener,future,leader,connection,info,connection,info,future,listener,get,leader,connection,info,future,return,await,result,connection,info,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,address,and,leader,session,id,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static LeaderConnectionInfo retrieveLeaderConnectionInfo( 			LeaderRetrievalService leaderRetrievalService, 			FiniteDuration timeout 	) throws LeaderRetrievalException;1472033371;Retrieves the leader akka url and the current leader session ID. The values are stored in a_{@link LeaderConnectionInfo} instance.__@param leaderRetrievalService Leader retrieval service to retrieve the leader connection_information_@param timeout Timeout when to give up looking for the leader_@return LeaderConnectionInfo containing the leader's akka URL and the current leader session__@throws LeaderRetrievalException;public static LeaderConnectionInfo retrieveLeaderConnectionInfo(_			LeaderRetrievalService leaderRetrievalService,_			FiniteDuration timeout_	) throws LeaderRetrievalException {_		LeaderConnectionInfoListener listener = new LeaderConnectionInfoListener()___		try {_			leaderRetrievalService.start(listener)___			Future<LeaderConnectionInfo> connectionInfoFuture = listener.getLeaderConnectionInfoFuture()___			return Await.result(connectionInfoFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader address and leader " +_					"session ID.", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,leader,akka,url,and,the,current,leader,session,id,the,values,are,stored,in,a,link,leader,connection,info,instance,param,leader,retrieval,service,leader,retrieval,service,to,retrieve,the,leader,connection,information,param,timeout,timeout,when,to,give,up,looking,for,the,leader,return,leader,connection,info,containing,the,leader,s,akka,url,and,the,current,leader,session,throws,leader,retrieval,exception;public,static,leader,connection,info,retrieve,leader,connection,info,leader,retrieval,service,leader,retrieval,service,finite,duration,timeout,throws,leader,retrieval,exception,leader,connection,info,listener,listener,new,leader,connection,info,listener,try,leader,retrieval,service,start,listener,future,leader,connection,info,connection,info,future,listener,get,leader,connection,info,future,return,await,result,connection,info,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,address,and,leader,session,id,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static LeaderConnectionInfo retrieveLeaderConnectionInfo( 			LeaderRetrievalService leaderRetrievalService, 			FiniteDuration timeout 	) throws LeaderRetrievalException;1481907119;Retrieves the leader akka url and the current leader session ID. The values are stored in a_{@link LeaderConnectionInfo} instance.__@param leaderRetrievalService Leader retrieval service to retrieve the leader connection_information_@param timeout Timeout when to give up looking for the leader_@return LeaderConnectionInfo containing the leader's akka URL and the current leader session__@throws LeaderRetrievalException;public static LeaderConnectionInfo retrieveLeaderConnectionInfo(_			LeaderRetrievalService leaderRetrievalService,_			FiniteDuration timeout_	) throws LeaderRetrievalException {_		LeaderConnectionInfoListener listener = new LeaderConnectionInfoListener()___		try {_			leaderRetrievalService.start(listener)___			Future<LeaderConnectionInfo> connectionInfoFuture = listener.getLeaderConnectionInfoFuture()___			return Await.result(connectionInfoFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader address and leader " +_					"session ID.", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,leader,akka,url,and,the,current,leader,session,id,the,values,are,stored,in,a,link,leader,connection,info,instance,param,leader,retrieval,service,leader,retrieval,service,to,retrieve,the,leader,connection,information,param,timeout,timeout,when,to,give,up,looking,for,the,leader,return,leader,connection,info,containing,the,leader,s,akka,url,and,the,current,leader,session,throws,leader,retrieval,exception;public,static,leader,connection,info,retrieve,leader,connection,info,leader,retrieval,service,leader,retrieval,service,finite,duration,timeout,throws,leader,retrieval,exception,leader,connection,info,listener,listener,new,leader,connection,info,listener,try,leader,retrieval,service,start,listener,future,leader,connection,info,connection,info,future,listener,get,leader,connection,info,future,return,await,result,connection,info,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,address,and,leader,session,id,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static LeaderConnectionInfo retrieveLeaderConnectionInfo( 			LeaderRetrievalService leaderRetrievalService, 			FiniteDuration timeout 	) throws LeaderRetrievalException;1482522860;Retrieves the leader akka url and the current leader session ID. The values are stored in a_{@link LeaderConnectionInfo} instance.__@param leaderRetrievalService Leader retrieval service to retrieve the leader connection_information_@param timeout Timeout when to give up looking for the leader_@return LeaderConnectionInfo containing the leader's akka URL and the current leader session__@throws LeaderRetrievalException;public static LeaderConnectionInfo retrieveLeaderConnectionInfo(_			LeaderRetrievalService leaderRetrievalService,_			FiniteDuration timeout_	) throws LeaderRetrievalException {_		LeaderConnectionInfoListener listener = new LeaderConnectionInfoListener()___		try {_			leaderRetrievalService.start(listener)___			Future<LeaderConnectionInfo> connectionInfoFuture = listener.getLeaderConnectionInfoFuture()___			return Await.result(connectionInfoFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader address and leader " +_					"session ID.", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,leader,akka,url,and,the,current,leader,session,id,the,values,are,stored,in,a,link,leader,connection,info,instance,param,leader,retrieval,service,leader,retrieval,service,to,retrieve,the,leader,connection,information,param,timeout,timeout,when,to,give,up,looking,for,the,leader,return,leader,connection,info,containing,the,leader,s,akka,url,and,the,current,leader,session,throws,leader,retrieval,exception;public,static,leader,connection,info,retrieve,leader,connection,info,leader,retrieval,service,leader,retrieval,service,finite,duration,timeout,throws,leader,retrieval,exception,leader,connection,info,listener,listener,new,leader,connection,info,listener,try,leader,retrieval,service,start,listener,future,leader,connection,info,connection,info,future,listener,get,leader,connection,info,future,return,await,result,connection,info,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,address,and,leader,session,id,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static LeaderConnectionInfo retrieveLeaderConnectionInfo( 			LeaderRetrievalService leaderRetrievalService, 			FiniteDuration timeout 	) throws LeaderRetrievalException;1493975155;Retrieves the leader akka url and the current leader session ID. The values are stored in a_{@link LeaderConnectionInfo} instance.__@param leaderRetrievalService Leader retrieval service to retrieve the leader connection_information_@param timeout Timeout when to give up looking for the leader_@return LeaderConnectionInfo containing the leader's akka URL and the current leader session__@throws LeaderRetrievalException;public static LeaderConnectionInfo retrieveLeaderConnectionInfo(_			LeaderRetrievalService leaderRetrievalService,_			FiniteDuration timeout_	) throws LeaderRetrievalException {_		LeaderConnectionInfoListener listener = new LeaderConnectionInfoListener()___		try {_			leaderRetrievalService.start(listener)___			Future<LeaderConnectionInfo> connectionInfoFuture = listener.getLeaderConnectionInfoFuture()___			return Await.result(connectionInfoFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader address and leader " +_					"session ID.", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,leader,akka,url,and,the,current,leader,session,id,the,values,are,stored,in,a,link,leader,connection,info,instance,param,leader,retrieval,service,leader,retrieval,service,to,retrieve,the,leader,connection,information,param,timeout,timeout,when,to,give,up,looking,for,the,leader,return,leader,connection,info,containing,the,leader,s,akka,url,and,the,current,leader,session,throws,leader,retrieval,exception;public,static,leader,connection,info,retrieve,leader,connection,info,leader,retrieval,service,leader,retrieval,service,finite,duration,timeout,throws,leader,retrieval,exception,leader,connection,info,listener,listener,new,leader,connection,info,listener,try,leader,retrieval,service,start,listener,future,leader,connection,info,connection,info,future,listener,get,leader,connection,info,future,return,await,result,connection,info,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,address,and,leader,session,id,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static LeaderConnectionInfo retrieveLeaderConnectionInfo( 			LeaderRetrievalService leaderRetrievalService, 			FiniteDuration timeout 	) throws LeaderRetrievalException;1493975167;Retrieves the leader akka url and the current leader session ID. The values are stored in a_{@link LeaderConnectionInfo} instance.__@param leaderRetrievalService Leader retrieval service to retrieve the leader connection_information_@param timeout Timeout when to give up looking for the leader_@return LeaderConnectionInfo containing the leader's akka URL and the current leader session__@throws LeaderRetrievalException;public static LeaderConnectionInfo retrieveLeaderConnectionInfo(_			LeaderRetrievalService leaderRetrievalService,_			FiniteDuration timeout_	) throws LeaderRetrievalException {_		LeaderConnectionInfoListener listener = new LeaderConnectionInfoListener()___		try {_			leaderRetrievalService.start(listener)___			Future<LeaderConnectionInfo> connectionInfoFuture = listener.getLeaderConnectionInfoFuture()___			return Await.result(connectionInfoFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader address and leader " +_					"session ID.", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,leader,akka,url,and,the,current,leader,session,id,the,values,are,stored,in,a,link,leader,connection,info,instance,param,leader,retrieval,service,leader,retrieval,service,to,retrieve,the,leader,connection,information,param,timeout,timeout,when,to,give,up,looking,for,the,leader,return,leader,connection,info,containing,the,leader,s,akka,url,and,the,current,leader,session,throws,leader,retrieval,exception;public,static,leader,connection,info,retrieve,leader,connection,info,leader,retrieval,service,leader,retrieval,service,finite,duration,timeout,throws,leader,retrieval,exception,leader,connection,info,listener,listener,new,leader,connection,info,listener,try,leader,retrieval,service,start,listener,future,leader,connection,info,connection,info,future,listener,get,leader,connection,info,future,return,await,result,connection,info,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,address,and,leader,session,id,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static LeaderConnectionInfo retrieveLeaderConnectionInfo( 			LeaderRetrievalService leaderRetrievalService, 			FiniteDuration timeout 	) throws LeaderRetrievalException;1495441965;Retrieves the leader akka url and the current leader session ID. The values are stored in a_{@link LeaderConnectionInfo} instance.__@param leaderRetrievalService Leader retrieval service to retrieve the leader connection_information_@param timeout Timeout when to give up looking for the leader_@return LeaderConnectionInfo containing the leader's akka URL and the current leader session__@throws LeaderRetrievalException;public static LeaderConnectionInfo retrieveLeaderConnectionInfo(_			LeaderRetrievalService leaderRetrievalService,_			FiniteDuration timeout_	) throws LeaderRetrievalException {_		LeaderConnectionInfoListener listener = new LeaderConnectionInfoListener()___		try {_			leaderRetrievalService.start(listener)___			Future<LeaderConnectionInfo> connectionInfoFuture = listener.getLeaderConnectionInfoFuture()___			return Await.result(connectionInfoFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader address and leader " +_					"session ID.", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,leader,akka,url,and,the,current,leader,session,id,the,values,are,stored,in,a,link,leader,connection,info,instance,param,leader,retrieval,service,leader,retrieval,service,to,retrieve,the,leader,connection,information,param,timeout,timeout,when,to,give,up,looking,for,the,leader,return,leader,connection,info,containing,the,leader,s,akka,url,and,the,current,leader,session,throws,leader,retrieval,exception;public,static,leader,connection,info,retrieve,leader,connection,info,leader,retrieval,service,leader,retrieval,service,finite,duration,timeout,throws,leader,retrieval,exception,leader,connection,info,listener,listener,new,leader,connection,info,listener,try,leader,retrieval,service,start,listener,future,leader,connection,info,connection,info,future,listener,get,leader,connection,info,future,return,await,result,connection,info,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,address,and,leader,session,id,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static LeaderConnectionInfo retrieveLeaderConnectionInfo( 			LeaderRetrievalService leaderRetrievalService, 			FiniteDuration timeout 	) throws LeaderRetrievalException;1495441965;Retrieves the leader akka url and the current leader session ID. The values are stored in a_{@link LeaderConnectionInfo} instance.__@param leaderRetrievalService Leader retrieval service to retrieve the leader connection_information_@param timeout Timeout when to give up looking for the leader_@return LeaderConnectionInfo containing the leader's akka URL and the current leader session__@throws LeaderRetrievalException;public static LeaderConnectionInfo retrieveLeaderConnectionInfo(_			LeaderRetrievalService leaderRetrievalService,_			FiniteDuration timeout_	) throws LeaderRetrievalException {_		LeaderConnectionInfoListener listener = new LeaderConnectionInfoListener()___		try {_			leaderRetrievalService.start(listener)___			Future<LeaderConnectionInfo> connectionInfoFuture = listener.getLeaderConnectionInfoFuture()___			return Await.result(connectionInfoFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader address and leader " +_					"session ID.", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,leader,akka,url,and,the,current,leader,session,id,the,values,are,stored,in,a,link,leader,connection,info,instance,param,leader,retrieval,service,leader,retrieval,service,to,retrieve,the,leader,connection,information,param,timeout,timeout,when,to,give,up,looking,for,the,leader,return,leader,connection,info,containing,the,leader,s,akka,url,and,the,current,leader,session,throws,leader,retrieval,exception;public,static,leader,connection,info,retrieve,leader,connection,info,leader,retrieval,service,leader,retrieval,service,finite,duration,timeout,throws,leader,retrieval,exception,leader,connection,info,listener,listener,new,leader,connection,info,listener,try,leader,retrieval,service,start,listener,future,leader,connection,info,connection,info,future,listener,get,leader,connection,info,future,return,await,result,connection,info,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,address,and,leader,session,id,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static LeaderConnectionInfo retrieveLeaderConnectionInfo( 			LeaderRetrievalService leaderRetrievalService, 			FiniteDuration timeout 	) throws LeaderRetrievalException;1517237717;Retrieves the leader akka url and the current leader session ID. The values are stored in a_{@link LeaderConnectionInfo} instance.__@param leaderRetrievalService Leader retrieval service to retrieve the leader connection_information_@param timeout Timeout when to give up looking for the leader_@return LeaderConnectionInfo containing the leader's akka URL and the current leader session__@throws LeaderRetrievalException;public static LeaderConnectionInfo retrieveLeaderConnectionInfo(_			LeaderRetrievalService leaderRetrievalService,_			FiniteDuration timeout_	) throws LeaderRetrievalException {_		LeaderConnectionInfoListener listener = new LeaderConnectionInfoListener()___		try {_			leaderRetrievalService.start(listener)___			Future<LeaderConnectionInfo> connectionInfoFuture = listener.getLeaderConnectionInfoFuture()___			return Await.result(connectionInfoFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader address and leader " +_					"session ID.", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,leader,akka,url,and,the,current,leader,session,id,the,values,are,stored,in,a,link,leader,connection,info,instance,param,leader,retrieval,service,leader,retrieval,service,to,retrieve,the,leader,connection,information,param,timeout,timeout,when,to,give,up,looking,for,the,leader,return,leader,connection,info,containing,the,leader,s,akka,url,and,the,current,leader,session,throws,leader,retrieval,exception;public,static,leader,connection,info,retrieve,leader,connection,info,leader,retrieval,service,leader,retrieval,service,finite,duration,timeout,throws,leader,retrieval,exception,leader,connection,info,listener,listener,new,leader,connection,info,listener,try,leader,retrieval,service,start,listener,future,leader,connection,info,connection,info,future,listener,get,leader,connection,info,future,return,await,result,connection,info,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,address,and,leader,session,id,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static LeaderConnectionInfo retrieveLeaderConnectionInfo( 			LeaderRetrievalService leaderRetrievalService, 			FiniteDuration timeout 	) throws LeaderRetrievalException;1517324056;Retrieves the leader akka url and the current leader session ID. The values are stored in a_{@link LeaderConnectionInfo} instance.__@param leaderRetrievalService Leader retrieval service to retrieve the leader connection_information_@param timeout Timeout when to give up looking for the leader_@return LeaderConnectionInfo containing the leader's akka URL and the current leader session__@throws LeaderRetrievalException;public static LeaderConnectionInfo retrieveLeaderConnectionInfo(_			LeaderRetrievalService leaderRetrievalService,_			FiniteDuration timeout_	) throws LeaderRetrievalException {_		LeaderConnectionInfoListener listener = new LeaderConnectionInfoListener()___		try {_			leaderRetrievalService.start(listener)___			Future<LeaderConnectionInfo> connectionInfoFuture = listener.getLeaderConnectionInfoFuture()___			return Await.result(connectionInfoFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader address and leader " +_					"session ID.", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,leader,akka,url,and,the,current,leader,session,id,the,values,are,stored,in,a,link,leader,connection,info,instance,param,leader,retrieval,service,leader,retrieval,service,to,retrieve,the,leader,connection,information,param,timeout,timeout,when,to,give,up,looking,for,the,leader,return,leader,connection,info,containing,the,leader,s,akka,url,and,the,current,leader,session,throws,leader,retrieval,exception;public,static,leader,connection,info,retrieve,leader,connection,info,leader,retrieval,service,leader,retrieval,service,finite,duration,timeout,throws,leader,retrieval,exception,leader,connection,info,listener,listener,new,leader,connection,info,listener,try,leader,retrieval,service,start,listener,future,leader,connection,info,connection,info,future,listener,get,leader,connection,info,future,return,await,result,connection,info,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,address,and,leader,session,id,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static LeaderConnectionInfo retrieveLeaderConnectionInfo( 			LeaderRetrievalService leaderRetrievalService, 			FiniteDuration timeout 	) throws LeaderRetrievalException;1536930103;Retrieves the leader akka url and the current leader session ID. The values are stored in a_{@link LeaderConnectionInfo} instance.__@param leaderRetrievalService Leader retrieval service to retrieve the leader connection_information_@param timeout Timeout when to give up looking for the leader_@return LeaderConnectionInfo containing the leader's akka URL and the current leader session__@throws LeaderRetrievalException;public static LeaderConnectionInfo retrieveLeaderConnectionInfo(_			LeaderRetrievalService leaderRetrievalService,_			FiniteDuration timeout_	) throws LeaderRetrievalException {_		LeaderConnectionInfoListener listener = new LeaderConnectionInfoListener()___		try {_			leaderRetrievalService.start(listener)___			Future<LeaderConnectionInfo> connectionInfoFuture = listener.getLeaderConnectionInfoFuture()___			return Await.result(connectionInfoFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader address and leader " +_					"session ID.", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,leader,akka,url,and,the,current,leader,session,id,the,values,are,stored,in,a,link,leader,connection,info,instance,param,leader,retrieval,service,leader,retrieval,service,to,retrieve,the,leader,connection,information,param,timeout,timeout,when,to,give,up,looking,for,the,leader,return,leader,connection,info,containing,the,leader,s,akka,url,and,the,current,leader,session,throws,leader,retrieval,exception;public,static,leader,connection,info,retrieve,leader,connection,info,leader,retrieval,service,leader,retrieval,service,finite,duration,timeout,throws,leader,retrieval,exception,leader,connection,info,listener,listener,new,leader,connection,info,listener,try,leader,retrieval,service,start,listener,future,leader,connection,info,connection,info,future,listener,get,leader,connection,info,future,return,await,result,connection,info,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,address,and,leader,session,id,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> private LeaderRetrievalUtils();1443564120;Private constructor to prevent instantiation.;private LeaderRetrievalUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,leader,retrieval,utils,throw,new,runtime,exception
LeaderRetrievalUtils -> private LeaderRetrievalUtils();1443682795;Private constructor to prevent instantiation.;private LeaderRetrievalUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,leader,retrieval,utils,throw,new,runtime,exception
LeaderRetrievalUtils -> private LeaderRetrievalUtils();1444307021;Private constructor to prevent instantiation.;private LeaderRetrievalUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,leader,retrieval,utils,throw,new,runtime,exception
LeaderRetrievalUtils -> private LeaderRetrievalUtils();1459248687;Private constructor to prevent instantiation.;private LeaderRetrievalUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,leader,retrieval,utils,throw,new,runtime,exception
LeaderRetrievalUtils -> private LeaderRetrievalUtils();1472033364;Private constructor to prevent instantiation.;private LeaderRetrievalUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,leader,retrieval,utils,throw,new,runtime,exception
LeaderRetrievalUtils -> private LeaderRetrievalUtils();1472033371;Private constructor to prevent instantiation.;private LeaderRetrievalUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,leader,retrieval,utils,throw,new,runtime,exception
LeaderRetrievalUtils -> private LeaderRetrievalUtils();1481907119;Private constructor to prevent instantiation.;private LeaderRetrievalUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,leader,retrieval,utils,throw,new,runtime,exception
LeaderRetrievalUtils -> private LeaderRetrievalUtils();1482522860;Private constructor to prevent instantiation.;private LeaderRetrievalUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,leader,retrieval,utils,throw,new,runtime,exception
LeaderRetrievalUtils -> private LeaderRetrievalUtils();1493975155;Private constructor to prevent instantiation.;private LeaderRetrievalUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,leader,retrieval,utils,throw,new,runtime,exception
LeaderRetrievalUtils -> private LeaderRetrievalUtils();1493975167;Private constructor to prevent instantiation.;private LeaderRetrievalUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,leader,retrieval,utils,throw,new,runtime,exception
LeaderRetrievalUtils -> private LeaderRetrievalUtils();1495441965;Private constructor to prevent instantiation.;private LeaderRetrievalUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,leader,retrieval,utils,throw,new,runtime,exception
LeaderRetrievalUtils -> private LeaderRetrievalUtils();1495441965;Private constructor to prevent instantiation.;private LeaderRetrievalUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,leader,retrieval,utils,throw,new,runtime,exception
LeaderRetrievalUtils -> private LeaderRetrievalUtils();1517237717;Private constructor to prevent instantiation.;private LeaderRetrievalUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,leader,retrieval,utils,throw,new,runtime,exception
LeaderRetrievalUtils -> private LeaderRetrievalUtils();1517324056;Private constructor to prevent instantiation.;private LeaderRetrievalUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,leader,retrieval,utils,throw,new,runtime,exception
LeaderRetrievalUtils -> private LeaderRetrievalUtils();1536930103;Private constructor to prevent instantiation.;private LeaderRetrievalUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,leader,retrieval,utils,throw,new,runtime,exception
LeaderRetrievalUtils -> public static LeaderRetrievalService createLeaderRetrievalService( 				Configuration configuration, ActorRef standaloneRef) throws Exception;1459248687;Creates a {@link LeaderRetrievalService} that either uses the distributed leader election_configured in the configuration, or, in standalone mode, the given actor reference.__@param configuration Configuration containing the settings for the {@link LeaderRetrievalService}_@param standaloneRef Actor reference to be used in standalone mode.__@return The {@link LeaderRetrievalService} specified in the configuration object_@throws Exception;public static LeaderRetrievalService createLeaderRetrievalService(_				Configuration configuration, ActorRef standaloneRef) throws Exception {__		RecoveryMode recoveryMode = getRecoveryMode(configuration)___		switch (recoveryMode) {_			case STANDALONE:_				String akkaUrl = standaloneRef.path().toSerializationFormat()__				return new StandaloneLeaderRetrievalService(akkaUrl)__			case ZOOKEEPER:_				return ZooKeeperUtils.createLeaderRetrievalService(configuration)__			default:_				throw new Exception("Recovery mode " + recoveryMode + " is not supported.")__		}_	};creates,a,link,leader,retrieval,service,that,either,uses,the,distributed,leader,election,configured,in,the,configuration,or,in,standalone,mode,the,given,actor,reference,param,configuration,configuration,containing,the,settings,for,the,link,leader,retrieval,service,param,standalone,ref,actor,reference,to,be,used,in,standalone,mode,return,the,link,leader,retrieval,service,specified,in,the,configuration,object,throws,exception;public,static,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,actor,ref,standalone,ref,throws,exception,recovery,mode,recovery,mode,get,recovery,mode,configuration,switch,recovery,mode,case,standalone,string,akka,url,standalone,ref,path,to,serialization,format,return,new,standalone,leader,retrieval,service,akka,url,case,zookeeper,return,zoo,keeper,utils,create,leader,retrieval,service,configuration,default,throw,new,exception,recovery,mode,recovery,mode,is,not,supported
LeaderRetrievalUtils -> public static LeaderRetrievalService createLeaderRetrievalService( 				Configuration configuration, ActorRef standaloneRef) throws Exception;1472033364;Creates a {@link LeaderRetrievalService} that either uses the distributed leader election_configured in the configuration, or, in standalone mode, the given actor reference.__@param configuration Configuration containing the settings for the {@link LeaderRetrievalService}_@param standaloneRef Actor reference to be used in standalone mode.__@return The {@link LeaderRetrievalService} specified in the configuration object_@throws Exception;public static LeaderRetrievalService createLeaderRetrievalService(_				Configuration configuration, ActorRef standaloneRef) throws Exception {__		HighAvailabilityMode highAvailabilityMode = getRecoveryMode(configuration)___		switch (highAvailabilityMode) {_			case NONE:_				String akkaUrl = standaloneRef.path().toSerializationFormat()__				return new StandaloneLeaderRetrievalService(akkaUrl)__			case ZOOKEEPER:_				return ZooKeeperUtils.createLeaderRetrievalService(configuration)__			default:_				throw new Exception("Recovery mode " + highAvailabilityMode + " is not supported.")__		}_	};creates,a,link,leader,retrieval,service,that,either,uses,the,distributed,leader,election,configured,in,the,configuration,or,in,standalone,mode,the,given,actor,reference,param,configuration,configuration,containing,the,settings,for,the,link,leader,retrieval,service,param,standalone,ref,actor,reference,to,be,used,in,standalone,mode,return,the,link,leader,retrieval,service,specified,in,the,configuration,object,throws,exception;public,static,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,actor,ref,standalone,ref,throws,exception,high,availability,mode,high,availability,mode,get,recovery,mode,configuration,switch,high,availability,mode,case,none,string,akka,url,standalone,ref,path,to,serialization,format,return,new,standalone,leader,retrieval,service,akka,url,case,zookeeper,return,zoo,keeper,utils,create,leader,retrieval,service,configuration,default,throw,new,exception,recovery,mode,high,availability,mode,is,not,supported
LeaderRetrievalUtils -> public static LeaderRetrievalService createLeaderRetrievalService( 				Configuration configuration, ActorRef standaloneRef) throws Exception;1472033371;Creates a {@link LeaderRetrievalService} that either uses the distributed leader election_configured in the configuration, or, in standalone mode, the given actor reference.__@param configuration Configuration containing the settings for the {@link LeaderRetrievalService}_@param standaloneRef Actor reference to be used in standalone mode.__@return The {@link LeaderRetrievalService} specified in the configuration object_@throws Exception;public static LeaderRetrievalService createLeaderRetrievalService(_				Configuration configuration, ActorRef standaloneRef) throws Exception {__		HighAvailabilityMode highAvailabilityMode = getRecoveryMode(configuration)___		switch (highAvailabilityMode) {_			case NONE:_				String akkaUrl = standaloneRef.path().toSerializationFormat()__				return new StandaloneLeaderRetrievalService(akkaUrl)__			case ZOOKEEPER:_				return ZooKeeperUtils.createLeaderRetrievalService(configuration)__			default:_				throw new Exception("Recovery mode " + highAvailabilityMode + " is not supported.")__		}_	};creates,a,link,leader,retrieval,service,that,either,uses,the,distributed,leader,election,configured,in,the,configuration,or,in,standalone,mode,the,given,actor,reference,param,configuration,configuration,containing,the,settings,for,the,link,leader,retrieval,service,param,standalone,ref,actor,reference,to,be,used,in,standalone,mode,return,the,link,leader,retrieval,service,specified,in,the,configuration,object,throws,exception;public,static,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,actor,ref,standalone,ref,throws,exception,high,availability,mode,high,availability,mode,get,recovery,mode,configuration,switch,high,availability,mode,case,none,string,akka,url,standalone,ref,path,to,serialization,format,return,new,standalone,leader,retrieval,service,akka,url,case,zookeeper,return,zoo,keeper,utils,create,leader,retrieval,service,configuration,default,throw,new,exception,recovery,mode,high,availability,mode,is,not,supported
LeaderRetrievalUtils -> public static LeaderRetrievalService createLeaderRetrievalService( 				Configuration configuration, ActorRef standaloneRef) throws Exception;1481907119;Creates a {@link LeaderRetrievalService} that either uses the distributed leader election_configured in the configuration, or, in standalone mode, the given actor reference.__@param configuration Configuration containing the settings for the {@link LeaderRetrievalService}_@param standaloneRef Actor reference to be used in standalone mode.__@return The {@link LeaderRetrievalService} specified in the configuration object_@throws Exception;public static LeaderRetrievalService createLeaderRetrievalService(_				Configuration configuration, ActorRef standaloneRef) throws Exception {__		HighAvailabilityMode highAvailabilityMode = getRecoveryMode(configuration)___		switch (highAvailabilityMode) {_			case NONE:_				String akkaUrl = standaloneRef.path().toSerializationFormat()__				return new StandaloneLeaderRetrievalService(akkaUrl)__			case ZOOKEEPER:_				return ZooKeeperUtils.createLeaderRetrievalService(configuration)__			default:_				throw new Exception("Recovery mode " + highAvailabilityMode + " is not supported.")__		}_	};creates,a,link,leader,retrieval,service,that,either,uses,the,distributed,leader,election,configured,in,the,configuration,or,in,standalone,mode,the,given,actor,reference,param,configuration,configuration,containing,the,settings,for,the,link,leader,retrieval,service,param,standalone,ref,actor,reference,to,be,used,in,standalone,mode,return,the,link,leader,retrieval,service,specified,in,the,configuration,object,throws,exception;public,static,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,actor,ref,standalone,ref,throws,exception,high,availability,mode,high,availability,mode,get,recovery,mode,configuration,switch,high,availability,mode,case,none,string,akka,url,standalone,ref,path,to,serialization,format,return,new,standalone,leader,retrieval,service,akka,url,case,zookeeper,return,zoo,keeper,utils,create,leader,retrieval,service,configuration,default,throw,new,exception,recovery,mode,high,availability,mode,is,not,supported
LeaderRetrievalUtils -> public static LeaderRetrievalService createLeaderRetrievalService( 				Configuration configuration, ActorRef standaloneRef) throws Exception;1482522860;Creates a {@link LeaderRetrievalService} that either uses the distributed leader election_configured in the configuration, or, in standalone mode, the given actor reference.__@param configuration Configuration containing the settings for the {@link LeaderRetrievalService}_@param standaloneRef Actor reference to be used in standalone mode.__@return The {@link LeaderRetrievalService} specified in the configuration object_@throws Exception;public static LeaderRetrievalService createLeaderRetrievalService(_				Configuration configuration, ActorRef standaloneRef) throws Exception {__		HighAvailabilityMode highAvailabilityMode = getRecoveryMode(configuration)___		switch (highAvailabilityMode) {_			case NONE:_				String akkaUrl = standaloneRef.path().toSerializationFormat()__				return new StandaloneLeaderRetrievalService(akkaUrl)__			case ZOOKEEPER:_				return ZooKeeperUtils.createLeaderRetrievalService(configuration)__			default:_				throw new Exception("Recovery mode " + highAvailabilityMode + " is not supported.")__		}_	};creates,a,link,leader,retrieval,service,that,either,uses,the,distributed,leader,election,configured,in,the,configuration,or,in,standalone,mode,the,given,actor,reference,param,configuration,configuration,containing,the,settings,for,the,link,leader,retrieval,service,param,standalone,ref,actor,reference,to,be,used,in,standalone,mode,return,the,link,leader,retrieval,service,specified,in,the,configuration,object,throws,exception;public,static,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,actor,ref,standalone,ref,throws,exception,high,availability,mode,high,availability,mode,get,recovery,mode,configuration,switch,high,availability,mode,case,none,string,akka,url,standalone,ref,path,to,serialization,format,return,new,standalone,leader,retrieval,service,akka,url,case,zookeeper,return,zoo,keeper,utils,create,leader,retrieval,service,configuration,default,throw,new,exception,recovery,mode,high,availability,mode,is,not,supported
LeaderRetrievalUtils -> public static LeaderRetrievalService createLeaderRetrievalService( 				Configuration configuration, ActorRef standaloneRef) throws Exception;1493975155;Creates a {@link LeaderRetrievalService} that either uses the distributed leader election_configured in the configuration, or, in standalone mode, the given actor reference.__@param configuration Configuration containing the settings for the {@link LeaderRetrievalService}_@param standaloneRef Actor reference to be used in standalone mode.__@return The {@link LeaderRetrievalService} specified in the configuration object_@throws Exception;public static LeaderRetrievalService createLeaderRetrievalService(_				Configuration configuration, ActorRef standaloneRef) throws Exception {__		HighAvailabilityMode highAvailabilityMode = getRecoveryMode(configuration)___		switch (highAvailabilityMode) {_			case NONE:_				String akkaUrl = standaloneRef.path().toSerializationFormat()__				return new StandaloneLeaderRetrievalService(akkaUrl)__			case ZOOKEEPER:_				return ZooKeeperUtils.createLeaderRetrievalService(configuration)__			default:_				throw new Exception("Recovery mode " + highAvailabilityMode + " is not supported.")__		}_	};creates,a,link,leader,retrieval,service,that,either,uses,the,distributed,leader,election,configured,in,the,configuration,or,in,standalone,mode,the,given,actor,reference,param,configuration,configuration,containing,the,settings,for,the,link,leader,retrieval,service,param,standalone,ref,actor,reference,to,be,used,in,standalone,mode,return,the,link,leader,retrieval,service,specified,in,the,configuration,object,throws,exception;public,static,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,actor,ref,standalone,ref,throws,exception,high,availability,mode,high,availability,mode,get,recovery,mode,configuration,switch,high,availability,mode,case,none,string,akka,url,standalone,ref,path,to,serialization,format,return,new,standalone,leader,retrieval,service,akka,url,case,zookeeper,return,zoo,keeper,utils,create,leader,retrieval,service,configuration,default,throw,new,exception,recovery,mode,high,availability,mode,is,not,supported
LeaderRetrievalUtils -> public static LeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration, boolean resolveInitialHostName) 		throws Exception;1481907119;Creates a {@link LeaderRetrievalService} based on the provided {@link Configuration} object.__@param configuration Configuration containing the settings for the {@link LeaderRetrievalService}_@param resolveInitialHostName If true, resolves the initial hostname_@return The {@link LeaderRetrievalService} specified in the configuration object_@throws Exception;public static LeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration, boolean resolveInitialHostName)_		throws Exception {__		HighAvailabilityMode highAvailabilityMode = getRecoveryMode(configuration)___		switch (highAvailabilityMode) {_			case NONE:_				return StandaloneUtils.createLeaderRetrievalService(configuration, resolveInitialHostName)__			case ZOOKEEPER:_				return ZooKeeperUtils.createLeaderRetrievalService(configuration)__			default:_				throw new Exception("Recovery mode " + highAvailabilityMode + " is not supported.")__		}_	};creates,a,link,leader,retrieval,service,based,on,the,provided,link,configuration,object,param,configuration,configuration,containing,the,settings,for,the,link,leader,retrieval,service,param,resolve,initial,host,name,if,true,resolves,the,initial,hostname,return,the,link,leader,retrieval,service,specified,in,the,configuration,object,throws,exception;public,static,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,boolean,resolve,initial,host,name,throws,exception,high,availability,mode,high,availability,mode,get,recovery,mode,configuration,switch,high,availability,mode,case,none,return,standalone,utils,create,leader,retrieval,service,configuration,resolve,initial,host,name,case,zookeeper,return,zoo,keeper,utils,create,leader,retrieval,service,configuration,default,throw,new,exception,recovery,mode,high,availability,mode,is,not,supported
LeaderRetrievalUtils -> public static LeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration, boolean resolveInitialHostName) 		throws Exception;1482522860;Creates a {@link LeaderRetrievalService} based on the provided {@link Configuration} object.__@param configuration Configuration containing the settings for the {@link LeaderRetrievalService}_@param resolveInitialHostName If true, resolves the initial hostname_@return The {@link LeaderRetrievalService} specified in the configuration object_@throws Exception;public static LeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration, boolean resolveInitialHostName)_		throws Exception {__		HighAvailabilityMode highAvailabilityMode = getRecoveryMode(configuration)___		switch (highAvailabilityMode) {_			case NONE:_				return StandaloneUtils.createLeaderRetrievalService(configuration, resolveInitialHostName)__			case ZOOKEEPER:_				return ZooKeeperUtils.createLeaderRetrievalService(configuration)__			default:_				throw new Exception("Recovery mode " + highAvailabilityMode + " is not supported.")__		}_	};creates,a,link,leader,retrieval,service,based,on,the,provided,link,configuration,object,param,configuration,configuration,containing,the,settings,for,the,link,leader,retrieval,service,param,resolve,initial,host,name,if,true,resolves,the,initial,hostname,return,the,link,leader,retrieval,service,specified,in,the,configuration,object,throws,exception;public,static,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,boolean,resolve,initial,host,name,throws,exception,high,availability,mode,high,availability,mode,get,recovery,mode,configuration,switch,high,availability,mode,case,none,return,standalone,utils,create,leader,retrieval,service,configuration,resolve,initial,host,name,case,zookeeper,return,zoo,keeper,utils,create,leader,retrieval,service,configuration,default,throw,new,exception,recovery,mode,high,availability,mode,is,not,supported
LeaderRetrievalUtils -> public static HighAvailabilityMode getRecoveryMode(Configuration config);1472033364;Gets the recovery mode as configured, based on the {@link ConfigConstants#HIGH_AVAILABILITY}_config key.__@param config The configuration to read the recovery mode from._@return The recovery mode.__@throws IllegalConfigurationException Thrown, if the recovery mode does not correspond_to a known value.;public static HighAvailabilityMode getRecoveryMode(Configuration config) {_		return HighAvailabilityMode.fromConfig(config)__	};gets,the,recovery,mode,as,configured,based,on,the,link,config,constants,config,key,param,config,the,configuration,to,read,the,recovery,mode,from,return,the,recovery,mode,throws,illegal,configuration,exception,thrown,if,the,recovery,mode,does,not,correspond,to,a,known,value;public,static,high,availability,mode,get,recovery,mode,configuration,config,return,high,availability,mode,from,config,config
LeaderRetrievalUtils -> public static HighAvailabilityMode getRecoveryMode(Configuration config);1472033371;Gets the recovery mode as configured, based on the {@link ConfigConstants#HA_MODE}_config key.__@param config The configuration to read the recovery mode from._@return The recovery mode.__@throws IllegalConfigurationException Thrown, if the recovery mode does not correspond_to a known value.;public static HighAvailabilityMode getRecoveryMode(Configuration config) {_		return HighAvailabilityMode.fromConfig(config)__	};gets,the,recovery,mode,as,configured,based,on,the,link,config,constants,config,key,param,config,the,configuration,to,read,the,recovery,mode,from,return,the,recovery,mode,throws,illegal,configuration,exception,thrown,if,the,recovery,mode,does,not,correspond,to,a,known,value;public,static,high,availability,mode,get,recovery,mode,configuration,config,return,high,availability,mode,from,config,config
LeaderRetrievalUtils -> public static HighAvailabilityMode getRecoveryMode(Configuration config);1481907119;Gets the recovery mode as configured, based on the {@link ConfigConstants#HA_MODE}_config key.__@param config The configuration to read the recovery mode from._@return The recovery mode.__@throws IllegalConfigurationException Thrown, if the recovery mode does not correspond_to a known value.;public static HighAvailabilityMode getRecoveryMode(Configuration config) {_		return HighAvailabilityMode.fromConfig(config)__	};gets,the,recovery,mode,as,configured,based,on,the,link,config,constants,config,key,param,config,the,configuration,to,read,the,recovery,mode,from,return,the,recovery,mode,throws,illegal,configuration,exception,thrown,if,the,recovery,mode,does,not,correspond,to,a,known,value;public,static,high,availability,mode,get,recovery,mode,configuration,config,return,high,availability,mode,from,config,config
LeaderRetrievalUtils -> public static HighAvailabilityMode getRecoveryMode(Configuration config);1482522860;Gets the recovery mode as configured, based on the {@link ConfigConstants#HA_MODE}_config key.__@param config The configuration to read the recovery mode from._@return The recovery mode.__@throws IllegalConfigurationException Thrown, if the recovery mode does not correspond_to a known value.;public static HighAvailabilityMode getRecoveryMode(Configuration config) {_		return HighAvailabilityMode.fromConfig(config)__	};gets,the,recovery,mode,as,configured,based,on,the,link,config,constants,config,key,param,config,the,configuration,to,read,the,recovery,mode,from,return,the,recovery,mode,throws,illegal,configuration,exception,thrown,if,the,recovery,mode,does,not,correspond,to,a,known,value;public,static,high,availability,mode,get,recovery,mode,configuration,config,return,high,availability,mode,from,config,config
LeaderRetrievalUtils -> public static HighAvailabilityMode getRecoveryMode(Configuration config);1493975155;Gets the recovery mode as configured, based on the {@link ConfigConstants#HA_MODE}_config key.__@param config The configuration to read the recovery mode from._@return The recovery mode.__@throws IllegalConfigurationException Thrown, if the recovery mode does not correspond_to a known value.;public static HighAvailabilityMode getRecoveryMode(Configuration config) {_		return HighAvailabilityMode.fromConfig(config)__	};gets,the,recovery,mode,as,configured,based,on,the,link,config,constants,config,key,param,config,the,configuration,to,read,the,recovery,mode,from,return,the,recovery,mode,throws,illegal,configuration,exception,thrown,if,the,recovery,mode,does,not,correspond,to,a,known,value;public,static,high,availability,mode,get,recovery,mode,configuration,config,return,high,availability,mode,from,config,config
LeaderRetrievalUtils -> public static HighAvailabilityMode getRecoveryMode(Configuration config);1493975167;Gets the recovery mode as configured, based on the {@link ConfigConstants#HA_MODE}_config key.__@param config The configuration to read the recovery mode from._@return The recovery mode.__@throws IllegalConfigurationException Thrown, if the recovery mode does not correspond_to a known value.;public static HighAvailabilityMode getRecoveryMode(Configuration config) {_		return HighAvailabilityMode.fromConfig(config)__	};gets,the,recovery,mode,as,configured,based,on,the,link,config,constants,config,key,param,config,the,configuration,to,read,the,recovery,mode,from,return,the,recovery,mode,throws,illegal,configuration,exception,thrown,if,the,recovery,mode,does,not,correspond,to,a,known,value;public,static,high,availability,mode,get,recovery,mode,configuration,config,return,high,availability,mode,from,config,config
LeaderRetrievalUtils -> public static HighAvailabilityMode getRecoveryMode(Configuration config);1495441965;Gets the recovery mode as configured, based on the {@link ConfigConstants#HA_MODE}_config key.__@param config The configuration to read the recovery mode from._@return The recovery mode.__@throws IllegalConfigurationException Thrown, if the recovery mode does not correspond_to a known value.;public static HighAvailabilityMode getRecoveryMode(Configuration config) {_		return HighAvailabilityMode.fromConfig(config)__	};gets,the,recovery,mode,as,configured,based,on,the,link,config,constants,config,key,param,config,the,configuration,to,read,the,recovery,mode,from,return,the,recovery,mode,throws,illegal,configuration,exception,thrown,if,the,recovery,mode,does,not,correspond,to,a,known,value;public,static,high,availability,mode,get,recovery,mode,configuration,config,return,high,availability,mode,from,config,config
LeaderRetrievalUtils -> public static HighAvailabilityMode getRecoveryMode(Configuration config);1495441965;Gets the recovery mode as configured, based on the {@link ConfigConstants#HA_MODE}_config key.__@param config The configuration to read the recovery mode from._@return The recovery mode.__@throws IllegalConfigurationException Thrown, if the recovery mode does not correspond_to a known value.;public static HighAvailabilityMode getRecoveryMode(Configuration config) {_		return HighAvailabilityMode.fromConfig(config)__	};gets,the,recovery,mode,as,configured,based,on,the,link,config,constants,config,key,param,config,the,configuration,to,read,the,recovery,mode,from,return,the,recovery,mode,throws,illegal,configuration,exception,thrown,if,the,recovery,mode,does,not,correspond,to,a,known,value;public,static,high,availability,mode,get,recovery,mode,configuration,config,return,high,availability,mode,from,config,config
LeaderRetrievalUtils -> public static HighAvailabilityMode getRecoveryMode(Configuration config);1517237717;Gets the recovery mode as configured, based on the {@link ConfigConstants#HA_MODE}_config key.__@param config The configuration to read the recovery mode from._@return The recovery mode.__@throws IllegalConfigurationException Thrown, if the recovery mode does not correspond_to a known value.;public static HighAvailabilityMode getRecoveryMode(Configuration config) {_		return HighAvailabilityMode.fromConfig(config)__	};gets,the,recovery,mode,as,configured,based,on,the,link,config,constants,config,key,param,config,the,configuration,to,read,the,recovery,mode,from,return,the,recovery,mode,throws,illegal,configuration,exception,thrown,if,the,recovery,mode,does,not,correspond,to,a,known,value;public,static,high,availability,mode,get,recovery,mode,configuration,config,return,high,availability,mode,from,config,config
LeaderRetrievalUtils -> public static HighAvailabilityMode getRecoveryMode(Configuration config);1517324056;Gets the recovery mode as configured, based on {@link HighAvailabilityOptions#HA_MODE}.__@param config The configuration to read the recovery mode from._@return The recovery mode.__@throws IllegalConfigurationException Thrown, if the recovery mode does not correspond_to a known value.;public static HighAvailabilityMode getRecoveryMode(Configuration config) {_		return HighAvailabilityMode.fromConfig(config)__	};gets,the,recovery,mode,as,configured,based,on,link,high,availability,options,param,config,the,configuration,to,read,the,recovery,mode,from,return,the,recovery,mode,throws,illegal,configuration,exception,thrown,if,the,recovery,mode,does,not,correspond,to,a,known,value;public,static,high,availability,mode,get,recovery,mode,configuration,config,return,high,availability,mode,from,config,config
LeaderRetrievalUtils -> public static HighAvailabilityMode getRecoveryMode(Configuration config);1536930103;Gets the recovery mode as configured, based on {@link HighAvailabilityOptions#HA_MODE}.__@param config The configuration to read the recovery mode from._@return The recovery mode.__@throws IllegalConfigurationException Thrown, if the recovery mode does not correspond_to a known value.;public static HighAvailabilityMode getRecoveryMode(Configuration config) {_		return HighAvailabilityMode.fromConfig(config)__	};gets,the,recovery,mode,as,configured,based,on,link,high,availability,options,param,config,the,configuration,to,read,the,recovery,mode,from,return,the,recovery,mode,throws,illegal,configuration,exception,thrown,if,the,recovery,mode,does,not,correspond,to,a,known,value;public,static,high,availability,mode,get,recovery,mode,configuration,config,return,high,availability,mode,from,config,config
LeaderRetrievalUtils -> public static ActorGateway retrieveLeaderGateway( 			LeaderRetrievalService leaderRetrievalService, 			ActorSystem actorSystem, 			FiniteDuration timeout) 		throws LeaderRetrievalException;1441011751;Retrieves the current leader gateway using the given {@link LeaderRetrievalService}. If the_current leader could not be retrieved after the given timeout, then a_{@link LeaderRetrievalException} is thrown.__@param leaderRetrievalService {@link LeaderRetrievalService} which is used for the leader retrieval_@param actorSystem ActorSystem which is used for the {@link LeaderRetrievalListener} implementation_@param timeout Timeout value for the retrieval call_@return The current leader gateway_@throws LeaderRetrievalException If the actor gateway could not be retrieved or the timeout has been exceeded;public static ActorGateway retrieveLeaderGateway(_			LeaderRetrievalService leaderRetrievalService,_			ActorSystem actorSystem,_			FiniteDuration timeout)_		throws LeaderRetrievalException {_		LeaderGatewayListener listener = new LeaderGatewayListener(actorSystem, timeout)___		try {_			leaderRetrievalService.start(listener)___			Future<ActorGateway> actorGatewayFuture = listener.getActorGatewayFuture()___			ActorGateway gateway = Await.result(actorGatewayFuture, timeout)___			return gateway__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader gateway", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,current,leader,gateway,using,the,given,link,leader,retrieval,service,if,the,current,leader,could,not,be,retrieved,after,the,given,timeout,then,a,link,leader,retrieval,exception,is,thrown,param,leader,retrieval,service,link,leader,retrieval,service,which,is,used,for,the,leader,retrieval,param,actor,system,actor,system,which,is,used,for,the,link,leader,retrieval,listener,implementation,param,timeout,timeout,value,for,the,retrieval,call,return,the,current,leader,gateway,throws,leader,retrieval,exception,if,the,actor,gateway,could,not,be,retrieved,or,the,timeout,has,been,exceeded;public,static,actor,gateway,retrieve,leader,gateway,leader,retrieval,service,leader,retrieval,service,actor,system,actor,system,finite,duration,timeout,throws,leader,retrieval,exception,leader,gateway,listener,listener,new,leader,gateway,listener,actor,system,timeout,try,leader,retrieval,service,start,listener,future,actor,gateway,actor,gateway,future,listener,get,actor,gateway,future,actor,gateway,gateway,await,result,actor,gateway,future,timeout,return,gateway,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,gateway,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static ActorGateway retrieveLeaderGateway( 			LeaderRetrievalService leaderRetrievalService, 			ActorSystem actorSystem, 			FiniteDuration timeout) 		throws LeaderRetrievalException;1443564120;Retrieves the current leader gateway using the given {@link LeaderRetrievalService}. If the_current leader could not be retrieved after the given timeout, then a_{@link LeaderRetrievalException} is thrown.__@param leaderRetrievalService {@link LeaderRetrievalService} which is used for the leader retrieval_@param actorSystem ActorSystem which is used for the {@link LeaderRetrievalListener} implementation_@param timeout Timeout value for the retrieval call_@return The current leader gateway_@throws LeaderRetrievalException If the actor gateway could not be retrieved or the timeout has been exceeded;public static ActorGateway retrieveLeaderGateway(_			LeaderRetrievalService leaderRetrievalService,_			ActorSystem actorSystem,_			FiniteDuration timeout)_		throws LeaderRetrievalException {_		LeaderGatewayListener listener = new LeaderGatewayListener(actorSystem, timeout)___		try {_			leaderRetrievalService.start(listener)___			Future<ActorGateway> actorGatewayFuture = listener.getActorGatewayFuture()___			ActorGateway gateway = Await.result(actorGatewayFuture, timeout)___			return gateway__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader gateway", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,current,leader,gateway,using,the,given,link,leader,retrieval,service,if,the,current,leader,could,not,be,retrieved,after,the,given,timeout,then,a,link,leader,retrieval,exception,is,thrown,param,leader,retrieval,service,link,leader,retrieval,service,which,is,used,for,the,leader,retrieval,param,actor,system,actor,system,which,is,used,for,the,link,leader,retrieval,listener,implementation,param,timeout,timeout,value,for,the,retrieval,call,return,the,current,leader,gateway,throws,leader,retrieval,exception,if,the,actor,gateway,could,not,be,retrieved,or,the,timeout,has,been,exceeded;public,static,actor,gateway,retrieve,leader,gateway,leader,retrieval,service,leader,retrieval,service,actor,system,actor,system,finite,duration,timeout,throws,leader,retrieval,exception,leader,gateway,listener,listener,new,leader,gateway,listener,actor,system,timeout,try,leader,retrieval,service,start,listener,future,actor,gateway,actor,gateway,future,listener,get,actor,gateway,future,actor,gateway,gateway,await,result,actor,gateway,future,timeout,return,gateway,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,gateway,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static ActorGateway retrieveLeaderGateway( 			LeaderRetrievalService leaderRetrievalService, 			ActorSystem actorSystem, 			FiniteDuration timeout) 		throws LeaderRetrievalException;1443682795;Retrieves the current leader gateway using the given {@link LeaderRetrievalService}. If the_current leader could not be retrieved after the given timeout, then a_{@link LeaderRetrievalException} is thrown.__@param leaderRetrievalService {@link LeaderRetrievalService} which is used for the leader retrieval_@param actorSystem ActorSystem which is used for the {@link LeaderRetrievalListener} implementation_@param timeout Timeout value for the retrieval call_@return The current leader gateway_@throws LeaderRetrievalException If the actor gateway could not be retrieved or the timeout has been exceeded;public static ActorGateway retrieveLeaderGateway(_			LeaderRetrievalService leaderRetrievalService,_			ActorSystem actorSystem,_			FiniteDuration timeout)_		throws LeaderRetrievalException {_		LeaderGatewayListener listener = new LeaderGatewayListener(actorSystem, timeout)___		try {_			leaderRetrievalService.start(listener)___			Future<ActorGateway> actorGatewayFuture = listener.getActorGatewayFuture()___			ActorGateway gateway = Await.result(actorGatewayFuture, timeout)___			return gateway__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader gateway", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,current,leader,gateway,using,the,given,link,leader,retrieval,service,if,the,current,leader,could,not,be,retrieved,after,the,given,timeout,then,a,link,leader,retrieval,exception,is,thrown,param,leader,retrieval,service,link,leader,retrieval,service,which,is,used,for,the,leader,retrieval,param,actor,system,actor,system,which,is,used,for,the,link,leader,retrieval,listener,implementation,param,timeout,timeout,value,for,the,retrieval,call,return,the,current,leader,gateway,throws,leader,retrieval,exception,if,the,actor,gateway,could,not,be,retrieved,or,the,timeout,has,been,exceeded;public,static,actor,gateway,retrieve,leader,gateway,leader,retrieval,service,leader,retrieval,service,actor,system,actor,system,finite,duration,timeout,throws,leader,retrieval,exception,leader,gateway,listener,listener,new,leader,gateway,listener,actor,system,timeout,try,leader,retrieval,service,start,listener,future,actor,gateway,actor,gateway,future,listener,get,actor,gateway,future,actor,gateway,gateway,await,result,actor,gateway,future,timeout,return,gateway,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,gateway,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static ActorGateway retrieveLeaderGateway( 			LeaderRetrievalService leaderRetrievalService, 			ActorSystem actorSystem, 			FiniteDuration timeout) 		throws LeaderRetrievalException;1444307021;Retrieves the current leader gateway using the given {@link LeaderRetrievalService}. If the_current leader could not be retrieved after the given timeout, then a_{@link LeaderRetrievalException} is thrown.__@param leaderRetrievalService {@link LeaderRetrievalService} which is used for the leader retrieval_@param actorSystem ActorSystem which is used for the {@link LeaderRetrievalListener} implementation_@param timeout Timeout value for the retrieval call_@return The current leader gateway_@throws LeaderRetrievalException If the actor gateway could not be retrieved or the timeout has been exceeded;public static ActorGateway retrieveLeaderGateway(_			LeaderRetrievalService leaderRetrievalService,_			ActorSystem actorSystem,_			FiniteDuration timeout)_		throws LeaderRetrievalException {_		LeaderGatewayListener listener = new LeaderGatewayListener(actorSystem, timeout)___		try {_			leaderRetrievalService.start(listener)___			Future<ActorGateway> actorGatewayFuture = listener.getActorGatewayFuture()___			return Await.result(actorGatewayFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader gateway", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,current,leader,gateway,using,the,given,link,leader,retrieval,service,if,the,current,leader,could,not,be,retrieved,after,the,given,timeout,then,a,link,leader,retrieval,exception,is,thrown,param,leader,retrieval,service,link,leader,retrieval,service,which,is,used,for,the,leader,retrieval,param,actor,system,actor,system,which,is,used,for,the,link,leader,retrieval,listener,implementation,param,timeout,timeout,value,for,the,retrieval,call,return,the,current,leader,gateway,throws,leader,retrieval,exception,if,the,actor,gateway,could,not,be,retrieved,or,the,timeout,has,been,exceeded;public,static,actor,gateway,retrieve,leader,gateway,leader,retrieval,service,leader,retrieval,service,actor,system,actor,system,finite,duration,timeout,throws,leader,retrieval,exception,leader,gateway,listener,listener,new,leader,gateway,listener,actor,system,timeout,try,leader,retrieval,service,start,listener,future,actor,gateway,actor,gateway,future,listener,get,actor,gateway,future,return,await,result,actor,gateway,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,gateway,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static ActorGateway retrieveLeaderGateway( 			LeaderRetrievalService leaderRetrievalService, 			ActorSystem actorSystem, 			FiniteDuration timeout) 		throws LeaderRetrievalException;1459248687;Retrieves the current leader gateway using the given {@link LeaderRetrievalService}. If the_current leader could not be retrieved after the given timeout, then a_{@link LeaderRetrievalException} is thrown.__@param leaderRetrievalService {@link LeaderRetrievalService} which is used for the leader retrieval_@param actorSystem ActorSystem which is used for the {@link LeaderRetrievalListener} implementation_@param timeout Timeout value for the retrieval call_@return The current leader gateway_@throws LeaderRetrievalException If the actor gateway could not be retrieved or the timeout has been exceeded;public static ActorGateway retrieveLeaderGateway(_			LeaderRetrievalService leaderRetrievalService,_			ActorSystem actorSystem,_			FiniteDuration timeout)_		throws LeaderRetrievalException {_		LeaderGatewayListener listener = new LeaderGatewayListener(actorSystem, timeout)___		try {_			leaderRetrievalService.start(listener)___			Future<ActorGateway> actorGatewayFuture = listener.getActorGatewayFuture()___			return Await.result(actorGatewayFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader gateway", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,current,leader,gateway,using,the,given,link,leader,retrieval,service,if,the,current,leader,could,not,be,retrieved,after,the,given,timeout,then,a,link,leader,retrieval,exception,is,thrown,param,leader,retrieval,service,link,leader,retrieval,service,which,is,used,for,the,leader,retrieval,param,actor,system,actor,system,which,is,used,for,the,link,leader,retrieval,listener,implementation,param,timeout,timeout,value,for,the,retrieval,call,return,the,current,leader,gateway,throws,leader,retrieval,exception,if,the,actor,gateway,could,not,be,retrieved,or,the,timeout,has,been,exceeded;public,static,actor,gateway,retrieve,leader,gateway,leader,retrieval,service,leader,retrieval,service,actor,system,actor,system,finite,duration,timeout,throws,leader,retrieval,exception,leader,gateway,listener,listener,new,leader,gateway,listener,actor,system,timeout,try,leader,retrieval,service,start,listener,future,actor,gateway,actor,gateway,future,listener,get,actor,gateway,future,return,await,result,actor,gateway,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,gateway,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static ActorGateway retrieveLeaderGateway( 			LeaderRetrievalService leaderRetrievalService, 			ActorSystem actorSystem, 			FiniteDuration timeout) 		throws LeaderRetrievalException;1472033364;Retrieves the current leader gateway using the given {@link LeaderRetrievalService}. If the_current leader could not be retrieved after the given timeout, then a_{@link LeaderRetrievalException} is thrown.__@param leaderRetrievalService {@link LeaderRetrievalService} which is used for the leader retrieval_@param actorSystem ActorSystem which is used for the {@link LeaderRetrievalListener} implementation_@param timeout Timeout value for the retrieval call_@return The current leader gateway_@throws LeaderRetrievalException If the actor gateway could not be retrieved or the timeout has been exceeded;public static ActorGateway retrieveLeaderGateway(_			LeaderRetrievalService leaderRetrievalService,_			ActorSystem actorSystem,_			FiniteDuration timeout)_		throws LeaderRetrievalException {_		LeaderGatewayListener listener = new LeaderGatewayListener(actorSystem, timeout)___		try {_			leaderRetrievalService.start(listener)___			Future<ActorGateway> actorGatewayFuture = listener.getActorGatewayFuture()___			return Await.result(actorGatewayFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader gateway", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,current,leader,gateway,using,the,given,link,leader,retrieval,service,if,the,current,leader,could,not,be,retrieved,after,the,given,timeout,then,a,link,leader,retrieval,exception,is,thrown,param,leader,retrieval,service,link,leader,retrieval,service,which,is,used,for,the,leader,retrieval,param,actor,system,actor,system,which,is,used,for,the,link,leader,retrieval,listener,implementation,param,timeout,timeout,value,for,the,retrieval,call,return,the,current,leader,gateway,throws,leader,retrieval,exception,if,the,actor,gateway,could,not,be,retrieved,or,the,timeout,has,been,exceeded;public,static,actor,gateway,retrieve,leader,gateway,leader,retrieval,service,leader,retrieval,service,actor,system,actor,system,finite,duration,timeout,throws,leader,retrieval,exception,leader,gateway,listener,listener,new,leader,gateway,listener,actor,system,timeout,try,leader,retrieval,service,start,listener,future,actor,gateway,actor,gateway,future,listener,get,actor,gateway,future,return,await,result,actor,gateway,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,gateway,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static ActorGateway retrieveLeaderGateway( 			LeaderRetrievalService leaderRetrievalService, 			ActorSystem actorSystem, 			FiniteDuration timeout) 		throws LeaderRetrievalException;1472033371;Retrieves the current leader gateway using the given {@link LeaderRetrievalService}. If the_current leader could not be retrieved after the given timeout, then a_{@link LeaderRetrievalException} is thrown.__@param leaderRetrievalService {@link LeaderRetrievalService} which is used for the leader retrieval_@param actorSystem ActorSystem which is used for the {@link LeaderRetrievalListener} implementation_@param timeout Timeout value for the retrieval call_@return The current leader gateway_@throws LeaderRetrievalException If the actor gateway could not be retrieved or the timeout has been exceeded;public static ActorGateway retrieveLeaderGateway(_			LeaderRetrievalService leaderRetrievalService,_			ActorSystem actorSystem,_			FiniteDuration timeout)_		throws LeaderRetrievalException {_		LeaderGatewayListener listener = new LeaderGatewayListener(actorSystem, timeout)___		try {_			leaderRetrievalService.start(listener)___			Future<ActorGateway> actorGatewayFuture = listener.getActorGatewayFuture()___			return Await.result(actorGatewayFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader gateway", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,current,leader,gateway,using,the,given,link,leader,retrieval,service,if,the,current,leader,could,not,be,retrieved,after,the,given,timeout,then,a,link,leader,retrieval,exception,is,thrown,param,leader,retrieval,service,link,leader,retrieval,service,which,is,used,for,the,leader,retrieval,param,actor,system,actor,system,which,is,used,for,the,link,leader,retrieval,listener,implementation,param,timeout,timeout,value,for,the,retrieval,call,return,the,current,leader,gateway,throws,leader,retrieval,exception,if,the,actor,gateway,could,not,be,retrieved,or,the,timeout,has,been,exceeded;public,static,actor,gateway,retrieve,leader,gateway,leader,retrieval,service,leader,retrieval,service,actor,system,actor,system,finite,duration,timeout,throws,leader,retrieval,exception,leader,gateway,listener,listener,new,leader,gateway,listener,actor,system,timeout,try,leader,retrieval,service,start,listener,future,actor,gateway,actor,gateway,future,listener,get,actor,gateway,future,return,await,result,actor,gateway,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,gateway,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static ActorGateway retrieveLeaderGateway( 			LeaderRetrievalService leaderRetrievalService, 			ActorSystem actorSystem, 			FiniteDuration timeout) 		throws LeaderRetrievalException;1481907119;Retrieves the current leader gateway using the given {@link LeaderRetrievalService}. If the_current leader could not be retrieved after the given timeout, then a_{@link LeaderRetrievalException} is thrown.__@param leaderRetrievalService {@link LeaderRetrievalService} which is used for the leader retrieval_@param actorSystem ActorSystem which is used for the {@link LeaderRetrievalListener} implementation_@param timeout Timeout value for the retrieval call_@return The current leader gateway_@throws LeaderRetrievalException If the actor gateway could not be retrieved or the timeout has been exceeded;public static ActorGateway retrieveLeaderGateway(_			LeaderRetrievalService leaderRetrievalService,_			ActorSystem actorSystem,_			FiniteDuration timeout)_		throws LeaderRetrievalException {_		LeaderGatewayListener listener = new LeaderGatewayListener(actorSystem, timeout)___		try {_			leaderRetrievalService.start(listener)___			Future<ActorGateway> actorGatewayFuture = listener.getActorGatewayFuture()___			return Await.result(actorGatewayFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader gateway", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,current,leader,gateway,using,the,given,link,leader,retrieval,service,if,the,current,leader,could,not,be,retrieved,after,the,given,timeout,then,a,link,leader,retrieval,exception,is,thrown,param,leader,retrieval,service,link,leader,retrieval,service,which,is,used,for,the,leader,retrieval,param,actor,system,actor,system,which,is,used,for,the,link,leader,retrieval,listener,implementation,param,timeout,timeout,value,for,the,retrieval,call,return,the,current,leader,gateway,throws,leader,retrieval,exception,if,the,actor,gateway,could,not,be,retrieved,or,the,timeout,has,been,exceeded;public,static,actor,gateway,retrieve,leader,gateway,leader,retrieval,service,leader,retrieval,service,actor,system,actor,system,finite,duration,timeout,throws,leader,retrieval,exception,leader,gateway,listener,listener,new,leader,gateway,listener,actor,system,timeout,try,leader,retrieval,service,start,listener,future,actor,gateway,actor,gateway,future,listener,get,actor,gateway,future,return,await,result,actor,gateway,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,gateway,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static ActorGateway retrieveLeaderGateway( 			LeaderRetrievalService leaderRetrievalService, 			ActorSystem actorSystem, 			FiniteDuration timeout) 		throws LeaderRetrievalException;1482522860;Retrieves the current leader gateway using the given {@link LeaderRetrievalService}. If the_current leader could not be retrieved after the given timeout, then a_{@link LeaderRetrievalException} is thrown.__@param leaderRetrievalService {@link LeaderRetrievalService} which is used for the leader retrieval_@param actorSystem ActorSystem which is used for the {@link LeaderRetrievalListener} implementation_@param timeout Timeout value for the retrieval call_@return The current leader gateway_@throws LeaderRetrievalException If the actor gateway could not be retrieved or the timeout has been exceeded;public static ActorGateway retrieveLeaderGateway(_			LeaderRetrievalService leaderRetrievalService,_			ActorSystem actorSystem,_			FiniteDuration timeout)_		throws LeaderRetrievalException {_		LeaderGatewayListener listener = new LeaderGatewayListener(actorSystem, timeout)___		try {_			leaderRetrievalService.start(listener)___			Future<ActorGateway> actorGatewayFuture = listener.getActorGatewayFuture()___			return Await.result(actorGatewayFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader gateway", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,current,leader,gateway,using,the,given,link,leader,retrieval,service,if,the,current,leader,could,not,be,retrieved,after,the,given,timeout,then,a,link,leader,retrieval,exception,is,thrown,param,leader,retrieval,service,link,leader,retrieval,service,which,is,used,for,the,leader,retrieval,param,actor,system,actor,system,which,is,used,for,the,link,leader,retrieval,listener,implementation,param,timeout,timeout,value,for,the,retrieval,call,return,the,current,leader,gateway,throws,leader,retrieval,exception,if,the,actor,gateway,could,not,be,retrieved,or,the,timeout,has,been,exceeded;public,static,actor,gateway,retrieve,leader,gateway,leader,retrieval,service,leader,retrieval,service,actor,system,actor,system,finite,duration,timeout,throws,leader,retrieval,exception,leader,gateway,listener,listener,new,leader,gateway,listener,actor,system,timeout,try,leader,retrieval,service,start,listener,future,actor,gateway,actor,gateway,future,listener,get,actor,gateway,future,return,await,result,actor,gateway,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,gateway,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static ActorGateway retrieveLeaderGateway( 			LeaderRetrievalService leaderRetrievalService, 			ActorSystem actorSystem, 			FiniteDuration timeout) 		throws LeaderRetrievalException;1493975155;Retrieves the current leader gateway using the given {@link LeaderRetrievalService}. If the_current leader could not be retrieved after the given timeout, then a_{@link LeaderRetrievalException} is thrown.__@param leaderRetrievalService {@link LeaderRetrievalService} which is used for the leader retrieval_@param actorSystem ActorSystem which is used for the {@link LeaderRetrievalListener} implementation_@param timeout Timeout value for the retrieval call_@return The current leader gateway_@throws LeaderRetrievalException If the actor gateway could not be retrieved or the timeout has been exceeded;public static ActorGateway retrieveLeaderGateway(_			LeaderRetrievalService leaderRetrievalService,_			ActorSystem actorSystem,_			FiniteDuration timeout)_		throws LeaderRetrievalException {_		LeaderGatewayListener listener = new LeaderGatewayListener(actorSystem, timeout)___		try {_			leaderRetrievalService.start(listener)___			Future<ActorGateway> actorGatewayFuture = listener.getActorGatewayFuture()___			return Await.result(actorGatewayFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader gateway", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,current,leader,gateway,using,the,given,link,leader,retrieval,service,if,the,current,leader,could,not,be,retrieved,after,the,given,timeout,then,a,link,leader,retrieval,exception,is,thrown,param,leader,retrieval,service,link,leader,retrieval,service,which,is,used,for,the,leader,retrieval,param,actor,system,actor,system,which,is,used,for,the,link,leader,retrieval,listener,implementation,param,timeout,timeout,value,for,the,retrieval,call,return,the,current,leader,gateway,throws,leader,retrieval,exception,if,the,actor,gateway,could,not,be,retrieved,or,the,timeout,has,been,exceeded;public,static,actor,gateway,retrieve,leader,gateway,leader,retrieval,service,leader,retrieval,service,actor,system,actor,system,finite,duration,timeout,throws,leader,retrieval,exception,leader,gateway,listener,listener,new,leader,gateway,listener,actor,system,timeout,try,leader,retrieval,service,start,listener,future,actor,gateway,actor,gateway,future,listener,get,actor,gateway,future,return,await,result,actor,gateway,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,gateway,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static ActorGateway retrieveLeaderGateway( 			LeaderRetrievalService leaderRetrievalService, 			ActorSystem actorSystem, 			FiniteDuration timeout) 		throws LeaderRetrievalException;1493975167;Retrieves the current leader gateway using the given {@link LeaderRetrievalService}. If the_current leader could not be retrieved after the given timeout, then a_{@link LeaderRetrievalException} is thrown.__@param leaderRetrievalService {@link LeaderRetrievalService} which is used for the leader retrieval_@param actorSystem ActorSystem which is used for the {@link LeaderRetrievalListener} implementation_@param timeout Timeout value for the retrieval call_@return The current leader gateway_@throws LeaderRetrievalException If the actor gateway could not be retrieved or the timeout has been exceeded;public static ActorGateway retrieveLeaderGateway(_			LeaderRetrievalService leaderRetrievalService,_			ActorSystem actorSystem,_			FiniteDuration timeout)_		throws LeaderRetrievalException {_		LeaderGatewayListener listener = new LeaderGatewayListener(actorSystem, timeout)___		try {_			leaderRetrievalService.start(listener)___			Future<ActorGateway> actorGatewayFuture = listener.getActorGatewayFuture()___			return Await.result(actorGatewayFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader gateway", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,current,leader,gateway,using,the,given,link,leader,retrieval,service,if,the,current,leader,could,not,be,retrieved,after,the,given,timeout,then,a,link,leader,retrieval,exception,is,thrown,param,leader,retrieval,service,link,leader,retrieval,service,which,is,used,for,the,leader,retrieval,param,actor,system,actor,system,which,is,used,for,the,link,leader,retrieval,listener,implementation,param,timeout,timeout,value,for,the,retrieval,call,return,the,current,leader,gateway,throws,leader,retrieval,exception,if,the,actor,gateway,could,not,be,retrieved,or,the,timeout,has,been,exceeded;public,static,actor,gateway,retrieve,leader,gateway,leader,retrieval,service,leader,retrieval,service,actor,system,actor,system,finite,duration,timeout,throws,leader,retrieval,exception,leader,gateway,listener,listener,new,leader,gateway,listener,actor,system,timeout,try,leader,retrieval,service,start,listener,future,actor,gateway,actor,gateway,future,listener,get,actor,gateway,future,return,await,result,actor,gateway,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,gateway,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static ActorGateway retrieveLeaderGateway( 			LeaderRetrievalService leaderRetrievalService, 			ActorSystem actorSystem, 			FiniteDuration timeout) 		throws LeaderRetrievalException;1495441965;Retrieves the current leader gateway using the given {@link LeaderRetrievalService}. If the_current leader could not be retrieved after the given timeout, then a_{@link LeaderRetrievalException} is thrown.__@param leaderRetrievalService {@link LeaderRetrievalService} which is used for the leader retrieval_@param actorSystem ActorSystem which is used for the {@link LeaderRetrievalListener} implementation_@param timeout Timeout value for the retrieval call_@return The current leader gateway_@throws LeaderRetrievalException If the actor gateway could not be retrieved or the timeout has been exceeded;public static ActorGateway retrieveLeaderGateway(_			LeaderRetrievalService leaderRetrievalService,_			ActorSystem actorSystem,_			FiniteDuration timeout)_		throws LeaderRetrievalException {_		LeaderGatewayListener listener = new LeaderGatewayListener(actorSystem, timeout)___		try {_			leaderRetrievalService.start(listener)___			Future<ActorGateway> actorGatewayFuture = listener.getActorGatewayFuture()___			return Await.result(actorGatewayFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader gateway.", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,current,leader,gateway,using,the,given,link,leader,retrieval,service,if,the,current,leader,could,not,be,retrieved,after,the,given,timeout,then,a,link,leader,retrieval,exception,is,thrown,param,leader,retrieval,service,link,leader,retrieval,service,which,is,used,for,the,leader,retrieval,param,actor,system,actor,system,which,is,used,for,the,link,leader,retrieval,listener,implementation,param,timeout,timeout,value,for,the,retrieval,call,return,the,current,leader,gateway,throws,leader,retrieval,exception,if,the,actor,gateway,could,not,be,retrieved,or,the,timeout,has,been,exceeded;public,static,actor,gateway,retrieve,leader,gateway,leader,retrieval,service,leader,retrieval,service,actor,system,actor,system,finite,duration,timeout,throws,leader,retrieval,exception,leader,gateway,listener,listener,new,leader,gateway,listener,actor,system,timeout,try,leader,retrieval,service,start,listener,future,actor,gateway,actor,gateway,future,listener,get,actor,gateway,future,return,await,result,actor,gateway,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,gateway,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static ActorGateway retrieveLeaderGateway( 			LeaderRetrievalService leaderRetrievalService, 			ActorSystem actorSystem, 			FiniteDuration timeout) 		throws LeaderRetrievalException;1495441965;Retrieves the current leader gateway using the given {@link LeaderRetrievalService}. If the_current leader could not be retrieved after the given timeout, then a_{@link LeaderRetrievalException} is thrown.__@param leaderRetrievalService {@link LeaderRetrievalService} which is used for the leader retrieval_@param actorSystem ActorSystem which is used for the {@link LeaderRetrievalListener} implementation_@param timeout Timeout value for the retrieval call_@return The current leader gateway_@throws LeaderRetrievalException If the actor gateway could not be retrieved or the timeout has been exceeded;public static ActorGateway retrieveLeaderGateway(_			LeaderRetrievalService leaderRetrievalService,_			ActorSystem actorSystem,_			FiniteDuration timeout)_		throws LeaderRetrievalException {_		LeaderGatewayListener listener = new LeaderGatewayListener(actorSystem, timeout)___		try {_			leaderRetrievalService.start(listener)___			Future<ActorGateway> actorGatewayFuture = listener.getActorGatewayFuture()___			return Await.result(actorGatewayFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader gateway.", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,current,leader,gateway,using,the,given,link,leader,retrieval,service,if,the,current,leader,could,not,be,retrieved,after,the,given,timeout,then,a,link,leader,retrieval,exception,is,thrown,param,leader,retrieval,service,link,leader,retrieval,service,which,is,used,for,the,leader,retrieval,param,actor,system,actor,system,which,is,used,for,the,link,leader,retrieval,listener,implementation,param,timeout,timeout,value,for,the,retrieval,call,return,the,current,leader,gateway,throws,leader,retrieval,exception,if,the,actor,gateway,could,not,be,retrieved,or,the,timeout,has,been,exceeded;public,static,actor,gateway,retrieve,leader,gateway,leader,retrieval,service,leader,retrieval,service,actor,system,actor,system,finite,duration,timeout,throws,leader,retrieval,exception,leader,gateway,listener,listener,new,leader,gateway,listener,actor,system,timeout,try,leader,retrieval,service,start,listener,future,actor,gateway,actor,gateway,future,listener,get,actor,gateway,future,return,await,result,actor,gateway,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,gateway,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static ActorGateway retrieveLeaderGateway( 			LeaderRetrievalService leaderRetrievalService, 			ActorSystem actorSystem, 			FiniteDuration timeout) 		throws LeaderRetrievalException;1517237717;Retrieves the current leader gateway using the given {@link LeaderRetrievalService}. If the_current leader could not be retrieved after the given timeout, then a_{@link LeaderRetrievalException} is thrown.__@param leaderRetrievalService {@link LeaderRetrievalService} which is used for the leader retrieval_@param actorSystem ActorSystem which is used for the {@link LeaderRetrievalListener} implementation_@param timeout Timeout value for the retrieval call_@return The current leader gateway_@throws LeaderRetrievalException If the actor gateway could not be retrieved or the timeout has been exceeded;public static ActorGateway retrieveLeaderGateway(_			LeaderRetrievalService leaderRetrievalService,_			ActorSystem actorSystem,_			FiniteDuration timeout)_		throws LeaderRetrievalException {_		LeaderGatewayListener listener = new LeaderGatewayListener(actorSystem, timeout)___		try {_			leaderRetrievalService.start(listener)___			Future<ActorGateway> actorGatewayFuture = listener.getActorGatewayFuture()___			return Await.result(actorGatewayFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader gateway.", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,current,leader,gateway,using,the,given,link,leader,retrieval,service,if,the,current,leader,could,not,be,retrieved,after,the,given,timeout,then,a,link,leader,retrieval,exception,is,thrown,param,leader,retrieval,service,link,leader,retrieval,service,which,is,used,for,the,leader,retrieval,param,actor,system,actor,system,which,is,used,for,the,link,leader,retrieval,listener,implementation,param,timeout,timeout,value,for,the,retrieval,call,return,the,current,leader,gateway,throws,leader,retrieval,exception,if,the,actor,gateway,could,not,be,retrieved,or,the,timeout,has,been,exceeded;public,static,actor,gateway,retrieve,leader,gateway,leader,retrieval,service,leader,retrieval,service,actor,system,actor,system,finite,duration,timeout,throws,leader,retrieval,exception,leader,gateway,listener,listener,new,leader,gateway,listener,actor,system,timeout,try,leader,retrieval,service,start,listener,future,actor,gateway,actor,gateway,future,listener,get,actor,gateway,future,return,await,result,actor,gateway,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,gateway,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static ActorGateway retrieveLeaderGateway( 			LeaderRetrievalService leaderRetrievalService, 			ActorSystem actorSystem, 			FiniteDuration timeout) 		throws LeaderRetrievalException;1517324056;Retrieves the current leader gateway using the given {@link LeaderRetrievalService}. If the_current leader could not be retrieved after the given timeout, then a_{@link LeaderRetrievalException} is thrown.__@param leaderRetrievalService {@link LeaderRetrievalService} which is used for the leader retrieval_@param actorSystem ActorSystem which is used for the {@link LeaderRetrievalListener} implementation_@param timeout Timeout value for the retrieval call_@return The current leader gateway_@throws LeaderRetrievalException If the actor gateway could not be retrieved or the timeout has been exceeded;public static ActorGateway retrieveLeaderGateway(_			LeaderRetrievalService leaderRetrievalService,_			ActorSystem actorSystem,_			FiniteDuration timeout)_		throws LeaderRetrievalException {_		LeaderGatewayListener listener = new LeaderGatewayListener(actorSystem, timeout)___		try {_			leaderRetrievalService.start(listener)___			Future<ActorGateway> actorGatewayFuture = listener.getActorGatewayFuture()___			return Await.result(actorGatewayFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader gateway.", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,current,leader,gateway,using,the,given,link,leader,retrieval,service,if,the,current,leader,could,not,be,retrieved,after,the,given,timeout,then,a,link,leader,retrieval,exception,is,thrown,param,leader,retrieval,service,link,leader,retrieval,service,which,is,used,for,the,leader,retrieval,param,actor,system,actor,system,which,is,used,for,the,link,leader,retrieval,listener,implementation,param,timeout,timeout,value,for,the,retrieval,call,return,the,current,leader,gateway,throws,leader,retrieval,exception,if,the,actor,gateway,could,not,be,retrieved,or,the,timeout,has,been,exceeded;public,static,actor,gateway,retrieve,leader,gateway,leader,retrieval,service,leader,retrieval,service,actor,system,actor,system,finite,duration,timeout,throws,leader,retrieval,exception,leader,gateway,listener,listener,new,leader,gateway,listener,actor,system,timeout,try,leader,retrieval,service,start,listener,future,actor,gateway,actor,gateway,future,listener,get,actor,gateway,future,return,await,result,actor,gateway,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,gateway,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static ActorGateway retrieveLeaderGateway( 			LeaderRetrievalService leaderRetrievalService, 			ActorSystem actorSystem, 			FiniteDuration timeout) 		throws LeaderRetrievalException;1536930103;Retrieves the current leader gateway using the given {@link LeaderRetrievalService}. If the_current leader could not be retrieved after the given timeout, then a_{@link LeaderRetrievalException} is thrown.__@param leaderRetrievalService {@link LeaderRetrievalService} which is used for the leader retrieval_@param actorSystem ActorSystem which is used for the {@link LeaderRetrievalListener} implementation_@param timeout Timeout value for the retrieval call_@return The current leader gateway_@throws LeaderRetrievalException If the actor gateway could not be retrieved or the timeout has been exceeded;public static ActorGateway retrieveLeaderGateway(_			LeaderRetrievalService leaderRetrievalService,_			ActorSystem actorSystem,_			FiniteDuration timeout)_		throws LeaderRetrievalException {_		LeaderGatewayListener listener = new LeaderGatewayListener(actorSystem, timeout)___		try {_			leaderRetrievalService.start(listener)___			Future<ActorGateway> actorGatewayFuture = listener.getActorGatewayFuture()___			return Await.result(actorGatewayFuture, timeout)__		} catch (Exception e) {_			throw new LeaderRetrievalException("Could not retrieve the leader gateway.", e)__		} finally {_			try {_				leaderRetrievalService.stop()__			} catch (Exception fe) {_				LOG.warn("Could not stop the leader retrieval service.", fe)__			}_		}_	};retrieves,the,current,leader,gateway,using,the,given,link,leader,retrieval,service,if,the,current,leader,could,not,be,retrieved,after,the,given,timeout,then,a,link,leader,retrieval,exception,is,thrown,param,leader,retrieval,service,link,leader,retrieval,service,which,is,used,for,the,leader,retrieval,param,actor,system,actor,system,which,is,used,for,the,link,leader,retrieval,listener,implementation,param,timeout,timeout,value,for,the,retrieval,call,return,the,current,leader,gateway,throws,leader,retrieval,exception,if,the,actor,gateway,could,not,be,retrieved,or,the,timeout,has,been,exceeded;public,static,actor,gateway,retrieve,leader,gateway,leader,retrieval,service,leader,retrieval,service,actor,system,actor,system,finite,duration,timeout,throws,leader,retrieval,exception,leader,gateway,listener,listener,new,leader,gateway,listener,actor,system,timeout,try,leader,retrieval,service,start,listener,future,actor,gateway,actor,gateway,future,listener,get,actor,gateway,future,return,await,result,actor,gateway,future,timeout,catch,exception,e,throw,new,leader,retrieval,exception,could,not,retrieve,the,leader,gateway,e,finally,try,leader,retrieval,service,stop,catch,exception,fe,log,warn,could,not,stop,the,leader,retrieval,service,fe
LeaderRetrievalUtils -> public static UUID retrieveLeaderSessionId( 			LeaderRetrievalService leaderRetrievalService, 			FiniteDuration timeout) throws LeaderRetrievalException;1493975167;Retrieves the current leader session id of the component identified by the given leader_retrieval service.__@param leaderRetrievalService Leader retrieval service to be used for the leader retrieval_@param timeout Timeout for the leader retrieval_@return The leader session id of the retrieved leader_@throws LeaderRetrievalException if the leader retrieval operation fails (including a timeout);public static UUID retrieveLeaderSessionId(_			LeaderRetrievalService leaderRetrievalService,_			FiniteDuration timeout) throws LeaderRetrievalException {_		return retrieveLeaderConnectionInfo(leaderRetrievalService, timeout).getLeaderSessionID()__	};retrieves,the,current,leader,session,id,of,the,component,identified,by,the,given,leader,retrieval,service,param,leader,retrieval,service,leader,retrieval,service,to,be,used,for,the,leader,retrieval,param,timeout,timeout,for,the,leader,retrieval,return,the,leader,session,id,of,the,retrieved,leader,throws,leader,retrieval,exception,if,the,leader,retrieval,operation,fails,including,a,timeout;public,static,uuid,retrieve,leader,session,id,leader,retrieval,service,leader,retrieval,service,finite,duration,timeout,throws,leader,retrieval,exception,return,retrieve,leader,connection,info,leader,retrieval,service,timeout,get,leader,session,id
LeaderRetrievalUtils -> public static UUID retrieveLeaderSessionId( 			LeaderRetrievalService leaderRetrievalService, 			FiniteDuration timeout) throws LeaderRetrievalException;1495441965;Retrieves the current leader session id of the component identified by the given leader_retrieval service.__@param leaderRetrievalService Leader retrieval service to be used for the leader retrieval_@param timeout Timeout for the leader retrieval_@return The leader session id of the retrieved leader_@throws LeaderRetrievalException if the leader retrieval operation fails (including a timeout);public static UUID retrieveLeaderSessionId(_			LeaderRetrievalService leaderRetrievalService,_			FiniteDuration timeout) throws LeaderRetrievalException {_		return retrieveLeaderConnectionInfo(leaderRetrievalService, timeout).getLeaderSessionID()__	};retrieves,the,current,leader,session,id,of,the,component,identified,by,the,given,leader,retrieval,service,param,leader,retrieval,service,leader,retrieval,service,to,be,used,for,the,leader,retrieval,param,timeout,timeout,for,the,leader,retrieval,return,the,leader,session,id,of,the,retrieved,leader,throws,leader,retrieval,exception,if,the,leader,retrieval,operation,fails,including,a,timeout;public,static,uuid,retrieve,leader,session,id,leader,retrieval,service,leader,retrieval,service,finite,duration,timeout,throws,leader,retrieval,exception,return,retrieve,leader,connection,info,leader,retrieval,service,timeout,get,leader,session,id
LeaderRetrievalUtils -> public static UUID retrieveLeaderSessionId( 			LeaderRetrievalService leaderRetrievalService, 			FiniteDuration timeout) throws LeaderRetrievalException;1495441965;Retrieves the current leader session id of the component identified by the given leader_retrieval service.__@param leaderRetrievalService Leader retrieval service to be used for the leader retrieval_@param timeout Timeout for the leader retrieval_@return The leader session id of the retrieved leader_@throws LeaderRetrievalException if the leader retrieval operation fails (including a timeout);public static UUID retrieveLeaderSessionId(_			LeaderRetrievalService leaderRetrievalService,_			FiniteDuration timeout) throws LeaderRetrievalException {_		return retrieveLeaderConnectionInfo(leaderRetrievalService, timeout).getLeaderSessionID()__	};retrieves,the,current,leader,session,id,of,the,component,identified,by,the,given,leader,retrieval,service,param,leader,retrieval,service,leader,retrieval,service,to,be,used,for,the,leader,retrieval,param,timeout,timeout,for,the,leader,retrieval,return,the,leader,session,id,of,the,retrieved,leader,throws,leader,retrieval,exception,if,the,leader,retrieval,operation,fails,including,a,timeout;public,static,uuid,retrieve,leader,session,id,leader,retrieval,service,leader,retrieval,service,finite,duration,timeout,throws,leader,retrieval,exception,return,retrieve,leader,connection,info,leader,retrieval,service,timeout,get,leader,session,id
LeaderRetrievalUtils -> public static UUID retrieveLeaderSessionId( 			LeaderRetrievalService leaderRetrievalService, 			FiniteDuration timeout) throws LeaderRetrievalException;1517237717;Retrieves the current leader session id of the component identified by the given leader_retrieval service.__@param leaderRetrievalService Leader retrieval service to be used for the leader retrieval_@param timeout Timeout for the leader retrieval_@return The leader session id of the retrieved leader_@throws LeaderRetrievalException if the leader retrieval operation fails (including a timeout);public static UUID retrieveLeaderSessionId(_			LeaderRetrievalService leaderRetrievalService,_			FiniteDuration timeout) throws LeaderRetrievalException {_		return retrieveLeaderConnectionInfo(leaderRetrievalService, timeout).getLeaderSessionID()__	};retrieves,the,current,leader,session,id,of,the,component,identified,by,the,given,leader,retrieval,service,param,leader,retrieval,service,leader,retrieval,service,to,be,used,for,the,leader,retrieval,param,timeout,timeout,for,the,leader,retrieval,return,the,leader,session,id,of,the,retrieved,leader,throws,leader,retrieval,exception,if,the,leader,retrieval,operation,fails,including,a,timeout;public,static,uuid,retrieve,leader,session,id,leader,retrieval,service,leader,retrieval,service,finite,duration,timeout,throws,leader,retrieval,exception,return,retrieve,leader,connection,info,leader,retrieval,service,timeout,get,leader,session,id
LeaderRetrievalUtils -> public static UUID retrieveLeaderSessionId( 			LeaderRetrievalService leaderRetrievalService, 			FiniteDuration timeout) throws LeaderRetrievalException;1517324056;Retrieves the current leader session id of the component identified by the given leader_retrieval service.__@param leaderRetrievalService Leader retrieval service to be used for the leader retrieval_@param timeout Timeout for the leader retrieval_@return The leader session id of the retrieved leader_@throws LeaderRetrievalException if the leader retrieval operation fails (including a timeout);public static UUID retrieveLeaderSessionId(_			LeaderRetrievalService leaderRetrievalService,_			FiniteDuration timeout) throws LeaderRetrievalException {_		return retrieveLeaderConnectionInfo(leaderRetrievalService, timeout).getLeaderSessionID()__	};retrieves,the,current,leader,session,id,of,the,component,identified,by,the,given,leader,retrieval,service,param,leader,retrieval,service,leader,retrieval,service,to,be,used,for,the,leader,retrieval,param,timeout,timeout,for,the,leader,retrieval,return,the,leader,session,id,of,the,retrieved,leader,throws,leader,retrieval,exception,if,the,leader,retrieval,operation,fails,including,a,timeout;public,static,uuid,retrieve,leader,session,id,leader,retrieval,service,leader,retrieval,service,finite,duration,timeout,throws,leader,retrieval,exception,return,retrieve,leader,connection,info,leader,retrieval,service,timeout,get,leader,session,id
LeaderRetrievalUtils -> public static UUID retrieveLeaderSessionId( 			LeaderRetrievalService leaderRetrievalService, 			FiniteDuration timeout) throws LeaderRetrievalException;1536930103;Retrieves the current leader session id of the component identified by the given leader_retrieval service.__@param leaderRetrievalService Leader retrieval service to be used for the leader retrieval_@param timeout Timeout for the leader retrieval_@return The leader session id of the retrieved leader_@throws LeaderRetrievalException if the leader retrieval operation fails (including a timeout);public static UUID retrieveLeaderSessionId(_			LeaderRetrievalService leaderRetrievalService,_			FiniteDuration timeout) throws LeaderRetrievalException {_		return retrieveLeaderConnectionInfo(leaderRetrievalService, timeout).getLeaderSessionID()__	};retrieves,the,current,leader,session,id,of,the,component,identified,by,the,given,leader,retrieval,service,param,leader,retrieval,service,leader,retrieval,service,to,be,used,for,the,leader,retrieval,param,timeout,timeout,for,the,leader,retrieval,return,the,leader,session,id,of,the,retrieved,leader,throws,leader,retrieval,exception,if,the,leader,retrieval,operation,fails,including,a,timeout;public,static,uuid,retrieve,leader,session,id,leader,retrieval,service,leader,retrieval,service,finite,duration,timeout,throws,leader,retrieval,exception,return,retrieve,leader,connection,info,leader,retrieval,service,timeout,get,leader,session,id
LeaderRetrievalUtils -> public static LeaderRetrievalService createLeaderRetrievalService(Configuration configuration) 		throws Exception;1441011751;Creates a {@link LeaderRetrievalService} based on the provided {@link Configuration} object.__@param configuration Configuration containing the settings for the {@link LeaderRetrievalService}_@return The {@link LeaderRetrievalService} specified in the configuration object_@throws Exception;public static LeaderRetrievalService createLeaderRetrievalService(Configuration configuration)_		throws Exception {__		RecoveryMode recoveryMode = RecoveryMode.valueOf(_				configuration.getString(_						ConfigConstants.RECOVERY_MODE,_						ConfigConstants.DEFAULT_RECOVERY_MODE).toUpperCase())___		switch (recoveryMode) {_			case STANDALONE:_				return StandaloneUtils.createLeaderRetrievalService(configuration)__			case ZOOKEEPER:_				return ZooKeeperUtils.createLeaderRetrievalService(configuration)__			default:_				throw new Exception("Recovery mode " + recoveryMode + " is not supported.")__		}_	};creates,a,link,leader,retrieval,service,based,on,the,provided,link,configuration,object,param,configuration,configuration,containing,the,settings,for,the,link,leader,retrieval,service,return,the,link,leader,retrieval,service,specified,in,the,configuration,object,throws,exception;public,static,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,recovery,mode,recovery,mode,recovery,mode,value,of,configuration,get,string,config,constants,config,constants,to,upper,case,switch,recovery,mode,case,standalone,return,standalone,utils,create,leader,retrieval,service,configuration,case,zookeeper,return,zoo,keeper,utils,create,leader,retrieval,service,configuration,default,throw,new,exception,recovery,mode,recovery,mode,is,not,supported
LeaderRetrievalUtils -> public static LeaderRetrievalService createLeaderRetrievalService(Configuration configuration) 		throws Exception;1443564120;Creates a {@link LeaderRetrievalService} based on the provided {@link Configuration} object.__@param configuration Configuration containing the settings for the {@link LeaderRetrievalService}_@return The {@link LeaderRetrievalService} specified in the configuration object_@throws Exception;public static LeaderRetrievalService createLeaderRetrievalService(Configuration configuration)_		throws Exception {__		RecoveryMode recoveryMode = RecoveryMode.valueOf(_				configuration.getString(_						ConfigConstants.RECOVERY_MODE,_						ConfigConstants.DEFAULT_RECOVERY_MODE).toUpperCase())___		switch (recoveryMode) {_			case STANDALONE:_				return StandaloneUtils.createLeaderRetrievalService(configuration)__			case ZOOKEEPER:_				return ZooKeeperUtils.createLeaderRetrievalService(configuration)__			default:_				throw new Exception("Recovery mode " + recoveryMode + " is not supported.")__		}_	};creates,a,link,leader,retrieval,service,based,on,the,provided,link,configuration,object,param,configuration,configuration,containing,the,settings,for,the,link,leader,retrieval,service,return,the,link,leader,retrieval,service,specified,in,the,configuration,object,throws,exception;public,static,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,recovery,mode,recovery,mode,recovery,mode,value,of,configuration,get,string,config,constants,config,constants,to,upper,case,switch,recovery,mode,case,standalone,return,standalone,utils,create,leader,retrieval,service,configuration,case,zookeeper,return,zoo,keeper,utils,create,leader,retrieval,service,configuration,default,throw,new,exception,recovery,mode,recovery,mode,is,not,supported
LeaderRetrievalUtils -> public static LeaderRetrievalService createLeaderRetrievalService(Configuration configuration) 		throws Exception;1443682795;Creates a {@link LeaderRetrievalService} based on the provided {@link Configuration} object.__@param configuration Configuration containing the settings for the {@link LeaderRetrievalService}_@return The {@link LeaderRetrievalService} specified in the configuration object_@throws Exception;public static LeaderRetrievalService createLeaderRetrievalService(Configuration configuration)_		throws Exception {__		RecoveryMode recoveryMode = RecoveryMode.valueOf(_				configuration.getString(_						ConfigConstants.RECOVERY_MODE,_						ConfigConstants.DEFAULT_RECOVERY_MODE).toUpperCase())___		switch (recoveryMode) {_			case STANDALONE:_				return StandaloneUtils.createLeaderRetrievalService(configuration)__			case ZOOKEEPER:_				return ZooKeeperUtils.createLeaderRetrievalService(configuration)__			default:_				throw new Exception("Recovery mode " + recoveryMode + " is not supported.")__		}_	};creates,a,link,leader,retrieval,service,based,on,the,provided,link,configuration,object,param,configuration,configuration,containing,the,settings,for,the,link,leader,retrieval,service,return,the,link,leader,retrieval,service,specified,in,the,configuration,object,throws,exception;public,static,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,recovery,mode,recovery,mode,recovery,mode,value,of,configuration,get,string,config,constants,config,constants,to,upper,case,switch,recovery,mode,case,standalone,return,standalone,utils,create,leader,retrieval,service,configuration,case,zookeeper,return,zoo,keeper,utils,create,leader,retrieval,service,configuration,default,throw,new,exception,recovery,mode,recovery,mode,is,not,supported
LeaderRetrievalUtils -> public static LeaderRetrievalService createLeaderRetrievalService(Configuration configuration) 		throws Exception;1444307021;Creates a {@link LeaderRetrievalService} based on the provided {@link Configuration} object.__@param configuration Configuration containing the settings for the {@link LeaderRetrievalService}_@return The {@link LeaderRetrievalService} specified in the configuration object_@throws Exception;public static LeaderRetrievalService createLeaderRetrievalService(Configuration configuration)_		throws Exception {__		RecoveryMode recoveryMode = RecoveryMode.valueOf(_				configuration.getString(_						ConfigConstants.RECOVERY_MODE,_						ConfigConstants.DEFAULT_RECOVERY_MODE).toUpperCase())___		switch (recoveryMode) {_			case STANDALONE:_				return StandaloneUtils.createLeaderRetrievalService(configuration)__			case ZOOKEEPER:_				return ZooKeeperUtils.createLeaderRetrievalService(configuration)__			default:_				throw new Exception("Recovery mode " + recoveryMode + " is not supported.")__		}_	};creates,a,link,leader,retrieval,service,based,on,the,provided,link,configuration,object,param,configuration,configuration,containing,the,settings,for,the,link,leader,retrieval,service,return,the,link,leader,retrieval,service,specified,in,the,configuration,object,throws,exception;public,static,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,recovery,mode,recovery,mode,recovery,mode,value,of,configuration,get,string,config,constants,config,constants,to,upper,case,switch,recovery,mode,case,standalone,return,standalone,utils,create,leader,retrieval,service,configuration,case,zookeeper,return,zoo,keeper,utils,create,leader,retrieval,service,configuration,default,throw,new,exception,recovery,mode,recovery,mode,is,not,supported
LeaderRetrievalUtils -> public static LeaderRetrievalService createLeaderRetrievalService(Configuration configuration) 		throws Exception;1459248687;Creates a {@link LeaderRetrievalService} based on the provided {@link Configuration} object.__@param configuration Configuration containing the settings for the {@link LeaderRetrievalService}_@return The {@link LeaderRetrievalService} specified in the configuration object_@throws Exception;public static LeaderRetrievalService createLeaderRetrievalService(Configuration configuration)_		throws Exception {__		RecoveryMode recoveryMode = getRecoveryMode(configuration)___		switch (recoveryMode) {_			case STANDALONE:_				return StandaloneUtils.createLeaderRetrievalService(configuration)__			case ZOOKEEPER:_				return ZooKeeperUtils.createLeaderRetrievalService(configuration)__			default:_				throw new Exception("Recovery mode " + recoveryMode + " is not supported.")__		}_	};creates,a,link,leader,retrieval,service,based,on,the,provided,link,configuration,object,param,configuration,configuration,containing,the,settings,for,the,link,leader,retrieval,service,return,the,link,leader,retrieval,service,specified,in,the,configuration,object,throws,exception;public,static,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,recovery,mode,recovery,mode,get,recovery,mode,configuration,switch,recovery,mode,case,standalone,return,standalone,utils,create,leader,retrieval,service,configuration,case,zookeeper,return,zoo,keeper,utils,create,leader,retrieval,service,configuration,default,throw,new,exception,recovery,mode,recovery,mode,is,not,supported
LeaderRetrievalUtils -> public static LeaderRetrievalService createLeaderRetrievalService(Configuration configuration) 		throws Exception;1472033364;Creates a {@link LeaderRetrievalService} based on the provided {@link Configuration} object.__@param configuration Configuration containing the settings for the {@link LeaderRetrievalService}_@return The {@link LeaderRetrievalService} specified in the configuration object_@throws Exception;public static LeaderRetrievalService createLeaderRetrievalService(Configuration configuration)_		throws Exception {__		HighAvailabilityMode highAvailabilityMode = getRecoveryMode(configuration)___		switch (highAvailabilityMode) {_			case NONE:_				return StandaloneUtils.createLeaderRetrievalService(configuration)__			case ZOOKEEPER:_				return ZooKeeperUtils.createLeaderRetrievalService(configuration)__			default:_				throw new Exception("Recovery mode " + highAvailabilityMode + " is not supported.")__		}_	};creates,a,link,leader,retrieval,service,based,on,the,provided,link,configuration,object,param,configuration,configuration,containing,the,settings,for,the,link,leader,retrieval,service,return,the,link,leader,retrieval,service,specified,in,the,configuration,object,throws,exception;public,static,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,high,availability,mode,high,availability,mode,get,recovery,mode,configuration,switch,high,availability,mode,case,none,return,standalone,utils,create,leader,retrieval,service,configuration,case,zookeeper,return,zoo,keeper,utils,create,leader,retrieval,service,configuration,default,throw,new,exception,recovery,mode,high,availability,mode,is,not,supported
LeaderRetrievalUtils -> public static LeaderRetrievalService createLeaderRetrievalService(Configuration configuration) 		throws Exception;1472033371;Creates a {@link LeaderRetrievalService} based on the provided {@link Configuration} object.__@param configuration Configuration containing the settings for the {@link LeaderRetrievalService}_@return The {@link LeaderRetrievalService} specified in the configuration object_@throws Exception;public static LeaderRetrievalService createLeaderRetrievalService(Configuration configuration)_		throws Exception {__		HighAvailabilityMode highAvailabilityMode = getRecoveryMode(configuration)___		switch (highAvailabilityMode) {_			case NONE:_				return StandaloneUtils.createLeaderRetrievalService(configuration)__			case ZOOKEEPER:_				return ZooKeeperUtils.createLeaderRetrievalService(configuration)__			default:_				throw new Exception("Recovery mode " + highAvailabilityMode + " is not supported.")__		}_	};creates,a,link,leader,retrieval,service,based,on,the,provided,link,configuration,object,param,configuration,configuration,containing,the,settings,for,the,link,leader,retrieval,service,return,the,link,leader,retrieval,service,specified,in,the,configuration,object,throws,exception;public,static,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,high,availability,mode,high,availability,mode,get,recovery,mode,configuration,switch,high,availability,mode,case,none,return,standalone,utils,create,leader,retrieval,service,configuration,case,zookeeper,return,zoo,keeper,utils,create,leader,retrieval,service,configuration,default,throw,new,exception,recovery,mode,high,availability,mode,is,not,supported
LeaderRetrievalUtils -> public static LeaderRetrievalService createLeaderRetrievalService(Configuration configuration) 		throws Exception;1481907119;Creates a {@link LeaderRetrievalService} based on the provided {@link Configuration} object.__@param configuration Configuration containing the settings for the {@link LeaderRetrievalService}_@return The {@link LeaderRetrievalService} specified in the configuration object_@throws Exception;public static LeaderRetrievalService createLeaderRetrievalService(Configuration configuration)_		throws Exception {_		return createLeaderRetrievalService(configuration, false)__	};creates,a,link,leader,retrieval,service,based,on,the,provided,link,configuration,object,param,configuration,configuration,containing,the,settings,for,the,link,leader,retrieval,service,return,the,link,leader,retrieval,service,specified,in,the,configuration,object,throws,exception;public,static,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,return,create,leader,retrieval,service,configuration,false
LeaderRetrievalUtils -> public static LeaderRetrievalService createLeaderRetrievalService(Configuration configuration) 		throws Exception;1482522860;Creates a {@link LeaderRetrievalService} based on the provided {@link Configuration} object.__@param configuration Configuration containing the settings for the {@link LeaderRetrievalService}_@return The {@link LeaderRetrievalService} specified in the configuration object_@throws Exception;public static LeaderRetrievalService createLeaderRetrievalService(Configuration configuration)_		throws Exception {_		return createLeaderRetrievalService(configuration, false)__	};creates,a,link,leader,retrieval,service,based,on,the,provided,link,configuration,object,param,configuration,configuration,containing,the,settings,for,the,link,leader,retrieval,service,return,the,link,leader,retrieval,service,specified,in,the,configuration,object,throws,exception;public,static,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,return,create,leader,retrieval,service,configuration,false
