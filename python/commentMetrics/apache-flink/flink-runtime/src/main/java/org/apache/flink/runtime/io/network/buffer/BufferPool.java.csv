commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Destroys this buffer pool.  *  * <p>If not all buffers are available, they are recycled lazily as soon as they are recycled.  */ ;/**  * Destroys this buffer pool.  *  * <p>If not all buffers are available, they are recycled lazily as soon as they are recycled.  */ void lazyDestroy().
true;;0;2;/**  * Checks whether this buffer pool has been destroyed.  */ ;/**  * Checks whether this buffer pool has been destroyed.  */ @Override boolean isDestroyed().
true;;0;1;/**  * Returns the number of guaranteed (minimum number of) memory segments of this buffer pool.  */ ;/**  * Returns the number of guaranteed (minimum number of) memory segments of this buffer pool.  */ int getNumberOfRequiredMemorySegments().
true;;0;1;/**  * Returns the maximum number of memory segments this buffer pool should use.  *  * @return maximum number of memory segments to use or <tt>-1</tt> if unlimited  */ ;/**  * Returns the maximum number of memory segments this buffer pool should use.  *  * @return maximum number of memory segments to use or <tt>-1</tt> if unlimited  */ int getMaxNumberOfMemorySegments().
true;;0;1;/**  * Returns the current size of this buffer pool.  *  * <p>The size of the buffer pool can change dynamically at runtime.  */ ;/**  * Returns the current size of this buffer pool.  *  * <p>The size of the buffer pool can change dynamically at runtime.  */ int getNumBuffers().
true;;1;1;/**  * Sets the current size of this buffer pool.  *  * <p>The size needs to be greater or equal to the guaranteed number of memory segments.  */ ;/**  * Sets the current size of this buffer pool.  *  * <p>The size needs to be greater or equal to the guaranteed number of memory segments.  */ void setNumBuffers(int numBuffers) throws IOException.
true;;0;1;/**  * Returns the number memory segments, which are currently held by this buffer pool.  */ ;/**  * Returns the number memory segments, which are currently held by this buffer pool.  */ int getNumberOfAvailableMemorySegments().
true;;0;1;/**  * Returns the number of used buffers of this buffer pool.  */ ;/**  * Returns the number of used buffers of this buffer pool.  */ int bestEffortGetNumOfUsedBuffers().
