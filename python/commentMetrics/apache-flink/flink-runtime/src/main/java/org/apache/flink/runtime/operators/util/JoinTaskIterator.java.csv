# id;timestamp;commentText;codeText;commentWords;codeWords
JoinTaskIterator -> boolean callWithNextKey(GenericJoiner<V1, V2, O> matchFunction, Collector<O> collector) throws Exception_;1405024514;Moves the internal pointer to the next key that both inputs share. It calls the match stub with the_cross product of all values that share the same key.__@param matchFunction The match stub containing the match function which is called with the keys._@param collector The collector to pass the match function._@return True, if a next key exists, false if no more keys exist._@throws Exception Exceptions from the user code are forwarded.;boolean callWithNextKey(GenericJoiner<V1, V2, O> matchFunction, Collector<O> collector) throws Exception_;moves,the,internal,pointer,to,the,next,key,that,both,inputs,share,it,calls,the,match,stub,with,the,cross,product,of,all,values,that,share,the,same,key,param,match,function,the,match,stub,containing,the,match,function,which,is,called,with,the,keys,param,collector,the,collector,to,pass,the,match,function,return,true,if,a,next,key,exists,false,if,no,more,keys,exist,throws,exception,exceptions,from,the,user,code,are,forwarded;boolean,call,with,next,key,generic,joiner,v1,v2,o,match,function,collector,o,collector,throws,exception
JoinTaskIterator -> boolean callWithNextKey(GenericJoiner<V1, V2, O> matchFunction, Collector<O> collector) throws Exception_;1405090423;Moves the internal pointer to the next key that both inputs share. It calls the match stub with the_cross product of all values that share the same key.__@param matchFunction The match stub containing the match function which is called with the keys._@param collector The collector to pass the match function._@return True, if a next key exists, false if no more keys exist._@throws Exception Exceptions from the user code are forwarded.;boolean callWithNextKey(GenericJoiner<V1, V2, O> matchFunction, Collector<O> collector) throws Exception_;moves,the,internal,pointer,to,the,next,key,that,both,inputs,share,it,calls,the,match,stub,with,the,cross,product,of,all,values,that,share,the,same,key,param,match,function,the,match,stub,containing,the,match,function,which,is,called,with,the,keys,param,collector,the,collector,to,pass,the,match,function,return,true,if,a,next,key,exists,false,if,no,more,keys,exist,throws,exception,exceptions,from,the,user,code,are,forwarded;boolean,call,with,next,key,generic,joiner,v1,v2,o,match,function,collector,o,collector,throws,exception
JoinTaskIterator -> void open() throws IOException, MemoryAllocationException, InterruptedException_;1405024514;General-purpose open method. Initializes the internal strategy (for example triggers the_sorting of the inputs or starts building hash tables).__@throws IOException Thrown, if an I/O error occurred while preparing the data. An example is a failing_external sort._@throws MemoryAllocationException Thrown, if the internal strategy could not allocate the memory it needs._@throws InterruptedException Thrown, if the thread was interrupted during the initialization process.;void open() throws IOException, MemoryAllocationException, InterruptedException_;general,purpose,open,method,initializes,the,internal,strategy,for,example,triggers,the,sorting,of,the,inputs,or,starts,building,hash,tables,throws,ioexception,thrown,if,an,i,o,error,occurred,while,preparing,the,data,an,example,is,a,failing,external,sort,throws,memory,allocation,exception,thrown,if,the,internal,strategy,could,not,allocate,the,memory,it,needs,throws,interrupted,exception,thrown,if,the,thread,was,interrupted,during,the,initialization,process;void,open,throws,ioexception,memory,allocation,exception,interrupted,exception
JoinTaskIterator -> void open() throws IOException, MemoryAllocationException, InterruptedException_;1405090423;General-purpose open method. Initializes the internal strategy (for example triggers the_sorting of the inputs or starts building hash tables).__@throws IOException Thrown, if an I/O error occurred while preparing the data. An example is a failing_external sort._@throws MemoryAllocationException Thrown, if the internal strategy could not allocate the memory it needs._@throws InterruptedException Thrown, if the thread was interrupted during the initialization process.;void open() throws IOException, MemoryAllocationException, InterruptedException_;general,purpose,open,method,initializes,the,internal,strategy,for,example,triggers,the,sorting,of,the,inputs,or,starts,building,hash,tables,throws,ioexception,thrown,if,an,i,o,error,occurred,while,preparing,the,data,an,example,is,a,failing,external,sort,throws,memory,allocation,exception,thrown,if,the,internal,strategy,could,not,allocate,the,memory,it,needs,throws,interrupted,exception,thrown,if,the,thread,was,interrupted,during,the,initialization,process;void,open,throws,ioexception,memory,allocation,exception,interrupted,exception
JoinTaskIterator -> void open() throws IOException, MemoryAllocationException, InterruptedException_;1406821655;General-purpose open method. Initializes the internal strategy (for example triggers the_sorting of the inputs or starts building hash tables).__@throws IOException Thrown, if an I/O error occurred while preparing the data. An example is a failing_external sort._@throws MemoryAllocationException Thrown, if the internal strategy could not allocate the memory it needs._@throws InterruptedException Thrown, if the thread was interrupted during the initialization process.;void open() throws IOException, MemoryAllocationException, InterruptedException_;general,purpose,open,method,initializes,the,internal,strategy,for,example,triggers,the,sorting,of,the,inputs,or,starts,building,hash,tables,throws,ioexception,thrown,if,an,i,o,error,occurred,while,preparing,the,data,an,example,is,a,failing,external,sort,throws,memory,allocation,exception,thrown,if,the,internal,strategy,could,not,allocate,the,memory,it,needs,throws,interrupted,exception,thrown,if,the,thread,was,interrupted,during,the,initialization,process;void,open,throws,ioexception,memory,allocation,exception,interrupted,exception
JoinTaskIterator -> void open() throws IOException, MemoryAllocationException, InterruptedException_;1411473593;General-purpose open method. Initializes the internal strategy (for example triggers the_sorting of the inputs or starts building hash tables).__@throws IOException Thrown, if an I/O error occurred while preparing the data. An example is a failing_external sort._@throws MemoryAllocationException Thrown, if the internal strategy could not allocate the memory it needs._@throws InterruptedException Thrown, if the thread was interrupted during the initialization process.;void open() throws IOException, MemoryAllocationException, InterruptedException_;general,purpose,open,method,initializes,the,internal,strategy,for,example,triggers,the,sorting,of,the,inputs,or,starts,building,hash,tables,throws,ioexception,thrown,if,an,i,o,error,occurred,while,preparing,the,data,an,example,is,a,failing,external,sort,throws,memory,allocation,exception,thrown,if,the,internal,strategy,could,not,allocate,the,memory,it,needs,throws,interrupted,exception,thrown,if,the,thread,was,interrupted,during,the,initialization,process;void,open,throws,ioexception,memory,allocation,exception,interrupted,exception
JoinTaskIterator -> void open() throws IOException, MemoryAllocationException, InterruptedException_;1441738685;General-purpose open method. Initializes the internal strategy (for example triggers the_sorting of the inputs or starts building hash tables).__@throws IOException Thrown, if an I/O error occurred while preparing the data. An example is a failing_external sort._@throws MemoryAllocationException Thrown, if the internal strategy could not allocate the memory it needs._@throws InterruptedException Thrown, if the thread was interrupted during the initialization process.;void open() throws IOException, MemoryAllocationException, InterruptedException_;general,purpose,open,method,initializes,the,internal,strategy,for,example,triggers,the,sorting,of,the,inputs,or,starts,building,hash,tables,throws,ioexception,thrown,if,an,i,o,error,occurred,while,preparing,the,data,an,example,is,a,failing,external,sort,throws,memory,allocation,exception,thrown,if,the,internal,strategy,could,not,allocate,the,memory,it,needs,throws,interrupted,exception,thrown,if,the,thread,was,interrupted,during,the,initialization,process;void,open,throws,ioexception,memory,allocation,exception,interrupted,exception
JoinTaskIterator -> void close()_;1405024514;General-purpose close method. Works after the principle of best effort. The internal structures are_released, but errors that occur on the way are not reported.;void close()_;general,purpose,close,method,works,after,the,principle,of,best,effort,the,internal,structures,are,released,but,errors,that,occur,on,the,way,are,not,reported;void,close
JoinTaskIterator -> void close()_;1405090423;General-purpose close method. Works after the principle of best effort. The internal structures are_released, but errors that occur on the way are not reported.;void close()_;general,purpose,close,method,works,after,the,principle,of,best,effort,the,internal,structures,are,released,but,errors,that,occur,on,the,way,are,not,reported;void,close
JoinTaskIterator -> void close()_;1406821655;General-purpose close method. Works after the principle of best effort. The internal structures are_released, but errors that occur on the way are not reported.;void close()_;general,purpose,close,method,works,after,the,principle,of,best,effort,the,internal,structures,are,released,but,errors,that,occur,on,the,way,are,not,reported;void,close
JoinTaskIterator -> void close()_;1411473593;General-purpose close method. Works after the principle of best effort. The internal structures are_released, but errors that occur on the way are not reported.;void close()_;general,purpose,close,method,works,after,the,principle,of,best,effort,the,internal,structures,are,released,but,errors,that,occur,on,the,way,are,not,reported;void,close
JoinTaskIterator -> void close()_;1441738685;General-purpose close method. Works after the principle of best effort. The internal structures are_released, but errors that occur on the way are not reported.;void close()_;general,purpose,close,method,works,after,the,principle,of,best,effort,the,internal,structures,are,released,but,errors,that,occur,on,the,way,are,not,reported;void,close
JoinTaskIterator -> void abort()_;1405024514;Aborts the matching process. This extra abort method is supplied, because a significant time may pass while_calling the match stub with the cross product of all values that share the same key. A call to this abort_method signals an interrupt to that procedure.;void abort()_;aborts,the,matching,process,this,extra,abort,method,is,supplied,because,a,significant,time,may,pass,while,calling,the,match,stub,with,the,cross,product,of,all,values,that,share,the,same,key,a,call,to,this,abort,method,signals,an,interrupt,to,that,procedure;void,abort
JoinTaskIterator -> void abort()_;1405090423;Aborts the matching process. This extra abort method is supplied, because a significant time may pass while_calling the match stub with the cross product of all values that share the same key. A call to this abort_method signals an interrupt to that procedure.;void abort()_;aborts,the,matching,process,this,extra,abort,method,is,supplied,because,a,significant,time,may,pass,while,calling,the,match,stub,with,the,cross,product,of,all,values,that,share,the,same,key,a,call,to,this,abort,method,signals,an,interrupt,to,that,procedure;void,abort
JoinTaskIterator -> void abort()_;1406821655;Aborts the matching process. This extra abort method is supplied, because a significant time may pass while_calling the match stub with the cross product of all values that share the same key. A call to this abort_method signals an interrupt to that procedure.;void abort()_;aborts,the,matching,process,this,extra,abort,method,is,supplied,because,a,significant,time,may,pass,while,calling,the,match,stub,with,the,cross,product,of,all,values,that,share,the,same,key,a,call,to,this,abort,method,signals,an,interrupt,to,that,procedure;void,abort
JoinTaskIterator -> void abort()_;1411473593;Aborts the matching process. This extra abort method is supplied, because a significant time may pass while_calling the match stub with the cross product of all values that share the same key. A call to this abort_method signals an interrupt to that procedure.;void abort()_;aborts,the,matching,process,this,extra,abort,method,is,supplied,because,a,significant,time,may,pass,while,calling,the,match,stub,with,the,cross,product,of,all,values,that,share,the,same,key,a,call,to,this,abort,method,signals,an,interrupt,to,that,procedure;void,abort
JoinTaskIterator -> void abort()_;1441738685;Aborts the matching process. This extra abort method is supplied, because a significant time may pass while_calling the match stub with the cross product of all values that share the same key. A call to this abort_method signals an interrupt to that procedure.;void abort()_;aborts,the,matching,process,this,extra,abort,method,is,supplied,because,a,significant,time,may,pass,while,calling,the,match,stub,with,the,cross,product,of,all,values,that,share,the,same,key,a,call,to,this,abort,method,signals,an,interrupt,to,that,procedure;void,abort
JoinTaskIterator -> boolean callWithNextKey(FlatJoinFunction<V1, V2, O> matchFunction, Collector<O> collector) throws Exception_;1406821655;Moves the internal pointer to the next key that both inputs share. It calls the match stub with the_cross product of all values that share the same key.__@param matchFunction The match stub containing the match function which is called with the keys._@param collector The collector to pass the match function._@return True, if a next key exists, false if no more keys exist._@throws Exception Exceptions from the user code are forwarded.;boolean callWithNextKey(FlatJoinFunction<V1, V2, O> matchFunction, Collector<O> collector) throws Exception_;moves,the,internal,pointer,to,the,next,key,that,both,inputs,share,it,calls,the,match,stub,with,the,cross,product,of,all,values,that,share,the,same,key,param,match,function,the,match,stub,containing,the,match,function,which,is,called,with,the,keys,param,collector,the,collector,to,pass,the,match,function,return,true,if,a,next,key,exists,false,if,no,more,keys,exist,throws,exception,exceptions,from,the,user,code,are,forwarded;boolean,call,with,next,key,flat,join,function,v1,v2,o,match,function,collector,o,collector,throws,exception
JoinTaskIterator -> boolean callWithNextKey(FlatJoinFunction<V1, V2, O> matchFunction, Collector<O> collector) throws Exception_;1411473593;Moves the internal pointer to the next key that both inputs share. It calls the match stub with the_cross product of all values that share the same key.__@param matchFunction The match stub containing the match function which is called with the keys._@param collector The collector to pass the match function._@return True, if a next key exists, false if no more keys exist._@throws Exception Exceptions from the user code are forwarded.;boolean callWithNextKey(FlatJoinFunction<V1, V2, O> matchFunction, Collector<O> collector) throws Exception_;moves,the,internal,pointer,to,the,next,key,that,both,inputs,share,it,calls,the,match,stub,with,the,cross,product,of,all,values,that,share,the,same,key,param,match,function,the,match,stub,containing,the,match,function,which,is,called,with,the,keys,param,collector,the,collector,to,pass,the,match,function,return,true,if,a,next,key,exists,false,if,no,more,keys,exist,throws,exception,exceptions,from,the,user,code,are,forwarded;boolean,call,with,next,key,flat,join,function,v1,v2,o,match,function,collector,o,collector,throws,exception
JoinTaskIterator -> boolean callWithNextKey(FlatJoinFunction<V1, V2, O> matchFunction, Collector<O> collector) throws Exception_;1441738685;Moves the internal pointer to the next key that both inputs share. It calls the match stub with the_cross product of all values that share the same key.__@param matchFunction The match stub containing the match function which is called with the keys._@param collector The collector to pass the match function._@return True, if a next key exists, false if no more keys exist._@throws Exception Exceptions from the user code are forwarded.;boolean callWithNextKey(FlatJoinFunction<V1, V2, O> matchFunction, Collector<O> collector) throws Exception_;moves,the,internal,pointer,to,the,next,key,that,both,inputs,share,it,calls,the,match,stub,with,the,cross,product,of,all,values,that,share,the,same,key,param,match,function,the,match,stub,containing,the,match,function,which,is,called,with,the,keys,param,collector,the,collector,to,pass,the,match,function,return,true,if,a,next,key,exists,false,if,no,more,keys,exist,throws,exception,exceptions,from,the,user,code,are,forwarded;boolean,call,with,next,key,flat,join,function,v1,v2,o,match,function,collector,o,collector,throws,exception
