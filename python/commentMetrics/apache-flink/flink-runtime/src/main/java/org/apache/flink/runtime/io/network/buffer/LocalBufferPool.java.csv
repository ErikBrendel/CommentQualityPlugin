# id;timestamp;commentText;codeText;commentWords;codeWords
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments);1489060856;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal number of_network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments) {_		this.networkBufferPool = networkBufferPool__		this.numberOfRequiredMemorySegments = numberOfRequiredMemorySegments__		this.currentPoolSize = numberOfRequiredMemorySegments__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,this,network,buffer,pool,network,buffer,pool,this,number,of,required,memory,segments,number,of,required,memory,segments,this,current,pool,size,number,of,required,memory,segments
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments);1489149058;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal number of_network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments) {_		this(networkBufferPool, numberOfRequiredMemorySegments, Integer.MAX_VALUE)__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,this,network,buffer,pool,number,of,required,memory,segments,integer
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments);1489149058;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal number of_network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments) {_		this(networkBufferPool, numberOfRequiredMemorySegments, Integer.MAX_VALUE)__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,this,network,buffer,pool,number,of,required,memory,segments,integer
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments);1507647200;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal number of_network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments) {_		this(networkBufferPool, numberOfRequiredMemorySegments, Integer.MAX_VALUE)__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,this,network,buffer,pool,number,of,required,memory,segments,integer
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments);1515408360;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal number of_network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments) {_		this(networkBufferPool, numberOfRequiredMemorySegments, Integer.MAX_VALUE)__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,this,network,buffer,pool,number,of,required,memory,segments,integer
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments);1516285456;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal number of_network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments) {_		this(networkBufferPool, numberOfRequiredMemorySegments, Integer.MAX_VALUE)__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,this,network,buffer,pool,number,of,required,memory,segments,integer
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments);1519039274;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal number of_network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments) {_		this(networkBufferPool, numberOfRequiredMemorySegments, Integer.MAX_VALUE)__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,this,network,buffer,pool,number,of,required,memory,segments,integer
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments);1524128166;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal number of_network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments) {_		this(networkBufferPool, numberOfRequiredMemorySegments, Integer.MAX_VALUE)__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,this,network,buffer,pool,number,of,required,memory,segments,integer
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments);1524128179;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal number of_network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments) {_		this(networkBufferPool, numberOfRequiredMemorySegments, Integer.MAX_VALUE)__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,this,network,buffer,pool,number,of,required,memory,segments,integer
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments);1530683488;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal number of_network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments) {_		this(networkBufferPool, numberOfRequiredMemorySegments, Integer.MAX_VALUE)__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,this,network,buffer,pool,number,of,required,memory,segments,integer
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments);1530698180;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal number of_network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments) {_		this(networkBufferPool, numberOfRequiredMemorySegments, Integer.MAX_VALUE)__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,this,network,buffer,pool,number,of,required,memory,segments,integer
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments);1530785917;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal number of_network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments) {_		this(networkBufferPool, numberOfRequiredMemorySegments, Integer.MAX_VALUE)__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,this,network,buffer,pool,number,of,required,memory,segments,integer
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments);1532012479;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal number of_network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments) {_		this(networkBufferPool, numberOfRequiredMemorySegments, Integer.MAX_VALUE)__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,this,network,buffer,pool,number,of,required,memory,segments,integer
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments);1540301084;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal number of_network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments) {_		this(networkBufferPool, numberOfRequiredMemorySegments, Integer.MAX_VALUE, Optional.empty())__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,this,network,buffer,pool,number,of,required,memory,segments,integer,optional,empty
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments);1543328832;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal number of_network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments) {_		this(networkBufferPool, numberOfRequiredMemorySegments, Integer.MAX_VALUE, Optional.empty())__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,this,network,buffer,pool,number,of,required,memory,segments,integer,optional,empty
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments, 			int maxNumberOfMemorySegments);1489149058;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal and maximal_number of network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers_@param maxNumberOfMemorySegments_maximum number of network buffers to allocate;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments,_			int maxNumberOfMemorySegments) {_		checkArgument(maxNumberOfMemorySegments >= numberOfRequiredMemorySegments,_			"Maximum number of memory segments (%s) should not be smaller than minimum (%s).",_			maxNumberOfMemorySegments, numberOfRequiredMemorySegments)___		checkArgument(maxNumberOfMemorySegments > 0,_			"Maximum number of memory segments (%s) should be larger than 0.",_			maxNumberOfMemorySegments)___		LOG.debug("Using a local buffer pool with {}-{} buffers",_			numberOfRequiredMemorySegments, maxNumberOfMemorySegments)___		this.networkBufferPool = networkBufferPool__		this.numberOfRequiredMemorySegments = numberOfRequiredMemorySegments__		this.currentPoolSize = numberOfRequiredMemorySegments__		this.maxNumberOfMemorySegments = maxNumberOfMemorySegments__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,and,maximal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers,param,max,number,of,memory,segments,maximum,number,of,network,buffers,to,allocate;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,int,max,number,of,memory,segments,check,argument,max,number,of,memory,segments,number,of,required,memory,segments,maximum,number,of,memory,segments,s,should,not,be,smaller,than,minimum,s,max,number,of,memory,segments,number,of,required,memory,segments,check,argument,max,number,of,memory,segments,0,maximum,number,of,memory,segments,s,should,be,larger,than,0,max,number,of,memory,segments,log,debug,using,a,local,buffer,pool,with,buffers,number,of,required,memory,segments,max,number,of,memory,segments,this,network,buffer,pool,network,buffer,pool,this,number,of,required,memory,segments,number,of,required,memory,segments,this,current,pool,size,number,of,required,memory,segments,this,max,number,of,memory,segments,max,number,of,memory,segments
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments, 			int maxNumberOfMemorySegments);1489149058;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal and maximal_number of network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers_@param maxNumberOfMemorySegments_maximum number of network buffers to allocate;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments,_			int maxNumberOfMemorySegments) {_		checkArgument(maxNumberOfMemorySegments >= numberOfRequiredMemorySegments,_			"Maximum number of memory segments (%s) should not be smaller than minimum (%s).",_			maxNumberOfMemorySegments, numberOfRequiredMemorySegments)___		checkArgument(maxNumberOfMemorySegments > 0,_			"Maximum number of memory segments (%s) should be larger than 0.",_			maxNumberOfMemorySegments)___		LOG.debug("Using a local buffer pool with {}-{} buffers",_			numberOfRequiredMemorySegments, maxNumberOfMemorySegments)___		this.networkBufferPool = networkBufferPool__		this.numberOfRequiredMemorySegments = numberOfRequiredMemorySegments__		this.currentPoolSize = numberOfRequiredMemorySegments__		this.maxNumberOfMemorySegments = maxNumberOfMemorySegments__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,and,maximal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers,param,max,number,of,memory,segments,maximum,number,of,network,buffers,to,allocate;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,int,max,number,of,memory,segments,check,argument,max,number,of,memory,segments,number,of,required,memory,segments,maximum,number,of,memory,segments,s,should,not,be,smaller,than,minimum,s,max,number,of,memory,segments,number,of,required,memory,segments,check,argument,max,number,of,memory,segments,0,maximum,number,of,memory,segments,s,should,be,larger,than,0,max,number,of,memory,segments,log,debug,using,a,local,buffer,pool,with,buffers,number,of,required,memory,segments,max,number,of,memory,segments,this,network,buffer,pool,network,buffer,pool,this,number,of,required,memory,segments,number,of,required,memory,segments,this,current,pool,size,number,of,required,memory,segments,this,max,number,of,memory,segments,max,number,of,memory,segments
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments, 			int maxNumberOfMemorySegments);1507647200;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal and maximal_number of network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers_@param maxNumberOfMemorySegments_maximum number of network buffers to allocate;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments,_			int maxNumberOfMemorySegments) {_		checkArgument(maxNumberOfMemorySegments >= numberOfRequiredMemorySegments,_			"Maximum number of memory segments (%s) should not be smaller than minimum (%s).",_			maxNumberOfMemorySegments, numberOfRequiredMemorySegments)___		checkArgument(maxNumberOfMemorySegments > 0,_			"Maximum number of memory segments (%s) should be larger than 0.",_			maxNumberOfMemorySegments)___		LOG.debug("Using a local buffer pool with {}-{} buffers",_			numberOfRequiredMemorySegments, maxNumberOfMemorySegments)___		this.networkBufferPool = networkBufferPool__		this.numberOfRequiredMemorySegments = numberOfRequiredMemorySegments__		this.currentPoolSize = numberOfRequiredMemorySegments__		this.maxNumberOfMemorySegments = maxNumberOfMemorySegments__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,and,maximal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers,param,max,number,of,memory,segments,maximum,number,of,network,buffers,to,allocate;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,int,max,number,of,memory,segments,check,argument,max,number,of,memory,segments,number,of,required,memory,segments,maximum,number,of,memory,segments,s,should,not,be,smaller,than,minimum,s,max,number,of,memory,segments,number,of,required,memory,segments,check,argument,max,number,of,memory,segments,0,maximum,number,of,memory,segments,s,should,be,larger,than,0,max,number,of,memory,segments,log,debug,using,a,local,buffer,pool,with,buffers,number,of,required,memory,segments,max,number,of,memory,segments,this,network,buffer,pool,network,buffer,pool,this,number,of,required,memory,segments,number,of,required,memory,segments,this,current,pool,size,number,of,required,memory,segments,this,max,number,of,memory,segments,max,number,of,memory,segments
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments, 			int maxNumberOfMemorySegments);1515408360;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal and maximal_number of network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers_@param maxNumberOfMemorySegments_maximum number of network buffers to allocate;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments,_			int maxNumberOfMemorySegments) {_		checkArgument(maxNumberOfMemorySegments >= numberOfRequiredMemorySegments,_			"Maximum number of memory segments (%s) should not be smaller than minimum (%s).",_			maxNumberOfMemorySegments, numberOfRequiredMemorySegments)___		checkArgument(maxNumberOfMemorySegments > 0,_			"Maximum number of memory segments (%s) should be larger than 0.",_			maxNumberOfMemorySegments)___		LOG.debug("Using a local buffer pool with {}-{} buffers",_			numberOfRequiredMemorySegments, maxNumberOfMemorySegments)___		this.networkBufferPool = networkBufferPool__		this.numberOfRequiredMemorySegments = numberOfRequiredMemorySegments__		this.currentPoolSize = numberOfRequiredMemorySegments__		this.maxNumberOfMemorySegments = maxNumberOfMemorySegments__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,and,maximal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers,param,max,number,of,memory,segments,maximum,number,of,network,buffers,to,allocate;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,int,max,number,of,memory,segments,check,argument,max,number,of,memory,segments,number,of,required,memory,segments,maximum,number,of,memory,segments,s,should,not,be,smaller,than,minimum,s,max,number,of,memory,segments,number,of,required,memory,segments,check,argument,max,number,of,memory,segments,0,maximum,number,of,memory,segments,s,should,be,larger,than,0,max,number,of,memory,segments,log,debug,using,a,local,buffer,pool,with,buffers,number,of,required,memory,segments,max,number,of,memory,segments,this,network,buffer,pool,network,buffer,pool,this,number,of,required,memory,segments,number,of,required,memory,segments,this,current,pool,size,number,of,required,memory,segments,this,max,number,of,memory,segments,max,number,of,memory,segments
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments, 			int maxNumberOfMemorySegments);1516285456;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal and maximal_number of network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers_@param maxNumberOfMemorySegments_maximum number of network buffers to allocate;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments,_			int maxNumberOfMemorySegments) {_		checkArgument(maxNumberOfMemorySegments >= numberOfRequiredMemorySegments,_			"Maximum number of memory segments (%s) should not be smaller than minimum (%s).",_			maxNumberOfMemorySegments, numberOfRequiredMemorySegments)___		checkArgument(maxNumberOfMemorySegments > 0,_			"Maximum number of memory segments (%s) should be larger than 0.",_			maxNumberOfMemorySegments)___		LOG.debug("Using a local buffer pool with {}-{} buffers",_			numberOfRequiredMemorySegments, maxNumberOfMemorySegments)___		this.networkBufferPool = networkBufferPool__		this.numberOfRequiredMemorySegments = numberOfRequiredMemorySegments__		this.currentPoolSize = numberOfRequiredMemorySegments__		this.maxNumberOfMemorySegments = maxNumberOfMemorySegments__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,and,maximal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers,param,max,number,of,memory,segments,maximum,number,of,network,buffers,to,allocate;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,int,max,number,of,memory,segments,check,argument,max,number,of,memory,segments,number,of,required,memory,segments,maximum,number,of,memory,segments,s,should,not,be,smaller,than,minimum,s,max,number,of,memory,segments,number,of,required,memory,segments,check,argument,max,number,of,memory,segments,0,maximum,number,of,memory,segments,s,should,be,larger,than,0,max,number,of,memory,segments,log,debug,using,a,local,buffer,pool,with,buffers,number,of,required,memory,segments,max,number,of,memory,segments,this,network,buffer,pool,network,buffer,pool,this,number,of,required,memory,segments,number,of,required,memory,segments,this,current,pool,size,number,of,required,memory,segments,this,max,number,of,memory,segments,max,number,of,memory,segments
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments, 			int maxNumberOfMemorySegments);1519039274;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal and maximal_number of network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers_@param maxNumberOfMemorySegments_maximum number of network buffers to allocate;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments,_			int maxNumberOfMemorySegments) {_		checkArgument(maxNumberOfMemorySegments >= numberOfRequiredMemorySegments,_			"Maximum number of memory segments (%s) should not be smaller than minimum (%s).",_			maxNumberOfMemorySegments, numberOfRequiredMemorySegments)___		checkArgument(maxNumberOfMemorySegments > 0,_			"Maximum number of memory segments (%s) should be larger than 0.",_			maxNumberOfMemorySegments)___		LOG.debug("Using a local buffer pool with {}-{} buffers",_			numberOfRequiredMemorySegments, maxNumberOfMemorySegments)___		this.networkBufferPool = networkBufferPool__		this.numberOfRequiredMemorySegments = numberOfRequiredMemorySegments__		this.currentPoolSize = numberOfRequiredMemorySegments__		this.maxNumberOfMemorySegments = maxNumberOfMemorySegments__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,and,maximal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers,param,max,number,of,memory,segments,maximum,number,of,network,buffers,to,allocate;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,int,max,number,of,memory,segments,check,argument,max,number,of,memory,segments,number,of,required,memory,segments,maximum,number,of,memory,segments,s,should,not,be,smaller,than,minimum,s,max,number,of,memory,segments,number,of,required,memory,segments,check,argument,max,number,of,memory,segments,0,maximum,number,of,memory,segments,s,should,be,larger,than,0,max,number,of,memory,segments,log,debug,using,a,local,buffer,pool,with,buffers,number,of,required,memory,segments,max,number,of,memory,segments,this,network,buffer,pool,network,buffer,pool,this,number,of,required,memory,segments,number,of,required,memory,segments,this,current,pool,size,number,of,required,memory,segments,this,max,number,of,memory,segments,max,number,of,memory,segments
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments, 			int maxNumberOfMemorySegments);1524128166;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal and maximal_number of network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers_@param maxNumberOfMemorySegments_maximum number of network buffers to allocate;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments,_			int maxNumberOfMemorySegments) {_		checkArgument(maxNumberOfMemorySegments >= numberOfRequiredMemorySegments,_			"Maximum number of memory segments (%s) should not be smaller than minimum (%s).",_			maxNumberOfMemorySegments, numberOfRequiredMemorySegments)___		checkArgument(maxNumberOfMemorySegments > 0,_			"Maximum number of memory segments (%s) should be larger than 0.",_			maxNumberOfMemorySegments)___		LOG.debug("Using a local buffer pool with {}-{} buffers",_			numberOfRequiredMemorySegments, maxNumberOfMemorySegments)___		this.networkBufferPool = networkBufferPool__		this.numberOfRequiredMemorySegments = numberOfRequiredMemorySegments__		this.currentPoolSize = numberOfRequiredMemorySegments__		this.maxNumberOfMemorySegments = maxNumberOfMemorySegments__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,and,maximal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers,param,max,number,of,memory,segments,maximum,number,of,network,buffers,to,allocate;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,int,max,number,of,memory,segments,check,argument,max,number,of,memory,segments,number,of,required,memory,segments,maximum,number,of,memory,segments,s,should,not,be,smaller,than,minimum,s,max,number,of,memory,segments,number,of,required,memory,segments,check,argument,max,number,of,memory,segments,0,maximum,number,of,memory,segments,s,should,be,larger,than,0,max,number,of,memory,segments,log,debug,using,a,local,buffer,pool,with,buffers,number,of,required,memory,segments,max,number,of,memory,segments,this,network,buffer,pool,network,buffer,pool,this,number,of,required,memory,segments,number,of,required,memory,segments,this,current,pool,size,number,of,required,memory,segments,this,max,number,of,memory,segments,max,number,of,memory,segments
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments, 			int maxNumberOfMemorySegments);1524128179;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal and maximal_number of network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers_@param maxNumberOfMemorySegments_maximum number of network buffers to allocate;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments,_			int maxNumberOfMemorySegments) {_		checkArgument(maxNumberOfMemorySegments >= numberOfRequiredMemorySegments,_			"Maximum number of memory segments (%s) should not be smaller than minimum (%s).",_			maxNumberOfMemorySegments, numberOfRequiredMemorySegments)___		checkArgument(maxNumberOfMemorySegments > 0,_			"Maximum number of memory segments (%s) should be larger than 0.",_			maxNumberOfMemorySegments)___		LOG.debug("Using a local buffer pool with {}-{} buffers",_			numberOfRequiredMemorySegments, maxNumberOfMemorySegments)___		this.networkBufferPool = networkBufferPool__		this.numberOfRequiredMemorySegments = numberOfRequiredMemorySegments__		this.currentPoolSize = numberOfRequiredMemorySegments__		this.maxNumberOfMemorySegments = maxNumberOfMemorySegments__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,and,maximal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers,param,max,number,of,memory,segments,maximum,number,of,network,buffers,to,allocate;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,int,max,number,of,memory,segments,check,argument,max,number,of,memory,segments,number,of,required,memory,segments,maximum,number,of,memory,segments,s,should,not,be,smaller,than,minimum,s,max,number,of,memory,segments,number,of,required,memory,segments,check,argument,max,number,of,memory,segments,0,maximum,number,of,memory,segments,s,should,be,larger,than,0,max,number,of,memory,segments,log,debug,using,a,local,buffer,pool,with,buffers,number,of,required,memory,segments,max,number,of,memory,segments,this,network,buffer,pool,network,buffer,pool,this,number,of,required,memory,segments,number,of,required,memory,segments,this,current,pool,size,number,of,required,memory,segments,this,max,number,of,memory,segments,max,number,of,memory,segments
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments, 			int maxNumberOfMemorySegments);1530683488;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal and maximal_number of network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers_@param maxNumberOfMemorySegments_maximum number of network buffers to allocate;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments,_			int maxNumberOfMemorySegments) {_		checkArgument(maxNumberOfMemorySegments >= numberOfRequiredMemorySegments,_			"Maximum number of memory segments (%s) should not be smaller than minimum (%s).",_			maxNumberOfMemorySegments, numberOfRequiredMemorySegments)___		checkArgument(maxNumberOfMemorySegments > 0,_			"Maximum number of memory segments (%s) should be larger than 0.",_			maxNumberOfMemorySegments)___		LOG.debug("Using a local buffer pool with {}-{} buffers",_			numberOfRequiredMemorySegments, maxNumberOfMemorySegments)___		this.networkBufferPool = networkBufferPool__		this.numberOfRequiredMemorySegments = numberOfRequiredMemorySegments__		this.currentPoolSize = numberOfRequiredMemorySegments__		this.maxNumberOfMemorySegments = maxNumberOfMemorySegments__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,and,maximal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers,param,max,number,of,memory,segments,maximum,number,of,network,buffers,to,allocate;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,int,max,number,of,memory,segments,check,argument,max,number,of,memory,segments,number,of,required,memory,segments,maximum,number,of,memory,segments,s,should,not,be,smaller,than,minimum,s,max,number,of,memory,segments,number,of,required,memory,segments,check,argument,max,number,of,memory,segments,0,maximum,number,of,memory,segments,s,should,be,larger,than,0,max,number,of,memory,segments,log,debug,using,a,local,buffer,pool,with,buffers,number,of,required,memory,segments,max,number,of,memory,segments,this,network,buffer,pool,network,buffer,pool,this,number,of,required,memory,segments,number,of,required,memory,segments,this,current,pool,size,number,of,required,memory,segments,this,max,number,of,memory,segments,max,number,of,memory,segments
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments, 			int maxNumberOfMemorySegments);1530698180;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal and maximal_number of network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers_@param maxNumberOfMemorySegments_maximum number of network buffers to allocate;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments,_			int maxNumberOfMemorySegments) {_		checkArgument(maxNumberOfMemorySegments >= numberOfRequiredMemorySegments,_			"Maximum number of memory segments (%s) should not be smaller than minimum (%s).",_			maxNumberOfMemorySegments, numberOfRequiredMemorySegments)___		checkArgument(maxNumberOfMemorySegments > 0,_			"Maximum number of memory segments (%s) should be larger than 0.",_			maxNumberOfMemorySegments)___		LOG.debug("Using a local buffer pool with {}-{} buffers",_			numberOfRequiredMemorySegments, maxNumberOfMemorySegments)___		this.networkBufferPool = networkBufferPool__		this.numberOfRequiredMemorySegments = numberOfRequiredMemorySegments__		this.currentPoolSize = numberOfRequiredMemorySegments__		this.maxNumberOfMemorySegments = maxNumberOfMemorySegments__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,and,maximal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers,param,max,number,of,memory,segments,maximum,number,of,network,buffers,to,allocate;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,int,max,number,of,memory,segments,check,argument,max,number,of,memory,segments,number,of,required,memory,segments,maximum,number,of,memory,segments,s,should,not,be,smaller,than,minimum,s,max,number,of,memory,segments,number,of,required,memory,segments,check,argument,max,number,of,memory,segments,0,maximum,number,of,memory,segments,s,should,be,larger,than,0,max,number,of,memory,segments,log,debug,using,a,local,buffer,pool,with,buffers,number,of,required,memory,segments,max,number,of,memory,segments,this,network,buffer,pool,network,buffer,pool,this,number,of,required,memory,segments,number,of,required,memory,segments,this,current,pool,size,number,of,required,memory,segments,this,max,number,of,memory,segments,max,number,of,memory,segments
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments, 			int maxNumberOfMemorySegments);1530785917;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal and maximal_number of network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers_@param maxNumberOfMemorySegments_maximum number of network buffers to allocate;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments,_			int maxNumberOfMemorySegments) {_		checkArgument(maxNumberOfMemorySegments >= numberOfRequiredMemorySegments,_			"Maximum number of memory segments (%s) should not be smaller than minimum (%s).",_			maxNumberOfMemorySegments, numberOfRequiredMemorySegments)___		checkArgument(maxNumberOfMemorySegments > 0,_			"Maximum number of memory segments (%s) should be larger than 0.",_			maxNumberOfMemorySegments)___		LOG.debug("Using a local buffer pool with {}-{} buffers",_			numberOfRequiredMemorySegments, maxNumberOfMemorySegments)___		this.networkBufferPool = networkBufferPool__		this.numberOfRequiredMemorySegments = numberOfRequiredMemorySegments__		this.currentPoolSize = numberOfRequiredMemorySegments__		this.maxNumberOfMemorySegments = maxNumberOfMemorySegments__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,and,maximal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers,param,max,number,of,memory,segments,maximum,number,of,network,buffers,to,allocate;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,int,max,number,of,memory,segments,check,argument,max,number,of,memory,segments,number,of,required,memory,segments,maximum,number,of,memory,segments,s,should,not,be,smaller,than,minimum,s,max,number,of,memory,segments,number,of,required,memory,segments,check,argument,max,number,of,memory,segments,0,maximum,number,of,memory,segments,s,should,be,larger,than,0,max,number,of,memory,segments,log,debug,using,a,local,buffer,pool,with,buffers,number,of,required,memory,segments,max,number,of,memory,segments,this,network,buffer,pool,network,buffer,pool,this,number,of,required,memory,segments,number,of,required,memory,segments,this,current,pool,size,number,of,required,memory,segments,this,max,number,of,memory,segments,max,number,of,memory,segments
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments, 			int maxNumberOfMemorySegments);1532012479;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal and maximal_number of network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers_@param maxNumberOfMemorySegments_maximum number of network buffers to allocate;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments,_			int maxNumberOfMemorySegments) {_		checkArgument(maxNumberOfMemorySegments >= numberOfRequiredMemorySegments,_			"Maximum number of memory segments (%s) should not be smaller than minimum (%s).",_			maxNumberOfMemorySegments, numberOfRequiredMemorySegments)___		checkArgument(maxNumberOfMemorySegments > 0,_			"Maximum number of memory segments (%s) should be larger than 0.",_			maxNumberOfMemorySegments)___		LOG.debug("Using a local buffer pool with {}-{} buffers",_			numberOfRequiredMemorySegments, maxNumberOfMemorySegments)___		this.networkBufferPool = networkBufferPool__		this.numberOfRequiredMemorySegments = numberOfRequiredMemorySegments__		this.currentPoolSize = numberOfRequiredMemorySegments__		this.maxNumberOfMemorySegments = maxNumberOfMemorySegments__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,and,maximal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers,param,max,number,of,memory,segments,maximum,number,of,network,buffers,to,allocate;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,int,max,number,of,memory,segments,check,argument,max,number,of,memory,segments,number,of,required,memory,segments,maximum,number,of,memory,segments,s,should,not,be,smaller,than,minimum,s,max,number,of,memory,segments,number,of,required,memory,segments,check,argument,max,number,of,memory,segments,0,maximum,number,of,memory,segments,s,should,be,larger,than,0,max,number,of,memory,segments,log,debug,using,a,local,buffer,pool,with,buffers,number,of,required,memory,segments,max,number,of,memory,segments,this,network,buffer,pool,network,buffer,pool,this,number,of,required,memory,segments,number,of,required,memory,segments,this,current,pool,size,number,of,required,memory,segments,this,max,number,of,memory,segments,max,number,of,memory,segments
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments, 			int maxNumberOfMemorySegments);1540301084;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal and maximal_number of network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers_@param maxNumberOfMemorySegments_maximum number of network buffers to allocate;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments,_			int maxNumberOfMemorySegments) {_		this(networkBufferPool, numberOfRequiredMemorySegments, maxNumberOfMemorySegments, Optional.empty())__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,and,maximal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers,param,max,number,of,memory,segments,maximum,number,of,network,buffers,to,allocate;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,int,max,number,of,memory,segments,this,network,buffer,pool,number,of,required,memory,segments,max,number,of,memory,segments,optional,empty
LocalBufferPool -> LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments, 			int maxNumberOfMemorySegments);1543328832;Local buffer pool based on the given <tt>networkBufferPool</tt> with a minimal and maximal_number of network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers_@param maxNumberOfMemorySegments_maximum number of network buffers to allocate;LocalBufferPool(NetworkBufferPool networkBufferPool, int numberOfRequiredMemorySegments,_			int maxNumberOfMemorySegments) {_		this(networkBufferPool, numberOfRequiredMemorySegments, maxNumberOfMemorySegments, Optional.empty())__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,with,a,minimal,and,maximal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers,param,max,number,of,memory,segments,maximum,number,of,network,buffers,to,allocate;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,int,max,number,of,memory,segments,this,network,buffer,pool,number,of,required,memory,segments,max,number,of,memory,segments,optional,empty
LocalBufferPool -> @Override 	public void lazyDestroy();1426697080;Destroy is called after the produce or consume phase of a task finishes.;@Override_	public void lazyDestroy() {_		synchronized (availableMemorySegments) {_			if (!isDestroyed) {_				MemorySegment segment__				while ((segment = availableMemorySegments.poll()) != null) {_					returnMemorySegment(segment)__				}__				EventListener<Buffer> listener__				while ((listener = registeredListeners.poll()) != null) {_					listener.onEvent(null)__				}__				isDestroyed = true__			}_		}__		networkBufferPool.destroyBufferPool(this)__	};destroy,is,called,after,the,produce,or,consume,phase,of,a,task,finishes;override,public,void,lazy,destroy,synchronized,available,memory,segments,if,is,destroyed,memory,segment,segment,while,segment,available,memory,segments,poll,null,return,memory,segment,segment,event,listener,buffer,listener,while,listener,registered,listeners,poll,null,listener,on,event,null,is,destroyed,true,network,buffer,pool,destroy,buffer,pool,this
LocalBufferPool -> @Override 	public void lazyDestroy();1428385467;Destroy is called after the produce or consume phase of a task finishes.;@Override_	public void lazyDestroy() {_		synchronized (availableMemorySegments) {_			if (!isDestroyed) {_				MemorySegment segment__				while ((segment = availableMemorySegments.poll()) != null) {_					returnMemorySegment(segment)__				}__				EventListener<Buffer> listener__				while ((listener = registeredListeners.poll()) != null) {_					listener.onEvent(null)__				}__				isDestroyed = true__			}_		}__		networkBufferPool.destroyBufferPool(this)__	};destroy,is,called,after,the,produce,or,consume,phase,of,a,task,finishes;override,public,void,lazy,destroy,synchronized,available,memory,segments,if,is,destroyed,memory,segment,segment,while,segment,available,memory,segments,poll,null,return,memory,segment,segment,event,listener,buffer,listener,while,listener,registered,listeners,poll,null,listener,on,event,null,is,destroyed,true,network,buffer,pool,destroy,buffer,pool,this
LocalBufferPool -> @Override 	public void lazyDestroy();1429794949;Destroy is called after the produce or consume phase of a task finishes.;@Override_	public void lazyDestroy() {_		synchronized (availableMemorySegments) {_			if (!isDestroyed) {_				MemorySegment segment__				while ((segment = availableMemorySegments.poll()) != null) {_					returnMemorySegment(segment)__				}__				EventListener<Buffer> listener__				while ((listener = registeredListeners.poll()) != null) {_					listener.onEvent(null)__				}__				isDestroyed = true__			}_		}__		networkBufferPool.destroyBufferPool(this)__	};destroy,is,called,after,the,produce,or,consume,phase,of,a,task,finishes;override,public,void,lazy,destroy,synchronized,available,memory,segments,if,is,destroyed,memory,segment,segment,while,segment,available,memory,segments,poll,null,return,memory,segment,segment,event,listener,buffer,listener,while,listener,registered,listeners,poll,null,listener,on,event,null,is,destroyed,true,network,buffer,pool,destroy,buffer,pool,this
LocalBufferPool -> @Override 	public void lazyDestroy();1465991918;Destroy is called after the produce or consume phase of a task finishes.;@Override_	public void lazyDestroy() {_		synchronized (availableMemorySegments) {_			if (!isDestroyed) {_				MemorySegment segment__				while ((segment = availableMemorySegments.poll()) != null) {_					returnMemorySegment(segment)__				}__				EventListener<Buffer> listener__				while ((listener = registeredListeners.poll()) != null) {_					listener.onEvent(null)__				}__				isDestroyed = true__			}_		}__		networkBufferPool.destroyBufferPool(this)__	};destroy,is,called,after,the,produce,or,consume,phase,of,a,task,finishes;override,public,void,lazy,destroy,synchronized,available,memory,segments,if,is,destroyed,memory,segment,segment,while,segment,available,memory,segments,poll,null,return,memory,segment,segment,event,listener,buffer,listener,while,listener,registered,listeners,poll,null,listener,on,event,null,is,destroyed,true,network,buffer,pool,destroy,buffer,pool,this
LocalBufferPool -> @Override 	public void lazyDestroy();1478079986;Destroy is called after the produce or consume phase of a task finishes.;@Override_	public void lazyDestroy() {_		synchronized (availableMemorySegments) {_			if (!isDestroyed) {_				MemorySegment segment__				while ((segment = availableMemorySegments.poll()) != null) {_					returnMemorySegment(segment)__				}__				EventListener<Buffer> listener__				while ((listener = registeredListeners.poll()) != null) {_					listener.onEvent(null)__				}__				isDestroyed = true__			}_		}__		networkBufferPool.destroyBufferPool(this)__	};destroy,is,called,after,the,produce,or,consume,phase,of,a,task,finishes;override,public,void,lazy,destroy,synchronized,available,memory,segments,if,is,destroyed,memory,segment,segment,while,segment,available,memory,segments,poll,null,return,memory,segment,segment,event,listener,buffer,listener,while,listener,registered,listeners,poll,null,listener,on,event,null,is,destroyed,true,network,buffer,pool,destroy,buffer,pool,this
LocalBufferPool -> @Override 	public void lazyDestroy();1481715813;Destroy is called after the produce or consume phase of a task finishes.;@Override_	public void lazyDestroy() {_		synchronized (availableMemorySegments) {_			if (!isDestroyed) {_				MemorySegment segment__				while ((segment = availableMemorySegments.poll()) != null) {_					returnMemorySegment(segment)__				}__				EventListener<Buffer> listener__				while ((listener = registeredListeners.poll()) != null) {_					listener.onEvent(null)__				}__				isDestroyed = true__			}_		}__		networkBufferPool.destroyBufferPool(this)__	};destroy,is,called,after,the,produce,or,consume,phase,of,a,task,finishes;override,public,void,lazy,destroy,synchronized,available,memory,segments,if,is,destroyed,memory,segment,segment,while,segment,available,memory,segments,poll,null,return,memory,segment,segment,event,listener,buffer,listener,while,listener,registered,listeners,poll,null,listener,on,event,null,is,destroyed,true,network,buffer,pool,destroy,buffer,pool,this
LocalBufferPool -> @Override 	public void lazyDestroy();1489060856;Destroy is called after the produce or consume phase of a task finishes.;@Override_	public void lazyDestroy() {_		synchronized (availableMemorySegments) {_			if (!isDestroyed) {_				MemorySegment segment__				while ((segment = availableMemorySegments.poll()) != null) {_					returnMemorySegment(segment)__				}__				EventListener<Buffer> listener__				while ((listener = registeredListeners.poll()) != null) {_					listener.onEvent(null)__				}__				isDestroyed = true__			}_		}__		networkBufferPool.destroyBufferPool(this)__	};destroy,is,called,after,the,produce,or,consume,phase,of,a,task,finishes;override,public,void,lazy,destroy,synchronized,available,memory,segments,if,is,destroyed,memory,segment,segment,while,segment,available,memory,segments,poll,null,return,memory,segment,segment,event,listener,buffer,listener,while,listener,registered,listeners,poll,null,listener,on,event,null,is,destroyed,true,network,buffer,pool,destroy,buffer,pool,this
LocalBufferPool -> @Override 	public void lazyDestroy();1489149058;Destroy is called after the produce or consume phase of a task finishes.;@Override_	public void lazyDestroy() {_		synchronized (availableMemorySegments) {_			if (!isDestroyed) {_				MemorySegment segment__				while ((segment = availableMemorySegments.poll()) != null) {_					returnMemorySegment(segment)__				}__				EventListener<Buffer> listener__				while ((listener = registeredListeners.poll()) != null) {_					listener.onEvent(null)__				}__				isDestroyed = true__			}_		}__		networkBufferPool.destroyBufferPool(this)__	};destroy,is,called,after,the,produce,or,consume,phase,of,a,task,finishes;override,public,void,lazy,destroy,synchronized,available,memory,segments,if,is,destroyed,memory,segment,segment,while,segment,available,memory,segments,poll,null,return,memory,segment,segment,event,listener,buffer,listener,while,listener,registered,listeners,poll,null,listener,on,event,null,is,destroyed,true,network,buffer,pool,destroy,buffer,pool,this
LocalBufferPool -> @Override 	public void lazyDestroy();1489149058;Destroy is called after the produce or consume phase of a task finishes.;@Override_	public void lazyDestroy() {_		synchronized (availableMemorySegments) {_			if (!isDestroyed) {_				MemorySegment segment__				while ((segment = availableMemorySegments.poll()) != null) {_					returnMemorySegment(segment)__				}__				EventListener<Buffer> listener__				while ((listener = registeredListeners.poll()) != null) {_					listener.onEvent(null)__				}__				isDestroyed = true__			}_		}__		networkBufferPool.destroyBufferPool(this)__	};destroy,is,called,after,the,produce,or,consume,phase,of,a,task,finishes;override,public,void,lazy,destroy,synchronized,available,memory,segments,if,is,destroyed,memory,segment,segment,while,segment,available,memory,segments,poll,null,return,memory,segment,segment,event,listener,buffer,listener,while,listener,registered,listeners,poll,null,listener,on,event,null,is,destroyed,true,network,buffer,pool,destroy,buffer,pool,this
LocalBufferPool -> @Override 	public void lazyDestroy();1507647200;Destroy is called after the produce or consume phase of a task finishes.;@Override_	public void lazyDestroy() {_		synchronized (availableMemorySegments) {_			if (!isDestroyed) {_				MemorySegment segment__				while ((segment = availableMemorySegments.poll()) != null) {_					returnMemorySegment(segment)__				}__				BufferListener listener__				while ((listener = registeredListeners.poll()) != null) {_					listener.notifyBufferDestroyed()__				}__				isDestroyed = true__			}_		}__		networkBufferPool.destroyBufferPool(this)__	};destroy,is,called,after,the,produce,or,consume,phase,of,a,task,finishes;override,public,void,lazy,destroy,synchronized,available,memory,segments,if,is,destroyed,memory,segment,segment,while,segment,available,memory,segments,poll,null,return,memory,segment,segment,buffer,listener,listener,while,listener,registered,listeners,poll,null,listener,notify,buffer,destroyed,is,destroyed,true,network,buffer,pool,destroy,buffer,pool,this
LocalBufferPool -> @Override 	public void lazyDestroy();1515408360;Destroy is called after the produce or consume phase of a task finishes.;@Override_	public void lazyDestroy() {_		synchronized (availableMemorySegments) {_			if (!isDestroyed) {_				MemorySegment segment__				while ((segment = availableMemorySegments.poll()) != null) {_					returnMemorySegment(segment)__				}__				BufferListener listener__				while ((listener = registeredListeners.poll()) != null) {_					listener.notifyBufferDestroyed()__				}__				isDestroyed = true__			}_		}__		networkBufferPool.destroyBufferPool(this)__	};destroy,is,called,after,the,produce,or,consume,phase,of,a,task,finishes;override,public,void,lazy,destroy,synchronized,available,memory,segments,if,is,destroyed,memory,segment,segment,while,segment,available,memory,segments,poll,null,return,memory,segment,segment,buffer,listener,listener,while,listener,registered,listeners,poll,null,listener,notify,buffer,destroyed,is,destroyed,true,network,buffer,pool,destroy,buffer,pool,this
LocalBufferPool -> @Override 	public void lazyDestroy();1516285456;Destroy is called after the produce or consume phase of a task finishes.;@Override_	public void lazyDestroy() {_		synchronized (availableMemorySegments) {_			if (!isDestroyed) {_				MemorySegment segment__				while ((segment = availableMemorySegments.poll()) != null) {_					returnMemorySegment(segment)__				}__				BufferListener listener__				while ((listener = registeredListeners.poll()) != null) {_					listener.notifyBufferDestroyed()__				}__				isDestroyed = true__			}_		}__		networkBufferPool.destroyBufferPool(this)__	};destroy,is,called,after,the,produce,or,consume,phase,of,a,task,finishes;override,public,void,lazy,destroy,synchronized,available,memory,segments,if,is,destroyed,memory,segment,segment,while,segment,available,memory,segments,poll,null,return,memory,segment,segment,buffer,listener,listener,while,listener,registered,listeners,poll,null,listener,notify,buffer,destroyed,is,destroyed,true,network,buffer,pool,destroy,buffer,pool,this
LocalBufferPool -> @Override 	public void lazyDestroy();1519039274;Destroy is called after the produce or consume phase of a task finishes.;@Override_	public void lazyDestroy() {_		synchronized (availableMemorySegments) {_			if (!isDestroyed) {_				MemorySegment segment__				while ((segment = availableMemorySegments.poll()) != null) {_					returnMemorySegment(segment)__				}__				BufferListener listener__				while ((listener = registeredListeners.poll()) != null) {_					listener.notifyBufferDestroyed()__				}__				isDestroyed = true__			}_		}__		networkBufferPool.destroyBufferPool(this)__	};destroy,is,called,after,the,produce,or,consume,phase,of,a,task,finishes;override,public,void,lazy,destroy,synchronized,available,memory,segments,if,is,destroyed,memory,segment,segment,while,segment,available,memory,segments,poll,null,return,memory,segment,segment,buffer,listener,listener,while,listener,registered,listeners,poll,null,listener,notify,buffer,destroyed,is,destroyed,true,network,buffer,pool,destroy,buffer,pool,this
LocalBufferPool -> @Override 	public void lazyDestroy();1524128166;Destroy is called after the produce or consume phase of a task finishes.;@Override_	public void lazyDestroy() {_		synchronized (availableMemorySegments) {_			if (!isDestroyed) {_				MemorySegment segment__				while ((segment = availableMemorySegments.poll()) != null) {_					returnMemorySegment(segment)__				}__				BufferListener listener__				while ((listener = registeredListeners.poll()) != null) {_					listener.notifyBufferDestroyed()__				}__				isDestroyed = true__			}_		}__		networkBufferPool.destroyBufferPool(this)__	};destroy,is,called,after,the,produce,or,consume,phase,of,a,task,finishes;override,public,void,lazy,destroy,synchronized,available,memory,segments,if,is,destroyed,memory,segment,segment,while,segment,available,memory,segments,poll,null,return,memory,segment,segment,buffer,listener,listener,while,listener,registered,listeners,poll,null,listener,notify,buffer,destroyed,is,destroyed,true,network,buffer,pool,destroy,buffer,pool,this
LocalBufferPool -> @Override 	public void lazyDestroy();1524128179;Destroy is called after the produce or consume phase of a task finishes.;@Override_	public void lazyDestroy() {_		synchronized (availableMemorySegments) {_			if (!isDestroyed) {_				MemorySegment segment__				while ((segment = availableMemorySegments.poll()) != null) {_					returnMemorySegment(segment)__				}__				BufferListener listener__				while ((listener = registeredListeners.poll()) != null) {_					listener.notifyBufferDestroyed()__				}__				isDestroyed = true__			}_		}__		networkBufferPool.destroyBufferPool(this)__	};destroy,is,called,after,the,produce,or,consume,phase,of,a,task,finishes;override,public,void,lazy,destroy,synchronized,available,memory,segments,if,is,destroyed,memory,segment,segment,while,segment,available,memory,segments,poll,null,return,memory,segment,segment,buffer,listener,listener,while,listener,registered,listeners,poll,null,listener,notify,buffer,destroyed,is,destroyed,true,network,buffer,pool,destroy,buffer,pool,this
LocalBufferPool -> @Override 	public void lazyDestroy();1530683488;Destroy is called after the produce or consume phase of a task finishes.;@Override_	public void lazyDestroy() {_		synchronized (availableMemorySegments) {_			if (!isDestroyed) {_				MemorySegment segment__				while ((segment = availableMemorySegments.poll()) != null) {_					returnMemorySegment(segment)__				}__				BufferListener listener__				while ((listener = registeredListeners.poll()) != null) {_					listener.notifyBufferDestroyed()__				}__				isDestroyed = true__			}_		}__		try {_			networkBufferPool.destroyBufferPool(this)__		} catch (IOException e) {_			ExceptionUtils.rethrow(e)__		}_	};destroy,is,called,after,the,produce,or,consume,phase,of,a,task,finishes;override,public,void,lazy,destroy,synchronized,available,memory,segments,if,is,destroyed,memory,segment,segment,while,segment,available,memory,segments,poll,null,return,memory,segment,segment,buffer,listener,listener,while,listener,registered,listeners,poll,null,listener,notify,buffer,destroyed,is,destroyed,true,try,network,buffer,pool,destroy,buffer,pool,this,catch,ioexception,e,exception,utils,rethrow,e
LocalBufferPool -> @Override 	public void lazyDestroy();1530698180;Destroy is called after the produce or consume phase of a task finishes.;@Override_	public void lazyDestroy() {_		synchronized (availableMemorySegments) {_			if (!isDestroyed) {_				MemorySegment segment__				while ((segment = availableMemorySegments.poll()) != null) {_					returnMemorySegment(segment)__				}__				BufferListener listener__				while ((listener = registeredListeners.poll()) != null) {_					listener.notifyBufferDestroyed()__				}__				isDestroyed = true__			}_		}__		try {_			networkBufferPool.destroyBufferPool(this)__		} catch (IOException e) {_			ExceptionUtils.rethrow(e)__		}_	};destroy,is,called,after,the,produce,or,consume,phase,of,a,task,finishes;override,public,void,lazy,destroy,synchronized,available,memory,segments,if,is,destroyed,memory,segment,segment,while,segment,available,memory,segments,poll,null,return,memory,segment,segment,buffer,listener,listener,while,listener,registered,listeners,poll,null,listener,notify,buffer,destroyed,is,destroyed,true,try,network,buffer,pool,destroy,buffer,pool,this,catch,ioexception,e,exception,utils,rethrow,e
LocalBufferPool -> @Override 	public void lazyDestroy();1530785917;Destroy is called after the produce or consume phase of a task finishes.;@Override_	public void lazyDestroy() {_		_		synchronized (availableMemorySegments) {_			if (!isDestroyed) {_				MemorySegment segment__				while ((segment = availableMemorySegments.poll()) != null) {_					returnMemorySegment(segment)__				}__				BufferListener listener__				while ((listener = registeredListeners.poll()) != null) {_					listener.notifyBufferDestroyed()__				}__				isDestroyed = true__			}_		}__		try {_			networkBufferPool.destroyBufferPool(this)__		} catch (IOException e) {_			ExceptionUtils.rethrow(e)__		}_	};destroy,is,called,after,the,produce,or,consume,phase,of,a,task,finishes;override,public,void,lazy,destroy,synchronized,available,memory,segments,if,is,destroyed,memory,segment,segment,while,segment,available,memory,segments,poll,null,return,memory,segment,segment,buffer,listener,listener,while,listener,registered,listeners,poll,null,listener,notify,buffer,destroyed,is,destroyed,true,try,network,buffer,pool,destroy,buffer,pool,this,catch,ioexception,e,exception,utils,rethrow,e
LocalBufferPool -> @Override 	public void lazyDestroy();1532012479;Destroy is called after the produce or consume phase of a task finishes.;@Override_	public void lazyDestroy() {_		_		synchronized (availableMemorySegments) {_			if (!isDestroyed) {_				MemorySegment segment__				while ((segment = availableMemorySegments.poll()) != null) {_					returnMemorySegment(segment)__				}__				BufferListener listener__				while ((listener = registeredListeners.poll()) != null) {_					listener.notifyBufferDestroyed()__				}__				isDestroyed = true__			}_		}__		try {_			networkBufferPool.destroyBufferPool(this)__		} catch (IOException e) {_			ExceptionUtils.rethrow(e)__		}_	};destroy,is,called,after,the,produce,or,consume,phase,of,a,task,finishes;override,public,void,lazy,destroy,synchronized,available,memory,segments,if,is,destroyed,memory,segment,segment,while,segment,available,memory,segments,poll,null,return,memory,segment,segment,buffer,listener,listener,while,listener,registered,listeners,poll,null,listener,notify,buffer,destroyed,is,destroyed,true,try,network,buffer,pool,destroy,buffer,pool,this,catch,ioexception,e,exception,utils,rethrow,e
LocalBufferPool -> @Override 	public void lazyDestroy();1540301084;Destroy is called after the produce or consume phase of a task finishes.;@Override_	public void lazyDestroy() {_		_		synchronized (availableMemorySegments) {_			if (!isDestroyed) {_				MemorySegment segment__				while ((segment = availableMemorySegments.poll()) != null) {_					returnMemorySegment(segment)__				}__				BufferListener listener__				while ((listener = registeredListeners.poll()) != null) {_					listener.notifyBufferDestroyed()__				}__				isDestroyed = true__			}_		}__		try {_			networkBufferPool.destroyBufferPool(this)__		} catch (IOException e) {_			ExceptionUtils.rethrow(e)__		}_	};destroy,is,called,after,the,produce,or,consume,phase,of,a,task,finishes;override,public,void,lazy,destroy,synchronized,available,memory,segments,if,is,destroyed,memory,segment,segment,while,segment,available,memory,segments,poll,null,return,memory,segment,segment,buffer,listener,listener,while,listener,registered,listeners,poll,null,listener,notify,buffer,destroyed,is,destroyed,true,try,network,buffer,pool,destroy,buffer,pool,this,catch,ioexception,e,exception,utils,rethrow,e
LocalBufferPool -> @Override 	public void lazyDestroy();1543328832;Destroy is called after the produce or consume phase of a task finishes.;@Override_	public void lazyDestroy() {_		_		synchronized (availableMemorySegments) {_			if (!isDestroyed) {_				MemorySegment segment__				while ((segment = availableMemorySegments.poll()) != null) {_					returnMemorySegment(segment)__				}__				BufferListener listener__				while ((listener = registeredListeners.poll()) != null) {_					listener.notifyBufferDestroyed()__				}__				isDestroyed = true__			}_		}__		try {_			networkBufferPool.destroyBufferPool(this)__		} catch (IOException e) {_			ExceptionUtils.rethrow(e)__		}_	};destroy,is,called,after,the,produce,or,consume,phase,of,a,task,finishes;override,public,void,lazy,destroy,synchronized,available,memory,segments,if,is,destroyed,memory,segment,segment,while,segment,available,memory,segments,poll,null,return,memory,segment,segment,buffer,listener,listener,while,listener,registered,listeners,poll,null,listener,notify,buffer,destroyed,is,destroyed,true,try,network,buffer,pool,destroy,buffer,pool,this,catch,ioexception,e,exception,utils,rethrow,e
LocalBufferPool -> LocalBufferPool( 		NetworkBufferPool networkBufferPool, 		int numberOfRequiredMemorySegments, 		int maxNumberOfMemorySegments, 		Optional<BufferPoolOwner> owner);1540301084;Local buffer pool based on the given <tt>networkBufferPool</tt> and <tt>bufferPoolOwner</tt>_with a minimal and maximal number of network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers_@param maxNumberOfMemorySegments_maximum number of network buffers to allocate_@param owner_the optional owner of this buffer pool to release memory when needed;LocalBufferPool(_		NetworkBufferPool networkBufferPool,_		int numberOfRequiredMemorySegments,_		int maxNumberOfMemorySegments,_		Optional<BufferPoolOwner> owner) {_		checkArgument(maxNumberOfMemorySegments >= numberOfRequiredMemorySegments,_			"Maximum number of memory segments (%s) should not be smaller than minimum (%s).",_			maxNumberOfMemorySegments, numberOfRequiredMemorySegments)___		checkArgument(maxNumberOfMemorySegments > 0,_			"Maximum number of memory segments (%s) should be larger than 0.",_			maxNumberOfMemorySegments)___		LOG.debug("Using a local buffer pool with {}-{} buffers",_			numberOfRequiredMemorySegments, maxNumberOfMemorySegments)___		this.networkBufferPool = networkBufferPool__		this.numberOfRequiredMemorySegments = numberOfRequiredMemorySegments__		this.currentPoolSize = numberOfRequiredMemorySegments__		this.maxNumberOfMemorySegments = maxNumberOfMemorySegments__		this.owner = owner__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,and,tt,buffer,pool,owner,tt,with,a,minimal,and,maximal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers,param,max,number,of,memory,segments,maximum,number,of,network,buffers,to,allocate,param,owner,the,optional,owner,of,this,buffer,pool,to,release,memory,when,needed;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,int,max,number,of,memory,segments,optional,buffer,pool,owner,owner,check,argument,max,number,of,memory,segments,number,of,required,memory,segments,maximum,number,of,memory,segments,s,should,not,be,smaller,than,minimum,s,max,number,of,memory,segments,number,of,required,memory,segments,check,argument,max,number,of,memory,segments,0,maximum,number,of,memory,segments,s,should,be,larger,than,0,max,number,of,memory,segments,log,debug,using,a,local,buffer,pool,with,buffers,number,of,required,memory,segments,max,number,of,memory,segments,this,network,buffer,pool,network,buffer,pool,this,number,of,required,memory,segments,number,of,required,memory,segments,this,current,pool,size,number,of,required,memory,segments,this,max,number,of,memory,segments,max,number,of,memory,segments,this,owner,owner
LocalBufferPool -> LocalBufferPool( 		NetworkBufferPool networkBufferPool, 		int numberOfRequiredMemorySegments, 		int maxNumberOfMemorySegments, 		Optional<BufferPoolOwner> owner);1543328832;Local buffer pool based on the given <tt>networkBufferPool</tt> and <tt>bufferPoolOwner</tt>_with a minimal and maximal number of network buffers being available.__@param networkBufferPool_global network buffer pool to get buffers from_@param numberOfRequiredMemorySegments_minimum number of network buffers_@param maxNumberOfMemorySegments_maximum number of network buffers to allocate_@param owner_the optional owner of this buffer pool to release memory when needed;LocalBufferPool(_		NetworkBufferPool networkBufferPool,_		int numberOfRequiredMemorySegments,_		int maxNumberOfMemorySegments,_		Optional<BufferPoolOwner> owner) {_		checkArgument(maxNumberOfMemorySegments >= numberOfRequiredMemorySegments,_			"Maximum number of memory segments (%s) should not be smaller than minimum (%s).",_			maxNumberOfMemorySegments, numberOfRequiredMemorySegments)___		checkArgument(maxNumberOfMemorySegments > 0,_			"Maximum number of memory segments (%s) should be larger than 0.",_			maxNumberOfMemorySegments)___		LOG.debug("Using a local buffer pool with {}-{} buffers",_			numberOfRequiredMemorySegments, maxNumberOfMemorySegments)___		this.networkBufferPool = networkBufferPool__		this.numberOfRequiredMemorySegments = numberOfRequiredMemorySegments__		this.currentPoolSize = numberOfRequiredMemorySegments__		this.maxNumberOfMemorySegments = maxNumberOfMemorySegments__		this.owner = owner__	};local,buffer,pool,based,on,the,given,tt,network,buffer,pool,tt,and,tt,buffer,pool,owner,tt,with,a,minimal,and,maximal,number,of,network,buffers,being,available,param,network,buffer,pool,global,network,buffer,pool,to,get,buffers,from,param,number,of,required,memory,segments,minimum,number,of,network,buffers,param,max,number,of,memory,segments,maximum,number,of,network,buffers,to,allocate,param,owner,the,optional,owner,of,this,buffer,pool,to,release,memory,when,needed;local,buffer,pool,network,buffer,pool,network,buffer,pool,int,number,of,required,memory,segments,int,max,number,of,memory,segments,optional,buffer,pool,owner,owner,check,argument,max,number,of,memory,segments,number,of,required,memory,segments,maximum,number,of,memory,segments,s,should,not,be,smaller,than,minimum,s,max,number,of,memory,segments,number,of,required,memory,segments,check,argument,max,number,of,memory,segments,0,maximum,number,of,memory,segments,s,should,be,larger,than,0,max,number,of,memory,segments,log,debug,using,a,local,buffer,pool,with,buffers,number,of,required,memory,segments,max,number,of,memory,segments,this,network,buffer,pool,network,buffer,pool,this,number,of,required,memory,segments,number,of,required,memory,segments,this,current,pool,size,number,of,required,memory,segments,this,max,number,of,memory,segments,max,number,of,memory,segments,this,owner,owner
