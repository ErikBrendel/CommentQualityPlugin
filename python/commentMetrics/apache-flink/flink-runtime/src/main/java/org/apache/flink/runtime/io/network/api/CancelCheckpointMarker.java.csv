commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public long getCheckpointId() {     return checkpointId. }
false;public;1;4;;// ------------------------------------------------------------------------ // These known and common event go through special code paths, rather than // through generic serialization. @Override public void write(DataOutputView out) throws IOException {     throw new UnsupportedOperationException("this method should never be called"). }
false;public;1;4;;@Override public void read(DataInputView in) throws IOException {     throw new UnsupportedOperationException("this method should never be called"). }
false;public;0;4;;// ------------------------------------------------------------------------ @Override public int hashCode() {     return (int) (checkpointId ^ (checkpointId >>> 32)). }
false;public;1;6;;@Override public boolean equals(Object other) {     return other != null && other.getClass() == CancelCheckpointMarker.class && this.checkpointId == ((CancelCheckpointMarker) other).checkpointId. }
false;public;0;4;;@Override public String toString() {     return "CancelCheckpointMarker " + checkpointId. }
