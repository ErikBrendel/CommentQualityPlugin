# id;timestamp;commentText;codeText;commentWords;codeWords
SnapshotStrategy -> RunnableFuture<S> performSnapshot( 		long checkpointId, 		long timestamp, 		CheckpointStreamFactory streamFactory, 		CheckpointOptions checkpointOptions) throws Exception_;1519568061;Operation that writes a snapshot into a stream that is provided by the given {@link CheckpointStreamFactory} and_returns a @{@link RunnableFuture} that gives a state handle to the snapshot. It is up to the implementation if_the operation is performed synchronous or asynchronous. In the later case, the returned Runnable must be executed_first before obtaining the handle.__@param checkpointId      The ID of the checkpoint._@param timestamp         The timestamp of the checkpoint._@param streamFactory     The factory that we can use for writing our state to streams._@param checkpointOptions Options for how to perform this checkpoint._@return A runnable future that will yield a {@link StateObject}.;RunnableFuture<S> performSnapshot(_		long checkpointId,_		long timestamp,_		CheckpointStreamFactory streamFactory,_		CheckpointOptions checkpointOptions) throws Exception_;operation,that,writes,a,snapshot,into,a,stream,that,is,provided,by,the,given,link,checkpoint,stream,factory,and,returns,a,link,runnable,future,that,gives,a,state,handle,to,the,snapshot,it,is,up,to,the,implementation,if,the,operation,is,performed,synchronous,or,asynchronous,in,the,later,case,the,returned,runnable,must,be,executed,first,before,obtaining,the,handle,param,checkpoint,id,the,id,of,the,checkpoint,param,timestamp,the,timestamp,of,the,checkpoint,param,stream,factory,the,factory,that,we,can,use,for,writing,our,state,to,streams,param,checkpoint,options,options,for,how,to,perform,this,checkpoint,return,a,runnable,future,that,will,yield,a,link,state,object;runnable,future,s,perform,snapshot,long,checkpoint,id,long,timestamp,checkpoint,stream,factory,stream,factory,checkpoint,options,checkpoint,options,throws,exception
SnapshotStrategy -> RunnableFuture<S> performSnapshot( 		long checkpointId, 		long timestamp, 		CheckpointStreamFactory streamFactory, 		CheckpointOptions checkpointOptions) throws Exception_;1534854671;Operation that writes a snapshot into a stream that is provided by the given {@link CheckpointStreamFactory} and_returns a @{@link RunnableFuture} that gives a state handle to the snapshot. It is up to the implementation if_the operation is performed synchronous or asynchronous. In the later case, the returned Runnable must be executed_first before obtaining the handle.__@param checkpointId      The ID of the checkpoint._@param timestamp         The timestamp of the checkpoint._@param streamFactory     The factory that we can use for writing our state to streams._@param checkpointOptions Options for how to perform this checkpoint._@return A runnable future that will yield a {@link StateObject}.;RunnableFuture<S> performSnapshot(_		long checkpointId,_		long timestamp,_		CheckpointStreamFactory streamFactory,_		CheckpointOptions checkpointOptions) throws Exception_;operation,that,writes,a,snapshot,into,a,stream,that,is,provided,by,the,given,link,checkpoint,stream,factory,and,returns,a,link,runnable,future,that,gives,a,state,handle,to,the,snapshot,it,is,up,to,the,implementation,if,the,operation,is,performed,synchronous,or,asynchronous,in,the,later,case,the,returned,runnable,must,be,executed,first,before,obtaining,the,handle,param,checkpoint,id,the,id,of,the,checkpoint,param,timestamp,the,timestamp,of,the,checkpoint,param,stream,factory,the,factory,that,we,can,use,for,writing,our,state,to,streams,param,checkpoint,options,options,for,how,to,perform,this,checkpoint,return,a,runnable,future,that,will,yield,a,link,state,object;runnable,future,s,perform,snapshot,long,checkpoint,id,long,timestamp,checkpoint,stream,factory,stream,factory,checkpoint,options,checkpoint,options,throws,exception
