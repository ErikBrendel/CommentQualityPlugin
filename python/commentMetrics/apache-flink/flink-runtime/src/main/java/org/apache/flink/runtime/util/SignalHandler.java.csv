# id;timestamp;commentText;codeText;commentWords;codeWords
SignalHandler -> public static void register(final Logger LOG);1426156417;Register some signal handlers.__@param LOG The slf4j logger;public static void register(final Logger LOG) {_		if (registered) {_			throw new IllegalStateException("Can't re-install the signal handlers.")__		}_		registered = true__		StringBuilder bld = new StringBuilder()__		bld.append("registered UNIX signal handlers for [")__		final String[] SIGNALS = { "TERM", "HUP", "INT" }__		String separator = ""__		for (String signalName : SIGNALS) {_			try {_				new Handler(signalName, LOG)__				bld.append(separator)__				bld.append(signalName)__				separator = ", "__			} catch (Exception e) {_				LOG.debug("Error while registering signal handler", e)__			}_		}_		bld.append("]")__		LOG.info(bld.toString())__	};register,some,signal,handlers,param,log,the,slf4j,logger;public,static,void,register,final,logger,log,if,registered,throw,new,illegal,state,exception,can,t,re,install,the,signal,handlers,registered,true,string,builder,bld,new,string,builder,bld,append,registered,unix,signal,handlers,for,final,string,signals,term,hup,int,string,separator,for,string,signal,name,signals,try,new,handler,signal,name,log,bld,append,separator,bld,append,signal,name,separator,catch,exception,e,log,debug,error,while,registering,signal,handler,e,bld,append,log,info,bld,to,string
SignalHandler -> public static void register(final Logger LOG);1432650142;Register some signal handlers.__@param LOG The slf4j logger;public static void register(final Logger LOG) {_		if (registered) {_			throw new IllegalStateException("Can't re-install the signal handlers.")__		}_		registered = true__		StringBuilder bld = new StringBuilder()__		bld.append("registered UNIX signal handlers for [")__		final String[] SIGNALS = { "TERM", "HUP", "INT" }__		String separator = ""__		for (String signalName : SIGNALS) {_			try {_				new Handler(signalName, LOG)__				bld.append(separator)__				bld.append(signalName)__				separator = ", "__			} catch (Exception e) {_				LOG.debug("Error while registering signal handler", e)__			}_		}_		bld.append("]")__		LOG.info(bld.toString())__	};register,some,signal,handlers,param,log,the,slf4j,logger;public,static,void,register,final,logger,log,if,registered,throw,new,illegal,state,exception,can,t,re,install,the,signal,handlers,registered,true,string,builder,bld,new,string,builder,bld,append,registered,unix,signal,handlers,for,final,string,signals,term,hup,int,string,separator,for,string,signal,name,signals,try,new,handler,signal,name,log,bld,append,separator,bld,append,signal,name,separator,catch,exception,e,log,debug,error,while,registering,signal,handler,e,bld,append,log,info,bld,to,string
SignalHandler -> public static void register(final Logger LOG);1448465279;Register some signal handlers.__@param LOG The slf4j logger;public static void register(final Logger LOG) {_		if (registered) {_			throw new IllegalStateException("Can't re-install the signal handlers.")__		}_		registered = true__		StringBuilder bld = new StringBuilder()__		bld.append("registered UNIX signal handlers for [")__		final String[] SIGNALS = { "TERM", "HUP", "INT" }__		String separator = ""__		for (String signalName : SIGNALS) {_			try {_				new Handler(signalName, LOG)__				bld.append(separator)__				bld.append(signalName)__				separator = ", "__			} catch (Exception e) {_				LOG.debug("Error while registering signal handler", e)__			}_		}_		bld.append("]")__		LOG.info(bld.toString())__	};register,some,signal,handlers,param,log,the,slf4j,logger;public,static,void,register,final,logger,log,if,registered,throw,new,illegal,state,exception,can,t,re,install,the,signal,handlers,registered,true,string,builder,bld,new,string,builder,bld,append,registered,unix,signal,handlers,for,final,string,signals,term,hup,int,string,separator,for,string,signal,name,signals,try,new,handler,signal,name,log,bld,append,separator,bld,append,signal,name,separator,catch,exception,e,log,debug,error,while,registering,signal,handler,e,bld,append,log,info,bld,to,string
SignalHandler -> public static void register(final Logger LOG);1449074663;Register some signal handlers.__@param LOG The slf4j logger;public static void register(final Logger LOG) {_		if (registered) {_			throw new IllegalStateException("Can't re-install the signal handlers.")__		}_		registered = true__		StringBuilder bld = new StringBuilder()__		bld.append("registered UNIX signal handlers for [")__		final String[] SIGNALS = { "TERM", "HUP", "INT" }__		String separator = ""__		for (String signalName : SIGNALS) {_			try {_				new Handler(signalName, LOG)__				bld.append(separator)__				bld.append(signalName)__				separator = ", "__			} catch (Exception e) {_				LOG.debug("Error while registering signal handler", e)__			}_		}_		bld.append("]")__		LOG.info(bld.toString())__	};register,some,signal,handlers,param,log,the,slf4j,logger;public,static,void,register,final,logger,log,if,registered,throw,new,illegal,state,exception,can,t,re,install,the,signal,handlers,registered,true,string,builder,bld,new,string,builder,bld,append,registered,unix,signal,handlers,for,final,string,signals,term,hup,int,string,separator,for,string,signal,name,signals,try,new,handler,signal,name,log,bld,append,separator,bld,append,signal,name,separator,catch,exception,e,log,debug,error,while,registering,signal,handler,e,bld,append,log,info,bld,to,string
SignalHandler -> public static void register(final Logger LOG);1451574493;Register some signal handlers.__@param LOG The slf4j logger;public static void register(final Logger LOG) {_		synchronized (SignalHandler.class) {_			if (registered) {_				return__			}_			registered = true___			final String[] SIGNALS = { "TERM", "HUP", "INT" }__			_			StringBuilder bld = new StringBuilder()__			bld.append("Registered UNIX signal handlers for [")__			_			String separator = ""__			for (String signalName : SIGNALS) {_				try {_					new Handler(signalName, LOG)__					bld.append(separator)__					bld.append(signalName)__					separator = ", "__				} catch (Exception e) {_					LOG.info("Error while registering signal handler", e)__				}_			}_			bld.append("]")__			LOG.info(bld.toString())__		}_	};register,some,signal,handlers,param,log,the,slf4j,logger;public,static,void,register,final,logger,log,synchronized,signal,handler,class,if,registered,return,registered,true,final,string,signals,term,hup,int,string,builder,bld,new,string,builder,bld,append,registered,unix,signal,handlers,for,string,separator,for,string,signal,name,signals,try,new,handler,signal,name,log,bld,append,separator,bld,append,signal,name,separator,catch,exception,e,log,info,error,while,registering,signal,handler,e,bld,append,log,info,bld,to,string
SignalHandler -> public static void register(final Logger LOG);1495289103;Register some signal handlers.__@param LOG The slf4j logger;public static void register(final Logger LOG) {_		synchronized (SignalHandler.class) {_			if (registered) {_				return__			}_			registered = true___			final String[] SIGNALS = OperatingSystem.isWindows()_				? new String[]{ "TERM", "INT"}_				: new String[]{ "TERM", "HUP", "INT" }__			_			StringBuilder bld = new StringBuilder()__			bld.append("Registered UNIX signal handlers for [")__			_			String separator = ""__			for (String signalName : SIGNALS) {_				try {_					new Handler(signalName, LOG)__					bld.append(separator)__					bld.append(signalName)__					separator = ", "__				} catch (Exception e) {_					LOG.info("Error while registering signal handler", e)__				}_			}_			bld.append("]")__			LOG.info(bld.toString())__		}_	};register,some,signal,handlers,param,log,the,slf4j,logger;public,static,void,register,final,logger,log,synchronized,signal,handler,class,if,registered,return,registered,true,final,string,signals,operating,system,is,windows,new,string,term,int,new,string,term,hup,int,string,builder,bld,new,string,builder,bld,append,registered,unix,signal,handlers,for,string,separator,for,string,signal,name,signals,try,new,handler,signal,name,log,bld,append,separator,bld,append,signal,name,separator,catch,exception,e,log,info,error,while,registering,signal,handler,e,bld,append,log,info,bld,to,string
SignalHandler -> Handler -> @Override 		public void handle(Signal signal);1426156417;Handle an incoming signal.__@param signal    The incoming signal;@Override_		public void handle(Signal signal) {_			LOG.error("RECEIVED SIGNAL " + signal.getNumber() + ": SIG" + signal.getName())__			prevHandler.handle(signal)__		};handle,an,incoming,signal,param,signal,the,incoming,signal;override,public,void,handle,signal,signal,log,error,received,signal,signal,get,number,sig,signal,get,name,prev,handler,handle,signal
SignalHandler -> Handler -> @Override 		public void handle(Signal signal);1432650142;Handle an incoming signal.__@param signal    The incoming signal;@Override_		public void handle(Signal signal) {_			LOG.error("RECEIVED SIGNAL " + signal.getNumber() + ": SIG" + signal.getName())__			prevHandler.handle(signal)__		};handle,an,incoming,signal,param,signal,the,incoming,signal;override,public,void,handle,signal,signal,log,error,received,signal,signal,get,number,sig,signal,get,name,prev,handler,handle,signal
SignalHandler -> Handler -> @Override 		public void handle(Signal signal);1448465279;Handle an incoming signal.__@param signal    The incoming signal;@Override_		public void handle(Signal signal) {_			LOG.error("RECEIVED SIGNAL " + signal.getNumber() + ": SIG" + signal.getName())__			LOG.error("This JVM will shut down because it was killed from the outside.")__			prevHandler.handle(signal)__		};handle,an,incoming,signal,param,signal,the,incoming,signal;override,public,void,handle,signal,signal,log,error,received,signal,signal,get,number,sig,signal,get,name,log,error,this,jvm,will,shut,down,because,it,was,killed,from,the,outside,prev,handler,handle,signal
SignalHandler -> Handler -> @Override 		public void handle(Signal signal);1449074663;Handle an incoming signal.__@param signal    The incoming signal;@Override_		public void handle(Signal signal) {_			LOG.info("RECEIVED SIGNAL {}: SIG{}. Shutting down as requested.",_				signal.getNumber(),_				signal.getName())__			prevHandler.handle(signal)__		};handle,an,incoming,signal,param,signal,the,incoming,signal;override,public,void,handle,signal,signal,log,info,received,signal,sig,shutting,down,as,requested,signal,get,number,signal,get,name,prev,handler,handle,signal
SignalHandler -> Handler -> @Override 		public void handle(Signal signal);1451574493;Handle an incoming signal.__@param signal    The incoming signal;@Override_		public void handle(Signal signal) {_			LOG.info("RECEIVED SIGNAL {}: SIG{}. Shutting down as requested.",_				signal.getNumber(),_				signal.getName())__			prevHandler.handle(signal)__		};handle,an,incoming,signal,param,signal,the,incoming,signal;override,public,void,handle,signal,signal,log,info,received,signal,sig,shutting,down,as,requested,signal,get,number,signal,get,name,prev,handler,handle,signal
SignalHandler -> Handler -> @Override 		public void handle(Signal signal);1495289103;Handle an incoming signal.__@param signal    The incoming signal;@Override_		public void handle(Signal signal) {_			LOG.info("RECEIVED SIGNAL {}: SIG{}. Shutting down as requested.",_				signal.getNumber(),_				signal.getName())__			prevHandler.handle(signal)__		};handle,an,incoming,signal,param,signal,the,incoming,signal;override,public,void,handle,signal,signal,log,info,received,signal,sig,shutting,down,as,requested,signal,get,number,signal,get,name,prev,handler,handle,signal
