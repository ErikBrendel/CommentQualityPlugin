commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Callback method which is called by the {@link LeaderElectionService} upon selecting this  * instance as the new leader. The method is called with the new leader session ID.  *  * @param leaderSessionID New leader session ID  */ ;/**  * Callback method which is called by the {@link LeaderElectionService} upon selecting this  * instance as the new leader. The method is called with the new leader session ID.  *  * @param leaderSessionID New leader session ID  */ void grantLeadership(UUID leaderSessionID).
true;;0;1;/**  * Callback method which is called by the {@link LeaderElectionService} upon revoking the  * leadership of a former leader. This might happen in case that multiple contenders have  * been granted leadership.  */ ;/**  * Callback method which is called by the {@link LeaderElectionService} upon revoking the  * leadership of a former leader. This might happen in case that multiple contenders have  * been granted leadership.  */ void revokeLeadership().
true;;0;1;/**  * Returns the address of the {@link LeaderContender} under which other instances can connect  * to it.  *  * @return Address of this contender.  */ ;/**  * Returns the address of the {@link LeaderContender} under which other instances can connect  * to it.  *  * @return Address of this contender.  */ String getAddress().
true;;1;1;/**  * Callback method which is called by {@link LeaderElectionService} in case of an error in the  * service thread.  *  * @param exception Caught exception  */ ;/**  * Callback method which is called by {@link LeaderElectionService} in case of an error in the  * service thread.  *  * @param exception Caught exception  */ void handleError(Exception exception).
