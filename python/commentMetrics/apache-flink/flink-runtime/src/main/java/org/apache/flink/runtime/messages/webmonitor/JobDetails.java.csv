commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;// ------------------------------------------------------------------------ public JobID getJobId() {     return jobId. }
false;public;0;3;;public String getJobName() {     return jobName. }
false;public;0;3;;public long getStartTime() {     return startTime. }
false;public;0;3;;public long getEndTime() {     return endTime. }
false;public;0;3;;public long getDuration() {     return duration. }
false;public;0;3;;public JobStatus getStatus() {     return status. }
false;public;0;3;;public long getLastUpdateTime() {     return lastUpdateTime. }
false;public;0;3;;public int getNumTasks() {     return numTasks. }
false;public;0;3;;public int[] getTasksPerState() {     return tasksPerState. }
false;public;1;21;;// ------------------------------------------------------------------------ @Override public boolean equals(Object o) {     if (this == o) {         return true.     } else if (o != null && o.getClass() == JobDetails.class) {         JobDetails that = (JobDetails) o.         return this.endTime == that.endTime && this.lastUpdateTime == that.lastUpdateTime && this.numTasks == that.numTasks && this.startTime == that.startTime && this.status == that.status && this.jobId.equals(that.jobId) && this.jobName.equals(that.jobName) && Arrays.equals(this.tasksPerState, that.tasksPerState).     } else {         return false.     } }
false;public;0;12;;@Override public int hashCode() {     int result = jobId.hashCode().     result = 31 * result + jobName.hashCode().     result = 31 * result + (int) (startTime ^ (startTime >>> 32)).     result = 31 * result + (int) (endTime ^ (endTime >>> 32)).     result = 31 * result + status.hashCode().     result = 31 * result + (int) (lastUpdateTime ^ (lastUpdateTime >>> 32)).     result = 31 * result + Arrays.hashCode(tasksPerState).     result = 31 * result + numTasks.     return result. }
false;public;0;13;;@Override public String toString() {     return "JobDetails {" + "jobId=" + jobId + ", jobName='" + jobName + '\'' + ", startTime=" + startTime + ", endTime=" + endTime + ", status=" + status + ", lastUpdateTime=" + lastUpdateTime + ", numVerticesPerExecutionState=" + Arrays.toString(tasksPerState) + ", numTasks=" + numTasks + '}'. }
false;public;3;29;;@Override public void serialize(JobDetails jobDetails, JsonGenerator jsonGenerator, SerializerProvider serializerProvider) throws IOException {     jsonGenerator.writeStartObject().     jsonGenerator.writeStringField(FIELD_NAME_JOB_ID, jobDetails.getJobId().toString()).     jsonGenerator.writeStringField(FIELD_NAME_JOB_NAME, jobDetails.getJobName()).     jsonGenerator.writeStringField(FIELD_NAME_STATUS, jobDetails.getStatus().name()).     jsonGenerator.writeNumberField(FIELD_NAME_START_TIME, jobDetails.getStartTime()).     jsonGenerator.writeNumberField(FIELD_NAME_END_TIME, jobDetails.getEndTime()).     jsonGenerator.writeNumberField(FIELD_NAME_DURATION, jobDetails.getDuration()).     jsonGenerator.writeNumberField(FIELD_NAME_LAST_MODIFICATION, jobDetails.getLastUpdateTime()).     jsonGenerator.writeObjectFieldStart("tasks").     jsonGenerator.writeNumberField(FIELD_NAME_TOTAL_NUMBER_TASKS, jobDetails.getNumTasks()).     final int[] perState = jobDetails.getTasksPerState().     for (ExecutionState executionState : ExecutionState.values()) {         jsonGenerator.writeNumberField(executionState.name().toLowerCase(), perState[executionState.ordinal()]).     }     jsonGenerator.writeEndObject().     jsonGenerator.writeEndObject(). }
false;public;2;33;;@Override public JobDetails deserialize(JsonParser jsonParser, DeserializationContext deserializationContext) throws IOException {     JsonNode rootNode = jsonParser.readValueAsTree().     JobID jobId = JobID.fromHexString(rootNode.get(FIELD_NAME_JOB_ID).textValue()).     String jobName = rootNode.get(FIELD_NAME_JOB_NAME).textValue().     long startTime = rootNode.get(FIELD_NAME_START_TIME).longValue().     long endTime = rootNode.get(FIELD_NAME_END_TIME).longValue().     long duration = rootNode.get(FIELD_NAME_DURATION).longValue().     JobStatus jobStatus = JobStatus.valueOf(rootNode.get(FIELD_NAME_STATUS).textValue()).     long lastUpdateTime = rootNode.get(FIELD_NAME_LAST_MODIFICATION).longValue().     JsonNode tasksNode = rootNode.get("tasks").     int numTasks = tasksNode.get(FIELD_NAME_TOTAL_NUMBER_TASKS).intValue().     int[] numVerticesPerExecutionState = new int[ExecutionState.values().length].     for (ExecutionState executionState : ExecutionState.values()) {         numVerticesPerExecutionState[executionState.ordinal()] = tasksNode.get(executionState.name().toLowerCase()).intValue().     }     return new JobDetails(jobId, jobName, startTime, endTime, duration, jobStatus, lastUpdateTime, numVerticesPerExecutionState, numTasks). }
