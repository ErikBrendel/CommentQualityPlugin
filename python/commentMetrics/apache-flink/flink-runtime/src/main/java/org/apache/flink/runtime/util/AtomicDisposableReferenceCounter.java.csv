# id;timestamp;commentText;codeText;commentWords;codeWords
AtomicDisposableReferenceCounter -> public boolean incrementReferenceCounter();1418390203;Increments the reference count and returns whether it was successful._<p>_If the method returns <code>false</code>, the counter has already been_disposed. Otherwise it returns <code>true</code>.;public boolean incrementReferenceCounter() {_		synchronized (lock) {_			if (isDisposed) {_				return false__			}__			referenceCounter++__			return true__		}_	};increments,the,reference,count,and,returns,whether,it,was,successful,p,if,the,method,returns,code,false,code,the,counter,has,already,been,disposed,otherwise,it,returns,code,true,code;public,boolean,increment,reference,counter,synchronized,lock,if,is,disposed,return,false,reference,counter,return,true
AtomicDisposableReferenceCounter -> public boolean incrementReferenceCounter();1421050512;Increments the reference count and returns whether it was successful._<p>_If the method returns <code>false</code>, the counter has already been_disposed. Otherwise it returns <code>true</code>.;public boolean incrementReferenceCounter() {_		synchronized (lock) {_			if (isDisposed) {_				return false__			}__			referenceCounter++__			return true__		}_	};increments,the,reference,count,and,returns,whether,it,was,successful,p,if,the,method,returns,code,false,code,the,counter,has,already,been,disposed,otherwise,it,returns,code,true,code;public,boolean,increment,reference,counter,synchronized,lock,if,is,disposed,return,false,reference,counter,return,true
AtomicDisposableReferenceCounter -> public boolean incrementReferenceCounter();1424858499;Increments the reference count and returns whether it was successful._<p>_If the method returns <code>false</code>, the counter has already been_disposed. Otherwise it returns <code>true</code>.;public boolean incrementReferenceCounter() {_		synchronized (lock) {_			if (isDisposed) {_				return false__			}__			referenceCounter++__			return true__		}_	};increments,the,reference,count,and,returns,whether,it,was,successful,p,if,the,method,returns,code,false,code,the,counter,has,already,been,disposed,otherwise,it,returns,code,true,code;public,boolean,increment,reference,counter,synchronized,lock,if,is,disposed,return,false,reference,counter,return,true
AtomicDisposableReferenceCounter -> public boolean decrementReferenceCounter();1418390203;Decrements the reference count._<p>_If the method returns <code>true</code>, the decrement operation disposed_the counter. Otherwise it returns <code>false</code>.;public boolean decrementReferenceCounter() {_		synchronized (lock) {_			if (isDisposed) {_				return false__			}__			referenceCounter--___			if (referenceCounter == 0) {_				isDisposed = true__			}__			return isDisposed__		}_	};decrements,the,reference,count,p,if,the,method,returns,code,true,code,the,decrement,operation,disposed,the,counter,otherwise,it,returns,code,false,code;public,boolean,decrement,reference,counter,synchronized,lock,if,is,disposed,return,false,reference,counter,if,reference,counter,0,is,disposed,true,return,is,disposed
AtomicDisposableReferenceCounter -> public boolean decrementReferenceCounter();1421050512;Decrements the reference count._<p>_If the method returns <code>true</code>, the decrement operation disposed_the counter. Otherwise it returns <code>false</code>.;public boolean decrementReferenceCounter() {_		synchronized (lock) {_			if (isDisposed) {_				return false__			}__			referenceCounter--___			if (referenceCounter == 0) {_				isDisposed = true__			}__			return isDisposed__		}_	};decrements,the,reference,count,p,if,the,method,returns,code,true,code,the,decrement,operation,disposed,the,counter,otherwise,it,returns,code,false,code;public,boolean,decrement,reference,counter,synchronized,lock,if,is,disposed,return,false,reference,counter,if,reference,counter,0,is,disposed,true,return,is,disposed
AtomicDisposableReferenceCounter -> public boolean decrementReferenceCounter();1424858499;Decrements the reference count._<p>_If the method returns <code>true</code>, the decrement operation disposed_the counter. Otherwise it returns <code>false</code>.;public boolean decrementReferenceCounter() {_		synchronized (lock) {_			if (isDisposed) {_				return false__			}__			referenceCounter--___			if (referenceCounter <= 0) {_				isDisposed = true__			}__			return isDisposed__		}_	};decrements,the,reference,count,p,if,the,method,returns,code,true,code,the,decrement,operation,disposed,the,counter,otherwise,it,returns,code,false,code;public,boolean,decrement,reference,counter,synchronized,lock,if,is,disposed,return,false,reference,counter,if,reference,counter,0,is,disposed,true,return,is,disposed
