commented;modifiers;parameterAmount;loc;comment;code
true;public;0;10;/**  * Increments the reference count and returns whether it was successful.  * <p>  * If the method returns <code>false</code>, the counter has already been disposed. Otherwise it  * returns <code>true</code>.  */ ;/**  * Increments the reference count and returns whether it was successful.  * <p>  * If the method returns <code>false</code>, the counter has already been disposed. Otherwise it  * returns <code>true</code>.  */ public boolean increment() {     synchronized (lock) {         if (isDisposed) {             return false.         }         referenceCount++.         return true.     } }
true;public;0;15;/**  * Decrements the reference count and returns whether the reference counter entered the disposed  * state.  * <p>  * If the method returns <code>true</code>, the decrement operation disposed the counter.  * Otherwise it returns <code>false</code>.  */ ;/**  * Decrements the reference count and returns whether the reference counter entered the disposed  * state.  * <p>  * If the method returns <code>true</code>, the decrement operation disposed the counter.  * Otherwise it returns <code>false</code>.  */ public boolean decrement() {     synchronized (lock) {         if (isDisposed) {             return false.         }         referenceCount--.         if (referenceCount <= disposeOnReferenceCount) {             isDisposed = true.         }         return isDisposed.     } }
false;public;0;5;;public int get() {     synchronized (lock) {         return referenceCount.     } }
true;public;0;5;/**  * Returns whether the reference count has reached the disposed state.  */ ;/**  * Returns whether the reference count has reached the disposed state.  */ public boolean isDisposed() {     synchronized (lock) {         return isDisposed.     } }
false;public;0;9;;public boolean disposeIfNotUsed() {     synchronized (lock) {         if (referenceCount <= disposeOnReferenceCount) {             isDisposed = true.         }         return isDisposed.     } }
