commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;4;;@Override protected CheckpointingStatistics handleRequest(HandlerRequest<EmptyRequestBody, JobMessageParameters> request, AccessExecutionGraph executionGraph) throws RestHandlerException {     return createCheckpointingStatistics(executionGraph). }
false;public;1;12;;@Override public Collection<ArchivedJson> archiveJsonWithPath(AccessExecutionGraph graph) throws IOException {     ResponseBody json.     try {         json = createCheckpointingStatistics(graph).     } catch (RestHandlerException rhe) {         json = new ErrorResponseBody(rhe.getMessage()).     }     String path = getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY, graph.getJobID().toString()).     return Collections.singletonList(new ArchivedJson(path, json)). }
false;private,static;1;87;;private static CheckpointingStatistics createCheckpointingStatistics(AccessExecutionGraph executionGraph) throws RestHandlerException {     final CheckpointStatsSnapshot checkpointStatsSnapshot = executionGraph.getCheckpointStatsSnapshot().     if (checkpointStatsSnapshot == null) {         throw new RestHandlerException("Checkpointing has not been enabled.", HttpResponseStatus.NOT_FOUND).     } else {         final CheckpointStatsCounts checkpointStatsCounts = checkpointStatsSnapshot.getCounts().         final CheckpointingStatistics.Counts counts = new CheckpointingStatistics.Counts(checkpointStatsCounts.getNumberOfRestoredCheckpoints(), checkpointStatsCounts.getTotalNumberOfCheckpoints(), checkpointStatsCounts.getNumberOfInProgressCheckpoints(), checkpointStatsCounts.getNumberOfCompletedCheckpoints(), checkpointStatsCounts.getNumberOfFailedCheckpoints()).         final CompletedCheckpointStatsSummary checkpointStatsSummary = checkpointStatsSnapshot.getSummaryStats().         final MinMaxAvgStats stateSize = checkpointStatsSummary.getStateSizeStats().         final MinMaxAvgStats duration = checkpointStatsSummary.getEndToEndDurationStats().         final MinMaxAvgStats alignment = checkpointStatsSummary.getAlignmentBufferedStats().         final CheckpointingStatistics.Summary summary = new CheckpointingStatistics.Summary(new MinMaxAvgStatistics(stateSize.getMinimum(), stateSize.getMaximum(), stateSize.getAverage()), new MinMaxAvgStatistics(duration.getMinimum(), duration.getMaximum(), duration.getAverage()), new MinMaxAvgStatistics(alignment.getMinimum(), alignment.getMaximum(), alignment.getAverage())).         final CheckpointStatsHistory checkpointStatsHistory = checkpointStatsSnapshot.getHistory().         final CheckpointStatistics.CompletedCheckpointStatistics completed = checkpointStatsHistory.getLatestCompletedCheckpoint() != null ? (CheckpointStatistics.CompletedCheckpointStatistics) CheckpointStatistics.generateCheckpointStatistics(checkpointStatsHistory.getLatestCompletedCheckpoint(), false) : null.         final CheckpointStatistics.CompletedCheckpointStatistics savepoint = checkpointStatsHistory.getLatestSavepoint() != null ? (CheckpointStatistics.CompletedCheckpointStatistics) CheckpointStatistics.generateCheckpointStatistics(checkpointStatsHistory.getLatestSavepoint(), false) : null.         final CheckpointStatistics.FailedCheckpointStatistics failed = checkpointStatsHistory.getLatestFailedCheckpoint() != null ? (CheckpointStatistics.FailedCheckpointStatistics) CheckpointStatistics.generateCheckpointStatistics(checkpointStatsHistory.getLatestFailedCheckpoint(), false) : null.         final RestoredCheckpointStats restoredCheckpointStats = checkpointStatsSnapshot.getLatestRestoredCheckpoint().         final CheckpointingStatistics.RestoredCheckpointStatistics restored.         if (restoredCheckpointStats == null) {             restored = null.         } else {             restored = new CheckpointingStatistics.RestoredCheckpointStatistics(restoredCheckpointStats.getCheckpointId(), restoredCheckpointStats.getRestoreTimestamp(), restoredCheckpointStats.getProperties().isSavepoint(), restoredCheckpointStats.getExternalPath()).         }         final CheckpointingStatistics.LatestCheckpoints latestCheckpoints = new CheckpointingStatistics.LatestCheckpoints(completed, savepoint, failed, restored).         final List<CheckpointStatistics> history = new ArrayList<>(16).         for (AbstractCheckpointStats abstractCheckpointStats : checkpointStatsSnapshot.getHistory().getCheckpoints()) {             history.add(CheckpointStatistics.generateCheckpointStatistics(abstractCheckpointStats, false)).         }         return new CheckpointingStatistics(counts, summary, latestCheckpoints, history).     } }
