commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * @return The serializer for the key the state is associated to.  */ ;/**  * @return The serializer for the key the state is associated to.  */ public TypeSerializer<K> getKeySerializer() {     return keySerializer. }
true;public;0;3;/**  * @return The serializer for the namespace the state is associated to.  */ ;/**  * @return The serializer for the namespace the state is associated to.  */ public TypeSerializer<N> getNamespaceSerializer() {     return namespaceSerializer. }
true;public;0;3;/**  * @return The serializer for the values kept in the state.  */ ;/**  * @return The serializer for the values kept in the state.  */ public TypeSerializer<V> getStateValueSerializer() {     return stateValueSerializer. }
true;public;0;16;/**  * Creates a deep copy of the current {@link KvStateInfo} by duplicating  * all the included serializers.  *  * <p>This method assumes correct implementation of the {@link TypeSerializer#duplicate()}  * method of the included serializers.  */ ;/**  * Creates a deep copy of the current {@link KvStateInfo} by duplicating  * all the included serializers.  *  * <p>This method assumes correct implementation of the {@link TypeSerializer#duplicate()}  * method of the included serializers.  */ public KvStateInfo<K, N, V> duplicate() {     final TypeSerializer<K> dupKeySerializer = keySerializer.duplicate().     final TypeSerializer<N> dupNamespaceSerializer = namespaceSerializer.duplicate().     final TypeSerializer<V> dupSVSerializer = stateValueSerializer.duplicate().     if (dupKeySerializer == keySerializer && dupNamespaceSerializer == namespaceSerializer && dupSVSerializer == stateValueSerializer) {         return this.     }     return new KvStateInfo<>(dupKeySerializer, dupNamespaceSerializer, dupSVSerializer). }
false;public;1;13;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     KvStateInfo<?, ?, ?> stateInfo = (KvStateInfo<?, ?, ?>) o.     return Objects.equals(keySerializer, stateInfo.keySerializer) && Objects.equals(namespaceSerializer, stateInfo.namespaceSerializer) && Objects.equals(stateValueSerializer, stateInfo.stateValueSerializer). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(keySerializer, namespaceSerializer, stateValueSerializer). }
