commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Gets the next memory segment that has been written and is available again.  * This method blocks until such a segment is available, or until an error occurs in the writer, or the  * writer is closed.  * <p>  * NOTE: If this method is invoked without any segment ever returning (for example, because the  * {@link #writeBlock} method has not been invoked accordingly), the method may block  * forever.  *  * @return The next memory segment from the writers's return queue.  * @throws IOException Thrown, if an I/O error occurs in the writer while waiting for the request to return.  */ ;/**  * Gets the next memory segment that has been written and is available again.  * This method blocks until such a segment is available, or until an error occurs in the writer, or the  * writer is closed.  * <p>  * NOTE: If this method is invoked without any segment ever returning (for example, because the  * {@link #writeBlock} method has not been invoked accordingly), the method may block  * forever.  *  * @return The next memory segment from the writers's return queue.  * @throws IOException Thrown, if an I/O error occurs in the writer while waiting for the request to return.  */ T getNextReturnedBlock() throws IOException.
true;;0;1;/**  * Gets the queue in which the memory segments are queued after the asynchronous write  * is completed  *  * @return The queue with the written memory segments.  */ ;/**  * Gets the queue in which the memory segments are queued after the asynchronous write  * is completed  *  * @return The queue with the written memory segments.  */ LinkedBlockingQueue<T> getReturnQueue().
