commented;modifiers;parameterAmount;loc;comment;code
false;public;1;22;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     JobDetailsInfo that = (JobDetailsInfo) o.     return isStoppable == that.isStoppable && startTime == that.startTime && endTime == that.endTime && duration == that.duration && now == that.now && Objects.equals(jobId, that.jobId) && Objects.equals(name, that.name) && jobStatus == that.jobStatus && Objects.equals(timestamps, that.timestamps) && Objects.equals(jobVertexInfos, that.jobVertexInfos) && Objects.equals(jobVerticesPerState, that.jobVerticesPerState) && Objects.equals(jsonPlan, that.jsonPlan). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(jobId, name, isStoppable, jobStatus, startTime, endTime, duration, now, timestamps, jobVertexInfos, jobVerticesPerState, jsonPlan). }
false;public;0;4;;@JsonIgnore public JobID getJobId() {     return jobId. }
false;public;0;4;;@JsonIgnore public String getName() {     return name. }
false;public;0;4;;@JsonIgnore public boolean isStoppable() {     return isStoppable. }
false;public;0;4;;@JsonIgnore public JobStatus getJobStatus() {     return jobStatus. }
false;public;0;4;;@JsonIgnore public long getStartTime() {     return startTime. }
false;public;0;4;;@JsonIgnore public long getEndTime() {     return endTime. }
false;public;0;4;;@JsonIgnore public long getDuration() {     return duration. }
false;public;0;4;;@JsonIgnore public long getNow() {     return now. }
false;public;0;4;;@JsonIgnore public Map<JobStatus, Long> getTimestamps() {     return timestamps. }
false;public;0;4;;@JsonIgnore public Collection<JobVertexDetailsInfo> getJobVertexInfos() {     return jobVertexInfos. }
false;public;0;4;;@JsonIgnore public Map<ExecutionState, Integer> getJobVerticesPerState() {     return jobVerticesPerState. }
false;public;0;4;;@JsonIgnore public String getJsonPlan() {     return jsonPlan. }
false;public;0;4;;@JsonIgnore public JobVertexID getJobVertexID() {     return jobVertexID. }
false;public;0;4;;@JsonIgnore public String getName() {     return name. }
false;public;0;4;;@JsonIgnore public int getParallelism() {     return parallelism. }
false;public;0;4;;@JsonIgnore public ExecutionState getExecutionState() {     return executionState. }
false;public;0;4;;@JsonIgnore public long getStartTime() {     return startTime. }
false;public;0;4;;@JsonIgnore public long getEndTime() {     return endTime. }
false;public;0;4;;@JsonIgnore public long getDuration() {     return duration. }
false;public;0;4;;@JsonIgnore public Map<ExecutionState, Integer> getTasksPerState() {     return tasksPerState. }
false;public;0;4;;@JsonIgnore public IOMetricsInfo getJobVertexMetrics() {     return jobVertexMetrics. }
false;public;1;19;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     JobVertexDetailsInfo that = (JobVertexDetailsInfo) o.     return parallelism == that.parallelism && startTime == that.startTime && endTime == that.endTime && duration == that.duration && Objects.equals(jobVertexID, that.jobVertexID) && Objects.equals(name, that.name) && executionState == that.executionState && Objects.equals(tasksPerState, that.tasksPerState) && Objects.equals(jobVertexMetrics, that.jobVertexMetrics). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(jobVertexID, name, parallelism, executionState, startTime, endTime, duration, tasksPerState, jobVertexMetrics). }
