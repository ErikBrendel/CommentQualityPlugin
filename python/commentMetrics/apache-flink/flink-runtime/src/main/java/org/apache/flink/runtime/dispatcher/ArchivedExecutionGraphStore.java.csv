commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Returns the current number of stored {@link ArchivedExecutionGraph}.  *  * @return Current number of stored {@link ArchivedExecutionGraph}  */ ;/**  * Returns the current number of stored {@link ArchivedExecutionGraph}.  *  * @return Current number of stored {@link ArchivedExecutionGraph}  */ int size().
true;;1;2;/**  * Get the {@link ArchivedExecutionGraph} for the given job id. Null if it isn't stored.  *  * @param jobId identifying the serializable execution graph to retrieve  * @return The stored serializable execution graph or null  */ ;/**  * Get the {@link ArchivedExecutionGraph} for the given job id. Null if it isn't stored.  *  * @param jobId identifying the serializable execution graph to retrieve  * @return The stored serializable execution graph or null  */ @Nullable ArchivedExecutionGraph get(JobID jobId).
true;;1;1;/**  * Store the given {@link ArchivedExecutionGraph} in the store.  *  * @param archivedExecutionGraph to store  * @throws IOException if the serializable execution graph could not be stored in the store  */ ;/**  * Store the given {@link ArchivedExecutionGraph} in the store.  *  * @param archivedExecutionGraph to store  * @throws IOException if the serializable execution graph could not be stored in the store  */ void put(ArchivedExecutionGraph archivedExecutionGraph) throws IOException.
true;;0;1;/**  * Return the {@link JobsOverview} for all stored/past jobs.  *  * @return Jobs overview for all stored/past jobs  */ ;/**  * Return the {@link JobsOverview} for all stored/past jobs.  *  * @return Jobs overview for all stored/past jobs  */ JobsOverview getStoredJobsOverview().
true;;0;1;/**  * Return the collection of {@link JobDetails} of all currently stored jobs.  *  * @return Collection of job details of all currently stored jobs  */ ;/**  * Return the collection of {@link JobDetails} of all currently stored jobs.  *  * @return Collection of job details of all currently stored jobs  */ Collection<JobDetails> getAvailableJobDetails().
true;;1;2;/**  * Return the {@link JobDetails}} for the given job.  *  * @param jobId identifying the job for which to retrieve the {@link JobDetails}  * @return {@link JobDetails} of the requested job or null if the job is not available  */ ;/**  * Return the {@link JobDetails}} for the given job.  *  * @param jobId identifying the job for which to retrieve the {@link JobDetails}  * @return {@link JobDetails} of the requested job or null if the job is not available  */ @Nullable JobDetails getAvailableJobDetails(JobID jobId).
