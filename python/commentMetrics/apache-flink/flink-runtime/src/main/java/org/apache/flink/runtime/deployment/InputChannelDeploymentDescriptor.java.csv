# id;timestamp;commentText;codeText;commentWords;codeWords
InputChannelDeploymentDescriptor -> public static InputChannelDeploymentDescriptor[] fromEdges( 			ExecutionEdge[] edges, 			ResourceID consumerResourceId, 			boolean allowLazyDeployment) throws ExecutionGraphException;1513201052;Creates an input channel deployment descriptor for each partition.;public static InputChannelDeploymentDescriptor[] fromEdges(_			ExecutionEdge[] edges,_			ResourceID consumerResourceId,_			boolean allowLazyDeployment) throws ExecutionGraphException {__		final InputChannelDeploymentDescriptor[] icdd = new InputChannelDeploymentDescriptor[edges.length]___		_		for (int i = 0_ i < edges.length_ i++) {_			final IntermediateResultPartition consumedPartition = edges[i].getSource()__			final Execution producer = consumedPartition.getProducer().getCurrentExecutionAttempt()___			final ExecutionState producerState = producer.getState()__			final LogicalSlot producerSlot = producer.getAssignedResource()___			final ResultPartitionLocation partitionLocation___			_			if (consumedPartition.isConsumable() && producerSlot != null &&_					(producerState == ExecutionState.RUNNING ||_						producerState == ExecutionState.FINISHED ||_						producerState == ExecutionState.SCHEDULED ||_						producerState == ExecutionState.DEPLOYING)) {__				final TaskManagerLocation partitionTaskManagerLocation = producerSlot.getTaskManagerLocation()__				final ResourceID partitionTaskManager = partitionTaskManagerLocation.getResourceID()___				if (partitionTaskManager.equals(consumerResourceId)) {_					_					partitionLocation = ResultPartitionLocation.createLocal()__				}_				else {_					_					final ConnectionID connectionId = new ConnectionID(_							partitionTaskManagerLocation,_							consumedPartition.getIntermediateResult().getConnectionIndex())___					partitionLocation = ResultPartitionLocation.createRemote(connectionId)__				}_			}_			else if (allowLazyDeployment) {_				_				partitionLocation = ResultPartitionLocation.createUnknown()__			}_			else if (producerState == ExecutionState.CANCELING_						|| producerState == ExecutionState.CANCELED_						|| producerState == ExecutionState.FAILED) {_				String msg = "Trying to schedule a task whose inputs were canceled or failed. " +_					"The producer is in state " + producerState + "."__				throw new ExecutionGraphException(msg)__			}_			else {_				String msg = String.format("Trying to eagerly schedule a task whose inputs " +_					"are not ready (partition consumable? %s, producer state: %s, producer slot: %s).",_						consumedPartition.isConsumable(),_						producerState,_						producerSlot)__				throw new ExecutionGraphException(msg)__			}__			final ResultPartitionID consumedPartitionId = new ResultPartitionID(_					consumedPartition.getPartitionId(), producer.getAttemptId())___			icdd[i] = new InputChannelDeploymentDescriptor(_					consumedPartitionId, partitionLocation)__		}__		return icdd__	};creates,an,input,channel,deployment,descriptor,for,each,partition;public,static,input,channel,deployment,descriptor,from,edges,execution,edge,edges,resource,id,consumer,resource,id,boolean,allow,lazy,deployment,throws,execution,graph,exception,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,edges,length,for,int,i,0,i,edges,length,i,final,intermediate,result,partition,consumed,partition,edges,i,get,source,final,execution,producer,consumed,partition,get,producer,get,current,execution,attempt,final,execution,state,producer,state,producer,get,state,final,logical,slot,producer,slot,producer,get,assigned,resource,final,result,partition,location,partition,location,if,consumed,partition,is,consumable,producer,slot,null,producer,state,execution,state,running,producer,state,execution,state,finished,producer,state,execution,state,scheduled,producer,state,execution,state,deploying,final,task,manager,location,partition,task,manager,location,producer,slot,get,task,manager,location,final,resource,id,partition,task,manager,partition,task,manager,location,get,resource,id,if,partition,task,manager,equals,consumer,resource,id,partition,location,result,partition,location,create,local,else,final,connection,id,connection,id,new,connection,id,partition,task,manager,location,consumed,partition,get,intermediate,result,get,connection,index,partition,location,result,partition,location,create,remote,connection,id,else,if,allow,lazy,deployment,partition,location,result,partition,location,create,unknown,else,if,producer,state,execution,state,canceling,producer,state,execution,state,canceled,producer,state,execution,state,failed,string,msg,trying,to,schedule,a,task,whose,inputs,were,canceled,or,failed,the,producer,is,in,state,producer,state,throw,new,execution,graph,exception,msg,else,string,msg,string,format,trying,to,eagerly,schedule,a,task,whose,inputs,are,not,ready,partition,consumable,s,producer,state,s,producer,slot,s,consumed,partition,is,consumable,producer,state,producer,slot,throw,new,execution,graph,exception,msg,final,result,partition,id,consumed,partition,id,new,result,partition,id,consumed,partition,get,partition,id,producer,get,attempt,id,icdd,i,new,input,channel,deployment,descriptor,consumed,partition,id,partition,location,return,icdd
InputChannelDeploymentDescriptor -> public static InputChannelDeploymentDescriptor[] fromEdges( 			ExecutionEdge[] edges, 			ResourceID consumerResourceId, 			boolean allowLazyDeployment) throws ExecutionGraphException;1513261599;Creates an input channel deployment descriptor for each partition.;public static InputChannelDeploymentDescriptor[] fromEdges(_			ExecutionEdge[] edges,_			ResourceID consumerResourceId,_			boolean allowLazyDeployment) throws ExecutionGraphException {__		final InputChannelDeploymentDescriptor[] icdd = new InputChannelDeploymentDescriptor[edges.length]___		_		for (int i = 0_ i < edges.length_ i++) {_			final IntermediateResultPartition consumedPartition = edges[i].getSource()__			final Execution producer = consumedPartition.getProducer().getCurrentExecutionAttempt()___			final ExecutionState producerState = producer.getState()__			final LogicalSlot producerSlot = producer.getAssignedResource()___			final ResultPartitionLocation partitionLocation___			_			if (consumedPartition.isConsumable() && producerSlot != null &&_					(producerState == ExecutionState.RUNNING ||_						producerState == ExecutionState.FINISHED ||_						producerState == ExecutionState.SCHEDULED ||_						producerState == ExecutionState.DEPLOYING)) {__				final TaskManagerLocation partitionTaskManagerLocation = producerSlot.getTaskManagerLocation()__				final ResourceID partitionTaskManager = partitionTaskManagerLocation.getResourceID()___				if (partitionTaskManager.equals(consumerResourceId)) {_					_					partitionLocation = ResultPartitionLocation.createLocal()__				}_				else {_					_					final ConnectionID connectionId = new ConnectionID(_							partitionTaskManagerLocation,_							consumedPartition.getIntermediateResult().getConnectionIndex())___					partitionLocation = ResultPartitionLocation.createRemote(connectionId)__				}_			}_			else if (allowLazyDeployment) {_				_				partitionLocation = ResultPartitionLocation.createUnknown()__			}_			else if (producerState == ExecutionState.CANCELING_						|| producerState == ExecutionState.CANCELED_						|| producerState == ExecutionState.FAILED) {_				String msg = "Trying to schedule a task whose inputs were canceled or failed. " +_					"The producer is in state " + producerState + "."__				throw new ExecutionGraphException(msg)__			}_			else {_				String msg = String.format("Trying to eagerly schedule a task whose inputs " +_					"are not ready (partition consumable? %s, producer state: %s, producer slot: %s).",_						consumedPartition.isConsumable(),_						producerState,_						producerSlot)__				throw new ExecutionGraphException(msg)__			}__			final ResultPartitionID consumedPartitionId = new ResultPartitionID(_					consumedPartition.getPartitionId(), producer.getAttemptId())___			icdd[i] = new InputChannelDeploymentDescriptor(_					consumedPartitionId, partitionLocation)__		}__		return icdd__	};creates,an,input,channel,deployment,descriptor,for,each,partition;public,static,input,channel,deployment,descriptor,from,edges,execution,edge,edges,resource,id,consumer,resource,id,boolean,allow,lazy,deployment,throws,execution,graph,exception,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,edges,length,for,int,i,0,i,edges,length,i,final,intermediate,result,partition,consumed,partition,edges,i,get,source,final,execution,producer,consumed,partition,get,producer,get,current,execution,attempt,final,execution,state,producer,state,producer,get,state,final,logical,slot,producer,slot,producer,get,assigned,resource,final,result,partition,location,partition,location,if,consumed,partition,is,consumable,producer,slot,null,producer,state,execution,state,running,producer,state,execution,state,finished,producer,state,execution,state,scheduled,producer,state,execution,state,deploying,final,task,manager,location,partition,task,manager,location,producer,slot,get,task,manager,location,final,resource,id,partition,task,manager,partition,task,manager,location,get,resource,id,if,partition,task,manager,equals,consumer,resource,id,partition,location,result,partition,location,create,local,else,final,connection,id,connection,id,new,connection,id,partition,task,manager,location,consumed,partition,get,intermediate,result,get,connection,index,partition,location,result,partition,location,create,remote,connection,id,else,if,allow,lazy,deployment,partition,location,result,partition,location,create,unknown,else,if,producer,state,execution,state,canceling,producer,state,execution,state,canceled,producer,state,execution,state,failed,string,msg,trying,to,schedule,a,task,whose,inputs,were,canceled,or,failed,the,producer,is,in,state,producer,state,throw,new,execution,graph,exception,msg,else,string,msg,string,format,trying,to,eagerly,schedule,a,task,whose,inputs,are,not,ready,partition,consumable,s,producer,state,s,producer,slot,s,consumed,partition,is,consumable,producer,state,producer,slot,throw,new,execution,graph,exception,msg,final,result,partition,id,consumed,partition,id,new,result,partition,id,consumed,partition,get,partition,id,producer,get,attempt,id,icdd,i,new,input,channel,deployment,descriptor,consumed,partition,id,partition,location,return,icdd
InputChannelDeploymentDescriptor -> public static InputChannelDeploymentDescriptor[] fromEdges( 			ExecutionEdge[] edges, 			ResourceID consumerResourceId, 			boolean allowLazyDeployment) throws ExecutionGraphException;1547644408;Creates an input channel deployment descriptor for each partition.;public static InputChannelDeploymentDescriptor[] fromEdges(_			ExecutionEdge[] edges,_			ResourceID consumerResourceId,_			boolean allowLazyDeployment) throws ExecutionGraphException {__		final InputChannelDeploymentDescriptor[] icdd = new InputChannelDeploymentDescriptor[edges.length]___		_		for (int i = 0_ i < edges.length_ i++) {_			final IntermediateResultPartition consumedPartition = edges[i].getSource()__			final Execution producer = consumedPartition.getProducer().getCurrentExecutionAttempt()___			final ExecutionState producerState = producer.getState()__			final LogicalSlot producerSlot = producer.getAssignedResource()___			final ResultPartitionLocation partitionLocation___			_			if ((consumedPartition.getResultType().isPipelined() || consumedPartition.isConsumable()) &&_				producerSlot != null &&_					(producerState == ExecutionState.RUNNING ||_						producerState == ExecutionState.FINISHED ||_						producerState == ExecutionState.SCHEDULED ||_						producerState == ExecutionState.DEPLOYING)) {__				final TaskManagerLocation partitionTaskManagerLocation = producerSlot.getTaskManagerLocation()__				final ResourceID partitionTaskManager = partitionTaskManagerLocation.getResourceID()___				if (partitionTaskManager.equals(consumerResourceId)) {_					_					partitionLocation = ResultPartitionLocation.createLocal()__				}_				else {_					_					final ConnectionID connectionId = new ConnectionID(_							partitionTaskManagerLocation,_							consumedPartition.getIntermediateResult().getConnectionIndex())___					partitionLocation = ResultPartitionLocation.createRemote(connectionId)__				}_			}_			else if (allowLazyDeployment) {_				_				partitionLocation = ResultPartitionLocation.createUnknown()__			}_			else if (producerState == ExecutionState.CANCELING_						|| producerState == ExecutionState.CANCELED_						|| producerState == ExecutionState.FAILED) {_				String msg = "Trying to schedule a task whose inputs were canceled or failed. " +_					"The producer is in state " + producerState + "."__				throw new ExecutionGraphException(msg)__			}_			else {_				String msg = String.format("Trying to eagerly schedule a task whose inputs " +_					"are not ready (result type: %s, partition consumable: %s, producer state: %s, producer slot: %s).",_						consumedPartition.getResultType(),_						consumedPartition.isConsumable(),_						producerState,_						producerSlot)__				throw new ExecutionGraphException(msg)__			}__			final ResultPartitionID consumedPartitionId = new ResultPartitionID(_					consumedPartition.getPartitionId(), producer.getAttemptId())___			icdd[i] = new InputChannelDeploymentDescriptor(_					consumedPartitionId, partitionLocation)__		}__		return icdd__	};creates,an,input,channel,deployment,descriptor,for,each,partition;public,static,input,channel,deployment,descriptor,from,edges,execution,edge,edges,resource,id,consumer,resource,id,boolean,allow,lazy,deployment,throws,execution,graph,exception,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,edges,length,for,int,i,0,i,edges,length,i,final,intermediate,result,partition,consumed,partition,edges,i,get,source,final,execution,producer,consumed,partition,get,producer,get,current,execution,attempt,final,execution,state,producer,state,producer,get,state,final,logical,slot,producer,slot,producer,get,assigned,resource,final,result,partition,location,partition,location,if,consumed,partition,get,result,type,is,pipelined,consumed,partition,is,consumable,producer,slot,null,producer,state,execution,state,running,producer,state,execution,state,finished,producer,state,execution,state,scheduled,producer,state,execution,state,deploying,final,task,manager,location,partition,task,manager,location,producer,slot,get,task,manager,location,final,resource,id,partition,task,manager,partition,task,manager,location,get,resource,id,if,partition,task,manager,equals,consumer,resource,id,partition,location,result,partition,location,create,local,else,final,connection,id,connection,id,new,connection,id,partition,task,manager,location,consumed,partition,get,intermediate,result,get,connection,index,partition,location,result,partition,location,create,remote,connection,id,else,if,allow,lazy,deployment,partition,location,result,partition,location,create,unknown,else,if,producer,state,execution,state,canceling,producer,state,execution,state,canceled,producer,state,execution,state,failed,string,msg,trying,to,schedule,a,task,whose,inputs,were,canceled,or,failed,the,producer,is,in,state,producer,state,throw,new,execution,graph,exception,msg,else,string,msg,string,format,trying,to,eagerly,schedule,a,task,whose,inputs,are,not,ready,result,type,s,partition,consumable,s,producer,state,s,producer,slot,s,consumed,partition,get,result,type,consumed,partition,is,consumable,producer,state,producer,slot,throw,new,execution,graph,exception,msg,final,result,partition,id,consumed,partition,id,new,result,partition,id,consumed,partition,get,partition,id,producer,get,attempt,id,icdd,i,new,input,channel,deployment,descriptor,consumed,partition,id,partition,location,return,icdd
InputChannelDeploymentDescriptor -> public static InputChannelDeploymentDescriptor[] fromEdges( 			ExecutionEdge[] edges, 			SimpleSlot consumerSlot, 			boolean allowLazyDeployment) throws ExecutionGraphException;1478815184;Creates an input channel deployment descriptor for each partition.;public static InputChannelDeploymentDescriptor[] fromEdges(_			ExecutionEdge[] edges,_			SimpleSlot consumerSlot,_			boolean allowLazyDeployment) throws ExecutionGraphException {__		final ResourceID consumerTaskManager = consumerSlot.getTaskManagerID()__		final InputChannelDeploymentDescriptor[] icdd = new InputChannelDeploymentDescriptor[edges.length]___		_		for (int i = 0_ i < edges.length_ i++) {_			final IntermediateResultPartition consumedPartition = edges[i].getSource()__			final Execution producer = consumedPartition.getProducer().getCurrentExecutionAttempt()___			final ExecutionState producerState = producer.getState()__			final SimpleSlot producerSlot = producer.getAssignedResource()___			final ResultPartitionLocation partitionLocation___			_			if (consumedPartition.isConsumable() && producerSlot != null &&_					(producerState == ExecutionState.RUNNING ||_						producerState == ExecutionState.FINISHED ||_						producerState == ExecutionState.SCHEDULED ||_						producerState == ExecutionState.DEPLOYING)) {_				_				final TaskManagerLocation partitionTaskManagerLocation = producerSlot.getTaskManagerLocation()__				final ResourceID partitionTaskManager = partitionTaskManagerLocation.getResourceID()___				if (partitionTaskManager.equals(consumerTaskManager)) {_					_					partitionLocation = ResultPartitionLocation.createLocal()__				}_				else {_					_					final ConnectionID connectionId = new ConnectionID(_							partitionTaskManagerLocation,_							consumedPartition.getIntermediateResult().getConnectionIndex())___					partitionLocation = ResultPartitionLocation.createRemote(connectionId)__				}_			}_			else if (allowLazyDeployment) {_				_				partitionLocation = ResultPartitionLocation.createUnknown()__			} else {_				throw new ExecutionGraphException("Trying to eagerly schedule a task whose inputs are not ready.")__			}__			final ResultPartitionID consumedPartitionId = new ResultPartitionID(_					consumedPartition.getPartitionId(), producer.getAttemptId())___			icdd[i] = new InputChannelDeploymentDescriptor(_					consumedPartitionId, partitionLocation)__		}__		LOG.debug("Created {} from edges {}.", Arrays.toString(icdd), Arrays.toString(edges))___		return icdd__	};creates,an,input,channel,deployment,descriptor,for,each,partition;public,static,input,channel,deployment,descriptor,from,edges,execution,edge,edges,simple,slot,consumer,slot,boolean,allow,lazy,deployment,throws,execution,graph,exception,final,resource,id,consumer,task,manager,consumer,slot,get,task,manager,id,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,edges,length,for,int,i,0,i,edges,length,i,final,intermediate,result,partition,consumed,partition,edges,i,get,source,final,execution,producer,consumed,partition,get,producer,get,current,execution,attempt,final,execution,state,producer,state,producer,get,state,final,simple,slot,producer,slot,producer,get,assigned,resource,final,result,partition,location,partition,location,if,consumed,partition,is,consumable,producer,slot,null,producer,state,execution,state,running,producer,state,execution,state,finished,producer,state,execution,state,scheduled,producer,state,execution,state,deploying,final,task,manager,location,partition,task,manager,location,producer,slot,get,task,manager,location,final,resource,id,partition,task,manager,partition,task,manager,location,get,resource,id,if,partition,task,manager,equals,consumer,task,manager,partition,location,result,partition,location,create,local,else,final,connection,id,connection,id,new,connection,id,partition,task,manager,location,consumed,partition,get,intermediate,result,get,connection,index,partition,location,result,partition,location,create,remote,connection,id,else,if,allow,lazy,deployment,partition,location,result,partition,location,create,unknown,else,throw,new,execution,graph,exception,trying,to,eagerly,schedule,a,task,whose,inputs,are,not,ready,final,result,partition,id,consumed,partition,id,new,result,partition,id,consumed,partition,get,partition,id,producer,get,attempt,id,icdd,i,new,input,channel,deployment,descriptor,consumed,partition,id,partition,location,log,debug,created,from,edges,arrays,to,string,icdd,arrays,to,string,edges,return,icdd
InputChannelDeploymentDescriptor -> public static InputChannelDeploymentDescriptor[] fromEdges( 			ExecutionEdge[] edges, 			SimpleSlot consumerSlot, 			boolean allowLazyDeployment) throws ExecutionGraphException;1480585463;Creates an input channel deployment descriptor for each partition.;public static InputChannelDeploymentDescriptor[] fromEdges(_			ExecutionEdge[] edges,_			SimpleSlot consumerSlot,_			boolean allowLazyDeployment) throws ExecutionGraphException {__		final ResourceID consumerTaskManager = consumerSlot.getTaskManagerID()__		final InputChannelDeploymentDescriptor[] icdd = new InputChannelDeploymentDescriptor[edges.length]___		_		for (int i = 0_ i < edges.length_ i++) {_			final IntermediateResultPartition consumedPartition = edges[i].getSource()__			final Execution producer = consumedPartition.getProducer().getCurrentExecutionAttempt()___			final ExecutionState producerState = producer.getState()__			final SimpleSlot producerSlot = producer.getAssignedResource()___			final ResultPartitionLocation partitionLocation___			_			if (consumedPartition.isConsumable() && producerSlot != null &&_					(producerState == ExecutionState.RUNNING ||_						producerState == ExecutionState.FINISHED ||_						producerState == ExecutionState.SCHEDULED ||_						producerState == ExecutionState.DEPLOYING)) {_				_				final TaskManagerLocation partitionTaskManagerLocation = producerSlot.getTaskManagerLocation()__				final ResourceID partitionTaskManager = partitionTaskManagerLocation.getResourceID()___				if (partitionTaskManager.equals(consumerTaskManager)) {_					_					partitionLocation = ResultPartitionLocation.createLocal()__				}_				else {_					_					final ConnectionID connectionId = new ConnectionID(_							partitionTaskManagerLocation,_							consumedPartition.getIntermediateResult().getConnectionIndex())___					partitionLocation = ResultPartitionLocation.createRemote(connectionId)__				}_			}_			else if (allowLazyDeployment) {_				_				partitionLocation = ResultPartitionLocation.createUnknown()__			} else {_				throw new ExecutionGraphException("Trying to eagerly schedule a task whose inputs are not ready.")__			}__			final ResultPartitionID consumedPartitionId = new ResultPartitionID(_					consumedPartition.getPartitionId(), producer.getAttemptId())___			icdd[i] = new InputChannelDeploymentDescriptor(_					consumedPartitionId, partitionLocation)__		}__		return icdd__	};creates,an,input,channel,deployment,descriptor,for,each,partition;public,static,input,channel,deployment,descriptor,from,edges,execution,edge,edges,simple,slot,consumer,slot,boolean,allow,lazy,deployment,throws,execution,graph,exception,final,resource,id,consumer,task,manager,consumer,slot,get,task,manager,id,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,edges,length,for,int,i,0,i,edges,length,i,final,intermediate,result,partition,consumed,partition,edges,i,get,source,final,execution,producer,consumed,partition,get,producer,get,current,execution,attempt,final,execution,state,producer,state,producer,get,state,final,simple,slot,producer,slot,producer,get,assigned,resource,final,result,partition,location,partition,location,if,consumed,partition,is,consumable,producer,slot,null,producer,state,execution,state,running,producer,state,execution,state,finished,producer,state,execution,state,scheduled,producer,state,execution,state,deploying,final,task,manager,location,partition,task,manager,location,producer,slot,get,task,manager,location,final,resource,id,partition,task,manager,partition,task,manager,location,get,resource,id,if,partition,task,manager,equals,consumer,task,manager,partition,location,result,partition,location,create,local,else,final,connection,id,connection,id,new,connection,id,partition,task,manager,location,consumed,partition,get,intermediate,result,get,connection,index,partition,location,result,partition,location,create,remote,connection,id,else,if,allow,lazy,deployment,partition,location,result,partition,location,create,unknown,else,throw,new,execution,graph,exception,trying,to,eagerly,schedule,a,task,whose,inputs,are,not,ready,final,result,partition,id,consumed,partition,id,new,result,partition,id,consumed,partition,get,partition,id,producer,get,attempt,id,icdd,i,new,input,channel,deployment,descriptor,consumed,partition,id,partition,location,return,icdd
InputChannelDeploymentDescriptor -> public static InputChannelDeploymentDescriptor[] fromEdges( 			ExecutionEdge[] edges, 			SimpleSlot consumerSlot, 			boolean allowLazyDeployment) throws ExecutionGraphException;1481127240;Creates an input channel deployment descriptor for each partition.;public static InputChannelDeploymentDescriptor[] fromEdges(_			ExecutionEdge[] edges,_			SimpleSlot consumerSlot,_			boolean allowLazyDeployment) throws ExecutionGraphException {__		final ResourceID consumerTaskManager = consumerSlot.getTaskManagerID()__		final InputChannelDeploymentDescriptor[] icdd = new InputChannelDeploymentDescriptor[edges.length]___		_		for (int i = 0_ i < edges.length_ i++) {_			final IntermediateResultPartition consumedPartition = edges[i].getSource()__			final Execution producer = consumedPartition.getProducer().getCurrentExecutionAttempt()___			final ExecutionState producerState = producer.getState()__			final SimpleSlot producerSlot = producer.getAssignedResource()___			final ResultPartitionLocation partitionLocation___			_			if (consumedPartition.isConsumable() && producerSlot != null &&_					(producerState == ExecutionState.RUNNING ||_						producerState == ExecutionState.FINISHED ||_						producerState == ExecutionState.SCHEDULED ||_						producerState == ExecutionState.DEPLOYING)) {_				_				final TaskManagerLocation partitionTaskManagerLocation = producerSlot.getTaskManagerLocation()__				final ResourceID partitionTaskManager = partitionTaskManagerLocation.getResourceID()___				if (partitionTaskManager.equals(consumerTaskManager)) {_					_					partitionLocation = ResultPartitionLocation.createLocal()__				}_				else {_					_					final ConnectionID connectionId = new ConnectionID(_							partitionTaskManagerLocation,_							consumedPartition.getIntermediateResult().getConnectionIndex())___					partitionLocation = ResultPartitionLocation.createRemote(connectionId)__				}_			}_			else if (allowLazyDeployment) {_				_				partitionLocation = ResultPartitionLocation.createUnknown()__			}_			else if (producerState == ExecutionState.CANCELING_						|| producerState == ExecutionState.CANCELED_						|| producerState == ExecutionState.FAILED) {_				String msg = "Trying to schedule a task whose inputs were canceled or failed. " +_					"The producer is in state " + producerState + "."__				throw new ExecutionGraphException(msg)__			}_			else {_				String msg = String.format("Trying to eagerly schedule a task whose inputs " +_					"are not ready (partition consumable? %s, producer state: %s, producer slot: %s).",_						consumedPartition.isConsumable(),_						producerState,_						producerSlot)__				throw new ExecutionGraphException(msg)__			}__			final ResultPartitionID consumedPartitionId = new ResultPartitionID(_					consumedPartition.getPartitionId(), producer.getAttemptId())___			icdd[i] = new InputChannelDeploymentDescriptor(_					consumedPartitionId, partitionLocation)__		}__		return icdd__	};creates,an,input,channel,deployment,descriptor,for,each,partition;public,static,input,channel,deployment,descriptor,from,edges,execution,edge,edges,simple,slot,consumer,slot,boolean,allow,lazy,deployment,throws,execution,graph,exception,final,resource,id,consumer,task,manager,consumer,slot,get,task,manager,id,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,edges,length,for,int,i,0,i,edges,length,i,final,intermediate,result,partition,consumed,partition,edges,i,get,source,final,execution,producer,consumed,partition,get,producer,get,current,execution,attempt,final,execution,state,producer,state,producer,get,state,final,simple,slot,producer,slot,producer,get,assigned,resource,final,result,partition,location,partition,location,if,consumed,partition,is,consumable,producer,slot,null,producer,state,execution,state,running,producer,state,execution,state,finished,producer,state,execution,state,scheduled,producer,state,execution,state,deploying,final,task,manager,location,partition,task,manager,location,producer,slot,get,task,manager,location,final,resource,id,partition,task,manager,partition,task,manager,location,get,resource,id,if,partition,task,manager,equals,consumer,task,manager,partition,location,result,partition,location,create,local,else,final,connection,id,connection,id,new,connection,id,partition,task,manager,location,consumed,partition,get,intermediate,result,get,connection,index,partition,location,result,partition,location,create,remote,connection,id,else,if,allow,lazy,deployment,partition,location,result,partition,location,create,unknown,else,if,producer,state,execution,state,canceling,producer,state,execution,state,canceled,producer,state,execution,state,failed,string,msg,trying,to,schedule,a,task,whose,inputs,were,canceled,or,failed,the,producer,is,in,state,producer,state,throw,new,execution,graph,exception,msg,else,string,msg,string,format,trying,to,eagerly,schedule,a,task,whose,inputs,are,not,ready,partition,consumable,s,producer,state,s,producer,slot,s,consumed,partition,is,consumable,producer,state,producer,slot,throw,new,execution,graph,exception,msg,final,result,partition,id,consumed,partition,id,new,result,partition,id,consumed,partition,get,partition,id,producer,get,attempt,id,icdd,i,new,input,channel,deployment,descriptor,consumed,partition,id,partition,location,return,icdd
InputChannelDeploymentDescriptor -> public static InputChannelDeploymentDescriptor[] fromEdges( 			ExecutionEdge[] edges, 			SimpleSlot consumerSlot, 			boolean allowLazyDeployment) throws ExecutionGraphException;1499497171;Creates an input channel deployment descriptor for each partition.;public static InputChannelDeploymentDescriptor[] fromEdges(_			ExecutionEdge[] edges,_			SimpleSlot consumerSlot,_			boolean allowLazyDeployment) throws ExecutionGraphException {__		final ResourceID consumerTaskManager = consumerSlot.getTaskManagerID()__		final InputChannelDeploymentDescriptor[] icdd = new InputChannelDeploymentDescriptor[edges.length]___		_		for (int i = 0_ i < edges.length_ i++) {_			final IntermediateResultPartition consumedPartition = edges[i].getSource()__			final Execution producer = consumedPartition.getProducer().getCurrentExecutionAttempt()___			final ExecutionState producerState = producer.getState()__			final SimpleSlot producerSlot = producer.getAssignedResource()___			final ResultPartitionLocation partitionLocation___			_			if (consumedPartition.isConsumable() && producerSlot != null &&_					(producerState == ExecutionState.RUNNING ||_						producerState == ExecutionState.FINISHED ||_						producerState == ExecutionState.SCHEDULED ||_						producerState == ExecutionState.DEPLOYING)) {__				final TaskManagerLocation partitionTaskManagerLocation = producerSlot.getTaskManagerLocation()__				final ResourceID partitionTaskManager = partitionTaskManagerLocation.getResourceID()___				if (partitionTaskManager.equals(consumerTaskManager)) {_					_					partitionLocation = ResultPartitionLocation.createLocal()__				}_				else {_					_					final ConnectionID connectionId = new ConnectionID(_							partitionTaskManagerLocation,_							consumedPartition.getIntermediateResult().getConnectionIndex())___					partitionLocation = ResultPartitionLocation.createRemote(connectionId)__				}_			}_			else if (allowLazyDeployment) {_				_				partitionLocation = ResultPartitionLocation.createUnknown()__			}_			else if (producerState == ExecutionState.CANCELING_						|| producerState == ExecutionState.CANCELED_						|| producerState == ExecutionState.FAILED) {_				String msg = "Trying to schedule a task whose inputs were canceled or failed. " +_					"The producer is in state " + producerState + "."__				throw new ExecutionGraphException(msg)__			}_			else {_				String msg = String.format("Trying to eagerly schedule a task whose inputs " +_					"are not ready (partition consumable? %s, producer state: %s, producer slot: %s).",_						consumedPartition.isConsumable(),_						producerState,_						producerSlot)__				throw new ExecutionGraphException(msg)__			}__			final ResultPartitionID consumedPartitionId = new ResultPartitionID(_					consumedPartition.getPartitionId(), producer.getAttemptId())___			icdd[i] = new InputChannelDeploymentDescriptor(_					consumedPartitionId, partitionLocation)__		}__		return icdd__	};creates,an,input,channel,deployment,descriptor,for,each,partition;public,static,input,channel,deployment,descriptor,from,edges,execution,edge,edges,simple,slot,consumer,slot,boolean,allow,lazy,deployment,throws,execution,graph,exception,final,resource,id,consumer,task,manager,consumer,slot,get,task,manager,id,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,edges,length,for,int,i,0,i,edges,length,i,final,intermediate,result,partition,consumed,partition,edges,i,get,source,final,execution,producer,consumed,partition,get,producer,get,current,execution,attempt,final,execution,state,producer,state,producer,get,state,final,simple,slot,producer,slot,producer,get,assigned,resource,final,result,partition,location,partition,location,if,consumed,partition,is,consumable,producer,slot,null,producer,state,execution,state,running,producer,state,execution,state,finished,producer,state,execution,state,scheduled,producer,state,execution,state,deploying,final,task,manager,location,partition,task,manager,location,producer,slot,get,task,manager,location,final,resource,id,partition,task,manager,partition,task,manager,location,get,resource,id,if,partition,task,manager,equals,consumer,task,manager,partition,location,result,partition,location,create,local,else,final,connection,id,connection,id,new,connection,id,partition,task,manager,location,consumed,partition,get,intermediate,result,get,connection,index,partition,location,result,partition,location,create,remote,connection,id,else,if,allow,lazy,deployment,partition,location,result,partition,location,create,unknown,else,if,producer,state,execution,state,canceling,producer,state,execution,state,canceled,producer,state,execution,state,failed,string,msg,trying,to,schedule,a,task,whose,inputs,were,canceled,or,failed,the,producer,is,in,state,producer,state,throw,new,execution,graph,exception,msg,else,string,msg,string,format,trying,to,eagerly,schedule,a,task,whose,inputs,are,not,ready,partition,consumable,s,producer,state,s,producer,slot,s,consumed,partition,is,consumable,producer,state,producer,slot,throw,new,execution,graph,exception,msg,final,result,partition,id,consumed,partition,id,new,result,partition,id,consumed,partition,get,partition,id,producer,get,attempt,id,icdd,i,new,input,channel,deployment,descriptor,consumed,partition,id,partition,location,return,icdd
InputChannelDeploymentDescriptor -> public static InputChannelDeploymentDescriptor[] fromEdges( 			ExecutionEdge[] edges, SimpleSlot consumerSlot);1426697080;Creates an input channel deployment descriptor for each partition.;public static InputChannelDeploymentDescriptor[] fromEdges(_			ExecutionEdge[] edges, SimpleSlot consumerSlot) {__		final InputChannelDeploymentDescriptor[] icdd = new InputChannelDeploymentDescriptor[edges.length]___		_		for (int i = 0_ i < edges.length_ i++) {_			final IntermediateResultPartition consumedPartition = edges[i].getSource()__			final Execution producer = consumedPartition.getProducer().getCurrentExecutionAttempt()___			final ExecutionState producerState = producer.getState()__			final SimpleSlot producerSlot = producer.getAssignedResource()___			final ResultPartitionLocation partitionLocation___			_			if (consumedPartition.isConsumable() && producerSlot != null &&_					(producerState == ExecutionState.RUNNING_							|| producerState == ExecutionState.FINISHED)) {__				final Instance partitionInstance = producerSlot.getInstance()___				if (partitionInstance.equals(consumerSlot.getInstance())) {_					_					partitionLocation = ResultPartitionLocation.createLocal()__				}_				else {_					_					final ConnectionID connectionId = new ConnectionID(_							partitionInstance.getInstanceConnectionInfo(),_							consumedPartition.getIntermediateResult().getConnectionIndex())___					partitionLocation = ResultPartitionLocation.createRemote(connectionId)__				}_			}_			else {_				_				partitionLocation = ResultPartitionLocation.createUnknown()__			}__			final ResultPartitionID consumedPartitionId = new ResultPartitionID(_					consumedPartition.getPartitionId(), producer.getAttemptId())___			icdd[i] = new InputChannelDeploymentDescriptor(_					consumedPartitionId, partitionLocation)__		}__		LOG.debug("Created {} from edges {}.", Arrays.toString(icdd), Arrays.toString(edges))___		return icdd__	};creates,an,input,channel,deployment,descriptor,for,each,partition;public,static,input,channel,deployment,descriptor,from,edges,execution,edge,edges,simple,slot,consumer,slot,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,edges,length,for,int,i,0,i,edges,length,i,final,intermediate,result,partition,consumed,partition,edges,i,get,source,final,execution,producer,consumed,partition,get,producer,get,current,execution,attempt,final,execution,state,producer,state,producer,get,state,final,simple,slot,producer,slot,producer,get,assigned,resource,final,result,partition,location,partition,location,if,consumed,partition,is,consumable,producer,slot,null,producer,state,execution,state,running,producer,state,execution,state,finished,final,instance,partition,instance,producer,slot,get,instance,if,partition,instance,equals,consumer,slot,get,instance,partition,location,result,partition,location,create,local,else,final,connection,id,connection,id,new,connection,id,partition,instance,get,instance,connection,info,consumed,partition,get,intermediate,result,get,connection,index,partition,location,result,partition,location,create,remote,connection,id,else,partition,location,result,partition,location,create,unknown,final,result,partition,id,consumed,partition,id,new,result,partition,id,consumed,partition,get,partition,id,producer,get,attempt,id,icdd,i,new,input,channel,deployment,descriptor,consumed,partition,id,partition,location,log,debug,created,from,edges,arrays,to,string,icdd,arrays,to,string,edges,return,icdd
InputChannelDeploymentDescriptor -> public static InputChannelDeploymentDescriptor[] fromEdges( 			ExecutionEdge[] edges, SimpleSlot consumerSlot);1465991918;Creates an input channel deployment descriptor for each partition.;public static InputChannelDeploymentDescriptor[] fromEdges(_			ExecutionEdge[] edges, SimpleSlot consumerSlot) {__		final InputChannelDeploymentDescriptor[] icdd = new InputChannelDeploymentDescriptor[edges.length]___		_		for (int i = 0_ i < edges.length_ i++) {_			final IntermediateResultPartition consumedPartition = edges[i].getSource()__			final Execution producer = consumedPartition.getProducer().getCurrentExecutionAttempt()___			final ExecutionState producerState = producer.getState()__			final SimpleSlot producerSlot = producer.getAssignedResource()___			final ResultPartitionLocation partitionLocation___			_			if (consumedPartition.isConsumable() && producerSlot != null &&_					(producerState == ExecutionState.RUNNING_							|| producerState == ExecutionState.FINISHED)) {__				final Instance partitionInstance = producerSlot.getInstance()___				if (partitionInstance.equals(consumerSlot.getInstance())) {_					_					partitionLocation = ResultPartitionLocation.createLocal()__				}_				else {_					_					final ConnectionID connectionId = new ConnectionID(_							partitionInstance.getInstanceConnectionInfo(),_							consumedPartition.getIntermediateResult().getConnectionIndex())___					partitionLocation = ResultPartitionLocation.createRemote(connectionId)__				}_			}_			else {_				_				partitionLocation = ResultPartitionLocation.createUnknown()__			}__			final ResultPartitionID consumedPartitionId = new ResultPartitionID(_					consumedPartition.getPartitionId(), producer.getAttemptId())___			icdd[i] = new InputChannelDeploymentDescriptor(_					consumedPartitionId, partitionLocation)__		}__		LOG.debug("Created {} from edges {}.", Arrays.toString(icdd), Arrays.toString(edges))___		return icdd__	};creates,an,input,channel,deployment,descriptor,for,each,partition;public,static,input,channel,deployment,descriptor,from,edges,execution,edge,edges,simple,slot,consumer,slot,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,edges,length,for,int,i,0,i,edges,length,i,final,intermediate,result,partition,consumed,partition,edges,i,get,source,final,execution,producer,consumed,partition,get,producer,get,current,execution,attempt,final,execution,state,producer,state,producer,get,state,final,simple,slot,producer,slot,producer,get,assigned,resource,final,result,partition,location,partition,location,if,consumed,partition,is,consumable,producer,slot,null,producer,state,execution,state,running,producer,state,execution,state,finished,final,instance,partition,instance,producer,slot,get,instance,if,partition,instance,equals,consumer,slot,get,instance,partition,location,result,partition,location,create,local,else,final,connection,id,connection,id,new,connection,id,partition,instance,get,instance,connection,info,consumed,partition,get,intermediate,result,get,connection,index,partition,location,result,partition,location,create,remote,connection,id,else,partition,location,result,partition,location,create,unknown,final,result,partition,id,consumed,partition,id,new,result,partition,id,consumed,partition,get,partition,id,producer,get,attempt,id,icdd,i,new,input,channel,deployment,descriptor,consumed,partition,id,partition,location,log,debug,created,from,edges,arrays,to,string,icdd,arrays,to,string,edges,return,icdd
InputChannelDeploymentDescriptor -> public static InputChannelDeploymentDescriptor[] fromEdges( 			ExecutionEdge[] edges, SimpleSlot consumerSlot);1472663071;Creates an input channel deployment descriptor for each partition.;public static InputChannelDeploymentDescriptor[] fromEdges(_			ExecutionEdge[] edges, SimpleSlot consumerSlot) {__		final InputChannelDeploymentDescriptor[] icdd = new InputChannelDeploymentDescriptor[edges.length]___		_		for (int i = 0_ i < edges.length_ i++) {_			final IntermediateResultPartition consumedPartition = edges[i].getSource()__			final Execution producer = consumedPartition.getProducer().getCurrentExecutionAttempt()___			final ExecutionState producerState = producer.getState()__			final SimpleSlot producerSlot = producer.getAssignedResource()___			final ResultPartitionLocation partitionLocation___			_			if (consumedPartition.isConsumable() && producerSlot != null &&_					(producerState == ExecutionState.RUNNING_							|| producerState == ExecutionState.FINISHED)) {__				final Instance partitionInstance = producerSlot.getInstance()___				if (partitionInstance.equals(consumerSlot.getInstance())) {_					_					partitionLocation = ResultPartitionLocation.createLocal()__				}_				else {_					_					final ConnectionID connectionId = new ConnectionID(_							partitionInstance.getInstanceConnectionInfo(),_							consumedPartition.getIntermediateResult().getConnectionIndex())___					partitionLocation = ResultPartitionLocation.createRemote(connectionId)__				}_			}_			else {_				_				partitionLocation = ResultPartitionLocation.createUnknown()__			}__			final ResultPartitionID consumedPartitionId = new ResultPartitionID(_					consumedPartition.getPartitionId(), producer.getAttemptId())___			icdd[i] = new InputChannelDeploymentDescriptor(_					consumedPartitionId, partitionLocation)__		}__		LOG.debug("Created {} from edges {}.", Arrays.toString(icdd), Arrays.toString(edges))___		return icdd__	};creates,an,input,channel,deployment,descriptor,for,each,partition;public,static,input,channel,deployment,descriptor,from,edges,execution,edge,edges,simple,slot,consumer,slot,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,edges,length,for,int,i,0,i,edges,length,i,final,intermediate,result,partition,consumed,partition,edges,i,get,source,final,execution,producer,consumed,partition,get,producer,get,current,execution,attempt,final,execution,state,producer,state,producer,get,state,final,simple,slot,producer,slot,producer,get,assigned,resource,final,result,partition,location,partition,location,if,consumed,partition,is,consumable,producer,slot,null,producer,state,execution,state,running,producer,state,execution,state,finished,final,instance,partition,instance,producer,slot,get,instance,if,partition,instance,equals,consumer,slot,get,instance,partition,location,result,partition,location,create,local,else,final,connection,id,connection,id,new,connection,id,partition,instance,get,instance,connection,info,consumed,partition,get,intermediate,result,get,connection,index,partition,location,result,partition,location,create,remote,connection,id,else,partition,location,result,partition,location,create,unknown,final,result,partition,id,consumed,partition,id,new,result,partition,id,consumed,partition,get,partition,id,producer,get,attempt,id,icdd,i,new,input,channel,deployment,descriptor,consumed,partition,id,partition,location,log,debug,created,from,edges,arrays,to,string,icdd,arrays,to,string,edges,return,icdd
InputChannelDeploymentDescriptor -> public static InputChannelDeploymentDescriptor[] fromEdges( 			ExecutionEdge[] edges, SimpleSlot consumerSlot);1472830377;Creates an input channel deployment descriptor for each partition.;public static InputChannelDeploymentDescriptor[] fromEdges(_			ExecutionEdge[] edges, SimpleSlot consumerSlot) {__		final ResourceID consumerTaskManager = consumerSlot.getTaskManagerID()__		final InputChannelDeploymentDescriptor[] icdd = new InputChannelDeploymentDescriptor[edges.length]___		_		for (int i = 0_ i < edges.length_ i++) {_			final IntermediateResultPartition consumedPartition = edges[i].getSource()__			final Execution producer = consumedPartition.getProducer().getCurrentExecutionAttempt()___			final ExecutionState producerState = producer.getState()__			final SimpleSlot producerSlot = producer.getAssignedResource()___			final ResultPartitionLocation partitionLocation___			_			if (consumedPartition.isConsumable() && producerSlot != null &&_					(producerState == ExecutionState.RUNNING_							|| producerState == ExecutionState.FINISHED)) {__				final TaskManagerLocation partitionTaskManagerLocation = producerSlot.getTaskManagerLocation()__				final ResourceID partitionTaskManager = partitionTaskManagerLocation.getResourceID()___				if (partitionTaskManager.equals(consumerTaskManager)) {_					_					partitionLocation = ResultPartitionLocation.createLocal()__				}_				else {_					_					final ConnectionID connectionId = new ConnectionID(_							partitionTaskManagerLocation,_							consumedPartition.getIntermediateResult().getConnectionIndex())___					partitionLocation = ResultPartitionLocation.createRemote(connectionId)__				}_			}_			else {_				_				partitionLocation = ResultPartitionLocation.createUnknown()__			}__			final ResultPartitionID consumedPartitionId = new ResultPartitionID(_					consumedPartition.getPartitionId(), producer.getAttemptId())___			icdd[i] = new InputChannelDeploymentDescriptor(_					consumedPartitionId, partitionLocation)__		}__		LOG.debug("Created {} from edges {}.", Arrays.toString(icdd), Arrays.toString(edges))___		return icdd__	};creates,an,input,channel,deployment,descriptor,for,each,partition;public,static,input,channel,deployment,descriptor,from,edges,execution,edge,edges,simple,slot,consumer,slot,final,resource,id,consumer,task,manager,consumer,slot,get,task,manager,id,final,input,channel,deployment,descriptor,icdd,new,input,channel,deployment,descriptor,edges,length,for,int,i,0,i,edges,length,i,final,intermediate,result,partition,consumed,partition,edges,i,get,source,final,execution,producer,consumed,partition,get,producer,get,current,execution,attempt,final,execution,state,producer,state,producer,get,state,final,simple,slot,producer,slot,producer,get,assigned,resource,final,result,partition,location,partition,location,if,consumed,partition,is,consumable,producer,slot,null,producer,state,execution,state,running,producer,state,execution,state,finished,final,task,manager,location,partition,task,manager,location,producer,slot,get,task,manager,location,final,resource,id,partition,task,manager,partition,task,manager,location,get,resource,id,if,partition,task,manager,equals,consumer,task,manager,partition,location,result,partition,location,create,local,else,final,connection,id,connection,id,new,connection,id,partition,task,manager,location,consumed,partition,get,intermediate,result,get,connection,index,partition,location,result,partition,location,create,remote,connection,id,else,partition,location,result,partition,location,create,unknown,final,result,partition,id,consumed,partition,id,new,result,partition,id,consumed,partition,get,partition,id,producer,get,attempt,id,icdd,i,new,input,channel,deployment,descriptor,consumed,partition,id,partition,location,log,debug,created,from,edges,arrays,to,string,icdd,arrays,to,string,edges,return,icdd
