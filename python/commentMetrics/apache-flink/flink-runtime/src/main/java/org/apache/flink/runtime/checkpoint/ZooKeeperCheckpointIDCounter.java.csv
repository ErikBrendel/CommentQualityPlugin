# id;timestamp;commentText;codeText;commentWords;codeWords
ZooKeeperCheckpointIDCounter -> public ZooKeeperCheckpointIDCounter(CuratorFramework client, String counterPath) throws Exception;1445293011;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client      Curator ZooKeeper client_@param counterPath ZooKeeper path for the counter. It's sufficient to have a path per-job._@throws Exception;public ZooKeeperCheckpointIDCounter(CuratorFramework client, String counterPath) throws Exception {_		this.client = checkNotNull(client, "Curator client")__		this.counterPath = checkNotNull(counterPath, "Counter path")__		this.sharedCount = new SharedCount(client, counterPath, 1)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,curator,zoo,keeper,client,param,counter,path,zoo,keeper,path,for,the,counter,it,s,sufficient,to,have,a,path,per,job,throws,exception;public,zoo,keeper,checkpoint,idcounter,curator,framework,client,string,counter,path,throws,exception,this,client,check,not,null,client,curator,client,this,counter,path,check,not,null,counter,path,counter,path,this,shared,count,new,shared,count,client,counter,path,1
ZooKeeperCheckpointIDCounter -> public ZooKeeperCheckpointIDCounter(CuratorFramework client, String counterPath) throws Exception;1448353719;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client      Curator ZooKeeper client_@param counterPath ZooKeeper path for the counter. It's sufficient to have a path per-job._@throws Exception;public ZooKeeperCheckpointIDCounter(CuratorFramework client, String counterPath) throws Exception {_		this.client = checkNotNull(client, "Curator client")__		this.counterPath = checkNotNull(counterPath, "Counter path")__		this.sharedCount = new SharedCount(client, counterPath, 1)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,curator,zoo,keeper,client,param,counter,path,zoo,keeper,path,for,the,counter,it,s,sufficient,to,have,a,path,per,job,throws,exception;public,zoo,keeper,checkpoint,idcounter,curator,framework,client,string,counter,path,throws,exception,this,client,check,not,null,client,curator,client,this,counter,path,check,not,null,counter,path,counter,path,this,shared,count,new,shared,count,client,counter,path,1
ZooKeeperCheckpointIDCounter -> public ZooKeeperCheckpointIDCounter(CuratorFramework client, String counterPath) throws Exception;1448353719;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client      Curator ZooKeeper client_@param counterPath ZooKeeper path for the counter. It's sufficient to have a path per-job._@throws Exception;public ZooKeeperCheckpointIDCounter(CuratorFramework client, String counterPath) throws Exception {_		this.client = checkNotNull(client, "Curator client")__		this.counterPath = checkNotNull(counterPath, "Counter path")__		this.sharedCount = new SharedCount(client, counterPath, 1)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,curator,zoo,keeper,client,param,counter,path,zoo,keeper,path,for,the,counter,it,s,sufficient,to,have,a,path,per,job,throws,exception;public,zoo,keeper,checkpoint,idcounter,curator,framework,client,string,counter,path,throws,exception,this,client,check,not,null,client,curator,client,this,counter,path,check,not,null,counter,path,counter,path,this,shared,count,new,shared,count,client,counter,path,1
ZooKeeperCheckpointIDCounter -> public ZooKeeperCheckpointIDCounter(CuratorFramework client, String counterPath) throws Exception;1452526243;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client      Curator ZooKeeper client_@param counterPath ZooKeeper path for the counter. It's sufficient to have a path per-job._@throws Exception;public ZooKeeperCheckpointIDCounter(CuratorFramework client, String counterPath) throws Exception {_		this.client = checkNotNull(client, "Curator client")__		this.counterPath = checkNotNull(counterPath, "Counter path")__		this.sharedCount = new SharedCount(client, counterPath, 1)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,curator,zoo,keeper,client,param,counter,path,zoo,keeper,path,for,the,counter,it,s,sufficient,to,have,a,path,per,job,throws,exception;public,zoo,keeper,checkpoint,idcounter,curator,framework,client,string,counter,path,throws,exception,this,client,check,not,null,client,curator,client,this,counter,path,check,not,null,counter,path,counter,path,this,shared,count,new,shared,count,client,counter,path,1
ZooKeeperCheckpointIDCounter -> public ZooKeeperCheckpointIDCounter(CuratorFramework client, String counterPath) throws Exception;1465991918;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client      Curator ZooKeeper client_@param counterPath ZooKeeper path for the counter. It's sufficient to have a path per-job._@throws Exception;public ZooKeeperCheckpointIDCounter(CuratorFramework client, String counterPath) throws Exception {_		this.client = checkNotNull(client, "Curator client")__		this.counterPath = checkNotNull(counterPath, "Counter path")__		this.sharedCount = new SharedCount(client, counterPath, 1)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,curator,zoo,keeper,client,param,counter,path,zoo,keeper,path,for,the,counter,it,s,sufficient,to,have,a,path,per,job,throws,exception;public,zoo,keeper,checkpoint,idcounter,curator,framework,client,string,counter,path,throws,exception,this,client,check,not,null,client,curator,client,this,counter,path,check,not,null,counter,path,counter,path,this,shared,count,new,shared,count,client,counter,path,1
ZooKeeperCheckpointIDCounter -> public ZooKeeperCheckpointIDCounter(CuratorFramework client, String counterPath) throws Exception;1469190400;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client      Curator ZooKeeper client_@param counterPath ZooKeeper path for the counter. It's sufficient to have a path per-job._@throws Exception;public ZooKeeperCheckpointIDCounter(CuratorFramework client, String counterPath) throws Exception {_		this.client = checkNotNull(client, "Curator client")__		this.counterPath = checkNotNull(counterPath, "Counter path")__		this.sharedCount = new SharedCount(client, counterPath, 1)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,curator,zoo,keeper,client,param,counter,path,zoo,keeper,path,for,the,counter,it,s,sufficient,to,have,a,path,per,job,throws,exception;public,zoo,keeper,checkpoint,idcounter,curator,framework,client,string,counter,path,throws,exception,this,client,check,not,null,client,curator,client,this,counter,path,check,not,null,counter,path,counter,path,this,shared,count,new,shared,count,client,counter,path,1
ZooKeeperCheckpointIDCounter -> public ZooKeeperCheckpointIDCounter(CuratorFramework client, String counterPath) throws Exception;1470677230;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client      Curator ZooKeeper client_@param counterPath ZooKeeper path for the counter. It's sufficient to have a path per-job._@throws Exception;public ZooKeeperCheckpointIDCounter(CuratorFramework client, String counterPath) throws Exception {_		this.client = checkNotNull(client, "Curator client")__		this.counterPath = checkNotNull(counterPath, "Counter path")__		this.sharedCount = new SharedCount(client, counterPath, 1)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,curator,zoo,keeper,client,param,counter,path,zoo,keeper,path,for,the,counter,it,s,sufficient,to,have,a,path,per,job,throws,exception;public,zoo,keeper,checkpoint,idcounter,curator,framework,client,string,counter,path,throws,exception,this,client,check,not,null,client,curator,client,this,counter,path,check,not,null,counter,path,counter,path,this,shared,count,new,shared,count,client,counter,path,1
ZooKeeperCheckpointIDCounter -> public ZooKeeperCheckpointIDCounter(CuratorFramework client, String counterPath) throws Exception;1472033364;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client      Curator ZooKeeper client_@param counterPath ZooKeeper path for the counter. It's sufficient to have a path per-job._@throws Exception;public ZooKeeperCheckpointIDCounter(CuratorFramework client, String counterPath) throws Exception {_		this.client = checkNotNull(client, "Curator client")__		this.counterPath = checkNotNull(counterPath, "Counter path")__		this.sharedCount = new SharedCount(client, counterPath, 1)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,curator,zoo,keeper,client,param,counter,path,zoo,keeper,path,for,the,counter,it,s,sufficient,to,have,a,path,per,job,throws,exception;public,zoo,keeper,checkpoint,idcounter,curator,framework,client,string,counter,path,throws,exception,this,client,check,not,null,client,curator,client,this,counter,path,check,not,null,counter,path,counter,path,this,shared,count,new,shared,count,client,counter,path,1
ZooKeeperCheckpointIDCounter -> public ZooKeeperCheckpointIDCounter(CuratorFramework client, String counterPath) throws Exception;1476432306;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client      Curator ZooKeeper client_@param counterPath ZooKeeper path for the counter. It's sufficient to have a path per-job._@throws Exception;public ZooKeeperCheckpointIDCounter(CuratorFramework client, String counterPath) throws Exception {_		this.client = checkNotNull(client, "Curator client")__		this.counterPath = checkNotNull(counterPath, "Counter path")__		this.sharedCount = new SharedCount(client, counterPath, 1)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,curator,zoo,keeper,client,param,counter,path,zoo,keeper,path,for,the,counter,it,s,sufficient,to,have,a,path,per,job,throws,exception;public,zoo,keeper,checkpoint,idcounter,curator,framework,client,string,counter,path,throws,exception,this,client,check,not,null,client,curator,client,this,counter,path,check,not,null,counter,path,counter,path,this,shared,count,new,shared,count,client,counter,path,1
