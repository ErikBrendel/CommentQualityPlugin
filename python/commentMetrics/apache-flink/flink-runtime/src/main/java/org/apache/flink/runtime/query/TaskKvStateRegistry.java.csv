commented;modifiers;parameterAmount;loc;comment;code
true;public;3;4;/**  * Registers the KvState instance at the KvStateRegistry.  *  * @param keyGroupRange    Key group range the KvState instance belongs to  * @param registrationName The registration name (not necessarily the same  *                         as the KvState name defined in the state  *                         descriptor used to create the KvState instance)  * @param kvState          The  */ ;/**  * Registers the KvState instance at the KvStateRegistry.  *  * @param keyGroupRange    Key group range the KvState instance belongs to  * @param registrationName The registration name (not necessarily the same  *                         as the KvState name defined in the state  *                         descriptor used to create the KvState instance)  * @param kvState          The  */ public void registerKvState(KeyGroupRange keyGroupRange, String registrationName, InternalKvState<?, ?, ?> kvState) {     KvStateID kvStateId = registry.registerKvState(jobId, jobVertexId, keyGroupRange, registrationName, kvState).     registeredKvStates.add(new KvStateInfo(keyGroupRange, registrationName, kvStateId)). }
true;public;0;5;/**  * Unregisters all registered KvState instances from the KvStateRegistry.  */ ;/**  * Unregisters all registered KvState instances from the KvStateRegistry.  */ public void unregisterAll() {     for (KvStateInfo kvState : registeredKvStates) {         registry.unregisterKvState(jobId, jobVertexId, kvState.keyGroupRange, kvState.registrationName, kvState.kvStateId).     } }
