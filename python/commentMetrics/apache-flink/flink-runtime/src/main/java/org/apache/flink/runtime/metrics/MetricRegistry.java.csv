commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Returns the global delimiter.  *  * @return global delimiter  */ ;/**  * Returns the global delimiter.  *  * @return global delimiter  */ char getDelimiter().
true;;1;1;/**  * Returns the configured delimiter for the reporter with the given index.  *  * @param index index of the reporter whose delimiter should be used  * @return configured reporter delimiter, or global delimiter if index is invalid  */ ;/**  * Returns the configured delimiter for the reporter with the given index.  *  * @param index index of the reporter whose delimiter should be used  * @return configured reporter delimiter, or global delimiter if index is invalid  */ char getDelimiter(int index).
true;;0;1;/**  * Returns the number of registered reporters.  */ ;/**  * Returns the number of registered reporters.  */ int getNumberReporters().
true;;3;1;/**  * Registers a new {@link Metric} with this registry.  *  * @param metric      the metric that was added  * @param metricName  the name of the metric  * @param group       the group that contains the metric  */ ;/**  * Registers a new {@link Metric} with this registry.  *  * @param metric      the metric that was added  * @param metricName  the name of the metric  * @param group       the group that contains the metric  */ void register(Metric metric, String metricName, AbstractMetricGroup group).
true;;3;1;/**  * Un-registers the given {@link Metric} with this registry.  *  * @param metric      the metric that should be removed  * @param metricName  the name of the metric  * @param group       the group that contains the metric  */ ;/**  * Un-registers the given {@link Metric} with this registry.  *  * @param metric      the metric that should be removed  * @param metricName  the name of the metric  * @param group       the group that contains the metric  */ void unregister(Metric metric, String metricName, AbstractMetricGroup group).
true;;0;1;/**  * Returns the scope formats.  *  * @return scope formats  */ ;/**  * Returns the scope formats.  *  * @return scope formats  */ ScopeFormats getScopeFormats().
true;;0;2;/**  * Returns the path of the {@link MetricQueryService} or null, if none is started.  *  * @return Path of the MetricQueryService or null, if none is started  */ ;/**  * Returns the path of the {@link MetricQueryService} or null, if none is started.  *  * @return Path of the MetricQueryService or null, if none is started  */ @Nullable String getMetricQueryServicePath().
