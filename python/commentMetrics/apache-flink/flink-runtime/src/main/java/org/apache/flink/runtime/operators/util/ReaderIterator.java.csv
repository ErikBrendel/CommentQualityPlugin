commented;modifiers;parameterAmount;loc;comment;code
false;public;1;14;;@Override public T next(T target) throws IOException {     this.reusingDelegate.setInstance(target).     try {         if (this.reader.next(this.reusingDelegate)) {             return this.reusingDelegate.getInstance().         } else {             return null.         }     } catch (InterruptedException e) {         throw new IOException("Reader interrupted.", e).     } }
false;public;0;13;;@Override public T next() throws IOException {     try {         if (this.reader.next(this.nonReusingDelegate)) {             return this.nonReusingDelegate.getInstance().         } else {             return null.         }     } catch (InterruptedException e) {         throw new IOException("Reader interrupted.", e).     } }
