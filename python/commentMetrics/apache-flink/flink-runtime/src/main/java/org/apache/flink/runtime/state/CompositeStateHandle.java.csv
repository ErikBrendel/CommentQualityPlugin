# id;timestamp;commentText;codeText;commentWords;codeWords
CompositeStateHandle -> void unregisterSharedStates(SharedStateRegistry stateRegistry)_;1492867556;Unregister both created and referenced shared states in the given_{@link SharedStateRegistry}. This method is called when the checkpoint is_subsumed or the job is shut down.__@param stateRegistry The registry where shared states are registered.;void unregisterSharedStates(SharedStateRegistry stateRegistry)_;unregister,both,created,and,referenced,shared,states,in,the,given,link,shared,state,registry,this,method,is,called,when,the,checkpoint,is,subsumed,or,the,job,is,shut,down,param,state,registry,the,registry,where,shared,states,are,registered;void,unregister,shared,states,shared,state,registry,state,registry
CompositeStateHandle -> void unregisterSharedStates(SharedStateRegistry stateRegistry)_;1492867556;Unregister both created and referenced shared states in the given_{@link SharedStateRegistry}. This method is called when the checkpoint is_subsumed or the job is shut down.__@param stateRegistry The registry where shared states are registered.;void unregisterSharedStates(SharedStateRegistry stateRegistry)_;unregister,both,created,and,referenced,shared,states,in,the,given,link,shared,state,registry,this,method,is,called,when,the,checkpoint,is,subsumed,or,the,job,is,shut,down,param,state,registry,the,registry,where,shared,states,are,registered;void,unregister,shared,states,shared,state,registry,state,registry
CompositeStateHandle -> void registerSharedStates(SharedStateRegistry stateRegistry)_;1492867556;Register both created and referenced shared states in the given_{@link SharedStateRegistry}. This method is called when the checkpoint_successfully completes or is recovered from failures.__@param stateRegistry The registry where shared states are registered.;void registerSharedStates(SharedStateRegistry stateRegistry)_;register,both,created,and,referenced,shared,states,in,the,given,link,shared,state,registry,this,method,is,called,when,the,checkpoint,successfully,completes,or,is,recovered,from,failures,param,state,registry,the,registry,where,shared,states,are,registered;void,register,shared,states,shared,state,registry,state,registry
CompositeStateHandle -> void registerSharedStates(SharedStateRegistry stateRegistry)_;1492867556;Register both newly created and already referenced shared states in the given_{@link SharedStateRegistry}. This method is called when the checkpoint_successfully completes or is recovered from failures._<p>_After this is completed, newly created shared state is considered as published is no longer_owned by this handle. This means that it should no longer be deleted as part of calls to_{@link #discardState()}.__@param stateRegistry The registry where shared states are registered.;void registerSharedStates(SharedStateRegistry stateRegistry)_;register,both,newly,created,and,already,referenced,shared,states,in,the,given,link,shared,state,registry,this,method,is,called,when,the,checkpoint,successfully,completes,or,is,recovered,from,failures,p,after,this,is,completed,newly,created,shared,state,is,considered,as,published,is,no,longer,owned,by,this,handle,this,means,that,it,should,no,longer,be,deleted,as,part,of,calls,to,link,discard,state,param,state,registry,the,registry,where,shared,states,are,registered;void,register,shared,states,shared,state,registry,state,registry
CompositeStateHandle -> void registerSharedStates(SharedStateRegistry stateRegistry)_;1495184252;Register both newly created and already referenced shared states in the given_{@link SharedStateRegistry}. This method is called when the checkpoint_successfully completes or is recovered from failures._<p>_After this is completed, newly created shared state is considered as published is no longer_owned by this handle. This means that it should no longer be deleted as part of calls to_{@link #discardState()}. Instead, {@link #discardState()} will trigger an unregistration_from the registry.__@param stateRegistry The registry where shared states are registered.;void registerSharedStates(SharedStateRegistry stateRegistry)_;register,both,newly,created,and,already,referenced,shared,states,in,the,given,link,shared,state,registry,this,method,is,called,when,the,checkpoint,successfully,completes,or,is,recovered,from,failures,p,after,this,is,completed,newly,created,shared,state,is,considered,as,published,is,no,longer,owned,by,this,handle,this,means,that,it,should,no,longer,be,deleted,as,part,of,calls,to,link,discard,state,instead,link,discard,state,will,trigger,an,unregistration,from,the,registry,param,state,registry,the,registry,where,shared,states,are,registered;void,register,shared,states,shared,state,registry,state,registry
