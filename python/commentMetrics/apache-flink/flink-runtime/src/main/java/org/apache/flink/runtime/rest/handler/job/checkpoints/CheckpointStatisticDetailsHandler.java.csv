commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;4;;@Override protected CheckpointStatistics handleCheckpointRequest(HandlerRequest<EmptyRequestBody, CheckpointMessageParameters> ignored, AbstractCheckpointStats checkpointStats) {     return CheckpointStatistics.generateCheckpointStatistics(checkpointStats, true). }
false;public;1;17;;@Override public Collection<ArchivedJson> archiveJsonWithPath(AccessExecutionGraph graph) throws IOException {     CheckpointStatsSnapshot stats = graph.getCheckpointStatsSnapshot().     if (stats == null) {         return Collections.emptyList().     }     CheckpointStatsHistory history = stats.getHistory().     List<ArchivedJson> archive = new ArrayList<>(history.getCheckpoints().size()).     for (AbstractCheckpointStats checkpoint : history.getCheckpoints()) {         ResponseBody json = CheckpointStatistics.generateCheckpointStatistics(checkpoint, true).         String path = getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY, graph.getJobID().toString()).replace(':' + CheckpointIdPathParameter.KEY, String.valueOf(checkpoint.getCheckpointId())).         archive.add(new ArchivedJson(path, json)).     }     return archive. }
