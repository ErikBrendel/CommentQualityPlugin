commented;modifiers;parameterAmount;loc;comment;code
true;public;1;19;/**  * Serializes the complete record to an intermediate data serialization buffer.  *  * @param record the record to serialize  */ ;/**  * Serializes the complete record to an intermediate data serialization buffer.  *  * @param record the record to serialize  */ @Override public void serializeRecord(T record) throws IOException {     if (CHECKED) {         if (dataBuffer.hasRemaining()) {             throw new IllegalStateException("Pending serialization of previous record.").         }     }     serializationBuffer.clear().     lengthBuffer.clear().     // write data and length     record.write(serializationBuffer).     int len = serializationBuffer.length().     lengthBuffer.putInt(0, len).     dataBuffer = serializationBuffer.wrapAsByteBuffer(). }
true;public;1;8;/**  * Copies an intermediate data serialization buffer into the target BufferBuilder.  *  * @param targetBuffer the target BufferBuilder to copy to  * @return how much information was written to the target buffer and  *         whether this buffer is full  */ ;/**  * Copies an intermediate data serialization buffer into the target BufferBuilder.  *  * @param targetBuffer the target BufferBuilder to copy to  * @return how much information was written to the target buffer and  *         whether this buffer is full  */ @Override public SerializationResult copyToBufferBuilder(BufferBuilder targetBuffer) {     targetBuffer.append(lengthBuffer).     targetBuffer.append(dataBuffer).     targetBuffer.commit().     return getSerializationResult(targetBuffer). }
false;private;1;8;;private SerializationResult getSerializationResult(BufferBuilder targetBuffer) {     if (dataBuffer.hasRemaining() || lengthBuffer.hasRemaining()) {         return SerializationResult.PARTIAL_RECORD_MEMORY_SEGMENT_FULL.     }     return !targetBuffer.isFull() ? SerializationResult.FULL_RECORD : SerializationResult.FULL_RECORD_MEMORY_SEGMENT_FULL. }
false;public;0;5;;@Override public void reset() {     dataBuffer.position(0).     lengthBuffer.position(0). }
false;public;0;5;;@Override public void prune() {     serializationBuffer.pruneBuffer().     dataBuffer = serializationBuffer.wrapAsByteBuffer(). }
false;public;0;4;;@Override public boolean hasSerializedData() {     return lengthBuffer.hasRemaining() || dataBuffer.hasRemaining(). }
