# id;timestamp;commentText;codeText;commentWords;codeWords
RestServerEndpointConfiguration -> public String getEndpointBindAddress();1503738659;Returns the address that the REST server endpoint should bind itself to.__@return address that the REST server endpoint should bind itself to;public String getEndpointBindAddress() {_		return restBindAddress__	};returns,the,address,that,the,rest,server,endpoint,should,bind,itself,to,return,address,that,the,rest,server,endpoint,should,bind,itself,to;public,string,get,endpoint,bind,address,return,rest,bind,address
RestServerEndpointConfiguration -> public String getEndpointBindAddress();1503738660;Returns the address that the REST server endpoint should bind itself to.__@return address that the REST server endpoint should bind itself to;public String getEndpointBindAddress() {_		return restBindAddress__	};returns,the,address,that,the,rest,server,endpoint,should,bind,itself,to,return,address,that,the,rest,server,endpoint,should,bind,itself,to;public,string,get,endpoint,bind,address,return,rest,bind,address
RestServerEndpointConfiguration -> public String getEndpointBindAddress();1518680660;Returns the address that the REST server endpoint should bind itself to.__@return address that the REST server endpoint should bind itself to;public String getEndpointBindAddress() {_		return restBindAddress__	};returns,the,address,that,the,rest,server,endpoint,should,bind,itself,to,return,address,that,the,rest,server,endpoint,should,bind,itself,to;public,string,get,endpoint,bind,address,return,rest,bind,address
RestServerEndpointConfiguration -> public String getEndpointBindAddress();1521016670;Returns the address that the REST server endpoint should bind itself to.__@return address that the REST server endpoint should bind itself to;public String getEndpointBindAddress() {_		return restBindAddress__	};returns,the,address,that,the,rest,server,endpoint,should,bind,itself,to,return,address,that,the,rest,server,endpoint,should,bind,itself,to;public,string,get,endpoint,bind,address,return,rest,bind,address
RestServerEndpointConfiguration -> public String getEndpointBindAddress();1521016671;Returns the address that the REST server endpoint should bind itself to.__@return address that the REST server endpoint should bind itself to;public String getEndpointBindAddress() {_		return restBindAddress__	};returns,the,address,that,the,rest,server,endpoint,should,bind,itself,to,return,address,that,the,rest,server,endpoint,should,bind,itself,to;public,string,get,endpoint,bind,address,return,rest,bind,address
RestServerEndpointConfiguration -> @Nullable 	public SSLHandlerFactory getSslHandlerFactory();1540215410;Returns the {@link SSLEngine} that the REST server endpoint should use.__@return SSLEngine that the REST server endpoint should use, or null if SSL was disabled;@Nullable_	public SSLHandlerFactory getSslHandlerFactory() {_		return sslHandlerFactory__	};returns,the,link,sslengine,that,the,rest,server,endpoint,should,use,return,sslengine,that,the,rest,server,endpoint,should,use,or,null,if,ssl,was,disabled;nullable,public,sslhandler,factory,get,ssl,handler,factory,return,ssl,handler,factory
RestServerEndpointConfiguration -> @Nullable 	public SSLHandlerFactory getSslHandlerFactory();1550222817;Returns the {@link SSLEngine} that the REST server endpoint should use.__@return SSLEngine that the REST server endpoint should use, or null if SSL was disabled;@Nullable_	public SSLHandlerFactory getSslHandlerFactory() {_		return sslHandlerFactory__	};returns,the,link,sslengine,that,the,rest,server,endpoint,should,use,return,sslengine,that,the,rest,server,endpoint,should,use,or,null,if,ssl,was,disabled;nullable,public,sslhandler,factory,get,ssl,handler,factory,return,ssl,handler,factory
RestServerEndpointConfiguration -> public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException;1503738659;Creates and returns a new {@link RestServerEndpointConfiguration} from the given {@link Configuration}.__@param config configuration from which the REST server endpoint configuration should be created from_@return REST server endpoint configuration_@throws ConfigurationException if SSL was configured incorrectly;public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException {_		Preconditions.checkNotNull(config)__		String address = config.getString(RestOptions.REST_ADDRESS)___		int port = config.getInteger(RestOptions.REST_PORT)__		Preconditions.checkArgument(0 <= port && port <= 65536, "Port " + port + " is out of valid port range (0-65536).")___		SSLEngine sslEngine = null__		boolean enableSSL = config.getBoolean(SecurityOptions.SSL_ENABLED)__		if (enableSSL) {_			try {_				SSLContext sslContext = SSLUtils.createSSLServerContext(config)__				if (sslContext != null) {_					sslEngine = sslContext.createSSLEngine()__					SSLUtils.setSSLVerAndCipherSuites(sslEngine, config)__					sslEngine.setUseClientMode(false)__				}_			} catch (Exception e) {_				throw new ConfigurationException("Failed to initialize SSLContext for REST server endpoint.", e)__			}_		}__		return new RestServerEndpointConfiguration(address, port, sslEngine)__	};creates,and,returns,a,new,link,rest,server,endpoint,configuration,from,the,given,link,configuration,param,config,configuration,from,which,the,rest,server,endpoint,configuration,should,be,created,from,return,rest,server,endpoint,configuration,throws,configuration,exception,if,ssl,was,configured,incorrectly;public,static,rest,server,endpoint,configuration,from,configuration,configuration,config,throws,configuration,exception,preconditions,check,not,null,config,string,address,config,get,string,rest,options,int,port,config,get,integer,rest,options,preconditions,check,argument,0,port,port,65536,port,port,is,out,of,valid,port,range,0,65536,sslengine,ssl,engine,null,boolean,enable,ssl,config,get,boolean,security,options,if,enable,ssl,try,sslcontext,ssl,context,sslutils,create,sslserver,context,config,if,ssl,context,null,ssl,engine,ssl,context,create,sslengine,sslutils,set,sslver,and,cipher,suites,ssl,engine,config,ssl,engine,set,use,client,mode,false,catch,exception,e,throw,new,configuration,exception,failed,to,initialize,sslcontext,for,rest,server,endpoint,e,return,new,rest,server,endpoint,configuration,address,port,ssl,engine
RestServerEndpointConfiguration -> public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException;1503738660;Creates and returns a new {@link RestServerEndpointConfiguration} from the given {@link Configuration}.__@param config configuration from which the REST server endpoint configuration should be created from_@return REST server endpoint configuration_@throws ConfigurationException if SSL was configured incorrectly;public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException {_		Preconditions.checkNotNull(config)__		String address = config.getString(RestOptions.REST_ADDRESS)___		int port = config.getInteger(RestOptions.REST_PORT)___		SSLEngine sslEngine = null__		boolean enableSSL = config.getBoolean(SecurityOptions.SSL_ENABLED)__		if (enableSSL) {_			try {_				SSLContext sslContext = SSLUtils.createSSLServerContext(config)__				if (sslContext != null) {_					sslEngine = sslContext.createSSLEngine()__					SSLUtils.setSSLVerAndCipherSuites(sslEngine, config)__					sslEngine.setUseClientMode(false)__				}_			} catch (Exception e) {_				throw new ConfigurationException("Failed to initialize SSLContext for REST server endpoint.", e)__			}_		}__		return new RestServerEndpointConfiguration(address, port, sslEngine)__	};creates,and,returns,a,new,link,rest,server,endpoint,configuration,from,the,given,link,configuration,param,config,configuration,from,which,the,rest,server,endpoint,configuration,should,be,created,from,return,rest,server,endpoint,configuration,throws,configuration,exception,if,ssl,was,configured,incorrectly;public,static,rest,server,endpoint,configuration,from,configuration,configuration,config,throws,configuration,exception,preconditions,check,not,null,config,string,address,config,get,string,rest,options,int,port,config,get,integer,rest,options,sslengine,ssl,engine,null,boolean,enable,ssl,config,get,boolean,security,options,if,enable,ssl,try,sslcontext,ssl,context,sslutils,create,sslserver,context,config,if,ssl,context,null,ssl,engine,ssl,context,create,sslengine,sslutils,set,sslver,and,cipher,suites,ssl,engine,config,ssl,engine,set,use,client,mode,false,catch,exception,e,throw,new,configuration,exception,failed,to,initialize,sslcontext,for,rest,server,endpoint,e,return,new,rest,server,endpoint,configuration,address,port,ssl,engine
RestServerEndpointConfiguration -> public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException;1518680660;Creates and returns a new {@link RestServerEndpointConfiguration} from the given {@link Configuration}.__@param config configuration from which the REST server endpoint configuration should be created from_@return REST server endpoint configuration_@throws ConfigurationException if SSL was configured incorrectly;public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException {_		Preconditions.checkNotNull(config)__		String address = config.getString(RestOptions.REST_ADDRESS)___		int port = config.getInteger(RestOptions.REST_PORT)___		SSLEngine sslEngine = null__		boolean enableSSL = config.getBoolean(SecurityOptions.SSL_ENABLED)__		if (enableSSL) {_			try {_				SSLContext sslContext = SSLUtils.createSSLServerContext(config)__				if (sslContext != null) {_					sslEngine = sslContext.createSSLEngine()__					SSLUtils.setSSLVerAndCipherSuites(sslEngine, config)__					sslEngine.setUseClientMode(false)__				}_			} catch (Exception e) {_				throw new ConfigurationException("Failed to initialize SSLContext for REST server endpoint.", e)__			}_		}__		final Path uploadDir = Paths.get(_			config.getString(WebOptions.UPLOAD_DIR,	config.getString(WebOptions.TMP_DIR)),_			"flink-web-upload-" + UUID.randomUUID())___		return new RestServerEndpointConfiguration(address, port, sslEngine, uploadDir)__	};creates,and,returns,a,new,link,rest,server,endpoint,configuration,from,the,given,link,configuration,param,config,configuration,from,which,the,rest,server,endpoint,configuration,should,be,created,from,return,rest,server,endpoint,configuration,throws,configuration,exception,if,ssl,was,configured,incorrectly;public,static,rest,server,endpoint,configuration,from,configuration,configuration,config,throws,configuration,exception,preconditions,check,not,null,config,string,address,config,get,string,rest,options,int,port,config,get,integer,rest,options,sslengine,ssl,engine,null,boolean,enable,ssl,config,get,boolean,security,options,if,enable,ssl,try,sslcontext,ssl,context,sslutils,create,sslserver,context,config,if,ssl,context,null,ssl,engine,ssl,context,create,sslengine,sslutils,set,sslver,and,cipher,suites,ssl,engine,config,ssl,engine,set,use,client,mode,false,catch,exception,e,throw,new,configuration,exception,failed,to,initialize,sslcontext,for,rest,server,endpoint,e,final,path,upload,dir,paths,get,config,get,string,web,options,config,get,string,web,options,flink,web,upload,uuid,random,uuid,return,new,rest,server,endpoint,configuration,address,port,ssl,engine,upload,dir
RestServerEndpointConfiguration -> public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException;1521016670;Creates and returns a new {@link RestServerEndpointConfiguration} from the given {@link Configuration}.__@param config configuration from which the REST server endpoint configuration should be created from_@return REST server endpoint configuration_@throws ConfigurationException if SSL was configured incorrectly;public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException {_		Preconditions.checkNotNull(config)__		String address = config.getString(RestOptions.REST_ADDRESS)___		int port = config.getInteger(RestOptions.REST_PORT)___		SSLEngine sslEngine = null__		boolean enableSSL = config.getBoolean(SecurityOptions.SSL_ENABLED)__		if (enableSSL) {_			try {_				SSLContext sslContext = SSLUtils.createSSLServerContext(config)__				if (sslContext != null) {_					sslEngine = sslContext.createSSLEngine()__					SSLUtils.setSSLVerAndCipherSuites(sslEngine, config)__					sslEngine.setUseClientMode(false)__				}_			} catch (Exception e) {_				throw new ConfigurationException("Failed to initialize SSLContext for REST server endpoint.", e)__			}_		}__		final Path uploadDir = Paths.get(_			config.getString(WebOptions.UPLOAD_DIR,	config.getString(WebOptions.TMP_DIR)),_			"flink-web-upload-" + UUID.randomUUID())___		int maxContentLength = config.getInteger(RestOptions.REST_SERVER_CONTENT_MAX_MB) * 1024 * 1024__		if (maxContentLength <= 0) {_			throw new ConfigurationException("Max content length for server must be a positive integer: " + maxContentLength)__		}__		return new RestServerEndpointConfiguration(address, port, sslEngine, uploadDir, maxContentLength)__	};creates,and,returns,a,new,link,rest,server,endpoint,configuration,from,the,given,link,configuration,param,config,configuration,from,which,the,rest,server,endpoint,configuration,should,be,created,from,return,rest,server,endpoint,configuration,throws,configuration,exception,if,ssl,was,configured,incorrectly;public,static,rest,server,endpoint,configuration,from,configuration,configuration,config,throws,configuration,exception,preconditions,check,not,null,config,string,address,config,get,string,rest,options,int,port,config,get,integer,rest,options,sslengine,ssl,engine,null,boolean,enable,ssl,config,get,boolean,security,options,if,enable,ssl,try,sslcontext,ssl,context,sslutils,create,sslserver,context,config,if,ssl,context,null,ssl,engine,ssl,context,create,sslengine,sslutils,set,sslver,and,cipher,suites,ssl,engine,config,ssl,engine,set,use,client,mode,false,catch,exception,e,throw,new,configuration,exception,failed,to,initialize,sslcontext,for,rest,server,endpoint,e,final,path,upload,dir,paths,get,config,get,string,web,options,config,get,string,web,options,flink,web,upload,uuid,random,uuid,int,max,content,length,config,get,integer,rest,options,1024,1024,if,max,content,length,0,throw,new,configuration,exception,max,content,length,for,server,must,be,a,positive,integer,max,content,length,return,new,rest,server,endpoint,configuration,address,port,ssl,engine,upload,dir,max,content,length
RestServerEndpointConfiguration -> public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException;1521016671;Creates and returns a new {@link RestServerEndpointConfiguration} from the given {@link Configuration}.__@param config configuration from which the REST server endpoint configuration should be created from_@return REST server endpoint configuration_@throws ConfigurationException if SSL was configured incorrectly;public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException {_		Preconditions.checkNotNull(config)__		String address = config.getString(RestOptions.REST_ADDRESS)___		int port = config.getInteger(RestOptions.REST_PORT)___		SSLEngine sslEngine = null__		boolean enableSSL = config.getBoolean(SecurityOptions.SSL_ENABLED)__		if (enableSSL) {_			try {_				SSLContext sslContext = SSLUtils.createSSLServerContext(config)__				if (sslContext != null) {_					sslEngine = sslContext.createSSLEngine()__					SSLUtils.setSSLVerAndCipherSuites(sslEngine, config)__					sslEngine.setUseClientMode(false)__				}_			} catch (Exception e) {_				throw new ConfigurationException("Failed to initialize SSLContext for REST server endpoint.", e)__			}_		}__		final Path uploadDir = Paths.get(_			config.getString(WebOptions.UPLOAD_DIR,	config.getString(WebOptions.TMP_DIR)),_			"flink-web-upload-" + UUID.randomUUID())___		int maxContentLength = config.getInteger(RestOptions.REST_SERVER_MAX_CONTENT_LENGTH)___		final Map<String, String> responseHeaders = Collections.singletonMap(_			HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN,_			config.getString(WebOptions.ACCESS_CONTROL_ALLOW_ORIGIN))___		return new RestServerEndpointConfiguration(_			address,_			port,_			sslEngine,_			uploadDir,_			maxContentLength,_			responseHeaders)__	};creates,and,returns,a,new,link,rest,server,endpoint,configuration,from,the,given,link,configuration,param,config,configuration,from,which,the,rest,server,endpoint,configuration,should,be,created,from,return,rest,server,endpoint,configuration,throws,configuration,exception,if,ssl,was,configured,incorrectly;public,static,rest,server,endpoint,configuration,from,configuration,configuration,config,throws,configuration,exception,preconditions,check,not,null,config,string,address,config,get,string,rest,options,int,port,config,get,integer,rest,options,sslengine,ssl,engine,null,boolean,enable,ssl,config,get,boolean,security,options,if,enable,ssl,try,sslcontext,ssl,context,sslutils,create,sslserver,context,config,if,ssl,context,null,ssl,engine,ssl,context,create,sslengine,sslutils,set,sslver,and,cipher,suites,ssl,engine,config,ssl,engine,set,use,client,mode,false,catch,exception,e,throw,new,configuration,exception,failed,to,initialize,sslcontext,for,rest,server,endpoint,e,final,path,upload,dir,paths,get,config,get,string,web,options,config,get,string,web,options,flink,web,upload,uuid,random,uuid,int,max,content,length,config,get,integer,rest,options,final,map,string,string,response,headers,collections,singleton,map,http,headers,names,config,get,string,web,options,return,new,rest,server,endpoint,configuration,address,port,ssl,engine,upload,dir,max,content,length,response,headers
RestServerEndpointConfiguration -> public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException;1521385094;Creates and returns a new {@link RestServerEndpointConfiguration} from the given {@link Configuration}.__@param config configuration from which the REST server endpoint configuration should be created from_@return REST server endpoint configuration_@throws ConfigurationException if SSL was configured incorrectly;public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException {_		Preconditions.checkNotNull(config)___		final String restAddress = Preconditions.checkNotNull(config.getString(RestOptions.REST_ADDRESS),_			"%s must be set",_			RestOptions.REST_ADDRESS.key())___		final String restBindAddress = config.getString(RestOptions.REST_BIND_ADDRESS)__		final int port = config.getInteger(RestOptions.REST_PORT)___		SSLEngine sslEngine = null__		final boolean enableSSL = config.getBoolean(SecurityOptions.SSL_ENABLED)__		if (enableSSL) {_			try {_				SSLContext sslContext = SSLUtils.createSSLServerContext(config)__				if (sslContext != null) {_					sslEngine = sslContext.createSSLEngine()__					SSLUtils.setSSLVerAndCipherSuites(sslEngine, config)__					sslEngine.setUseClientMode(false)__				}_			} catch (Exception e) {_				throw new ConfigurationException("Failed to initialize SSLContext for REST server endpoint.", e)__			}_		}__		final Path uploadDir = Paths.get(_			config.getString(WebOptions.UPLOAD_DIR,	config.getString(WebOptions.TMP_DIR)),_			"flink-web-upload-" + UUID.randomUUID())___		final int maxContentLength = config.getInteger(RestOptions.REST_SERVER_MAX_CONTENT_LENGTH)___		final Map<String, String> responseHeaders = Collections.singletonMap(_			HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN,_			config.getString(WebOptions.ACCESS_CONTROL_ALLOW_ORIGIN))___		return new RestServerEndpointConfiguration(_			restAddress,_			restBindAddress,_			port,_			sslEngine,_			uploadDir,_			maxContentLength,_			responseHeaders)__	};creates,and,returns,a,new,link,rest,server,endpoint,configuration,from,the,given,link,configuration,param,config,configuration,from,which,the,rest,server,endpoint,configuration,should,be,created,from,return,rest,server,endpoint,configuration,throws,configuration,exception,if,ssl,was,configured,incorrectly;public,static,rest,server,endpoint,configuration,from,configuration,configuration,config,throws,configuration,exception,preconditions,check,not,null,config,final,string,rest,address,preconditions,check,not,null,config,get,string,rest,options,s,must,be,set,rest,options,key,final,string,rest,bind,address,config,get,string,rest,options,final,int,port,config,get,integer,rest,options,sslengine,ssl,engine,null,final,boolean,enable,ssl,config,get,boolean,security,options,if,enable,ssl,try,sslcontext,ssl,context,sslutils,create,sslserver,context,config,if,ssl,context,null,ssl,engine,ssl,context,create,sslengine,sslutils,set,sslver,and,cipher,suites,ssl,engine,config,ssl,engine,set,use,client,mode,false,catch,exception,e,throw,new,configuration,exception,failed,to,initialize,sslcontext,for,rest,server,endpoint,e,final,path,upload,dir,paths,get,config,get,string,web,options,config,get,string,web,options,flink,web,upload,uuid,random,uuid,final,int,max,content,length,config,get,integer,rest,options,final,map,string,string,response,headers,collections,singleton,map,http,headers,names,config,get,string,web,options,return,new,rest,server,endpoint,configuration,rest,address,rest,bind,address,port,ssl,engine,upload,dir,max,content,length,response,headers
RestServerEndpointConfiguration -> public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException;1521804758;Creates and returns a new {@link RestServerEndpointConfiguration} from the given {@link Configuration}.__@param config configuration from which the REST server endpoint configuration should be created from_@return REST server endpoint configuration_@throws ConfigurationException if SSL was configured incorrectly;public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException {_		Preconditions.checkNotNull(config)___		final String restAddress = Preconditions.checkNotNull(config.getString(RestOptions.REST_ADDRESS),_			"%s must be set",_			RestOptions.REST_ADDRESS.key())___		final String restBindAddress = config.getString(RestOptions.REST_BIND_ADDRESS)__		final int port = config.getInteger(RestOptions.REST_PORT)___		SSLEngine sslEngine = null__		final boolean enableSSL = config.getBoolean(SecurityOptions.SSL_ENABLED)__		if (enableSSL) {_			try {_				SSLContext sslContext = SSLUtils.createSSLServerContext(config)__				if (sslContext != null) {_					sslEngine = sslContext.createSSLEngine()__					SSLUtils.setSSLVerAndCipherSuites(sslEngine, config)__					sslEngine.setUseClientMode(false)__				}_			} catch (Exception e) {_				throw new ConfigurationException("Failed to initialize SSLContext for REST server endpoint.", e)__			}_		}__		final Path uploadDir = Paths.get(_			config.getString(WebOptions.UPLOAD_DIR,	config.getString(WebOptions.TMP_DIR)),_			"flink-web-upload")___		final int maxContentLength = config.getInteger(RestOptions.REST_SERVER_MAX_CONTENT_LENGTH)___		final Map<String, String> responseHeaders = Collections.singletonMap(_			HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN,_			config.getString(WebOptions.ACCESS_CONTROL_ALLOW_ORIGIN))___		return new RestServerEndpointConfiguration(_			restAddress,_			restBindAddress,_			port,_			sslEngine,_			uploadDir,_			maxContentLength,_			responseHeaders)__	};creates,and,returns,a,new,link,rest,server,endpoint,configuration,from,the,given,link,configuration,param,config,configuration,from,which,the,rest,server,endpoint,configuration,should,be,created,from,return,rest,server,endpoint,configuration,throws,configuration,exception,if,ssl,was,configured,incorrectly;public,static,rest,server,endpoint,configuration,from,configuration,configuration,config,throws,configuration,exception,preconditions,check,not,null,config,final,string,rest,address,preconditions,check,not,null,config,get,string,rest,options,s,must,be,set,rest,options,key,final,string,rest,bind,address,config,get,string,rest,options,final,int,port,config,get,integer,rest,options,sslengine,ssl,engine,null,final,boolean,enable,ssl,config,get,boolean,security,options,if,enable,ssl,try,sslcontext,ssl,context,sslutils,create,sslserver,context,config,if,ssl,context,null,ssl,engine,ssl,context,create,sslengine,sslutils,set,sslver,and,cipher,suites,ssl,engine,config,ssl,engine,set,use,client,mode,false,catch,exception,e,throw,new,configuration,exception,failed,to,initialize,sslcontext,for,rest,server,endpoint,e,final,path,upload,dir,paths,get,config,get,string,web,options,config,get,string,web,options,flink,web,upload,final,int,max,content,length,config,get,integer,rest,options,final,map,string,string,response,headers,collections,singleton,map,http,headers,names,config,get,string,web,options,return,new,rest,server,endpoint,configuration,rest,address,rest,bind,address,port,ssl,engine,upload,dir,max,content,length,response,headers
RestServerEndpointConfiguration -> public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException;1524124694;Creates and returns a new {@link RestServerEndpointConfiguration} from the given {@link Configuration}.__@param config configuration from which the REST server endpoint configuration should be created from_@return REST server endpoint configuration_@throws ConfigurationException if SSL was configured incorrectly;public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException {_		Preconditions.checkNotNull(config)___		final String restAddress = Preconditions.checkNotNull(config.getString(RestOptions.ADDRESS),_			"%s must be set",_			RestOptions.ADDRESS.key())___		final String restBindAddress = config.getString(RestOptions.BIND_ADDRESS)__		final int port = config.getInteger(RestOptions.PORT)___		SSLEngine sslEngine = null__		final boolean enableSSL = config.getBoolean(SecurityOptions.SSL_ENABLED)__		if (enableSSL) {_			try {_				SSLContext sslContext = SSLUtils.createSSLServerContext(config)__				if (sslContext != null) {_					sslEngine = sslContext.createSSLEngine()__					SSLUtils.setSSLVerAndCipherSuites(sslEngine, config)__					sslEngine.setUseClientMode(false)__				}_			} catch (Exception e) {_				throw new ConfigurationException("Failed to initialize SSLContext for REST server endpoint.", e)__			}_		}__		final Path uploadDir = Paths.get(_			config.getString(WebOptions.UPLOAD_DIR,	config.getString(WebOptions.TMP_DIR)),_			"flink-web-upload")___		final int maxContentLength = config.getInteger(RestOptions.SERVER_MAX_CONTENT_LENGTH)___		final Map<String, String> responseHeaders = Collections.singletonMap(_			HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN,_			config.getString(WebOptions.ACCESS_CONTROL_ALLOW_ORIGIN))___		return new RestServerEndpointConfiguration(_			restAddress,_			restBindAddress,_			port,_			sslEngine,_			uploadDir,_			maxContentLength,_			responseHeaders)__	};creates,and,returns,a,new,link,rest,server,endpoint,configuration,from,the,given,link,configuration,param,config,configuration,from,which,the,rest,server,endpoint,configuration,should,be,created,from,return,rest,server,endpoint,configuration,throws,configuration,exception,if,ssl,was,configured,incorrectly;public,static,rest,server,endpoint,configuration,from,configuration,configuration,config,throws,configuration,exception,preconditions,check,not,null,config,final,string,rest,address,preconditions,check,not,null,config,get,string,rest,options,address,s,must,be,set,rest,options,address,key,final,string,rest,bind,address,config,get,string,rest,options,final,int,port,config,get,integer,rest,options,port,sslengine,ssl,engine,null,final,boolean,enable,ssl,config,get,boolean,security,options,if,enable,ssl,try,sslcontext,ssl,context,sslutils,create,sslserver,context,config,if,ssl,context,null,ssl,engine,ssl,context,create,sslengine,sslutils,set,sslver,and,cipher,suites,ssl,engine,config,ssl,engine,set,use,client,mode,false,catch,exception,e,throw,new,configuration,exception,failed,to,initialize,sslcontext,for,rest,server,endpoint,e,final,path,upload,dir,paths,get,config,get,string,web,options,config,get,string,web,options,flink,web,upload,final,int,max,content,length,config,get,integer,rest,options,final,map,string,string,response,headers,collections,singleton,map,http,headers,names,config,get,string,web,options,return,new,rest,server,endpoint,configuration,rest,address,rest,bind,address,port,ssl,engine,upload,dir,max,content,length,response,headers
RestServerEndpointConfiguration -> public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException;1525904579;Creates and returns a new {@link RestServerEndpointConfiguration} from the given {@link Configuration}.__@param config configuration from which the REST server endpoint configuration should be created from_@return REST server endpoint configuration_@throws ConfigurationException if SSL was configured incorrectly;public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException {_		Preconditions.checkNotNull(config)___		final String restAddress = Preconditions.checkNotNull(config.getString(RestOptions.ADDRESS),_			"%s must be set",_			RestOptions.ADDRESS.key())___		final String restBindAddress = config.getString(RestOptions.BIND_ADDRESS)__		final int port = config.getInteger(RestOptions.PORT)___		final SSLEngineFactory sslEngineFactory__		final boolean enableSSL = config.getBoolean(SecurityOptions.SSL_ENABLED) && config.getBoolean(WebOptions.SSL_ENABLED)__		if (enableSSL) {_			try {_				sslEngineFactory = SSLUtils.createServerSSLEngineFactory(config)__			} catch (Exception e) {_				throw new ConfigurationException("Failed to initialize SSLEngineFactory for REST server endpoint.", e)__			}_		} else {_			sslEngineFactory = null__		}__		final Path uploadDir = Paths.get(_			config.getString(WebOptions.UPLOAD_DIR,	config.getString(WebOptions.TMP_DIR)),_			"flink-web-upload")___		final int maxContentLength = config.getInteger(RestOptions.SERVER_MAX_CONTENT_LENGTH)___		final Map<String, String> responseHeaders = Collections.singletonMap(_			HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN,_			config.getString(WebOptions.ACCESS_CONTROL_ALLOW_ORIGIN))___		return new RestServerEndpointConfiguration(_			restAddress,_			restBindAddress,_			port,_			sslEngineFactory,_			uploadDir,_			maxContentLength,_			responseHeaders)__	};creates,and,returns,a,new,link,rest,server,endpoint,configuration,from,the,given,link,configuration,param,config,configuration,from,which,the,rest,server,endpoint,configuration,should,be,created,from,return,rest,server,endpoint,configuration,throws,configuration,exception,if,ssl,was,configured,incorrectly;public,static,rest,server,endpoint,configuration,from,configuration,configuration,config,throws,configuration,exception,preconditions,check,not,null,config,final,string,rest,address,preconditions,check,not,null,config,get,string,rest,options,address,s,must,be,set,rest,options,address,key,final,string,rest,bind,address,config,get,string,rest,options,final,int,port,config,get,integer,rest,options,port,final,sslengine,factory,ssl,engine,factory,final,boolean,enable,ssl,config,get,boolean,security,options,config,get,boolean,web,options,if,enable,ssl,try,ssl,engine,factory,sslutils,create,server,sslengine,factory,config,catch,exception,e,throw,new,configuration,exception,failed,to,initialize,sslengine,factory,for,rest,server,endpoint,e,else,ssl,engine,factory,null,final,path,upload,dir,paths,get,config,get,string,web,options,config,get,string,web,options,flink,web,upload,final,int,max,content,length,config,get,integer,rest,options,final,map,string,string,response,headers,collections,singleton,map,http,headers,names,config,get,string,web,options,return,new,rest,server,endpoint,configuration,rest,address,rest,bind,address,port,ssl,engine,factory,upload,dir,max,content,length,response,headers
RestServerEndpointConfiguration -> public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException;1531721446;Creates and returns a new {@link RestServerEndpointConfiguration} from the given {@link Configuration}.__@param config configuration from which the REST server endpoint configuration should be created from_@return REST server endpoint configuration_@throws ConfigurationException if SSL was configured incorrectly;public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException {_		Preconditions.checkNotNull(config)___		final String restAddress = Preconditions.checkNotNull(config.getString(RestOptions.ADDRESS),_			"%s must be set",_			RestOptions.ADDRESS.key())___		final String restBindAddress = config.getString(RestOptions.BIND_ADDRESS)__		final int port = config.getInteger(RestOptions.PORT)___		final SSLEngineFactory sslEngineFactory__		if (SSLUtils.isRestSSLEnabled(config)) {_			try {_				sslEngineFactory = SSLUtils.createRestServerSSLEngineFactory(config)__			} catch (Exception e) {_				throw new ConfigurationException("Failed to initialize SSLEngineFactory for REST server endpoint.", e)__			}_		} else {_			sslEngineFactory = null__		}__		final Path uploadDir = Paths.get(_			config.getString(WebOptions.UPLOAD_DIR,	config.getString(WebOptions.TMP_DIR)),_			"flink-web-upload")___		final int maxContentLength = config.getInteger(RestOptions.SERVER_MAX_CONTENT_LENGTH)___		final Map<String, String> responseHeaders = Collections.singletonMap(_			HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN,_			config.getString(WebOptions.ACCESS_CONTROL_ALLOW_ORIGIN))___		return new RestServerEndpointConfiguration(_			restAddress,_			restBindAddress,_			port,_			sslEngineFactory,_			uploadDir,_			maxContentLength,_			responseHeaders)__	};creates,and,returns,a,new,link,rest,server,endpoint,configuration,from,the,given,link,configuration,param,config,configuration,from,which,the,rest,server,endpoint,configuration,should,be,created,from,return,rest,server,endpoint,configuration,throws,configuration,exception,if,ssl,was,configured,incorrectly;public,static,rest,server,endpoint,configuration,from,configuration,configuration,config,throws,configuration,exception,preconditions,check,not,null,config,final,string,rest,address,preconditions,check,not,null,config,get,string,rest,options,address,s,must,be,set,rest,options,address,key,final,string,rest,bind,address,config,get,string,rest,options,final,int,port,config,get,integer,rest,options,port,final,sslengine,factory,ssl,engine,factory,if,sslutils,is,rest,sslenabled,config,try,ssl,engine,factory,sslutils,create,rest,server,sslengine,factory,config,catch,exception,e,throw,new,configuration,exception,failed,to,initialize,sslengine,factory,for,rest,server,endpoint,e,else,ssl,engine,factory,null,final,path,upload,dir,paths,get,config,get,string,web,options,config,get,string,web,options,flink,web,upload,final,int,max,content,length,config,get,integer,rest,options,final,map,string,string,response,headers,collections,singleton,map,http,headers,names,config,get,string,web,options,return,new,rest,server,endpoint,configuration,rest,address,rest,bind,address,port,ssl,engine,factory,upload,dir,max,content,length,response,headers
RestServerEndpointConfiguration -> public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException;1540215410;Creates and returns a new {@link RestServerEndpointConfiguration} from the given {@link Configuration}.__@param config configuration from which the REST server endpoint configuration should be created from_@return REST server endpoint configuration_@throws ConfigurationException if SSL was configured incorrectly;public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException {_		Preconditions.checkNotNull(config)___		final String restAddress = Preconditions.checkNotNull(config.getString(RestOptions.ADDRESS),_			"%s must be set",_			RestOptions.ADDRESS.key())___		final String restBindAddress = config.getString(RestOptions.BIND_ADDRESS)__		final int port = config.getInteger(RestOptions.PORT)___		final SSLHandlerFactory sslHandlerFactory__		if (SSLUtils.isRestSSLEnabled(config)) {_			try {_				sslHandlerFactory = SSLUtils.createRestServerSSLEngineFactory(config)__			} catch (Exception e) {_				throw new ConfigurationException("Failed to initialize SSLEngineFactory for REST server endpoint.", e)__			}_		} else {_			sslHandlerFactory = null__		}__		final Path uploadDir = Paths.get(_			config.getString(WebOptions.UPLOAD_DIR,	config.getString(WebOptions.TMP_DIR)),_			"flink-web-upload")___		final int maxContentLength = config.getInteger(RestOptions.SERVER_MAX_CONTENT_LENGTH)___		final Map<String, String> responseHeaders = Collections.singletonMap(_			HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN,_			config.getString(WebOptions.ACCESS_CONTROL_ALLOW_ORIGIN))___		return new RestServerEndpointConfiguration(_			restAddress,_			restBindAddress,_			port,_			sslHandlerFactory,_			uploadDir,_			maxContentLength,_			responseHeaders)__	};creates,and,returns,a,new,link,rest,server,endpoint,configuration,from,the,given,link,configuration,param,config,configuration,from,which,the,rest,server,endpoint,configuration,should,be,created,from,return,rest,server,endpoint,configuration,throws,configuration,exception,if,ssl,was,configured,incorrectly;public,static,rest,server,endpoint,configuration,from,configuration,configuration,config,throws,configuration,exception,preconditions,check,not,null,config,final,string,rest,address,preconditions,check,not,null,config,get,string,rest,options,address,s,must,be,set,rest,options,address,key,final,string,rest,bind,address,config,get,string,rest,options,final,int,port,config,get,integer,rest,options,port,final,sslhandler,factory,ssl,handler,factory,if,sslutils,is,rest,sslenabled,config,try,ssl,handler,factory,sslutils,create,rest,server,sslengine,factory,config,catch,exception,e,throw,new,configuration,exception,failed,to,initialize,sslengine,factory,for,rest,server,endpoint,e,else,ssl,handler,factory,null,final,path,upload,dir,paths,get,config,get,string,web,options,config,get,string,web,options,flink,web,upload,final,int,max,content,length,config,get,integer,rest,options,final,map,string,string,response,headers,collections,singleton,map,http,headers,names,config,get,string,web,options,return,new,rest,server,endpoint,configuration,rest,address,rest,bind,address,port,ssl,handler,factory,upload,dir,max,content,length,response,headers
RestServerEndpointConfiguration -> public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException;1550222817;Creates and returns a new {@link RestServerEndpointConfiguration} from the given {@link Configuration}.__@param config configuration from which the REST server endpoint configuration should be created from_@return REST server endpoint configuration_@throws ConfigurationException if SSL was configured incorrectly;public static RestServerEndpointConfiguration fromConfiguration(Configuration config) throws ConfigurationException {_		Preconditions.checkNotNull(config)___		final String restAddress = Preconditions.checkNotNull(config.getString(RestOptions.ADDRESS),_			"%s must be set",_			RestOptions.ADDRESS.key())___		final String restBindAddress = config.getString(RestOptions.BIND_ADDRESS)__		final String portRangeDefinition = config.getString(RestOptions.BIND_PORT)___		final SSLHandlerFactory sslHandlerFactory__		if (SSLUtils.isRestSSLEnabled(config)) {_			try {_				sslHandlerFactory = SSLUtils.createRestServerSSLEngineFactory(config)__			} catch (Exception e) {_				throw new ConfigurationException("Failed to initialize SSLEngineFactory for REST server endpoint.", e)__			}_		} else {_			sslHandlerFactory = null__		}__		final Path uploadDir = Paths.get(_			config.getString(WebOptions.UPLOAD_DIR,	config.getString(WebOptions.TMP_DIR)),_			"flink-web-upload")___		final int maxContentLength = config.getInteger(RestOptions.SERVER_MAX_CONTENT_LENGTH)___		final Map<String, String> responseHeaders = Collections.singletonMap(_			HttpHeaders.Names.ACCESS_CONTROL_ALLOW_ORIGIN,_			config.getString(WebOptions.ACCESS_CONTROL_ALLOW_ORIGIN))___		return new RestServerEndpointConfiguration(_			restAddress,_			restBindAddress,_			portRangeDefinition,_			sslHandlerFactory,_			uploadDir,_			maxContentLength,_			responseHeaders)__	};creates,and,returns,a,new,link,rest,server,endpoint,configuration,from,the,given,link,configuration,param,config,configuration,from,which,the,rest,server,endpoint,configuration,should,be,created,from,return,rest,server,endpoint,configuration,throws,configuration,exception,if,ssl,was,configured,incorrectly;public,static,rest,server,endpoint,configuration,from,configuration,configuration,config,throws,configuration,exception,preconditions,check,not,null,config,final,string,rest,address,preconditions,check,not,null,config,get,string,rest,options,address,s,must,be,set,rest,options,address,key,final,string,rest,bind,address,config,get,string,rest,options,final,string,port,range,definition,config,get,string,rest,options,final,sslhandler,factory,ssl,handler,factory,if,sslutils,is,rest,sslenabled,config,try,ssl,handler,factory,sslutils,create,rest,server,sslengine,factory,config,catch,exception,e,throw,new,configuration,exception,failed,to,initialize,sslengine,factory,for,rest,server,endpoint,e,else,ssl,handler,factory,null,final,path,upload,dir,paths,get,config,get,string,web,options,config,get,string,web,options,flink,web,upload,final,int,max,content,length,config,get,integer,rest,options,final,map,string,string,response,headers,collections,singleton,map,http,headers,names,config,get,string,web,options,return,new,rest,server,endpoint,configuration,rest,address,rest,bind,address,port,range,definition,ssl,handler,factory,upload,dir,max,content,length,response,headers
RestServerEndpointConfiguration -> @Nullable 	public SSLEngineFactory getSslEngineFactory();1525904579;Returns the {@link SSLEngine} that the REST server endpoint should use.__@return SSLEngine that the REST server endpoint should use, or null if SSL was disabled;@Nullable_	public SSLEngineFactory getSslEngineFactory() {_		return sslEngineFactory__	};returns,the,link,sslengine,that,the,rest,server,endpoint,should,use,return,sslengine,that,the,rest,server,endpoint,should,use,or,null,if,ssl,was,disabled;nullable,public,sslengine,factory,get,ssl,engine,factory,return,ssl,engine,factory
RestServerEndpointConfiguration -> @Nullable 	public SSLEngineFactory getSslEngineFactory();1531721446;Returns the {@link SSLEngine} that the REST server endpoint should use.__@return SSLEngine that the REST server endpoint should use, or null if SSL was disabled;@Nullable_	public SSLEngineFactory getSslEngineFactory() {_		return sslEngineFactory__	};returns,the,link,sslengine,that,the,rest,server,endpoint,should,use,return,sslengine,that,the,rest,server,endpoint,should,use,or,null,if,ssl,was,disabled;nullable,public,sslengine,factory,get,ssl,engine,factory,return,ssl,engine,factory
RestServerEndpointConfiguration -> public String getRestBindAddress();1521385094;Returns the address that the REST server endpoint should bind itself to.__@return address that the REST server endpoint should bind itself to;public String getRestBindAddress() {_		return restBindAddress__	};returns,the,address,that,the,rest,server,endpoint,should,bind,itself,to,return,address,that,the,rest,server,endpoint,should,bind,itself,to;public,string,get,rest,bind,address,return,rest,bind,address
RestServerEndpointConfiguration -> public String getRestBindAddress();1521804758;Returns the address that the REST server endpoint should bind itself to.__@return address that the REST server endpoint should bind itself to;public String getRestBindAddress() {_		return restBindAddress__	};returns,the,address,that,the,rest,server,endpoint,should,bind,itself,to,return,address,that,the,rest,server,endpoint,should,bind,itself,to;public,string,get,rest,bind,address,return,rest,bind,address
RestServerEndpointConfiguration -> public String getRestBindAddress();1524124694;Returns the address that the REST server endpoint should bind itself to.__@return address that the REST server endpoint should bind itself to;public String getRestBindAddress() {_		return restBindAddress__	};returns,the,address,that,the,rest,server,endpoint,should,bind,itself,to,return,address,that,the,rest,server,endpoint,should,bind,itself,to;public,string,get,rest,bind,address,return,rest,bind,address
RestServerEndpointConfiguration -> public String getRestBindAddress();1525904579;Returns the address that the REST server endpoint should bind itself to.__@return address that the REST server endpoint should bind itself to;public String getRestBindAddress() {_		return restBindAddress__	};returns,the,address,that,the,rest,server,endpoint,should,bind,itself,to,return,address,that,the,rest,server,endpoint,should,bind,itself,to;public,string,get,rest,bind,address,return,rest,bind,address
RestServerEndpointConfiguration -> public String getRestBindAddress();1531721446;Returns the address that the REST server endpoint should bind itself to.__@return address that the REST server endpoint should bind itself to;public String getRestBindAddress() {_		return restBindAddress__	};returns,the,address,that,the,rest,server,endpoint,should,bind,itself,to,return,address,that,the,rest,server,endpoint,should,bind,itself,to;public,string,get,rest,bind,address,return,rest,bind,address
RestServerEndpointConfiguration -> public String getRestBindAddress();1540215410;Returns the address that the REST server endpoint should bind itself to.__@return address that the REST server endpoint should bind itself to;public String getRestBindAddress() {_		return restBindAddress__	};returns,the,address,that,the,rest,server,endpoint,should,bind,itself,to,return,address,that,the,rest,server,endpoint,should,bind,itself,to;public,string,get,rest,bind,address,return,rest,bind,address
RestServerEndpointConfiguration -> public String getRestBindAddress();1550222817;Returns the address that the REST server endpoint should bind itself to.__@return address that the REST server endpoint should bind itself to;public String getRestBindAddress() {_		return restBindAddress__	};returns,the,address,that,the,rest,server,endpoint,should,bind,itself,to,return,address,that,the,rest,server,endpoint,should,bind,itself,to;public,string,get,rest,bind,address,return,rest,bind,address
RestServerEndpointConfiguration -> public int getRestBindPort();1521385094;Returns the port that the REST server endpoint should listen on.__@return port that the REST server endpoint should listen on;public int getRestBindPort() {_		return restBindPort__	};returns,the,port,that,the,rest,server,endpoint,should,listen,on,return,port,that,the,rest,server,endpoint,should,listen,on;public,int,get,rest,bind,port,return,rest,bind,port
RestServerEndpointConfiguration -> public int getRestBindPort();1521804758;Returns the port that the REST server endpoint should listen on.__@return port that the REST server endpoint should listen on;public int getRestBindPort() {_		return restBindPort__	};returns,the,port,that,the,rest,server,endpoint,should,listen,on,return,port,that,the,rest,server,endpoint,should,listen,on;public,int,get,rest,bind,port,return,rest,bind,port
RestServerEndpointConfiguration -> public int getRestBindPort();1524124694;Returns the port that the REST server endpoint should listen on.__@return port that the REST server endpoint should listen on;public int getRestBindPort() {_		return restBindPort__	};returns,the,port,that,the,rest,server,endpoint,should,listen,on,return,port,that,the,rest,server,endpoint,should,listen,on;public,int,get,rest,bind,port,return,rest,bind,port
RestServerEndpointConfiguration -> public int getRestBindPort();1525904579;Returns the port that the REST server endpoint should listen on.__@return port that the REST server endpoint should listen on;public int getRestBindPort() {_		return restBindPort__	};returns,the,port,that,the,rest,server,endpoint,should,listen,on,return,port,that,the,rest,server,endpoint,should,listen,on;public,int,get,rest,bind,port,return,rest,bind,port
RestServerEndpointConfiguration -> public int getRestBindPort();1531721446;Returns the port that the REST server endpoint should listen on.__@return port that the REST server endpoint should listen on;public int getRestBindPort() {_		return restBindPort__	};returns,the,port,that,the,rest,server,endpoint,should,listen,on,return,port,that,the,rest,server,endpoint,should,listen,on;public,int,get,rest,bind,port,return,rest,bind,port
RestServerEndpointConfiguration -> public int getRestBindPort();1540215410;Returns the port that the REST server endpoint should listen on.__@return port that the REST server endpoint should listen on;public int getRestBindPort() {_		return restBindPort__	};returns,the,port,that,the,rest,server,endpoint,should,listen,on,return,port,that,the,rest,server,endpoint,should,listen,on;public,int,get,rest,bind,port,return,rest,bind,port
RestServerEndpointConfiguration -> public int getEndpointBindPort();1503738659;Returns the port that the REST server endpoint should listen on.__@return port that the REST server endpoint should listen on;public int getEndpointBindPort() {_		return restBindPort__	};returns,the,port,that,the,rest,server,endpoint,should,listen,on,return,port,that,the,rest,server,endpoint,should,listen,on;public,int,get,endpoint,bind,port,return,rest,bind,port
RestServerEndpointConfiguration -> public int getEndpointBindPort();1503738660;Returns the port that the REST server endpoint should listen on.__@return port that the REST server endpoint should listen on;public int getEndpointBindPort() {_		return restBindPort__	};returns,the,port,that,the,rest,server,endpoint,should,listen,on,return,port,that,the,rest,server,endpoint,should,listen,on;public,int,get,endpoint,bind,port,return,rest,bind,port
RestServerEndpointConfiguration -> public int getEndpointBindPort();1518680660;Returns the port that the REST server endpoint should listen on.__@return port that the REST server endpoint should listen on;public int getEndpointBindPort() {_		return restBindPort__	};returns,the,port,that,the,rest,server,endpoint,should,listen,on,return,port,that,the,rest,server,endpoint,should,listen,on;public,int,get,endpoint,bind,port,return,rest,bind,port
RestServerEndpointConfiguration -> public int getEndpointBindPort();1521016670;Returns the port that the REST server endpoint should listen on.__@return port that the REST server endpoint should listen on;public int getEndpointBindPort() {_		return restBindPort__	};returns,the,port,that,the,rest,server,endpoint,should,listen,on,return,port,that,the,rest,server,endpoint,should,listen,on;public,int,get,endpoint,bind,port,return,rest,bind,port
RestServerEndpointConfiguration -> public int getEndpointBindPort();1521016671;Returns the port that the REST server endpoint should listen on.__@return port that the REST server endpoint should listen on;public int getEndpointBindPort() {_		return restBindPort__	};returns,the,port,that,the,rest,server,endpoint,should,listen,on,return,port,that,the,rest,server,endpoint,should,listen,on;public,int,get,endpoint,bind,port,return,rest,bind,port
RestServerEndpointConfiguration -> public SSLEngine getSslEngine();1503738659;Returns the {@link SSLEngine} that the REST server endpoint should use.__@return SSLEngine that the REST server endpoint should use, or null if SSL was disabled;public SSLEngine getSslEngine() {_		return sslEngine__	};returns,the,link,sslengine,that,the,rest,server,endpoint,should,use,return,sslengine,that,the,rest,server,endpoint,should,use,or,null,if,ssl,was,disabled;public,sslengine,get,ssl,engine,return,ssl,engine
RestServerEndpointConfiguration -> public SSLEngine getSslEngine();1503738660;Returns the {@link SSLEngine} that the REST server endpoint should use.__@return SSLEngine that the REST server endpoint should use, or null if SSL was disabled;public SSLEngine getSslEngine() {_		return sslEngine__	};returns,the,link,sslengine,that,the,rest,server,endpoint,should,use,return,sslengine,that,the,rest,server,endpoint,should,use,or,null,if,ssl,was,disabled;public,sslengine,get,ssl,engine,return,ssl,engine
RestServerEndpointConfiguration -> public SSLEngine getSslEngine();1518680660;Returns the {@link SSLEngine} that the REST server endpoint should use.__@return SSLEngine that the REST server endpoint should use, or null if SSL was disabled;public SSLEngine getSslEngine() {_		return sslEngine__	};returns,the,link,sslengine,that,the,rest,server,endpoint,should,use,return,sslengine,that,the,rest,server,endpoint,should,use,or,null,if,ssl,was,disabled;public,sslengine,get,ssl,engine,return,ssl,engine
RestServerEndpointConfiguration -> public SSLEngine getSslEngine();1521016670;Returns the {@link SSLEngine} that the REST server endpoint should use.__@return SSLEngine that the REST server endpoint should use, or null if SSL was disabled;public SSLEngine getSslEngine() {_		return sslEngine__	};returns,the,link,sslengine,that,the,rest,server,endpoint,should,use,return,sslengine,that,the,rest,server,endpoint,should,use,or,null,if,ssl,was,disabled;public,sslengine,get,ssl,engine,return,ssl,engine
RestServerEndpointConfiguration -> public SSLEngine getSslEngine();1521016671;Returns the {@link SSLEngine} that the REST server endpoint should use.__@return SSLEngine that the REST server endpoint should use, or null if SSL was disabled;public SSLEngine getSslEngine() {_		return sslEngine__	};returns,the,link,sslengine,that,the,rest,server,endpoint,should,use,return,sslengine,that,the,rest,server,endpoint,should,use,or,null,if,ssl,was,disabled;public,sslengine,get,ssl,engine,return,ssl,engine
RestServerEndpointConfiguration -> public SSLEngine getSslEngine();1521385094;Returns the {@link SSLEngine} that the REST server endpoint should use.__@return SSLEngine that the REST server endpoint should use, or null if SSL was disabled;public SSLEngine getSslEngine() {_		return sslEngine__	};returns,the,link,sslengine,that,the,rest,server,endpoint,should,use,return,sslengine,that,the,rest,server,endpoint,should,use,or,null,if,ssl,was,disabled;public,sslengine,get,ssl,engine,return,ssl,engine
RestServerEndpointConfiguration -> public SSLEngine getSslEngine();1521804758;Returns the {@link SSLEngine} that the REST server endpoint should use.__@return SSLEngine that the REST server endpoint should use, or null if SSL was disabled;public SSLEngine getSslEngine() {_		return sslEngine__	};returns,the,link,sslengine,that,the,rest,server,endpoint,should,use,return,sslengine,that,the,rest,server,endpoint,should,use,or,null,if,ssl,was,disabled;public,sslengine,get,ssl,engine,return,ssl,engine
RestServerEndpointConfiguration -> public SSLEngine getSslEngine();1524124694;Returns the {@link SSLEngine} that the REST server endpoint should use.__@return SSLEngine that the REST server endpoint should use, or null if SSL was disabled;public SSLEngine getSslEngine() {_		return sslEngine__	};returns,the,link,sslengine,that,the,rest,server,endpoint,should,use,return,sslengine,that,the,rest,server,endpoint,should,use,or,null,if,ssl,was,disabled;public,sslengine,get,ssl,engine,return,ssl,engine
RestServerEndpointConfiguration -> public String getRestAddress();1521385094;@see RestOptions#REST_ADDRESS;public String getRestAddress() {_		return restAddress__	};see,rest,options;public,string,get,rest,address,return,rest,address
RestServerEndpointConfiguration -> public String getRestAddress();1521804758;@see RestOptions#REST_ADDRESS;public String getRestAddress() {_		return restAddress__	};see,rest,options;public,string,get,rest,address,return,rest,address
RestServerEndpointConfiguration -> public String getRestAddress();1524124694;@see RestOptions#ADDRESS;public String getRestAddress() {_		return restAddress__	};see,rest,options,address;public,string,get,rest,address,return,rest,address
RestServerEndpointConfiguration -> public String getRestAddress();1525904579;@see RestOptions#ADDRESS;public String getRestAddress() {_		return restAddress__	};see,rest,options,address;public,string,get,rest,address,return,rest,address
RestServerEndpointConfiguration -> public String getRestAddress();1531721446;@see RestOptions#ADDRESS;public String getRestAddress() {_		return restAddress__	};see,rest,options,address;public,string,get,rest,address,return,rest,address
RestServerEndpointConfiguration -> public String getRestAddress();1540215410;@see RestOptions#ADDRESS;public String getRestAddress() {_		return restAddress__	};see,rest,options,address;public,string,get,rest,address,return,rest,address
RestServerEndpointConfiguration -> public String getRestAddress();1550222817;@see RestOptions#ADDRESS;public String getRestAddress() {_		return restAddress__	};see,rest,options,address;public,string,get,rest,address,return,rest,address
RestServerEndpointConfiguration -> public Path getUploadDir();1518680660;Returns the directory used to temporarily store multipart/form-data uploads.;public Path getUploadDir() {_		return uploadDir__	};returns,the,directory,used,to,temporarily,store,multipart,form,data,uploads;public,path,get,upload,dir,return,upload,dir
RestServerEndpointConfiguration -> public Path getUploadDir();1521016670;Returns the directory used to temporarily store multipart/form-data uploads.;public Path getUploadDir() {_		return uploadDir__	};returns,the,directory,used,to,temporarily,store,multipart,form,data,uploads;public,path,get,upload,dir,return,upload,dir
RestServerEndpointConfiguration -> public Path getUploadDir();1521016671;Returns the directory used to temporarily store multipart/form-data uploads.;public Path getUploadDir() {_		return uploadDir__	};returns,the,directory,used,to,temporarily,store,multipart,form,data,uploads;public,path,get,upload,dir,return,upload,dir
RestServerEndpointConfiguration -> public Path getUploadDir();1521385094;Returns the directory used to temporarily store multipart/form-data uploads.;public Path getUploadDir() {_		return uploadDir__	};returns,the,directory,used,to,temporarily,store,multipart,form,data,uploads;public,path,get,upload,dir,return,upload,dir
RestServerEndpointConfiguration -> public Path getUploadDir();1521804758;Returns the directory used to temporarily store multipart/form-data uploads.;public Path getUploadDir() {_		return uploadDir__	};returns,the,directory,used,to,temporarily,store,multipart,form,data,uploads;public,path,get,upload,dir,return,upload,dir
RestServerEndpointConfiguration -> public Path getUploadDir();1524124694;Returns the directory used to temporarily store multipart/form-data uploads.;public Path getUploadDir() {_		return uploadDir__	};returns,the,directory,used,to,temporarily,store,multipart,form,data,uploads;public,path,get,upload,dir,return,upload,dir
RestServerEndpointConfiguration -> public Path getUploadDir();1525904579;Returns the directory used to temporarily store multipart/form-data uploads.;public Path getUploadDir() {_		return uploadDir__	};returns,the,directory,used,to,temporarily,store,multipart,form,data,uploads;public,path,get,upload,dir,return,upload,dir
RestServerEndpointConfiguration -> public Path getUploadDir();1531721446;Returns the directory used to temporarily store multipart/form-data uploads.;public Path getUploadDir() {_		return uploadDir__	};returns,the,directory,used,to,temporarily,store,multipart,form,data,uploads;public,path,get,upload,dir,return,upload,dir
RestServerEndpointConfiguration -> public Path getUploadDir();1540215410;Returns the directory used to temporarily store multipart/form-data uploads.;public Path getUploadDir() {_		return uploadDir__	};returns,the,directory,used,to,temporarily,store,multipart,form,data,uploads;public,path,get,upload,dir,return,upload,dir
RestServerEndpointConfiguration -> public Path getUploadDir();1550222817;Returns the directory used to temporarily store multipart/form-data uploads.;public Path getUploadDir() {_		return uploadDir__	};returns,the,directory,used,to,temporarily,store,multipart,form,data,uploads;public,path,get,upload,dir,return,upload,dir
RestServerEndpointConfiguration -> public Map<String, String> getResponseHeaders();1521016671;Response headers that should be added to every HTTP response.;public Map<String, String> getResponseHeaders() {_		return responseHeaders__	};response,headers,that,should,be,added,to,every,http,response;public,map,string,string,get,response,headers,return,response,headers
RestServerEndpointConfiguration -> public Map<String, String> getResponseHeaders();1521385094;Response headers that should be added to every HTTP response.;public Map<String, String> getResponseHeaders() {_		return responseHeaders__	};response,headers,that,should,be,added,to,every,http,response;public,map,string,string,get,response,headers,return,response,headers
RestServerEndpointConfiguration -> public Map<String, String> getResponseHeaders();1521804758;Response headers that should be added to every HTTP response.;public Map<String, String> getResponseHeaders() {_		return responseHeaders__	};response,headers,that,should,be,added,to,every,http,response;public,map,string,string,get,response,headers,return,response,headers
RestServerEndpointConfiguration -> public Map<String, String> getResponseHeaders();1524124694;Response headers that should be added to every HTTP response.;public Map<String, String> getResponseHeaders() {_		return responseHeaders__	};response,headers,that,should,be,added,to,every,http,response;public,map,string,string,get,response,headers,return,response,headers
RestServerEndpointConfiguration -> public Map<String, String> getResponseHeaders();1525904579;Response headers that should be added to every HTTP response.;public Map<String, String> getResponseHeaders() {_		return responseHeaders__	};response,headers,that,should,be,added,to,every,http,response;public,map,string,string,get,response,headers,return,response,headers
RestServerEndpointConfiguration -> public Map<String, String> getResponseHeaders();1531721446;Response headers that should be added to every HTTP response.;public Map<String, String> getResponseHeaders() {_		return responseHeaders__	};response,headers,that,should,be,added,to,every,http,response;public,map,string,string,get,response,headers,return,response,headers
RestServerEndpointConfiguration -> public Map<String, String> getResponseHeaders();1540215410;Response headers that should be added to every HTTP response.;public Map<String, String> getResponseHeaders() {_		return responseHeaders__	};response,headers,that,should,be,added,to,every,http,response;public,map,string,string,get,response,headers,return,response,headers
RestServerEndpointConfiguration -> public Map<String, String> getResponseHeaders();1550222817;Response headers that should be added to every HTTP response.;public Map<String, String> getResponseHeaders() {_		return responseHeaders__	};response,headers,that,should,be,added,to,every,http,response;public,map,string,string,get,response,headers,return,response,headers
RestServerEndpointConfiguration -> public int getMaxContentLength();1521016670;Returns the max content length that the REST server endpoint could handle.__@return max content length that the REST server endpoint could handle;public int getMaxContentLength() {_		return maxContentLength__	};returns,the,max,content,length,that,the,rest,server,endpoint,could,handle,return,max,content,length,that,the,rest,server,endpoint,could,handle;public,int,get,max,content,length,return,max,content,length
RestServerEndpointConfiguration -> public int getMaxContentLength();1521016671;Returns the max content length that the REST server endpoint could handle.__@return max content length that the REST server endpoint could handle;public int getMaxContentLength() {_		return maxContentLength__	};returns,the,max,content,length,that,the,rest,server,endpoint,could,handle,return,max,content,length,that,the,rest,server,endpoint,could,handle;public,int,get,max,content,length,return,max,content,length
RestServerEndpointConfiguration -> public int getMaxContentLength();1521385094;Returns the max content length that the REST server endpoint could handle.__@return max content length that the REST server endpoint could handle;public int getMaxContentLength() {_		return maxContentLength__	};returns,the,max,content,length,that,the,rest,server,endpoint,could,handle,return,max,content,length,that,the,rest,server,endpoint,could,handle;public,int,get,max,content,length,return,max,content,length
RestServerEndpointConfiguration -> public int getMaxContentLength();1521804758;Returns the max content length that the REST server endpoint could handle.__@return max content length that the REST server endpoint could handle;public int getMaxContentLength() {_		return maxContentLength__	};returns,the,max,content,length,that,the,rest,server,endpoint,could,handle,return,max,content,length,that,the,rest,server,endpoint,could,handle;public,int,get,max,content,length,return,max,content,length
RestServerEndpointConfiguration -> public int getMaxContentLength();1524124694;Returns the max content length that the REST server endpoint could handle.__@return max content length that the REST server endpoint could handle;public int getMaxContentLength() {_		return maxContentLength__	};returns,the,max,content,length,that,the,rest,server,endpoint,could,handle,return,max,content,length,that,the,rest,server,endpoint,could,handle;public,int,get,max,content,length,return,max,content,length
RestServerEndpointConfiguration -> public int getMaxContentLength();1525904579;Returns the max content length that the REST server endpoint could handle.__@return max content length that the REST server endpoint could handle;public int getMaxContentLength() {_		return maxContentLength__	};returns,the,max,content,length,that,the,rest,server,endpoint,could,handle,return,max,content,length,that,the,rest,server,endpoint,could,handle;public,int,get,max,content,length,return,max,content,length
RestServerEndpointConfiguration -> public int getMaxContentLength();1531721446;Returns the max content length that the REST server endpoint could handle.__@return max content length that the REST server endpoint could handle;public int getMaxContentLength() {_		return maxContentLength__	};returns,the,max,content,length,that,the,rest,server,endpoint,could,handle,return,max,content,length,that,the,rest,server,endpoint,could,handle;public,int,get,max,content,length,return,max,content,length
RestServerEndpointConfiguration -> public int getMaxContentLength();1540215410;Returns the max content length that the REST server endpoint could handle.__@return max content length that the REST server endpoint could handle;public int getMaxContentLength() {_		return maxContentLength__	};returns,the,max,content,length,that,the,rest,server,endpoint,could,handle,return,max,content,length,that,the,rest,server,endpoint,could,handle;public,int,get,max,content,length,return,max,content,length
RestServerEndpointConfiguration -> public int getMaxContentLength();1550222817;Returns the max content length that the REST server endpoint could handle.__@return max content length that the REST server endpoint could handle;public int getMaxContentLength() {_		return maxContentLength__	};returns,the,max,content,length,that,the,rest,server,endpoint,could,handle,return,max,content,length,that,the,rest,server,endpoint,could,handle;public,int,get,max,content,length,return,max,content,length
