commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Creates a UUID with the bits from this JobMasterId.  */ ;/**  * Creates a UUID with the bits from this JobMasterId.  */ public UUID toUUID() {     return new UUID(getUpperPart(), getLowerPart()). }
true;public,static;0;3;/**  * Generates a new random JobMasterId.  */ ;/**  * Generates a new random JobMasterId.  */ public static JobMasterId generate() {     return new JobMasterId(). }
true;public,static;1;3;/**  * If the given uuid is null, this returns null, otherwise a JobMasterId that  * corresponds to the UUID, via {@link #JobMasterId(UUID)}.  */ ;/**  * If the given uuid is null, this returns null, otherwise a JobMasterId that  * corresponds to the UUID, via {@link #JobMasterId(UUID)}.  */ public static JobMasterId fromUuidOrNull(@Nullable UUID uuid) {     return uuid == null ? null : new JobMasterId(uuid). }
