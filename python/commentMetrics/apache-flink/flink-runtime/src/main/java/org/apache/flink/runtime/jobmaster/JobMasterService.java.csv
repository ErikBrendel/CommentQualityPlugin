commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Start the JobMaster service with the given {@link JobMasterId}.  *  * @param jobMasterId to start the service with  * @return Future which is completed once the JobMaster service has been started  * @throws Exception if the JobMaster service could not be started  */ ;/**  * Start the JobMaster service with the given {@link JobMasterId}.  *  * @param jobMasterId to start the service with  * @return Future which is completed once the JobMaster service has been started  * @throws Exception if the JobMaster service could not be started  */ CompletableFuture<Acknowledge> start(JobMasterId jobMasterId) throws Exception.
true;;1;1;/**  * Suspend the JobMaster service. This means that the service will stop to react  * to messages.  *  * @param cause for the suspension  * @return Future which is completed once the JobMaster service has been suspended  */ ;/**  * Suspend the JobMaster service. This means that the service will stop to react  * to messages.  *  * @param cause for the suspension  * @return Future which is completed once the JobMaster service has been suspended  */ CompletableFuture<Acknowledge> suspend(Exception cause).
true;;0;1;/**  * Get the {@link JobMasterGateway} belonging to this service.  *  * @return JobMasterGateway belonging to this service  */ ;/**  * Get the {@link JobMasterGateway} belonging to this service.  *  * @return JobMasterGateway belonging to this service  */ JobMasterGateway getGateway().
true;;0;1;/**  * Get the address of the JobMaster service under which it is reachable.  *  * @return Address of the JobMaster service  */ ;/**  * Get the address of the JobMaster service under which it is reachable.  *  * @return Address of the JobMaster service  */ String getAddress().
