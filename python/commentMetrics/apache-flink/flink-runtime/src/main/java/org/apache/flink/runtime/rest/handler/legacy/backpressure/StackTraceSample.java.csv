commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Returns the ID of the sample.  *  * @return ID of the sample  */ ;/**  * Returns the ID of the sample.  *  * @return ID of the sample  */ public int getSampleId() {     return sampleId. }
true;public;0;3;/**  * Returns the time stamp, when the sample was triggered.  *  * @return Time stamp, when the sample was triggered  */ ;/**  * Returns the time stamp, when the sample was triggered.  *  * @return Time stamp, when the sample was triggered  */ public long getStartTime() {     return startTime. }
true;public;0;3;/**  * Returns the time stamp, when all stack traces were collected at the  * JobManager.  *  * @return Time stamp, when all stack traces were collected at the  * JobManager  */ ;/**  * Returns the time stamp, when all stack traces were collected at the  * JobManager.  *  * @return Time stamp, when all stack traces were collected at the  * JobManager  */ public long getEndTime() {     return endTime. }
true;public;0;3;/**  * Returns the a map of stack traces by execution ID.  *  * @return Map of stack traces by execution ID  */ ;/**  * Returns the a map of stack traces by execution ID.  *  * @return Map of stack traces by execution ID  */ public Map<ExecutionAttemptID, List<StackTraceElement[]>> getStackTraces() {     return stackTracesByTask. }
false;public;0;8;;@Override public String toString() {     return "StackTraceSample{" + "sampleId=" + sampleId + ", startTime=" + startTime + ", endTime=" + endTime + '}'. }
