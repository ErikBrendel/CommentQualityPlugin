# id;timestamp;commentText;codeText;commentWords;codeWords
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration, 			Executor executor) throws Exception;1479852016;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param executor to run ZooKeeper callbacks_@return {@link ZooKeeperSubmittedJobGraphStore} instance_@throws Exception if the submitted job graph store cannot be created;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration,_			Executor executor) throws Exception {__		checkNotNull(configuration, "Configuration")___		RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_				client, zooKeeperSubmittedJobsPath, stateStorage, executor)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,executor,to,run,zoo,keeper,callbacks,return,link,zoo,keeper,submitted,job,graph,store,instance,throws,exception,if,the,submitted,job,graph,store,cannot,be,created;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,executor,executor,throws,exception,check,not,null,configuration,configuration,retrievable,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage,executor
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration, 			Executor executor) throws Exception;1482522861;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param executor to run ZooKeeper callbacks_@return {@link ZooKeeperSubmittedJobGraphStore} instance_@throws Exception if the submitted job graph store cannot be created;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration,_			Executor executor) throws Exception {__		checkNotNull(configuration, "Configuration")___		RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_				client, zooKeeperSubmittedJobsPath, stateStorage, executor)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,executor,to,run,zoo,keeper,callbacks,return,link,zoo,keeper,submitted,job,graph,store,instance,throws,exception,if,the,submitted,job,graph,store,cannot,be,created;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,executor,executor,throws,exception,check,not,null,configuration,configuration,retrievable,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage,executor
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration, 			Executor executor) throws Exception;1482522864;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param executor to run ZooKeeper callbacks_@return {@link ZooKeeperSubmittedJobGraphStore} instance_@throws Exception if the submitted job graph store cannot be created;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration,_			Executor executor) throws Exception {__		checkNotNull(configuration, "Configuration")___		RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_				client, zooKeeperSubmittedJobsPath, stateStorage, executor)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,executor,to,run,zoo,keeper,callbacks,return,link,zoo,keeper,submitted,job,graph,store,instance,throws,exception,if,the,submitted,job,graph,store,cannot,be,created;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,executor,executor,throws,exception,check,not,null,configuration,configuration,retrievable,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage,executor
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration, 			Executor executor) throws Exception;1485163254;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param executor to run ZooKeeper callbacks_@return {@link ZooKeeperSubmittedJobGraphStore} instance_@throws Exception if the submitted job graph store cannot be created;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration,_			Executor executor) throws Exception {__		checkNotNull(configuration, "Configuration")___		RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_				client, zooKeeperSubmittedJobsPath, stateStorage, executor)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,executor,to,run,zoo,keeper,callbacks,return,link,zoo,keeper,submitted,job,graph,store,instance,throws,exception,if,the,submitted,job,graph,store,cannot,be,created;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,executor,executor,throws,exception,check,not,null,configuration,configuration,retrievable,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage,executor
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration, 			Executor executor) throws Exception;1493975167;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param executor to run ZooKeeper callbacks_@return {@link ZooKeeperSubmittedJobGraphStore} instance_@throws Exception if the submitted job graph store cannot be created;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration,_			Executor executor) throws Exception {__		checkNotNull(configuration, "Configuration")___		RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_				client, zooKeeperSubmittedJobsPath, stateStorage, executor)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,executor,to,run,zoo,keeper,callbacks,return,link,zoo,keeper,submitted,job,graph,store,instance,throws,exception,if,the,submitted,job,graph,store,cannot,be,created;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,executor,executor,throws,exception,check,not,null,configuration,configuration,retrievable,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage,executor
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration, 			Executor executor) throws Exception;1498896127;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param executor to run ZooKeeper callbacks_@return {@link ZooKeeperSubmittedJobGraphStore} instance_@throws Exception if the submitted job graph store cannot be created;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration,_			Executor executor) throws Exception {__		checkNotNull(configuration, "Configuration")___		RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = configuration.getString(HighAvailabilityOptions.HA_ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_				client, zooKeeperSubmittedJobsPath, stateStorage, executor)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,executor,to,run,zoo,keeper,callbacks,return,link,zoo,keeper,submitted,job,graph,store,instance,throws,exception,if,the,submitted,job,graph,store,cannot,be,created;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,executor,executor,throws,exception,check,not,null,configuration,configuration,retrievable,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,get,string,high,availability,options,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage,executor
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration, 			Executor executor) throws Exception;1516971022;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param executor to run ZooKeeper callbacks_@return {@link ZooKeeperSubmittedJobGraphStore} instance_@throws Exception if the submitted job graph store cannot be created;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration,_			Executor executor) throws Exception {__		checkNotNull(configuration, "Configuration")___		RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = configuration.getString(HighAvailabilityOptions.HA_ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_				client, zooKeeperSubmittedJobsPath, stateStorage, executor)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,executor,to,run,zoo,keeper,callbacks,return,link,zoo,keeper,submitted,job,graph,store,instance,throws,exception,if,the,submitted,job,graph,store,cannot,be,created;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,executor,executor,throws,exception,check,not,null,configuration,configuration,retrievable,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,get,string,high,availability,options,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage,executor
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId) throws Exception;1445293011;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) throws Exception {__		String checkpointIdCounterPath = configuration.getString(_				ConfigConstants.ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,throws,exception,string,checkpoint,id,counter,path,configuration,get,string,config,constants,config,constants,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId) throws Exception;1445327854;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) throws Exception {__		String checkpointIdCounterPath = configuration.getString(_				ConfigConstants.ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,throws,exception,string,checkpoint,id,counter,path,configuration,get,string,config,constants,config,constants,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId) throws Exception;1445598182;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) throws Exception {__		String checkpointIdCounterPath = configuration.getString(_				ConfigConstants.ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,throws,exception,string,checkpoint,id,counter,path,configuration,get,string,config,constants,config,constants,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId) throws Exception;1456841351;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) throws Exception {__		String checkpointIdCounterPath = configuration.getString(_				ConfigConstants.ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,throws,exception,string,checkpoint,id,counter,path,configuration,get,string,config,constants,config,constants,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId) throws Exception;1465991918;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) throws Exception {__		String checkpointIdCounterPath = configuration.getString(_				ConfigConstants.ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,throws,exception,string,checkpoint,id,counter,path,configuration,get,string,config,constants,config,constants,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId) throws Exception;1468944021;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) throws Exception {__		String checkpointIdCounterPath = configuration.getString(_				ConfigConstants.ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,throws,exception,string,checkpoint,id,counter,path,configuration,get,string,config,constants,config,constants,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId) throws Exception;1469525443;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) throws Exception {__		String checkpointIdCounterPath = configuration.getString(_				ConfigConstants.ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,throws,exception,string,checkpoint,id,counter,path,configuration,get,string,config,constants,config,constants,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId) throws Exception;1472033364;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) throws Exception {__		String checkpointIdCounterPath = getConfiguredStringValue(configuration,_			ConfigConstants.HA_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_			ConfigConstants.ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,throws,exception,string,checkpoint,id,counter,path,get,configured,string,value,configuration,config,constants,config,constants,config,constants,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId) throws Exception;1472033371;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) throws Exception {__		String checkpointIdCounterPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,throws,exception,string,checkpoint,id,counter,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId) throws Exception;1472484430;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) throws Exception {__		String checkpointIdCounterPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,throws,exception,string,checkpoint,id,counter,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId) throws Exception;1472663401;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) throws Exception {__		String checkpointIdCounterPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,throws,exception,string,checkpoint,id,counter,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId) throws Exception;1476095826;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) throws Exception {__		String checkpointIdCounterPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,throws,exception,string,checkpoint,id,counter,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId) throws Exception;1476432306;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) throws Exception {__		String checkpointIdCounterPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,throws,exception,string,checkpoint,id,counter,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId) throws Exception;1476455790;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) throws Exception {__		String checkpointIdCounterPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,throws,exception,string,checkpoint,id,counter,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static boolean isZooKeeperHighAvailabilityEnabled(Configuration flinkConf);1441011751;Returns whether high availability is enabled (<=> ZooKeeper quorum configured).;public static boolean isZooKeeperHighAvailabilityEnabled(Configuration flinkConf) {_		String recoveryMode = flinkConf.getString(_				ConfigConstants.RECOVERY_MODE,_				ConfigConstants.DEFAULT_RECOVERY_MODE).toUpperCase()___		return recoveryMode.equals(RecoveryMode.ZOOKEEPER.name())__	};returns,whether,high,availability,is,enabled,zoo,keeper,quorum,configured;public,static,boolean,is,zoo,keeper,high,availability,enabled,configuration,flink,conf,string,recovery,mode,flink,conf,get,string,config,constants,config,constants,to,upper,case,return,recovery,mode,equals,recovery,mode,zookeeper,name
ZooKeeperUtils -> public static boolean isZooKeeperHighAvailabilityEnabled(Configuration flinkConf);1443564120;Returns whether high availability is enabled (<=> ZooKeeper quorum configured).;public static boolean isZooKeeperHighAvailabilityEnabled(Configuration flinkConf) {_		String recoveryMode = flinkConf.getString(_				ConfigConstants.RECOVERY_MODE,_				ConfigConstants.DEFAULT_RECOVERY_MODE).toUpperCase()___		return recoveryMode.equals(RecoveryMode.ZOOKEEPER.name())__	};returns,whether,high,availability,is,enabled,zoo,keeper,quorum,configured;public,static,boolean,is,zoo,keeper,high,availability,enabled,configuration,flink,conf,string,recovery,mode,flink,conf,get,string,config,constants,config,constants,to,upper,case,return,recovery,mode,equals,recovery,mode,zookeeper,name
ZooKeeperUtils -> ZkClientACLMode -> public static ZkClientACLMode fromConfig(Configuration config);1476455790;Return the configured {@link ZkClientACLMode}.__@param config The config to parse_@return Configured ACL mode or {@link ConfigConstants#DEFAULT_HA_ZOOKEEPER_CLIENT_ACL} if not_configured.;public static ZkClientACLMode fromConfig(Configuration config) {_			String aclMode = config.getString(ConfigConstants.HA_ZOOKEEPER_CLIENT_ACL, null)__			if (aclMode == null || aclMode.equalsIgnoreCase(ZkClientACLMode.OPEN.name())) {_				return ZkClientACLMode.OPEN__			} else if (aclMode.equalsIgnoreCase(ZkClientACLMode.CREATOR.name())) {_				return ZkClientACLMode.CREATOR__			} else {_				String message = "Unsupported ACL option: [" + aclMode + "] provided"__				LOG.error(message)__				throw new IllegalConfigurationException(message)__			}_		};return,the,configured,link,zk,client,aclmode,param,config,the,config,to,parse,return,configured,acl,mode,or,link,config,constants,if,not,configured;public,static,zk,client,aclmode,from,config,configuration,config,string,acl,mode,config,get,string,config,constants,null,if,acl,mode,null,acl,mode,equals,ignore,case,zk,client,aclmode,open,name,return,zk,client,aclmode,open,else,if,acl,mode,equals,ignore,case,zk,client,aclmode,creator,name,return,zk,client,aclmode,creator,else,string,message,unsupported,acl,option,acl,mode,provided,log,error,message,throw,new,illegal,configuration,exception,message
ZooKeeperUtils -> ZkClientACLMode -> public static ZkClientACLMode fromConfig(Configuration config);1476985095;Return the configured {@link ZkClientACLMode}.__@param config The config to parse_@return Configured ACL mode or {@link ConfigConstants#DEFAULT_HA_ZOOKEEPER_CLIENT_ACL} if not_configured.;public static ZkClientACLMode fromConfig(Configuration config) {_			String aclMode = config.getString(ConfigConstants.HA_ZOOKEEPER_CLIENT_ACL, null)__			if (aclMode == null || aclMode.equalsIgnoreCase(ZkClientACLMode.OPEN.name())) {_				return ZkClientACLMode.OPEN__			} else if (aclMode.equalsIgnoreCase(ZkClientACLMode.CREATOR.name())) {_				return ZkClientACLMode.CREATOR__			} else {_				String message = "Unsupported ACL option: [" + aclMode + "] provided"__				LOG.error(message)__				throw new IllegalConfigurationException(message)__			}_		};return,the,configured,link,zk,client,aclmode,param,config,the,config,to,parse,return,configured,acl,mode,or,link,config,constants,if,not,configured;public,static,zk,client,aclmode,from,config,configuration,config,string,acl,mode,config,get,string,config,constants,null,if,acl,mode,null,acl,mode,equals,ignore,case,zk,client,aclmode,open,name,return,zk,client,aclmode,open,else,if,acl,mode,equals,ignore,case,zk,client,aclmode,creator,name,return,zk,client,aclmode,creator,else,string,message,unsupported,acl,option,acl,mode,provided,log,error,message,throw,new,illegal,configuration,exception,message
ZooKeeperUtils -> ZkClientACLMode -> public static ZkClientACLMode fromConfig(Configuration config);1479852016;Return the configured {@link ZkClientACLMode}.__@param config The config to parse_@return Configured ACL mode or {@link ConfigConstants#DEFAULT_HA_ZOOKEEPER_CLIENT_ACL} if not_configured.;public static ZkClientACLMode fromConfig(Configuration config) {_			String aclMode = config.getString(ConfigConstants.HA_ZOOKEEPER_CLIENT_ACL, null)__			if (aclMode == null || aclMode.equalsIgnoreCase(ZkClientACLMode.OPEN.name())) {_				return ZkClientACLMode.OPEN__			} else if (aclMode.equalsIgnoreCase(ZkClientACLMode.CREATOR.name())) {_				return ZkClientACLMode.CREATOR__			} else {_				String message = "Unsupported ACL option: [" + aclMode + "] provided"__				LOG.error(message)__				throw new IllegalConfigurationException(message)__			}_		};return,the,configured,link,zk,client,aclmode,param,config,the,config,to,parse,return,configured,acl,mode,or,link,config,constants,if,not,configured;public,static,zk,client,aclmode,from,config,configuration,config,string,acl,mode,config,get,string,config,constants,null,if,acl,mode,null,acl,mode,equals,ignore,case,zk,client,aclmode,open,name,return,zk,client,aclmode,open,else,if,acl,mode,equals,ignore,case,zk,client,aclmode,creator,name,return,zk,client,aclmode,creator,else,string,message,unsupported,acl,option,acl,mode,provided,log,error,message,throw,new,illegal,configuration,exception,message
ZooKeeperUtils -> ZkClientACLMode -> public static ZkClientACLMode fromConfig(Configuration config);1482522861;Return the configured {@link ZkClientACLMode}.__@param config The config to parse_@return Configured ACL mode or {@link ConfigConstants#DEFAULT_HA_ZOOKEEPER_CLIENT_ACL} if not_configured.;public static ZkClientACLMode fromConfig(Configuration config) {_			String aclMode = config.getString(ConfigConstants.HA_ZOOKEEPER_CLIENT_ACL, null)__			if (aclMode == null || aclMode.equalsIgnoreCase(ZkClientACLMode.OPEN.name())) {_				return ZkClientACLMode.OPEN__			} else if (aclMode.equalsIgnoreCase(ZkClientACLMode.CREATOR.name())) {_				return ZkClientACLMode.CREATOR__			} else {_				String message = "Unsupported ACL option: [" + aclMode + "] provided"__				LOG.error(message)__				throw new IllegalConfigurationException(message)__			}_		};return,the,configured,link,zk,client,aclmode,param,config,the,config,to,parse,return,configured,acl,mode,or,link,config,constants,if,not,configured;public,static,zk,client,aclmode,from,config,configuration,config,string,acl,mode,config,get,string,config,constants,null,if,acl,mode,null,acl,mode,equals,ignore,case,zk,client,aclmode,open,name,return,zk,client,aclmode,open,else,if,acl,mode,equals,ignore,case,zk,client,aclmode,creator,name,return,zk,client,aclmode,creator,else,string,message,unsupported,acl,option,acl,mode,provided,log,error,message,throw,new,illegal,configuration,exception,message
ZooKeeperUtils -> ZkClientACLMode -> public static ZkClientACLMode fromConfig(Configuration config);1482522864;Return the configured {@link ZkClientACLMode}.__@param config The config to parse_@return Configured ACL mode or {@link ConfigConstants#DEFAULT_HA_ZOOKEEPER_CLIENT_ACL} if not_configured.;public static ZkClientACLMode fromConfig(Configuration config) {_			String aclMode = config.getString(ConfigConstants.HA_ZOOKEEPER_CLIENT_ACL, null)__			if (aclMode == null || aclMode.equalsIgnoreCase(ZkClientACLMode.OPEN.name())) {_				return ZkClientACLMode.OPEN__			} else if (aclMode.equalsIgnoreCase(ZkClientACLMode.CREATOR.name())) {_				return ZkClientACLMode.CREATOR__			} else {_				String message = "Unsupported ACL option: [" + aclMode + "] provided"__				LOG.error(message)__				throw new IllegalConfigurationException(message)__			}_		};return,the,configured,link,zk,client,aclmode,param,config,the,config,to,parse,return,configured,acl,mode,or,link,config,constants,if,not,configured;public,static,zk,client,aclmode,from,config,configuration,config,string,acl,mode,config,get,string,config,constants,null,if,acl,mode,null,acl,mode,equals,ignore,case,zk,client,aclmode,open,name,return,zk,client,aclmode,open,else,if,acl,mode,equals,ignore,case,zk,client,aclmode,creator,name,return,zk,client,aclmode,creator,else,string,message,unsupported,acl,option,acl,mode,provided,log,error,message,throw,new,illegal,configuration,exception,message
ZooKeeperUtils -> ZkClientACLMode -> public static ZkClientACLMode fromConfig(Configuration config);1485163254;Return the configured {@link ZkClientACLMode}.__@param config The config to parse_@return Configured ACL mode or {@link ConfigConstants#DEFAULT_HA_ZOOKEEPER_CLIENT_ACL} if not_configured.;public static ZkClientACLMode fromConfig(Configuration config) {_			String aclMode = config.getString(ConfigConstants.HA_ZOOKEEPER_CLIENT_ACL, null)__			if (aclMode == null || aclMode.equalsIgnoreCase(ZkClientACLMode.OPEN.name())) {_				return ZkClientACLMode.OPEN__			} else if (aclMode.equalsIgnoreCase(ZkClientACLMode.CREATOR.name())) {_				return ZkClientACLMode.CREATOR__			} else {_				String message = "Unsupported ACL option: [" + aclMode + "] provided"__				LOG.error(message)__				throw new IllegalConfigurationException(message)__			}_		};return,the,configured,link,zk,client,aclmode,param,config,the,config,to,parse,return,configured,acl,mode,or,link,config,constants,if,not,configured;public,static,zk,client,aclmode,from,config,configuration,config,string,acl,mode,config,get,string,config,constants,null,if,acl,mode,null,acl,mode,equals,ignore,case,zk,client,aclmode,open,name,return,zk,client,aclmode,open,else,if,acl,mode,equals,ignore,case,zk,client,aclmode,creator,name,return,zk,client,aclmode,creator,else,string,message,unsupported,acl,option,acl,mode,provided,log,error,message,throw,new,illegal,configuration,exception,message
ZooKeeperUtils -> ZkClientACLMode -> public static ZkClientACLMode fromConfig(Configuration config);1493975167;Return the configured {@link ZkClientACLMode}.__@param config The config to parse_@return Configured ACL mode or {@link ConfigConstants#DEFAULT_HA_ZOOKEEPER_CLIENT_ACL} if not_configured.;public static ZkClientACLMode fromConfig(Configuration config) {_			String aclMode = config.getString(ConfigConstants.HA_ZOOKEEPER_CLIENT_ACL, null)__			if (aclMode == null || aclMode.equalsIgnoreCase(ZkClientACLMode.OPEN.name())) {_				return ZkClientACLMode.OPEN__			} else if (aclMode.equalsIgnoreCase(ZkClientACLMode.CREATOR.name())) {_				return ZkClientACLMode.CREATOR__			} else {_				String message = "Unsupported ACL option: [" + aclMode + "] provided"__				LOG.error(message)__				throw new IllegalConfigurationException(message)__			}_		};return,the,configured,link,zk,client,aclmode,param,config,the,config,to,parse,return,configured,acl,mode,or,link,config,constants,if,not,configured;public,static,zk,client,aclmode,from,config,configuration,config,string,acl,mode,config,get,string,config,constants,null,if,acl,mode,null,acl,mode,equals,ignore,case,zk,client,aclmode,open,name,return,zk,client,aclmode,open,else,if,acl,mode,equals,ignore,case,zk,client,aclmode,creator,name,return,zk,client,aclmode,creator,else,string,message,unsupported,acl,option,acl,mode,provided,log,error,message,throw,new,illegal,configuration,exception,message
ZooKeeperUtils -> ZkClientACLMode -> public static ZkClientACLMode fromConfig(Configuration config);1498896127;Return the configured {@link ZkClientACLMode}.__@param config The config to parse_@return Configured ACL mode or the default defined by {@link HighAvailabilityOptions#ZOOKEEPER_CLIENT_ACL} if not_configured.;public static ZkClientACLMode fromConfig(Configuration config) {_			String aclMode = config.getString(HighAvailabilityOptions.ZOOKEEPER_CLIENT_ACL)__			if (aclMode == null || aclMode.equalsIgnoreCase(ZkClientACLMode.OPEN.name())) {_				return ZkClientACLMode.OPEN__			} else if (aclMode.equalsIgnoreCase(ZkClientACLMode.CREATOR.name())) {_				return ZkClientACLMode.CREATOR__			} else {_				String message = "Unsupported ACL option: [" + aclMode + "] provided"__				LOG.error(message)__				throw new IllegalConfigurationException(message)__			}_		};return,the,configured,link,zk,client,aclmode,param,config,the,config,to,parse,return,configured,acl,mode,or,the,default,defined,by,link,high,availability,options,if,not,configured;public,static,zk,client,aclmode,from,config,configuration,config,string,acl,mode,config,get,string,high,availability,options,if,acl,mode,null,acl,mode,equals,ignore,case,zk,client,aclmode,open,name,return,zk,client,aclmode,open,else,if,acl,mode,equals,ignore,case,zk,client,aclmode,creator,name,return,zk,client,aclmode,creator,else,string,message,unsupported,acl,option,acl,mode,provided,log,error,message,throw,new,illegal,configuration,exception,message
ZooKeeperUtils -> ZkClientACLMode -> public static ZkClientACLMode fromConfig(Configuration config);1516971022;Return the configured {@link ZkClientACLMode}.__@param config The config to parse_@return Configured ACL mode or the default defined by {@link HighAvailabilityOptions#ZOOKEEPER_CLIENT_ACL} if not_configured.;public static ZkClientACLMode fromConfig(Configuration config) {_			String aclMode = config.getString(HighAvailabilityOptions.ZOOKEEPER_CLIENT_ACL)__			if (aclMode == null || aclMode.equalsIgnoreCase(ZkClientACLMode.OPEN.name())) {_				return ZkClientACLMode.OPEN__			} else if (aclMode.equalsIgnoreCase(ZkClientACLMode.CREATOR.name())) {_				return ZkClientACLMode.CREATOR__			} else {_				String message = "Unsupported ACL option: [" + aclMode + "] provided"__				LOG.error(message)__				throw new IllegalConfigurationException(message)__			}_		};return,the,configured,link,zk,client,aclmode,param,config,the,config,to,parse,return,configured,acl,mode,or,the,default,defined,by,link,high,availability,options,if,not,configured;public,static,zk,client,aclmode,from,config,configuration,config,string,acl,mode,config,get,string,high,availability,options,if,acl,mode,null,acl,mode,equals,ignore,case,zk,client,aclmode,open,name,return,zk,client,aclmode,open,else,if,acl,mode,equals,ignore,case,zk,client,aclmode,creator,name,return,zk,client,aclmode,creator,else,string,message,unsupported,acl,option,acl,mode,provided,log,error,message,throw,new,illegal,configuration,exception,message
ZooKeeperUtils -> ZkClientACLMode -> public static ZkClientACLMode fromConfig(Configuration config);1536763178;Return the configured {@link ZkClientACLMode}.__@param config The config to parse_@return Configured ACL mode or the default defined by {@link HighAvailabilityOptions#ZOOKEEPER_CLIENT_ACL} if not_configured.;public static ZkClientACLMode fromConfig(Configuration config) {_			String aclMode = config.getString(HighAvailabilityOptions.ZOOKEEPER_CLIENT_ACL)__			if (aclMode == null || aclMode.equalsIgnoreCase(ZkClientACLMode.OPEN.name())) {_				return ZkClientACLMode.OPEN__			} else if (aclMode.equalsIgnoreCase(ZkClientACLMode.CREATOR.name())) {_				return ZkClientACLMode.CREATOR__			} else {_				String message = "Unsupported ACL option: [" + aclMode + "] provided"__				LOG.error(message)__				throw new IllegalConfigurationException(message)__			}_		};return,the,configured,link,zk,client,aclmode,param,config,the,config,to,parse,return,configured,acl,mode,or,the,default,defined,by,link,high,availability,options,if,not,configured;public,static,zk,client,aclmode,from,config,configuration,config,string,acl,mode,config,get,string,high,availability,options,if,acl,mode,null,acl,mode,equals,ignore,case,zk,client,aclmode,open,name,return,zk,client,aclmode,open,else,if,acl,mode,equals,ignore,case,zk,client,aclmode,creator,name,return,zk,client,aclmode,creator,else,string,message,unsupported,acl,option,acl,mode,provided,log,error,message,throw,new,illegal,configuration,exception,message
ZooKeeperUtils -> ZkClientACLMode -> public static ZkClientACLMode fromConfig(Configuration config);1536763193;Return the configured {@link ZkClientACLMode}.__@param config The config to parse_@return Configured ACL mode or the default defined by {@link HighAvailabilityOptions#ZOOKEEPER_CLIENT_ACL} if not_configured.;public static ZkClientACLMode fromConfig(Configuration config) {_			String aclMode = config.getString(HighAvailabilityOptions.ZOOKEEPER_CLIENT_ACL)__			if (aclMode == null || aclMode.equalsIgnoreCase(ZkClientACLMode.OPEN.name())) {_				return ZkClientACLMode.OPEN__			} else if (aclMode.equalsIgnoreCase(ZkClientACLMode.CREATOR.name())) {_				return ZkClientACLMode.CREATOR__			} else {_				String message = "Unsupported ACL option: [" + aclMode + "] provided"__				LOG.error(message)__				throw new IllegalConfigurationException(message)__			}_		};return,the,configured,link,zk,client,aclmode,param,config,the,config,to,parse,return,configured,acl,mode,or,the,default,defined,by,link,high,availability,options,if,not,configured;public,static,zk,client,aclmode,from,config,configuration,config,string,acl,mode,config,get,string,high,availability,options,if,acl,mode,null,acl,mode,equals,ignore,case,zk,client,aclmode,open,name,return,zk,client,aclmode,open,else,if,acl,mode,equals,ignore,case,zk,client,aclmode,creator,name,return,zk,client,aclmode,creator,else,string,message,unsupported,acl,option,acl,mode,provided,log,error,message,throw,new,illegal,configuration,exception,message
ZooKeeperUtils -> ZkClientACLMode -> public static ZkClientACLMode fromConfig(Configuration config);1547028640;Return the configured {@link ZkClientACLMode}.__@param config The config to parse_@return Configured ACL mode or the default defined by {@link HighAvailabilityOptions#ZOOKEEPER_CLIENT_ACL} if not_configured.;public static ZkClientACLMode fromConfig(Configuration config) {_			String aclMode = config.getString(HighAvailabilityOptions.ZOOKEEPER_CLIENT_ACL)__			if (aclMode == null || aclMode.equalsIgnoreCase(ZkClientACLMode.OPEN.name())) {_				return ZkClientACLMode.OPEN__			} else if (aclMode.equalsIgnoreCase(ZkClientACLMode.CREATOR.name())) {_				return ZkClientACLMode.CREATOR__			} else {_				String message = "Unsupported ACL option: [" + aclMode + "] provided"__				LOG.error(message)__				throw new IllegalConfigurationException(message)__			}_		};return,the,configured,link,zk,client,aclmode,param,config,the,config,to,parse,return,configured,acl,mode,or,the,default,defined,by,link,high,availability,options,if,not,configured;public,static,zk,client,aclmode,from,config,configuration,config,string,acl,mode,config,get,string,high,availability,options,if,acl,mode,null,acl,mode,equals,ignore,case,zk,client,aclmode,open,name,return,zk,client,aclmode,open,else,if,acl,mode,equals,ignore,case,zk,client,aclmode,creator,name,return,zk,client,aclmode,creator,else,string,message,unsupported,acl,option,acl,mode,provided,log,error,message,throw,new,illegal,configuration,exception,message
ZooKeeperUtils -> ZkClientACLMode -> public static ZkClientACLMode fromConfig(Configuration config);1547547304;Return the configured {@link ZkClientACLMode}.__@param config The config to parse_@return Configured ACL mode or the default defined by {@link HighAvailabilityOptions#ZOOKEEPER_CLIENT_ACL} if not_configured.;public static ZkClientACLMode fromConfig(Configuration config) {_			String aclMode = config.getString(HighAvailabilityOptions.ZOOKEEPER_CLIENT_ACL)__			if (aclMode == null || aclMode.equalsIgnoreCase(ZkClientACLMode.OPEN.name())) {_				return ZkClientACLMode.OPEN__			} else if (aclMode.equalsIgnoreCase(ZkClientACLMode.CREATOR.name())) {_				return ZkClientACLMode.CREATOR__			} else {_				String message = "Unsupported ACL option: [" + aclMode + "] provided"__				LOG.error(message)__				throw new IllegalConfigurationException(message)__			}_		};return,the,configured,link,zk,client,aclmode,param,config,the,config,to,parse,return,configured,acl,mode,or,the,default,defined,by,link,high,availability,options,if,not,configured;public,static,zk,client,aclmode,from,config,configuration,config,string,acl,mode,config,get,string,high,availability,options,if,acl,mode,null,acl,mode,equals,ignore,case,zk,client,aclmode,open,name,return,zk,client,aclmode,open,else,if,acl,mode,equals,ignore,case,zk,client,aclmode,creator,name,return,zk,client,aclmode,creator,else,string,message,unsupported,acl,option,acl,mode,provided,log,error,message,throw,new,illegal,configuration,exception,message
ZooKeeperUtils -> public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1472484430;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException;public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_STORAGE_PATH,_				"",_				ConfigConstants.ZOOKEEPER_RECOVERY_PATH)___		if (rootPath.equals("")) {_			throw new IllegalConfigurationException("Missing recovery path. Specify via " +_				"configuration key '" + ConfigConstants.HA_ZOOKEEPER_STORAGE_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception;public,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,if,root,path,equals,throw,new,illegal,configuration,exception,missing,recovery,path,specify,via,configuration,key,config,constants,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1472663401;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException;public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_STORAGE_PATH,_				"",_				ConfigConstants.ZOOKEEPER_RECOVERY_PATH)___		if (rootPath.equals("")) {_			throw new IllegalConfigurationException("Missing recovery path. Specify via " +_				"configuration key '" + ConfigConstants.HA_ZOOKEEPER_STORAGE_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception;public,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,if,root,path,equals,throw,new,illegal,configuration,exception,missing,recovery,path,specify,via,configuration,key,config,constants,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1476095826;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException;public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = configuration.getValue(HighAvailabilityOptions.HA_STORAGE_PATH)___		if (rootPath == null || StringUtils.isBlank(rootPath)) {_			throw new IllegalConfigurationException("Missing high-availability storage path for metadata." +_					" Specify via configuration key '" + HighAvailabilityOptions.HA_STORAGE_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception;public,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,get,value,high,availability,options,if,root,path,null,string,utils,is,blank,root,path,throw,new,illegal,configuration,exception,missing,high,availability,storage,path,for,metadata,specify,via,configuration,key,high,availability,options,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1476432306;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException;public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = configuration.getValue(HighAvailabilityOptions.HA_STORAGE_PATH)___		if (rootPath == null || StringUtils.isBlank(rootPath)) {_			throw new IllegalConfigurationException("Missing high-availability storage path for metadata." +_					" Specify via configuration key '" + HighAvailabilityOptions.HA_STORAGE_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception;public,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,get,value,high,availability,options,if,root,path,null,string,utils,is,blank,root,path,throw,new,illegal,configuration,exception,missing,high,availability,storage,path,for,metadata,specify,via,configuration,key,high,availability,options,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1476455790;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException;public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = configuration.getValue(HighAvailabilityOptions.HA_STORAGE_PATH)___		if (rootPath == null || StringUtils.isBlank(rootPath)) {_			throw new IllegalConfigurationException("Missing high-availability storage path for metadata." +_					" Specify via configuration key '" + HighAvailabilityOptions.HA_STORAGE_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception;public,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,get,value,high,availability,options,if,root,path,null,string,utils,is,blank,root,path,throw,new,illegal,configuration,exception,missing,high,availability,storage,path,for,metadata,specify,via,configuration,key,high,availability,options,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1476985095;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException if file system state storage cannot be created;public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = configuration.getValue(HighAvailabilityOptions.HA_STORAGE_PATH)___		if (rootPath == null || StringUtils.isBlank(rootPath)) {_			throw new IllegalConfigurationException("Missing high-availability storage path for metadata." +_					" Specify via configuration key '" + HighAvailabilityOptions.HA_STORAGE_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception,if,file,system,state,storage,cannot,be,created;public,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,get,value,high,availability,options,if,root,path,null,string,utils,is,blank,root,path,throw,new,illegal,configuration,exception,missing,high,availability,storage,path,for,metadata,specify,via,configuration,key,high,availability,options,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1479852016;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException if file system state storage cannot be created;public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = configuration.getValue(HighAvailabilityOptions.HA_STORAGE_PATH)___		if (rootPath == null || StringUtils.isBlank(rootPath)) {_			throw new IllegalConfigurationException("Missing high-availability storage path for metadata." +_					" Specify via configuration key '" + HighAvailabilityOptions.HA_STORAGE_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception,if,file,system,state,storage,cannot,be,created;public,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,get,value,high,availability,options,if,root,path,null,string,utils,is,blank,root,path,throw,new,illegal,configuration,exception,missing,high,availability,storage,path,for,metadata,specify,via,configuration,key,high,availability,options,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1482522861;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException if file system state storage cannot be created;public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = configuration.getValue(HighAvailabilityOptions.HA_STORAGE_PATH)___		if (rootPath == null || StringUtils.isBlank(rootPath)) {_			throw new IllegalConfigurationException("Missing high-availability storage path for metadata." +_					" Specify via configuration key '" + HighAvailabilityOptions.HA_STORAGE_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception,if,file,system,state,storage,cannot,be,created;public,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,get,value,high,availability,options,if,root,path,null,string,utils,is,blank,root,path,throw,new,illegal,configuration,exception,missing,high,availability,storage,path,for,metadata,specify,via,configuration,key,high,availability,options,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1482522864;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException if file system state storage cannot be created;public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = configuration.getValue(HighAvailabilityOptions.HA_STORAGE_PATH)___		if (rootPath == null || StringUtils.isBlank(rootPath)) {_			throw new IllegalConfigurationException("Missing high-availability storage path for metadata." +_					" Specify via configuration key '" + HighAvailabilityOptions.HA_STORAGE_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception,if,file,system,state,storage,cannot,be,created;public,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,get,value,high,availability,options,if,root,path,null,string,utils,is,blank,root,path,throw,new,illegal,configuration,exception,missing,high,availability,storage,path,for,metadata,specify,via,configuration,key,high,availability,options,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1485163254;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException if file system state storage cannot be created;public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = configuration.getValue(HighAvailabilityOptions.HA_STORAGE_PATH)___		if (rootPath == null || StringUtils.isBlank(rootPath)) {_			throw new IllegalConfigurationException("Missing high-availability storage path for metadata." +_					" Specify via configuration key '" + HighAvailabilityOptions.HA_STORAGE_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception,if,file,system,state,storage,cannot,be,created;public,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,get,value,high,availability,options,if,root,path,null,string,utils,is,blank,root,path,throw,new,illegal,configuration,exception,missing,high,availability,storage,path,for,metadata,specify,via,configuration,key,high,availability,options,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1493975167;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException if file system state storage cannot be created;public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = configuration.getValue(HighAvailabilityOptions.HA_STORAGE_PATH)___		if (rootPath == null || StringUtils.isBlank(rootPath)) {_			throw new IllegalConfigurationException("Missing high-availability storage path for metadata." +_					" Specify via configuration key '" + HighAvailabilityOptions.HA_STORAGE_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception,if,file,system,state,storage,cannot,be,created;public,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,get,value,high,availability,options,if,root,path,null,string,utils,is,blank,root,path,throw,new,illegal,configuration,exception,missing,high,availability,storage,path,for,metadata,specify,via,configuration,key,high,availability,options,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1498896127;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException if file system state storage cannot be created;public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = configuration.getValue(HighAvailabilityOptions.HA_STORAGE_PATH)___		if (rootPath == null || StringUtils.isBlank(rootPath)) {_			throw new IllegalConfigurationException("Missing high-availability storage path for metadata." +_					" Specify via configuration key '" + HighAvailabilityOptions.HA_STORAGE_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception,if,file,system,state,storage,cannot,be,created;public,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,get,value,high,availability,options,if,root,path,null,string,utils,is,blank,root,path,throw,new,illegal,configuration,exception,missing,high,availability,storage,path,for,metadata,specify,via,configuration,key,high,availability,options,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1516971022;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException if file system state storage cannot be created;public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = configuration.getValue(HighAvailabilityOptions.HA_STORAGE_PATH)___		if (rootPath == null || StringUtils.isBlank(rootPath)) {_			throw new IllegalConfigurationException("Missing high-availability storage path for metadata." +_					" Specify via configuration key '" + HighAvailabilityOptions.HA_STORAGE_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception,if,file,system,state,storage,cannot,be,created;public,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,get,value,high,availability,options,if,root,path,null,string,utils,is,blank,root,path,throw,new,illegal,configuration,exception,missing,high,availability,storage,path,for,metadata,specify,via,configuration,key,high,availability,options,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1536763178;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException if file system state storage cannot be created;public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = configuration.getValue(HighAvailabilityOptions.HA_STORAGE_PATH)___		if (rootPath == null || StringUtils.isBlank(rootPath)) {_			throw new IllegalConfigurationException("Missing high-availability storage path for metadata." +_					" Specify via configuration key '" + HighAvailabilityOptions.HA_STORAGE_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception,if,file,system,state,storage,cannot,be,created;public,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,get,value,high,availability,options,if,root,path,null,string,utils,is,blank,root,path,throw,new,illegal,configuration,exception,missing,high,availability,storage,path,for,metadata,specify,via,configuration,key,high,availability,options,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1536763193;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException if file system state storage cannot be created;public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = configuration.getValue(HighAvailabilityOptions.HA_STORAGE_PATH)___		if (rootPath == null || StringUtils.isBlank(rootPath)) {_			throw new IllegalConfigurationException("Missing high-availability storage path for metadata." +_					" Specify via configuration key '" + HighAvailabilityOptions.HA_STORAGE_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception,if,file,system,state,storage,cannot,be,created;public,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,get,value,high,availability,options,if,root,path,null,string,utils,is,blank,root,path,throw,new,illegal,configuration,exception,missing,high,availability,storage,path,for,metadata,specify,via,configuration,key,high,availability,options,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1547028640;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException if file system state storage cannot be created;public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = configuration.getValue(HighAvailabilityOptions.HA_STORAGE_PATH)___		if (rootPath == null || StringUtils.isBlank(rootPath)) {_			throw new IllegalConfigurationException("Missing high-availability storage path for metadata." +_					" Specify via configuration key '" + HighAvailabilityOptions.HA_STORAGE_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception,if,file,system,state,storage,cannot,be,created;public,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,get,value,high,availability,options,if,root,path,null,string,utils,is,blank,root,path,throw,new,illegal,configuration,exception,missing,high,availability,storage,path,for,metadata,specify,via,configuration,key,high,availability,options,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1547547304;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException if file system state storage cannot be created;public static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = configuration.getValue(HighAvailabilityOptions.HA_STORAGE_PATH)___		if (rootPath == null || StringUtils.isBlank(rootPath)) {_			throw new IllegalConfigurationException("Missing high-availability storage path for metadata." +_					" Specify via configuration key '" + HighAvailabilityOptions.HA_STORAGE_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception,if,file,system,state,storage,cannot,be,created;public,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,get,value,high,availability,options,if,root,path,null,string,utils,is,blank,root,path,throw,new,illegal,configuration,exception,missing,high,availability,storage,path,for,metadata,specify,via,configuration,key,high,availability,options,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 		final CuratorFramework client, 		final Configuration configuration) throws Exception;1482522861;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_		final CuratorFramework client,_		final Configuration configuration) throws Exception_	{_		return createLeaderRetrievalService(client, configuration, "")__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,final,curator,framework,client,final,configuration,configuration,throws,exception,return,create,leader,retrieval,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 		final CuratorFramework client, 		final Configuration configuration) throws Exception;1482522864;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_		final CuratorFramework client,_		final Configuration configuration) throws Exception_	{_		return createLeaderRetrievalService(client, configuration, "")__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,final,curator,framework,client,final,configuration,configuration,throws,exception,return,create,leader,retrieval,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 		final CuratorFramework client, 		final Configuration configuration) throws Exception;1485163254;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_		final CuratorFramework client,_		final Configuration configuration) throws Exception_	{_		return createLeaderRetrievalService(client, configuration, "")__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,final,curator,framework,client,final,configuration,configuration,throws,exception,return,create,leader,retrieval,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 		final CuratorFramework client, 		final Configuration configuration) throws Exception;1493975167;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_		final CuratorFramework client,_		final Configuration configuration) throws Exception_	{_		return createLeaderRetrievalService(client, configuration, "")__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,final,curator,framework,client,final,configuration,configuration,throws,exception,return,create,leader,retrieval,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 		final CuratorFramework client, 		final Configuration configuration) throws Exception;1498896127;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_		final CuratorFramework client,_		final Configuration configuration) throws Exception_	{_		return createLeaderRetrievalService(client, configuration, "")__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,final,curator,framework,client,final,configuration,configuration,throws,exception,return,create,leader,retrieval,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 		final CuratorFramework client, 		final Configuration configuration) throws Exception;1516971022;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_		final CuratorFramework client,_		final Configuration configuration) throws Exception_	{_		return createLeaderRetrievalService(client, configuration, "")__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,final,curator,framework,client,final,configuration,configuration,throws,exception,return,create,leader,retrieval,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 		final CuratorFramework client, 		final Configuration configuration) throws Exception;1536763178;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_		final CuratorFramework client,_		final Configuration configuration) throws Exception_	{_		return createLeaderRetrievalService(client, configuration, "")__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,final,curator,framework,client,final,configuration,configuration,throws,exception,return,create,leader,retrieval,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 		final CuratorFramework client, 		final Configuration configuration) throws Exception;1536763193;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_		final CuratorFramework client,_		final Configuration configuration) throws Exception_	{_		return createLeaderRetrievalService(client, configuration, "")__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,final,curator,framework,client,final,configuration,configuration,throws,exception,return,create,leader,retrieval,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 		final CuratorFramework client, 		final Configuration configuration) throws Exception;1547028640;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_		final CuratorFramework client,_		final Configuration configuration) throws Exception_	{_		return createLeaderRetrievalService(client, configuration, "")__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,final,curator,framework,client,final,configuration,configuration,throws,exception,return,create,leader,retrieval,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 		final CuratorFramework client, 		final Configuration configuration) throws Exception;1547547304;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_		final CuratorFramework client,_		final Configuration configuration) throws Exception_	{_		return createLeaderRetrievalService(client, configuration, "")__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,final,curator,framework,client,final,configuration,configuration,throws,exception,return,create,leader,retrieval,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration) throws Exception;1445293011;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@return {@link ZooKeeperSubmittedJobGraphStore} instance;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		checkNotNull(configuration, "Configuration")___		StateHandleProvider<SubmittedJobGraph> stateHandleProvider =_				StateHandleProviderFactory.createRecoveryFileStateHandleProvider(configuration)___		_		String zooKeeperSubmittedJobsPath = configuration.getString(_				ConfigConstants.ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_				client, zooKeeperSubmittedJobsPath, stateHandleProvider)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,return,link,zoo,keeper,submitted,job,graph,store,instance;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,throws,exception,check,not,null,configuration,configuration,state,handle,provider,submitted,job,graph,state,handle,provider,state,handle,provider,factory,create,recovery,file,state,handle,provider,configuration,string,zoo,keeper,submitted,jobs,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,handle,provider
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration) throws Exception;1445327854;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@return {@link ZooKeeperSubmittedJobGraphStore} instance;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		checkNotNull(configuration, "Configuration")___		StateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = configuration.getString(_				ConfigConstants.ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_				client, zooKeeperSubmittedJobsPath, stateStorage)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,return,link,zoo,keeper,submitted,job,graph,store,instance;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,throws,exception,check,not,null,configuration,configuration,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration) throws Exception;1445598182;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@return {@link ZooKeeperSubmittedJobGraphStore} instance;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		checkNotNull(configuration, "Configuration")___		StateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = configuration.getString(_				ConfigConstants.ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_				client, zooKeeperSubmittedJobsPath, stateStorage)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,return,link,zoo,keeper,submitted,job,graph,store,instance;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,throws,exception,check,not,null,configuration,configuration,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration) throws Exception;1456841351;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@return {@link ZooKeeperSubmittedJobGraphStore} instance;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		checkNotNull(configuration, "Configuration")___		StateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = configuration.getString(_				ConfigConstants.ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_				client, zooKeeperSubmittedJobsPath, stateStorage)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,return,link,zoo,keeper,submitted,job,graph,store,instance;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,throws,exception,check,not,null,configuration,configuration,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration) throws Exception;1465991918;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@return {@link ZooKeeperSubmittedJobGraphStore} instance;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		checkNotNull(configuration, "Configuration")___		StateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = configuration.getString(_				ConfigConstants.ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_				client, zooKeeperSubmittedJobsPath, stateStorage)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,return,link,zoo,keeper,submitted,job,graph,store,instance;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,throws,exception,check,not,null,configuration,configuration,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration) throws Exception;1468944021;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@return {@link ZooKeeperSubmittedJobGraphStore} instance;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		checkNotNull(configuration, "Configuration")___		StateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = configuration.getString(_				ConfigConstants.ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_				client, zooKeeperSubmittedJobsPath, stateStorage)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,return,link,zoo,keeper,submitted,job,graph,store,instance;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,throws,exception,check,not,null,configuration,configuration,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration) throws Exception;1469525443;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@return {@link ZooKeeperSubmittedJobGraphStore} instance;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		checkNotNull(configuration, "Configuration")___		StateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = configuration.getString(_				ConfigConstants.ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_				client, zooKeeperSubmittedJobsPath, stateStorage)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,return,link,zoo,keeper,submitted,job,graph,store,instance;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,throws,exception,check,not,null,configuration,configuration,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration) throws Exception;1472033364;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@return {@link ZooKeeperSubmittedJobGraphStore} instance;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		checkNotNull(configuration, "Configuration")___		StateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = getConfiguredStringValue(configuration,_			ConfigConstants.HA_ZOOKEEPER_JOBGRAPHS_PATH, ConfigConstants.ZOOKEEPER_JOBGRAPHS_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_				client, zooKeeperSubmittedJobsPath, stateStorage)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,return,link,zoo,keeper,submitted,job,graph,store,instance;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,throws,exception,check,not,null,configuration,configuration,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,get,configured,string,value,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration) throws Exception;1472033371;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@return {@link ZooKeeperSubmittedJobGraphStore} instance;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		checkNotNull(configuration, "Configuration")___		StateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_				client, zooKeeperSubmittedJobsPath, stateStorage)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,return,link,zoo,keeper,submitted,job,graph,store,instance;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,throws,exception,check,not,null,configuration,configuration,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration) throws Exception;1472484430;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@return {@link ZooKeeperSubmittedJobGraphStore} instance;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		checkNotNull(configuration, "Configuration")___		StateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_				client, zooKeeperSubmittedJobsPath, stateStorage)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,return,link,zoo,keeper,submitted,job,graph,store,instance;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,throws,exception,check,not,null,configuration,configuration,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration) throws Exception;1472663401;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@return {@link ZooKeeperSubmittedJobGraphStore} instance;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		checkNotNull(configuration, "Configuration")___		RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_				client, zooKeeperSubmittedJobsPath, stateStorage)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,return,link,zoo,keeper,submitted,job,graph,store,instance;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,throws,exception,check,not,null,configuration,configuration,retrievable,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration) throws Exception;1476095826;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@return {@link ZooKeeperSubmittedJobGraphStore} instance;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		checkNotNull(configuration, "Configuration")___		RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_				client, zooKeeperSubmittedJobsPath, stateStorage)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,return,link,zoo,keeper,submitted,job,graph,store,instance;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,throws,exception,check,not,null,configuration,configuration,retrievable,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration) throws Exception;1476432306;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@return {@link ZooKeeperSubmittedJobGraphStore} instance;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		checkNotNull(configuration, "Configuration")___		RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_				client, zooKeeperSubmittedJobsPath, stateStorage)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,return,link,zoo,keeper,submitted,job,graph,store,instance;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,throws,exception,check,not,null,configuration,configuration,retrievable,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration) throws Exception;1476455790;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@return {@link ZooKeeperSubmittedJobGraphStore} instance;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		checkNotNull(configuration, "Configuration")___		RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_				client, zooKeeperSubmittedJobsPath, stateStorage)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,return,link,zoo,keeper,submitted,job,graph,store,instance;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,throws,exception,check,not,null,configuration,configuration,retrievable,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration) throws Exception;1476985095;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@return {@link ZooKeeperSubmittedJobGraphStore} instance_@throws Exception if the submitted job graph store cannot be created;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		checkNotNull(configuration, "Configuration")___		RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_JOBGRAPHS_PATH,_				ConfigConstants.ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_				client, zooKeeperSubmittedJobsPath, stateStorage)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,return,link,zoo,keeper,submitted,job,graph,store,instance,throws,exception,if,the,submitted,job,graph,store,cannot,be,created;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,throws,exception,check,not,null,configuration,configuration,retrievable,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration) throws Exception;1536763178;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@return {@link ZooKeeperSubmittedJobGraphStore} instance_@throws Exception if the submitted job graph store cannot be created;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		checkNotNull(configuration, "Configuration")___		RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = configuration.getString(HighAvailabilityOptions.HA_ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_			client,_			zooKeeperSubmittedJobsPath,_			stateStorage)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,return,link,zoo,keeper,submitted,job,graph,store,instance,throws,exception,if,the,submitted,job,graph,store,cannot,be,created;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,throws,exception,check,not,null,configuration,configuration,retrievable,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,get,string,high,availability,options,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration) throws Exception;1536763193;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@return {@link ZooKeeperSubmittedJobGraphStore} instance_@throws Exception if the submitted job graph store cannot be created;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		checkNotNull(configuration, "Configuration")___		RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = configuration.getString(HighAvailabilityOptions.HA_ZOOKEEPER_JOBGRAPHS_PATH)___		return new ZooKeeperSubmittedJobGraphStore(_			client,_			zooKeeperSubmittedJobsPath,_			stateStorage)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,return,link,zoo,keeper,submitted,job,graph,store,instance,throws,exception,if,the,submitted,job,graph,store,cannot,be,created;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,throws,exception,check,not,null,configuration,configuration,retrievable,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,get,string,high,availability,options,return,new,zoo,keeper,submitted,job,graph,store,client,zoo,keeper,submitted,jobs,path,state,storage
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration) throws Exception;1547028640;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@return {@link ZooKeeperSubmittedJobGraphStore} instance_@throws Exception if the submitted job graph store cannot be created;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		checkNotNull(configuration, "Configuration")___		RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = configuration.getString(HighAvailabilityOptions.HA_ZOOKEEPER_JOBGRAPHS_PATH)___		_		client.newNamespaceAwareEnsurePath(zooKeeperSubmittedJobsPath)_			.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + zooKeeperSubmittedJobsPath)___		final String zooKeeperFullSubmittedJobsPath = client.getNamespace() + zooKeeperSubmittedJobsPath___		final ZooKeeperStateHandleStore<SubmittedJobGraph> zooKeeperStateHandleStore = new ZooKeeperStateHandleStore<>(facade, stateStorage)___		final PathChildrenCache pathCache = new PathChildrenCache(facade, "/", false)___		return new ZooKeeperSubmittedJobGraphStore(_			zooKeeperFullSubmittedJobsPath,_			zooKeeperStateHandleStore,_			pathCache)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,return,link,zoo,keeper,submitted,job,graph,store,instance,throws,exception,if,the,submitted,job,graph,store,cannot,be,created;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,throws,exception,check,not,null,configuration,configuration,retrievable,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,get,string,high,availability,options,client,new,namespace,aware,ensure,path,zoo,keeper,submitted,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,zoo,keeper,submitted,jobs,path,final,string,zoo,keeper,full,submitted,jobs,path,client,get,namespace,zoo,keeper,submitted,jobs,path,final,zoo,keeper,state,handle,store,submitted,job,graph,zoo,keeper,state,handle,store,new,zoo,keeper,state,handle,store,facade,state,storage,final,path,children,cache,path,cache,new,path,children,cache,facade,false,return,new,zoo,keeper,submitted,job,graph,store,zoo,keeper,full,submitted,jobs,path,zoo,keeper,state,handle,store,path,cache
ZooKeeperUtils -> public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs( 			CuratorFramework client, 			Configuration configuration) throws Exception;1547547304;Creates a {@link ZooKeeperSubmittedJobGraphStore} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@return {@link ZooKeeperSubmittedJobGraphStore} instance_@throws Exception if the submitted job graph store cannot be created;public static ZooKeeperSubmittedJobGraphStore createSubmittedJobGraphs(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		checkNotNull(configuration, "Configuration")___		RetrievableStateStorageHelper<SubmittedJobGraph> stateStorage = createFileSystemStateStorage(configuration, "submittedJobGraph")___		_		String zooKeeperSubmittedJobsPath = configuration.getString(HighAvailabilityOptions.HA_ZOOKEEPER_JOBGRAPHS_PATH)___		_		client.newNamespaceAwareEnsurePath(zooKeeperSubmittedJobsPath)_			.ensure(client.getZookeeperClient())___		_		CuratorFramework facade = client.usingNamespace(client.getNamespace() + zooKeeperSubmittedJobsPath)___		final String zooKeeperFullSubmittedJobsPath = client.getNamespace() + zooKeeperSubmittedJobsPath___		final ZooKeeperStateHandleStore<SubmittedJobGraph> zooKeeperStateHandleStore = new ZooKeeperStateHandleStore<>(facade, stateStorage)___		final PathChildrenCache pathCache = new PathChildrenCache(facade, "/", false)___		return new ZooKeeperSubmittedJobGraphStore(_			zooKeeperFullSubmittedJobsPath,_			zooKeeperStateHandleStore,_			pathCache)__	};creates,a,link,zoo,keeper,submitted,job,graph,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,return,link,zoo,keeper,submitted,job,graph,store,instance,throws,exception,if,the,submitted,job,graph,store,cannot,be,created;public,static,zoo,keeper,submitted,job,graph,store,create,submitted,job,graphs,curator,framework,client,configuration,configuration,throws,exception,check,not,null,configuration,configuration,retrievable,state,storage,helper,submitted,job,graph,state,storage,create,file,system,state,storage,configuration,submitted,job,graph,string,zoo,keeper,submitted,jobs,path,configuration,get,string,high,availability,options,client,new,namespace,aware,ensure,path,zoo,keeper,submitted,jobs,path,ensure,client,get,zookeeper,client,curator,framework,facade,client,using,namespace,client,get,namespace,zoo,keeper,submitted,jobs,path,final,string,zoo,keeper,full,submitted,jobs,path,client,get,namespace,zoo,keeper,submitted,jobs,path,final,zoo,keeper,state,handle,store,submitted,job,graph,zoo,keeper,state,handle,store,new,zoo,keeper,state,handle,store,facade,state,storage,final,path,children,cache,path,cache,new,path,children,cache,facade,false,return,new,zoo,keeper,submitted,job,graph,store,zoo,keeper,full,submitted,jobs,path,zoo,keeper,state,handle,store,path,cache
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			ClassLoader userClassLoader) throws Exception;1445293011;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param userClassLoader                User code class loader_@return {@link ZooKeeperCompletedCheckpointStore} instance;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			ClassLoader userClassLoader) throws Exception {__		checkNotNull(configuration, "Configuration")___		StateHandleProvider<CompletedCheckpoint> stateHandleProvider =_				StateHandleProviderFactory.createRecoveryFileStateHandleProvider(configuration)___		String completedCheckpointsPath = configuration.getString(_				ConfigConstants.ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINTS_PATH)___		completedCheckpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_				maxNumberOfCheckpointsToRetain,_				userClassLoader,_				client,_				completedCheckpointsPath,_				stateHandleProvider)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,user,class,loader,user,code,class,loader,return,link,zoo,keeper,completed,checkpoint,store,instance;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,class,loader,user,class,loader,throws,exception,check,not,null,configuration,configuration,state,handle,provider,completed,checkpoint,state,handle,provider,state,handle,provider,factory,create,recovery,file,state,handle,provider,configuration,string,completed,checkpoints,path,configuration,get,string,config,constants,config,constants,completed,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,user,class,loader,client,completed,checkpoints,path,state,handle,provider
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			ClassLoader userClassLoader) throws Exception;1445327854;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param userClassLoader                User code class loader_@return {@link ZooKeeperCompletedCheckpointStore} instance;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			ClassLoader userClassLoader) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = configuration.getString(_			ConfigConstants.ZOOKEEPER_CHECKPOINTS_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINTS_PATH)____		StateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_				maxNumberOfCheckpointsToRetain,_				userClassLoader,_				client,_				checkpointsPath,_				stateStorage)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,user,class,loader,user,code,class,loader,return,link,zoo,keeper,completed,checkpoint,store,instance;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,class,loader,user,class,loader,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,get,string,config,constants,config,constants,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,user,class,loader,client,checkpoints,path,state,storage
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			ClassLoader userClassLoader) throws Exception;1445598182;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param userClassLoader                User code class loader_@return {@link ZooKeeperCompletedCheckpointStore} instance;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			ClassLoader userClassLoader) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = configuration.getString(_			ConfigConstants.ZOOKEEPER_CHECKPOINTS_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINTS_PATH)____		StateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_				maxNumberOfCheckpointsToRetain,_				userClassLoader,_				client,_				checkpointsPath,_				stateStorage)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,user,class,loader,user,code,class,loader,return,link,zoo,keeper,completed,checkpoint,store,instance;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,class,loader,user,class,loader,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,get,string,config,constants,config,constants,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,user,class,loader,client,checkpoints,path,state,storage
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			ClassLoader userClassLoader) throws Exception;1456841351;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param userClassLoader                User code class loader_@return {@link ZooKeeperCompletedCheckpointStore} instance;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			ClassLoader userClassLoader) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = configuration.getString(_			ConfigConstants.ZOOKEEPER_CHECKPOINTS_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINTS_PATH)___		StateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_				maxNumberOfCheckpointsToRetain,_				userClassLoader,_				client,_				checkpointsPath,_				stateStorage)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,user,class,loader,user,code,class,loader,return,link,zoo,keeper,completed,checkpoint,store,instance;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,class,loader,user,class,loader,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,get,string,config,constants,config,constants,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,user,class,loader,client,checkpoints,path,state,storage
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			ClassLoader userClassLoader) throws Exception;1465991918;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param userClassLoader                User code class loader_@return {@link ZooKeeperCompletedCheckpointStore} instance;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			ClassLoader userClassLoader) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = configuration.getString(_			ConfigConstants.ZOOKEEPER_CHECKPOINTS_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINTS_PATH)___		StateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_				maxNumberOfCheckpointsToRetain,_				userClassLoader,_				client,_				checkpointsPath,_				stateStorage)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,user,class,loader,user,code,class,loader,return,link,zoo,keeper,completed,checkpoint,store,instance;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,class,loader,user,class,loader,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,get,string,config,constants,config,constants,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,user,class,loader,client,checkpoints,path,state,storage
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			ClassLoader userClassLoader) throws Exception;1468944021;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param userClassLoader                User code class loader_@return {@link ZooKeeperCompletedCheckpointStore} instance;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			ClassLoader userClassLoader) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = configuration.getString(_			ConfigConstants.ZOOKEEPER_CHECKPOINTS_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINTS_PATH)___		StateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_				maxNumberOfCheckpointsToRetain,_				userClassLoader,_				client,_				checkpointsPath,_				stateStorage)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,user,class,loader,user,code,class,loader,return,link,zoo,keeper,completed,checkpoint,store,instance;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,class,loader,user,class,loader,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,get,string,config,constants,config,constants,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,user,class,loader,client,checkpoints,path,state,storage
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			ClassLoader userClassLoader) throws Exception;1469525443;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param userClassLoader                User code class loader_@return {@link ZooKeeperCompletedCheckpointStore} instance;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			ClassLoader userClassLoader) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = configuration.getString(_			ConfigConstants.ZOOKEEPER_CHECKPOINTS_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINTS_PATH)___		StateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_				maxNumberOfCheckpointsToRetain,_				userClassLoader,_				client,_				checkpointsPath,_				stateStorage)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,user,class,loader,user,code,class,loader,return,link,zoo,keeper,completed,checkpoint,store,instance;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,class,loader,user,class,loader,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,get,string,config,constants,config,constants,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,user,class,loader,client,checkpoints,path,state,storage
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			ClassLoader userClassLoader) throws Exception;1472033364;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param userClassLoader                User code class loader_@return {@link ZooKeeperCompletedCheckpointStore} instance;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			ClassLoader userClassLoader) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = getConfiguredStringValue(configuration,_			ConfigConstants.HA_ZOOKEEPER_CHECKPOINTS_PATH,_			ConfigConstants.ZOOKEEPER_CHECKPOINTS_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINTS_PATH)___		StateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_				maxNumberOfCheckpointsToRetain,_				userClassLoader,_				client,_				checkpointsPath,_				stateStorage)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,user,class,loader,user,code,class,loader,return,link,zoo,keeper,completed,checkpoint,store,instance;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,class,loader,user,class,loader,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,get,configured,string,value,configuration,config,constants,config,constants,config,constants,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,user,class,loader,client,checkpoints,path,state,storage
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			ClassLoader userClassLoader) throws Exception;1472033371;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param userClassLoader                User code class loader_@return {@link ZooKeeperCompletedCheckpointStore} instance;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			ClassLoader userClassLoader) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINTS_PATH)___		StateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_				maxNumberOfCheckpointsToRetain,_				userClassLoader,_				client,_				checkpointsPath,_				stateStorage)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,user,class,loader,user,code,class,loader,return,link,zoo,keeper,completed,checkpoint,store,instance;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,class,loader,user,class,loader,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,user,class,loader,client,checkpoints,path,state,storage
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			ClassLoader userClassLoader) throws Exception;1472484430;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param userClassLoader                User code class loader_@return {@link ZooKeeperCompletedCheckpointStore} instance;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			ClassLoader userClassLoader) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINTS_PATH)___		StateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_				maxNumberOfCheckpointsToRetain,_				userClassLoader,_				client,_				checkpointsPath,_				stateStorage)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,user,class,loader,user,code,class,loader,return,link,zoo,keeper,completed,checkpoint,store,instance;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,class,loader,user,class,loader,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,user,class,loader,client,checkpoints,path,state,storage
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			ClassLoader userClassLoader) throws Exception;1472663401;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param userClassLoader                User code class loader_@return {@link ZooKeeperCompletedCheckpointStore} instance;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			ClassLoader userClassLoader) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINTS_PATH)___		RetrievableStateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_				maxNumberOfCheckpointsToRetain,_				userClassLoader,_				client,_				checkpointsPath,_				stateStorage)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,user,class,loader,user,code,class,loader,return,link,zoo,keeper,completed,checkpoint,store,instance;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,class,loader,user,class,loader,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,retrievable,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,user,class,loader,client,checkpoints,path,state,storage
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			ClassLoader userClassLoader) throws Exception;1476095826;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param userClassLoader                User code class loader_@return {@link ZooKeeperCompletedCheckpointStore} instance;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			ClassLoader userClassLoader) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINTS_PATH)___		RetrievableStateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_				maxNumberOfCheckpointsToRetain,_				userClassLoader,_				client,_				checkpointsPath,_				stateStorage)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,user,class,loader,user,code,class,loader,return,link,zoo,keeper,completed,checkpoint,store,instance;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,class,loader,user,class,loader,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,retrievable,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,user,class,loader,client,checkpoints,path,state,storage
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration);1476985095;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance.;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration) {_		CuratorFramework client = startCuratorFramework(configuration)__		String leaderPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,curator,framework,client,start,curator,framework,configuration,string,leader,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration);1479852016;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance.;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration) {_		CuratorFramework client = startCuratorFramework(configuration)__		String leaderPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,curator,framework,client,start,curator,framework,configuration,string,leader,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			final CuratorFramework client, 			final Configuration configuration, 			final String pathSuffix);1516971022;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@param pathSuffix    The path suffix which we want to append_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			final CuratorFramework client,_			final Configuration configuration,_			final String pathSuffix) {_		final String latchPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_LATCH_PATH) + pathSuffix__		final String leaderPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_LEADER_PATH) + pathSuffix___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,param,path,suffix,the,path,suffix,which,we,want,to,append,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,final,curator,framework,client,final,configuration,configuration,final,string,path,suffix,final,string,latch,path,configuration,get,string,high,availability,options,path,suffix,final,string,leader,path,configuration,get,string,high,availability,options,path,suffix,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			final CuratorFramework client, 			final Configuration configuration, 			final String pathSuffix);1536763178;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@param pathSuffix    The path suffix which we want to append_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			final CuratorFramework client,_			final Configuration configuration,_			final String pathSuffix) {_		final String latchPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_LATCH_PATH) + pathSuffix__		final String leaderPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_LEADER_PATH) + pathSuffix___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,param,path,suffix,the,path,suffix,which,we,want,to,append,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,final,curator,framework,client,final,configuration,configuration,final,string,path,suffix,final,string,latch,path,configuration,get,string,high,availability,options,path,suffix,final,string,leader,path,configuration,get,string,high,availability,options,path,suffix,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			final CuratorFramework client, 			final Configuration configuration, 			final String pathSuffix);1536763193;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@param pathSuffix    The path suffix which we want to append_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			final CuratorFramework client,_			final Configuration configuration,_			final String pathSuffix) {_		final String latchPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_LATCH_PATH) + pathSuffix__		final String leaderPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_LEADER_PATH) + pathSuffix___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,param,path,suffix,the,path,suffix,which,we,want,to,append,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,final,curator,framework,client,final,configuration,configuration,final,string,path,suffix,final,string,latch,path,configuration,get,string,high,availability,options,path,suffix,final,string,leader,path,configuration,get,string,high,availability,options,path,suffix,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			final CuratorFramework client, 			final Configuration configuration, 			final String pathSuffix);1547028640;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@param pathSuffix    The path suffix which we want to append_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			final CuratorFramework client,_			final Configuration configuration,_			final String pathSuffix) {_		final String latchPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_LATCH_PATH) + pathSuffix__		final String leaderPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_LEADER_PATH) + pathSuffix___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,param,path,suffix,the,path,suffix,which,we,want,to,append,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,final,curator,framework,client,final,configuration,configuration,final,string,path,suffix,final,string,latch,path,configuration,get,string,high,availability,options,path,suffix,final,string,leader,path,configuration,get,string,high,availability,options,path,suffix,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			final CuratorFramework client, 			final Configuration configuration, 			final String pathSuffix);1547547304;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@param pathSuffix    The path suffix which we want to append_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			final CuratorFramework client,_			final Configuration configuration,_			final String pathSuffix) {_		final String latchPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_LATCH_PATH) + pathSuffix__		final String leaderPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_LEADER_PATH) + pathSuffix___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,param,path,suffix,the,path,suffix,which,we,want,to,append,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,final,curator,framework,client,final,configuration,configuration,final,string,path,suffix,final,string,latch,path,configuration,get,string,high,availability,options,path,suffix,final,string,leader,path,configuration,get,string,high,availability,options,path,suffix,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> private static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1445327854;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException;private static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = configuration.getString(_			ConfigConstants.STATE_BACKEND_FS_RECOVERY_PATH, "")___		if (rootPath.equals("")) {_			throw new IllegalConfigurationException("Missing recovery path. Specify via " +_				"configuration key '" + ConfigConstants.STATE_BACKEND_FS_RECOVERY_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception;private,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,get,string,config,constants,if,root,path,equals,throw,new,illegal,configuration,exception,missing,recovery,path,specify,via,configuration,key,config,constants,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> private static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1445598182;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException;private static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = configuration.getString(_			ConfigConstants.ZOOKEEPER_RECOVERY_PATH, "")___		if (rootPath.equals("")) {_			throw new IllegalConfigurationException("Missing recovery path. Specify via " +_				"configuration key '" + ConfigConstants.ZOOKEEPER_RECOVERY_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception;private,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,get,string,config,constants,if,root,path,equals,throw,new,illegal,configuration,exception,missing,recovery,path,specify,via,configuration,key,config,constants,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> private static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1456841351;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException;private static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = configuration.getString(_			ConfigConstants.ZOOKEEPER_RECOVERY_PATH, "")___		if (rootPath.equals("")) {_			throw new IllegalConfigurationException("Missing recovery path. Specify via " +_				"configuration key '" + ConfigConstants.ZOOKEEPER_RECOVERY_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception;private,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,get,string,config,constants,if,root,path,equals,throw,new,illegal,configuration,exception,missing,recovery,path,specify,via,configuration,key,config,constants,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> private static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1465991918;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException;private static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = configuration.getString(_			ConfigConstants.ZOOKEEPER_RECOVERY_PATH, "")___		if (rootPath.equals("")) {_			throw new IllegalConfigurationException("Missing recovery path. Specify via " +_				"configuration key '" + ConfigConstants.ZOOKEEPER_RECOVERY_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception;private,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,get,string,config,constants,if,root,path,equals,throw,new,illegal,configuration,exception,missing,recovery,path,specify,via,configuration,key,config,constants,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> private static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1468944021;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException;private static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = configuration.getString(_			ConfigConstants.ZOOKEEPER_RECOVERY_PATH, "")___		if (rootPath.equals("")) {_			throw new IllegalConfigurationException("Missing recovery path. Specify via " +_				"configuration key '" + ConfigConstants.ZOOKEEPER_RECOVERY_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception;private,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,get,string,config,constants,if,root,path,equals,throw,new,illegal,configuration,exception,missing,recovery,path,specify,via,configuration,key,config,constants,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> private static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1469525443;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException;private static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = configuration.getString(_			ConfigConstants.ZOOKEEPER_RECOVERY_PATH, "")___		if (rootPath.equals("")) {_			throw new IllegalConfigurationException("Missing recovery path. Specify via " +_				"configuration key '" + ConfigConstants.ZOOKEEPER_RECOVERY_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception;private,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,get,string,config,constants,if,root,path,equals,throw,new,illegal,configuration,exception,missing,recovery,path,specify,via,configuration,key,config,constants,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> private static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1472033364;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException;private static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = configuration.getString(_			ConfigConstants.ZOOKEEPER_HA_PATH, "")__		if (rootPath.isEmpty()) {_			rootPath = configuration.getString(_				ConfigConstants.ZOOKEEPER_RECOVERY_PATH, "")__		}__		if (rootPath.equals("")) {_			throw new IllegalConfigurationException("Missing recovery path. Specify via " +_				"configuration key '" + ConfigConstants.ZOOKEEPER_HA_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception;private,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,get,string,config,constants,if,root,path,is,empty,root,path,configuration,get,string,config,constants,if,root,path,equals,throw,new,illegal,configuration,exception,missing,recovery,path,specify,via,configuration,key,config,constants,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> private static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage( 			Configuration configuration, 			String prefix) throws IOException;1472033371;Creates a {@link FileSystemStateStorageHelper} instance.__@param configuration {@link Configuration} object_@param prefix Prefix for the created files_@param <T> Type of the state objects_@return {@link FileSystemStateStorageHelper} instance_@throws IOException;private static <T extends Serializable> FileSystemStateStorageHelper<T> createFileSystemStateStorage(_			Configuration configuration,_			String prefix) throws IOException {__		String rootPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_STORAGE_PATH,_				"",_				ConfigConstants.ZOOKEEPER_RECOVERY_PATH)___		if (rootPath.equals("")) {_			throw new IllegalConfigurationException("Missing recovery path. Specify via " +_				"configuration key '" + ConfigConstants.HA_ZOOKEEPER_STORAGE_PATH + "'.")__		} else {_			return new FileSystemStateStorageHelper<T>(rootPath, prefix)__		}_	};creates,a,link,file,system,state,storage,helper,instance,param,configuration,link,configuration,object,param,prefix,prefix,for,the,created,files,param,t,type,of,the,state,objects,return,link,file,system,state,storage,helper,instance,throws,ioexception;private,static,t,extends,serializable,file,system,state,storage,helper,t,create,file,system,state,storage,configuration,configuration,string,prefix,throws,ioexception,string,root,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,if,root,path,equals,throw,new,illegal,configuration,exception,missing,recovery,path,specify,via,configuration,key,config,constants,else,return,new,file,system,state,storage,helper,t,root,path,prefix
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration);1476985095;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) {__		String latchPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LATCH_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LATCH_PATH,_				ConfigConstants.ZOOKEEPER_LATCH_PATH)__		String leaderPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,string,latch,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,string,leader,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration);1479852016;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) {__		String latchPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LATCH_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LATCH_PATH,_				ConfigConstants.ZOOKEEPER_LATCH_PATH)__		String leaderPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,string,latch,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,string,leader,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 		final CuratorFramework client, 		final Configuration configuration, 		final String pathSuffix);1482522864;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@param pathSuffix    The path suffix which we want to append_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_		final CuratorFramework client,_		final Configuration configuration,_		final String pathSuffix)_	{_		String leaderPath = ConfigurationUtil.getStringWithDeprecatedKeys(_			configuration,_			ConfigConstants.HA_ZOOKEEPER_LEADER_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH,_			ConfigConstants.ZOOKEEPER_LEADER_PATH) + pathSuffix___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,param,path,suffix,the,path,suffix,which,we,want,to,append,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,final,curator,framework,client,final,configuration,configuration,final,string,path,suffix,string,leader,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,path,suffix,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 		final CuratorFramework client, 		final Configuration configuration, 		final String pathSuffix);1485163254;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@param pathSuffix    The path suffix which we want to append_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_		final CuratorFramework client,_		final Configuration configuration,_		final String pathSuffix)_	{_		String leaderPath = ConfigurationUtil.getStringWithDeprecatedKeys(_			configuration,_			ConfigConstants.HA_ZOOKEEPER_LEADER_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH,_			ConfigConstants.ZOOKEEPER_LEADER_PATH) + pathSuffix___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,param,path,suffix,the,path,suffix,which,we,want,to,append,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,final,curator,framework,client,final,configuration,configuration,final,string,path,suffix,string,leader,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,path,suffix,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 		final CuratorFramework client, 		final Configuration configuration, 		final String pathSuffix);1493975167;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@param pathSuffix    The path suffix which we want to append_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_		final CuratorFramework client,_		final Configuration configuration,_		final String pathSuffix)_	{_		String leaderPath = ConfigurationUtil.getStringWithDeprecatedKeys(_			configuration,_			ConfigConstants.HA_ZOOKEEPER_LEADER_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH,_			ConfigConstants.ZOOKEEPER_LEADER_PATH) + pathSuffix___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,param,path,suffix,the,path,suffix,which,we,want,to,append,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,final,curator,framework,client,final,configuration,configuration,final,string,path,suffix,string,leader,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,path,suffix,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 		final CuratorFramework client, 		final Configuration configuration, 		final String pathSuffix);1498896127;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@param pathSuffix    The path suffix which we want to append_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_		final CuratorFramework client,_		final Configuration configuration,_		final String pathSuffix)_	{_		String leaderPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_LEADER_PATH) + pathSuffix___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,param,path,suffix,the,path,suffix,which,we,want,to,append,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,final,curator,framework,client,final,configuration,configuration,final,string,path,suffix,string,leader,path,configuration,get,string,high,availability,options,path,suffix,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 		final CuratorFramework client, 		final Configuration configuration, 		final String pathSuffix);1516971022;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@param pathSuffix    The path suffix which we want to append_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_		final CuratorFramework client,_		final Configuration configuration,_		final String pathSuffix) {_		String leaderPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_LEADER_PATH) + pathSuffix___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,param,path,suffix,the,path,suffix,which,we,want,to,append,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,final,curator,framework,client,final,configuration,configuration,final,string,path,suffix,string,leader,path,configuration,get,string,high,availability,options,path,suffix,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 		final CuratorFramework client, 		final Configuration configuration, 		final String pathSuffix);1536763178;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@param pathSuffix    The path suffix which we want to append_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_		final CuratorFramework client,_		final Configuration configuration,_		final String pathSuffix) {_		String leaderPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_LEADER_PATH) + pathSuffix___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,param,path,suffix,the,path,suffix,which,we,want,to,append,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,final,curator,framework,client,final,configuration,configuration,final,string,path,suffix,string,leader,path,configuration,get,string,high,availability,options,path,suffix,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 		final CuratorFramework client, 		final Configuration configuration, 		final String pathSuffix);1536763193;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@param pathSuffix    The path suffix which we want to append_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_		final CuratorFramework client,_		final Configuration configuration,_		final String pathSuffix) {_		String leaderPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_LEADER_PATH) + pathSuffix___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,param,path,suffix,the,path,suffix,which,we,want,to,append,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,final,curator,framework,client,final,configuration,configuration,final,string,path,suffix,string,leader,path,configuration,get,string,high,availability,options,path,suffix,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 		final CuratorFramework client, 		final Configuration configuration, 		final String pathSuffix);1547028640;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@param pathSuffix    The path suffix which we want to append_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_		final CuratorFramework client,_		final Configuration configuration,_		final String pathSuffix) {_		String leaderPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_LEADER_PATH) + pathSuffix___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,param,path,suffix,the,path,suffix,which,we,want,to,append,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,final,curator,framework,client,final,configuration,configuration,final,string,path,suffix,string,leader,path,configuration,get,string,high,availability,options,path,suffix,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 		final CuratorFramework client, 		final Configuration configuration, 		final String pathSuffix);1547547304;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@param pathSuffix    The path suffix which we want to append_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_		final CuratorFramework client,_		final Configuration configuration,_		final String pathSuffix) {_		String leaderPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_LEADER_PATH) + pathSuffix___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,param,path,suffix,the,path,suffix,which,we,want,to,append,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,final,curator,framework,client,final,configuration,configuration,final,string,path,suffix,string,leader,path,configuration,get,string,high,availability,options,path,suffix,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> private ZooKeeperUtils();1443564120;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1445293011;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1445327854;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1445598182;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1456841351;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1465991918;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1468944021;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1469525443;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1472033364;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1472033371;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1472484430;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1472663401;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1476095826;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1476432306;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1476455790;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1476985095;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1479852016;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1482522861;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1482522864;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1485163254;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1493975167;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1498896127;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1516971022;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1536763178;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1536763193;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1547028640;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> private ZooKeeperUtils();1547547304;Private constructor to prevent instantiation.;private ZooKeeperUtils() {_		throw new RuntimeException()__	};private,constructor,to,prevent,instantiation;private,zoo,keeper,utils,throw,new,runtime,exception
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			Configuration configuration);1476985095;Creates a {@link ZooKeeperLeaderElectionService} instance and a new {@link_CuratorFramework} client.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			Configuration configuration) {__		CuratorFramework client = startCuratorFramework(configuration)___		return createLeaderElectionService(client, configuration)__	};creates,a,link,zoo,keeper,leader,election,service,instance,and,a,new,link,curator,framework,client,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,configuration,configuration,curator,framework,client,start,curator,framework,configuration,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			Configuration configuration);1479852016;Creates a {@link ZooKeeperLeaderElectionService} instance and a new {@link_CuratorFramework} client.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			Configuration configuration) {__		CuratorFramework client = startCuratorFramework(configuration)___		return createLeaderElectionService(client, configuration)__	};creates,a,link,zoo,keeper,leader,election,service,instance,and,a,new,link,curator,framework,client,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,configuration,configuration,curator,framework,client,start,curator,framework,configuration,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1441011751;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		String zkQuorum = configuration.getString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, "")___		if(zkQuorum == null || zkQuorum.equals("")) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified.")__		}__		int sessionTimeout = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_SESSION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_CONNECTION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger (_				ConfigConstants.ZOOKEEPER_RETRY_WAIT,_				ConfigConstants.DEFAULT_ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_MAX_RETRY_ATTEMPTS,_				ConfigConstants.DEFAULT_ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getString(ConfigConstants.ZOOKEEPER_DIR_KEY,_				ConfigConstants.DEFAULT_ZOOKEEPER_DIR_KEY)___		LOG.info("Using '{}' as root namespace.", root)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(root.startsWith("/") ? root.substring(1) : root)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,string,zk,quorum,configuration,get,string,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,int,session,timeout,configuration,get,integer,config,constants,config,constants,int,connection,timeout,configuration,get,integer,config,constants,config,constants,int,retry,wait,configuration,get,integer,config,constants,config,constants,int,max,retry,attempts,configuration,get,integer,config,constants,config,constants,string,root,configuration,get,string,config,constants,config,constants,log,info,using,as,root,namespace,root,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,starts,with,root,substring,1,root,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1443564120;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		String zkQuorum = configuration.getString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, "")___		if(zkQuorum == null || zkQuorum.equals("")) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified.")__		}__		int sessionTimeout = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_SESSION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_CONNECTION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger (_				ConfigConstants.ZOOKEEPER_RETRY_WAIT,_				ConfigConstants.DEFAULT_ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_MAX_RETRY_ATTEMPTS,_				ConfigConstants.DEFAULT_ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getString(ConfigConstants.ZOOKEEPER_DIR_KEY,_				ConfigConstants.DEFAULT_ZOOKEEPER_DIR_KEY)___		LOG.info("Using '{}' as root namespace.", root)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(root.startsWith("/") ? root.substring(1) : root)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,string,zk,quorum,configuration,get,string,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,int,session,timeout,configuration,get,integer,config,constants,config,constants,int,connection,timeout,configuration,get,integer,config,constants,config,constants,int,retry,wait,configuration,get,integer,config,constants,config,constants,int,max,retry,attempts,configuration,get,integer,config,constants,config,constants,string,root,configuration,get,string,config,constants,config,constants,log,info,using,as,root,namespace,root,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,starts,with,root,substring,1,root,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1445293011;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		String zkQuorum = configuration.getString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, "")___		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					ConfigConstants.ZOOKEEPER_QUORUM_KEY + "'.")__		}__		int sessionTimeout = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_SESSION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_CONNECTION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_RETRY_WAIT,_				ConfigConstants.DEFAULT_ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_MAX_RETRY_ATTEMPTS,_				ConfigConstants.DEFAULT_ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getString(ConfigConstants.ZOOKEEPER_DIR_KEY,_				ConfigConstants.DEFAULT_ZOOKEEPER_DIR_KEY)___		LOG.info("Using '{}' as root namespace.", root)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(root.startsWith("/") ? root.substring(1) : root)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,string,zk,quorum,configuration,get,string,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,config,constants,int,session,timeout,configuration,get,integer,config,constants,config,constants,int,connection,timeout,configuration,get,integer,config,constants,config,constants,int,retry,wait,configuration,get,integer,config,constants,config,constants,int,max,retry,attempts,configuration,get,integer,config,constants,config,constants,string,root,configuration,get,string,config,constants,config,constants,log,info,using,as,root,namespace,root,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,starts,with,root,substring,1,root,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1445327854;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		String zkQuorum = configuration.getString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, "")___		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					ConfigConstants.ZOOKEEPER_QUORUM_KEY + "'.")__		}__		int sessionTimeout = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_SESSION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_CONNECTION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_RETRY_WAIT,_				ConfigConstants.DEFAULT_ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_MAX_RETRY_ATTEMPTS,_				ConfigConstants.DEFAULT_ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getString(ConfigConstants.ZOOKEEPER_DIR_KEY,_				ConfigConstants.DEFAULT_ZOOKEEPER_DIR_KEY)___		LOG.info("Using '{}' as root namespace.", root)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(root.startsWith("/") ? root.substring(1) : root)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,string,zk,quorum,configuration,get,string,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,config,constants,int,session,timeout,configuration,get,integer,config,constants,config,constants,int,connection,timeout,configuration,get,integer,config,constants,config,constants,int,retry,wait,configuration,get,integer,config,constants,config,constants,int,max,retry,attempts,configuration,get,integer,config,constants,config,constants,string,root,configuration,get,string,config,constants,config,constants,log,info,using,as,root,namespace,root,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,starts,with,root,substring,1,root,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1445598182;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		String zkQuorum = configuration.getString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, "")___		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					ConfigConstants.ZOOKEEPER_QUORUM_KEY + "'.")__		}__		int sessionTimeout = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_SESSION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_CONNECTION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_RETRY_WAIT,_				ConfigConstants.DEFAULT_ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_MAX_RETRY_ATTEMPTS,_				ConfigConstants.DEFAULT_ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getString(ConfigConstants.ZOOKEEPER_DIR_KEY,_				ConfigConstants.DEFAULT_ZOOKEEPER_DIR_KEY)___		LOG.info("Using '{}' as root namespace.", root)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(root.startsWith("/") ? root.substring(1) : root)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,string,zk,quorum,configuration,get,string,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,config,constants,int,session,timeout,configuration,get,integer,config,constants,config,constants,int,connection,timeout,configuration,get,integer,config,constants,config,constants,int,retry,wait,configuration,get,integer,config,constants,config,constants,int,max,retry,attempts,configuration,get,integer,config,constants,config,constants,string,root,configuration,get,string,config,constants,config,constants,log,info,using,as,root,namespace,root,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,starts,with,root,substring,1,root,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1456841351;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		String zkQuorum = configuration.getString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, "")___		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					ConfigConstants.ZOOKEEPER_QUORUM_KEY + "'.")__		}__		int sessionTimeout = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_SESSION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_CONNECTION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_RETRY_WAIT,_				ConfigConstants.DEFAULT_ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_MAX_RETRY_ATTEMPTS,_				ConfigConstants.DEFAULT_ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getString(ConfigConstants.ZOOKEEPER_DIR_KEY,_				ConfigConstants.DEFAULT_ZOOKEEPER_DIR_KEY)___		LOG.info("Using '{}' as root namespace.", root)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(root.startsWith("/") ? root.substring(1) : root)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,string,zk,quorum,configuration,get,string,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,config,constants,int,session,timeout,configuration,get,integer,config,constants,config,constants,int,connection,timeout,configuration,get,integer,config,constants,config,constants,int,retry,wait,configuration,get,integer,config,constants,config,constants,int,max,retry,attempts,configuration,get,integer,config,constants,config,constants,string,root,configuration,get,string,config,constants,config,constants,log,info,using,as,root,namespace,root,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,starts,with,root,substring,1,root,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1465991918;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		String zkQuorum = configuration.getString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, "")___		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					ConfigConstants.ZOOKEEPER_QUORUM_KEY + "'.")__		}__		int sessionTimeout = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_SESSION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_CONNECTION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_RETRY_WAIT,_				ConfigConstants.DEFAULT_ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_MAX_RETRY_ATTEMPTS,_				ConfigConstants.DEFAULT_ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getString(ConfigConstants.ZOOKEEPER_DIR_KEY,_				ConfigConstants.DEFAULT_ZOOKEEPER_DIR_KEY)___		LOG.info("Using '{}' as root namespace.", root)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(root.startsWith("/") ? root.substring(1) : root)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,string,zk,quorum,configuration,get,string,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,config,constants,int,session,timeout,configuration,get,integer,config,constants,config,constants,int,connection,timeout,configuration,get,integer,config,constants,config,constants,int,retry,wait,configuration,get,integer,config,constants,config,constants,int,max,retry,attempts,configuration,get,integer,config,constants,config,constants,string,root,configuration,get,string,config,constants,config,constants,log,info,using,as,root,namespace,root,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,starts,with,root,substring,1,root,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1468944021;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		String zkQuorum = configuration.getString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, "")___		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					ConfigConstants.ZOOKEEPER_QUORUM_KEY + "'.")__		}__		int sessionTimeout = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_SESSION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_CONNECTION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_RETRY_WAIT,_				ConfigConstants.DEFAULT_ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_MAX_RETRY_ATTEMPTS,_				ConfigConstants.DEFAULT_ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getString(ConfigConstants.ZOOKEEPER_DIR_KEY,_				ConfigConstants.DEFAULT_ZOOKEEPER_DIR_KEY)___		String namespace = configuration.getString(ConfigConstants.ZOOKEEPER_NAMESPACE_KEY,_				ConfigConstants.DEFAULT_ZOOKEEPER_NAMESPACE_KEY)___		String rootWithNamespace = generateZookeeperPath(root, namespace)___		LOG.info("Using '{}' as zookeeper namespace.", rootWithNamespace)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(rootWithNamespace.startsWith("/") ? rootWithNamespace.substring(1) : rootWithNamespace)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,string,zk,quorum,configuration,get,string,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,config,constants,int,session,timeout,configuration,get,integer,config,constants,config,constants,int,connection,timeout,configuration,get,integer,config,constants,config,constants,int,retry,wait,configuration,get,integer,config,constants,config,constants,int,max,retry,attempts,configuration,get,integer,config,constants,config,constants,string,root,configuration,get,string,config,constants,config,constants,string,namespace,configuration,get,string,config,constants,config,constants,string,root,with,namespace,generate,zookeeper,path,root,namespace,log,info,using,as,zookeeper,namespace,root,with,namespace,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,with,namespace,starts,with,root,with,namespace,substring,1,root,with,namespace,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1469525443;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		String zkQuorum = configuration.getString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, "")___		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					ConfigConstants.ZOOKEEPER_QUORUM_KEY + "'.")__		}__		int sessionTimeout = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_SESSION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_CONNECTION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_RETRY_WAIT,_				ConfigConstants.DEFAULT_ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(_				ConfigConstants.ZOOKEEPER_MAX_RETRY_ATTEMPTS,_				ConfigConstants.DEFAULT_ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getString(ConfigConstants.ZOOKEEPER_DIR_KEY,_				ConfigConstants.DEFAULT_ZOOKEEPER_DIR_KEY)___		String namespace = configuration.getString(ConfigConstants.ZOOKEEPER_NAMESPACE_KEY,_				ConfigConstants.DEFAULT_ZOOKEEPER_NAMESPACE_KEY)___		String rootWithNamespace = generateZookeeperPath(root, namespace)___		LOG.info("Using '{}' as zookeeper namespace.", rootWithNamespace)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(rootWithNamespace.startsWith("/") ? rootWithNamespace.substring(1) : rootWithNamespace)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,string,zk,quorum,configuration,get,string,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,config,constants,int,session,timeout,configuration,get,integer,config,constants,config,constants,int,connection,timeout,configuration,get,integer,config,constants,config,constants,int,retry,wait,configuration,get,integer,config,constants,config,constants,int,max,retry,attempts,configuration,get,integer,config,constants,config,constants,string,root,configuration,get,string,config,constants,config,constants,string,namespace,configuration,get,string,config,constants,config,constants,string,root,with,namespace,generate,zookeeper,path,root,namespace,log,info,using,as,zookeeper,namespace,root,with,namespace,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,with,namespace,starts,with,root,with,namespace,substring,1,root,with,namespace,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1472033364;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		String zkQuorum = configuration.getString(ConfigConstants.HA_ZOOKEEPER_QUORUM_KEY, "")__		if (zkQuorum.isEmpty()) {_			zkQuorum = configuration.getString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, "")__		}_		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					ConfigConstants.HA_ZOOKEEPER_QUORUM_KEY + "'.")__		}__		int sessionTimeout = getConfiguredIntValue(configuration,_			ConfigConstants.HA_ZOOKEEPER_SESSION_TIMEOUT,_			ConfigConstants.ZOOKEEPER_SESSION_TIMEOUT,_			ConfigConstants.DEFAULT_ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = getConfiguredIntValue(configuration,_			ConfigConstants.HA_ZOOKEEPER_CONNECTION_TIMEOUT,_			ConfigConstants.ZOOKEEPER_CONNECTION_TIMEOUT,_			ConfigConstants.DEFAULT_ZOOKEEPER_SESSION_TIMEOUT)___		int retryWait = getConfiguredIntValue(configuration,_			ConfigConstants.HA_ZOOKEEPER_RETRY_WAIT,_			ConfigConstants.ZOOKEEPER_RETRY_WAIT,_			ConfigConstants.DEFAULT_ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = getConfiguredIntValue(configuration,_			ConfigConstants.HA_ZOOKEEPER_MAX_RETRY_ATTEMPTS,_			ConfigConstants.ZOOKEEPER_MAX_RETRY_ATTEMPTS,_			ConfigConstants.DEFAULT_ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = getConfiguredStringValue(configuration, ConfigConstants.HA_ZOOKEEPER_DIR_KEY,_			ConfigConstants.ZOOKEEPER_DIR_KEY,_			ConfigConstants.DEFAULT_ZOOKEEPER_DIR_KEY)___		String namespace = getConfiguredStringValue(configuration,_			ConfigConstants.HA_ZOOKEEPER_NAMESPACE_KEY,_			ConfigConstants.ZOOKEEPER_NAMESPACE_KEY,_			ConfigConstants.DEFAULT_ZOOKEEPER_NAMESPACE_KEY)___		String rootWithNamespace = generateZookeeperPath(root, namespace)___		LOG.info("Using '{}' as zookeeper namespace.", rootWithNamespace)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(rootWithNamespace.startsWith("/") ? rootWithNamespace.substring(1) : rootWithNamespace)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,string,zk,quorum,configuration,get,string,config,constants,if,zk,quorum,is,empty,zk,quorum,configuration,get,string,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,config,constants,int,session,timeout,get,configured,int,value,configuration,config,constants,config,constants,config,constants,int,connection,timeout,get,configured,int,value,configuration,config,constants,config,constants,config,constants,int,retry,wait,get,configured,int,value,configuration,config,constants,config,constants,config,constants,int,max,retry,attempts,get,configured,int,value,configuration,config,constants,config,constants,config,constants,string,root,get,configured,string,value,configuration,config,constants,config,constants,config,constants,string,namespace,get,configured,string,value,configuration,config,constants,config,constants,config,constants,string,root,with,namespace,generate,zookeeper,path,root,namespace,log,info,using,as,zookeeper,namespace,root,with,namespace,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,with,namespace,starts,with,root,with,namespace,substring,1,root,with,namespace,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1472033371;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		String zkQuorum = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_QUORUM_KEY,_				null,_				ConfigConstants.ZOOKEEPER_QUORUM_KEY)___		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					ConfigConstants.HA_ZOOKEEPER_QUORUM_KEY + "'.")__		}__		int sessionTimeout = ConfigurationUtil.getIntegerWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_SESSION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_SESSION_TIMEOUT,_				ConfigConstants.ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = ConfigurationUtil.getIntegerWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CONNECTION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_CONNECTION_TIMEOUT,_				ConfigConstants.ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = ConfigurationUtil.getIntegerWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_RETRY_WAIT,_				ConfigConstants.DEFAULT_ZOOKEEPER_RETRY_WAIT,_				ConfigConstants.ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = ConfigurationUtil.getIntegerWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_MAX_RETRY_ATTEMPTS,_				ConfigConstants.DEFAULT_ZOOKEEPER_MAX_RETRY_ATTEMPTS,_				ConfigConstants.ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_DIR_KEY,_				ConfigConstants.DEFAULT_ZOOKEEPER_DIR_KEY,_				ConfigConstants.ZOOKEEPER_DIR_KEY)___		String namespace = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_NAMESPACE_KEY,_				ConfigConstants.DEFAULT_ZOOKEEPER_NAMESPACE_KEY,_				ConfigConstants.ZOOKEEPER_NAMESPACE_KEY)___		String rootWithNamespace = generateZookeeperPath(root, namespace)___		LOG.info("Using '{}' as Zookeeper namespace.", rootWithNamespace)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(rootWithNamespace.startsWith("/") ? rootWithNamespace.substring(1) : rootWithNamespace)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,string,zk,quorum,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,null,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,config,constants,int,session,timeout,configuration,util,get,integer,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,int,connection,timeout,configuration,util,get,integer,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,int,retry,wait,configuration,util,get,integer,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,int,max,retry,attempts,configuration,util,get,integer,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,string,root,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,string,namespace,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,string,root,with,namespace,generate,zookeeper,path,root,namespace,log,info,using,as,zookeeper,namespace,root,with,namespace,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,with,namespace,starts,with,root,with,namespace,substring,1,root,with,namespace,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1472484430;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		String zkQuorum = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_QUORUM_KEY,_				null,_				ConfigConstants.ZOOKEEPER_QUORUM_KEY)___		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					ConfigConstants.HA_ZOOKEEPER_QUORUM_KEY + "'.")__		}__		int sessionTimeout = ConfigurationUtil.getIntegerWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_SESSION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_SESSION_TIMEOUT,_				ConfigConstants.ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = ConfigurationUtil.getIntegerWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CONNECTION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_CONNECTION_TIMEOUT,_				ConfigConstants.ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = ConfigurationUtil.getIntegerWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_RETRY_WAIT,_				ConfigConstants.DEFAULT_ZOOKEEPER_RETRY_WAIT,_				ConfigConstants.ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = ConfigurationUtil.getIntegerWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_MAX_RETRY_ATTEMPTS,_				ConfigConstants.DEFAULT_ZOOKEEPER_MAX_RETRY_ATTEMPTS,_				ConfigConstants.ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_DIR_KEY,_				ConfigConstants.DEFAULT_ZOOKEEPER_DIR_KEY,_				ConfigConstants.ZOOKEEPER_DIR_KEY)___		String namespace = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_NAMESPACE_KEY,_				ConfigConstants.DEFAULT_ZOOKEEPER_NAMESPACE_KEY,_				ConfigConstants.ZOOKEEPER_NAMESPACE_KEY)___		String rootWithNamespace = generateZookeeperPath(root, namespace)___		LOG.info("Using '{}' as Zookeeper namespace.", rootWithNamespace)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(rootWithNamespace.startsWith("/") ? rootWithNamespace.substring(1) : rootWithNamespace)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,string,zk,quorum,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,null,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,config,constants,int,session,timeout,configuration,util,get,integer,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,int,connection,timeout,configuration,util,get,integer,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,int,retry,wait,configuration,util,get,integer,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,int,max,retry,attempts,configuration,util,get,integer,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,string,root,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,string,namespace,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,string,root,with,namespace,generate,zookeeper,path,root,namespace,log,info,using,as,zookeeper,namespace,root,with,namespace,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,with,namespace,starts,with,root,with,namespace,substring,1,root,with,namespace,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1472663401;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		String zkQuorum = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_QUORUM_KEY,_				null,_				ConfigConstants.ZOOKEEPER_QUORUM_KEY)___		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					ConfigConstants.HA_ZOOKEEPER_QUORUM_KEY + "'.")__		}__		int sessionTimeout = ConfigurationUtil.getIntegerWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_SESSION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_SESSION_TIMEOUT,_				ConfigConstants.ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = ConfigurationUtil.getIntegerWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CONNECTION_TIMEOUT,_				ConfigConstants.DEFAULT_ZOOKEEPER_CONNECTION_TIMEOUT,_				ConfigConstants.ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = ConfigurationUtil.getIntegerWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_RETRY_WAIT,_				ConfigConstants.DEFAULT_ZOOKEEPER_RETRY_WAIT,_				ConfigConstants.ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = ConfigurationUtil.getIntegerWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_MAX_RETRY_ATTEMPTS,_				ConfigConstants.DEFAULT_ZOOKEEPER_MAX_RETRY_ATTEMPTS,_				ConfigConstants.ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_DIR_KEY,_				ConfigConstants.DEFAULT_ZOOKEEPER_DIR_KEY,_				ConfigConstants.ZOOKEEPER_DIR_KEY)___		String namespace = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_NAMESPACE_KEY,_				ConfigConstants.DEFAULT_ZOOKEEPER_NAMESPACE_KEY,_				ConfigConstants.ZOOKEEPER_NAMESPACE_KEY)___		String rootWithNamespace = generateZookeeperPath(root, namespace)___		LOG.info("Using '{}' as Zookeeper namespace.", rootWithNamespace)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(rootWithNamespace.startsWith("/") ? rootWithNamespace.substring(1) : rootWithNamespace)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,string,zk,quorum,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,null,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,config,constants,int,session,timeout,configuration,util,get,integer,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,int,connection,timeout,configuration,util,get,integer,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,int,retry,wait,configuration,util,get,integer,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,int,max,retry,attempts,configuration,util,get,integer,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,string,root,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,string,namespace,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,string,root,with,namespace,generate,zookeeper,path,root,namespace,log,info,using,as,zookeeper,namespace,root,with,namespace,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,with,namespace,starts,with,root,with,namespace,substring,1,root,with,namespace,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1476095826;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		String zkQuorum = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM.key() + "'.")__		}__		int sessionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_ROOT)___		String namespace = configuration.getValue(HighAvailabilityOptions.HA_CLUSTER_ID)___		String rootWithNamespace = generateZookeeperPath(root, namespace)___		LOG.info("Using '{}' as Zookeeper namespace.", rootWithNamespace)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(rootWithNamespace.startsWith("/") ? rootWithNamespace.substring(1) : rootWithNamespace)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,string,zk,quorum,configuration,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,high,availability,options,key,int,session,timeout,configuration,get,integer,high,availability,options,int,connection,timeout,configuration,get,integer,high,availability,options,int,retry,wait,configuration,get,integer,high,availability,options,int,max,retry,attempts,configuration,get,integer,high,availability,options,string,root,configuration,get,value,high,availability,options,string,namespace,configuration,get,value,high,availability,options,string,root,with,namespace,generate,zookeeper,path,root,namespace,log,info,using,as,zookeeper,namespace,root,with,namespace,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,with,namespace,starts,with,root,with,namespace,substring,1,root,with,namespace,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1476432306;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		String zkQuorum = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM.key() + "'.")__		}__		int sessionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_ROOT)___		String namespace = configuration.getValue(HighAvailabilityOptions.HA_CLUSTER_ID)___		String rootWithNamespace = generateZookeeperPath(root, namespace)___		LOG.info("Using '{}' as Zookeeper namespace.", rootWithNamespace)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(rootWithNamespace.startsWith("/") ? rootWithNamespace.substring(1) : rootWithNamespace)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,string,zk,quorum,configuration,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,high,availability,options,key,int,session,timeout,configuration,get,integer,high,availability,options,int,connection,timeout,configuration,get,integer,high,availability,options,int,retry,wait,configuration,get,integer,high,availability,options,int,max,retry,attempts,configuration,get,integer,high,availability,options,string,root,configuration,get,value,high,availability,options,string,namespace,configuration,get,value,high,availability,options,string,root,with,namespace,generate,zookeeper,path,root,namespace,log,info,using,as,zookeeper,namespace,root,with,namespace,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,with,namespace,starts,with,root,with,namespace,substring,1,root,with,namespace,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1476455790;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		String zkQuorum = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM.key() + "'.")__		}__		int sessionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_ROOT)___		String namespace = configuration.getValue(HighAvailabilityOptions.HA_CLUSTER_ID)___		boolean disableSaslClient = configuration.getBoolean(ConfigConstants.ZOOKEEPER_SASL_DISABLE,_				ConfigConstants.DEFAULT_ZOOKEEPER_SASL_DISABLE)___		ACLProvider aclProvider___		ZkClientACLMode aclMode = ZkClientACLMode.fromConfig(configuration)___		if(disableSaslClient && aclMode == ZkClientACLMode.CREATOR) {_			String errorMessage = "Cannot set ACL role to " + aclMode +"  since SASL authentication is " +_					"disabled through the " + ConfigConstants.ZOOKEEPER_SASL_DISABLE + " property"__			LOG.warn(errorMessage)__			throw new IllegalConfigurationException(errorMessage)__		}__		if(aclMode == ZkClientACLMode.CREATOR) {_			LOG.info("Enforcing creator for ZK connections")__			aclProvider = new SecureAclProvider()__		} else {_			LOG.info("Enforcing default ACL for ZK connections")__			aclProvider = new DefaultACLProvider()__		}___		String rootWithNamespace = generateZookeeperPath(root, namespace)___		LOG.info("Using '{}' as Zookeeper namespace.", rootWithNamespace)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(rootWithNamespace.startsWith("/") ? rootWithNamespace.substring(1) : rootWithNamespace)_				.aclProvider(aclProvider)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,string,zk,quorum,configuration,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,high,availability,options,key,int,session,timeout,configuration,get,integer,high,availability,options,int,connection,timeout,configuration,get,integer,high,availability,options,int,retry,wait,configuration,get,integer,high,availability,options,int,max,retry,attempts,configuration,get,integer,high,availability,options,string,root,configuration,get,value,high,availability,options,string,namespace,configuration,get,value,high,availability,options,boolean,disable,sasl,client,configuration,get,boolean,config,constants,config,constants,aclprovider,acl,provider,zk,client,aclmode,acl,mode,zk,client,aclmode,from,config,configuration,if,disable,sasl,client,acl,mode,zk,client,aclmode,creator,string,error,message,cannot,set,acl,role,to,acl,mode,since,sasl,authentication,is,disabled,through,the,config,constants,property,log,warn,error,message,throw,new,illegal,configuration,exception,error,message,if,acl,mode,zk,client,aclmode,creator,log,info,enforcing,creator,for,zk,connections,acl,provider,new,secure,acl,provider,else,log,info,enforcing,default,acl,for,zk,connections,acl,provider,new,default,aclprovider,string,root,with,namespace,generate,zookeeper,path,root,namespace,log,info,using,as,zookeeper,namespace,root,with,namespace,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,with,namespace,starts,with,root,with,namespace,substring,1,root,with,namespace,acl,provider,acl,provider,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1476985095;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		String zkQuorum = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM.key() + "'.")__		}__		int sessionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_ROOT)___		String namespace = configuration.getValue(HighAvailabilityOptions.HA_CLUSTER_ID)___		boolean disableSaslClient = configuration.getBoolean(ConfigConstants.ZOOKEEPER_SASL_DISABLE,_				ConfigConstants.DEFAULT_ZOOKEEPER_SASL_DISABLE)___		ACLProvider aclProvider___		ZkClientACLMode aclMode = ZkClientACLMode.fromConfig(configuration)___		if(disableSaslClient && aclMode == ZkClientACLMode.CREATOR) {_			String errorMessage = "Cannot set ACL role to " + aclMode +"  since SASL authentication is " +_					"disabled through the " + ConfigConstants.ZOOKEEPER_SASL_DISABLE + " property"__			LOG.warn(errorMessage)__			throw new IllegalConfigurationException(errorMessage)__		}__		if(aclMode == ZkClientACLMode.CREATOR) {_			LOG.info("Enforcing creator for ZK connections")__			aclProvider = new SecureAclProvider()__		} else {_			LOG.info("Enforcing default ACL for ZK connections")__			aclProvider = new DefaultACLProvider()__		}___		String rootWithNamespace = generateZookeeperPath(root, namespace)___		LOG.info("Using '{}' as Zookeeper namespace.", rootWithNamespace)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(rootWithNamespace.startsWith("/") ? rootWithNamespace.substring(1) : rootWithNamespace)_				.aclProvider(aclProvider)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,string,zk,quorum,configuration,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,high,availability,options,key,int,session,timeout,configuration,get,integer,high,availability,options,int,connection,timeout,configuration,get,integer,high,availability,options,int,retry,wait,configuration,get,integer,high,availability,options,int,max,retry,attempts,configuration,get,integer,high,availability,options,string,root,configuration,get,value,high,availability,options,string,namespace,configuration,get,value,high,availability,options,boolean,disable,sasl,client,configuration,get,boolean,config,constants,config,constants,aclprovider,acl,provider,zk,client,aclmode,acl,mode,zk,client,aclmode,from,config,configuration,if,disable,sasl,client,acl,mode,zk,client,aclmode,creator,string,error,message,cannot,set,acl,role,to,acl,mode,since,sasl,authentication,is,disabled,through,the,config,constants,property,log,warn,error,message,throw,new,illegal,configuration,exception,error,message,if,acl,mode,zk,client,aclmode,creator,log,info,enforcing,creator,for,zk,connections,acl,provider,new,secure,acl,provider,else,log,info,enforcing,default,acl,for,zk,connections,acl,provider,new,default,aclprovider,string,root,with,namespace,generate,zookeeper,path,root,namespace,log,info,using,as,zookeeper,namespace,root,with,namespace,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,with,namespace,starts,with,root,with,namespace,substring,1,root,with,namespace,acl,provider,acl,provider,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1479852016;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		String zkQuorum = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM.key() + "'.")__		}__		int sessionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_ROOT)___		String namespace = configuration.getValue(HighAvailabilityOptions.HA_CLUSTER_ID)___		boolean disableSaslClient = configuration.getBoolean(ConfigConstants.ZOOKEEPER_SASL_DISABLE,_				ConfigConstants.DEFAULT_ZOOKEEPER_SASL_DISABLE)___		ACLProvider aclProvider___		ZkClientACLMode aclMode = ZkClientACLMode.fromConfig(configuration)___		if(disableSaslClient && aclMode == ZkClientACLMode.CREATOR) {_			String errorMessage = "Cannot set ACL role to " + aclMode +"  since SASL authentication is " +_					"disabled through the " + ConfigConstants.ZOOKEEPER_SASL_DISABLE + " property"__			LOG.warn(errorMessage)__			throw new IllegalConfigurationException(errorMessage)__		}__		if(aclMode == ZkClientACLMode.CREATOR) {_			LOG.info("Enforcing creator for ZK connections")__			aclProvider = new SecureAclProvider()__		} else {_			LOG.info("Enforcing default ACL for ZK connections")__			aclProvider = new DefaultACLProvider()__		}___		String rootWithNamespace = generateZookeeperPath(root, namespace)___		LOG.info("Using '{}' as Zookeeper namespace.", rootWithNamespace)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(rootWithNamespace.startsWith("/") ? rootWithNamespace.substring(1) : rootWithNamespace)_				.aclProvider(aclProvider)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,string,zk,quorum,configuration,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,high,availability,options,key,int,session,timeout,configuration,get,integer,high,availability,options,int,connection,timeout,configuration,get,integer,high,availability,options,int,retry,wait,configuration,get,integer,high,availability,options,int,max,retry,attempts,configuration,get,integer,high,availability,options,string,root,configuration,get,value,high,availability,options,string,namespace,configuration,get,value,high,availability,options,boolean,disable,sasl,client,configuration,get,boolean,config,constants,config,constants,aclprovider,acl,provider,zk,client,aclmode,acl,mode,zk,client,aclmode,from,config,configuration,if,disable,sasl,client,acl,mode,zk,client,aclmode,creator,string,error,message,cannot,set,acl,role,to,acl,mode,since,sasl,authentication,is,disabled,through,the,config,constants,property,log,warn,error,message,throw,new,illegal,configuration,exception,error,message,if,acl,mode,zk,client,aclmode,creator,log,info,enforcing,creator,for,zk,connections,acl,provider,new,secure,acl,provider,else,log,info,enforcing,default,acl,for,zk,connections,acl,provider,new,default,aclprovider,string,root,with,namespace,generate,zookeeper,path,root,namespace,log,info,using,as,zookeeper,namespace,root,with,namespace,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,with,namespace,starts,with,root,with,namespace,substring,1,root,with,namespace,acl,provider,acl,provider,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1482522861;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		String zkQuorum = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM.key() + "'.")__		}__		int sessionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_ROOT)___		String namespace = configuration.getValue(HighAvailabilityOptions.HA_CLUSTER_ID)___		boolean disableSaslClient = configuration.getBoolean(ConfigConstants.ZOOKEEPER_SASL_DISABLE,_				ConfigConstants.DEFAULT_ZOOKEEPER_SASL_DISABLE)___		ACLProvider aclProvider___		ZkClientACLMode aclMode = ZkClientACLMode.fromConfig(configuration)___		if(disableSaslClient && aclMode == ZkClientACLMode.CREATOR) {_			String errorMessage = "Cannot set ACL role to " + aclMode +"  since SASL authentication is " +_					"disabled through the " + ConfigConstants.ZOOKEEPER_SASL_DISABLE + " property"__			LOG.warn(errorMessage)__			throw new IllegalConfigurationException(errorMessage)__		}__		if(aclMode == ZkClientACLMode.CREATOR) {_			LOG.info("Enforcing creator for ZK connections")__			aclProvider = new SecureAclProvider()__		} else {_			LOG.info("Enforcing default ACL for ZK connections")__			aclProvider = new DefaultACLProvider()__		}___		String rootWithNamespace = generateZookeeperPath(root, namespace)___		LOG.info("Using '{}' as Zookeeper namespace.", rootWithNamespace)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(rootWithNamespace.startsWith("/") ? rootWithNamespace.substring(1) : rootWithNamespace)_				.aclProvider(aclProvider)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,string,zk,quorum,configuration,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,high,availability,options,key,int,session,timeout,configuration,get,integer,high,availability,options,int,connection,timeout,configuration,get,integer,high,availability,options,int,retry,wait,configuration,get,integer,high,availability,options,int,max,retry,attempts,configuration,get,integer,high,availability,options,string,root,configuration,get,value,high,availability,options,string,namespace,configuration,get,value,high,availability,options,boolean,disable,sasl,client,configuration,get,boolean,config,constants,config,constants,aclprovider,acl,provider,zk,client,aclmode,acl,mode,zk,client,aclmode,from,config,configuration,if,disable,sasl,client,acl,mode,zk,client,aclmode,creator,string,error,message,cannot,set,acl,role,to,acl,mode,since,sasl,authentication,is,disabled,through,the,config,constants,property,log,warn,error,message,throw,new,illegal,configuration,exception,error,message,if,acl,mode,zk,client,aclmode,creator,log,info,enforcing,creator,for,zk,connections,acl,provider,new,secure,acl,provider,else,log,info,enforcing,default,acl,for,zk,connections,acl,provider,new,default,aclprovider,string,root,with,namespace,generate,zookeeper,path,root,namespace,log,info,using,as,zookeeper,namespace,root,with,namespace,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,with,namespace,starts,with,root,with,namespace,substring,1,root,with,namespace,acl,provider,acl,provider,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1482522864;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		String zkQuorum = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM.key() + "'.")__		}__		int sessionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_ROOT)___		String namespace = configuration.getValue(HighAvailabilityOptions.HA_CLUSTER_ID)___		boolean disableSaslClient = configuration.getBoolean(ConfigConstants.ZOOKEEPER_SASL_DISABLE,_				ConfigConstants.DEFAULT_ZOOKEEPER_SASL_DISABLE)___		ACLProvider aclProvider___		ZkClientACLMode aclMode = ZkClientACLMode.fromConfig(configuration)___		if(disableSaslClient && aclMode == ZkClientACLMode.CREATOR) {_			String errorMessage = "Cannot set ACL role to " + aclMode +"  since SASL authentication is " +_					"disabled through the " + ConfigConstants.ZOOKEEPER_SASL_DISABLE + " property"__			LOG.warn(errorMessage)__			throw new IllegalConfigurationException(errorMessage)__		}__		if(aclMode == ZkClientACLMode.CREATOR) {_			LOG.info("Enforcing creator for ZK connections")__			aclProvider = new SecureAclProvider()__		} else {_			LOG.info("Enforcing default ACL for ZK connections")__			aclProvider = new DefaultACLProvider()__		}___		String rootWithNamespace = generateZookeeperPath(root, namespace)___		LOG.info("Using '{}' as Zookeeper namespace.", rootWithNamespace)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(rootWithNamespace.startsWith("/") ? rootWithNamespace.substring(1) : rootWithNamespace)_				.aclProvider(aclProvider)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,string,zk,quorum,configuration,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,high,availability,options,key,int,session,timeout,configuration,get,integer,high,availability,options,int,connection,timeout,configuration,get,integer,high,availability,options,int,retry,wait,configuration,get,integer,high,availability,options,int,max,retry,attempts,configuration,get,integer,high,availability,options,string,root,configuration,get,value,high,availability,options,string,namespace,configuration,get,value,high,availability,options,boolean,disable,sasl,client,configuration,get,boolean,config,constants,config,constants,aclprovider,acl,provider,zk,client,aclmode,acl,mode,zk,client,aclmode,from,config,configuration,if,disable,sasl,client,acl,mode,zk,client,aclmode,creator,string,error,message,cannot,set,acl,role,to,acl,mode,since,sasl,authentication,is,disabled,through,the,config,constants,property,log,warn,error,message,throw,new,illegal,configuration,exception,error,message,if,acl,mode,zk,client,aclmode,creator,log,info,enforcing,creator,for,zk,connections,acl,provider,new,secure,acl,provider,else,log,info,enforcing,default,acl,for,zk,connections,acl,provider,new,default,aclprovider,string,root,with,namespace,generate,zookeeper,path,root,namespace,log,info,using,as,zookeeper,namespace,root,with,namespace,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,with,namespace,starts,with,root,with,namespace,substring,1,root,with,namespace,acl,provider,acl,provider,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1485163254;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		Preconditions.checkNotNull(configuration, "configuration")__		String zkQuorum = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM.key() + "'.")__		}__		int sessionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_ROOT)___		String namespace = configuration.getValue(HighAvailabilityOptions.HA_CLUSTER_ID)___		boolean disableSaslClient = configuration.getBoolean(ConfigConstants.ZOOKEEPER_SASL_DISABLE,_				ConfigConstants.DEFAULT_ZOOKEEPER_SASL_DISABLE)___		ACLProvider aclProvider___		ZkClientACLMode aclMode = ZkClientACLMode.fromConfig(configuration)___		if(disableSaslClient && aclMode == ZkClientACLMode.CREATOR) {_			String errorMessage = "Cannot set ACL role to " + aclMode +"  since SASL authentication is " +_					"disabled through the " + ConfigConstants.ZOOKEEPER_SASL_DISABLE + " property"__			LOG.warn(errorMessage)__			throw new IllegalConfigurationException(errorMessage)__		}__		if(aclMode == ZkClientACLMode.CREATOR) {_			LOG.info("Enforcing creator for ZK connections")__			aclProvider = new SecureAclProvider()__		} else {_			LOG.info("Enforcing default ACL for ZK connections")__			aclProvider = new DefaultACLProvider()__		}___		String rootWithNamespace = generateZookeeperPath(root, namespace)___		LOG.info("Using '{}' as Zookeeper namespace.", rootWithNamespace)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(rootWithNamespace.startsWith("/") ? rootWithNamespace.substring(1) : rootWithNamespace)_				.aclProvider(aclProvider)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,preconditions,check,not,null,configuration,configuration,string,zk,quorum,configuration,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,high,availability,options,key,int,session,timeout,configuration,get,integer,high,availability,options,int,connection,timeout,configuration,get,integer,high,availability,options,int,retry,wait,configuration,get,integer,high,availability,options,int,max,retry,attempts,configuration,get,integer,high,availability,options,string,root,configuration,get,value,high,availability,options,string,namespace,configuration,get,value,high,availability,options,boolean,disable,sasl,client,configuration,get,boolean,config,constants,config,constants,aclprovider,acl,provider,zk,client,aclmode,acl,mode,zk,client,aclmode,from,config,configuration,if,disable,sasl,client,acl,mode,zk,client,aclmode,creator,string,error,message,cannot,set,acl,role,to,acl,mode,since,sasl,authentication,is,disabled,through,the,config,constants,property,log,warn,error,message,throw,new,illegal,configuration,exception,error,message,if,acl,mode,zk,client,aclmode,creator,log,info,enforcing,creator,for,zk,connections,acl,provider,new,secure,acl,provider,else,log,info,enforcing,default,acl,for,zk,connections,acl,provider,new,default,aclprovider,string,root,with,namespace,generate,zookeeper,path,root,namespace,log,info,using,as,zookeeper,namespace,root,with,namespace,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,with,namespace,starts,with,root,with,namespace,substring,1,root,with,namespace,acl,provider,acl,provider,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1493975167;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		Preconditions.checkNotNull(configuration, "configuration")__		String zkQuorum = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM.key() + "'.")__		}__		int sessionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_ROOT)___		String namespace = configuration.getValue(HighAvailabilityOptions.HA_CLUSTER_ID)___		boolean disableSaslClient = configuration.getBoolean(ConfigConstants.ZOOKEEPER_SASL_DISABLE,_				ConfigConstants.DEFAULT_ZOOKEEPER_SASL_DISABLE)___		ACLProvider aclProvider___		ZkClientACLMode aclMode = ZkClientACLMode.fromConfig(configuration)___		if(disableSaslClient && aclMode == ZkClientACLMode.CREATOR) {_			String errorMessage = "Cannot set ACL role to " + aclMode +"  since SASL authentication is " +_					"disabled through the " + ConfigConstants.ZOOKEEPER_SASL_DISABLE + " property"__			LOG.warn(errorMessage)__			throw new IllegalConfigurationException(errorMessage)__		}__		if(aclMode == ZkClientACLMode.CREATOR) {_			LOG.info("Enforcing creator for ZK connections")__			aclProvider = new SecureAclProvider()__		} else {_			LOG.info("Enforcing default ACL for ZK connections")__			aclProvider = new DefaultACLProvider()__		}___		String rootWithNamespace = generateZookeeperPath(root, namespace)___		LOG.info("Using '{}' as Zookeeper namespace.", rootWithNamespace)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(rootWithNamespace.startsWith("/") ? rootWithNamespace.substring(1) : rootWithNamespace)_				.aclProvider(aclProvider)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,preconditions,check,not,null,configuration,configuration,string,zk,quorum,configuration,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,high,availability,options,key,int,session,timeout,configuration,get,integer,high,availability,options,int,connection,timeout,configuration,get,integer,high,availability,options,int,retry,wait,configuration,get,integer,high,availability,options,int,max,retry,attempts,configuration,get,integer,high,availability,options,string,root,configuration,get,value,high,availability,options,string,namespace,configuration,get,value,high,availability,options,boolean,disable,sasl,client,configuration,get,boolean,config,constants,config,constants,aclprovider,acl,provider,zk,client,aclmode,acl,mode,zk,client,aclmode,from,config,configuration,if,disable,sasl,client,acl,mode,zk,client,aclmode,creator,string,error,message,cannot,set,acl,role,to,acl,mode,since,sasl,authentication,is,disabled,through,the,config,constants,property,log,warn,error,message,throw,new,illegal,configuration,exception,error,message,if,acl,mode,zk,client,aclmode,creator,log,info,enforcing,creator,for,zk,connections,acl,provider,new,secure,acl,provider,else,log,info,enforcing,default,acl,for,zk,connections,acl,provider,new,default,aclprovider,string,root,with,namespace,generate,zookeeper,path,root,namespace,log,info,using,as,zookeeper,namespace,root,with,namespace,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,with,namespace,starts,with,root,with,namespace,substring,1,root,with,namespace,acl,provider,acl,provider,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1498896127;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		Preconditions.checkNotNull(configuration, "configuration")__		String zkQuorum = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM.key() + "'.")__		}__		int sessionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_ROOT)___		String namespace = configuration.getValue(HighAvailabilityOptions.HA_CLUSTER_ID)___		boolean disableSaslClient = configuration.getBoolean(SecurityOptions.ZOOKEEPER_SASL_DISABLE)___		ACLProvider aclProvider___		ZkClientACLMode aclMode = ZkClientACLMode.fromConfig(configuration)___		if(disableSaslClient && aclMode == ZkClientACLMode.CREATOR) {_			String errorMessage = "Cannot set ACL role to " + aclMode +"  since SASL authentication is " +_					"disabled through the " + SecurityOptions.ZOOKEEPER_SASL_DISABLE.key() + " property"__			LOG.warn(errorMessage)__			throw new IllegalConfigurationException(errorMessage)__		}__		if(aclMode == ZkClientACLMode.CREATOR) {_			LOG.info("Enforcing creator for ZK connections")__			aclProvider = new SecureAclProvider()__		} else {_			LOG.info("Enforcing default ACL for ZK connections")__			aclProvider = new DefaultACLProvider()__		}___		String rootWithNamespace = generateZookeeperPath(root, namespace)___		LOG.info("Using '{}' as Zookeeper namespace.", rootWithNamespace)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(rootWithNamespace.startsWith("/") ? rootWithNamespace.substring(1) : rootWithNamespace)_				.aclProvider(aclProvider)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,preconditions,check,not,null,configuration,configuration,string,zk,quorum,configuration,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,high,availability,options,key,int,session,timeout,configuration,get,integer,high,availability,options,int,connection,timeout,configuration,get,integer,high,availability,options,int,retry,wait,configuration,get,integer,high,availability,options,int,max,retry,attempts,configuration,get,integer,high,availability,options,string,root,configuration,get,value,high,availability,options,string,namespace,configuration,get,value,high,availability,options,boolean,disable,sasl,client,configuration,get,boolean,security,options,aclprovider,acl,provider,zk,client,aclmode,acl,mode,zk,client,aclmode,from,config,configuration,if,disable,sasl,client,acl,mode,zk,client,aclmode,creator,string,error,message,cannot,set,acl,role,to,acl,mode,since,sasl,authentication,is,disabled,through,the,security,options,key,property,log,warn,error,message,throw,new,illegal,configuration,exception,error,message,if,acl,mode,zk,client,aclmode,creator,log,info,enforcing,creator,for,zk,connections,acl,provider,new,secure,acl,provider,else,log,info,enforcing,default,acl,for,zk,connections,acl,provider,new,default,aclprovider,string,root,with,namespace,generate,zookeeper,path,root,namespace,log,info,using,as,zookeeper,namespace,root,with,namespace,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,with,namespace,starts,with,root,with,namespace,substring,1,root,with,namespace,acl,provider,acl,provider,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1516971022;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		Preconditions.checkNotNull(configuration, "configuration")__		String zkQuorum = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM.key() + "'.")__		}__		int sessionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_ROOT)___		String namespace = configuration.getValue(HighAvailabilityOptions.HA_CLUSTER_ID)___		boolean disableSaslClient = configuration.getBoolean(SecurityOptions.ZOOKEEPER_SASL_DISABLE)___		ACLProvider aclProvider___		ZkClientACLMode aclMode = ZkClientACLMode.fromConfig(configuration)___		if (disableSaslClient && aclMode == ZkClientACLMode.CREATOR) {_			String errorMessage = "Cannot set ACL role to " + aclMode + "  since SASL authentication is " +_					"disabled through the " + SecurityOptions.ZOOKEEPER_SASL_DISABLE.key() + " property"__			LOG.warn(errorMessage)__			throw new IllegalConfigurationException(errorMessage)__		}__		if (aclMode == ZkClientACLMode.CREATOR) {_			LOG.info("Enforcing creator for ZK connections")__			aclProvider = new SecureAclProvider()__		} else {_			LOG.info("Enforcing default ACL for ZK connections")__			aclProvider = new DefaultACLProvider()__		}__		String rootWithNamespace = generateZookeeperPath(root, namespace)___		LOG.info("Using '{}' as Zookeeper namespace.", rootWithNamespace)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(rootWithNamespace.startsWith("/") ? rootWithNamespace.substring(1) : rootWithNamespace)_				.aclProvider(aclProvider)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,preconditions,check,not,null,configuration,configuration,string,zk,quorum,configuration,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,high,availability,options,key,int,session,timeout,configuration,get,integer,high,availability,options,int,connection,timeout,configuration,get,integer,high,availability,options,int,retry,wait,configuration,get,integer,high,availability,options,int,max,retry,attempts,configuration,get,integer,high,availability,options,string,root,configuration,get,value,high,availability,options,string,namespace,configuration,get,value,high,availability,options,boolean,disable,sasl,client,configuration,get,boolean,security,options,aclprovider,acl,provider,zk,client,aclmode,acl,mode,zk,client,aclmode,from,config,configuration,if,disable,sasl,client,acl,mode,zk,client,aclmode,creator,string,error,message,cannot,set,acl,role,to,acl,mode,since,sasl,authentication,is,disabled,through,the,security,options,key,property,log,warn,error,message,throw,new,illegal,configuration,exception,error,message,if,acl,mode,zk,client,aclmode,creator,log,info,enforcing,creator,for,zk,connections,acl,provider,new,secure,acl,provider,else,log,info,enforcing,default,acl,for,zk,connections,acl,provider,new,default,aclprovider,string,root,with,namespace,generate,zookeeper,path,root,namespace,log,info,using,as,zookeeper,namespace,root,with,namespace,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,with,namespace,starts,with,root,with,namespace,substring,1,root,with,namespace,acl,provider,acl,provider,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1536763178;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		Preconditions.checkNotNull(configuration, "configuration")__		String zkQuorum = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM.key() + "'.")__		}__		int sessionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_ROOT)___		String namespace = configuration.getValue(HighAvailabilityOptions.HA_CLUSTER_ID)___		boolean disableSaslClient = configuration.getBoolean(SecurityOptions.ZOOKEEPER_SASL_DISABLE)___		ACLProvider aclProvider___		ZkClientACLMode aclMode = ZkClientACLMode.fromConfig(configuration)___		if (disableSaslClient && aclMode == ZkClientACLMode.CREATOR) {_			String errorMessage = "Cannot set ACL role to " + aclMode + "  since SASL authentication is " +_					"disabled through the " + SecurityOptions.ZOOKEEPER_SASL_DISABLE.key() + " property"__			LOG.warn(errorMessage)__			throw new IllegalConfigurationException(errorMessage)__		}__		if (aclMode == ZkClientACLMode.CREATOR) {_			LOG.info("Enforcing creator for ZK connections")__			aclProvider = new SecureAclProvider()__		} else {_			LOG.info("Enforcing default ACL for ZK connections")__			aclProvider = new DefaultACLProvider()__		}__		String rootWithNamespace = generateZookeeperPath(root, namespace)___		LOG.info("Using '{}' as Zookeeper namespace.", rootWithNamespace)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(rootWithNamespace.startsWith("/") ? rootWithNamespace.substring(1) : rootWithNamespace)_				.aclProvider(aclProvider)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,preconditions,check,not,null,configuration,configuration,string,zk,quorum,configuration,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,high,availability,options,key,int,session,timeout,configuration,get,integer,high,availability,options,int,connection,timeout,configuration,get,integer,high,availability,options,int,retry,wait,configuration,get,integer,high,availability,options,int,max,retry,attempts,configuration,get,integer,high,availability,options,string,root,configuration,get,value,high,availability,options,string,namespace,configuration,get,value,high,availability,options,boolean,disable,sasl,client,configuration,get,boolean,security,options,aclprovider,acl,provider,zk,client,aclmode,acl,mode,zk,client,aclmode,from,config,configuration,if,disable,sasl,client,acl,mode,zk,client,aclmode,creator,string,error,message,cannot,set,acl,role,to,acl,mode,since,sasl,authentication,is,disabled,through,the,security,options,key,property,log,warn,error,message,throw,new,illegal,configuration,exception,error,message,if,acl,mode,zk,client,aclmode,creator,log,info,enforcing,creator,for,zk,connections,acl,provider,new,secure,acl,provider,else,log,info,enforcing,default,acl,for,zk,connections,acl,provider,new,default,aclprovider,string,root,with,namespace,generate,zookeeper,path,root,namespace,log,info,using,as,zookeeper,namespace,root,with,namespace,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,with,namespace,starts,with,root,with,namespace,substring,1,root,with,namespace,acl,provider,acl,provider,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1536763193;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		Preconditions.checkNotNull(configuration, "configuration")__		String zkQuorum = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM.key() + "'.")__		}__		int sessionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_ROOT)___		String namespace = configuration.getValue(HighAvailabilityOptions.HA_CLUSTER_ID)___		boolean disableSaslClient = configuration.getBoolean(SecurityOptions.ZOOKEEPER_SASL_DISABLE)___		ACLProvider aclProvider___		ZkClientACLMode aclMode = ZkClientACLMode.fromConfig(configuration)___		if (disableSaslClient && aclMode == ZkClientACLMode.CREATOR) {_			String errorMessage = "Cannot set ACL role to " + aclMode + "  since SASL authentication is " +_					"disabled through the " + SecurityOptions.ZOOKEEPER_SASL_DISABLE.key() + " property"__			LOG.warn(errorMessage)__			throw new IllegalConfigurationException(errorMessage)__		}__		if (aclMode == ZkClientACLMode.CREATOR) {_			LOG.info("Enforcing creator for ZK connections")__			aclProvider = new SecureAclProvider()__		} else {_			LOG.info("Enforcing default ACL for ZK connections")__			aclProvider = new DefaultACLProvider()__		}__		String rootWithNamespace = generateZookeeperPath(root, namespace)___		LOG.info("Using '{}' as Zookeeper namespace.", rootWithNamespace)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(rootWithNamespace.startsWith("/") ? rootWithNamespace.substring(1) : rootWithNamespace)_				.aclProvider(aclProvider)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,preconditions,check,not,null,configuration,configuration,string,zk,quorum,configuration,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,high,availability,options,key,int,session,timeout,configuration,get,integer,high,availability,options,int,connection,timeout,configuration,get,integer,high,availability,options,int,retry,wait,configuration,get,integer,high,availability,options,int,max,retry,attempts,configuration,get,integer,high,availability,options,string,root,configuration,get,value,high,availability,options,string,namespace,configuration,get,value,high,availability,options,boolean,disable,sasl,client,configuration,get,boolean,security,options,aclprovider,acl,provider,zk,client,aclmode,acl,mode,zk,client,aclmode,from,config,configuration,if,disable,sasl,client,acl,mode,zk,client,aclmode,creator,string,error,message,cannot,set,acl,role,to,acl,mode,since,sasl,authentication,is,disabled,through,the,security,options,key,property,log,warn,error,message,throw,new,illegal,configuration,exception,error,message,if,acl,mode,zk,client,aclmode,creator,log,info,enforcing,creator,for,zk,connections,acl,provider,new,secure,acl,provider,else,log,info,enforcing,default,acl,for,zk,connections,acl,provider,new,default,aclprovider,string,root,with,namespace,generate,zookeeper,path,root,namespace,log,info,using,as,zookeeper,namespace,root,with,namespace,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,with,namespace,starts,with,root,with,namespace,substring,1,root,with,namespace,acl,provider,acl,provider,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1547028640;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		Preconditions.checkNotNull(configuration, "configuration")__		String zkQuorum = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM.key() + "'.")__		}__		int sessionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_ROOT)___		String namespace = configuration.getValue(HighAvailabilityOptions.HA_CLUSTER_ID)___		boolean disableSaslClient = configuration.getBoolean(SecurityOptions.ZOOKEEPER_SASL_DISABLE)___		ACLProvider aclProvider___		ZkClientACLMode aclMode = ZkClientACLMode.fromConfig(configuration)___		if (disableSaslClient && aclMode == ZkClientACLMode.CREATOR) {_			String errorMessage = "Cannot set ACL role to " + aclMode + "  since SASL authentication is " +_					"disabled through the " + SecurityOptions.ZOOKEEPER_SASL_DISABLE.key() + " property"__			LOG.warn(errorMessage)__			throw new IllegalConfigurationException(errorMessage)__		}__		if (aclMode == ZkClientACLMode.CREATOR) {_			LOG.info("Enforcing creator for ZK connections")__			aclProvider = new SecureAclProvider()__		} else {_			LOG.info("Enforcing default ACL for ZK connections")__			aclProvider = new DefaultACLProvider()__		}__		String rootWithNamespace = generateZookeeperPath(root, namespace)___		LOG.info("Using '{}' as Zookeeper namespace.", rootWithNamespace)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(rootWithNamespace.startsWith("/") ? rootWithNamespace.substring(1) : rootWithNamespace)_				.aclProvider(aclProvider)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,preconditions,check,not,null,configuration,configuration,string,zk,quorum,configuration,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,high,availability,options,key,int,session,timeout,configuration,get,integer,high,availability,options,int,connection,timeout,configuration,get,integer,high,availability,options,int,retry,wait,configuration,get,integer,high,availability,options,int,max,retry,attempts,configuration,get,integer,high,availability,options,string,root,configuration,get,value,high,availability,options,string,namespace,configuration,get,value,high,availability,options,boolean,disable,sasl,client,configuration,get,boolean,security,options,aclprovider,acl,provider,zk,client,aclmode,acl,mode,zk,client,aclmode,from,config,configuration,if,disable,sasl,client,acl,mode,zk,client,aclmode,creator,string,error,message,cannot,set,acl,role,to,acl,mode,since,sasl,authentication,is,disabled,through,the,security,options,key,property,log,warn,error,message,throw,new,illegal,configuration,exception,error,message,if,acl,mode,zk,client,aclmode,creator,log,info,enforcing,creator,for,zk,connections,acl,provider,new,secure,acl,provider,else,log,info,enforcing,default,acl,for,zk,connections,acl,provider,new,default,aclprovider,string,root,with,namespace,generate,zookeeper,path,root,namespace,log,info,using,as,zookeeper,namespace,root,with,namespace,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,with,namespace,starts,with,root,with,namespace,substring,1,root,with,namespace,acl,provider,acl,provider,build,cf,start,return,cf
ZooKeeperUtils -> public static CuratorFramework startCuratorFramework(Configuration configuration);1547547304;Starts a {@link CuratorFramework} instance and connects it to the given ZooKeeper_quorum.__@param configuration {@link Configuration} object containing the configuration values_@return {@link CuratorFramework} instance;public static CuratorFramework startCuratorFramework(Configuration configuration) {_		Preconditions.checkNotNull(configuration, "configuration")__		String zkQuorum = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new RuntimeException("No valid ZooKeeper quorum has been specified. " +_					"You can specify the quorum via the configuration key '" +_					HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM.key() + "'.")__		}__		int sessionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_SESSION_TIMEOUT)___		int connectionTimeout = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_CONNECTION_TIMEOUT)___		int retryWait = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_RETRY_WAIT)___		int maxRetryAttempts = configuration.getInteger(HighAvailabilityOptions.ZOOKEEPER_MAX_RETRY_ATTEMPTS)___		String root = configuration.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_ROOT)___		String namespace = configuration.getValue(HighAvailabilityOptions.HA_CLUSTER_ID)___		boolean disableSaslClient = configuration.getBoolean(SecurityOptions.ZOOKEEPER_SASL_DISABLE)___		ACLProvider aclProvider___		ZkClientACLMode aclMode = ZkClientACLMode.fromConfig(configuration)___		if (disableSaslClient && aclMode == ZkClientACLMode.CREATOR) {_			String errorMessage = "Cannot set ACL role to " + aclMode + "  since SASL authentication is " +_					"disabled through the " + SecurityOptions.ZOOKEEPER_SASL_DISABLE.key() + " property"__			LOG.warn(errorMessage)__			throw new IllegalConfigurationException(errorMessage)__		}__		if (aclMode == ZkClientACLMode.CREATOR) {_			LOG.info("Enforcing creator for ZK connections")__			aclProvider = new SecureAclProvider()__		} else {_			LOG.info("Enforcing default ACL for ZK connections")__			aclProvider = new DefaultACLProvider()__		}__		String rootWithNamespace = generateZookeeperPath(root, namespace)___		LOG.info("Using '{}' as Zookeeper namespace.", rootWithNamespace)___		CuratorFramework cf = CuratorFrameworkFactory.builder()_				.connectString(zkQuorum)_				.sessionTimeoutMs(sessionTimeout)_				.connectionTimeoutMs(connectionTimeout)_				.retryPolicy(new ExponentialBackoffRetry(retryWait, maxRetryAttempts))_				_				_				.namespace(rootWithNamespace.startsWith("/") ? rootWithNamespace.substring(1) : rootWithNamespace)_				.aclProvider(aclProvider)_				.build()___		cf.start()___		return cf__	};starts,a,link,curator,framework,instance,and,connects,it,to,the,given,zoo,keeper,quorum,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,curator,framework,instance;public,static,curator,framework,start,curator,framework,configuration,configuration,preconditions,check,not,null,configuration,configuration,string,zk,quorum,configuration,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,runtime,exception,no,valid,zoo,keeper,quorum,has,been,specified,you,can,specify,the,quorum,via,the,configuration,key,high,availability,options,key,int,session,timeout,configuration,get,integer,high,availability,options,int,connection,timeout,configuration,get,integer,high,availability,options,int,retry,wait,configuration,get,integer,high,availability,options,int,max,retry,attempts,configuration,get,integer,high,availability,options,string,root,configuration,get,value,high,availability,options,string,namespace,configuration,get,value,high,availability,options,boolean,disable,sasl,client,configuration,get,boolean,security,options,aclprovider,acl,provider,zk,client,aclmode,acl,mode,zk,client,aclmode,from,config,configuration,if,disable,sasl,client,acl,mode,zk,client,aclmode,creator,string,error,message,cannot,set,acl,role,to,acl,mode,since,sasl,authentication,is,disabled,through,the,security,options,key,property,log,warn,error,message,throw,new,illegal,configuration,exception,error,message,if,acl,mode,zk,client,aclmode,creator,log,info,enforcing,creator,for,zk,connections,acl,provider,new,secure,acl,provider,else,log,info,enforcing,default,acl,for,zk,connections,acl,provider,new,default,aclprovider,string,root,with,namespace,generate,zookeeper,path,root,namespace,log,info,using,as,zookeeper,namespace,root,with,namespace,curator,framework,cf,curator,framework,factory,builder,connect,string,zk,quorum,session,timeout,ms,session,timeout,connection,timeout,ms,connection,timeout,retry,policy,new,exponential,backoff,retry,retry,wait,max,retry,attempts,namespace,root,with,namespace,starts,with,root,with,namespace,substring,1,root,with,namespace,acl,provider,acl,provider,build,cf,start,return,cf
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			Executor executor) throws Exception;1479852016;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param executor to run ZooKeeper callbacks_@return {@link ZooKeeperCompletedCheckpointStore} instance_@throws Exception if the completed checkpoint store cannot be created;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			Executor executor) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINTS_PATH)___		RetrievableStateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_			maxNumberOfCheckpointsToRetain,_			client,_			checkpointsPath,_			stateStorage,_			executor)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,executor,to,run,zoo,keeper,callbacks,return,link,zoo,keeper,completed,checkpoint,store,instance,throws,exception,if,the,completed,checkpoint,store,cannot,be,created;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,executor,executor,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,retrievable,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,client,checkpoints,path,state,storage,executor
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			Executor executor) throws Exception;1482522861;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param executor to run ZooKeeper callbacks_@return {@link ZooKeeperCompletedCheckpointStore} instance_@throws Exception if the completed checkpoint store cannot be created;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			Executor executor) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINTS_PATH)___		RetrievableStateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_			maxNumberOfCheckpointsToRetain,_			client,_			checkpointsPath,_			stateStorage,_			executor)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,executor,to,run,zoo,keeper,callbacks,return,link,zoo,keeper,completed,checkpoint,store,instance,throws,exception,if,the,completed,checkpoint,store,cannot,be,created;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,executor,executor,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,retrievable,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,client,checkpoints,path,state,storage,executor
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			Executor executor) throws Exception;1482522864;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param executor to run ZooKeeper callbacks_@return {@link ZooKeeperCompletedCheckpointStore} instance_@throws Exception if the completed checkpoint store cannot be created;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			Executor executor) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINTS_PATH)___		RetrievableStateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_			maxNumberOfCheckpointsToRetain,_			client,_			checkpointsPath,_			stateStorage,_			executor)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,executor,to,run,zoo,keeper,callbacks,return,link,zoo,keeper,completed,checkpoint,store,instance,throws,exception,if,the,completed,checkpoint,store,cannot,be,created;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,executor,executor,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,retrievable,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,client,checkpoints,path,state,storage,executor
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			Executor executor) throws Exception;1485163254;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param executor to run ZooKeeper callbacks_@return {@link ZooKeeperCompletedCheckpointStore} instance_@throws Exception if the completed checkpoint store cannot be created;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			Executor executor) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINTS_PATH)___		RetrievableStateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_			maxNumberOfCheckpointsToRetain,_			client,_			checkpointsPath,_			stateStorage,_			executor)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,executor,to,run,zoo,keeper,callbacks,return,link,zoo,keeper,completed,checkpoint,store,instance,throws,exception,if,the,completed,checkpoint,store,cannot,be,created;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,executor,executor,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,retrievable,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,client,checkpoints,path,state,storage,executor
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			Executor executor) throws Exception;1493975167;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param executor to run ZooKeeper callbacks_@return {@link ZooKeeperCompletedCheckpointStore} instance_@throws Exception if the completed checkpoint store cannot be created;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			Executor executor) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINTS_PATH)___		RetrievableStateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_			maxNumberOfCheckpointsToRetain,_			client,_			checkpointsPath,_			stateStorage,_			executor)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,executor,to,run,zoo,keeper,callbacks,return,link,zoo,keeper,completed,checkpoint,store,instance,throws,exception,if,the,completed,checkpoint,store,cannot,be,created;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,executor,executor,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,retrievable,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,client,checkpoints,path,state,storage,executor
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			Executor executor) throws Exception;1498896127;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param executor to run ZooKeeper callbacks_@return {@link ZooKeeperCompletedCheckpointStore} instance_@throws Exception if the completed checkpoint store cannot be created;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			Executor executor) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_CHECKPOINTS_PATH)___		RetrievableStateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_			maxNumberOfCheckpointsToRetain,_			client,_			checkpointsPath,_			stateStorage,_			executor)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,executor,to,run,zoo,keeper,callbacks,return,link,zoo,keeper,completed,checkpoint,store,instance,throws,exception,if,the,completed,checkpoint,store,cannot,be,created;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,executor,executor,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,get,string,high,availability,options,retrievable,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,client,checkpoints,path,state,storage,executor
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			Executor executor) throws Exception;1516971022;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param executor to run ZooKeeper callbacks_@return {@link ZooKeeperCompletedCheckpointStore} instance_@throws Exception if the completed checkpoint store cannot be created;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			Executor executor) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_CHECKPOINTS_PATH)___		RetrievableStateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_			maxNumberOfCheckpointsToRetain,_			client,_			checkpointsPath,_			stateStorage,_			executor)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,executor,to,run,zoo,keeper,callbacks,return,link,zoo,keeper,completed,checkpoint,store,instance,throws,exception,if,the,completed,checkpoint,store,cannot,be,created;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,executor,executor,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,get,string,high,availability,options,retrievable,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,client,checkpoints,path,state,storage,executor
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			Executor executor) throws Exception;1536763178;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param executor to run ZooKeeper callbacks_@return {@link ZooKeeperCompletedCheckpointStore} instance_@throws Exception if the completed checkpoint store cannot be created;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			Executor executor) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_CHECKPOINTS_PATH)___		RetrievableStateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_			maxNumberOfCheckpointsToRetain,_			client,_			checkpointsPath,_			stateStorage,_			executor)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,executor,to,run,zoo,keeper,callbacks,return,link,zoo,keeper,completed,checkpoint,store,instance,throws,exception,if,the,completed,checkpoint,store,cannot,be,created;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,executor,executor,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,get,string,high,availability,options,retrievable,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,client,checkpoints,path,state,storage,executor
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			Executor executor) throws Exception;1536763193;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param executor to run ZooKeeper callbacks_@return {@link ZooKeeperCompletedCheckpointStore} instance_@throws Exception if the completed checkpoint store cannot be created;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			Executor executor) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_CHECKPOINTS_PATH)___		RetrievableStateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_			maxNumberOfCheckpointsToRetain,_			client,_			checkpointsPath,_			stateStorage,_			executor)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,executor,to,run,zoo,keeper,callbacks,return,link,zoo,keeper,completed,checkpoint,store,instance,throws,exception,if,the,completed,checkpoint,store,cannot,be,created;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,executor,executor,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,get,string,high,availability,options,retrievable,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,client,checkpoints,path,state,storage,executor
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			Executor executor) throws Exception;1547028640;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param executor to run ZooKeeper callbacks_@return {@link ZooKeeperCompletedCheckpointStore} instance_@throws Exception if the completed checkpoint store cannot be created;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			Executor executor) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_CHECKPOINTS_PATH)___		RetrievableStateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_			maxNumberOfCheckpointsToRetain,_			client,_			checkpointsPath,_			stateStorage,_			executor)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,executor,to,run,zoo,keeper,callbacks,return,link,zoo,keeper,completed,checkpoint,store,instance,throws,exception,if,the,completed,checkpoint,store,cannot,be,created;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,executor,executor,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,get,string,high,availability,options,retrievable,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,client,checkpoints,path,state,storage,executor
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain, 			Executor executor) throws Exception;1547547304;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@param executor to run ZooKeeper callbacks_@return {@link ZooKeeperCompletedCheckpointStore} instance_@throws Exception if the completed checkpoint store cannot be created;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain,_			Executor executor) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_CHECKPOINTS_PATH)___		RetrievableStateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		final ZooKeeperCompletedCheckpointStore zooKeeperCompletedCheckpointStore = new ZooKeeperCompletedCheckpointStore(_			maxNumberOfCheckpointsToRetain,_			createZooKeeperStateHandleStore(client, checkpointsPath, stateStorage),_			executor)___		LOG.info("Initialized {} in '{}'.", ZooKeeperCompletedCheckpointStore.class.getSimpleName(), checkpointsPath)__		return zooKeeperCompletedCheckpointStore__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,param,executor,to,run,zoo,keeper,callbacks,return,link,zoo,keeper,completed,checkpoint,store,instance,throws,exception,if,the,completed,checkpoint,store,cannot,be,created;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,executor,executor,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,get,string,high,availability,options,retrievable,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,final,zoo,keeper,completed,checkpoint,store,zoo,keeper,completed,checkpoint,store,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,create,zoo,keeper,state,handle,store,client,checkpoints,path,state,storage,executor,log,info,initialized,in,zoo,keeper,completed,checkpoint,store,class,get,simple,name,checkpoints,path,return,zoo,keeper,completed,checkpoint,store
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 		final CuratorFramework client, 		final Configuration configuration, 		final String pathSuffix);1482522864;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@param pathSuffix    The path suffix which we want to append_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_		final CuratorFramework client,_		final Configuration configuration,_		final String pathSuffix)_	{_		final String latchPath = ConfigurationUtil.getStringWithDeprecatedKeys(_			configuration,_			ConfigConstants.HA_ZOOKEEPER_LATCH_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_LATCH_PATH,_			ConfigConstants.ZOOKEEPER_LATCH_PATH) + pathSuffix__		final String leaderPath = ConfigurationUtil.getStringWithDeprecatedKeys(_			configuration,_			ConfigConstants.HA_ZOOKEEPER_LEADER_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH,_			ConfigConstants.ZOOKEEPER_LEADER_PATH) + pathSuffix___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,param,path,suffix,the,path,suffix,which,we,want,to,append,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,final,curator,framework,client,final,configuration,configuration,final,string,path,suffix,final,string,latch,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,path,suffix,final,string,leader,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,path,suffix,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 		final CuratorFramework client, 		final Configuration configuration, 		final String pathSuffix);1485163254;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@param pathSuffix    The path suffix which we want to append_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_		final CuratorFramework client,_		final Configuration configuration,_		final String pathSuffix)_	{_		final String latchPath = ConfigurationUtil.getStringWithDeprecatedKeys(_			configuration,_			ConfigConstants.HA_ZOOKEEPER_LATCH_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_LATCH_PATH,_			ConfigConstants.ZOOKEEPER_LATCH_PATH) + pathSuffix__		final String leaderPath = ConfigurationUtil.getStringWithDeprecatedKeys(_			configuration,_			ConfigConstants.HA_ZOOKEEPER_LEADER_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH,_			ConfigConstants.ZOOKEEPER_LEADER_PATH) + pathSuffix___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,param,path,suffix,the,path,suffix,which,we,want,to,append,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,final,curator,framework,client,final,configuration,configuration,final,string,path,suffix,final,string,latch,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,path,suffix,final,string,leader,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,path,suffix,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 		final CuratorFramework client, 		final Configuration configuration, 		final String pathSuffix);1493975167;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@param pathSuffix    The path suffix which we want to append_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_		final CuratorFramework client,_		final Configuration configuration,_		final String pathSuffix)_	{_		final String latchPath = ConfigurationUtil.getStringWithDeprecatedKeys(_			configuration,_			ConfigConstants.HA_ZOOKEEPER_LATCH_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_LATCH_PATH,_			ConfigConstants.ZOOKEEPER_LATCH_PATH) + pathSuffix__		final String leaderPath = ConfigurationUtil.getStringWithDeprecatedKeys(_			configuration,_			ConfigConstants.HA_ZOOKEEPER_LEADER_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH,_			ConfigConstants.ZOOKEEPER_LEADER_PATH) + pathSuffix___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,param,path,suffix,the,path,suffix,which,we,want,to,append,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,final,curator,framework,client,final,configuration,configuration,final,string,path,suffix,final,string,latch,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,path,suffix,final,string,leader,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,path,suffix,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 		final CuratorFramework client, 		final Configuration configuration, 		final String pathSuffix);1498896127;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@param pathSuffix    The path suffix which we want to append_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_		final CuratorFramework client,_		final Configuration configuration,_		final String pathSuffix)_	{_		final String latchPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_LATCH_PATH) + pathSuffix__		final String leaderPath = configuration.getString(_			HighAvailabilityOptions.HA_ZOOKEEPER_LEADER_PATH) + pathSuffix___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,param,path,suffix,the,path,suffix,which,we,want,to,append,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,final,curator,framework,client,final,configuration,configuration,final,string,path,suffix,final,string,latch,path,configuration,get,string,high,availability,options,path,suffix,final,string,leader,path,configuration,get,string,high,availability,options,path,suffix,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1445293011;Returns whether {@link RecoveryMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return RecoveryMode.fromConfig(flinkConf).equals(RecoveryMode.ZOOKEEPER)__	};returns,whether,link,recovery,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,recovery,mode,from,config,flink,conf,equals,recovery,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1445327854;Returns whether {@link RecoveryMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return RecoveryMode.fromConfig(flinkConf).equals(RecoveryMode.ZOOKEEPER)__	};returns,whether,link,recovery,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,recovery,mode,from,config,flink,conf,equals,recovery,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1445598182;Returns whether {@link RecoveryMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return RecoveryMode.fromConfig(flinkConf).equals(RecoveryMode.ZOOKEEPER)__	};returns,whether,link,recovery,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,recovery,mode,from,config,flink,conf,equals,recovery,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1456841351;Returns whether {@link RecoveryMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return RecoveryMode.fromConfig(flinkConf).equals(RecoveryMode.ZOOKEEPER)__	};returns,whether,link,recovery,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,recovery,mode,from,config,flink,conf,equals,recovery,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1465991918;Returns whether {@link RecoveryMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return RecoveryMode.fromConfig(flinkConf).equals(RecoveryMode.ZOOKEEPER)__	};returns,whether,link,recovery,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,recovery,mode,from,config,flink,conf,equals,recovery,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1468944021;Returns whether {@link RecoveryMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return RecoveryMode.fromConfig(flinkConf).equals(RecoveryMode.ZOOKEEPER)__	};returns,whether,link,recovery,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,recovery,mode,from,config,flink,conf,equals,recovery,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1469525443;Returns whether {@link RecoveryMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return RecoveryMode.fromConfig(flinkConf).equals(RecoveryMode.ZOOKEEPER)__	};returns,whether,link,recovery,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,recovery,mode,from,config,flink,conf,equals,recovery,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1472033364;Returns whether {@link HighAvailabilityMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return HighAvailabilityMode.fromConfig(flinkConf).equals(HighAvailabilityMode.ZOOKEEPER)__	};returns,whether,link,high,availability,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,high,availability,mode,from,config,flink,conf,equals,high,availability,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1472033371;Returns whether {@link HighAvailabilityMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return HighAvailabilityMode.fromConfig(flinkConf).equals(HighAvailabilityMode.ZOOKEEPER)__	};returns,whether,link,high,availability,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,high,availability,mode,from,config,flink,conf,equals,high,availability,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1472484430;Returns whether {@link HighAvailabilityMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return HighAvailabilityMode.fromConfig(flinkConf).equals(HighAvailabilityMode.ZOOKEEPER)__	};returns,whether,link,high,availability,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,high,availability,mode,from,config,flink,conf,equals,high,availability,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1472663401;Returns whether {@link HighAvailabilityMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return HighAvailabilityMode.fromConfig(flinkConf).equals(HighAvailabilityMode.ZOOKEEPER)__	};returns,whether,link,high,availability,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,high,availability,mode,from,config,flink,conf,equals,high,availability,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1476095826;Returns whether {@link HighAvailabilityMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return HighAvailabilityMode.fromConfig(flinkConf).equals(HighAvailabilityMode.ZOOKEEPER)__	};returns,whether,link,high,availability,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,high,availability,mode,from,config,flink,conf,equals,high,availability,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1476432306;Returns whether {@link HighAvailabilityMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return HighAvailabilityMode.fromConfig(flinkConf).equals(HighAvailabilityMode.ZOOKEEPER)__	};returns,whether,link,high,availability,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,high,availability,mode,from,config,flink,conf,equals,high,availability,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1476455790;Returns whether {@link HighAvailabilityMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return HighAvailabilityMode.fromConfig(flinkConf).equals(HighAvailabilityMode.ZOOKEEPER)__	};returns,whether,link,high,availability,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,high,availability,mode,from,config,flink,conf,equals,high,availability,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1476985095;Returns whether {@link HighAvailabilityMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return HighAvailabilityMode.fromConfig(flinkConf).equals(HighAvailabilityMode.ZOOKEEPER)__	};returns,whether,link,high,availability,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,high,availability,mode,from,config,flink,conf,equals,high,availability,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1479852016;Returns whether {@link HighAvailabilityMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return HighAvailabilityMode.fromConfig(flinkConf).equals(HighAvailabilityMode.ZOOKEEPER)__	};returns,whether,link,high,availability,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,high,availability,mode,from,config,flink,conf,equals,high,availability,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1482522861;Returns whether {@link HighAvailabilityMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return HighAvailabilityMode.fromConfig(flinkConf).equals(HighAvailabilityMode.ZOOKEEPER)__	};returns,whether,link,high,availability,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,high,availability,mode,from,config,flink,conf,equals,high,availability,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1482522864;Returns whether {@link HighAvailabilityMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return HighAvailabilityMode.fromConfig(flinkConf).equals(HighAvailabilityMode.ZOOKEEPER)__	};returns,whether,link,high,availability,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,high,availability,mode,from,config,flink,conf,equals,high,availability,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1485163254;Returns whether {@link HighAvailabilityMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return HighAvailabilityMode.fromConfig(flinkConf).equals(HighAvailabilityMode.ZOOKEEPER)__	};returns,whether,link,high,availability,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,high,availability,mode,from,config,flink,conf,equals,high,availability,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1493975167;Returns whether {@link HighAvailabilityMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return HighAvailabilityMode.fromConfig(flinkConf).equals(HighAvailabilityMode.ZOOKEEPER)__	};returns,whether,link,high,availability,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,high,availability,mode,from,config,flink,conf,equals,high,availability,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1498896127;Returns whether {@link HighAvailabilityMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return HighAvailabilityMode.fromConfig(flinkConf).equals(HighAvailabilityMode.ZOOKEEPER)__	};returns,whether,link,high,availability,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,high,availability,mode,from,config,flink,conf,equals,high,availability,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1516971022;Returns whether {@link HighAvailabilityMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return HighAvailabilityMode.fromConfig(flinkConf).equals(HighAvailabilityMode.ZOOKEEPER)__	};returns,whether,link,high,availability,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,high,availability,mode,from,config,flink,conf,equals,high,availability,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1536763178;Returns whether {@link HighAvailabilityMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return HighAvailabilityMode.fromConfig(flinkConf).equals(HighAvailabilityMode.ZOOKEEPER)__	};returns,whether,link,high,availability,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,high,availability,mode,from,config,flink,conf,equals,high,availability,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1536763193;Returns whether {@link HighAvailabilityMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return HighAvailabilityMode.fromConfig(flinkConf).equals(HighAvailabilityMode.ZOOKEEPER)__	};returns,whether,link,high,availability,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,high,availability,mode,from,config,flink,conf,equals,high,availability,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1547028640;Returns whether {@link HighAvailabilityMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return HighAvailabilityMode.fromConfig(flinkConf).equals(HighAvailabilityMode.ZOOKEEPER)__	};returns,whether,link,high,availability,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,high,availability,mode,from,config,flink,conf,equals,high,availability,mode,zookeeper
ZooKeeperUtils -> public static boolean isZooKeeperRecoveryMode(Configuration flinkConf);1547547304;Returns whether {@link HighAvailabilityMode#ZOOKEEPER} is configured.;public static boolean isZooKeeperRecoveryMode(Configuration flinkConf) {_		return HighAvailabilityMode.fromConfig(flinkConf).equals(HighAvailabilityMode.ZOOKEEPER)__	};returns,whether,link,high,availability,mode,zookeeper,is,configured;public,static,boolean,is,zoo,keeper,recovery,mode,configuration,flink,conf,return,high,availability,mode,from,config,flink,conf,equals,high,availability,mode,zookeeper
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain) throws Exception;1476432306;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@return {@link ZooKeeperCompletedCheckpointStore} instance;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINTS_PATH)___		RetrievableStateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_				maxNumberOfCheckpointsToRetain,_				client,_				checkpointsPath,_				stateStorage)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,return,link,zoo,keeper,completed,checkpoint,store,instance;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,retrievable,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,client,checkpoints,path,state,storage
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain) throws Exception;1476455790;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@return {@link ZooKeeperCompletedCheckpointStore} instance;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINTS_PATH)___		RetrievableStateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_				maxNumberOfCheckpointsToRetain,_				client,_				checkpointsPath,_				stateStorage)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,return,link,zoo,keeper,completed,checkpoint,store,instance;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,retrievable,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,client,checkpoints,path,state,storage
ZooKeeperUtils -> public static CompletedCheckpointStore createCompletedCheckpoints( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId, 			int maxNumberOfCheckpointsToRetain) throws Exception;1476985095;Creates a {@link ZooKeeperCompletedCheckpointStore} instance.__@param client                         The {@link CuratorFramework} ZooKeeper client to use_@param configuration                  {@link Configuration} object_@param jobId                          ID of job to create the instance for_@param maxNumberOfCheckpointsToRetain The maximum number of checkpoints to retain_@return {@link ZooKeeperCompletedCheckpointStore} instance_@throws Exception if the completed checkpoint store cannot be created;public static CompletedCheckpointStore createCompletedCheckpoints(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId,_			int maxNumberOfCheckpointsToRetain) throws Exception {__		checkNotNull(configuration, "Configuration")___		String checkpointsPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINTS_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINTS_PATH)___		RetrievableStateStorageHelper<CompletedCheckpoint> stateStorage = createFileSystemStateStorage(_			configuration,_			"completedCheckpoint")___		checkpointsPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCompletedCheckpointStore(_				maxNumberOfCheckpointsToRetain,_				client,_				checkpointsPath,_				stateStorage)__	};creates,a,link,zoo,keeper,completed,checkpoint,store,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,param,max,number,of,checkpoints,to,retain,the,maximum,number,of,checkpoints,to,retain,return,link,zoo,keeper,completed,checkpoint,store,instance,throws,exception,if,the,completed,checkpoint,store,cannot,be,created;public,static,completed,checkpoint,store,create,completed,checkpoints,curator,framework,client,configuration,configuration,job,id,job,id,int,max,number,of,checkpoints,to,retain,throws,exception,check,not,null,configuration,configuration,string,checkpoints,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,retrievable,state,storage,helper,completed,checkpoint,state,storage,create,file,system,state,storage,configuration,completed,checkpoint,checkpoints,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,completed,checkpoint,store,max,number,of,checkpoints,to,retain,client,checkpoints,path,state,storage
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1441011751;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, "")___		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,string,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1443564120;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, "")___		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,string,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1445293011;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, "")___		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,string,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1445327854;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, "")___		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,string,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1445598182;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, "")___		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,string,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1456841351;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, "")___		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,string,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1465991918;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, "")___		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,string,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1468944021;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, "")___		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,string,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1469525443;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, "")___		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,string,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1472033364;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getString(ConfigConstants.HA_ZOOKEEPER_QUORUM_KEY, "")__		if (zkQuorum.isEmpty()) {_			zkQuorum = flinkConf.getString(ConfigConstants.ZOOKEEPER_QUORUM_KEY, "")__		}__		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,string,config,constants,if,zk,quorum,is,empty,zk,quorum,flink,conf,get,string,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1472033371;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = ConfigurationUtil.getStringWithDeprecatedKeys(_				flinkConf,_				ConfigConstants.HA_ZOOKEEPER_QUORUM_KEY,_				"",_				ConfigConstants.ZOOKEEPER_QUORUM_KEY)___		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,configuration,util,get,string,with,deprecated,keys,flink,conf,config,constants,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1472484430;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = ConfigurationUtil.getStringWithDeprecatedKeys(_				flinkConf,_				ConfigConstants.HA_ZOOKEEPER_QUORUM_KEY,_				"",_				ConfigConstants.ZOOKEEPER_QUORUM_KEY)___		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,configuration,util,get,string,with,deprecated,keys,flink,conf,config,constants,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1472663401;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = ConfigurationUtil.getStringWithDeprecatedKeys(_				flinkConf,_				ConfigConstants.HA_ZOOKEEPER_QUORUM_KEY,_				"",_				ConfigConstants.ZOOKEEPER_QUORUM_KEY)___		if (zkQuorum == null || zkQuorum.equals("")) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,configuration,util,get,string,with,deprecated,keys,flink,conf,config,constants,config,constants,if,zk,quorum,null,zk,quorum,equals,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1476095826;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1476432306;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1476455790;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1476985095;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1479852016;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1482522861;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1482522864;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1485163254;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1493975167;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1498896127;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1516971022;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1536763178;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1536763193;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1547028640;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static String getZooKeeperEnsemble(Configuration flinkConf) 			throws IllegalConfigurationException;1547547304;Returns the configured ZooKeeper quorum (and removes whitespace, because ZooKeeper does not_tolerate it).;public static String getZooKeeperEnsemble(Configuration flinkConf)_			throws IllegalConfigurationException {__		String zkQuorum = flinkConf.getValue(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM)___		if (zkQuorum == null || StringUtils.isBlank(zkQuorum)) {_			throw new IllegalConfigurationException("No ZooKeeper quorum specified in config.")__		}__		_		zkQuorum = zkQuorum.replaceAll("\\s+", "")___		return zkQuorum__	};returns,the,configured,zoo,keeper,quorum,and,removes,whitespace,because,zoo,keeper,does,not,tolerate,it;public,static,string,get,zoo,keeper,ensemble,configuration,flink,conf,throws,illegal,configuration,exception,string,zk,quorum,flink,conf,get,value,high,availability,options,if,zk,quorum,null,string,utils,is,blank,zk,quorum,throw,new,illegal,configuration,exception,no,zoo,keeper,quorum,specified,in,config,zk,quorum,zk,quorum,replace,all,s,return,zk,quorum
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId);1476985095;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) {__		String checkpointIdCounterPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,string,checkpoint,id,counter,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId);1479852016;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) {__		String checkpointIdCounterPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,string,checkpoint,id,counter,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId);1482522861;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) {__		String checkpointIdCounterPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,string,checkpoint,id,counter,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId);1482522864;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) {__		String checkpointIdCounterPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,string,checkpoint,id,counter,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId);1485163254;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) {__		String checkpointIdCounterPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,string,checkpoint,id,counter,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId);1493975167;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) {__		String checkpointIdCounterPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_CHECKPOINT_COUNTER_PATH,_				ConfigConstants.ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,string,checkpoint,id,counter,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId);1498896127;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) {__		String checkpointIdCounterPath = configuration.getString(_				HighAvailabilityOptions.HA_ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,string,checkpoint,id,counter,path,configuration,get,string,high,availability,options,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId);1516971022;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) {__		String checkpointIdCounterPath = configuration.getString(_				HighAvailabilityOptions.HA_ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,string,checkpoint,id,counter,path,configuration,get,string,high,availability,options,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId);1536763178;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) {__		String checkpointIdCounterPath = configuration.getString(_				HighAvailabilityOptions.HA_ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,string,checkpoint,id,counter,path,configuration,get,string,high,availability,options,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId);1536763193;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) {__		String checkpointIdCounterPath = configuration.getString(_				HighAvailabilityOptions.HA_ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,string,checkpoint,id,counter,path,configuration,get,string,high,availability,options,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId);1547028640;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) {__		String checkpointIdCounterPath = configuration.getString(_				HighAvailabilityOptions.HA_ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,string,checkpoint,id,counter,path,configuration,get,string,high,availability,options,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter( 			CuratorFramework client, 			Configuration configuration, 			JobID jobId);1547547304;Creates a {@link ZooKeeperCheckpointIDCounter} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object_@param jobId         ID of job to create the instance for_@return {@link ZooKeeperCheckpointIDCounter} instance;public static ZooKeeperCheckpointIDCounter createCheckpointIDCounter(_			CuratorFramework client,_			Configuration configuration,_			JobID jobId) {__		String checkpointIdCounterPath = configuration.getString(_				HighAvailabilityOptions.HA_ZOOKEEPER_CHECKPOINT_COUNTER_PATH)___		checkpointIdCounterPath += ZooKeeperSubmittedJobGraphStore.getPathForJob(jobId)___		return new ZooKeeperCheckpointIDCounter(client, checkpointIdCounterPath)__	};creates,a,link,zoo,keeper,checkpoint,idcounter,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,param,job,id,id,of,job,to,create,the,instance,for,return,link,zoo,keeper,checkpoint,idcounter,instance;public,static,zoo,keeper,checkpoint,idcounter,create,checkpoint,idcounter,curator,framework,client,configuration,configuration,job,id,job,id,string,checkpoint,id,counter,path,configuration,get,string,high,availability,options,checkpoint,id,counter,path,zoo,keeper,submitted,job,graph,store,get,path,for,job,job,id,return,new,zoo,keeper,checkpoint,idcounter,client,checkpoint,id,counter,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			Configuration configuration) throws Exception;1441011751;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			Configuration configuration) throws Exception {_		CuratorFramework client = startCuratorFramework(configuration)___		String latchPath = configuration.getString(ConfigConstants.ZOOKEEPER_LATCH_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LATCH_PATH)__		String leaderPath = configuration.getString(ConfigConstants.ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,string,latch,path,configuration,get,string,config,constants,config,constants,string,leader,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			Configuration configuration) throws Exception;1443564120;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			Configuration configuration) throws Exception {_		CuratorFramework client = startCuratorFramework(configuration)___		String latchPath = configuration.getString(ConfigConstants.ZOOKEEPER_LATCH_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LATCH_PATH)__		String leaderPath = configuration.getString(ConfigConstants.ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,string,latch,path,configuration,get,string,config,constants,config,constants,string,leader,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			Configuration configuration) throws Exception;1445293011;Creates a {@link ZooKeeperLeaderElectionService} instance and a new {@link_CuratorFramework} client.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			Configuration configuration) throws Exception {__		CuratorFramework client = startCuratorFramework(configuration)___		return createLeaderElectionService(client, configuration)__	};creates,a,link,zoo,keeper,leader,election,service,instance,and,a,new,link,curator,framework,client,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			Configuration configuration) throws Exception;1445327854;Creates a {@link ZooKeeperLeaderElectionService} instance and a new {@link_CuratorFramework} client.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			Configuration configuration) throws Exception {__		CuratorFramework client = startCuratorFramework(configuration)___		return createLeaderElectionService(client, configuration)__	};creates,a,link,zoo,keeper,leader,election,service,instance,and,a,new,link,curator,framework,client,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			Configuration configuration) throws Exception;1445598182;Creates a {@link ZooKeeperLeaderElectionService} instance and a new {@link_CuratorFramework} client.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			Configuration configuration) throws Exception {__		CuratorFramework client = startCuratorFramework(configuration)___		return createLeaderElectionService(client, configuration)__	};creates,a,link,zoo,keeper,leader,election,service,instance,and,a,new,link,curator,framework,client,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			Configuration configuration) throws Exception;1456841351;Creates a {@link ZooKeeperLeaderElectionService} instance and a new {@link_CuratorFramework} client.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			Configuration configuration) throws Exception {__		CuratorFramework client = startCuratorFramework(configuration)___		return createLeaderElectionService(client, configuration)__	};creates,a,link,zoo,keeper,leader,election,service,instance,and,a,new,link,curator,framework,client,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			Configuration configuration) throws Exception;1465991918;Creates a {@link ZooKeeperLeaderElectionService} instance and a new {@link_CuratorFramework} client.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			Configuration configuration) throws Exception {__		CuratorFramework client = startCuratorFramework(configuration)___		return createLeaderElectionService(client, configuration)__	};creates,a,link,zoo,keeper,leader,election,service,instance,and,a,new,link,curator,framework,client,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			Configuration configuration) throws Exception;1468944021;Creates a {@link ZooKeeperLeaderElectionService} instance and a new {@link_CuratorFramework} client.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			Configuration configuration) throws Exception {__		CuratorFramework client = startCuratorFramework(configuration)___		return createLeaderElectionService(client, configuration)__	};creates,a,link,zoo,keeper,leader,election,service,instance,and,a,new,link,curator,framework,client,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			Configuration configuration) throws Exception;1469525443;Creates a {@link ZooKeeperLeaderElectionService} instance and a new {@link_CuratorFramework} client.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			Configuration configuration) throws Exception {__		CuratorFramework client = startCuratorFramework(configuration)___		return createLeaderElectionService(client, configuration)__	};creates,a,link,zoo,keeper,leader,election,service,instance,and,a,new,link,curator,framework,client,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			Configuration configuration) throws Exception;1472033364;Creates a {@link ZooKeeperLeaderElectionService} instance and a new {@link_CuratorFramework} client.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			Configuration configuration) throws Exception {__		CuratorFramework client = startCuratorFramework(configuration)___		return createLeaderElectionService(client, configuration)__	};creates,a,link,zoo,keeper,leader,election,service,instance,and,a,new,link,curator,framework,client,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			Configuration configuration) throws Exception;1472033371;Creates a {@link ZooKeeperLeaderElectionService} instance and a new {@link_CuratorFramework} client.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			Configuration configuration) throws Exception {__		CuratorFramework client = startCuratorFramework(configuration)___		return createLeaderElectionService(client, configuration)__	};creates,a,link,zoo,keeper,leader,election,service,instance,and,a,new,link,curator,framework,client,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			Configuration configuration) throws Exception;1472484430;Creates a {@link ZooKeeperLeaderElectionService} instance and a new {@link_CuratorFramework} client.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			Configuration configuration) throws Exception {__		CuratorFramework client = startCuratorFramework(configuration)___		return createLeaderElectionService(client, configuration)__	};creates,a,link,zoo,keeper,leader,election,service,instance,and,a,new,link,curator,framework,client,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			Configuration configuration) throws Exception;1472663401;Creates a {@link ZooKeeperLeaderElectionService} instance and a new {@link_CuratorFramework} client.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			Configuration configuration) throws Exception {__		CuratorFramework client = startCuratorFramework(configuration)___		return createLeaderElectionService(client, configuration)__	};creates,a,link,zoo,keeper,leader,election,service,instance,and,a,new,link,curator,framework,client,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			Configuration configuration) throws Exception;1476095826;Creates a {@link ZooKeeperLeaderElectionService} instance and a new {@link_CuratorFramework} client.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			Configuration configuration) throws Exception {__		CuratorFramework client = startCuratorFramework(configuration)___		return createLeaderElectionService(client, configuration)__	};creates,a,link,zoo,keeper,leader,election,service,instance,and,a,new,link,curator,framework,client,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			Configuration configuration) throws Exception;1476432306;Creates a {@link ZooKeeperLeaderElectionService} instance and a new {@link_CuratorFramework} client.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			Configuration configuration) throws Exception {__		CuratorFramework client = startCuratorFramework(configuration)___		return createLeaderElectionService(client, configuration)__	};creates,a,link,zoo,keeper,leader,election,service,instance,and,a,new,link,curator,framework,client,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			Configuration configuration) throws Exception;1476455790;Creates a {@link ZooKeeperLeaderElectionService} instance and a new {@link_CuratorFramework} client.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			Configuration configuration) throws Exception {__		CuratorFramework client = startCuratorFramework(configuration)___		return createLeaderElectionService(client, configuration)__	};creates,a,link,zoo,keeper,leader,election,service,instance,and,a,new,link,curator,framework,client,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			Configuration configuration) throws Exception;1482522861;Creates a {@link ZooKeeperLeaderElectionService} instance and a new {@link_CuratorFramework} client.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			Configuration configuration) throws Exception {__		CuratorFramework client = startCuratorFramework(configuration)___		return createLeaderElectionService(client, configuration)__	};creates,a,link,zoo,keeper,leader,election,service,instance,and,a,new,link,curator,framework,client,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			Configuration configuration) throws Exception;1482522864;Creates a {@link ZooKeeperLeaderElectionService} instance and a new {@link_CuratorFramework} client.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			Configuration configuration) throws Exception {__		CuratorFramework client = startCuratorFramework(configuration)___		return createLeaderElectionService(client, configuration)__	};creates,a,link,zoo,keeper,leader,election,service,instance,and,a,new,link,curator,framework,client,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			Configuration configuration) throws Exception;1485163254;Creates a {@link ZooKeeperLeaderElectionService} instance and a new {@link_CuratorFramework} client.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			Configuration configuration) throws Exception {__		CuratorFramework client = startCuratorFramework(configuration)___		return createLeaderElectionService(client, configuration)__	};creates,a,link,zoo,keeper,leader,election,service,instance,and,a,new,link,curator,framework,client,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1445293011;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		String latchPath = configuration.getString(ConfigConstants.ZOOKEEPER_LATCH_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LATCH_PATH)__		String leaderPath = configuration.getString(ConfigConstants.ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,string,latch,path,configuration,get,string,config,constants,config,constants,string,leader,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1445327854;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		String latchPath = configuration.getString(ConfigConstants.ZOOKEEPER_LATCH_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LATCH_PATH)__		String leaderPath = configuration.getString(ConfigConstants.ZOOKEEPER_LEADER_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,string,latch,path,configuration,get,string,config,constants,config,constants,string,leader,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1445598182;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		String latchPath = configuration.getString(ConfigConstants.ZOOKEEPER_LATCH_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LATCH_PATH)__		String leaderPath = configuration.getString(ConfigConstants.ZOOKEEPER_LEADER_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,string,latch,path,configuration,get,string,config,constants,config,constants,string,leader,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1456841351;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		String latchPath = configuration.getString(ConfigConstants.ZOOKEEPER_LATCH_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LATCH_PATH)__		String leaderPath = configuration.getString(ConfigConstants.ZOOKEEPER_LEADER_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,string,latch,path,configuration,get,string,config,constants,config,constants,string,leader,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1465991918;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		String latchPath = configuration.getString(ConfigConstants.ZOOKEEPER_LATCH_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LATCH_PATH)__		String leaderPath = configuration.getString(ConfigConstants.ZOOKEEPER_LEADER_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,string,latch,path,configuration,get,string,config,constants,config,constants,string,leader,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1468944021;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		String latchPath = configuration.getString(ConfigConstants.ZOOKEEPER_LATCH_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LATCH_PATH)__		String leaderPath = configuration.getString(ConfigConstants.ZOOKEEPER_LEADER_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,string,latch,path,configuration,get,string,config,constants,config,constants,string,leader,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1469525443;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		String latchPath = configuration.getString(ConfigConstants.ZOOKEEPER_LATCH_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LATCH_PATH)__		String leaderPath = configuration.getString(ConfigConstants.ZOOKEEPER_LEADER_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,string,latch,path,configuration,get,string,config,constants,config,constants,string,leader,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1472033364;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		String latchPath = getConfiguredStringValue(configuration,_			ConfigConstants.HA_ZOOKEEPER_LATCH_PATH, ConfigConstants.ZOOKEEPER_LATCH_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_LATCH_PATH)__		String leaderPath = getConfiguredStringValue(configuration,_			ConfigConstants.HA_ZOOKEEPER_LEADER_PATH, ConfigConstants.ZOOKEEPER_LEADER_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,string,latch,path,get,configured,string,value,configuration,config,constants,config,constants,config,constants,string,leader,path,get,configured,string,value,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1472033371;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		String latchPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LATCH_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LATCH_PATH,_				ConfigConstants.ZOOKEEPER_LATCH_PATH)__		String leaderPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,string,latch,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,string,leader,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1472484430;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		String latchPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LATCH_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LATCH_PATH,_				ConfigConstants.ZOOKEEPER_LATCH_PATH)__		String leaderPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,string,latch,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,string,leader,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1472663401;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		String latchPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LATCH_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LATCH_PATH,_				ConfigConstants.ZOOKEEPER_LATCH_PATH)__		String leaderPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,string,latch,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,string,leader,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1476095826;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		String latchPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LATCH_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LATCH_PATH,_				ConfigConstants.ZOOKEEPER_LATCH_PATH)__		String leaderPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,string,latch,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,string,leader,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1476432306;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		String latchPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LATCH_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LATCH_PATH,_				ConfigConstants.ZOOKEEPER_LATCH_PATH)__		String leaderPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,string,latch,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,string,leader,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1476455790;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance._@throws Exception;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		String latchPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LATCH_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LATCH_PATH,_				ConfigConstants.ZOOKEEPER_LATCH_PATH)__		String leaderPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderElectionService(client, latchPath, leaderPath)__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance,throws,exception;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,string,latch,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,string,leader,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,leader,election,service,client,latch,path,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1482522861;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		return createLeaderElectionService(client, configuration, "")__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1482522864;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		return createLeaderElectionService(client, configuration, "")__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1485163254;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		return createLeaderElectionService(client, configuration, "")__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1493975167;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		return createLeaderElectionService(client, configuration, "")__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1498896127;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		return createLeaderElectionService(client, configuration, "")__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1516971022;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		return createLeaderElectionService(client, configuration, "")__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1536763178;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		return createLeaderElectionService(client, configuration, "")__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1536763193;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		return createLeaderElectionService(client, configuration, "")__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1547028640;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		return createLeaderElectionService(client, configuration, "")__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderElectionService createLeaderElectionService( 			CuratorFramework client, 			Configuration configuration) throws Exception;1547547304;Creates a {@link ZooKeeperLeaderElectionService} instance.__@param client        The {@link CuratorFramework} ZooKeeper client to use_@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderElectionService} instance.;public static ZooKeeperLeaderElectionService createLeaderElectionService(_			CuratorFramework client,_			Configuration configuration) throws Exception {__		return createLeaderElectionService(client, configuration, "")__	};creates,a,link,zoo,keeper,leader,election,service,instance,param,client,the,link,curator,framework,zoo,keeper,client,to,use,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,election,service,instance;public,static,zoo,keeper,leader,election,service,create,leader,election,service,curator,framework,client,configuration,configuration,throws,exception,return,create,leader,election,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration) throws Exception;1441011751;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration) throws Exception{_		CuratorFramework client = startCuratorFramework(configuration)__		String leaderPath = configuration.getString(ConfigConstants.ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,string,leader,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration) throws Exception;1443564120;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration) throws Exception{_		CuratorFramework client = startCuratorFramework(configuration)__		String leaderPath = configuration.getString(ConfigConstants.ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,string,leader,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration) throws Exception;1445293011;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration) throws Exception {_		CuratorFramework client = startCuratorFramework(configuration)__		String leaderPath = configuration.getString(ConfigConstants.ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,string,leader,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration) throws Exception;1445327854;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration) throws Exception {_		CuratorFramework client = startCuratorFramework(configuration)__		String leaderPath = configuration.getString(ConfigConstants.ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,string,leader,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration) throws Exception;1445598182;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration) throws Exception {_		CuratorFramework client = startCuratorFramework(configuration)__		String leaderPath = configuration.getString(ConfigConstants.ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,string,leader,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration) throws Exception;1456841351;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration) throws Exception {_		CuratorFramework client = startCuratorFramework(configuration)__		String leaderPath = configuration.getString(ConfigConstants.ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,string,leader,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration) throws Exception;1465991918;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration) throws Exception {_		CuratorFramework client = startCuratorFramework(configuration)__		String leaderPath = configuration.getString(ConfigConstants.ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,string,leader,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration) throws Exception;1468944021;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration) throws Exception {_		CuratorFramework client = startCuratorFramework(configuration)__		String leaderPath = configuration.getString(ConfigConstants.ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,string,leader,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration) throws Exception;1469525443;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration) throws Exception {_		CuratorFramework client = startCuratorFramework(configuration)__		String leaderPath = configuration.getString(ConfigConstants.ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,string,leader,path,configuration,get,string,config,constants,config,constants,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration) throws Exception;1472033364;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration) throws Exception {_		CuratorFramework client = startCuratorFramework(configuration)__		String leaderPath = getConfiguredStringValue(configuration,_			ConfigConstants.HA_ZOOKEEPER_LEADER_PATH, ConfigConstants.ZOOKEEPER_LEADER_PATH,_			ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,string,leader,path,get,configured,string,value,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration) throws Exception;1472033371;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration) throws Exception {_		CuratorFramework client = startCuratorFramework(configuration)__		String leaderPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,string,leader,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration) throws Exception;1472484430;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration) throws Exception {_		CuratorFramework client = startCuratorFramework(configuration)__		String leaderPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,string,leader,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration) throws Exception;1472663401;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration) throws Exception {_		CuratorFramework client = startCuratorFramework(configuration)__		String leaderPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,string,leader,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration) throws Exception;1476095826;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration) throws Exception {_		CuratorFramework client = startCuratorFramework(configuration)__		String leaderPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,string,leader,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration) throws Exception;1476432306;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration) throws Exception {_		CuratorFramework client = startCuratorFramework(configuration)__		String leaderPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,string,leader,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration) throws Exception;1476455790;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance._@throws Exception;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration) throws Exception {_		CuratorFramework client = startCuratorFramework(configuration)__		String leaderPath = ConfigurationUtil.getStringWithDeprecatedKeys(_				configuration,_				ConfigConstants.HA_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.DEFAULT_ZOOKEEPER_LEADER_PATH,_				ConfigConstants.ZOOKEEPER_LEADER_PATH)___		return new ZooKeeperLeaderRetrievalService(client, leaderPath)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance,throws,exception;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,curator,framework,client,start,curator,framework,configuration,string,leader,path,configuration,util,get,string,with,deprecated,keys,configuration,config,constants,config,constants,config,constants,return,new,zoo,keeper,leader,retrieval,service,client,leader,path
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration) throws Exception;1482522861;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance.;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration) throws Exception {_		final CuratorFramework client = startCuratorFramework(configuration)__		return createLeaderRetrievalService(client, configuration)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,final,curator,framework,client,start,curator,framework,configuration,return,create,leader,retrieval,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration) throws Exception;1482522864;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance.;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration) throws Exception {_		final CuratorFramework client = startCuratorFramework(configuration)__		return createLeaderRetrievalService(client, configuration)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,final,curator,framework,client,start,curator,framework,configuration,return,create,leader,retrieval,service,client,configuration
ZooKeeperUtils -> public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService( 			Configuration configuration) throws Exception;1485163254;Creates a {@link ZooKeeperLeaderRetrievalService} instance.__@param configuration {@link Configuration} object containing the configuration values_@return {@link ZooKeeperLeaderRetrievalService} instance.;public static ZooKeeperLeaderRetrievalService createLeaderRetrievalService(_			Configuration configuration) throws Exception {_		final CuratorFramework client = startCuratorFramework(configuration)__		return createLeaderRetrievalService(client, configuration)__	};creates,a,link,zoo,keeper,leader,retrieval,service,instance,param,configuration,link,configuration,object,containing,the,configuration,values,return,link,zoo,keeper,leader,retrieval,service,instance;public,static,zoo,keeper,leader,retrieval,service,create,leader,retrieval,service,configuration,configuration,throws,exception,final,curator,framework,client,start,curator,framework,configuration,return,create,leader,retrieval,service,client,configuration
