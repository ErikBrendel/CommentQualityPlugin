# id;timestamp;commentText;codeText;commentWords;codeWords
SingleLogicalSlot -> @Override 	public boolean release(Throwable cause);1513261599;A release of the payload by the {@link AllocatedSlot} triggers a release of the payload of_the logical slot.__@param cause of the payload release_@return true if the logical slot's payload could be released, otherwise false;@Override_	public boolean release(Throwable cause) {_		return releaseSlot(cause).isDone()__	};a,release,of,the,payload,by,the,link,allocated,slot,triggers,a,release,of,the,payload,of,the,logical,slot,param,cause,of,the,payload,release,return,true,if,the,logical,slot,s,payload,could,be,released,otherwise,false;override,public,boolean,release,throwable,cause,return,release,slot,cause,is,done
SingleLogicalSlot -> @Override 	public boolean release(Throwable cause);1521804757;A release of the payload by the {@link AllocatedSlot} triggers a release of the payload of_the logical slot.__@param cause of the payload release_@return true if the logical slot's payload could be released, otherwise false;@Override_	public boolean release(Throwable cause) {_		return releaseSlot(cause).isDone()__	};a,release,of,the,payload,by,the,link,allocated,slot,triggers,a,release,of,the,payload,of,the,logical,slot,param,cause,of,the,payload,release,return,true,if,the,logical,slot,s,payload,could,be,released,otherwise,false;override,public,boolean,release,throwable,cause,return,release,slot,cause,is,done
SingleLogicalSlot -> @Override 	public void release(Throwable cause);1525961911;A release of the payload by the {@link AllocatedSlot} triggers a release of the payload of_the logical slot.__@param cause of the payload release;@Override_	public void release(Throwable cause) {_		if (STATE_UPDATER.compareAndSet(this, State.ALIVE, State.RELEASING)) {_			signalPayloadRelease(cause)__		}_		markReleased()__		releaseFuture.complete(null)__	};a,release,of,the,payload,by,the,link,allocated,slot,triggers,a,release,of,the,payload,of,the,logical,slot,param,cause,of,the,payload,release;override,public,void,release,throwable,cause,if,compare,and,set,this,state,alive,state,releasing,signal,payload,release,cause,mark,released,release,future,complete,null
SingleLogicalSlot -> @Override 	public void release(Throwable cause);1549365080;A release of the payload by the {@link AllocatedSlot} triggers a release of the payload of_the logical slot.__@param cause of the payload release;@Override_	public void release(Throwable cause) {_		if (STATE_UPDATER.compareAndSet(this, State.ALIVE, State.RELEASING)) {_			signalPayloadRelease(cause)__		}_		markReleased()__		releaseFuture.complete(null)__	};a,release,of,the,payload,by,the,link,allocated,slot,triggers,a,release,of,the,payload,of,the,logical,slot,param,cause,of,the,payload,release;override,public,void,release,throwable,cause,if,compare,and,set,this,state,alive,state,releasing,signal,payload,release,cause,mark,released,release,future,complete,null
SingleLogicalSlot -> @Override 	public void release(Throwable cause);1550220073;A release of the payload by the {@link AllocatedSlot} triggers a release of the payload of_the logical slot.__@param cause of the payload release;@Override_	public void release(Throwable cause) {_		if (STATE_UPDATER.compareAndSet(this, State.ALIVE, State.RELEASING)) {_			signalPayloadRelease(cause)__		}_		markReleased()__		releaseFuture.complete(null)__	};a,release,of,the,payload,by,the,link,allocated,slot,triggers,a,release,of,the,payload,of,the,logical,slot,param,cause,of,the,payload,release;override,public,void,release,throwable,cause,if,compare,and,set,this,state,alive,state,releasing,signal,payload,release,cause,mark,released,release,future,complete,null
