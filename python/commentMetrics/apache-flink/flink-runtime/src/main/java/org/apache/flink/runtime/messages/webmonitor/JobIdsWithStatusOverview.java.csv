commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public Collection<JobIdWithStatus> getJobsWithStatus() {     return jobsWithStatus. }
false;public;0;4;;// ------------------------------------------------------------------------ @Override public int hashCode() {     return jobsWithStatus.hashCode(). }
false;public;1;13;;@Override public boolean equals(Object obj) {     if (obj == this) {         return true.     } else if (obj instanceof JobIdsWithStatusOverview) {         JobIdsWithStatusOverview that = (JobIdsWithStatusOverview) obj.         return jobsWithStatus.equals(that.getJobsWithStatus()).     } else {         return false.     } }
false;public;0;4;;@Override public String toString() {     return "JobIdsWithStatusesOverview { " + jobsWithStatus + " }". }
false;private,static;2;13;;// ------------------------------------------------------------------------ private static Collection<JobIdWithStatus> combine(Collection<JobIdWithStatus> first, Collection<JobIdWithStatus> second) {     checkNotNull(first).     checkNotNull(second).     ArrayList<JobIdWithStatus> result = new ArrayList<>(first.size() + second.size()).     result.addAll(first).     result.addAll(second).     return result. }
false;public;0;3;;public JobID getJobId() {     return jobId. }
false;public;0;3;;public JobStatus getJobStatus() {     return jobStatus. }
false;public;1;12;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     JobIdWithStatus that = (JobIdWithStatus) o.     return Objects.equals(jobId, that.jobId) && jobStatus == that.jobStatus. }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(jobId, jobStatus). }
