# id;timestamp;commentText;codeText;commentWords;codeWords
LargeRecordHandler -> public void close() throws IOException;1421838095;Closes all structures and deletes all temporary files._Even in the presence of failures, this method will try and continue closing_files and deleting temporary files.__@throws IOException Thrown if an error occurred while closing/deleting the files.;public void close() throws IOException {_		_		_		_		Throwable ex = null__		_		synchronized (this) {_			_			if (closed) {_				return__			}_			closed = true__			_			_			if (recordsOutFile != null) {_				try {_					recordsOutFile.close()__					recordsOutFile = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysOutFile != null) {_				try {_					keysOutFile.close()__					keysOutFile = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records key spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (recordsReader != null) {_				try {_					recordsReader.close()__					recordsReader = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records reader.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysReader != null) {_				try {_					keysReader.close()__					keysReader = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records key reader.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (recordsChannel != null) {_				try {_					ioManager.deleteChannel(recordsChannel)__					recordsChannel = null__				} catch (Throwable t) {_					LOG.error("Cannot delete the large records spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysChannel != null) {_				try {_					ioManager.deleteChannel(keysChannel)__					keysChannel = null__				} catch (Throwable t) {_					LOG.error("Cannot delete the large records key spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (keySorter != null) {_				try {_					keySorter.close()__					keySorter = null__				} catch (Throwable t) {_					LOG.error("Cannot properly dispose the key sorter and clean up its temporary files.", t)__					ex = ex == null ? t : ex__				}_			}_			_			memManager.release(memory)__			_			recordCounter = 0__		}_		_		_		if (ex != null) { _			throw new IOException("An error occurred cleaning up spill files in the large record handler.", ex)__		}_	};closes,all,structures,and,deletes,all,temporary,files,even,in,the,presence,of,failures,this,method,will,try,and,continue,closing,files,and,deleting,temporary,files,throws,ioexception,thrown,if,an,error,occurred,while,closing,deleting,the,files;public,void,close,throws,ioexception,throwable,ex,null,synchronized,this,if,closed,return,closed,true,if,records,out,file,null,try,records,out,file,close,records,out,file,null,catch,throwable,t,log,error,cannot,close,the,large,records,spill,file,t,ex,ex,null,t,ex,if,keys,out,file,null,try,keys,out,file,close,keys,out,file,null,catch,throwable,t,log,error,cannot,close,the,large,records,key,spill,file,t,ex,ex,null,t,ex,if,records,reader,null,try,records,reader,close,records,reader,null,catch,throwable,t,log,error,cannot,close,the,large,records,reader,t,ex,ex,null,t,ex,if,keys,reader,null,try,keys,reader,close,keys,reader,null,catch,throwable,t,log,error,cannot,close,the,large,records,key,reader,t,ex,ex,null,t,ex,if,records,channel,null,try,io,manager,delete,channel,records,channel,records,channel,null,catch,throwable,t,log,error,cannot,delete,the,large,records,spill,file,t,ex,ex,null,t,ex,if,keys,channel,null,try,io,manager,delete,channel,keys,channel,keys,channel,null,catch,throwable,t,log,error,cannot,delete,the,large,records,key,spill,file,t,ex,ex,null,t,ex,if,key,sorter,null,try,key,sorter,close,key,sorter,null,catch,throwable,t,log,error,cannot,properly,dispose,the,key,sorter,and,clean,up,its,temporary,files,t,ex,ex,null,t,ex,mem,manager,release,memory,record,counter,0,if,ex,null,throw,new,ioexception,an,error,occurred,cleaning,up,spill,files,in,the,large,record,handler,ex
LargeRecordHandler -> public void close() throws IOException;1421838119;Closes all structures and deletes all temporary files._Even in the presence of failures, this method will try and continue closing_files and deleting temporary files.__@throws IOException Thrown if an error occurred while closing/deleting the files.;public void close() throws IOException {_		_		_		_		Throwable ex = null__		_		synchronized (this) {_			_			if (closed) {_				return__			}_			closed = true__			_			_			if (recordsOutFile != null) {_				try {_					recordsOutFile.close()__					recordsOutFile = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysOutFile != null) {_				try {_					keysOutFile.close()__					keysOutFile = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records key spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (recordsReader != null) {_				try {_					recordsReader.close()__					recordsReader = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records reader.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysReader != null) {_				try {_					keysReader.close()__					keysReader = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records key reader.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (recordsChannel != null) {_				try {_					ioManager.deleteChannel(recordsChannel)__					recordsChannel = null__				} catch (Throwable t) {_					LOG.error("Cannot delete the large records spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysChannel != null) {_				try {_					ioManager.deleteChannel(keysChannel)__					keysChannel = null__				} catch (Throwable t) {_					LOG.error("Cannot delete the large records key spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (keySorter != null) {_				try {_					keySorter.close()__					keySorter = null__				} catch (Throwable t) {_					LOG.error("Cannot properly dispose the key sorter and clean up its temporary files.", t)__					ex = ex == null ? t : ex__				}_			}_			_			memManager.release(memory)__			_			recordCounter = 0__		}_		_		_		if (ex != null) { _			throw new IOException("An error occurred cleaning up spill files in the large record handler.", ex)__		}_	};closes,all,structures,and,deletes,all,temporary,files,even,in,the,presence,of,failures,this,method,will,try,and,continue,closing,files,and,deleting,temporary,files,throws,ioexception,thrown,if,an,error,occurred,while,closing,deleting,the,files;public,void,close,throws,ioexception,throwable,ex,null,synchronized,this,if,closed,return,closed,true,if,records,out,file,null,try,records,out,file,close,records,out,file,null,catch,throwable,t,log,error,cannot,close,the,large,records,spill,file,t,ex,ex,null,t,ex,if,keys,out,file,null,try,keys,out,file,close,keys,out,file,null,catch,throwable,t,log,error,cannot,close,the,large,records,key,spill,file,t,ex,ex,null,t,ex,if,records,reader,null,try,records,reader,close,records,reader,null,catch,throwable,t,log,error,cannot,close,the,large,records,reader,t,ex,ex,null,t,ex,if,keys,reader,null,try,keys,reader,close,keys,reader,null,catch,throwable,t,log,error,cannot,close,the,large,records,key,reader,t,ex,ex,null,t,ex,if,records,channel,null,try,io,manager,delete,channel,records,channel,records,channel,null,catch,throwable,t,log,error,cannot,delete,the,large,records,spill,file,t,ex,ex,null,t,ex,if,keys,channel,null,try,io,manager,delete,channel,keys,channel,keys,channel,null,catch,throwable,t,log,error,cannot,delete,the,large,records,key,spill,file,t,ex,ex,null,t,ex,if,key,sorter,null,try,key,sorter,close,key,sorter,null,catch,throwable,t,log,error,cannot,properly,dispose,the,key,sorter,and,clean,up,its,temporary,files,t,ex,ex,null,t,ex,mem,manager,release,memory,record,counter,0,if,ex,null,throw,new,ioexception,an,error,occurred,cleaning,up,spill,files,in,the,large,record,handler,ex
LargeRecordHandler -> public void close() throws IOException;1421968928;Closes all structures and deletes all temporary files._Even in the presence of failures, this method will try and continue closing_files and deleting temporary files.__@throws IOException Thrown if an error occurred while closing/deleting the files.;public void close() throws IOException {_		_		_		_		Throwable ex = null__		_		synchronized (this) {_			_			if (closed) {_				return__			}_			closed = true__			_			_			if (recordsOutFile != null) {_				try {_					recordsOutFile.close()__					recordsOutFile = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysOutFile != null) {_				try {_					keysOutFile.close()__					keysOutFile = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records key spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (recordsReader != null) {_				try {_					recordsReader.close()__					recordsReader = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records reader.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysReader != null) {_				try {_					keysReader.close()__					keysReader = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records key reader.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (recordsChannel != null) {_				try {_					ioManager.deleteChannel(recordsChannel)__					recordsChannel = null__				} catch (Throwable t) {_					LOG.error("Cannot delete the large records spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysChannel != null) {_				try {_					ioManager.deleteChannel(keysChannel)__					keysChannel = null__				} catch (Throwable t) {_					LOG.error("Cannot delete the large records key spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (keySorter != null) {_				try {_					keySorter.close()__					keySorter = null__				} catch (Throwable t) {_					LOG.error("Cannot properly dispose the key sorter and clean up its temporary files.", t)__					ex = ex == null ? t : ex__				}_			}_			_			memManager.release(memory)__			_			recordCounter = 0__		}_		_		_		if (ex != null) { _			throw new IOException("An error occurred cleaning up spill files in the large record handler.", ex)__		}_	};closes,all,structures,and,deletes,all,temporary,files,even,in,the,presence,of,failures,this,method,will,try,and,continue,closing,files,and,deleting,temporary,files,throws,ioexception,thrown,if,an,error,occurred,while,closing,deleting,the,files;public,void,close,throws,ioexception,throwable,ex,null,synchronized,this,if,closed,return,closed,true,if,records,out,file,null,try,records,out,file,close,records,out,file,null,catch,throwable,t,log,error,cannot,close,the,large,records,spill,file,t,ex,ex,null,t,ex,if,keys,out,file,null,try,keys,out,file,close,keys,out,file,null,catch,throwable,t,log,error,cannot,close,the,large,records,key,spill,file,t,ex,ex,null,t,ex,if,records,reader,null,try,records,reader,close,records,reader,null,catch,throwable,t,log,error,cannot,close,the,large,records,reader,t,ex,ex,null,t,ex,if,keys,reader,null,try,keys,reader,close,keys,reader,null,catch,throwable,t,log,error,cannot,close,the,large,records,key,reader,t,ex,ex,null,t,ex,if,records,channel,null,try,io,manager,delete,channel,records,channel,records,channel,null,catch,throwable,t,log,error,cannot,delete,the,large,records,spill,file,t,ex,ex,null,t,ex,if,keys,channel,null,try,io,manager,delete,channel,keys,channel,keys,channel,null,catch,throwable,t,log,error,cannot,delete,the,large,records,key,spill,file,t,ex,ex,null,t,ex,if,key,sorter,null,try,key,sorter,close,key,sorter,null,catch,throwable,t,log,error,cannot,properly,dispose,the,key,sorter,and,clean,up,its,temporary,files,t,ex,ex,null,t,ex,mem,manager,release,memory,record,counter,0,if,ex,null,throw,new,ioexception,an,error,occurred,cleaning,up,spill,files,in,the,large,record,handler,ex
LargeRecordHandler -> public void close() throws IOException;1423484372;Closes all structures and deletes all temporary files._Even in the presence of failures, this method will try and continue closing_files and deleting temporary files.__@throws IOException Thrown if an error occurred while closing/deleting the files.;public void close() throws IOException {_		_		_		_		Throwable ex = null__		_		synchronized (this) {_			_			if (closed) {_				return__			}_			closed = true__			_			_			if (recordsOutFile != null) {_				try {_					recordsOutFile.close()__					recordsOutFile = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysOutFile != null) {_				try {_					keysOutFile.close()__					keysOutFile = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records key spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (recordsReader != null) {_				try {_					recordsReader.close()__					recordsReader = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records reader.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysReader != null) {_				try {_					keysReader.close()__					keysReader = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records key reader.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (recordsChannel != null) {_				try {_					ioManager.deleteChannel(recordsChannel)__					recordsChannel = null__				} catch (Throwable t) {_					LOG.error("Cannot delete the large records spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysChannel != null) {_				try {_					ioManager.deleteChannel(keysChannel)__					keysChannel = null__				} catch (Throwable t) {_					LOG.error("Cannot delete the large records key spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (keySorter != null) {_				try {_					keySorter.close()__					keySorter = null__				} catch (Throwable t) {_					LOG.error("Cannot properly dispose the key sorter and clean up its temporary files.", t)__					ex = ex == null ? t : ex__				}_			}_			_			memManager.release(memory)__			_			recordCounter = 0__		}_		_		_		if (ex != null) { _			throw new IOException("An error occurred cleaning up spill files in the large record handler.", ex)__		}_	};closes,all,structures,and,deletes,all,temporary,files,even,in,the,presence,of,failures,this,method,will,try,and,continue,closing,files,and,deleting,temporary,files,throws,ioexception,thrown,if,an,error,occurred,while,closing,deleting,the,files;public,void,close,throws,ioexception,throwable,ex,null,synchronized,this,if,closed,return,closed,true,if,records,out,file,null,try,records,out,file,close,records,out,file,null,catch,throwable,t,log,error,cannot,close,the,large,records,spill,file,t,ex,ex,null,t,ex,if,keys,out,file,null,try,keys,out,file,close,keys,out,file,null,catch,throwable,t,log,error,cannot,close,the,large,records,key,spill,file,t,ex,ex,null,t,ex,if,records,reader,null,try,records,reader,close,records,reader,null,catch,throwable,t,log,error,cannot,close,the,large,records,reader,t,ex,ex,null,t,ex,if,keys,reader,null,try,keys,reader,close,keys,reader,null,catch,throwable,t,log,error,cannot,close,the,large,records,key,reader,t,ex,ex,null,t,ex,if,records,channel,null,try,io,manager,delete,channel,records,channel,records,channel,null,catch,throwable,t,log,error,cannot,delete,the,large,records,spill,file,t,ex,ex,null,t,ex,if,keys,channel,null,try,io,manager,delete,channel,keys,channel,keys,channel,null,catch,throwable,t,log,error,cannot,delete,the,large,records,key,spill,file,t,ex,ex,null,t,ex,if,key,sorter,null,try,key,sorter,close,key,sorter,null,catch,throwable,t,log,error,cannot,properly,dispose,the,key,sorter,and,clean,up,its,temporary,files,t,ex,ex,null,t,ex,mem,manager,release,memory,record,counter,0,if,ex,null,throw,new,ioexception,an,error,occurred,cleaning,up,spill,files,in,the,large,record,handler,ex
LargeRecordHandler -> public void close() throws IOException;1423570503;Closes all structures and deletes all temporary files._Even in the presence of failures, this method will try and continue closing_files and deleting temporary files.__@throws IOException Thrown if an error occurred while closing/deleting the files.;public void close() throws IOException {_		_		_		_		Throwable ex = null__		_		synchronized (this) {_			_			if (closed) {_				return__			}_			closed = true__			_			_			if (recordsOutFile != null) {_				try {_					recordsOutFile.close()__					recordsOutFile = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysOutFile != null) {_				try {_					keysOutFile.close()__					keysOutFile = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records key spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (recordsReader != null) {_				try {_					recordsReader.close()__					recordsReader = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records reader.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysReader != null) {_				try {_					keysReader.close()__					keysReader = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records key reader.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (recordsChannel != null) {_				try {_					ioManager.deleteChannel(recordsChannel)__					recordsChannel = null__				} catch (Throwable t) {_					LOG.error("Cannot delete the large records spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysChannel != null) {_				try {_					ioManager.deleteChannel(keysChannel)__					keysChannel = null__				} catch (Throwable t) {_					LOG.error("Cannot delete the large records key spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (keySorter != null) {_				try {_					keySorter.close()__					keySorter = null__				} catch (Throwable t) {_					LOG.error("Cannot properly dispose the key sorter and clean up its temporary files.", t)__					ex = ex == null ? t : ex__				}_			}_			_			memManager.release(memory)__			_			recordCounter = 0__		}_		_		_		if (ex != null) { _			throw new IOException("An error occurred cleaning up spill files in the large record handler.", ex)__		}_	};closes,all,structures,and,deletes,all,temporary,files,even,in,the,presence,of,failures,this,method,will,try,and,continue,closing,files,and,deleting,temporary,files,throws,ioexception,thrown,if,an,error,occurred,while,closing,deleting,the,files;public,void,close,throws,ioexception,throwable,ex,null,synchronized,this,if,closed,return,closed,true,if,records,out,file,null,try,records,out,file,close,records,out,file,null,catch,throwable,t,log,error,cannot,close,the,large,records,spill,file,t,ex,ex,null,t,ex,if,keys,out,file,null,try,keys,out,file,close,keys,out,file,null,catch,throwable,t,log,error,cannot,close,the,large,records,key,spill,file,t,ex,ex,null,t,ex,if,records,reader,null,try,records,reader,close,records,reader,null,catch,throwable,t,log,error,cannot,close,the,large,records,reader,t,ex,ex,null,t,ex,if,keys,reader,null,try,keys,reader,close,keys,reader,null,catch,throwable,t,log,error,cannot,close,the,large,records,key,reader,t,ex,ex,null,t,ex,if,records,channel,null,try,io,manager,delete,channel,records,channel,records,channel,null,catch,throwable,t,log,error,cannot,delete,the,large,records,spill,file,t,ex,ex,null,t,ex,if,keys,channel,null,try,io,manager,delete,channel,keys,channel,keys,channel,null,catch,throwable,t,log,error,cannot,delete,the,large,records,key,spill,file,t,ex,ex,null,t,ex,if,key,sorter,null,try,key,sorter,close,key,sorter,null,catch,throwable,t,log,error,cannot,properly,dispose,the,key,sorter,and,clean,up,its,temporary,files,t,ex,ex,null,t,ex,mem,manager,release,memory,record,counter,0,if,ex,null,throw,new,ioexception,an,error,occurred,cleaning,up,spill,files,in,the,large,record,handler,ex
LargeRecordHandler -> public void close() throws IOException;1441738685;Closes all structures and deletes all temporary files._Even in the presence of failures, this method will try and continue closing_files and deleting temporary files.__@throws IOException Thrown if an error occurred while closing/deleting the files.;public void close() throws IOException {_		_		_		_		Throwable ex = null__		_		synchronized (this) {_			_			if (closed) {_				return__			}_			closed = true__			_			_			if (recordsOutFile != null) {_				try {_					recordsOutFile.close()__					recordsOutFile = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysOutFile != null) {_				try {_					keysOutFile.close()__					keysOutFile = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records key spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (recordsReader != null) {_				try {_					recordsReader.close()__					recordsReader = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records reader.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysReader != null) {_				try {_					keysReader.close()__					keysReader = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records key reader.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (recordsChannel != null) {_				try {_					ioManager.deleteChannel(recordsChannel)__					recordsChannel = null__				} catch (Throwable t) {_					LOG.error("Cannot delete the large records spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysChannel != null) {_				try {_					ioManager.deleteChannel(keysChannel)__					keysChannel = null__				} catch (Throwable t) {_					LOG.error("Cannot delete the large records key spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (keySorter != null) {_				try {_					keySorter.close()__					keySorter = null__				} catch (Throwable t) {_					LOG.error("Cannot properly dispose the key sorter and clean up its temporary files.", t)__					ex = ex == null ? t : ex__				}_			}_			_			memManager.release(memory)__			_			recordCounter = 0__		}_		_		_		if (ex != null) { _			throw new IOException("An error occurred cleaning up spill files in the large record handler.", ex)__		}_	};closes,all,structures,and,deletes,all,temporary,files,even,in,the,presence,of,failures,this,method,will,try,and,continue,closing,files,and,deleting,temporary,files,throws,ioexception,thrown,if,an,error,occurred,while,closing,deleting,the,files;public,void,close,throws,ioexception,throwable,ex,null,synchronized,this,if,closed,return,closed,true,if,records,out,file,null,try,records,out,file,close,records,out,file,null,catch,throwable,t,log,error,cannot,close,the,large,records,spill,file,t,ex,ex,null,t,ex,if,keys,out,file,null,try,keys,out,file,close,keys,out,file,null,catch,throwable,t,log,error,cannot,close,the,large,records,key,spill,file,t,ex,ex,null,t,ex,if,records,reader,null,try,records,reader,close,records,reader,null,catch,throwable,t,log,error,cannot,close,the,large,records,reader,t,ex,ex,null,t,ex,if,keys,reader,null,try,keys,reader,close,keys,reader,null,catch,throwable,t,log,error,cannot,close,the,large,records,key,reader,t,ex,ex,null,t,ex,if,records,channel,null,try,io,manager,delete,channel,records,channel,records,channel,null,catch,throwable,t,log,error,cannot,delete,the,large,records,spill,file,t,ex,ex,null,t,ex,if,keys,channel,null,try,io,manager,delete,channel,keys,channel,keys,channel,null,catch,throwable,t,log,error,cannot,delete,the,large,records,key,spill,file,t,ex,ex,null,t,ex,if,key,sorter,null,try,key,sorter,close,key,sorter,null,catch,throwable,t,log,error,cannot,properly,dispose,the,key,sorter,and,clean,up,its,temporary,files,t,ex,ex,null,t,ex,mem,manager,release,memory,record,counter,0,if,ex,null,throw,new,ioexception,an,error,occurred,cleaning,up,spill,files,in,the,large,record,handler,ex
LargeRecordHandler -> public void close() throws IOException;1443522094;Closes all structures and deletes all temporary files._Even in the presence of failures, this method will try and continue closing_files and deleting temporary files.__@throws IOException Thrown if an error occurred while closing/deleting the files.;public void close() throws IOException {_		_		_		_		Throwable ex = null__		_		synchronized (this) {_			_			if (closed) {_				return__			}_			closed = true__			_			_			if (recordsOutFile != null) {_				try {_					recordsOutFile.close()__					recordsOutFile = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysOutFile != null) {_				try {_					keysOutFile.close()__					keysOutFile = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records key spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (recordsReader != null) {_				try {_					recordsReader.close()__					recordsReader = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records reader.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysReader != null) {_				try {_					keysReader.close()__					keysReader = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records key reader.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (recordsChannel != null) {_				try {_					ioManager.deleteChannel(recordsChannel)__					recordsChannel = null__				} catch (Throwable t) {_					LOG.error("Cannot delete the large records spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysChannel != null) {_				try {_					ioManager.deleteChannel(keysChannel)__					keysChannel = null__				} catch (Throwable t) {_					LOG.error("Cannot delete the large records key spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (keySorter != null) {_				try {_					keySorter.close()__					keySorter = null__				} catch (Throwable t) {_					LOG.error("Cannot properly dispose the key sorter and clean up its temporary files.", t)__					ex = ex == null ? t : ex__				}_			}_			_			memManager.release(memory)__			_			recordCounter = 0__		}_		_		_		if (ex != null) { _			throw new IOException("An error occurred cleaning up spill files in the large record handler.", ex)__		}_	};closes,all,structures,and,deletes,all,temporary,files,even,in,the,presence,of,failures,this,method,will,try,and,continue,closing,files,and,deleting,temporary,files,throws,ioexception,thrown,if,an,error,occurred,while,closing,deleting,the,files;public,void,close,throws,ioexception,throwable,ex,null,synchronized,this,if,closed,return,closed,true,if,records,out,file,null,try,records,out,file,close,records,out,file,null,catch,throwable,t,log,error,cannot,close,the,large,records,spill,file,t,ex,ex,null,t,ex,if,keys,out,file,null,try,keys,out,file,close,keys,out,file,null,catch,throwable,t,log,error,cannot,close,the,large,records,key,spill,file,t,ex,ex,null,t,ex,if,records,reader,null,try,records,reader,close,records,reader,null,catch,throwable,t,log,error,cannot,close,the,large,records,reader,t,ex,ex,null,t,ex,if,keys,reader,null,try,keys,reader,close,keys,reader,null,catch,throwable,t,log,error,cannot,close,the,large,records,key,reader,t,ex,ex,null,t,ex,if,records,channel,null,try,io,manager,delete,channel,records,channel,records,channel,null,catch,throwable,t,log,error,cannot,delete,the,large,records,spill,file,t,ex,ex,null,t,ex,if,keys,channel,null,try,io,manager,delete,channel,keys,channel,keys,channel,null,catch,throwable,t,log,error,cannot,delete,the,large,records,key,spill,file,t,ex,ex,null,t,ex,if,key,sorter,null,try,key,sorter,close,key,sorter,null,catch,throwable,t,log,error,cannot,properly,dispose,the,key,sorter,and,clean,up,its,temporary,files,t,ex,ex,null,t,ex,mem,manager,release,memory,record,counter,0,if,ex,null,throw,new,ioexception,an,error,occurred,cleaning,up,spill,files,in,the,large,record,handler,ex
LargeRecordHandler -> public void close() throws IOException;1465991918;Closes all structures and deletes all temporary files._Even in the presence of failures, this method will try and continue closing_files and deleting temporary files.__@throws IOException Thrown if an error occurred while closing/deleting the files.;public void close() throws IOException {_		_		_		_		Throwable ex = null__		_		synchronized (this) {_			_			if (closed) {_				return__			}_			closed = true__			_			_			if (recordsOutFile != null) {_				try {_					recordsOutFile.close()__					recordsOutFile = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysOutFile != null) {_				try {_					keysOutFile.close()__					keysOutFile = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records key spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (recordsReader != null) {_				try {_					recordsReader.close()__					recordsReader = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records reader.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysReader != null) {_				try {_					keysReader.close()__					keysReader = null__				} catch (Throwable t) {_					LOG.error("Cannot close the large records key reader.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (recordsChannel != null) {_				try {_					ioManager.deleteChannel(recordsChannel)__					recordsChannel = null__				} catch (Throwable t) {_					LOG.error("Cannot delete the large records spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			if (keysChannel != null) {_				try {_					ioManager.deleteChannel(keysChannel)__					keysChannel = null__				} catch (Throwable t) {_					LOG.error("Cannot delete the large records key spill file.", t)__					ex = ex == null ? t : ex__				}_			}_			_			_			if (keySorter != null) {_				try {_					keySorter.close()__					keySorter = null__				} catch (Throwable t) {_					LOG.error("Cannot properly dispose the key sorter and clean up its temporary files.", t)__					ex = ex == null ? t : ex__				}_			}_			_			memManager.release(memory)__			_			recordCounter = 0__		}_		_		_		if (ex != null) { _			throw new IOException("An error occurred cleaning up spill files in the large record handler.", ex)__		}_	};closes,all,structures,and,deletes,all,temporary,files,even,in,the,presence,of,failures,this,method,will,try,and,continue,closing,files,and,deleting,temporary,files,throws,ioexception,thrown,if,an,error,occurred,while,closing,deleting,the,files;public,void,close,throws,ioexception,throwable,ex,null,synchronized,this,if,closed,return,closed,true,if,records,out,file,null,try,records,out,file,close,records,out,file,null,catch,throwable,t,log,error,cannot,close,the,large,records,spill,file,t,ex,ex,null,t,ex,if,keys,out,file,null,try,keys,out,file,close,keys,out,file,null,catch,throwable,t,log,error,cannot,close,the,large,records,key,spill,file,t,ex,ex,null,t,ex,if,records,reader,null,try,records,reader,close,records,reader,null,catch,throwable,t,log,error,cannot,close,the,large,records,reader,t,ex,ex,null,t,ex,if,keys,reader,null,try,keys,reader,close,keys,reader,null,catch,throwable,t,log,error,cannot,close,the,large,records,key,reader,t,ex,ex,null,t,ex,if,records,channel,null,try,io,manager,delete,channel,records,channel,records,channel,null,catch,throwable,t,log,error,cannot,delete,the,large,records,spill,file,t,ex,ex,null,t,ex,if,keys,channel,null,try,io,manager,delete,channel,keys,channel,keys,channel,null,catch,throwable,t,log,error,cannot,delete,the,large,records,key,spill,file,t,ex,ex,null,t,ex,if,key,sorter,null,try,key,sorter,close,key,sorter,null,catch,throwable,t,log,error,cannot,properly,dispose,the,key,sorter,and,clean,up,its,temporary,files,t,ex,ex,null,t,ex,mem,manager,release,memory,record,counter,0,if,ex,null,throw,new,ioexception,an,error,occurred,cleaning,up,spill,files,in,the,large,record,handler,ex
