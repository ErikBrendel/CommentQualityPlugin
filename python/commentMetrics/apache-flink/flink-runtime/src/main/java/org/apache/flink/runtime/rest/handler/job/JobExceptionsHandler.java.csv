commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;4;;@Override protected JobExceptionsInfo handleRequest(HandlerRequest<EmptyRequestBody, JobMessageParameters> request, AccessExecutionGraph executionGraph) {     return createJobExceptionsInfo(executionGraph). }
false;public;1;7;;@Override public Collection<ArchivedJson> archiveJsonWithPath(AccessExecutionGraph graph) throws IOException {     ResponseBody json = createJobExceptionsInfo(graph).     String path = getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY, graph.getJobID().toString()).     return Collections.singletonList(new ArchivedJson(path, json)). }
false;private,static;1;33;;private static JobExceptionsInfo createJobExceptionsInfo(AccessExecutionGraph executionGraph) {     ErrorInfo rootException = executionGraph.getFailureInfo().     String rootExceptionMessage = null.     Long rootTimestamp = null.     if (rootException != null) {         rootExceptionMessage = rootException.getExceptionAsString().         rootTimestamp = rootException.getTimestamp().     }     List<JobExceptionsInfo.ExecutionExceptionInfo> taskExceptionList = new ArrayList<>().     boolean truncated = false.     for (AccessExecutionVertex task : executionGraph.getAllExecutionVertices()) {         String t = task.getFailureCauseAsString().         if (t != null && !t.equals(ExceptionUtils.STRINGIFIED_NULL_EXCEPTION)) {             if (taskExceptionList.size() >= MAX_NUMBER_EXCEPTION_TO_REPORT) {                 truncated = true.                 break.             }             TaskManagerLocation location = task.getCurrentAssignedResourceLocation().             String locationString = location != null ? location.getFQDNHostname() + ':' + location.dataPort() : "(unassigned)".             long timestamp = task.getStateTimestamp(ExecutionState.FAILED).             taskExceptionList.add(new JobExceptionsInfo.ExecutionExceptionInfo(t, task.getTaskNameWithSubtaskIndex(), locationString, timestamp == 0 ? -1 : timestamp)).         }     }     return new JobExceptionsInfo(rootExceptionMessage, rootTimestamp, taskExceptionList, truncated). }
