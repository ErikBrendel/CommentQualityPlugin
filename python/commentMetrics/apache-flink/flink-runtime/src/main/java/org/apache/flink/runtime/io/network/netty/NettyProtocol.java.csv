commented;modifiers;parameterAmount;loc;comment;code
true;public;0;12;/**  * Returns the server channel handlers.  *  * <pre>  * +-------------------------------------------------------------------+  * |                        SERVER CHANNEL PIPELINE                    |  * |                                                                   |  * |    +----------+----------+ (3) write  +----------------------+    |  * |    | Queue of queues     +----------->| Message encoder      |    |  * |    +----------+----------+            +-----------+----------+    |  * |              /|\                                 \|/              |  * |               | (2) enqueue                       |               |  * |    +----------+----------+                        |               |  * |    | Request handler     |                        |               |  * |    +----------+----------+                        |               |  * |              /|\                                  |               |  * |               |                                   |               |  * |   +-----------+-----------+                       |               |  * |   | Message+Frame decoder |                       |               |  * |   +-----------+-----------+                       |               |  * |              /|\                                  |               |  * +---------------+-----------------------------------+---------------+  * |               | (1) client request               \|/  * +---------------+-----------------------------------+---------------+  * |               |                                   |               |  * |       [ Socket.read() ]                    [ Socket.write() ]     |  * |                                                                   |  * |  Netty Internal I/O Threads (Transport Implementation)            |  * +-------------------------------------------------------------------+  * </pre>  *  * @return channel handlers  */ ;/**  * Returns the server channel handlers.  *  * <pre>  * +-------------------------------------------------------------------+  * |                        SERVER CHANNEL PIPELINE                    |  * |                                                                   |  * |    +----------+----------+ (3) write  +----------------------+    |  * |    | Queue of queues     +----------->| Message encoder      |    |  * |    +----------+----------+            +-----------+----------+    |  * |              /|\                                 \|/              |  * |               | (2) enqueue                       |               |  * |    +----------+----------+                        |               |  * |    | Request handler     |                        |               |  * |    +----------+----------+                        |               |  * |              /|\                                  |               |  * |               |                                   |               |  * |   +-----------+-----------+                       |               |  * |   | Message+Frame decoder |                       |               |  * |   +-----------+-----------+                       |               |  * |              /|\                                  |               |  * +---------------+-----------------------------------+---------------+  * |               | (1) client request               \|/  * +---------------+-----------------------------------+---------------+  * |               |                                   |               |  * |       [ Socket.read() ]                    [ Socket.write() ]     |  * |                                                                   |  * |  Netty Internal I/O Threads (Transport Implementation)            |  * +-------------------------------------------------------------------+  * </pre>  *  * @return channel handlers  */ public ChannelHandler[] getServerChannelHandlers() {     PartitionRequestQueue queueOfPartitionQueues = new PartitionRequestQueue().     PartitionRequestServerHandler serverHandler = new PartitionRequestServerHandler(partitionProvider, taskEventDispatcher, queueOfPartitionQueues, creditBasedEnabled).     return new ChannelHandler[] { messageEncoder, new NettyMessage.NettyMessageDecoder(!creditBasedEnabled), serverHandler, queueOfPartitionQueues }. }
true;public;0;9;/**  * Returns the client channel handlers.  *  * <pre>  *     +-----------+----------+            +----------------------+  *     | Remote input channel |            | request client       |  *     +-----------+----------+            +-----------+----------+  *                 |                                   | (1) write  * +---------------+-----------------------------------+---------------+  * |               |     CLIENT CHANNEL PIPELINE       |               |  * |               |                                  \|/              |  * |    +----------+----------+            +----------------------+    |  * |    | Request handler     +            | Message encoder      |    |  * |    +----------+----------+            +-----------+----------+    |  * |              /|\                                 \|/              |  * |               |                                   |               |  * |    +----------+------------+                      |               |  * |    | Message+Frame decoder |                      |               |  * |    +----------+------------+                      |               |  * |              /|\                                  |               |  * +---------------+-----------------------------------+---------------+  * |               | (3) server response              \|/ (2) client request  * +---------------+-----------------------------------+---------------+  * |               |                                   |               |  * |       [ Socket.read() ]                    [ Socket.write() ]     |  * |                                                                   |  * |  Netty Internal I/O Threads (Transport Implementation)            |  * +-------------------------------------------------------------------+  * </pre>  *  * @return channel handlers  */ ;/**  * Returns the client channel handlers.  *  * <pre>  *     +-----------+----------+            +----------------------+  *     | Remote input channel |            | request client       |  *     +-----------+----------+            +-----------+----------+  *                 |                                   | (1) write  * +---------------+-----------------------------------+---------------+  * |               |     CLIENT CHANNEL PIPELINE       |               |  * |               |                                  \|/              |  * |    +----------+----------+            +----------------------+    |  * |    | Request handler     +            | Message encoder      |    |  * |    +----------+----------+            +-----------+----------+    |  * |              /|\                                 \|/              |  * |               |                                   |               |  * |    +----------+------------+                      |               |  * |    | Message+Frame decoder |                      |               |  * |    +----------+------------+                      |               |  * |              /|\                                  |               |  * +---------------+-----------------------------------+---------------+  * |               | (3) server response              \|/ (2) client request  * +---------------+-----------------------------------+---------------+  * |               |                                   |               |  * |       [ Socket.read() ]                    [ Socket.write() ]     |  * |                                                                   |  * |  Netty Internal I/O Threads (Transport Implementation)            |  * +-------------------------------------------------------------------+  * </pre>  *  * @return channel handlers  */ public ChannelHandler[] getClientChannelHandlers() {     NetworkClientHandler networkClientHandler = creditBasedEnabled ? new CreditBasedPartitionRequestClientHandler() : new PartitionRequestClientHandler().     return new ChannelHandler[] { messageEncoder, new NettyMessage.NettyMessageDecoder(!creditBasedEnabled), networkClientHandler }. }
