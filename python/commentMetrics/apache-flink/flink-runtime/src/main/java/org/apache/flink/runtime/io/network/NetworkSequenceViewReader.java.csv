commented;modifiers;parameterAmount;loc;comment;code
false;;3;4;;void requestSubpartitionView(ResultPartitionProvider partitionProvider, ResultPartitionID resultPartitionId, int subPartitionIndex) throws IOException.
false;;0;1;;BufferAndAvailability getNextBuffer() throws IOException, InterruptedException.
true;;1;1;/**  * The credits from consumer are added in incremental way.  *  * @param creditDeltas The credit deltas  */ ;/**  * The credits from consumer are added in incremental way.  *  * @param creditDeltas The credit deltas  */ void addCredit(int creditDeltas).
true;;0;1;/**  * Checks whether this reader is available or not.  *  * @return True if the reader is available.  */ ;/**  * Checks whether this reader is available or not.  *  * @return True if the reader is available.  */ boolean isAvailable().
false;;0;1;;boolean isRegisteredAsAvailable().
true;;1;1;/**  * Updates the value to indicate whether the reader is enqueued in the pipeline or not.  *  * @param isRegisteredAvailable True if this reader is already enqueued in the pipeline.  */ ;/**  * Updates the value to indicate whether the reader is enqueued in the pipeline or not.  *  * @param isRegisteredAvailable True if this reader is already enqueued in the pipeline.  */ void setRegisteredAsAvailable(boolean isRegisteredAvailable).
false;;0;1;;void notifySubpartitionConsumed() throws IOException.
false;;0;1;;boolean isReleased().
false;;0;1;;void releaseAllResources() throws IOException.
false;;0;1;;Throwable getFailureCause().
false;;0;1;;InputChannelID getReceiverId().
false;;0;1;;int getSequenceNumber().
