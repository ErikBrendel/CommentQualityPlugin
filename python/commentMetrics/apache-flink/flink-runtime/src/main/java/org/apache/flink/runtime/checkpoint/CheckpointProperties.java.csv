# id;timestamp;commentText;codeText;commentWords;codeWords
CheckpointProperties -> public boolean externalizeCheckpoint();1476432306;Returns whether the checkpoint should be persisted externally.__@return <code>true</code> if the checkpoint should be persisted_externally_ <code>false</code> otherwise.__@see PendingCheckpoint;public boolean externalizeCheckpoint() {_		return externalize__	};returns,whether,the,checkpoint,should,be,persisted,externally,return,code,true,code,if,the,checkpoint,should,be,persisted,externally,code,false,code,otherwise,see,pending,checkpoint;public,boolean,externalize,checkpoint,return,externalize
CheckpointProperties -> public boolean externalizeCheckpoint();1481618369;Returns whether the checkpoint should be persisted externally.__@return <code>true</code> if the checkpoint should be persisted_externally_ <code>false</code> otherwise.__@see PendingCheckpoint;public boolean externalizeCheckpoint() {_		return externalize__	};returns,whether,the,checkpoint,should,be,persisted,externally,return,code,true,code,if,the,checkpoint,should,be,persisted,externally,code,false,code,otherwise,see,pending,checkpoint;public,boolean,externalize,checkpoint,return,externalize
CheckpointProperties -> public boolean externalizeCheckpoint();1484038132;Returns whether the checkpoint should be persisted externally.__@return <code>true</code> if the checkpoint should be persisted_externally_ <code>false</code> otherwise.__@see PendingCheckpoint;public boolean externalizeCheckpoint() {_		return externalize__	};returns,whether,the,checkpoint,should,be,persisted,externally,return,code,true,code,if,the,checkpoint,should,be,persisted,externally,code,false,code,otherwise,see,pending,checkpoint;public,boolean,externalize,checkpoint,return,externalize
CheckpointProperties -> boolean forceCheckpoint();1487762095;Returns whether the checkpoint should be forced.__<p>Forced checkpoints ignore the configured maximum number of concurrent_checkpoints and minimum time between checkpoints. Furthermore, they are_not subsumed by more recent checkpoints as long as they are pending.__@return <code>true</code> if the checkpoint should be forced__<code>false</code> otherwise.__@see CheckpointCoordinator_@see PendingCheckpoint;boolean forceCheckpoint() {_		return forced__	};returns,whether,the,checkpoint,should,be,forced,p,forced,checkpoints,ignore,the,configured,maximum,number,of,concurrent,checkpoints,and,minimum,time,between,checkpoints,furthermore,they,are,not,subsumed,by,more,recent,checkpoints,as,long,as,they,are,pending,return,code,true,code,if,the,checkpoint,should,be,forced,code,false,code,otherwise,see,checkpoint,coordinator,see,pending,checkpoint;boolean,force,checkpoint,return,forced
CheckpointProperties -> boolean forceCheckpoint();1495527860;Returns whether the checkpoint should be forced.__<p>Forced checkpoints ignore the configured maximum number of concurrent_checkpoints and minimum time between checkpoints. Furthermore, they are_not subsumed by more recent checkpoints as long as they are pending.__@return <code>true</code> if the checkpoint should be forced__<code>false</code> otherwise.__@see CheckpointCoordinator_@see PendingCheckpoint;boolean forceCheckpoint() {_		return forced__	};returns,whether,the,checkpoint,should,be,forced,p,forced,checkpoints,ignore,the,configured,maximum,number,of,concurrent,checkpoints,and,minimum,time,between,checkpoints,furthermore,they,are,not,subsumed,by,more,recent,checkpoints,as,long,as,they,are,pending,return,code,true,code,if,the,checkpoint,should,be,forced,code,false,code,otherwise,see,checkpoint,coordinator,see,pending,checkpoint;boolean,force,checkpoint,return,forced
CheckpointProperties -> boolean forceCheckpoint();1502802710;Returns whether the checkpoint should be forced.__<p>Forced checkpoints ignore the configured maximum number of concurrent_checkpoints and minimum time between checkpoints. Furthermore, they are_not subsumed by more recent checkpoints as long as they are pending.__@return <code>true</code> if the checkpoint should be forced__<code>false</code> otherwise.__@see CheckpointCoordinator_@see PendingCheckpoint;boolean forceCheckpoint() {_		return forced__	};returns,whether,the,checkpoint,should,be,forced,p,forced,checkpoints,ignore,the,configured,maximum,number,of,concurrent,checkpoints,and,minimum,time,between,checkpoints,furthermore,they,are,not,subsumed,by,more,recent,checkpoints,as,long,as,they,are,pending,return,code,true,code,if,the,checkpoint,should,be,forced,code,false,code,otherwise,see,checkpoint,coordinator,see,pending,checkpoint;boolean,force,checkpoint,return,forced
CheckpointProperties -> boolean forceCheckpoint();1516295283;Returns whether the checkpoint should be forced.__<p>Forced checkpoints ignore the configured maximum number of concurrent_checkpoints and minimum time between checkpoints. Furthermore, they are_not subsumed by more recent checkpoints as long as they are pending.__@return <code>true</code> if the checkpoint should be forced__<code>false</code> otherwise.__@see CheckpointCoordinator_@see PendingCheckpoint;boolean forceCheckpoint() {_		return forced__	};returns,whether,the,checkpoint,should,be,forced,p,forced,checkpoints,ignore,the,configured,maximum,number,of,concurrent,checkpoints,and,minimum,time,between,checkpoints,furthermore,they,are,not,subsumed,by,more,recent,checkpoints,as,long,as,they,are,pending,return,code,true,code,if,the,checkpoint,should,be,forced,code,false,code,otherwise,see,checkpoint,coordinator,see,pending,checkpoint;boolean,force,checkpoint,return,forced
CheckpointProperties -> boolean forceCheckpoint();1517489694;Returns whether the checkpoint should be forced.__<p>Forced checkpoints ignore the configured maximum number of concurrent_checkpoints and minimum time between checkpoints. Furthermore, they are_not subsumed by more recent checkpoints as long as they are pending.__@return <code>true</code> if the checkpoint should be forced__<code>false</code> otherwise.__@see CheckpointCoordinator_@see PendingCheckpoint;boolean forceCheckpoint() {_		return forced__	};returns,whether,the,checkpoint,should,be,forced,p,forced,checkpoints,ignore,the,configured,maximum,number,of,concurrent,checkpoints,and,minimum,time,between,checkpoints,furthermore,they,are,not,subsumed,by,more,recent,checkpoints,as,long,as,they,are,pending,return,code,true,code,if,the,checkpoint,should,be,forced,code,false,code,otherwise,see,checkpoint,coordinator,see,pending,checkpoint;boolean,force,checkpoint,return,forced
CheckpointProperties -> boolean discardOnSubsumed();1487762095;Returns whether the checkpoint should be discarded when it is subsumed.__<p>A checkpoint is subsumed when the maximum number of retained_checkpoints is reached and a more recent checkpoint completes..__@return <code>true</code> if the checkpoint should be discarded when it_is subsumed_ <code>false</code> otherwise.__@see CompletedCheckpointStore;boolean discardOnSubsumed() {_		return discardSubsumed__	};returns,whether,the,checkpoint,should,be,discarded,when,it,is,subsumed,p,a,checkpoint,is,subsumed,when,the,maximum,number,of,retained,checkpoints,is,reached,and,a,more,recent,checkpoint,completes,return,code,true,code,if,the,checkpoint,should,be,discarded,when,it,is,subsumed,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,subsumed,return,discard,subsumed
CheckpointProperties -> boolean discardOnSubsumed();1495527860;Returns whether the checkpoint should be discarded when it is subsumed.__<p>A checkpoint is subsumed when the maximum number of retained_checkpoints is reached and a more recent checkpoint completes..__@return <code>true</code> if the checkpoint should be discarded when it_is subsumed_ <code>false</code> otherwise.__@see CompletedCheckpointStore;boolean discardOnSubsumed() {_		return discardSubsumed__	};returns,whether,the,checkpoint,should,be,discarded,when,it,is,subsumed,p,a,checkpoint,is,subsumed,when,the,maximum,number,of,retained,checkpoints,is,reached,and,a,more,recent,checkpoint,completes,return,code,true,code,if,the,checkpoint,should,be,discarded,when,it,is,subsumed,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,subsumed,return,discard,subsumed
CheckpointProperties -> boolean discardOnSubsumed();1502802710;Returns whether the checkpoint should be discarded when it is subsumed.__<p>A checkpoint is subsumed when the maximum number of retained_checkpoints is reached and a more recent checkpoint completes..__@return <code>true</code> if the checkpoint should be discarded when it_is subsumed_ <code>false</code> otherwise.__@see CompletedCheckpointStore;boolean discardOnSubsumed() {_		return discardSubsumed__	};returns,whether,the,checkpoint,should,be,discarded,when,it,is,subsumed,p,a,checkpoint,is,subsumed,when,the,maximum,number,of,retained,checkpoints,is,reached,and,a,more,recent,checkpoint,completes,return,code,true,code,if,the,checkpoint,should,be,discarded,when,it,is,subsumed,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,subsumed,return,discard,subsumed
CheckpointProperties -> boolean discardOnSubsumed();1516295283;Returns whether the checkpoint should be discarded when it is subsumed.__<p>A checkpoint is subsumed when the maximum number of retained_checkpoints is reached and a more recent checkpoint completes..__@return <code>true</code> if the checkpoint should be discarded when it_is subsumed_ <code>false</code> otherwise.__@see CompletedCheckpointStore;boolean discardOnSubsumed() {_		return discardSubsumed__	};returns,whether,the,checkpoint,should,be,discarded,when,it,is,subsumed,p,a,checkpoint,is,subsumed,when,the,maximum,number,of,retained,checkpoints,is,reached,and,a,more,recent,checkpoint,completes,return,code,true,code,if,the,checkpoint,should,be,discarded,when,it,is,subsumed,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,subsumed,return,discard,subsumed
CheckpointProperties -> boolean discardOnSubsumed();1517489694;Returns whether the checkpoint should be discarded when it is subsumed.__<p>A checkpoint is subsumed when the maximum number of retained_checkpoints is reached and a more recent checkpoint completes..__@return <code>true</code> if the checkpoint should be discarded when it_is subsumed_ <code>false</code> otherwise.__@see CompletedCheckpointStore;boolean discardOnSubsumed() {_		return discardSubsumed__	};returns,whether,the,checkpoint,should,be,discarded,when,it,is,subsumed,p,a,checkpoint,is,subsumed,when,the,maximum,number,of,retained,checkpoints,is,reached,and,a,more,recent,checkpoint,completes,return,code,true,code,if,the,checkpoint,should,be,discarded,when,it,is,subsumed,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,subsumed,return,discard,subsumed
CheckpointProperties -> boolean discardOnJobFinished();1487762095;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#FINISHED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#FINISHED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;boolean discardOnJobFinished() {_		return discardFinished__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,finished,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,finished,state,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,job,finished,return,discard,finished
CheckpointProperties -> boolean discardOnJobFinished();1495527860;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#FINISHED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#FINISHED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;boolean discardOnJobFinished() {_		return discardFinished__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,finished,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,finished,state,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,job,finished,return,discard,finished
CheckpointProperties -> boolean discardOnJobFinished();1502802710;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#FINISHED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#FINISHED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;boolean discardOnJobFinished() {_		return discardFinished__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,finished,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,finished,state,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,job,finished,return,discard,finished
CheckpointProperties -> boolean discardOnJobFinished();1516295283;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#FINISHED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#FINISHED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;boolean discardOnJobFinished() {_		return discardFinished__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,finished,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,finished,state,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,job,finished,return,discard,finished
CheckpointProperties -> boolean discardOnJobFinished();1517489694;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#FINISHED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#FINISHED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;boolean discardOnJobFinished() {_		return discardFinished__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,finished,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,finished,state,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,job,finished,return,discard,finished
CheckpointProperties -> boolean externalizeCheckpoint();1487762095;Returns whether the checkpoint should be persisted externally.__@return <code>true</code> if the checkpoint should be persisted_externally_ <code>false</code> otherwise.__@see PendingCheckpoint;boolean externalizeCheckpoint() {_		return externalize__	};returns,whether,the,checkpoint,should,be,persisted,externally,return,code,true,code,if,the,checkpoint,should,be,persisted,externally,code,false,code,otherwise,see,pending,checkpoint;boolean,externalize,checkpoint,return,externalize
CheckpointProperties -> boolean externalizeCheckpoint();1495527860;Returns whether the checkpoint should be persisted externally.__@return <code>true</code> if the checkpoint should be persisted_externally_ <code>false</code> otherwise.__@see PendingCheckpoint;boolean externalizeCheckpoint() {_		return externalize__	};returns,whether,the,checkpoint,should,be,persisted,externally,return,code,true,code,if,the,checkpoint,should,be,persisted,externally,code,false,code,otherwise,see,pending,checkpoint;boolean,externalize,checkpoint,return,externalize
CheckpointProperties -> boolean externalizeCheckpoint();1502802710;Returns whether the checkpoint should be persisted externally.__@return <code>true</code> if the checkpoint should be persisted_externally_ <code>false</code> otherwise.__@see PendingCheckpoint;boolean externalizeCheckpoint() {_		return externalize__	};returns,whether,the,checkpoint,should,be,persisted,externally,return,code,true,code,if,the,checkpoint,should,be,persisted,externally,code,false,code,otherwise,see,pending,checkpoint;boolean,externalize,checkpoint,return,externalize
CheckpointProperties -> public boolean discardOnJobFinished();1476432306;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#FINISHED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#FINISHED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;public boolean discardOnJobFinished() {_		return discardFinished__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,finished,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,finished,state,code,false,code,otherwise,see,completed,checkpoint,store;public,boolean,discard,on,job,finished,return,discard,finished
CheckpointProperties -> public boolean discardOnJobFinished();1481618369;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#FINISHED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#FINISHED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;public boolean discardOnJobFinished() {_		return discardFinished__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,finished,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,finished,state,code,false,code,otherwise,see,completed,checkpoint,store;public,boolean,discard,on,job,finished,return,discard,finished
CheckpointProperties -> public boolean discardOnJobFinished();1484038132;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#FINISHED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#FINISHED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;public boolean discardOnJobFinished() {_		return discardFinished__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,finished,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,finished,state,code,false,code,otherwise,see,completed,checkpoint,store;public,boolean,discard,on,job,finished,return,discard,finished
CheckpointProperties -> boolean discardOnJobFailed();1487762095;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#FAILED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#FAILED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;boolean discardOnJobFailed() {_		return discardFailed__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,failed,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,failed,state,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,job,failed,return,discard,failed
CheckpointProperties -> boolean discardOnJobFailed();1495527860;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#FAILED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#FAILED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;boolean discardOnJobFailed() {_		return discardFailed__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,failed,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,failed,state,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,job,failed,return,discard,failed
CheckpointProperties -> boolean discardOnJobFailed();1502802710;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#FAILED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#FAILED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;boolean discardOnJobFailed() {_		return discardFailed__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,failed,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,failed,state,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,job,failed,return,discard,failed
CheckpointProperties -> boolean discardOnJobFailed();1516295283;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#FAILED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#FAILED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;boolean discardOnJobFailed() {_		return discardFailed__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,failed,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,failed,state,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,job,failed,return,discard,failed
CheckpointProperties -> boolean discardOnJobFailed();1517489694;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#FAILED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#FAILED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;boolean discardOnJobFailed() {_		return discardFailed__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,failed,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,failed,state,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,job,failed,return,discard,failed
CheckpointProperties -> boolean discardOnJobSuspended();1487762095;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#SUSPENDED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#SUSPENDED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;boolean discardOnJobSuspended() {_		return discardSuspended__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,suspended,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,suspended,state,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,job,suspended,return,discard,suspended
CheckpointProperties -> boolean discardOnJobSuspended();1495527860;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#SUSPENDED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#SUSPENDED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;boolean discardOnJobSuspended() {_		return discardSuspended__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,suspended,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,suspended,state,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,job,suspended,return,discard,suspended
CheckpointProperties -> boolean discardOnJobSuspended();1502802710;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#SUSPENDED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#SUSPENDED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;boolean discardOnJobSuspended() {_		return discardSuspended__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,suspended,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,suspended,state,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,job,suspended,return,discard,suspended
CheckpointProperties -> boolean discardOnJobSuspended();1516295283;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#SUSPENDED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#SUSPENDED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;boolean discardOnJobSuspended() {_		return discardSuspended__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,suspended,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,suspended,state,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,job,suspended,return,discard,suspended
CheckpointProperties -> boolean discardOnJobSuspended();1517489694;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#SUSPENDED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#SUSPENDED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;boolean discardOnJobSuspended() {_		return discardSuspended__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,suspended,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,suspended,state,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,job,suspended,return,discard,suspended
CheckpointProperties -> public static CheckpointProperties forStandardCheckpoint();1476432306;Creates the checkpoint properties for a regular checkpoint.__<p>Regular checkpoints are not forced and not persisted externally. They_are garbage collected automatically.__@return Checkpoint properties for a regular checkpoint.;public static CheckpointProperties forStandardCheckpoint() {_		return new CheckpointProperties(false, false, true, true, true, true, true)__	};creates,the,checkpoint,properties,for,a,regular,checkpoint,p,regular,checkpoints,are,not,forced,and,not,persisted,externally,they,are,garbage,collected,automatically,return,checkpoint,properties,for,a,regular,checkpoint;public,static,checkpoint,properties,for,standard,checkpoint,return,new,checkpoint,properties,false,false,true,true,true,true,true
CheckpointProperties -> public static CheckpointProperties forStandardCheckpoint();1481618369;Creates the checkpoint properties for a regular checkpoint.__<p>Regular checkpoints are not forced and not persisted externally. They_are garbage collected automatically.__@return Checkpoint properties for a regular checkpoint.;public static CheckpointProperties forStandardCheckpoint() {_		return new CheckpointProperties(false, false, true, true, true, true, true)__	};creates,the,checkpoint,properties,for,a,regular,checkpoint,p,regular,checkpoints,are,not,forced,and,not,persisted,externally,they,are,garbage,collected,automatically,return,checkpoint,properties,for,a,regular,checkpoint;public,static,checkpoint,properties,for,standard,checkpoint,return,new,checkpoint,properties,false,false,true,true,true,true,true
CheckpointProperties -> public static CheckpointProperties forStandardCheckpoint();1484038132;Creates the checkpoint properties for a regular checkpoint.__<p>Regular checkpoints are not forced and not persisted externally. They_are garbage collected automatically.__@return Checkpoint properties for a regular checkpoint.;public static CheckpointProperties forStandardCheckpoint() {_		return STANDARD_CHECKPOINT__	};creates,the,checkpoint,properties,for,a,regular,checkpoint,p,regular,checkpoints,are,not,forced,and,not,persisted,externally,they,are,garbage,collected,automatically,return,checkpoint,properties,for,a,regular,checkpoint;public,static,checkpoint,properties,for,standard,checkpoint,return
CheckpointProperties -> public static CheckpointProperties forStandardCheckpoint();1487762095;Creates the checkpoint properties for a regular checkpoint.__<p>Regular checkpoints are not forced and not persisted externally. They_are garbage collected automatically.__@return Checkpoint properties for a regular checkpoint.;public static CheckpointProperties forStandardCheckpoint() {_		return STANDARD_CHECKPOINT__	};creates,the,checkpoint,properties,for,a,regular,checkpoint,p,regular,checkpoints,are,not,forced,and,not,persisted,externally,they,are,garbage,collected,automatically,return,checkpoint,properties,for,a,regular,checkpoint;public,static,checkpoint,properties,for,standard,checkpoint,return
CheckpointProperties -> public static CheckpointProperties forStandardCheckpoint();1495527860;Creates the checkpoint properties for a regular checkpoint.__<p>Regular checkpoints are not forced and not persisted externally. They_are garbage collected automatically.__@return Checkpoint properties for a regular checkpoint.;public static CheckpointProperties forStandardCheckpoint() {_		return STANDARD_CHECKPOINT__	};creates,the,checkpoint,properties,for,a,regular,checkpoint,p,regular,checkpoints,are,not,forced,and,not,persisted,externally,they,are,garbage,collected,automatically,return,checkpoint,properties,for,a,regular,checkpoint;public,static,checkpoint,properties,for,standard,checkpoint,return
CheckpointProperties -> public static CheckpointProperties forStandardCheckpoint();1502802710;Creates the checkpoint properties for a regular checkpoint.__<p>Regular checkpoints are not forced and not persisted externally. They_are garbage collected automatically.__@return Checkpoint properties for a regular checkpoint.;public static CheckpointProperties forStandardCheckpoint() {_		return STANDARD_CHECKPOINT__	};creates,the,checkpoint,properties,for,a,regular,checkpoint,p,regular,checkpoints,are,not,forced,and,not,persisted,externally,they,are,garbage,collected,automatically,return,checkpoint,properties,for,a,regular,checkpoint;public,static,checkpoint,properties,for,standard,checkpoint,return
CheckpointProperties -> public boolean discardOnJobCancelled();1476432306;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#CANCELED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#CANCELED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;public boolean discardOnJobCancelled() {_		return discardCancelled__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,canceled,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,canceled,state,code,false,code,otherwise,see,completed,checkpoint,store;public,boolean,discard,on,job,cancelled,return,discard,cancelled
CheckpointProperties -> public boolean discardOnJobCancelled();1481618369;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#CANCELED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#CANCELED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;public boolean discardOnJobCancelled() {_		return discardCancelled__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,canceled,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,canceled,state,code,false,code,otherwise,see,completed,checkpoint,store;public,boolean,discard,on,job,cancelled,return,discard,cancelled
CheckpointProperties -> public boolean discardOnJobCancelled();1484038132;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#CANCELED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#CANCELED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;public boolean discardOnJobCancelled() {_		return discardCancelled__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,canceled,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,canceled,state,code,false,code,otherwise,see,completed,checkpoint,store;public,boolean,discard,on,job,cancelled,return,discard,cancelled
CheckpointProperties -> public static CheckpointProperties forCheckpoint(CheckpointRetentionPolicy policy);1516295283;Creates the checkpoint properties for a checkpoint.__<p>Checkpoints may be queued in case too many other checkpoints are currently happening._They are garbage collected automatically, except when the owning job_terminates in state {@link JobStatus#FAILED}. The user is required to_configure the clean up behaviour on job cancellation.__@return Checkpoint properties for an external checkpoint.;public static CheckpointProperties forCheckpoint(CheckpointRetentionPolicy policy) {_		switch (policy) {_			case NEVER_RETAIN_AFTER_TERMINATION:_				return CHECKPOINT_NEVER_RETAINED__			case RETAIN_ON_FAILURE:_				return CHECKPOINT_RETAINED_ON_FAILURE__			case RETAIN_ON_CANCELLATION:_				return CHECKPOINT_RETAINED_ON_CANCELLATION__			default:_				throw new IllegalArgumentException("unknown policy: " + policy)__		}_	};creates,the,checkpoint,properties,for,a,checkpoint,p,checkpoints,may,be,queued,in,case,too,many,other,checkpoints,are,currently,happening,they,are,garbage,collected,automatically,except,when,the,owning,job,terminates,in,state,link,job,status,failed,the,user,is,required,to,configure,the,clean,up,behaviour,on,job,cancellation,return,checkpoint,properties,for,an,external,checkpoint;public,static,checkpoint,properties,for,checkpoint,checkpoint,retention,policy,policy,switch,policy,case,return,case,return,case,return,default,throw,new,illegal,argument,exception,unknown,policy,policy
CheckpointProperties -> public static CheckpointProperties forCheckpoint(CheckpointRetentionPolicy policy);1517489694;Creates the checkpoint properties for a checkpoint.__<p>Checkpoints may be queued in case too many other checkpoints are currently happening._They are garbage collected automatically, except when the owning job_terminates in state {@link JobStatus#FAILED}. The user is required to_configure the clean up behaviour on job cancellation.__@return Checkpoint properties for an external checkpoint.;public static CheckpointProperties forCheckpoint(CheckpointRetentionPolicy policy) {_		switch (policy) {_			case NEVER_RETAIN_AFTER_TERMINATION:_				return CHECKPOINT_NEVER_RETAINED__			case RETAIN_ON_FAILURE:_				return CHECKPOINT_RETAINED_ON_FAILURE__			case RETAIN_ON_CANCELLATION:_				return CHECKPOINT_RETAINED_ON_CANCELLATION__			default:_				throw new IllegalArgumentException("unknown policy: " + policy)__		}_	};creates,the,checkpoint,properties,for,a,checkpoint,p,checkpoints,may,be,queued,in,case,too,many,other,checkpoints,are,currently,happening,they,are,garbage,collected,automatically,except,when,the,owning,job,terminates,in,state,link,job,status,failed,the,user,is,required,to,configure,the,clean,up,behaviour,on,job,cancellation,return,checkpoint,properties,for,an,external,checkpoint;public,static,checkpoint,properties,for,checkpoint,checkpoint,retention,policy,policy,switch,policy,case,return,case,return,case,return,default,throw,new,illegal,argument,exception,unknown,policy,policy
CheckpointProperties -> public static CheckpointProperties forStandardSavepoint();1476432306;Creates the checkpoint properties for a (manually triggered) savepoint.__<p>Savepoints are forced and persisted externally. They have to be_garbage collected manually.__@return Checkpoint properties for a (manually triggered) savepoint.;public static CheckpointProperties forStandardSavepoint() {_		return new CheckpointProperties(true, true, false, false, false, false, false)__	};creates,the,checkpoint,properties,for,a,manually,triggered,savepoint,p,savepoints,are,forced,and,persisted,externally,they,have,to,be,garbage,collected,manually,return,checkpoint,properties,for,a,manually,triggered,savepoint;public,static,checkpoint,properties,for,standard,savepoint,return,new,checkpoint,properties,true,true,false,false,false,false,false
CheckpointProperties -> public static CheckpointProperties forStandardSavepoint();1481618369;Creates the checkpoint properties for a (manually triggered) savepoint.__<p>Savepoints are forced and persisted externally. They have to be_garbage collected manually.__@return Checkpoint properties for a (manually triggered) savepoint.;public static CheckpointProperties forStandardSavepoint() {_		return new CheckpointProperties(true, true, false, false, false, false, false)__	};creates,the,checkpoint,properties,for,a,manually,triggered,savepoint,p,savepoints,are,forced,and,persisted,externally,they,have,to,be,garbage,collected,manually,return,checkpoint,properties,for,a,manually,triggered,savepoint;public,static,checkpoint,properties,for,standard,savepoint,return,new,checkpoint,properties,true,true,false,false,false,false,false
CheckpointProperties -> public static CheckpointProperties forStandardSavepoint();1484038132;Creates the checkpoint properties for a (manually triggered) savepoint.__<p>Savepoints are forced and persisted externally. They have to be_garbage collected manually.__@return Checkpoint properties for a (manually triggered) savepoint.;public static CheckpointProperties forStandardSavepoint() {_		return STANDARD_SAVEPOINT__	};creates,the,checkpoint,properties,for,a,manually,triggered,savepoint,p,savepoints,are,forced,and,persisted,externally,they,have,to,be,garbage,collected,manually,return,checkpoint,properties,for,a,manually,triggered,savepoint;public,static,checkpoint,properties,for,standard,savepoint,return
CheckpointProperties -> public static CheckpointProperties forStandardSavepoint();1487762095;Creates the checkpoint properties for a (manually triggered) savepoint.__<p>Savepoints are forced and persisted externally. They have to be_garbage collected manually.__@return Checkpoint properties for a (manually triggered) savepoint.;public static CheckpointProperties forStandardSavepoint() {_		return STANDARD_SAVEPOINT__	};creates,the,checkpoint,properties,for,a,manually,triggered,savepoint,p,savepoints,are,forced,and,persisted,externally,they,have,to,be,garbage,collected,manually,return,checkpoint,properties,for,a,manually,triggered,savepoint;public,static,checkpoint,properties,for,standard,savepoint,return
CheckpointProperties -> public static CheckpointProperties forStandardSavepoint();1495527860;Creates the checkpoint properties for a (manually triggered) savepoint.__<p>Savepoints are forced and persisted externally. They have to be_garbage collected manually.__@return Checkpoint properties for a (manually triggered) savepoint.;public static CheckpointProperties forStandardSavepoint() {_		return STANDARD_SAVEPOINT__	};creates,the,checkpoint,properties,for,a,manually,triggered,savepoint,p,savepoints,are,forced,and,persisted,externally,they,have,to,be,garbage,collected,manually,return,checkpoint,properties,for,a,manually,triggered,savepoint;public,static,checkpoint,properties,for,standard,savepoint,return
CheckpointProperties -> public static CheckpointProperties forStandardSavepoint();1502802710;Creates the checkpoint properties for a (manually triggered) savepoint.__<p>Savepoints are forced and persisted externally. They have to be_garbage collected manually.__@return Checkpoint properties for a (manually triggered) savepoint.;public static CheckpointProperties forStandardSavepoint() {_		return STANDARD_SAVEPOINT__	};creates,the,checkpoint,properties,for,a,manually,triggered,savepoint,p,savepoints,are,forced,and,persisted,externally,they,have,to,be,garbage,collected,manually,return,checkpoint,properties,for,a,manually,triggered,savepoint;public,static,checkpoint,properties,for,standard,savepoint,return
CheckpointProperties -> public static CheckpointProperties forExternalizedCheckpoint(boolean deleteOnCancellation);1476432306;Creates the checkpoint properties for an external checkpoint.__<p>External checkpoints are not forced, but persisted externally. They_are garbage collected automatically, except when the owning job_terminates in state {@link JobStatus#FAILED}. The user is required to_configure the clean up behaviour on job cancellation.__@param deleteOnCancellation Flag indicating whether to discard on cancellation.__@return Checkpoint properties for an external checkpoint.;public static CheckpointProperties forExternalizedCheckpoint(boolean deleteOnCancellation) {_		return new CheckpointProperties(false, true, true, true, deleteOnCancellation, false, true)__	};creates,the,checkpoint,properties,for,an,external,checkpoint,p,external,checkpoints,are,not,forced,but,persisted,externally,they,are,garbage,collected,automatically,except,when,the,owning,job,terminates,in,state,link,job,status,failed,the,user,is,required,to,configure,the,clean,up,behaviour,on,job,cancellation,param,delete,on,cancellation,flag,indicating,whether,to,discard,on,cancellation,return,checkpoint,properties,for,an,external,checkpoint;public,static,checkpoint,properties,for,externalized,checkpoint,boolean,delete,on,cancellation,return,new,checkpoint,properties,false,true,true,true,delete,on,cancellation,false,true
CheckpointProperties -> public static CheckpointProperties forExternalizedCheckpoint(boolean deleteOnCancellation);1481618369;Creates the checkpoint properties for an external checkpoint.__<p>External checkpoints are not forced, but persisted externally. They_are garbage collected automatically, except when the owning job_terminates in state {@link JobStatus#FAILED}. The user is required to_configure the clean up behaviour on job cancellation.__@param deleteOnCancellation Flag indicating whether to discard on cancellation.__@return Checkpoint properties for an external checkpoint.;public static CheckpointProperties forExternalizedCheckpoint(boolean deleteOnCancellation) {_		_		_		return new CheckpointProperties(false, true, true, true, deleteOnCancellation, false, deleteOnCancellation)__	};creates,the,checkpoint,properties,for,an,external,checkpoint,p,external,checkpoints,are,not,forced,but,persisted,externally,they,are,garbage,collected,automatically,except,when,the,owning,job,terminates,in,state,link,job,status,failed,the,user,is,required,to,configure,the,clean,up,behaviour,on,job,cancellation,param,delete,on,cancellation,flag,indicating,whether,to,discard,on,cancellation,return,checkpoint,properties,for,an,external,checkpoint;public,static,checkpoint,properties,for,externalized,checkpoint,boolean,delete,on,cancellation,return,new,checkpoint,properties,false,true,true,true,delete,on,cancellation,false,delete,on,cancellation
CheckpointProperties -> public static CheckpointProperties forExternalizedCheckpoint(boolean deleteOnCancellation);1484038132;Creates the checkpoint properties for an external checkpoint.__<p>External checkpoints are not forced, but persisted externally. They_are garbage collected automatically, except when the owning job_terminates in state {@link JobStatus#FAILED}. The user is required to_configure the clean up behaviour on job cancellation.__@param deleteOnCancellation Flag indicating whether to discard on cancellation.__@return Checkpoint properties for an external checkpoint.;public static CheckpointProperties forExternalizedCheckpoint(boolean deleteOnCancellation) {_		if (deleteOnCancellation) {_			return EXTERNALIZED_CHECKPOINT_DELETED__		} else {_			return EXTERNALIZED_CHECKPOINT_RETAINED__		}_	};creates,the,checkpoint,properties,for,an,external,checkpoint,p,external,checkpoints,are,not,forced,but,persisted,externally,they,are,garbage,collected,automatically,except,when,the,owning,job,terminates,in,state,link,job,status,failed,the,user,is,required,to,configure,the,clean,up,behaviour,on,job,cancellation,param,delete,on,cancellation,flag,indicating,whether,to,discard,on,cancellation,return,checkpoint,properties,for,an,external,checkpoint;public,static,checkpoint,properties,for,externalized,checkpoint,boolean,delete,on,cancellation,if,delete,on,cancellation,return,else,return
CheckpointProperties -> public static CheckpointProperties forExternalizedCheckpoint(boolean deleteOnCancellation);1487762095;Creates the checkpoint properties for an external checkpoint.__<p>External checkpoints are not forced, but persisted externally. They_are garbage collected automatically, except when the owning job_terminates in state {@link JobStatus#FAILED}. The user is required to_configure the clean up behaviour on job cancellation.__@param deleteOnCancellation Flag indicating whether to discard on cancellation.__@return Checkpoint properties for an external checkpoint.;public static CheckpointProperties forExternalizedCheckpoint(boolean deleteOnCancellation) {_		if (deleteOnCancellation) {_			return EXTERNALIZED_CHECKPOINT_DELETED__		} else {_			return EXTERNALIZED_CHECKPOINT_RETAINED__		}_	};creates,the,checkpoint,properties,for,an,external,checkpoint,p,external,checkpoints,are,not,forced,but,persisted,externally,they,are,garbage,collected,automatically,except,when,the,owning,job,terminates,in,state,link,job,status,failed,the,user,is,required,to,configure,the,clean,up,behaviour,on,job,cancellation,param,delete,on,cancellation,flag,indicating,whether,to,discard,on,cancellation,return,checkpoint,properties,for,an,external,checkpoint;public,static,checkpoint,properties,for,externalized,checkpoint,boolean,delete,on,cancellation,if,delete,on,cancellation,return,else,return
CheckpointProperties -> public static CheckpointProperties forExternalizedCheckpoint(boolean deleteOnCancellation);1495527860;Creates the checkpoint properties for an external checkpoint.__<p>External checkpoints are not forced, but persisted externally. They_are garbage collected automatically, except when the owning job_terminates in state {@link JobStatus#FAILED}. The user is required to_configure the clean up behaviour on job cancellation.__@param deleteOnCancellation Flag indicating whether to discard on cancellation.__@return Checkpoint properties for an external checkpoint.;public static CheckpointProperties forExternalizedCheckpoint(boolean deleteOnCancellation) {_		if (deleteOnCancellation) {_			return EXTERNALIZED_CHECKPOINT_DELETED__		} else {_			return EXTERNALIZED_CHECKPOINT_RETAINED__		}_	};creates,the,checkpoint,properties,for,an,external,checkpoint,p,external,checkpoints,are,not,forced,but,persisted,externally,they,are,garbage,collected,automatically,except,when,the,owning,job,terminates,in,state,link,job,status,failed,the,user,is,required,to,configure,the,clean,up,behaviour,on,job,cancellation,param,delete,on,cancellation,flag,indicating,whether,to,discard,on,cancellation,return,checkpoint,properties,for,an,external,checkpoint;public,static,checkpoint,properties,for,externalized,checkpoint,boolean,delete,on,cancellation,if,delete,on,cancellation,return,else,return
CheckpointProperties -> public static CheckpointProperties forExternalizedCheckpoint(boolean deleteOnCancellation);1502802710;Creates the checkpoint properties for an external checkpoint.__<p>External checkpoints are not forced, but persisted externally. They_are garbage collected automatically, except when the owning job_terminates in state {@link JobStatus#FAILED}. The user is required to_configure the clean up behaviour on job cancellation.__@param deleteOnCancellation Flag indicating whether to discard on cancellation.__@return Checkpoint properties for an external checkpoint.;public static CheckpointProperties forExternalizedCheckpoint(boolean deleteOnCancellation) {_		if (deleteOnCancellation) {_			return EXTERNALIZED_CHECKPOINT_DELETED__		} else {_			return EXTERNALIZED_CHECKPOINT_RETAINED__		}_	};creates,the,checkpoint,properties,for,an,external,checkpoint,p,external,checkpoints,are,not,forced,but,persisted,externally,they,are,garbage,collected,automatically,except,when,the,owning,job,terminates,in,state,link,job,status,failed,the,user,is,required,to,configure,the,clean,up,behaviour,on,job,cancellation,param,delete,on,cancellation,flag,indicating,whether,to,discard,on,cancellation,return,checkpoint,properties,for,an,external,checkpoint;public,static,checkpoint,properties,for,externalized,checkpoint,boolean,delete,on,cancellation,if,delete,on,cancellation,return,else,return
CheckpointProperties -> public boolean forceCheckpoint();1476432306;Returns whether the checkpoint should be forced.__<p>Forced checkpoints ignore the configured maximum number of concurrent_checkpoints and minimum time between checkpoints. Furthermore, they are_not subsumed by more recent checkpoints as long as they are pending.__@return <code>true</code> if the checkpoint should be forced__<code>false</code> otherwise.__@see CheckpointCoordinator_@see PendingCheckpoint;public boolean forceCheckpoint() {_		return forced__	};returns,whether,the,checkpoint,should,be,forced,p,forced,checkpoints,ignore,the,configured,maximum,number,of,concurrent,checkpoints,and,minimum,time,between,checkpoints,furthermore,they,are,not,subsumed,by,more,recent,checkpoints,as,long,as,they,are,pending,return,code,true,code,if,the,checkpoint,should,be,forced,code,false,code,otherwise,see,checkpoint,coordinator,see,pending,checkpoint;public,boolean,force,checkpoint,return,forced
CheckpointProperties -> public boolean forceCheckpoint();1481618369;Returns whether the checkpoint should be forced.__<p>Forced checkpoints ignore the configured maximum number of concurrent_checkpoints and minimum time between checkpoints. Furthermore, they are_not subsumed by more recent checkpoints as long as they are pending.__@return <code>true</code> if the checkpoint should be forced__<code>false</code> otherwise.__@see CheckpointCoordinator_@see PendingCheckpoint;public boolean forceCheckpoint() {_		return forced__	};returns,whether,the,checkpoint,should,be,forced,p,forced,checkpoints,ignore,the,configured,maximum,number,of,concurrent,checkpoints,and,minimum,time,between,checkpoints,furthermore,they,are,not,subsumed,by,more,recent,checkpoints,as,long,as,they,are,pending,return,code,true,code,if,the,checkpoint,should,be,forced,code,false,code,otherwise,see,checkpoint,coordinator,see,pending,checkpoint;public,boolean,force,checkpoint,return,forced
CheckpointProperties -> public boolean forceCheckpoint();1484038132;Returns whether the checkpoint should be forced.__<p>Forced checkpoints ignore the configured maximum number of concurrent_checkpoints and minimum time between checkpoints. Furthermore, they are_not subsumed by more recent checkpoints as long as they are pending.__@return <code>true</code> if the checkpoint should be forced__<code>false</code> otherwise.__@see CheckpointCoordinator_@see PendingCheckpoint;public boolean forceCheckpoint() {_		return forced__	};returns,whether,the,checkpoint,should,be,forced,p,forced,checkpoints,ignore,the,configured,maximum,number,of,concurrent,checkpoints,and,minimum,time,between,checkpoints,furthermore,they,are,not,subsumed,by,more,recent,checkpoints,as,long,as,they,are,pending,return,code,true,code,if,the,checkpoint,should,be,forced,code,false,code,otherwise,see,checkpoint,coordinator,see,pending,checkpoint;public,boolean,force,checkpoint,return,forced
CheckpointProperties -> public boolean discardOnJobFailed();1476432306;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#FAILED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#FAILED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;public boolean discardOnJobFailed() {_		return discardFailed__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,failed,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,failed,state,code,false,code,otherwise,see,completed,checkpoint,store;public,boolean,discard,on,job,failed,return,discard,failed
CheckpointProperties -> public boolean discardOnJobFailed();1481618369;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#FAILED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#FAILED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;public boolean discardOnJobFailed() {_		return discardFailed__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,failed,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,failed,state,code,false,code,otherwise,see,completed,checkpoint,store;public,boolean,discard,on,job,failed,return,discard,failed
CheckpointProperties -> public boolean discardOnJobFailed();1484038132;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#FAILED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#FAILED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;public boolean discardOnJobFailed() {_		return discardFailed__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,failed,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,failed,state,code,false,code,otherwise,see,completed,checkpoint,store;public,boolean,discard,on,job,failed,return,discard,failed
CheckpointProperties -> public boolean isSavepoint();1487762095;Returns whether the checkpoint properties describe a standard savepoint.__@return <code>true</code> if the properties describe a savepoint, <code>false</code> otherwise.;public boolean isSavepoint() {_		return this == STANDARD_SAVEPOINT__	};returns,whether,the,checkpoint,properties,describe,a,standard,savepoint,return,code,true,code,if,the,properties,describe,a,savepoint,code,false,code,otherwise;public,boolean,is,savepoint,return,this
CheckpointProperties -> public boolean isSavepoint();1495527860;Returns whether the checkpoint properties describe a standard savepoint.__@return <code>true</code> if the properties describe a savepoint, <code>false</code> otherwise.;public boolean isSavepoint() {_		return this == STANDARD_SAVEPOINT__	};returns,whether,the,checkpoint,properties,describe,a,standard,savepoint,return,code,true,code,if,the,properties,describe,a,savepoint,code,false,code,otherwise;public,boolean,is,savepoint,return,this
CheckpointProperties -> public boolean isSavepoint();1502802710;Returns whether the checkpoint properties describe a standard savepoint.__@return <code>true</code> if the properties describe a savepoint, <code>false</code> otherwise.;public boolean isSavepoint() {_		return savepoint__	};returns,whether,the,checkpoint,properties,describe,a,standard,savepoint,return,code,true,code,if,the,properties,describe,a,savepoint,code,false,code,otherwise;public,boolean,is,savepoint,return,savepoint
CheckpointProperties -> public boolean isSavepoint();1516295283;Returns whether the checkpoint properties describe a standard savepoint.__@return <code>true</code> if the properties describe a savepoint, <code>false</code> otherwise.;public boolean isSavepoint() {_		return savepoint__	};returns,whether,the,checkpoint,properties,describe,a,standard,savepoint,return,code,true,code,if,the,properties,describe,a,savepoint,code,false,code,otherwise;public,boolean,is,savepoint,return,savepoint
CheckpointProperties -> public boolean isSavepoint();1517489694;Returns whether the checkpoint properties describe a standard savepoint.__@return <code>true</code> if the properties describe a savepoint, <code>false</code> otherwise.;public boolean isSavepoint() {_		return checkpointType == CheckpointType.SAVEPOINT__	};returns,whether,the,checkpoint,properties,describe,a,standard,savepoint,return,code,true,code,if,the,properties,describe,a,savepoint,code,false,code,otherwise;public,boolean,is,savepoint,return,checkpoint,type,checkpoint,type,savepoint
CheckpointProperties -> public static CheckpointProperties forSavepoint();1516295283;Creates the checkpoint properties for a (manually triggered) savepoint.__<p>Savepoints are not queued due to time trigger limits. They have to be_garbage collected manually.__@return Checkpoint properties for a (manually triggered) savepoint.;public static CheckpointProperties forSavepoint() {_		return SAVEPOINT__	};creates,the,checkpoint,properties,for,a,manually,triggered,savepoint,p,savepoints,are,not,queued,due,to,time,trigger,limits,they,have,to,be,garbage,collected,manually,return,checkpoint,properties,for,a,manually,triggered,savepoint;public,static,checkpoint,properties,for,savepoint,return,savepoint
CheckpointProperties -> public static CheckpointProperties forSavepoint();1517489694;Creates the checkpoint properties for a (manually triggered) savepoint.__<p>Savepoints are not queued due to time trigger limits. They have to be_garbage collected manually.__@return Checkpoint properties for a (manually triggered) savepoint.;public static CheckpointProperties forSavepoint() {_		return SAVEPOINT__	};creates,the,checkpoint,properties,for,a,manually,triggered,savepoint,p,savepoints,are,not,queued,due,to,time,trigger,limits,they,have,to,be,garbage,collected,manually,return,checkpoint,properties,for,a,manually,triggered,savepoint;public,static,checkpoint,properties,for,savepoint,return,savepoint
CheckpointProperties -> boolean discardOnJobCancelled();1487762095;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#CANCELED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#CANCELED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;boolean discardOnJobCancelled() {_		return discardCancelled__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,canceled,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,canceled,state,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,job,cancelled,return,discard,cancelled
CheckpointProperties -> boolean discardOnJobCancelled();1495527860;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#CANCELED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#CANCELED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;boolean discardOnJobCancelled() {_		return discardCancelled__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,canceled,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,canceled,state,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,job,cancelled,return,discard,cancelled
CheckpointProperties -> boolean discardOnJobCancelled();1502802710;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#CANCELED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#CANCELED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;boolean discardOnJobCancelled() {_		return discardCancelled__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,canceled,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,canceled,state,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,job,cancelled,return,discard,cancelled
CheckpointProperties -> boolean discardOnJobCancelled();1516295283;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#CANCELED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#CANCELED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;boolean discardOnJobCancelled() {_		return discardCancelled__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,canceled,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,canceled,state,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,job,cancelled,return,discard,cancelled
CheckpointProperties -> boolean discardOnJobCancelled();1517489694;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#CANCELED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#CANCELED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;boolean discardOnJobCancelled() {_		return discardCancelled__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,canceled,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,canceled,state,code,false,code,otherwise,see,completed,checkpoint,store;boolean,discard,on,job,cancelled,return,discard,cancelled
CheckpointProperties -> public boolean discardOnJobSuspended();1476432306;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#SUSPENDED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#SUSPENDED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;public boolean discardOnJobSuspended() {_		return discardSuspended__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,suspended,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,suspended,state,code,false,code,otherwise,see,completed,checkpoint,store;public,boolean,discard,on,job,suspended,return,discard,suspended
CheckpointProperties -> public boolean discardOnJobSuspended();1481618369;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#SUSPENDED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#SUSPENDED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;public boolean discardOnJobSuspended() {_		return discardSuspended__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,suspended,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,suspended,state,code,false,code,otherwise,see,completed,checkpoint,store;public,boolean,discard,on,job,suspended,return,discard,suspended
CheckpointProperties -> public boolean discardOnJobSuspended();1484038132;Returns whether the checkpoint should be discarded when the owning job_reaches the {@link JobStatus#SUSPENDED} state.__@return <code>true</code> if the checkpoint should be discarded when the_owning job reaches the {@link JobStatus#SUSPENDED} state_ <code>false</code>_otherwise.__@see CompletedCheckpointStore;public boolean discardOnJobSuspended() {_		return discardSuspended__	};returns,whether,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,suspended,state,return,code,true,code,if,the,checkpoint,should,be,discarded,when,the,owning,job,reaches,the,link,job,status,suspended,state,code,false,code,otherwise,see,completed,checkpoint,store;public,boolean,discard,on,job,suspended,return,discard,suspended
CheckpointProperties -> public boolean discardOnSubsumed();1476432306;Returns whether the checkpoint should be discarded when it is subsumed.__<p>A checkpoint is subsumed when the maximum number of retained_checkpoints is reached and a more recent checkpoint completes..__@return <code>true</code> if the checkpoint should be discarded when it_is subsumed_ <code>false</code> otherwise.__@see CompletedCheckpointStore;public boolean discardOnSubsumed() {_		return discardSubsumed__	};returns,whether,the,checkpoint,should,be,discarded,when,it,is,subsumed,p,a,checkpoint,is,subsumed,when,the,maximum,number,of,retained,checkpoints,is,reached,and,a,more,recent,checkpoint,completes,return,code,true,code,if,the,checkpoint,should,be,discarded,when,it,is,subsumed,code,false,code,otherwise,see,completed,checkpoint,store;public,boolean,discard,on,subsumed,return,discard,subsumed
CheckpointProperties -> public boolean discardOnSubsumed();1481618369;Returns whether the checkpoint should be discarded when it is subsumed.__<p>A checkpoint is subsumed when the maximum number of retained_checkpoints is reached and a more recent checkpoint completes..__@return <code>true</code> if the checkpoint should be discarded when it_is subsumed_ <code>false</code> otherwise.__@see CompletedCheckpointStore;public boolean discardOnSubsumed() {_		return discardSubsumed__	};returns,whether,the,checkpoint,should,be,discarded,when,it,is,subsumed,p,a,checkpoint,is,subsumed,when,the,maximum,number,of,retained,checkpoints,is,reached,and,a,more,recent,checkpoint,completes,return,code,true,code,if,the,checkpoint,should,be,discarded,when,it,is,subsumed,code,false,code,otherwise,see,completed,checkpoint,store;public,boolean,discard,on,subsumed,return,discard,subsumed
CheckpointProperties -> public boolean discardOnSubsumed();1484038132;Returns whether the checkpoint should be discarded when it is subsumed.__<p>A checkpoint is subsumed when the maximum number of retained_checkpoints is reached and a more recent checkpoint completes..__@return <code>true</code> if the checkpoint should be discarded when it_is subsumed_ <code>false</code> otherwise.__@see CompletedCheckpointStore;public boolean discardOnSubsumed() {_		return discardSubsumed__	};returns,whether,the,checkpoint,should,be,discarded,when,it,is,subsumed,p,a,checkpoint,is,subsumed,when,the,maximum,number,of,retained,checkpoints,is,reached,and,a,more,recent,checkpoint,completes,return,code,true,code,if,the,checkpoint,should,be,discarded,when,it,is,subsumed,code,false,code,otherwise,see,completed,checkpoint,store;public,boolean,discard,on,subsumed,return,discard,subsumed
