commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;// ------------------------------------------------------------------------ // getters // ------------------------------------------------------------------------ public RpcServiceSharing getRpcServiceSharing() {     return rpcServiceSharing. }
false;public;0;3;;public int getNumTaskManagers() {     return numTaskManagers. }
false;public;0;5;;public String getJobManagerBindAddress() {     return commonBindAddress != null ? commonBindAddress : configuration.getString(JobManagerOptions.ADDRESS, "localhost"). }
false;public;0;5;;public String getTaskManagerBindAddress() {     return commonBindAddress != null ? commonBindAddress : configuration.getString(TaskManagerOptions.HOST, "localhost"). }
false;public;0;4;;public Time getRpcTimeout() {     FiniteDuration duration = AkkaUtils.getTimeout(configuration).     return Time.of(duration.length(), duration.unit()). }
false;public;0;3;;public UnmodifiableConfiguration getConfiguration() {     return configuration. }
false;public;0;9;;@Override public String toString() {     return "MiniClusterConfiguration {" + "singleRpcService=" + rpcServiceSharing + ", numTaskManagers=" + numTaskManagers + ", commonBindAddress='" + commonBindAddress + '\'' + ", config=" + configuration + '}'. }
false;public;1;4;;public Builder setConfiguration(Configuration configuration1) {     this.configuration = Preconditions.checkNotNull(configuration1).     return this. }
false;public;1;4;;public Builder setNumTaskManagers(int numTaskManagers) {     this.numTaskManagers = numTaskManagers.     return this. }
false;public;1;4;;public Builder setNumSlotsPerTaskManager(int numSlotsPerTaskManager) {     this.numSlotsPerTaskManager = numSlotsPerTaskManager.     return this. }
false;public;1;4;;public Builder setRpcServiceSharing(RpcServiceSharing rpcServiceSharing) {     this.rpcServiceSharing = Preconditions.checkNotNull(rpcServiceSharing).     return this. }
false;public;1;4;;public Builder setCommonBindAddress(String commonBindAddress) {     this.commonBindAddress = commonBindAddress.     return this. }
false;public;0;13;;public MiniClusterConfiguration build() {     final Configuration modifiedConfiguration = new Configuration(configuration).     modifiedConfiguration.setInteger(TaskManagerOptions.NUM_TASK_SLOTS, numSlotsPerTaskManager).     modifiedConfiguration.setString(RestOptions.ADDRESS, modifiedConfiguration.getString(RestOptions.ADDRESS, "localhost")).     return new MiniClusterConfiguration(modifiedConfiguration, numTaskManagers, rpcServiceSharing, commonBindAddress). }
