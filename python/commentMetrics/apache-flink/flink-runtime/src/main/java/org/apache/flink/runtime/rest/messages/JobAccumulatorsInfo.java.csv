commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@JsonIgnore public List<JobAccumulator> getJobAccumulators() {     return jobAccumulators. }
false;public;0;4;;@JsonIgnore public List<UserTaskAccumulator> getUserAccumulators() {     return userAccumulators. }
false;public;0;4;;@JsonIgnore public Map<String, SerializedValue<OptionalFailure<Object>>> getSerializedUserAccumulators() {     return serializedUserAccumulators. }
false;public;1;11;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     JobAccumulatorsInfo that = (JobAccumulatorsInfo) o.     return Objects.equals(userAccumulators, that.userAccumulators). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(userAccumulators). }
false;public;0;4;;@JsonIgnore public String getName() {     return name. }
false;public;0;4;;@JsonIgnore public String getType() {     return type. }
false;public;0;4;;@JsonIgnore public String getValue() {     return value. }
false;public;1;13;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     UserTaskAccumulator that = (UserTaskAccumulator) o.     return Objects.equals(name, that.name) && Objects.equals(type, that.type) && Objects.equals(value, that.value). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(name, type, value). }
