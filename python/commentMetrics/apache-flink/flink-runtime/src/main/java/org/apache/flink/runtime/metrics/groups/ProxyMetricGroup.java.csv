commented;modifiers;parameterAmount;loc;comment;code
false;public,final;1;4;;@Override public final Counter counter(int name) {     return parentMetricGroup.counter(name). }
false;public,final;1;4;;@Override public final Counter counter(String name) {     return parentMetricGroup.counter(name). }
false;public,final;2;4;;@Override public final <C extends Counter> C counter(int name, C counter) {     return parentMetricGroup.counter(name, counter). }
false;public,final;2;4;;@Override public final <C extends Counter> C counter(String name, C counter) {     return parentMetricGroup.counter(name, counter). }
false;public,final;2;4;;@Override public final <T, G extends Gauge<T>> G gauge(int name, G gauge) {     return parentMetricGroup.gauge(name, gauge). }
false;public,final;2;4;;@Override public final <T, G extends Gauge<T>> G gauge(String name, G gauge) {     return parentMetricGroup.gauge(name, gauge). }
false;public,final;2;4;;@Override public final <H extends Histogram> H histogram(String name, H histogram) {     return parentMetricGroup.histogram(name, histogram). }
false;public,final;2;4;;@Override public final <H extends Histogram> H histogram(int name, H histogram) {     return parentMetricGroup.histogram(name, histogram). }
false;public;2;4;;@Override public <M extends Meter> M meter(String name, M meter) {     return parentMetricGroup.meter(name, meter). }
false;public;2;4;;@Override public <M extends Meter> M meter(int name, M meter) {     return parentMetricGroup.meter(name, meter). }
false;public,final;1;4;;@Override public final MetricGroup addGroup(int name) {     return parentMetricGroup.addGroup(name). }
false;public,final;1;4;;@Override public final MetricGroup addGroup(String name) {     return parentMetricGroup.addGroup(name). }
false;public,final;2;4;;@Override public final MetricGroup addGroup(String key, String value) {     return parentMetricGroup.addGroup(key, value). }
false;public;0;4;;@Override public String[] getScopeComponents() {     return parentMetricGroup.getScopeComponents(). }
false;public;0;4;;@Override public Map<String, String> getAllVariables() {     return parentMetricGroup.getAllVariables(). }
false;public;1;4;;@Override public String getMetricIdentifier(String metricName) {     return parentMetricGroup.getMetricIdentifier(metricName). }
false;public;2;4;;@Override public String getMetricIdentifier(String metricName, CharacterFilter filter) {     return parentMetricGroup.getMetricIdentifier(metricName, filter). }
