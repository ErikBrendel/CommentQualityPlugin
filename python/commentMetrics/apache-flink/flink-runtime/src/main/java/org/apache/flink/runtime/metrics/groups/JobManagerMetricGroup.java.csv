commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String hostname() {     return hostname. }
false;protected;1;4;;@Override protected QueryScopeInfo.JobManagerQueryScopeInfo createQueryServiceMetricInfo(CharacterFilter filter) {     return new QueryScopeInfo.JobManagerQueryScopeInfo(). }
false;public;1;19;;// ------------------------------------------------------------------------ // job groups // ------------------------------------------------------------------------ public JobManagerJobMetricGroup addJob(JobGraph job) {     JobID jobId = job.getJobID().     String jobName = job.getName().     // get or create a jobs metric group     JobManagerJobMetricGroup currentJobGroup.     synchronized (this) {         if (!isClosed()) {             currentJobGroup = jobs.get(jobId).             if (currentJobGroup == null || currentJobGroup.isClosed()) {                 currentJobGroup = new JobManagerJobMetricGroup(registry, this, jobId, jobName).                 jobs.put(jobId, currentJobGroup).             }             return currentJobGroup.         } else {             return null.         }     } }
false;public;1;12;;public void removeJob(JobID jobId) {     if (jobId == null) {         return.     }     synchronized (this) {         JobManagerJobMetricGroup containedGroup = jobs.remove(jobId).         if (containedGroup != null) {             containedGroup.close().         }     } }
false;public;0;3;;public int numRegisteredJobMetricGroups() {     return jobs.size(). }
false;protected;1;4;;// ------------------------------------------------------------------------ // Component Metric Group Specifics // ------------------------------------------------------------------------ @Override protected void putVariables(Map<String, String> variables) {     variables.put(ScopeFormat.SCOPE_HOST, hostname). }
false;protected;0;4;;@Override protected Iterable<? extends ComponentMetricGroup> subComponents() {     return jobs.values(). }
false;protected;1;4;;@Override protected String getGroupName(CharacterFilter filter) {     return "jobmanager". }
