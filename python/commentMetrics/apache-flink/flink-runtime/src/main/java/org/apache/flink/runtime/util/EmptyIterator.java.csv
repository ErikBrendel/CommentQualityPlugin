commented;modifiers;parameterAmount;loc;comment;code
true;public,static;0;5;/**  * Gets a singleton instance of the empty iterator.  *  * @param <E> The type of the objects (not) returned by the iterator.  * @return An instance of the iterator.  */ ;/**  * Gets a singleton instance of the empty iterator.  *  * @param <E> The type of the objects (not) returned by the iterator.  * @return An instance of the iterator.  */ public static <E> EmptyIterator<E> get() {     @SuppressWarnings("unchecked")     EmptyIterator<E> iter = (EmptyIterator<E>) INSTANCE.     return iter. }
true;public;0;4;/**  * Always returns false, since this iterator is empty.  *  * @see java.util.Iterator#hasNext()  */ ;/**  * Always returns false, since this iterator is empty.  *  * @see java.util.Iterator#hasNext()  */ @Override public boolean hasNext() {     return false. }
true;public;0;4;/**  * Always throws a {@link java.util.NoSuchElementException}.  *  * @see java.util.Iterator#next()  */ ;/**  * Always throws a {@link java.util.NoSuchElementException}.  *  * @see java.util.Iterator#next()  */ @Override public E next() {     throw new NoSuchElementException(). }
true;public;0;4;/**  * Throws a {@link java.lang.UnsupportedOperationException}.  *  * @see java.util.Iterator#remove()  */ ;/**  * Throws a {@link java.lang.UnsupportedOperationException}.  *  * @see java.util.Iterator#remove()  */ @Override public void remove() {     throw new UnsupportedOperationException(). }
false;public;0;4;;@Override public Iterator<E> iterator() {     return this. }
