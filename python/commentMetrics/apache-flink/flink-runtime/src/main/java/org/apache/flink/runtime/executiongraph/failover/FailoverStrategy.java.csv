commented;modifiers;parameterAmount;loc;comment;code
true;public,abstract;2;1;/**  * Called by the execution graph when a task failure occurs.  *  * @param taskExecution The execution attempt of the failed task.  * @param cause The exception that caused the task failure.  */ ;// ------------------------------------------------------------------------ // failover implementation // ------------------------------------------------------------------------ /**  * Called by the execution graph when a task failure occurs.  *  * @param taskExecution The execution attempt of the failed task.  * @param cause The exception that caused the task failure.  */ public abstract void onTaskFailure(Execution taskExecution, Throwable cause).
true;public,abstract;1;1;/**  * Called whenever new vertices are added to the ExecutionGraph.  *  * @param newJobVerticesTopological The newly added vertices, in topological order.  */ ;/**  * Called whenever new vertices are added to the ExecutionGraph.  *  * @param newJobVerticesTopological The newly added vertices, in topological order.  */ public abstract void notifyNewVertices(List<ExecutionJobVertex> newJobVerticesTopological).
true;public,abstract;0;1;/**  * Gets the name of the failover strategy, for logging purposes.  */ ;/**  * Gets the name of the failover strategy, for logging purposes.  */ public abstract String getStrategyName().
true;public;1;1;/**  * Tells the FailoverStrategy to register its metrics.  *  * <p>The default implementation does nothing  *  * @param metricGroup The metric group to register the metrics at  */ ;/**  * Tells the FailoverStrategy to register its metrics.  *  * <p>The default implementation does nothing  *  * @param metricGroup The metric group to register the metrics at  */ public void registerMetrics(MetricGroup metricGroup) { }
true;;1;1;/**  * Instantiates the {@code FailoverStrategy}.  *  * @param executionGraph The execution graph for which the strategy implements failover.  * @return The instantiated failover strategy.  */ ;/**  * Instantiates the {@code FailoverStrategy}.  *  * @param executionGraph The execution graph for which the strategy implements failover.  * @return The instantiated failover strategy.  */ FailoverStrategy create(ExecutionGraph executionGraph).
