commented;modifiers;parameterAmount;loc;comment;code
false;public;1;11;;@Override public void configure(ContainerSpecification container) throws IOException {     if (krb5Conf != null) {         container.getArtifacts().add(ContainerSpecification.Artifact.newBuilder().setSource(krb5Conf).setDest(TARGET_PATH).setCachable(true).build()).         container.getSystemProperties().setString(JAVA_SECURITY_KRB5_CONF, TARGET_PATH.getPath()).     } }
false;public,static;0;3;;public static Builder newBuilder() {     return new Builder(). }
true;public;1;18;/**  * Configures the overlay using the current environment.  *  * Locates the krb5.conf configuration file as per  * <a href="https://docs.oracle.com/javase/8/docs/technotes/guides/security/jgss/tutorials/KerberosReq.html">Java documentation</a>.  * Note that the JRE doesn't support the KRB5_CONFIG environment variable (JDK-7045913).  */ ;/**  * Configures the overlay using the current environment.  *  * Locates the krb5.conf configuration file as per  * <a href="https://docs.oracle.com/javase/8/docs/technotes/guides/security/jgss/tutorials/KerberosReq.html">Java documentation</a>.  * Note that the JRE doesn't support the KRB5_CONFIG environment variable (JDK-7045913).  */ public Builder fromEnvironment(Configuration globalConfiguration) {     // check the system property     String krb5Config = System.getProperty(JAVA_SECURITY_KRB5_CONF).     if (krb5Config != null && krb5Config.length() != 0) {         krb5ConfPath = new File(krb5Config).         if (!krb5ConfPath.exists()) {             throw new IllegalStateException("java.security.krb5.conf refers to a non-existent file").         }     }     return this. }
false;public;0;3;;public Krb5ConfOverlay build() {     return new Krb5ConfOverlay(krb5ConfPath). }
