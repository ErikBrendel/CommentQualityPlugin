# id;timestamp;commentText;codeText;commentWords;codeWords
BitSet -> public void set(int index);1453866659;Sets the bit at specified index.__@param index - position;public void set(int index) {_		Preconditions.checkArgument(index < bitLength && index >= 0, _			String.format("Input Index[%d] is larger than BitSet available size[%d].", index, bitLength))___		int byteIndex = (index & BYTE_POSITION_MASK) >>> 3__		byte current = memorySegment.get(offset + byteIndex)__		current |= (1 << (index & BYTE_INDEX_MASK))__		memorySegment.put(offset + byteIndex, current)__	};sets,the,bit,at,specified,index,param,index,position;public,void,set,int,index,preconditions,check,argument,index,bit,length,index,0,string,format,input,index,d,is,larger,than,bit,set,available,size,d,index,bit,length,int,byte,index,index,3,byte,current,memory,segment,get,offset,byte,index,current,1,index,memory,segment,put,offset,byte,index,current
BitSet -> public void set(int index);1465991918;Sets the bit at specified index.__@param index - position;public void set(int index) {_		Preconditions.checkArgument(index < bitLength && index >= 0, _			String.format("Input Index[%d] is larger than BitSet available size[%d].", index, bitLength))___		int byteIndex = (index & BYTE_POSITION_MASK) >>> 3__		byte current = memorySegment.get(offset + byteIndex)__		current |= (1 << (index & BYTE_INDEX_MASK))__		memorySegment.put(offset + byteIndex, current)__	};sets,the,bit,at,specified,index,param,index,position;public,void,set,int,index,preconditions,check,argument,index,bit,length,index,0,string,format,input,index,d,is,larger,than,bit,set,available,size,d,index,bit,length,int,byte,index,index,3,byte,current,memory,segment,get,offset,byte,index,current,1,index,memory,segment,put,offset,byte,index,current
BitSet -> public void set(int index);1505395105;Sets the bit at specified index.__@param index - position;public void set(int index) {_		Preconditions.checkArgument(index < bitLength && index >= 0)___		int byteIndex = (index & BYTE_POSITION_MASK) >>> 3__		byte current = memorySegment.get(offset + byteIndex)__		current |= (1 << (index & BYTE_INDEX_MASK))__		memorySegment.put(offset + byteIndex, current)__	};sets,the,bit,at,specified,index,param,index,position;public,void,set,int,index,preconditions,check,argument,index,bit,length,index,0,int,byte,index,index,3,byte,current,memory,segment,get,offset,byte,index,current,1,index,memory,segment,put,offset,byte,index,current
BitSet -> public boolean get(int index);1453866659;Returns true if the bit is set in the specified index.__@param index - position_@return - value at the bit position;public boolean get(int index) {_		Preconditions.checkArgument(index < bitLength && index >= 0,_			String.format("Input Index[%d] is larger than BitSet available size[%d].", index, bitLength))__		_		int byteIndex = (index & BYTE_POSITION_MASK) >>> 3__		byte current = memorySegment.get(offset + byteIndex)__		return (current & (1 << (index & BYTE_INDEX_MASK))) != 0__	};returns,true,if,the,bit,is,set,in,the,specified,index,param,index,position,return,value,at,the,bit,position;public,boolean,get,int,index,preconditions,check,argument,index,bit,length,index,0,string,format,input,index,d,is,larger,than,bit,set,available,size,d,index,bit,length,int,byte,index,index,3,byte,current,memory,segment,get,offset,byte,index,return,current,1,index,0
BitSet -> public boolean get(int index);1465991918;Returns true if the bit is set in the specified index.__@param index - position_@return - value at the bit position;public boolean get(int index) {_		Preconditions.checkArgument(index < bitLength && index >= 0,_			String.format("Input Index[%d] is larger than BitSet available size[%d].", index, bitLength))__		_		int byteIndex = (index & BYTE_POSITION_MASK) >>> 3__		byte current = memorySegment.get(offset + byteIndex)__		return (current & (1 << (index & BYTE_INDEX_MASK))) != 0__	};returns,true,if,the,bit,is,set,in,the,specified,index,param,index,position,return,value,at,the,bit,position;public,boolean,get,int,index,preconditions,check,argument,index,bit,length,index,0,string,format,input,index,d,is,larger,than,bit,set,available,size,d,index,bit,length,int,byte,index,index,3,byte,current,memory,segment,get,offset,byte,index,return,current,1,index,0
BitSet -> public boolean get(int index);1505395105;Returns true if the bit is set in the specified index.__@param index - position_@return - value at the bit position;public boolean get(int index) {_		Preconditions.checkArgument(index < bitLength && index >= 0)__		_		int byteIndex = (index & BYTE_POSITION_MASK) >>> 3__		byte current = memorySegment.get(offset + byteIndex)__		return (current & (1 << (index & BYTE_INDEX_MASK))) != 0__	};returns,true,if,the,bit,is,set,in,the,specified,index,param,index,position,return,value,at,the,bit,position;public,boolean,get,int,index,preconditions,check,argument,index,bit,length,index,0,int,byte,index,index,3,byte,current,memory,segment,get,offset,byte,index,return,current,1,index,0
BitSet -> public int bitSize();1453866659;Number of bits;public int bitSize() {_		return bitLength__	};number,of,bits;public,int,bit,size,return,bit,length
BitSet -> public int bitSize();1465991918;Number of bits;public int bitSize() {_		return bitLength__	};number,of,bits;public,int,bit,size,return,bit,length
BitSet -> public int bitSize();1505395105;Number of bits;public int bitSize() {_		return bitLength__	};number,of,bits;public,int,bit,size,return,bit,length
BitSet -> public void clear();1453866659;Clear the bit set.;public void clear() {_		for (int i = 0_ i < byteLength_ i++) {_			memorySegment.put(offset + i, (byte) 0)__		}_	};clear,the,bit,set;public,void,clear,for,int,i,0,i,byte,length,i,memory,segment,put,offset,i,byte,0
BitSet -> public void clear();1465991918;Clear the bit set.;public void clear() {_		for (int i = 0_ i < byteLength_ i++) {_			memorySegment.put(offset + i, (byte) 0)__		}_	};clear,the,bit,set;public,void,clear,for,int,i,0,i,byte,length,i,memory,segment,put,offset,i,byte,0
BitSet -> public void clear();1505395105;Clear the bit set.;public void clear() {_		for (int i = 0_ i < byteLength_ i++) {_			memorySegment.put(offset + i, (byte) 0)__		}_	};clear,the,bit,set;public,void,clear,for,int,i,0,i,byte,length,i,memory,segment,put,offset,i,byte,0
