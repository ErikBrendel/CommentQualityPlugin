commented;modifiers;parameterAmount;loc;comment;code
true;public;2;11;/**  * Add entries for the given application name.  */ ;/**  * Add entries for the given application name.  */ public void addAppConfigurationEntry(String name, AppConfigurationEntry... entry) {     final AppConfigurationEntry[] existing = dynamicEntries.get(name).     final AppConfigurationEntry[] updated.     if (existing == null) {         updated = Arrays.copyOf(entry, entry.length).     } else {         updated = merge(existing, entry).     }     dynamicEntries.put(name, updated). }
true;public;1;17;/**  * Retrieve the AppConfigurationEntries for the specified <i>name</i>  * from this Configuration.  *  * @param name the name used to index the Configuration.  *  * @return an array of AppConfigurationEntries for the specified <i>name</i>  *          from this Configuration, or null if there are no entries  *          for the specified <i>name</i>  */ ;/**  * Retrieve the AppConfigurationEntries for the specified <i>name</i>  * from this Configuration.  *  * @param name the name used to index the Configuration.  *  * @return an array of AppConfigurationEntries for the specified <i>name</i>  *          from this Configuration, or null if there are no entries  *          for the specified <i>name</i>  */ @Override public AppConfigurationEntry[] getAppConfigurationEntry(String name) {     AppConfigurationEntry[] entry = null.     if (delegate != null) {         entry = delegate.getAppConfigurationEntry(name).     }     final AppConfigurationEntry[] existing = dynamicEntries.get(name).     if (existing != null) {         if (entry != null) {             entry = merge(entry, existing).         } else {             entry = Arrays.copyOf(existing, existing.length).         }     }     return entry. }
false;private,static;2;5;;private static AppConfigurationEntry[] merge(AppConfigurationEntry[] a, AppConfigurationEntry[] b) {     AppConfigurationEntry[] merged = Arrays.copyOf(a, a.length + b.length).     System.arraycopy(b, 0, merged, a.length, b.length).     return merged. }
false;public;0;6;;@Override public void refresh() {     if (delegate != null) {         delegate.refresh().     } }
