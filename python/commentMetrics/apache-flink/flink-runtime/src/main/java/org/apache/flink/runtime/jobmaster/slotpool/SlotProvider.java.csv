# id;timestamp;commentText;codeText;commentWords;codeWords
SlotProvider -> default CompletableFuture<LogicalSlot> allocateSlot( 		ScheduledUnit task, 		boolean allowQueued, 		SlotProfile slotProfile, 		Time timeout);1519655521;Allocating slot with specific requirement.__@param task The task to allocate the slot for_@param allowQueued Whether allow the task be queued if we do not have enough resource_@param slotProfile profile of the requested slot_@param timeout after which the allocation fails with a timeout exception_@return The future of the allocation;default CompletableFuture<LogicalSlot> allocateSlot(_		ScheduledUnit task,_		boolean allowQueued,_		SlotProfile slotProfile,_		Time timeout) {_		return allocateSlot(_			new SlotRequestId(),_			task,_			allowQueued,_			slotProfile,_			timeout)__	};allocating,slot,with,specific,requirement,param,task,the,task,to,allocate,the,slot,for,param,allow,queued,whether,allow,the,task,be,queued,if,we,do,not,have,enough,resource,param,slot,profile,profile,of,the,requested,slot,param,timeout,after,which,the,allocation,fails,with,a,timeout,exception,return,the,future,of,the,allocation;default,completable,future,logical,slot,allocate,slot,scheduled,unit,task,boolean,allow,queued,slot,profile,slot,profile,time,timeout,return,allocate,slot,new,slot,request,id,task,allow,queued,slot,profile,timeout
SlotProvider -> default CompletableFuture<LogicalSlot> allocateSlot( 		ScheduledUnit task, 		boolean allowQueued, 		SlotProfile slotProfile, 		Time timeout);1521537266;Allocating slot with specific requirement.__@param task The task to allocate the slot for_@param allowQueued Whether allow the task be queued if we do not have enough resource_@param slotProfile profile of the requested slot_@param timeout after which the allocation fails with a timeout exception_@return The future of the allocation;default CompletableFuture<LogicalSlot> allocateSlot(_		ScheduledUnit task,_		boolean allowQueued,_		SlotProfile slotProfile,_		Time timeout) {_		return allocateSlot(_			new SlotRequestId(),_			task,_			allowQueued,_			slotProfile,_			timeout)__	};allocating,slot,with,specific,requirement,param,task,the,task,to,allocate,the,slot,for,param,allow,queued,whether,allow,the,task,be,queued,if,we,do,not,have,enough,resource,param,slot,profile,profile,of,the,requested,slot,param,timeout,after,which,the,allocation,fails,with,a,timeout,exception,return,the,future,of,the,allocation;default,completable,future,logical,slot,allocate,slot,scheduled,unit,task,boolean,allow,queued,slot,profile,slot,profile,time,timeout,return,allocate,slot,new,slot,request,id,task,allow,queued,slot,profile,timeout
SlotProvider -> CompletableFuture<Acknowledge> cancelSlotRequest( 		SlotRequestId slotRequestId, 		@Nullable SlotSharingGroupId slotSharingGroupId, 		Throwable cause)_;1519481114;Cancels the slot request with the given {@link SlotRequestId} and {@link SlotSharingGroupId}.__@param slotRequestId identifying the slot request to cancel_@param slotSharingGroupId identifying the slot request to cancel_@param cause of the cancellation_@return Future which is completed once the slot request has been cancelled;CompletableFuture<Acknowledge> cancelSlotRequest(_		SlotRequestId slotRequestId,_		@Nullable SlotSharingGroupId slotSharingGroupId,_		Throwable cause)_;cancels,the,slot,request,with,the,given,link,slot,request,id,and,link,slot,sharing,group,id,param,slot,request,id,identifying,the,slot,request,to,cancel,param,slot,sharing,group,id,identifying,the,slot,request,to,cancel,param,cause,of,the,cancellation,return,future,which,is,completed,once,the,slot,request,has,been,cancelled;completable,future,acknowledge,cancel,slot,request,slot,request,id,slot,request,id,nullable,slot,sharing,group,id,slot,sharing,group,id,throwable,cause
SlotProvider -> CompletableFuture<Acknowledge> cancelSlotRequest( 		SlotRequestId slotRequestId, 		@Nullable SlotSharingGroupId slotSharingGroupId, 		Throwable cause)_;1519655521;Cancels the slot request with the given {@link SlotRequestId} and {@link SlotSharingGroupId}.__@param slotRequestId identifying the slot request to cancel_@param slotSharingGroupId identifying the slot request to cancel_@param cause of the cancellation_@return Future which is completed once the slot request has been cancelled;CompletableFuture<Acknowledge> cancelSlotRequest(_		SlotRequestId slotRequestId,_		@Nullable SlotSharingGroupId slotSharingGroupId,_		Throwable cause)_;cancels,the,slot,request,with,the,given,link,slot,request,id,and,link,slot,sharing,group,id,param,slot,request,id,identifying,the,slot,request,to,cancel,param,slot,sharing,group,id,identifying,the,slot,request,to,cancel,param,cause,of,the,cancellation,return,future,which,is,completed,once,the,slot,request,has,been,cancelled;completable,future,acknowledge,cancel,slot,request,slot,request,id,slot,request,id,nullable,slot,sharing,group,id,slot,sharing,group,id,throwable,cause
SlotProvider -> CompletableFuture<Acknowledge> cancelSlotRequest( 		SlotRequestId slotRequestId, 		@Nullable SlotSharingGroupId slotSharingGroupId, 		Throwable cause)_;1521537266;Cancels the slot request with the given {@link SlotRequestId} and {@link SlotSharingGroupId}.__@param slotRequestId identifying the slot request to cancel_@param slotSharingGroupId identifying the slot request to cancel_@param cause of the cancellation_@return Future which is completed once the slot request has been cancelled;CompletableFuture<Acknowledge> cancelSlotRequest(_		SlotRequestId slotRequestId,_		@Nullable SlotSharingGroupId slotSharingGroupId,_		Throwable cause)_;cancels,the,slot,request,with,the,given,link,slot,request,id,and,link,slot,sharing,group,id,param,slot,request,id,identifying,the,slot,request,to,cancel,param,slot,sharing,group,id,identifying,the,slot,request,to,cancel,param,cause,of,the,cancellation,return,future,which,is,completed,once,the,slot,request,has,been,cancelled;completable,future,acknowledge,cancel,slot,request,slot,request,id,slot,request,id,nullable,slot,sharing,group,id,slot,sharing,group,id,throwable,cause
SlotProvider -> CompletableFuture<LogicalSlot> allocateSlot( 		SlotRequestId slotRequestId, 		ScheduledUnit task, 		boolean allowQueued, 		SlotProfile slotProfile, 		Time timeout)_;1519655521;Allocating slot with specific requirement.__@param task The task to allocate the slot for_@param allowQueued Whether allow the task be queued if we do not have enough resource_@param preferredLocations preferred locations for the slot allocation_@param timeout after which the allocation fails with a timeout exception_@return The future of the allocation;CompletableFuture<LogicalSlot> allocateSlot(_		SlotRequestId slotRequestId,_		ScheduledUnit task,_		boolean allowQueued,_		SlotProfile slotProfile,_		Time timeout)_;allocating,slot,with,specific,requirement,param,task,the,task,to,allocate,the,slot,for,param,allow,queued,whether,allow,the,task,be,queued,if,we,do,not,have,enough,resource,param,preferred,locations,preferred,locations,for,the,slot,allocation,param,timeout,after,which,the,allocation,fails,with,a,timeout,exception,return,the,future,of,the,allocation;completable,future,logical,slot,allocate,slot,slot,request,id,slot,request,id,scheduled,unit,task,boolean,allow,queued,slot,profile,slot,profile,time,timeout
SlotProvider -> CompletableFuture<LogicalSlot> allocateSlot( 		SlotRequestId slotRequestId, 		ScheduledUnit task, 		boolean allowQueued, 		SlotProfile slotProfile, 		Time timeout)_;1521537266;Allocating slot with specific requirement.__@param slotRequestId identifying the slot request_@param task The task to allocate the slot for_@param allowQueued Whether allow the task be queued if we do not have enough resource_@param slotProfile profile of the requested slot_@param timeout after which the allocation fails with a timeout exception_@return The future of the allocation;CompletableFuture<LogicalSlot> allocateSlot(_		SlotRequestId slotRequestId,_		ScheduledUnit task,_		boolean allowQueued,_		SlotProfile slotProfile,_		Time timeout)_;allocating,slot,with,specific,requirement,param,slot,request,id,identifying,the,slot,request,param,task,the,task,to,allocate,the,slot,for,param,allow,queued,whether,allow,the,task,be,queued,if,we,do,not,have,enough,resource,param,slot,profile,profile,of,the,requested,slot,param,timeout,after,which,the,allocation,fails,with,a,timeout,exception,return,the,future,of,the,allocation;completable,future,logical,slot,allocate,slot,slot,request,id,slot,request,id,scheduled,unit,task,boolean,allow,queued,slot,profile,slot,profile,time,timeout
