commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Returns a {@link Buffer} instance from the buffer provider, if one is available.  *  * <p>Returns <code>null</code> if no buffer is available or the buffer provider has been destroyed.  */ ;/**  * Returns a {@link Buffer} instance from the buffer provider, if one is available.  *  * <p>Returns <code>null</code> if no buffer is available or the buffer provider has been destroyed.  */ Buffer requestBuffer() throws IOException.
true;;0;1;/**  * Returns a {@link Buffer} instance from the buffer provider.  *  * <p>If there is no buffer available, the call will block until one becomes available again or the  * buffer provider has been destroyed.  */ ;/**  * Returns a {@link Buffer} instance from the buffer provider.  *  * <p>If there is no buffer available, the call will block until one becomes available again or the  * buffer provider has been destroyed.  */ Buffer requestBufferBlocking() throws IOException, InterruptedException.
true;;0;1;/**  * Returns a {@link BufferBuilder} instance from the buffer provider.  *  * <p>If there is no buffer available, the call will block until one becomes available again or the  * buffer provider has been destroyed.  */ ;/**  * Returns a {@link BufferBuilder} instance from the buffer provider.  *  * <p>If there is no buffer available, the call will block until one becomes available again or the  * buffer provider has been destroyed.  */ BufferBuilder requestBufferBuilderBlocking() throws IOException, InterruptedException.
true;;1;1;/**  * Adds a buffer availability listener to the buffer provider.  *  * <p>The operation fails with return value <code>false</code>, when there is a buffer available or  * the buffer provider has been destroyed.  */ ;/**  * Adds a buffer availability listener to the buffer provider.  *  * <p>The operation fails with return value <code>false</code>, when there is a buffer available or  * the buffer provider has been destroyed.  */ boolean addBufferListener(BufferListener listener).
true;;0;1;/**  * Returns whether the buffer provider has been destroyed.  */ ;/**  * Returns whether the buffer provider has been destroyed.  */ boolean isDestroyed().
true;;0;1;/**  * Returns the size of the underlying memory segments. This is the maximum size a {@link Buffer}  * instance can have.  */ ;/**  * Returns the size of the underlying memory segments. This is the maximum size a {@link Buffer}  * instance can have.  */ int getMemorySegmentSize().
