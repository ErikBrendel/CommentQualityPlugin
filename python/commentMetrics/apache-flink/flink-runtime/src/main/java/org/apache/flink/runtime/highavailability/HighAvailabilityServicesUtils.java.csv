# id;timestamp;commentText;codeText;commentWords;codeWords
HighAvailabilityServicesUtils -> public static Tuple2<String, Integer> getJobManagerAddress(Configuration configuration) throws ConfigurationException;1493975155;Returns the JobManager's hostname and port extracted from the given_{@link Configuration}.__@param configuration Configuration to extract the JobManager's address from_@return The JobManager's hostname and port_@throws ConfigurationException if the JobManager's address cannot be extracted from the configuration;public static Tuple2<String, Integer> getJobManagerAddress(Configuration configuration) throws ConfigurationException {__		final String hostname = configuration.getString(JobManagerOptions.ADDRESS)__		final int port = configuration.getInteger(JobManagerOptions.PORT)___		if (hostname == null) {_			throw new ConfigurationException("Config parameter '" + JobManagerOptions.ADDRESS +_				"' is missing (hostname/address of JobManager to connect to).")__		}__		if (port <= 0 || port >= 65536) {_			throw new ConfigurationException("Invalid value for '" + JobManagerOptions.PORT +_				"' (port of the JobManager actor system) : " + port +_				".  it must be great than 0 and less than 65536.")__		}__		return Tuple2.of(hostname, port)__	};returns,the,job,manager,s,hostname,and,port,extracted,from,the,given,link,configuration,param,configuration,configuration,to,extract,the,job,manager,s,address,from,return,the,job,manager,s,hostname,and,port,throws,configuration,exception,if,the,job,manager,s,address,cannot,be,extracted,from,the,configuration;public,static,tuple2,string,integer,get,job,manager,address,configuration,configuration,throws,configuration,exception,final,string,hostname,configuration,get,string,job,manager,options,address,final,int,port,configuration,get,integer,job,manager,options,port,if,hostname,null,throw,new,configuration,exception,config,parameter,job,manager,options,address,is,missing,hostname,address,of,job,manager,to,connect,to,if,port,0,port,65536,throw,new,configuration,exception,invalid,value,for,job,manager,options,port,port,of,the,job,manager,actor,system,port,it,must,be,great,than,0,and,less,than,65536,return,tuple2,of,hostname,port
HighAvailabilityServicesUtils -> public static Tuple2<String, Integer> getJobManagerAddress(Configuration configuration) throws ConfigurationException;1493975167;Returns the JobManager's hostname and port extracted from the given_{@link Configuration}.__@param configuration Configuration to extract the JobManager's address from_@return The JobManager's hostname and port_@throws ConfigurationException if the JobManager's address cannot be extracted from the configuration;public static Tuple2<String, Integer> getJobManagerAddress(Configuration configuration) throws ConfigurationException {__		final String hostname = configuration.getString(JobManagerOptions.ADDRESS)__		final int port = configuration.getInteger(JobManagerOptions.PORT)___		if (hostname == null) {_			throw new ConfigurationException("Config parameter '" + JobManagerOptions.ADDRESS +_				"' is missing (hostname/address of JobManager to connect to).")__		}__		if (port <= 0 || port >= 65536) {_			throw new ConfigurationException("Invalid value for '" + JobManagerOptions.PORT +_				"' (port of the JobManager actor system) : " + port +_				".  it must be greater than 0 and less than 65536.")__		}__		return Tuple2.of(hostname, port)__	};returns,the,job,manager,s,hostname,and,port,extracted,from,the,given,link,configuration,param,configuration,configuration,to,extract,the,job,manager,s,address,from,return,the,job,manager,s,hostname,and,port,throws,configuration,exception,if,the,job,manager,s,address,cannot,be,extracted,from,the,configuration;public,static,tuple2,string,integer,get,job,manager,address,configuration,configuration,throws,configuration,exception,final,string,hostname,configuration,get,string,job,manager,options,address,final,int,port,configuration,get,integer,job,manager,options,port,if,hostname,null,throw,new,configuration,exception,config,parameter,job,manager,options,address,is,missing,hostname,address,of,job,manager,to,connect,to,if,port,0,port,65536,throw,new,configuration,exception,invalid,value,for,job,manager,options,port,port,of,the,job,manager,actor,system,port,it,must,be,greater,than,0,and,less,than,65536,return,tuple2,of,hostname,port
HighAvailabilityServicesUtils -> public static Tuple2<String, Integer> getJobManagerAddress(Configuration configuration) throws ConfigurationException;1495001929;Returns the JobManager's hostname and port extracted from the given_{@link Configuration}.__@param configuration Configuration to extract the JobManager's address from_@return The JobManager's hostname and port_@throws ConfigurationException if the JobManager's address cannot be extracted from the configuration;public static Tuple2<String, Integer> getJobManagerAddress(Configuration configuration) throws ConfigurationException {__		final String hostname = configuration.getString(JobManagerOptions.ADDRESS)__		final int port = configuration.getInteger(JobManagerOptions.PORT)___		if (hostname == null) {_			throw new ConfigurationException("Config parameter '" + JobManagerOptions.ADDRESS +_				"' is missing (hostname/address of JobManager to connect to).")__		}__		if (port <= 0 || port >= 65536) {_			throw new ConfigurationException("Invalid value for '" + JobManagerOptions.PORT +_				"' (port of the JobManager actor system) : " + port +_				".  it must be greater than 0 and less than 65536.")__		}__		return Tuple2.of(hostname, port)__	};returns,the,job,manager,s,hostname,and,port,extracted,from,the,given,link,configuration,param,configuration,configuration,to,extract,the,job,manager,s,address,from,return,the,job,manager,s,hostname,and,port,throws,configuration,exception,if,the,job,manager,s,address,cannot,be,extracted,from,the,configuration;public,static,tuple2,string,integer,get,job,manager,address,configuration,configuration,throws,configuration,exception,final,string,hostname,configuration,get,string,job,manager,options,address,final,int,port,configuration,get,integer,job,manager,options,port,if,hostname,null,throw,new,configuration,exception,config,parameter,job,manager,options,address,is,missing,hostname,address,of,job,manager,to,connect,to,if,port,0,port,65536,throw,new,configuration,exception,invalid,value,for,job,manager,options,port,port,of,the,job,manager,actor,system,port,it,must,be,greater,than,0,and,less,than,65536,return,tuple2,of,hostname,port
HighAvailabilityServicesUtils -> public static Tuple2<String, Integer> getJobManagerAddress(Configuration configuration) throws ConfigurationException;1504472365;Returns the JobManager's hostname and port extracted from the given_{@link Configuration}.__@param configuration Configuration to extract the JobManager's address from_@return The JobManager's hostname and port_@throws ConfigurationException if the JobManager's address cannot be extracted from the configuration;public static Tuple2<String, Integer> getJobManagerAddress(Configuration configuration) throws ConfigurationException {__		final String hostname = configuration.getString(JobManagerOptions.ADDRESS)__		final int port = configuration.getInteger(JobManagerOptions.PORT)___		if (hostname == null) {_			throw new ConfigurationException("Config parameter '" + JobManagerOptions.ADDRESS +_				"' is missing (hostname/address of JobManager to connect to).")__		}__		if (port <= 0 || port >= 65536) {_			throw new ConfigurationException("Invalid value for '" + JobManagerOptions.PORT +_				"' (port of the JobManager actor system) : " + port +_				".  it must be greater than 0 and less than 65536.")__		}__		return Tuple2.of(hostname, port)__	};returns,the,job,manager,s,hostname,and,port,extracted,from,the,given,link,configuration,param,configuration,configuration,to,extract,the,job,manager,s,address,from,return,the,job,manager,s,hostname,and,port,throws,configuration,exception,if,the,job,manager,s,address,cannot,be,extracted,from,the,configuration;public,static,tuple2,string,integer,get,job,manager,address,configuration,configuration,throws,configuration,exception,final,string,hostname,configuration,get,string,job,manager,options,address,final,int,port,configuration,get,integer,job,manager,options,port,if,hostname,null,throw,new,configuration,exception,config,parameter,job,manager,options,address,is,missing,hostname,address,of,job,manager,to,connect,to,if,port,0,port,65536,throw,new,configuration,exception,invalid,value,for,job,manager,options,port,port,of,the,job,manager,actor,system,port,it,must,be,greater,than,0,and,less,than,65536,return,tuple2,of,hostname,port
HighAvailabilityServicesUtils -> public static Tuple2<String, Integer> getJobManagerAddress(Configuration configuration) throws ConfigurationException;1516971025;Returns the JobManager's hostname and port extracted from the given_{@link Configuration}.__@param configuration Configuration to extract the JobManager's address from_@return The JobManager's hostname and port_@throws ConfigurationException if the JobManager's address cannot be extracted from the configuration;public static Tuple2<String, Integer> getJobManagerAddress(Configuration configuration) throws ConfigurationException {__		final String hostname = configuration.getString(JobManagerOptions.ADDRESS)__		final int port = configuration.getInteger(JobManagerOptions.PORT)___		if (hostname == null) {_			throw new ConfigurationException("Config parameter '" + JobManagerOptions.ADDRESS +_				"' is missing (hostname/address of JobManager to connect to).")__		}__		if (port <= 0 || port >= 65536) {_			throw new ConfigurationException("Invalid value for '" + JobManagerOptions.PORT +_				"' (port of the JobManager actor system) : " + port +_				".  it must be greater than 0 and less than 65536.")__		}__		return Tuple2.of(hostname, port)__	};returns,the,job,manager,s,hostname,and,port,extracted,from,the,given,link,configuration,param,configuration,configuration,to,extract,the,job,manager,s,address,from,return,the,job,manager,s,hostname,and,port,throws,configuration,exception,if,the,job,manager,s,address,cannot,be,extracted,from,the,configuration;public,static,tuple2,string,integer,get,job,manager,address,configuration,configuration,throws,configuration,exception,final,string,hostname,configuration,get,string,job,manager,options,address,final,int,port,configuration,get,integer,job,manager,options,port,if,hostname,null,throw,new,configuration,exception,config,parameter,job,manager,options,address,is,missing,hostname,address,of,job,manager,to,connect,to,if,port,0,port,65536,throw,new,configuration,exception,invalid,value,for,job,manager,options,port,port,of,the,job,manager,actor,system,port,it,must,be,greater,than,0,and,less,than,65536,return,tuple2,of,hostname,port
HighAvailabilityServicesUtils -> public static Tuple2<String, Integer> getJobManagerAddress(Configuration configuration) throws ConfigurationException;1521385094;Returns the JobManager's hostname and port extracted from the given_{@link Configuration}.__@param configuration Configuration to extract the JobManager's address from_@return The JobManager's hostname and port_@throws ConfigurationException if the JobManager's address cannot be extracted from the configuration;public static Tuple2<String, Integer> getJobManagerAddress(Configuration configuration) throws ConfigurationException {__		final String hostname = configuration.getString(JobManagerOptions.ADDRESS)__		final int port = configuration.getInteger(JobManagerOptions.PORT)___		if (hostname == null) {_			throw new ConfigurationException("Config parameter '" + JobManagerOptions.ADDRESS +_				"' is missing (hostname/address of JobManager to connect to).")__		}__		if (port <= 0 || port >= 65536) {_			throw new ConfigurationException("Invalid value for '" + JobManagerOptions.PORT +_				"' (port of the JobManager actor system) : " + port +_				".  it must be greater than 0 and less than 65536.")__		}__		return Tuple2.of(hostname, port)__	};returns,the,job,manager,s,hostname,and,port,extracted,from,the,given,link,configuration,param,configuration,configuration,to,extract,the,job,manager,s,address,from,return,the,job,manager,s,hostname,and,port,throws,configuration,exception,if,the,job,manager,s,address,cannot,be,extracted,from,the,configuration;public,static,tuple2,string,integer,get,job,manager,address,configuration,configuration,throws,configuration,exception,final,string,hostname,configuration,get,string,job,manager,options,address,final,int,port,configuration,get,integer,job,manager,options,port,if,hostname,null,throw,new,configuration,exception,config,parameter,job,manager,options,address,is,missing,hostname,address,of,job,manager,to,connect,to,if,port,0,port,65536,throw,new,configuration,exception,invalid,value,for,job,manager,options,port,port,of,the,job,manager,actor,system,port,it,must,be,greater,than,0,and,less,than,65536,return,tuple2,of,hostname,port
HighAvailabilityServicesUtils -> public static Tuple2<String, Integer> getJobManagerAddress(Configuration configuration) throws ConfigurationException;1524124694;Returns the JobManager's hostname and port extracted from the given_{@link Configuration}.__@param configuration Configuration to extract the JobManager's address from_@return The JobManager's hostname and port_@throws ConfigurationException if the JobManager's address cannot be extracted from the configuration;public static Tuple2<String, Integer> getJobManagerAddress(Configuration configuration) throws ConfigurationException {__		final String hostname = configuration.getString(JobManagerOptions.ADDRESS)__		final int port = configuration.getInteger(JobManagerOptions.PORT)___		if (hostname == null) {_			throw new ConfigurationException("Config parameter '" + JobManagerOptions.ADDRESS +_				"' is missing (hostname/address of JobManager to connect to).")__		}__		if (port <= 0 || port >= 65536) {_			throw new ConfigurationException("Invalid value for '" + JobManagerOptions.PORT +_				"' (port of the JobManager actor system) : " + port +_				".  it must be greater than 0 and less than 65536.")__		}__		return Tuple2.of(hostname, port)__	};returns,the,job,manager,s,hostname,and,port,extracted,from,the,given,link,configuration,param,configuration,configuration,to,extract,the,job,manager,s,address,from,return,the,job,manager,s,hostname,and,port,throws,configuration,exception,if,the,job,manager,s,address,cannot,be,extracted,from,the,configuration;public,static,tuple2,string,integer,get,job,manager,address,configuration,configuration,throws,configuration,exception,final,string,hostname,configuration,get,string,job,manager,options,address,final,int,port,configuration,get,integer,job,manager,options,port,if,hostname,null,throw,new,configuration,exception,config,parameter,job,manager,options,address,is,missing,hostname,address,of,job,manager,to,connect,to,if,port,0,port,65536,throw,new,configuration,exception,invalid,value,for,job,manager,options,port,port,of,the,job,manager,actor,system,port,it,must,be,greater,than,0,and,less,than,65536,return,tuple2,of,hostname,port
HighAvailabilityServicesUtils -> public static Tuple2<String, Integer> getJobManagerAddress(Configuration configuration) throws ConfigurationException;1531721446;Returns the JobManager's hostname and port extracted from the given_{@link Configuration}.__@param configuration Configuration to extract the JobManager's address from_@return The JobManager's hostname and port_@throws ConfigurationException if the JobManager's address cannot be extracted from the configuration;public static Tuple2<String, Integer> getJobManagerAddress(Configuration configuration) throws ConfigurationException {__		final String hostname = configuration.getString(JobManagerOptions.ADDRESS)__		final int port = configuration.getInteger(JobManagerOptions.PORT)___		if (hostname == null) {_			throw new ConfigurationException("Config parameter '" + JobManagerOptions.ADDRESS +_				"' is missing (hostname/address of JobManager to connect to).")__		}__		if (port <= 0 || port >= 65536) {_			throw new ConfigurationException("Invalid value for '" + JobManagerOptions.PORT +_				"' (port of the JobManager actor system) : " + port +_				".  it must be greater than 0 and less than 65536.")__		}__		return Tuple2.of(hostname, port)__	};returns,the,job,manager,s,hostname,and,port,extracted,from,the,given,link,configuration,param,configuration,configuration,to,extract,the,job,manager,s,address,from,return,the,job,manager,s,hostname,and,port,throws,configuration,exception,if,the,job,manager,s,address,cannot,be,extracted,from,the,configuration;public,static,tuple2,string,integer,get,job,manager,address,configuration,configuration,throws,configuration,exception,final,string,hostname,configuration,get,string,job,manager,options,address,final,int,port,configuration,get,integer,job,manager,options,port,if,hostname,null,throw,new,configuration,exception,config,parameter,job,manager,options,address,is,missing,hostname,address,of,job,manager,to,connect,to,if,port,0,port,65536,throw,new,configuration,exception,invalid,value,for,job,manager,options,port,port,of,the,job,manager,actor,system,port,it,must,be,greater,than,0,and,less,than,65536,return,tuple2,of,hostname,port
HighAvailabilityServicesUtils -> public static Tuple2<String, Integer> getJobManagerAddress(Configuration configuration) throws ConfigurationException;1537436046;Returns the JobManager's hostname and port extracted from the given_{@link Configuration}.__@param configuration Configuration to extract the JobManager's address from_@return The JobManager's hostname and port_@throws ConfigurationException if the JobManager's address cannot be extracted from the configuration;public static Tuple2<String, Integer> getJobManagerAddress(Configuration configuration) throws ConfigurationException {__		final String hostname = configuration.getString(JobManagerOptions.ADDRESS)__		final int port = configuration.getInteger(JobManagerOptions.PORT)___		if (hostname == null) {_			throw new ConfigurationException("Config parameter '" + JobManagerOptions.ADDRESS +_				"' is missing (hostname/address of JobManager to connect to).")__		}__		if (port <= 0 || port >= 65536) {_			throw new ConfigurationException("Invalid value for '" + JobManagerOptions.PORT +_				"' (port of the JobManager actor system) : " + port +_				".  it must be greater than 0 and less than 65536.")__		}__		return Tuple2.of(hostname, port)__	};returns,the,job,manager,s,hostname,and,port,extracted,from,the,given,link,configuration,param,configuration,configuration,to,extract,the,job,manager,s,address,from,return,the,job,manager,s,hostname,and,port,throws,configuration,exception,if,the,job,manager,s,address,cannot,be,extracted,from,the,configuration;public,static,tuple2,string,integer,get,job,manager,address,configuration,configuration,throws,configuration,exception,final,string,hostname,configuration,get,string,job,manager,options,address,final,int,port,configuration,get,integer,job,manager,options,port,if,hostname,null,throw,new,configuration,exception,config,parameter,job,manager,options,address,is,missing,hostname,address,of,job,manager,to,connect,to,if,port,0,port,65536,throw,new,configuration,exception,invalid,value,for,job,manager,options,port,port,of,the,job,manager,actor,system,port,it,must,be,greater,than,0,and,less,than,65536,return,tuple2,of,hostname,port
HighAvailabilityServicesUtils -> public static Tuple2<String, Integer> getJobManagerAddress(Configuration configuration) throws ConfigurationException;1537436047;Returns the JobManager's hostname and port extracted from the given_{@link Configuration}.__@param configuration Configuration to extract the JobManager's address from_@return The JobManager's hostname and port_@throws ConfigurationException if the JobManager's address cannot be extracted from the configuration;public static Tuple2<String, Integer> getJobManagerAddress(Configuration configuration) throws ConfigurationException {__		final String hostname = configuration.getString(JobManagerOptions.ADDRESS)__		final int port = configuration.getInteger(JobManagerOptions.PORT)___		if (hostname == null) {_			throw new ConfigurationException("Config parameter '" + JobManagerOptions.ADDRESS +_				"' is missing (hostname/address of JobManager to connect to).")__		}__		if (port <= 0 || port >= 65536) {_			throw new ConfigurationException("Invalid value for '" + JobManagerOptions.PORT +_				"' (port of the JobManager actor system) : " + port +_				".  it must be greater than 0 and less than 65536.")__		}__		return Tuple2.of(hostname, port)__	};returns,the,job,manager,s,hostname,and,port,extracted,from,the,given,link,configuration,param,configuration,configuration,to,extract,the,job,manager,s,address,from,return,the,job,manager,s,hostname,and,port,throws,configuration,exception,if,the,job,manager,s,address,cannot,be,extracted,from,the,configuration;public,static,tuple2,string,integer,get,job,manager,address,configuration,configuration,throws,configuration,exception,final,string,hostname,configuration,get,string,job,manager,options,address,final,int,port,configuration,get,integer,job,manager,options,port,if,hostname,null,throw,new,configuration,exception,config,parameter,job,manager,options,address,is,missing,hostname,address,of,job,manager,to,connect,to,if,port,0,port,65536,throw,new,configuration,exception,invalid,value,for,job,manager,options,port,port,of,the,job,manager,actor,system,port,it,must,be,greater,than,0,and,less,than,65536,return,tuple2,of,hostname,port
HighAvailabilityServicesUtils -> public static Tuple2<String, Integer> getJobManagerAddress(Configuration configuration) throws ConfigurationException;1537436047;Returns the JobManager's hostname and port extracted from the given_{@link Configuration}.__@param configuration Configuration to extract the JobManager's address from_@return The JobManager's hostname and port_@throws ConfigurationException if the JobManager's address cannot be extracted from the configuration;public static Tuple2<String, Integer> getJobManagerAddress(Configuration configuration) throws ConfigurationException {__		final String hostname = configuration.getString(JobManagerOptions.ADDRESS)__		final int port = configuration.getInteger(JobManagerOptions.PORT)___		if (hostname == null) {_			throw new ConfigurationException("Config parameter '" + JobManagerOptions.ADDRESS +_				"' is missing (hostname/address of JobManager to connect to).")__		}__		if (port <= 0 || port >= 65536) {_			throw new ConfigurationException("Invalid value for '" + JobManagerOptions.PORT +_				"' (port of the JobManager actor system) : " + port +_				".  it must be greater than 0 and less than 65536.")__		}__		return Tuple2.of(hostname, port)__	};returns,the,job,manager,s,hostname,and,port,extracted,from,the,given,link,configuration,param,configuration,configuration,to,extract,the,job,manager,s,address,from,return,the,job,manager,s,hostname,and,port,throws,configuration,exception,if,the,job,manager,s,address,cannot,be,extracted,from,the,configuration;public,static,tuple2,string,integer,get,job,manager,address,configuration,configuration,throws,configuration,exception,final,string,hostname,configuration,get,string,job,manager,options,address,final,int,port,configuration,get,integer,job,manager,options,port,if,hostname,null,throw,new,configuration,exception,config,parameter,job,manager,options,address,is,missing,hostname,address,of,job,manager,to,connect,to,if,port,0,port,65536,throw,new,configuration,exception,invalid,value,for,job,manager,options,port,port,of,the,job,manager,actor,system,port,it,must,be,greater,than,0,and,less,than,65536,return,tuple2,of,hostname,port
