commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;// ------------------------------------------------------------------------ // Accessors // ------------------------------------------------------------------------ public JobManagerScopeFormat getJobManagerFormat() {     return this.jobManagerFormat. }
false;public;0;3;;public TaskManagerScopeFormat getTaskManagerFormat() {     return this.taskManagerFormat. }
false;public;0;3;;public TaskManagerJobScopeFormat getTaskManagerJobFormat() {     return this.taskManagerJobFormat. }
false;public;0;3;;public JobManagerJobScopeFormat getJobManagerJobFormat() {     return this.jobManagerJobFormat. }
false;public;0;3;;public TaskScopeFormat getTaskFormat() {     return this.taskFormat. }
false;public;0;3;;public OperatorScopeFormat getOperatorFormat() {     return this.operatorFormat. }
true;public,static;1;10;/**  * Creates the scope formats as defined in the given configuration.  *  * @param config The configuration that defines the formats  * @return The ScopeFormats parsed from the configuration  */ ;// ------------------------------------------------------------------------ // Parsing from Config // ------------------------------------------------------------------------ /**  * Creates the scope formats as defined in the given configuration.  *  * @param config The configuration that defines the formats  * @return The ScopeFormats parsed from the configuration  */ public static ScopeFormats fromConfig(Configuration config) {     String jmFormat = config.getString(MetricOptions.SCOPE_NAMING_JM).     String jmJobFormat = config.getString(MetricOptions.SCOPE_NAMING_JM_JOB).     String tmFormat = config.getString(MetricOptions.SCOPE_NAMING_TM).     String tmJobFormat = config.getString(MetricOptions.SCOPE_NAMING_TM_JOB).     String taskFormat = config.getString(MetricOptions.SCOPE_NAMING_TASK).     String operatorFormat = config.getString(MetricOptions.SCOPE_NAMING_OPERATOR).     return new ScopeFormats(jmFormat, jmJobFormat, tmFormat, tmJobFormat, taskFormat, operatorFormat). }
