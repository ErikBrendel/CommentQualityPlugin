# id;timestamp;commentText;codeText;commentWords;codeWords
HeapPriorityQueue -> @SuppressWarnings("unchecked") 	public HeapPriorityQueue( 		@Nonnull PriorityComparator<T> elementPriorityComparator, 		@Nonnegative int minimumCapacity);1531145571;Creates an empty {@link HeapPriorityQueue} with the requested initial capacity.__@param elementPriorityComparator comparator for the priority of contained elements._@param minimumCapacity the minimum and initial capacity of this priority queue.;@SuppressWarnings("unchecked")_	public HeapPriorityQueue(_		@Nonnull PriorityComparator<T> elementPriorityComparator,_		@Nonnegative int minimumCapacity) {__		this.elementPriorityComparator = elementPriorityComparator__		this.queue = (T[]) new HeapPriorityQueueElement[QUEUE_HEAD_INDEX + minimumCapacity]__	};creates,an,empty,link,heap,priority,queue,with,the,requested,initial,capacity,param,element,priority,comparator,comparator,for,the,priority,of,contained,elements,param,minimum,capacity,the,minimum,and,initial,capacity,of,this,priority,queue;suppress,warnings,unchecked,public,heap,priority,queue,nonnull,priority,comparator,t,element,priority,comparator,nonnegative,int,minimum,capacity,this,element,priority,comparator,element,priority,comparator,this,queue,t,new,heap,priority,queue,element,minimum,capacity
HeapPriorityQueue -> @SuppressWarnings("unchecked") 	public HeapPriorityQueue( 		@Nonnull PriorityComparator<T> elementPriorityComparator, 		@Nonnegative int minimumCapacity);1531771917;Creates an empty {@link HeapPriorityQueue} with the requested initial capacity.__@param elementPriorityComparator comparator for the priority of contained elements._@param minimumCapacity the minimum and initial capacity of this priority queue.;@SuppressWarnings("unchecked")_	public HeapPriorityQueue(_		@Nonnull PriorityComparator<T> elementPriorityComparator,_		@Nonnegative int minimumCapacity) {__		this.elementPriorityComparator = elementPriorityComparator__		this.queue = (T[]) new HeapPriorityQueueElement[QUEUE_HEAD_INDEX + minimumCapacity]__	};creates,an,empty,link,heap,priority,queue,with,the,requested,initial,capacity,param,element,priority,comparator,comparator,for,the,priority,of,contained,elements,param,minimum,capacity,the,minimum,and,initial,capacity,of,this,priority,queue;suppress,warnings,unchecked,public,heap,priority,queue,nonnull,priority,comparator,t,element,priority,comparator,nonnegative,int,minimum,capacity,this,element,priority,comparator,element,priority,comparator,this,queue,t,new,heap,priority,queue,element,minimum,capacity
HeapPriorityQueue -> @SuppressWarnings("unchecked") 	public HeapPriorityQueue( 		@Nonnull PriorityComparator<T> elementPriorityComparator, 		@Nonnegative int minimumCapacity);1533212741;Creates an empty {@link HeapPriorityQueue} with the requested initial capacity.__@param elementPriorityComparator comparator for the priority of contained elements._@param minimumCapacity the minimum and initial capacity of this priority queue.;@SuppressWarnings("unchecked")_	public HeapPriorityQueue(_		@Nonnull PriorityComparator<T> elementPriorityComparator,_		@Nonnegative int minimumCapacity) {_		super(minimumCapacity)__		this.elementPriorityComparator = elementPriorityComparator__	};creates,an,empty,link,heap,priority,queue,with,the,requested,initial,capacity,param,element,priority,comparator,comparator,for,the,priority,of,contained,elements,param,minimum,capacity,the,minimum,and,initial,capacity,of,this,priority,queue;suppress,warnings,unchecked,public,heap,priority,queue,nonnull,priority,comparator,t,element,priority,comparator,nonnegative,int,minimum,capacity,super,minimum,capacity,this,element,priority,comparator,element,priority,comparator
HeapPriorityQueue -> @Nonnull 	public CloseableIterator<T> iterator();1530639128;Returns an iterator over the elements in this queue. The iterator_does not return the elements in any particular order.__@return an iterator over the elements in this queue.;@Nonnull_	public CloseableIterator<T> iterator() {_		return new HeapIterator()__	};returns,an,iterator,over,the,elements,in,this,queue,the,iterator,does,not,return,the,elements,in,any,particular,order,return,an,iterator,over,the,elements,in,this,queue;nonnull,public,closeable,iterator,t,iterator,return,new,heap,iterator
HeapPriorityQueue -> @Nonnull 	public CloseableIterator<T> iterator();1531145571;Returns an iterator over the elements in this queue. The iterator_does not return the elements in any particular order.__@return an iterator over the elements in this queue.;@Nonnull_	public CloseableIterator<T> iterator() {_		return new HeapIterator()__	};returns,an,iterator,over,the,elements,in,this,queue,the,iterator,does,not,return,the,elements,in,any,particular,order,return,an,iterator,over,the,elements,in,this,queue;nonnull,public,closeable,iterator,t,iterator,return,new,heap,iterator
HeapPriorityQueue -> @Nonnull 	public CloseableIterator<T> iterator();1531771917;Returns an iterator over the elements in this queue. The iterator_does not return the elements in any particular order.__@return an iterator over the elements in this queue.;@Nonnull_	public CloseableIterator<T> iterator() {_		return new HeapIterator()__	};returns,an,iterator,over,the,elements,in,this,queue,the,iterator,does,not,return,the,elements,in,any,particular,order,return,an,iterator,over,the,elements,in,this,queue;nonnull,public,closeable,iterator,t,iterator,return,new,heap,iterator
HeapPriorityQueue -> @Override 	public boolean add(@Nonnull T toAdd);1530639128;Adds the element to add to the heap. This element should not be managed by any other {@link HeapPriorityQueue}.__@return <code>true</code> if the operation changed the head element or if is it unclear if the head element changed._Only returns <code>false</code> iff the head element was not changed by this operation.;@Override_	public boolean add(@Nonnull T toAdd) {_		return addInternal(toAdd)__	};adds,the,element,to,add,to,the,heap,this,element,should,not,be,managed,by,any,other,link,heap,priority,queue,return,code,true,code,if,the,operation,changed,the,head,element,or,if,is,it,unclear,if,the,head,element,changed,only,returns,code,false,code,iff,the,head,element,was,not,changed,by,this,operation;override,public,boolean,add,nonnull,t,to,add,return,add,internal,to,add
HeapPriorityQueue -> @Override 	public boolean add(@Nonnull T toAdd);1531145571;Adds the element to add to the heap. This element should not be managed by any other {@link HeapPriorityQueue}.__@return <code>true</code> if the operation changed the head element or if is it unclear if the head element changed._Only returns <code>false</code> iff the head element was not changed by this operation.;@Override_	public boolean add(@Nonnull T toAdd) {_		return addInternal(toAdd)__	};adds,the,element,to,add,to,the,heap,this,element,should,not,be,managed,by,any,other,link,heap,priority,queue,return,code,true,code,if,the,operation,changed,the,head,element,or,if,is,it,unclear,if,the,head,element,changed,only,returns,code,false,code,iff,the,head,element,was,not,changed,by,this,operation;override,public,boolean,add,nonnull,t,to,add,return,add,internal,to,add
HeapPriorityQueue -> @Override 	public boolean add(@Nonnull T toAdd);1531771917;Adds the element to add to the heap. This element should not be managed by any other {@link HeapPriorityQueue}.__@return <code>true</code> if the operation changed the head element or if is it unclear if the head element changed._Only returns <code>false</code> iff the head element was not changed by this operation.;@Override_	public boolean add(@Nonnull T toAdd) {_		return addInternal(toAdd)__	};adds,the,element,to,add,to,the,heap,this,element,should,not,be,managed,by,any,other,link,heap,priority,queue,return,code,true,code,if,the,operation,changed,the,head,element,or,if,is,it,unclear,if,the,head,element,changed,only,returns,code,false,code,iff,the,head,element,was,not,changed,by,this,operation;override,public,boolean,add,nonnull,t,to,add,return,add,internal,to,add
HeapPriorityQueue -> @Override 	public boolean remove(@Nonnull T toRemove);1530639128;This remove is based on object identity, not the result of equals. We use the objects managed index to find_the instance in the queue array.__@return <code>true</code> if the operation changed the head element or if is it unclear if the head element changed._Only returns <code>false</code> iff the head element was not changed by this operation.;@Override_	public boolean remove(@Nonnull T toRemove) {_		return removeInternal(toRemove)__	};this,remove,is,based,on,object,identity,not,the,result,of,equals,we,use,the,objects,managed,index,to,find,the,instance,in,the,queue,array,return,code,true,code,if,the,operation,changed,the,head,element,or,if,is,it,unclear,if,the,head,element,changed,only,returns,code,false,code,iff,the,head,element,was,not,changed,by,this,operation;override,public,boolean,remove,nonnull,t,to,remove,return,remove,internal,to,remove
HeapPriorityQueue -> @Override 	public boolean remove(@Nonnull T toRemove);1531145571;This remove is based on object identity, not the result of equals. We use the objects managed index to find_the instance in the queue array.__@return <code>true</code> if the operation changed the head element or if is it unclear if the head element changed._Only returns <code>false</code> iff the head element was not changed by this operation.;@Override_	public boolean remove(@Nonnull T toRemove) {_		return removeInternal(toRemove)__	};this,remove,is,based,on,object,identity,not,the,result,of,equals,we,use,the,objects,managed,index,to,find,the,instance,in,the,queue,array,return,code,true,code,if,the,operation,changed,the,head,element,or,if,is,it,unclear,if,the,head,element,changed,only,returns,code,false,code,iff,the,head,element,was,not,changed,by,this,operation;override,public,boolean,remove,nonnull,t,to,remove,return,remove,internal,to,remove
HeapPriorityQueue -> @Override 	public boolean remove(@Nonnull T toRemove);1531771917;This remove is based on object identity, not the result of equals. We use the objects managed index to find_the instance in the queue array.__@return <code>true</code> if the operation changed the head element or if is it unclear if the head element changed._Only returns <code>false</code> iff the head element was not changed by this operation.;@Override_	public boolean remove(@Nonnull T toRemove) {_		return removeInternal(toRemove)__	};this,remove,is,based,on,object,identity,not,the,result,of,equals,we,use,the,objects,managed,index,to,find,the,instance,in,the,queue,array,return,code,true,code,if,the,operation,changed,the,head,element,or,if,is,it,unclear,if,the,head,element,changed,only,returns,code,false,code,iff,the,head,element,was,not,changed,by,this,operation;override,public,boolean,remove,nonnull,t,to,remove,return,remove,internal,to,remove
