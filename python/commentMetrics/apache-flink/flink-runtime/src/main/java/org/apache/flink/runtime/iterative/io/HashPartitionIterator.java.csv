commented;modifiers;parameterAmount;loc;comment;code
false;public;1;18;;@Override public BT next(BT reuse) throws IOException {     if (currentPartition == null) {         if (!partitions.hasNext()) {             return null.         }         currentPartition = partitions.next().         currentPartition.setReadPosition(0).     }     try {         reuse = serializer.deserialize(reuse, currentPartition).     } catch (EOFException e) {         reuse = advanceAndRead(reuse).     }     return reuse. }
false;public;0;17;;@Override public BT next() throws IOException {     if (currentPartition == null) {         if (!partitions.hasNext()) {             return null.         }         currentPartition = partitions.next().         currentPartition.setReadPosition(0).     }     try {         return serializer.deserialize(currentPartition).     } catch (EOFException e) {         return advanceAndRead().     } }
true;private;1;14;/* jump to the next partition and continue reading from that */ ;/* jump to the next partition and continue reading from that */ private BT advanceAndRead(BT reuse) throws IOException {     if (!partitions.hasNext()) {         return null.     }     currentPartition = partitions.next().     currentPartition.setReadPosition(0).     try {         reuse = serializer.deserialize(reuse, currentPartition).     } catch (EOFException e) {         reuse = advanceAndRead(reuse).     }     return reuse. }
true;private;0;13;/* jump to the next partition and continue reading from that */ ;/* jump to the next partition and continue reading from that */ private BT advanceAndRead() throws IOException {     if (!partitions.hasNext()) {         return null.     }     currentPartition = partitions.next().     currentPartition.setReadPosition(0).     try {         return serializer.deserialize(currentPartition).     } catch (EOFException e) {         return advanceAndRead().     } }
