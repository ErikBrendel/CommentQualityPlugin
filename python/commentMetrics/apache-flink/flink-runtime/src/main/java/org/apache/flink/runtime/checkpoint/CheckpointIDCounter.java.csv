commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Starts the {@link CheckpointIDCounter} service down.  */ ;/**  * Starts the {@link CheckpointIDCounter} service down.  */ void start() throws Exception.
true;;1;1;/**  * Shuts the {@link CheckpointIDCounter} service.  *  * <p>The job status is forwarded and used to decide whether state should  * actually be discarded or kept.  *  * @param jobStatus Job state on shut down  */ ;/**  * Shuts the {@link CheckpointIDCounter} service.  *  * <p>The job status is forwarded and used to decide whether state should  * actually be discarded or kept.  *  * @param jobStatus Job state on shut down  */ void shutdown(JobStatus jobStatus) throws Exception.
true;;0;1;/**  * Atomically increments the current checkpoint ID.  *  * @return The previous checkpoint ID  */ ;/**  * Atomically increments the current checkpoint ID.  *  * @return The previous checkpoint ID  */ long getAndIncrement() throws Exception.
true;;1;1;/**  * Sets the current checkpoint ID.  *  * @param newId The new ID  */ ;/**  * Sets the current checkpoint ID.  *  * @param newId The new ID  */ void setCount(long newId) throws Exception.
