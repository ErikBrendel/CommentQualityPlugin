commented;modifiers;parameterAmount;loc;comment;code
false;public;0;42;;@Test public void testZooKeeperEnsembleConnectStringConfiguration() throws Exception {     // ZooKeeper does not like whitespace in the quorum connect String.     String actual, expected.     Configuration conf = new Configuration().     {         expected = "localhost:2891".         setQuorum(conf, expected).         actual = ZooKeeperUtils.getZooKeeperEnsemble(conf).         assertEquals(expected, actual).         // with leading and trailing whitespace         setQuorum(conf, " localhost:2891 ").         actual = ZooKeeperUtils.getZooKeeperEnsemble(conf).         assertEquals(expected, actual).         // whitespace after port         setQuorum(conf, "localhost :2891").         actual = ZooKeeperUtils.getZooKeeperEnsemble(conf).         assertEquals(expected, actual).     }     {         expected = "localhost:2891,localhost:2891".         setQuorum(conf, "localhost:2891,localhost:2891").         actual = ZooKeeperUtils.getZooKeeperEnsemble(conf).         assertEquals(expected, actual).         setQuorum(conf, "localhost:2891, localhost:2891").         actual = ZooKeeperUtils.getZooKeeperEnsemble(conf).         assertEquals(expected, actual).         setQuorum(conf, "localhost :2891, localhost:2891").         actual = ZooKeeperUtils.getZooKeeperEnsemble(conf).         assertEquals(expected, actual).         setQuorum(conf, " localhost:2891, localhost:2891 ").         actual = ZooKeeperUtils.getZooKeeperEnsemble(conf).         assertEquals(expected, actual).     } }
false;private;2;4;;private Configuration setQuorum(Configuration conf, String quorum) {     conf.setString(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM, quorum).     return conf. }
