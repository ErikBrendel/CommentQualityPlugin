commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;public LeaderRetrievalService createLeaderRetrievalService() {     final SettableLeaderRetrievalService settableLeaderRetrievalService = new SettableLeaderRetrievalService(getLeaderAddress(currentLeaderIndex), currentLeaderId).     leaderRetrievalServices.add(settableLeaderRetrievalService).     return settableLeaderRetrievalService. }
false;public;0;7;;public LeaderElectionService createLeaderElectionService() {     TestingLeaderElectionService testingLeaderElectionService = new TestingLeaderElectionService().     leaderElectionServices.add(testingLeaderElectionService).     return testingLeaderElectionService. }
false;public;2;15;;public void grantLeadership(int index, UUID leaderId) {     if (currentLeaderId != null) {         revokeLeadership().     }     Preconditions.checkNotNull(leaderId).     Preconditions.checkArgument(0 <= index && index < leaderElectionServices.size()).     TestingLeaderElectionService testingLeaderElectionService = leaderElectionServices.get(index).     testingLeaderElectionService.isLeader(leaderId).     currentLeaderIndex = index.     currentLeaderId = leaderId. }
false;public;0;11;;public void revokeLeadership() {     assert (currentLeaderId != null).     assert (0 <= currentLeaderIndex && currentLeaderIndex < leaderElectionServices.size()).     TestingLeaderElectionService testingLeaderElectionService = leaderElectionServices.get(currentLeaderIndex).     testingLeaderElectionService.notLeader().     currentLeaderIndex = -1.     currentLeaderId = null. }
false;public;2;5;;public void notifyRetrievers(int index, UUID leaderId) {     for (SettableLeaderRetrievalService retrievalService : leaderRetrievalServices) {         retrievalService.notifyListener(getLeaderAddress(index), leaderId).     } }
false;private;1;8;;private String getLeaderAddress(int index) {     if (0 <= index && index < leaderElectionServices.size()) {         TestingLeaderElectionService testingLeaderElectionService = leaderElectionServices.get(index).         return testingLeaderElectionService.getAddress().     } else {         return null.     } }
