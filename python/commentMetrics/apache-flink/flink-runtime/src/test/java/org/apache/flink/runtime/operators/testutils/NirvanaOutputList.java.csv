commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public boolean add(Record arg0) {     return true. }
false;public;2;3;;@Override public void add(int arg0, Record arg1) { }
false;public;1;4;;@Override public boolean addAll(Collection<? extends Record> arg0) {     return true. }
false;public;2;4;;@Override public boolean addAll(int arg0, Collection<? extends Record> arg1) {     return true. }
false;public;0;3;;@Override public void clear() { }
false;public;1;4;;@Override public boolean contains(Object arg0) {     return false. }
false;public;1;4;;@Override public boolean containsAll(Collection<?> arg0) {     return false. }
false;public;1;4;;@Override public Record get(int arg0) {     return null. }
false;public;1;4;;@Override public int indexOf(Object arg0) {     return -1. }
false;public;0;4;;@Override public boolean isEmpty() {     return true. }
false;public;0;4;;@Override public boolean hasNext() {     return false. }
false;public;0;4;;@Override public Record next() {     return null. }
false;public;0;4;;@Override public void remove() {     throw new UnsupportedOperationException(). }
false;public;0;22;;@Override public Iterator<Record> iterator() {     return new Iterator<Record>() {          @Override         public boolean hasNext() {             return false.         }          @Override         public Record next() {             return null.         }          @Override         public void remove() {             throw new UnsupportedOperationException().         }     }. }
false;public;1;4;;@Override public int lastIndexOf(Object arg0) {     return -1. }
false;public;0;4;;@Override public ListIterator<Record> listIterator() {     return null. }
false;public;1;4;;@Override public ListIterator<Record> listIterator(int arg0) {     return null. }
false;public;1;4;;@Override public boolean remove(Object arg0) {     return true. }
false;public;1;4;;@Override public Record remove(int arg0) {     return null. }
false;public;1;4;;@Override public boolean removeAll(Collection<?> arg0) {     return true. }
false;public;1;4;;@Override public boolean retainAll(Collection<?> arg0) {     return true. }
false;public;2;4;;@Override public Record set(int arg0, Record arg1) {     return null. }
false;public;0;4;;@Override public int size() {     return 0. }
false;public;2;4;;@Override public List<Record> subList(int arg0, int arg1) {     return new NirvanaOutputList(). }
false;public;0;4;;@Override public Object[] toArray() {     return new Object[0]. }
false;public;1;4;;@Override public <T> T[] toArray(T[] arg0) {     return null. }
