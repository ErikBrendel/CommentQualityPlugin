commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;3;;// -------------------------------------------------------------------------------------------- public static RecordSerializer get() {     return INSTANCE. }
false;public;0;4;;// -------------------------------------------------------------------------------------------- @Override public boolean isImmutableType() {     return false. }
false;public;0;5;;@Override public RecordSerializer duplicate() {     // does not hold state, so just return ourselves     return this. }
false;public;0;4;;@Override public Record createInstance() {     return new Record(). }
false;public;1;4;;@Override public Record copy(Record from) {     return from.createCopy(). }
false;public;2;5;;@Override public Record copy(Record from, Record reuse) {     from.copyTo(reuse).     return reuse. }
false;public;0;4;;@Override public int getLength() {     return -1. }
false;public;2;4;;// -------------------------------------------------------------------------------------------- @Override public void serialize(Record record, DataOutputView target) throws IOException {     record.serialize(target). }
false;public;1;4;;@Override public Record deserialize(DataInputView source) throws IOException {     return deserialize(new Record(), source). }
false;public;2;5;;@Override public Record deserialize(Record target, DataInputView source) throws IOException {     target.deserialize(source).     return target. }
false;public;2;20;;@Override public void copy(DataInputView source, DataOutputView target) throws IOException {     int val = source.readUnsignedByte().     target.writeByte(val).     if (val >= MAX_BIT) {         int shift = 7.         int curr.         val = val & 0x7f.         while ((curr = source.readUnsignedByte()) >= MAX_BIT) {             target.writeByte(curr).             val |= (curr & 0x7f) << shift.             shift += 7.         }         target.writeByte(curr).         val |= curr << shift.     }     target.write(source, val). }
false;public;1;4;;@Override public boolean equals(Object obj) {     return obj instanceof RecordSerializer. }
false;public;0;4;;@Override public int hashCode() {     return RecordSerializer.class.hashCode(). }
false;public;0;4;;@Override public TypeSerializerSnapshot<Record> snapshotConfiguration() {     throw new UnsupportedOperationException(). }
