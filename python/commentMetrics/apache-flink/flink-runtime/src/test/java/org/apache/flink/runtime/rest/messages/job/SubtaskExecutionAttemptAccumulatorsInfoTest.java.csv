commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected Class<SubtaskExecutionAttemptAccumulatorsInfo> getTestResponseClass() {     return SubtaskExecutionAttemptAccumulatorsInfo.class. }
false;protected;0;16;;@Override protected SubtaskExecutionAttemptAccumulatorsInfo getTestResponseInstance() throws Exception {     final List<UserAccumulator> userAccumulatorList = new ArrayList<>().     userAccumulatorList.add(new UserAccumulator("name1", "type1", "value1")).     userAccumulatorList.add(new UserAccumulator("name2", "type1", "value1")).     userAccumulatorList.add(new UserAccumulator("name3", "type2", "value3")).     return new SubtaskExecutionAttemptAccumulatorsInfo(1, 2, new ExecutionAttemptID().toString(), userAccumulatorList). }
