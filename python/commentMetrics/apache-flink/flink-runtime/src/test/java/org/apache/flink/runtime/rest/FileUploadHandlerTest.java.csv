# id;timestamp;commentText;codeText;commentWords;codeWords
FileUploadHandlerTest -> @Test 	public void testUploadCleanupOnFailure() throws IOException;1529584793;Crashes the handler be submitting a malformed multipart request and tests that the upload directory is cleaned up.;@Test_	public void testUploadCleanupOnFailure() throws IOException {_		OkHttpClient client = new OkHttpClient()___		Request request = buildMalformedRequest(mixedHandler.getMessageHeaders().getTargetRestEndpointURL())__		try (Response response = client.newCall(request).execute()) {_			_			assertEquals(HttpResponseStatus.INTERNAL_SERVER_ERROR.code(), response.code())__		}_		assertUploadDirectoryIsEmpty()__	};crashes,the,handler,be,submitting,a,malformed,multipart,request,and,tests,that,the,upload,directory,is,cleaned,up;test,public,void,test,upload,cleanup,on,failure,throws,ioexception,ok,http,client,client,new,ok,http,client,request,request,build,malformed,request,mixed,handler,get,message,headers,get,target,rest,endpoint,url,try,response,response,client,new,call,request,execute,assert,equals,http,response,status,code,response,code,assert,upload,directory,is,empty
FileUploadHandlerTest -> @Test 	public void testUploadCleanupOnFailure() throws IOException;1529658237;Crashes the handler be submitting a malformed multipart request and tests that the upload directory is cleaned up.;@Test_	public void testUploadCleanupOnFailure() throws IOException {_		OkHttpClient client = new OkHttpClient()___		Request request = buildMalformedRequest(MULTIPART_UPLOAD_RESOURCE.getMixedHandler().getMessageHeaders().getTargetRestEndpointURL())__		try (Response response = client.newCall(request).execute()) {_			_			assertEquals(HttpResponseStatus.INTERNAL_SERVER_ERROR.code(), response.code())__		}_		MULTIPART_UPLOAD_RESOURCE.assertUploadDirectoryIsEmpty()__	};crashes,the,handler,be,submitting,a,malformed,multipart,request,and,tests,that,the,upload,directory,is,cleaned,up;test,public,void,test,upload,cleanup,on,failure,throws,ioexception,ok,http,client,client,new,ok,http,client,request,request,build,malformed,request,get,mixed,handler,get,message,headers,get,target,rest,endpoint,url,try,response,response,client,new,call,request,execute,assert,equals,http,response,status,code,response,code,assert,upload,directory,is,empty
FileUploadHandlerTest -> @Test 	public void testUploadCleanupOnFailure() throws IOException;1531999277;Crashes the handler be submitting a malformed multipart request and tests that the upload directory is cleaned up.;@Test_	public void testUploadCleanupOnFailure() throws IOException {_		OkHttpClient client = new OkHttpClient()___		Request request = buildMalformedRequest(MULTIPART_UPLOAD_RESOURCE.getMixedHandler().getMessageHeaders().getTargetRestEndpointURL())__		try (Response response = client.newCall(request).execute()) {_			_			assertEquals(HttpResponseStatus.INTERNAL_SERVER_ERROR.code(), response.code())__		}_		MULTIPART_UPLOAD_RESOURCE.assertUploadDirectoryIsEmpty()__	};crashes,the,handler,be,submitting,a,malformed,multipart,request,and,tests,that,the,upload,directory,is,cleaned,up;test,public,void,test,upload,cleanup,on,failure,throws,ioexception,ok,http,client,client,new,ok,http,client,request,request,build,malformed,request,get,mixed,handler,get,message,headers,get,target,rest,endpoint,url,try,response,response,client,new,call,request,execute,assert,equals,http,response,status,code,response,code,assert,upload,directory,is,empty
FileUploadHandlerTest -> @Test 	public void testUploadCleanupOnFailure() throws IOException;1545134100;Crashes the handler be submitting a malformed multipart request and tests that the upload directory is cleaned up.;@Test_	public void testUploadCleanupOnFailure() throws IOException {_		OkHttpClient client = new OkHttpClient()___		Request request = buildMalformedRequest(MULTIPART_UPLOAD_RESOURCE.getMixedHandler().getMessageHeaders().getTargetRestEndpointURL())__		try (Response response = client.newCall(request).execute()) {_			_			assertEquals(HttpResponseStatus.INTERNAL_SERVER_ERROR.code(), response.code())__		}_		MULTIPART_UPLOAD_RESOURCE.assertUploadDirectoryIsEmpty()__	};crashes,the,handler,be,submitting,a,malformed,multipart,request,and,tests,that,the,upload,directory,is,cleaned,up;test,public,void,test,upload,cleanup,on,failure,throws,ioexception,ok,http,client,client,new,ok,http,client,request,request,build,malformed,request,get,mixed,handler,get,message,headers,get,target,rest,endpoint,url,try,response,response,client,new,call,request,execute,assert,equals,http,response,status,code,response,code,assert,upload,directory,is,empty
