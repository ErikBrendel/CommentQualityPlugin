commented;modifiers;parameterAmount;loc;comment;code
true;public;0;15;/**  * Tests that the {@link MetricUtils#startMetricsActorSystem(Configuration, String, Logger)} respects  * the given {@link MetricOptions#QUERY_SERVICE_THREAD_PRIORITY}.  */ ;/**  * Tests that the {@link MetricUtils#startMetricsActorSystem(Configuration, String, Logger)} respects  * the given {@link MetricOptions#QUERY_SERVICE_THREAD_PRIORITY}.  */ @Test public void testStartMetricActorSystemRespectsThreadPriority() throws Exception {     final Configuration configuration = new Configuration().     final int expectedThreadPriority = 3.     configuration.setInteger(MetricOptions.QUERY_SERVICE_THREAD_PRIORITY, expectedThreadPriority).     final ActorSystem actorSystem = MetricUtils.startMetricsActorSystem(configuration, "localhost", LOG).     try {         final int threadPriority = actorSystem.settings().config().getInt("akka.actor.default-dispatcher.thread-priority").         assertThat(threadPriority, is(expectedThreadPriority)).     } finally {         AkkaUtils.terminateActorSystem(actorSystem).get().     } }
