commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected Class<SubtasksTimesInfo> getTestResponseClass() {     return SubtasksTimesInfo.class. }
false;protected;0;24;;@Override protected SubtasksTimesInfo getTestResponseInstance() throws Exception {     List<SubtasksTimesInfo.SubtaskTimeInfo> subtasks = new ArrayList<>().     Map<ExecutionState, Long> subTimeMap1 = new HashMap<>().     subTimeMap1.put(ExecutionState.RUNNING, 1L).     subTimeMap1.put(ExecutionState.FAILED, 2L).     subTimeMap1.put(ExecutionState.CANCELED, 3L).     subtasks.add(new SubtasksTimesInfo.SubtaskTimeInfo(0, "local1", 1L, subTimeMap1)).     Map<ExecutionState, Long> subTimeMap2 = new HashMap<>().     subTimeMap2.put(ExecutionState.RUNNING, 4L).     subTimeMap2.put(ExecutionState.FAILED, 5L).     subTimeMap2.put(ExecutionState.CANCELED, 6L).     subtasks.add(new SubtasksTimesInfo.SubtaskTimeInfo(1, "local2", 2L, subTimeMap2)).     Map<ExecutionState, Long> subTimeMap3 = new HashMap<>().     subTimeMap3.put(ExecutionState.SCHEDULED, 1L).     subTimeMap3.put(ExecutionState.FAILED, 2L).     subTimeMap3.put(ExecutionState.CANCELING, 3L).     subtasks.add(new SubtasksTimesInfo.SubtaskTimeInfo(2, "local3", 3L, subTimeMap3)).     return new SubtasksTimesInfo("testId", "testName", System.currentTimeMillis(), subtasks). }
