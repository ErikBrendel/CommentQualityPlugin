commented;modifiers;parameterAmount;loc;comment;code
false;public;0;19;;@Test public void testReturnLocalHostAddressUsingHeuristics() throws Exception {     // instead of using a unstable localhost:port as "unreachable" to cause Test fails unstably     // using a Absolutely unreachable outside ip:port     InetSocketAddress unreachable = new InetSocketAddress("8.8.8.8", 0xFFFF).     final long start = System.nanoTime().     InetAddress add = ConnectionUtils.findConnectingAddress(unreachable, 2000, 400).     // check that it did not take forever (max 30 seconds)     // this check can unfortunately not be too tight, or it will be flaky on some CI infrastructure     assertTrue(System.nanoTime() - start < 30_000_000_000L).     // we should have found a heuristic address     assertNotNull(add).     // make sure that we returned the InetAddress.getLocalHost as a heuristic     assertEquals(InetAddress.getLocalHost(), add). }
false;public;0;8;;@Override public void run() {     try {         socket.accept().     } catch (IOException e) {     // ignore     } }
false;public;0;30;;@Test public void testFindConnectingAddressWhenGetLocalHostThrows() throws Exception {     PowerMockito.mockStatic(InetAddress.class).     Mockito.when(InetAddress.getLocalHost()).thenThrow(new UnknownHostException()).thenCallRealMethod().     final InetAddress loopbackAddress = Inet4Address.getByName("127.0.0.1").     Thread socketServerThread.     try (ServerSocket socket = new ServerSocket(0, 1, loopbackAddress)) {         // Make sure that the thread will eventually die even if something else goes wrong         socket.setSoTimeout(10_000).         socketServerThread = new Thread(new Runnable() {              @Override             public void run() {                 try {                     socket.accept().                 } catch (IOException e) {                 // ignore                 }             }         }).         socketServerThread.start().         final InetSocketAddress socketAddress = new InetSocketAddress(loopbackAddress, socket.getLocalPort()).         final InetAddress address = ConnectionUtils.findConnectingAddress(socketAddress, 2000, 400).         // Make sure we got an address via alternative means         assertNotNull(address).     } }
