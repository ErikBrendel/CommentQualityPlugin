commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Before public void before() throws IOException {     // setWritable doesn't work on Windows.     assumeTrue(!OperatingSystem.isWindows()).     // Prepare test directory     blobUtilsTestDirectory = temporaryFolder.newFolder().     assertTrue(blobUtilsTestDirectory.setExecutable(true, false)).     assertTrue(blobUtilsTestDirectory.setReadable(true, false)).     assertTrue(blobUtilsTestDirectory.setWritable(false, false)). }
false;public;0;5;;@After public void after() {     // Cleanup test directory, ensure it was empty     assertTrue(blobUtilsTestDirectory.delete()). }
false;public;0;8;;@Test(expected = IOException.class) public void testExceptionOnCreateStorageDirectoryFailure() throws IOException {     Configuration config = new Configuration().     config.setString(BlobServerOptions.STORAGE_DIRECTORY, new File(blobUtilsTestDirectory, CANNOT_CREATE_THIS).getAbsolutePath()).     // Should throw an Exception     BlobUtils.initLocalStorageDirectory(config). }
false;public;0;5;;@Test(expected = IOException.class) public void testExceptionOnCreateCacheDirectoryFailureNoJob() throws IOException {     // Should throw an Exception     BlobUtils.getStorageLocation(new File(blobUtilsTestDirectory, CANNOT_CREATE_THIS), null, new TransientBlobKey()). }
false;public;0;5;;@Test(expected = IOException.class) public void testExceptionOnCreateCacheDirectoryFailureForJobTransient() throws IOException {     // Should throw an Exception     BlobUtils.getStorageLocation(new File(blobUtilsTestDirectory, CANNOT_CREATE_THIS), new JobID(), new TransientBlobKey()). }
false;public;0;5;;@Test(expected = IOException.class) public void testExceptionOnCreateCacheDirectoryFailureForJobPermanent() throws IOException {     // Should throw an Exception     BlobUtils.getStorageLocation(new File(blobUtilsTestDirectory, CANNOT_CREATE_THIS), new JobID(), new PermanentBlobKey()). }
