commented;modifiers;parameterAmount;loc;comment;code
true;public;0;14;/**  * Tests that the {@link BlobServer} fails if the blob storage directory  * cannot be created.  */ ;/**  * Tests that the {@link BlobServer} fails if the blob storage directory  * cannot be created.  */ @Test public void testFailureIfStorageDirectoryCannotBeCreated() throws IOException {     final Configuration configuration = new Configuration().     final File blobStorageDirectory = createNonWritableDirectory().     final String nonExistDirectory = new File(blobStorageDirectory, "does_not_exist_for_sure").getAbsolutePath().     configuration.setString(BlobServerOptions.STORAGE_DIRECTORY, nonExistDirectory).     try (BlobServer ignored = new BlobServer(configuration, new VoidBlobStore())) {         fail("Expected that the BlobServer initialization fails.").     } catch (IOException expected) {     // expected     } }
false;private;0;9;;@Nonnull private File createNonWritableDirectory() throws IOException {     // setWritable doesn't work on Windows.     assumeFalse(OperatingSystem.isWindows()).     final File blobStorageDirectory = temporaryFolder.newFolder().     assertTrue(blobStorageDirectory.setExecutable(true, false)).     assertTrue(blobStorageDirectory.setReadable(true, false)).     assertTrue(blobStorageDirectory.setWritable(false, false)).     return blobStorageDirectory. }
