commented;modifiers;parameterAmount;loc;comment;code
false;public;0;49;;@Test public void testNoHeapAllocations() throws Exception {     NettyBufferPool nettyBufferPool = new NettyBufferPool(1).     // Buffers should prefer to be direct     assertTrue(nettyBufferPool.buffer().isDirect()).     assertTrue(nettyBufferPool.buffer(128).isDirect()).     assertTrue(nettyBufferPool.buffer(128, 256).isDirect()).     // IO buffers should prefer to be direct     assertTrue(nettyBufferPool.ioBuffer().isDirect()).     assertTrue(nettyBufferPool.ioBuffer(128).isDirect()).     assertTrue(nettyBufferPool.ioBuffer(128, 256).isDirect()).     // Disallow heap buffers     try {         nettyBufferPool.heapBuffer().         fail("Unexpected heap buffer operation").     } catch (UnsupportedOperationException ignored) {     }     try {         nettyBufferPool.heapBuffer(128).         fail("Unexpected heap buffer operation").     } catch (UnsupportedOperationException ignored) {     }     try {         nettyBufferPool.heapBuffer(128, 256).         fail("Unexpected heap buffer operation").     } catch (UnsupportedOperationException ignored) {     }     // Disallow composite heap buffers     try {         nettyBufferPool.compositeHeapBuffer().         fail("Unexpected heap buffer operation").     } catch (UnsupportedOperationException ignored) {     }     try {         nettyBufferPool.compositeHeapBuffer(2).         fail("Unexpected heap buffer operation").     } catch (UnsupportedOperationException ignored) {     }     // Is direct buffer pooled!     assertTrue(nettyBufferPool.isDirectBufferPooled()). }
false;public;0;19;;@Test public void testAllocationsStatistics() throws Exception {     NettyBufferPool nettyBufferPool = new NettyBufferPool(1).     int chunkSize = nettyBufferPool.getChunkSize().     {         // Single large buffer allocates one chunk         nettyBufferPool.directBuffer(chunkSize - 64).         long allocated = nettyBufferPool.getNumberOfAllocatedBytes().get().         assertEquals(chunkSize, allocated).     }     {         // Allocate a little more (one more chunk required)         nettyBufferPool.directBuffer(128).         long allocated = nettyBufferPool.getNumberOfAllocatedBytes().get().         assertEquals(2 * chunkSize, allocated).     } }
