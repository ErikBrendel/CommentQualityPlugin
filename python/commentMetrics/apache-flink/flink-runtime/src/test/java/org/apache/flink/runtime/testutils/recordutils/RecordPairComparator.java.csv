commented;modifiers;parameterAmount;loc;comment;code
false;public;1;8;;// -------------------------------------------------------------------------------------------- @Override public void setReference(Record reference) {     for (int i = 0. i < this.keyFields1.length. i++) {         if (!reference.getFieldInto(this.keyFields1[i], this.keyHolders1[i])) {             throw new NullKeyFieldException(this.keyFields1[i]).         }     } }
false;public;1;13;;@SuppressWarnings("rawtypes") @Override public boolean equalToReference(Record candidate) {     for (int i = 0. i < this.keyFields2.length. i++) {         final Value k = candidate.getField(this.keyFields2[i], this.keyHolders2[i]).         if (k == null) {             throw new NullKeyFieldException(this.keyFields2[i]).         } else if (!k.equals(this.keyHolders1[i])) {             return false.         }     }     return true. }
false;public;1;16;;@SuppressWarnings({ "rawtypes", "unchecked" }) @Override public int compareToReference(Record candidate) {     for (int i = 0. i < this.keyFields2.length. i++) {         final Comparable k = (Comparable) candidate.getField(this.keyFields2[i], this.keyHolders2[i]).         if (k == null) {             throw new NullKeyFieldException(this.keyFields2[i]).         } else {             final int comp = k.compareTo(this.keyHolders1[i]).             if (comp != 0) {                 return comp.             }         }     }     return 0. }
