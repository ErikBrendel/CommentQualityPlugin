# id;timestamp;commentText;codeText;commentWords;codeWords
TestInputChannel -> static TestInputChannel[] createInputChannels(SingleInputGate inputGate, int numberOfInputChannels);1531742482;Creates test input channels and attaches them to the specified input gate.__@return The created test input channels.;static TestInputChannel[] createInputChannels(SingleInputGate inputGate, int numberOfInputChannels) {_		checkNotNull(inputGate)__		checkArgument(numberOfInputChannels > 0)___		TestInputChannel[] mocks = new TestInputChannel[numberOfInputChannels]___		for (int i = 0_ i < numberOfInputChannels_ i++) {_			mocks[i] = new TestInputChannel(inputGate, i)___			inputGate.setInputChannel(new IntermediateResultPartitionID(), mocks[i])__		}__		return mocks__	};creates,test,input,channels,and,attaches,them,to,the,specified,input,gate,return,the,created,test,input,channels;static,test,input,channel,create,input,channels,single,input,gate,input,gate,int,number,of,input,channels,check,not,null,input,gate,check,argument,number,of,input,channels,0,test,input,channel,mocks,new,test,input,channel,number,of,input,channels,for,int,i,0,i,number,of,input,channels,i,mocks,i,new,test,input,channel,input,gate,i,input,gate,set,input,channel,new,intermediate,result,partition,id,mocks,i,return,mocks
TestInputChannel -> static TestInputChannel[] createInputChannels(SingleInputGate inputGate, int numberOfInputChannels);1534316740;Creates test input channels and attaches them to the specified input gate.__@return The created test input channels.;static TestInputChannel[] createInputChannels(SingleInputGate inputGate, int numberOfInputChannels) {_		checkNotNull(inputGate)__		checkArgument(numberOfInputChannels > 0)___		TestInputChannel[] mocks = new TestInputChannel[numberOfInputChannels]___		for (int i = 0_ i < numberOfInputChannels_ i++) {_			mocks[i] = new TestInputChannel(inputGate, i)___			inputGate.setInputChannel(new IntermediateResultPartitionID(), mocks[i])__		}__		return mocks__	};creates,test,input,channels,and,attaches,them,to,the,specified,input,gate,return,the,created,test,input,channels;static,test,input,channel,create,input,channels,single,input,gate,input,gate,int,number,of,input,channels,check,not,null,input,gate,check,argument,number,of,input,channels,0,test,input,channel,mocks,new,test,input,channel,number,of,input,channels,for,int,i,0,i,number,of,input,channels,i,mocks,i,new,test,input,channel,input,gate,i,input,gate,set,input,channel,new,intermediate,result,partition,id,mocks,i,return,mocks
TestInputChannel -> public static TestInputChannel[] createInputChannels(SingleInputGate inputGate, int numberOfInputChannels);1427367086;Creates test input channels and attaches them to the specified input gate.__@return The created test input channels.;public static TestInputChannel[] createInputChannels(SingleInputGate inputGate, int numberOfInputChannels) {_		checkNotNull(inputGate)__		checkArgument(numberOfInputChannels > 0)___		TestInputChannel[] mocks = new TestInputChannel[numberOfInputChannels]___		for (int i = 0_ i < numberOfInputChannels_ i++) {_			mocks[i] = new TestInputChannel(inputGate, i)___			inputGate.setInputChannel(new IntermediateResultPartitionID(), mocks[i].getInputChannel())__		}__		return mocks__	};creates,test,input,channels,and,attaches,them,to,the,specified,input,gate,return,the,created,test,input,channels;public,static,test,input,channel,create,input,channels,single,input,gate,input,gate,int,number,of,input,channels,check,not,null,input,gate,check,argument,number,of,input,channels,0,test,input,channel,mocks,new,test,input,channel,number,of,input,channels,for,int,i,0,i,number,of,input,channels,i,mocks,i,new,test,input,channel,input,gate,i,input,gate,set,input,channel,new,intermediate,result,partition,id,mocks,i,get,input,channel,return,mocks
TestInputChannel -> public static TestInputChannel[] createInputChannels(SingleInputGate inputGate, int numberOfInputChannels);1465991918;Creates test input channels and attaches them to the specified input gate.__@return The created test input channels.;public static TestInputChannel[] createInputChannels(SingleInputGate inputGate, int numberOfInputChannels) {_		checkNotNull(inputGate)__		checkArgument(numberOfInputChannels > 0)___		TestInputChannel[] mocks = new TestInputChannel[numberOfInputChannels]___		for (int i = 0_ i < numberOfInputChannels_ i++) {_			mocks[i] = new TestInputChannel(inputGate, i)___			inputGate.setInputChannel(new IntermediateResultPartitionID(), mocks[i].getInputChannel())__		}__		return mocks__	};creates,test,input,channels,and,attaches,them,to,the,specified,input,gate,return,the,created,test,input,channels;public,static,test,input,channel,create,input,channels,single,input,gate,input,gate,int,number,of,input,channels,check,not,null,input,gate,check,argument,number,of,input,channels,0,test,input,channel,mocks,new,test,input,channel,number,of,input,channels,for,int,i,0,i,number,of,input,channels,i,mocks,i,new,test,input,channel,input,gate,i,input,gate,set,input,channel,new,intermediate,result,partition,id,mocks,i,get,input,channel,return,mocks
TestInputChannel -> public static TestInputChannel[] createInputChannels(SingleInputGate inputGate, int numberOfInputChannels);1480624969;Creates test input channels and attaches them to the specified input gate.__@return The created test input channels.;public static TestInputChannel[] createInputChannels(SingleInputGate inputGate, int numberOfInputChannels) {_		checkNotNull(inputGate)__		checkArgument(numberOfInputChannels > 0)___		TestInputChannel[] mocks = new TestInputChannel[numberOfInputChannels]___		for (int i = 0_ i < numberOfInputChannels_ i++) {_			mocks[i] = new TestInputChannel(inputGate, i)___			inputGate.setInputChannel(new IntermediateResultPartitionID(), mocks[i].getInputChannel())__		}__		return mocks__	};creates,test,input,channels,and,attaches,them,to,the,specified,input,gate,return,the,created,test,input,channels;public,static,test,input,channel,create,input,channels,single,input,gate,input,gate,int,number,of,input,channels,check,not,null,input,gate,check,argument,number,of,input,channels,0,test,input,channel,mocks,new,test,input,channel,number,of,input,channels,for,int,i,0,i,number,of,input,channels,i,mocks,i,new,test,input,channel,input,gate,i,input,gate,set,input,channel,new,intermediate,result,partition,id,mocks,i,get,input,channel,return,mocks
TestInputChannel -> public static TestInputChannel[] createInputChannels(SingleInputGate inputGate, int numberOfInputChannels);1515510677;Creates test input channels and attaches them to the specified input gate.__@return The created test input channels.;public static TestInputChannel[] createInputChannels(SingleInputGate inputGate, int numberOfInputChannels) {_		checkNotNull(inputGate)__		checkArgument(numberOfInputChannels > 0)___		TestInputChannel[] mocks = new TestInputChannel[numberOfInputChannels]___		for (int i = 0_ i < numberOfInputChannels_ i++) {_			mocks[i] = new TestInputChannel(inputGate, i)___			inputGate.setInputChannel(new IntermediateResultPartitionID(), mocks[i].getInputChannel())__		}__		return mocks__	};creates,test,input,channels,and,attaches,them,to,the,specified,input,gate,return,the,created,test,input,channels;public,static,test,input,channel,create,input,channels,single,input,gate,input,gate,int,number,of,input,channels,check,not,null,input,gate,check,argument,number,of,input,channels,0,test,input,channel,mocks,new,test,input,channel,number,of,input,channels,for,int,i,0,i,number,of,input,channels,i,mocks,i,new,test,input,channel,input,gate,i,input,gate,set,input,channel,new,intermediate,result,partition,id,mocks,i,get,input,channel,return,mocks
TestInputChannel -> public static TestInputChannel[] createInputChannels(SingleInputGate inputGate, int numberOfInputChannels);1519039301;Creates test input channels and attaches them to the specified input gate.__@return The created test input channels.;public static TestInputChannel[] createInputChannels(SingleInputGate inputGate, int numberOfInputChannels) {_		checkNotNull(inputGate)__		checkArgument(numberOfInputChannels > 0)___		TestInputChannel[] mocks = new TestInputChannel[numberOfInputChannels]___		for (int i = 0_ i < numberOfInputChannels_ i++) {_			mocks[i] = new TestInputChannel(inputGate, i)___			inputGate.setInputChannel(new IntermediateResultPartitionID(), mocks[i].getInputChannel())__		}__		return mocks__	};creates,test,input,channels,and,attaches,them,to,the,specified,input,gate,return,the,created,test,input,channels;public,static,test,input,channel,create,input,channels,single,input,gate,input,gate,int,number,of,input,channels,check,not,null,input,gate,check,argument,number,of,input,channels,0,test,input,channel,mocks,new,test,input,channel,number,of,input,channels,for,int,i,0,i,number,of,input,channels,i,mocks,i,new,test,input,channel,input,gate,i,input,gate,set,input,channel,new,intermediate,result,partition,id,mocks,i,get,input,channel,return,mocks
TestInputChannel -> public static TestInputChannel[] createInputChannels(SingleInputGate inputGate, int numberOfInputChannels);1519834372;Creates test input channels and attaches them to the specified input gate.__@return The created test input channels.;public static TestInputChannel[] createInputChannels(SingleInputGate inputGate, int numberOfInputChannels) {_		checkNotNull(inputGate)__		checkArgument(numberOfInputChannels > 0)___		TestInputChannel[] mocks = new TestInputChannel[numberOfInputChannels]___		for (int i = 0_ i < numberOfInputChannels_ i++) {_			mocks[i] = new TestInputChannel(inputGate, i)___			inputGate.setInputChannel(new IntermediateResultPartitionID(), mocks[i].getInputChannel())__		}__		return mocks__	};creates,test,input,channels,and,attaches,them,to,the,specified,input,gate,return,the,created,test,input,channels;public,static,test,input,channel,create,input,channels,single,input,gate,input,gate,int,number,of,input,channels,check,not,null,input,gate,check,argument,number,of,input,channels,0,test,input,channel,mocks,new,test,input,channel,number,of,input,channels,for,int,i,0,i,number,of,input,channels,i,mocks,i,new,test,input,channel,input,gate,i,input,gate,set,input,channel,new,intermediate,result,partition,id,mocks,i,get,input,channel,return,mocks
