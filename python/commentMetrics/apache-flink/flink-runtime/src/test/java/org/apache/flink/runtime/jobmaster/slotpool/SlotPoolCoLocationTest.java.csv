# id;timestamp;commentText;codeText;commentWords;codeWords
SlotPoolCoLocationTest -> @Test 	public void testSimpleCoLocatedSlotScheduling() throws ExecutionException, InterruptedException;1513261599;Tests the scheduling of two tasks with a parallelism of 2 and a co-location constraint.;@Test_	public void testSimpleCoLocatedSlotScheduling() throws ExecutionException, InterruptedException {_		final BlockingQueue<AllocationID> allocationIds = new ArrayBlockingQueue<>(2)___		testingResourceManagerGateway.setRequestSlotConsumer(_			(SlotRequest slotRequest) -> allocationIds.offer(slotRequest.getAllocationId()))___		final TaskManagerLocation taskManagerLocation = new LocalTaskManagerLocation()___		slotPoolGateway.registerTaskManager(taskManagerLocation.getResourceID()).get()___		CoLocationGroup group = new CoLocationGroup()__		CoLocationConstraint coLocationConstraint1 = group.getLocationConstraint(0)__		CoLocationConstraint coLocationConstraint2 = group.getLocationConstraint(1)___		final SlotSharingGroupId slotSharingGroupId = new SlotSharingGroupId()___		JobVertexID jobVertexId1 = new JobVertexID()__		JobVertexID jobVertexId2 = new JobVertexID()___		CompletableFuture<LogicalSlot> logicalSlotFuture11 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId1,_				slotSharingGroupId,_				coLocationConstraint1),_			true,_			Collections.emptyList())___		CompletableFuture<LogicalSlot> logicalSlotFuture22 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId2,_				slotSharingGroupId,_				coLocationConstraint2),_			true,_			Collections.emptyList())___		CompletableFuture<LogicalSlot> logicalSlotFuture12 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId2,_				slotSharingGroupId,_				coLocationConstraint1),_			true,_			Collections.emptyList())___		CompletableFuture<LogicalSlot> logicalSlotFuture21 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId1,_				slotSharingGroupId,_				coLocationConstraint2),_			true,_			Collections.emptyList())___		final AllocationID allocationId1 = allocationIds.take()__		final AllocationID allocationId2 = allocationIds.take()___		CompletableFuture<Boolean> slotOfferFuture1 = slotPoolGateway.offerSlot(_			taskManagerLocation,_			new SimpleAckingTaskManagerGateway(),_			new SlotOffer(_				allocationId1,_				0,_				ResourceProfile.UNKNOWN))___		CompletableFuture<Boolean> slotOfferFuture2 = slotPoolGateway.offerSlot(_			taskManagerLocation,_			new SimpleAckingTaskManagerGateway(),_			new SlotOffer(_				allocationId2,_				0,_				ResourceProfile.UNKNOWN))___		assertTrue(slotOfferFuture1.get())__		assertTrue(slotOfferFuture2.get())___		LogicalSlot logicalSlot11 = logicalSlotFuture11.get()__		LogicalSlot logicalSlot12 = logicalSlotFuture12.get()__		LogicalSlot logicalSlot21 = logicalSlotFuture21.get()__		LogicalSlot logicalSlot22 = logicalSlotFuture22.get()___		assertEquals(logicalSlot11.getAllocationId(), logicalSlot12.getAllocationId())__		assertEquals(logicalSlot21.getAllocationId(), logicalSlot22.getAllocationId())__		assertNotEquals(logicalSlot11.getAllocationId(), logicalSlot21.getAllocationId())__	};tests,the,scheduling,of,two,tasks,with,a,parallelism,of,2,and,a,co,location,constraint;test,public,void,test,simple,co,located,slot,scheduling,throws,execution,exception,interrupted,exception,final,blocking,queue,allocation,id,allocation,ids,new,array,blocking,queue,2,testing,resource,manager,gateway,set,request,slot,consumer,slot,request,slot,request,allocation,ids,offer,slot,request,get,allocation,id,final,task,manager,location,task,manager,location,new,local,task,manager,location,slot,pool,gateway,register,task,manager,task,manager,location,get,resource,id,get,co,location,group,group,new,co,location,group,co,location,constraint,co,location,constraint1,group,get,location,constraint,0,co,location,constraint,co,location,constraint2,group,get,location,constraint,1,final,slot,sharing,group,id,slot,sharing,group,id,new,slot,sharing,group,id,job,vertex,id,job,vertex,id1,new,job,vertex,id,job,vertex,id,job,vertex,id2,new,job,vertex,id,completable,future,logical,slot,logical,slot,future11,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id1,slot,sharing,group,id,co,location,constraint1,true,collections,empty,list,completable,future,logical,slot,logical,slot,future22,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id2,slot,sharing,group,id,co,location,constraint2,true,collections,empty,list,completable,future,logical,slot,logical,slot,future12,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id2,slot,sharing,group,id,co,location,constraint1,true,collections,empty,list,completable,future,logical,slot,logical,slot,future21,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id1,slot,sharing,group,id,co,location,constraint2,true,collections,empty,list,final,allocation,id,allocation,id1,allocation,ids,take,final,allocation,id,allocation,id2,allocation,ids,take,completable,future,boolean,slot,offer,future1,slot,pool,gateway,offer,slot,task,manager,location,new,simple,acking,task,manager,gateway,new,slot,offer,allocation,id1,0,resource,profile,unknown,completable,future,boolean,slot,offer,future2,slot,pool,gateway,offer,slot,task,manager,location,new,simple,acking,task,manager,gateway,new,slot,offer,allocation,id2,0,resource,profile,unknown,assert,true,slot,offer,future1,get,assert,true,slot,offer,future2,get,logical,slot,logical,slot11,logical,slot,future11,get,logical,slot,logical,slot12,logical,slot,future12,get,logical,slot,logical,slot21,logical,slot,future21,get,logical,slot,logical,slot22,logical,slot,future22,get,assert,equals,logical,slot11,get,allocation,id,logical,slot12,get,allocation,id,assert,equals,logical,slot21,get,allocation,id,logical,slot22,get,allocation,id,assert,not,equals,logical,slot11,get,allocation,id,logical,slot21,get,allocation,id
SlotPoolCoLocationTest -> @Test 	public void testSimpleCoLocatedSlotScheduling() throws ExecutionException, InterruptedException;1518680774;Tests the scheduling of two tasks with a parallelism of 2 and a co-location constraint.;@Test_	public void testSimpleCoLocatedSlotScheduling() throws ExecutionException, InterruptedException {_		final BlockingQueue<AllocationID> allocationIds = new ArrayBlockingQueue<>(2)___		testingResourceManagerGateway.setRequestSlotConsumer(_			(SlotRequest slotRequest) -> allocationIds.offer(slotRequest.getAllocationId()))___		final TaskManagerLocation taskManagerLocation = new LocalTaskManagerLocation()___		slotPoolGateway.registerTaskManager(taskManagerLocation.getResourceID()).get()___		CoLocationGroup group = new CoLocationGroup()__		CoLocationConstraint coLocationConstraint1 = group.getLocationConstraint(0)__		CoLocationConstraint coLocationConstraint2 = group.getLocationConstraint(1)___		final SlotSharingGroupId slotSharingGroupId = new SlotSharingGroupId()___		JobVertexID jobVertexId1 = new JobVertexID()__		JobVertexID jobVertexId2 = new JobVertexID()___		CompletableFuture<LogicalSlot> logicalSlotFuture11 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId1,_				slotSharingGroupId,_				coLocationConstraint1),_			true,_			Collections.emptyList(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture22 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId2,_				slotSharingGroupId,_				coLocationConstraint2),_			true,_			Collections.emptyList(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture12 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId2,_				slotSharingGroupId,_				coLocationConstraint1),_			true,_			Collections.emptyList(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture21 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId1,_				slotSharingGroupId,_				coLocationConstraint2),_			true,_			Collections.emptyList(),_			TestingUtils.infiniteTime())___		final AllocationID allocationId1 = allocationIds.take()__		final AllocationID allocationId2 = allocationIds.take()___		CompletableFuture<Boolean> slotOfferFuture1 = slotPoolGateway.offerSlot(_			taskManagerLocation,_			new SimpleAckingTaskManagerGateway(),_			new SlotOffer(_				allocationId1,_				0,_				ResourceProfile.UNKNOWN))___		CompletableFuture<Boolean> slotOfferFuture2 = slotPoolGateway.offerSlot(_			taskManagerLocation,_			new SimpleAckingTaskManagerGateway(),_			new SlotOffer(_				allocationId2,_				0,_				ResourceProfile.UNKNOWN))___		assertTrue(slotOfferFuture1.get())__		assertTrue(slotOfferFuture2.get())___		LogicalSlot logicalSlot11 = logicalSlotFuture11.get()__		LogicalSlot logicalSlot12 = logicalSlotFuture12.get()__		LogicalSlot logicalSlot21 = logicalSlotFuture21.get()__		LogicalSlot logicalSlot22 = logicalSlotFuture22.get()___		assertEquals(logicalSlot11.getAllocationId(), logicalSlot12.getAllocationId())__		assertEquals(logicalSlot21.getAllocationId(), logicalSlot22.getAllocationId())__		assertNotEquals(logicalSlot11.getAllocationId(), logicalSlot21.getAllocationId())__	};tests,the,scheduling,of,two,tasks,with,a,parallelism,of,2,and,a,co,location,constraint;test,public,void,test,simple,co,located,slot,scheduling,throws,execution,exception,interrupted,exception,final,blocking,queue,allocation,id,allocation,ids,new,array,blocking,queue,2,testing,resource,manager,gateway,set,request,slot,consumer,slot,request,slot,request,allocation,ids,offer,slot,request,get,allocation,id,final,task,manager,location,task,manager,location,new,local,task,manager,location,slot,pool,gateway,register,task,manager,task,manager,location,get,resource,id,get,co,location,group,group,new,co,location,group,co,location,constraint,co,location,constraint1,group,get,location,constraint,0,co,location,constraint,co,location,constraint2,group,get,location,constraint,1,final,slot,sharing,group,id,slot,sharing,group,id,new,slot,sharing,group,id,job,vertex,id,job,vertex,id1,new,job,vertex,id,job,vertex,id,job,vertex,id2,new,job,vertex,id,completable,future,logical,slot,logical,slot,future11,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id1,slot,sharing,group,id,co,location,constraint1,true,collections,empty,list,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future22,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id2,slot,sharing,group,id,co,location,constraint2,true,collections,empty,list,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future12,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id2,slot,sharing,group,id,co,location,constraint1,true,collections,empty,list,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future21,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id1,slot,sharing,group,id,co,location,constraint2,true,collections,empty,list,testing,utils,infinite,time,final,allocation,id,allocation,id1,allocation,ids,take,final,allocation,id,allocation,id2,allocation,ids,take,completable,future,boolean,slot,offer,future1,slot,pool,gateway,offer,slot,task,manager,location,new,simple,acking,task,manager,gateway,new,slot,offer,allocation,id1,0,resource,profile,unknown,completable,future,boolean,slot,offer,future2,slot,pool,gateway,offer,slot,task,manager,location,new,simple,acking,task,manager,gateway,new,slot,offer,allocation,id2,0,resource,profile,unknown,assert,true,slot,offer,future1,get,assert,true,slot,offer,future2,get,logical,slot,logical,slot11,logical,slot,future11,get,logical,slot,logical,slot12,logical,slot,future12,get,logical,slot,logical,slot21,logical,slot,future21,get,logical,slot,logical,slot22,logical,slot,future22,get,assert,equals,logical,slot11,get,allocation,id,logical,slot12,get,allocation,id,assert,equals,logical,slot21,get,allocation,id,logical,slot22,get,allocation,id,assert,not,equals,logical,slot11,get,allocation,id,logical,slot21,get,allocation,id
SlotPoolCoLocationTest -> @Test 	public void testSimpleCoLocatedSlotScheduling() throws ExecutionException, InterruptedException;1519655521;Tests the scheduling of two tasks with a parallelism of 2 and a co-location constraint.;@Test_	public void testSimpleCoLocatedSlotScheduling() throws ExecutionException, InterruptedException {_		final BlockingQueue<AllocationID> allocationIds = new ArrayBlockingQueue<>(2)___		testingResourceManagerGateway.setRequestSlotConsumer(_			(SlotRequest slotRequest) -> allocationIds.offer(slotRequest.getAllocationId()))___		final TaskManagerLocation taskManagerLocation = new LocalTaskManagerLocation()___		slotPoolGateway.registerTaskManager(taskManagerLocation.getResourceID()).get()___		CoLocationGroup group = new CoLocationGroup()__		CoLocationConstraint coLocationConstraint1 = group.getLocationConstraint(0)__		CoLocationConstraint coLocationConstraint2 = group.getLocationConstraint(1)___		final SlotSharingGroupId slotSharingGroupId = new SlotSharingGroupId()___		JobVertexID jobVertexId1 = new JobVertexID()__		JobVertexID jobVertexId2 = new JobVertexID()___		CompletableFuture<LogicalSlot> logicalSlotFuture11 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId1,_				slotSharingGroupId,_				coLocationConstraint1),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture22 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId2,_				slotSharingGroupId,_				coLocationConstraint2),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture12 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId2,_				slotSharingGroupId,_				coLocationConstraint1),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture21 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId1,_				slotSharingGroupId,_				coLocationConstraint2),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		final AllocationID allocationId1 = allocationIds.take()__		final AllocationID allocationId2 = allocationIds.take()___		CompletableFuture<Boolean> slotOfferFuture1 = slotPoolGateway.offerSlot(_			taskManagerLocation,_			new SimpleAckingTaskManagerGateway(),_			new SlotOffer(_				allocationId1,_				0,_				ResourceProfile.UNKNOWN))___		CompletableFuture<Boolean> slotOfferFuture2 = slotPoolGateway.offerSlot(_			taskManagerLocation,_			new SimpleAckingTaskManagerGateway(),_			new SlotOffer(_				allocationId2,_				0,_				ResourceProfile.UNKNOWN))___		assertTrue(slotOfferFuture1.get())__		assertTrue(slotOfferFuture2.get())___		LogicalSlot logicalSlot11 = logicalSlotFuture11.get()__		LogicalSlot logicalSlot12 = logicalSlotFuture12.get()__		LogicalSlot logicalSlot21 = logicalSlotFuture21.get()__		LogicalSlot logicalSlot22 = logicalSlotFuture22.get()___		assertEquals(logicalSlot11.getAllocationId(), logicalSlot12.getAllocationId())__		assertEquals(logicalSlot21.getAllocationId(), logicalSlot22.getAllocationId())__		assertNotEquals(logicalSlot11.getAllocationId(), logicalSlot21.getAllocationId())__	};tests,the,scheduling,of,two,tasks,with,a,parallelism,of,2,and,a,co,location,constraint;test,public,void,test,simple,co,located,slot,scheduling,throws,execution,exception,interrupted,exception,final,blocking,queue,allocation,id,allocation,ids,new,array,blocking,queue,2,testing,resource,manager,gateway,set,request,slot,consumer,slot,request,slot,request,allocation,ids,offer,slot,request,get,allocation,id,final,task,manager,location,task,manager,location,new,local,task,manager,location,slot,pool,gateway,register,task,manager,task,manager,location,get,resource,id,get,co,location,group,group,new,co,location,group,co,location,constraint,co,location,constraint1,group,get,location,constraint,0,co,location,constraint,co,location,constraint2,group,get,location,constraint,1,final,slot,sharing,group,id,slot,sharing,group,id,new,slot,sharing,group,id,job,vertex,id,job,vertex,id1,new,job,vertex,id,job,vertex,id,job,vertex,id2,new,job,vertex,id,completable,future,logical,slot,logical,slot,future11,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id1,slot,sharing,group,id,co,location,constraint1,true,slot,profile,no,requirements,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future22,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id2,slot,sharing,group,id,co,location,constraint2,true,slot,profile,no,requirements,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future12,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id2,slot,sharing,group,id,co,location,constraint1,true,slot,profile,no,requirements,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future21,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id1,slot,sharing,group,id,co,location,constraint2,true,slot,profile,no,requirements,testing,utils,infinite,time,final,allocation,id,allocation,id1,allocation,ids,take,final,allocation,id,allocation,id2,allocation,ids,take,completable,future,boolean,slot,offer,future1,slot,pool,gateway,offer,slot,task,manager,location,new,simple,acking,task,manager,gateway,new,slot,offer,allocation,id1,0,resource,profile,unknown,completable,future,boolean,slot,offer,future2,slot,pool,gateway,offer,slot,task,manager,location,new,simple,acking,task,manager,gateway,new,slot,offer,allocation,id2,0,resource,profile,unknown,assert,true,slot,offer,future1,get,assert,true,slot,offer,future2,get,logical,slot,logical,slot11,logical,slot,future11,get,logical,slot,logical,slot12,logical,slot,future12,get,logical,slot,logical,slot21,logical,slot,future21,get,logical,slot,logical,slot22,logical,slot,future22,get,assert,equals,logical,slot11,get,allocation,id,logical,slot12,get,allocation,id,assert,equals,logical,slot21,get,allocation,id,logical,slot22,get,allocation,id,assert,not,equals,logical,slot11,get,allocation,id,logical,slot21,get,allocation,id
SlotPoolCoLocationTest -> @Test 	public void testSimpleCoLocatedSlotScheduling() throws ExecutionException, InterruptedException;1530104620;Tests the scheduling of two tasks with a parallelism of 2 and a co-location constraint.;@Test_	public void testSimpleCoLocatedSlotScheduling() throws ExecutionException, InterruptedException {_		final BlockingQueue<AllocationID> allocationIds = new ArrayBlockingQueue<>(2)___		final TestingResourceManagerGateway testingResourceManagerGateway = slotPoolResource.getTestingResourceManagerGateway()___		testingResourceManagerGateway.setRequestSlotConsumer(_			(SlotRequest slotRequest) -> allocationIds.offer(slotRequest.getAllocationId()))___		final TaskManagerLocation taskManagerLocation = new LocalTaskManagerLocation()___		final SlotPoolGateway slotPoolGateway = slotPoolResource.getSlotPoolGateway()__		slotPoolGateway.registerTaskManager(taskManagerLocation.getResourceID()).get()___		CoLocationGroup group = new CoLocationGroup()__		CoLocationConstraint coLocationConstraint1 = group.getLocationConstraint(0)__		CoLocationConstraint coLocationConstraint2 = group.getLocationConstraint(1)___		final SlotSharingGroupId slotSharingGroupId = new SlotSharingGroupId()___		JobVertexID jobVertexId1 = new JobVertexID()__		JobVertexID jobVertexId2 = new JobVertexID()___		final SlotProvider slotProvider = slotPoolResource.getSlotProvider()__		CompletableFuture<LogicalSlot> logicalSlotFuture11 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId1,_				slotSharingGroupId,_				coLocationConstraint1),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture22 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId2,_				slotSharingGroupId,_				coLocationConstraint2),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture12 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId2,_				slotSharingGroupId,_				coLocationConstraint1),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture21 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId1,_				slotSharingGroupId,_				coLocationConstraint2),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		final AllocationID allocationId1 = allocationIds.take()__		final AllocationID allocationId2 = allocationIds.take()___		CompletableFuture<Boolean> slotOfferFuture1 = slotPoolGateway.offerSlot(_			taskManagerLocation,_			new SimpleAckingTaskManagerGateway(),_			new SlotOffer(_				allocationId1,_				0,_				ResourceProfile.UNKNOWN))___		CompletableFuture<Boolean> slotOfferFuture2 = slotPoolGateway.offerSlot(_			taskManagerLocation,_			new SimpleAckingTaskManagerGateway(),_			new SlotOffer(_				allocationId2,_				0,_				ResourceProfile.UNKNOWN))___		assertTrue(slotOfferFuture1.get())__		assertTrue(slotOfferFuture2.get())___		LogicalSlot logicalSlot11 = logicalSlotFuture11.get()__		LogicalSlot logicalSlot12 = logicalSlotFuture12.get()__		LogicalSlot logicalSlot21 = logicalSlotFuture21.get()__		LogicalSlot logicalSlot22 = logicalSlotFuture22.get()___		assertEquals(logicalSlot11.getAllocationId(), logicalSlot12.getAllocationId())__		assertEquals(logicalSlot21.getAllocationId(), logicalSlot22.getAllocationId())__		assertNotEquals(logicalSlot11.getAllocationId(), logicalSlot21.getAllocationId())__	};tests,the,scheduling,of,two,tasks,with,a,parallelism,of,2,and,a,co,location,constraint;test,public,void,test,simple,co,located,slot,scheduling,throws,execution,exception,interrupted,exception,final,blocking,queue,allocation,id,allocation,ids,new,array,blocking,queue,2,final,testing,resource,manager,gateway,testing,resource,manager,gateway,slot,pool,resource,get,testing,resource,manager,gateway,testing,resource,manager,gateway,set,request,slot,consumer,slot,request,slot,request,allocation,ids,offer,slot,request,get,allocation,id,final,task,manager,location,task,manager,location,new,local,task,manager,location,final,slot,pool,gateway,slot,pool,gateway,slot,pool,resource,get,slot,pool,gateway,slot,pool,gateway,register,task,manager,task,manager,location,get,resource,id,get,co,location,group,group,new,co,location,group,co,location,constraint,co,location,constraint1,group,get,location,constraint,0,co,location,constraint,co,location,constraint2,group,get,location,constraint,1,final,slot,sharing,group,id,slot,sharing,group,id,new,slot,sharing,group,id,job,vertex,id,job,vertex,id1,new,job,vertex,id,job,vertex,id,job,vertex,id2,new,job,vertex,id,final,slot,provider,slot,provider,slot,pool,resource,get,slot,provider,completable,future,logical,slot,logical,slot,future11,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id1,slot,sharing,group,id,co,location,constraint1,true,slot,profile,no,requirements,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future22,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id2,slot,sharing,group,id,co,location,constraint2,true,slot,profile,no,requirements,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future12,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id2,slot,sharing,group,id,co,location,constraint1,true,slot,profile,no,requirements,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future21,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id1,slot,sharing,group,id,co,location,constraint2,true,slot,profile,no,requirements,testing,utils,infinite,time,final,allocation,id,allocation,id1,allocation,ids,take,final,allocation,id,allocation,id2,allocation,ids,take,completable,future,boolean,slot,offer,future1,slot,pool,gateway,offer,slot,task,manager,location,new,simple,acking,task,manager,gateway,new,slot,offer,allocation,id1,0,resource,profile,unknown,completable,future,boolean,slot,offer,future2,slot,pool,gateway,offer,slot,task,manager,location,new,simple,acking,task,manager,gateway,new,slot,offer,allocation,id2,0,resource,profile,unknown,assert,true,slot,offer,future1,get,assert,true,slot,offer,future2,get,logical,slot,logical,slot11,logical,slot,future11,get,logical,slot,logical,slot12,logical,slot,future12,get,logical,slot,logical,slot21,logical,slot,future21,get,logical,slot,logical,slot22,logical,slot,future22,get,assert,equals,logical,slot11,get,allocation,id,logical,slot12,get,allocation,id,assert,equals,logical,slot21,get,allocation,id,logical,slot22,get,allocation,id,assert,not,equals,logical,slot11,get,allocation,id,logical,slot21,get,allocation,id
SlotPoolCoLocationTest -> @Test 	public void testSimpleCoLocatedSlotScheduling() throws ExecutionException, InterruptedException;1550220073;Tests the scheduling of two tasks with a parallelism of 2 and a co-location constraint.;@Test_	public void testSimpleCoLocatedSlotScheduling() throws ExecutionException, InterruptedException {_		final BlockingQueue<AllocationID> allocationIds = new ArrayBlockingQueue<>(2)___		final TestingResourceManagerGateway testingResourceManagerGateway = slotPoolResource.getTestingResourceManagerGateway()___		testingResourceManagerGateway.setRequestSlotConsumer(_			(SlotRequest slotRequest) -> allocationIds.offer(slotRequest.getAllocationId()))___		final TaskManagerLocation taskManagerLocation = new LocalTaskManagerLocation()___		final SlotPool slotPoolGateway = slotPoolResource.getSlotPool()__		slotPoolGateway.registerTaskManager(taskManagerLocation.getResourceID())___		CoLocationGroup group = new CoLocationGroup()__		CoLocationConstraint coLocationConstraint1 = group.getLocationConstraint(0)__		CoLocationConstraint coLocationConstraint2 = group.getLocationConstraint(1)___		final SlotSharingGroupId slotSharingGroupId = new SlotSharingGroupId()___		JobVertexID jobVertexId1 = new JobVertexID()__		JobVertexID jobVertexId2 = new JobVertexID()___		final SlotProvider slotProvider = slotPoolResource.getSlotProvider()__		CompletableFuture<LogicalSlot> logicalSlotFuture11 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId1,_				slotSharingGroupId,_				coLocationConstraint1),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture22 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId2,_				slotSharingGroupId,_				coLocationConstraint2),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture12 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId2,_				slotSharingGroupId,_				coLocationConstraint1),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		CompletableFuture<LogicalSlot> logicalSlotFuture21 = slotProvider.allocateSlot(_			new ScheduledUnit(_				jobVertexId1,_				slotSharingGroupId,_				coLocationConstraint2),_			true,_			SlotProfile.noRequirements(),_			TestingUtils.infiniteTime())___		final AllocationID allocationId1 = allocationIds.take()__		final AllocationID allocationId2 = allocationIds.take()___		Collection<SlotOffer> slotOfferFuture1 = slotPoolGateway.offerSlots(_			taskManagerLocation,_			new SimpleAckingTaskManagerGateway(),_			Collections.singletonList(new SlotOffer(_				allocationId1,_				0,_				ResourceProfile.UNKNOWN)))___		Collection<SlotOffer> slotOfferFuture2 = slotPoolGateway.offerSlots(_			taskManagerLocation,_			new SimpleAckingTaskManagerGateway(),_			Collections.singletonList(new SlotOffer(_				allocationId2,_				0,_				ResourceProfile.UNKNOWN)))___		assertFalse(slotOfferFuture1.isEmpty())__		assertFalse(slotOfferFuture2.isEmpty())___		LogicalSlot logicalSlot11 = logicalSlotFuture11.get()__		LogicalSlot logicalSlot12 = logicalSlotFuture12.get()__		LogicalSlot logicalSlot21 = logicalSlotFuture21.get()__		LogicalSlot logicalSlot22 = logicalSlotFuture22.get()___		assertEquals(logicalSlot11.getAllocationId(), logicalSlot12.getAllocationId())__		assertEquals(logicalSlot21.getAllocationId(), logicalSlot22.getAllocationId())__		assertNotEquals(logicalSlot11.getAllocationId(), logicalSlot21.getAllocationId())__	};tests,the,scheduling,of,two,tasks,with,a,parallelism,of,2,and,a,co,location,constraint;test,public,void,test,simple,co,located,slot,scheduling,throws,execution,exception,interrupted,exception,final,blocking,queue,allocation,id,allocation,ids,new,array,blocking,queue,2,final,testing,resource,manager,gateway,testing,resource,manager,gateway,slot,pool,resource,get,testing,resource,manager,gateway,testing,resource,manager,gateway,set,request,slot,consumer,slot,request,slot,request,allocation,ids,offer,slot,request,get,allocation,id,final,task,manager,location,task,manager,location,new,local,task,manager,location,final,slot,pool,slot,pool,gateway,slot,pool,resource,get,slot,pool,slot,pool,gateway,register,task,manager,task,manager,location,get,resource,id,co,location,group,group,new,co,location,group,co,location,constraint,co,location,constraint1,group,get,location,constraint,0,co,location,constraint,co,location,constraint2,group,get,location,constraint,1,final,slot,sharing,group,id,slot,sharing,group,id,new,slot,sharing,group,id,job,vertex,id,job,vertex,id1,new,job,vertex,id,job,vertex,id,job,vertex,id2,new,job,vertex,id,final,slot,provider,slot,provider,slot,pool,resource,get,slot,provider,completable,future,logical,slot,logical,slot,future11,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id1,slot,sharing,group,id,co,location,constraint1,true,slot,profile,no,requirements,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future22,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id2,slot,sharing,group,id,co,location,constraint2,true,slot,profile,no,requirements,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future12,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id2,slot,sharing,group,id,co,location,constraint1,true,slot,profile,no,requirements,testing,utils,infinite,time,completable,future,logical,slot,logical,slot,future21,slot,provider,allocate,slot,new,scheduled,unit,job,vertex,id1,slot,sharing,group,id,co,location,constraint2,true,slot,profile,no,requirements,testing,utils,infinite,time,final,allocation,id,allocation,id1,allocation,ids,take,final,allocation,id,allocation,id2,allocation,ids,take,collection,slot,offer,slot,offer,future1,slot,pool,gateway,offer,slots,task,manager,location,new,simple,acking,task,manager,gateway,collections,singleton,list,new,slot,offer,allocation,id1,0,resource,profile,unknown,collection,slot,offer,slot,offer,future2,slot,pool,gateway,offer,slots,task,manager,location,new,simple,acking,task,manager,gateway,collections,singleton,list,new,slot,offer,allocation,id2,0,resource,profile,unknown,assert,false,slot,offer,future1,is,empty,assert,false,slot,offer,future2,is,empty,logical,slot,logical,slot11,logical,slot,future11,get,logical,slot,logical,slot12,logical,slot,future12,get,logical,slot,logical,slot21,logical,slot,future21,get,logical,slot,logical,slot22,logical,slot,future22,get,assert,equals,logical,slot11,get,allocation,id,logical,slot12,get,allocation,id,assert,equals,logical,slot21,get,allocation,id,logical,slot22,get,allocation,id,assert,not,equals,logical,slot11,get,allocation,id,logical,slot21,get,allocation,id
