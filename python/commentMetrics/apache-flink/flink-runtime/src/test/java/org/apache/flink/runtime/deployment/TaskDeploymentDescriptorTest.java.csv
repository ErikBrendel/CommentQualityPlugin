commented;modifiers;parameterAmount;loc;comment;code
false;public;0;27;;@Test public void testSerialization() throws Exception {     final TaskDeploymentDescriptor orig = createTaskDeploymentDescriptor(new TaskDeploymentDescriptor.NonOffloaded<>(serializedJobInformation), new TaskDeploymentDescriptor.NonOffloaded<>(serializedJobVertexInformation)).     final TaskDeploymentDescriptor copy = CommonTestUtils.createCopySerializable(orig).     assertFalse(orig.getSerializedJobInformation() == copy.getSerializedJobInformation()).     assertFalse(orig.getSerializedTaskInformation() == copy.getSerializedTaskInformation()).     assertFalse(orig.getExecutionAttemptId() == copy.getExecutionAttemptId()).     assertFalse(orig.getTaskRestore() == copy.getTaskRestore()).     assertFalse(orig.getProducedPartitions() == copy.getProducedPartitions()).     assertFalse(orig.getInputGates() == copy.getInputGates()).     assertEquals(orig.getSerializedJobInformation(), copy.getSerializedJobInformation()).     assertEquals(orig.getSerializedTaskInformation(), copy.getSerializedTaskInformation()).     assertEquals(orig.getExecutionAttemptId(), copy.getExecutionAttemptId()).     assertEquals(orig.getAllocationId(), copy.getAllocationId()).     assertEquals(orig.getSubtaskIndex(), copy.getSubtaskIndex()).     assertEquals(orig.getAttemptNumber(), copy.getAttemptNumber()).     assertEquals(orig.getTargetSlotNumber(), copy.getTargetSlotNumber()).     assertEquals(orig.getTaskRestore().getRestoreCheckpointId(), copy.getTaskRestore().getRestoreCheckpointId()).     assertEquals(orig.getTaskRestore().getTaskStateSnapshot(), copy.getTaskRestore().getTaskStateSnapshot()).     assertEquals(orig.getProducedPartitions(), copy.getProducedPartitions()).     assertEquals(orig.getInputGates(), copy.getInputGates()). }
false;public;0;16;;@Test public void testOffLoadedAndNonOffLoadedPayload() {     final TaskDeploymentDescriptor taskDeploymentDescriptor = createTaskDeploymentDescriptor(new TaskDeploymentDescriptor.NonOffloaded<>(serializedJobInformation), new TaskDeploymentDescriptor.Offloaded<>(new PermanentBlobKey())).     SerializedValue<JobInformation> actualSerializedJobInformation = taskDeploymentDescriptor.getSerializedJobInformation().     assertThat(actualSerializedJobInformation, is(serializedJobInformation)).     try {         taskDeploymentDescriptor.getSerializedTaskInformation().         fail("Expected to fail since the task information should be offloaded.").     } catch (IllegalStateException expected) {     // expected     } }
false;private;2;15;;@Nonnull private TaskDeploymentDescriptor createTaskDeploymentDescriptor(TaskDeploymentDescriptor.MaybeOffloaded<JobInformation> jobInformation, TaskDeploymentDescriptor.MaybeOffloaded<TaskInformation> taskInformation) {     return new TaskDeploymentDescriptor(jobID, jobInformation, taskInformation, execId, allocationId, indexInSubtaskGroup, attemptNumber, targetSlotNumber, taskRestore, producedResults, inputGates). }
