commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected Class<JobVertexDetailsInfo> getTestResponseClass() {     return JobVertexDetailsInfo.class. }
false;protected;0;48;;@Override protected JobVertexDetailsInfo getTestResponseInstance() throws Exception {     final Random random = new Random().     final IOMetricsInfo jobVertexMetrics = new IOMetricsInfo(random.nextLong(), random.nextBoolean(), random.nextLong(), random.nextBoolean(), random.nextLong(), random.nextBoolean(), random.nextLong(), random.nextBoolean()).     List<JobVertexDetailsInfo.VertexTaskDetail> vertexTaskDetailList = new ArrayList<>().     vertexTaskDetailList.add(new JobVertexDetailsInfo.VertexTaskDetail(0, ExecutionState.CREATED, random.nextInt(), "local1", System.currentTimeMillis(), System.currentTimeMillis(), 1L, jobVertexMetrics)).     vertexTaskDetailList.add(new JobVertexDetailsInfo.VertexTaskDetail(1, ExecutionState.FAILED, random.nextInt(), "local2", System.currentTimeMillis(), System.currentTimeMillis(), 1L, jobVertexMetrics)).     vertexTaskDetailList.add(new JobVertexDetailsInfo.VertexTaskDetail(2, ExecutionState.FINISHED, random.nextInt(), "local3", System.currentTimeMillis(), System.currentTimeMillis(), 1L, jobVertexMetrics)).     return new JobVertexDetailsInfo(new JobVertexID(), "jobVertex" + random.nextLong(), random.nextInt(), System.currentTimeMillis(), vertexTaskDetailList). }
