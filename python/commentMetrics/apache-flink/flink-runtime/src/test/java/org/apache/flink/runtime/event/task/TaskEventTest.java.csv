commented;modifiers;parameterAmount;loc;comment;code
true;public;0;15;/**  * This test checks the serialization/deserialization of {@link IntegerTaskEvent} objects.  */ ;/**  * This test checks the serialization/deserialization of {@link IntegerTaskEvent} objects.  */ @Test public void testIntegerTaskEvent() {     try {         final IntegerTaskEvent orig = new IntegerTaskEvent(11).         final IntegerTaskEvent copy = InstantiationUtil.createCopyWritable(orig).         assertEquals(orig.getInteger(), copy.getInteger()).         assertEquals(orig.hashCode(), copy.hashCode()).         assertTrue(orig.equals(copy)).     } catch (IOException ioe) {         fail(ioe.getMessage()).     } }
true;public;0;16;/**  * This test checks the serialization/deserialization of {@link StringTaskEvent} objects.  */ ;/**  * This test checks the serialization/deserialization of {@link StringTaskEvent} objects.  */ @Test public void testStringTaskEvent() {     try {         final StringTaskEvent orig = new StringTaskEvent("Test").         final StringTaskEvent copy = InstantiationUtil.createCopyWritable(orig).         assertEquals(orig.getString(), copy.getString()).         assertEquals(orig.hashCode(), copy.hashCode()).         assertTrue(orig.equals(copy)).     } catch (IOException ioe) {         fail(ioe.getMessage()).     } }
