commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void testEmptyCollection() {     StateObjectCollection<StateObject> empty = StateObjectCollection.empty().     Assert.assertEquals(0, empty.getStateSize()). }
false;public;0;6;;@Test public void testForwardingCollectionMethods() throws Exception {     MethodForwardingTestUtil.testMethodForwarding(Collection.class, ((Function<Collection, StateObjectCollection>) StateObjectCollection::new)). }
false;public;0;6;;@Test public void testForwardingStateObjectMethods() throws Exception {     MethodForwardingTestUtil.testMethodForwarding(StateObject.class, object -> new StateObjectCollection<>(Collections.singletonList(object))). }
false;public;0;11;;@Test public void testHasState() {     StateObjectCollection<StateObject> stateObjects = new StateObjectCollection<>(new ArrayList<>()).     Assert.assertFalse(stateObjects.hasState()).     stateObjects = new StateObjectCollection<>(Collections.singletonList(null)).     Assert.assertFalse(stateObjects.hasState()).     stateObjects = new StateObjectCollection<>(Collections.singletonList(mock(StateObject.class))).     Assert.assertTrue(stateObjects.hasState()). }
