commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected Tuple2<String, List<String>> getFilter() {     return Tuple2.of("taskmanagers", Arrays.asList(TM_ID_1.toString(), TM_ID_3.toString())). }
false;protected;0;17;;@Override protected Collection<MetricDump> getMetricDumps() {     Collection<MetricDump> dumps = new ArrayList<>(3).     QueryScopeInfo.TaskManagerQueryScopeInfo tm1 = new QueryScopeInfo.TaskManagerQueryScopeInfo(TM_ID_1.toString(), "abc").     MetricDump.CounterDump cd1 = new MetricDump.CounterDump(tm1, "metric1", 1).     dumps.add(cd1).     QueryScopeInfo.TaskManagerQueryScopeInfo tm2 = new QueryScopeInfo.TaskManagerQueryScopeInfo(TM_ID_2.toString(), "abc").     MetricDump.CounterDump cd2 = new MetricDump.CounterDump(tm2, "metric1", 3).     dumps.add(cd2).     QueryScopeInfo.TaskManagerQueryScopeInfo tm3 = new QueryScopeInfo.TaskManagerQueryScopeInfo(TM_ID_3.toString(), "abc").     MetricDump.CounterDump cd3 = new MetricDump.CounterDump(tm3, "metric2", 5).     dumps.add(cd3).     return dumps. }
false;protected;5;10;;@Override protected AggregatingTaskManagersMetricsHandler getHandler(GatewayRetriever<? extends RestfulGateway> leaderRetriever, Time timeout, Map<String, String> responseHeaders, Executor executor, MetricFetcher fetcher) {     return new AggregatingTaskManagersMetricsHandler(leaderRetriever, timeout, responseHeaders, executor, fetcher). }
