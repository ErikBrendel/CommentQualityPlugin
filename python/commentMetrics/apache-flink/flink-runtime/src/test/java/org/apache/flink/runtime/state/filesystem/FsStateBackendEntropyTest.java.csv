commented;modifiers;parameterAmount;loc;comment;code
false;public;0;57;;@Test public void testEntropyInjection() throws Exception {     final FileSystem fs = new TestEntropyAwareFs().     final Path checkpointDir = new Path(Path.fromLocalFile(tmp.newFolder()), ENTROPY_MARKER + "/checkpoints").     final String checkpointDirStr = checkpointDir.toString().     FsCheckpointStorage storage = new FsCheckpointStorage(fs, checkpointDir, null, new JobID(), 1024).     FsCheckpointStorageLocation location = (FsCheckpointStorageLocation) storage.initializeLocationForCheckpoint(96562).     assertThat(location.getCheckpointDirectory().toString(), startsWith(checkpointDirStr)).     assertThat(location.getSharedStateDirectory().toString(), startsWith(checkpointDirStr)).     assertThat(location.getTaskOwnedStateDirectory().toString(), startsWith(checkpointDirStr)).     assertThat(location.getMetadataFilePath().toString(), not(containsString(ENTROPY_MARKER))).     // check entropy in task-owned state     try (CheckpointStateOutputStream stream = storage.createTaskOwnedStateStream()) {         stream.flush().         FileStateHandle handle = (FileStateHandle) stream.closeAndGetHandle().         assertNotNull(handle).         assertThat(handle.getFilePath().toString(), not(containsString(ENTROPY_MARKER))).         assertThat(handle.getFilePath().toString(), containsString(RESOLVED_MARKER)).     }     // check entropy in the exclusive/shared state     try (CheckpointStateOutputStream stream = location.createCheckpointStateOutputStream(CheckpointedStateScope.EXCLUSIVE)) {         stream.flush().         FileStateHandle handle = (FileStateHandle) stream.closeAndGetHandle().         assertNotNull(handle).         assertThat(handle.getFilePath().toString(), not(containsString(ENTROPY_MARKER))).         assertThat(handle.getFilePath().toString(), containsString(RESOLVED_MARKER)).     }     // check entropy in the exclusive/shared state     try (CheckpointMetadataOutputStream stream = location.createMetadataOutputStream()) {         stream.flush().         FsCompletedCheckpointStorageLocation handle = (FsCompletedCheckpointStorageLocation) stream.closeAndFinalizeCheckpoint().         assertNotNull(handle).         // metadata files have no entropy         assertThat(handle.getMetadataHandle().getFilePath().toString(), not(containsString(ENTROPY_MARKER))).         assertThat(handle.getMetadataHandle().getFilePath().toString(), not(containsString(RESOLVED_MARKER))).         // external location is the same as metadata, without the file name         assertEquals(handle.getMetadataHandle().getFilePath().getParent().toString(), handle.getExternalPointer()).     } }
false;public;0;4;;@Override public String getEntropyInjectionKey() {     return ENTROPY_MARKER. }
false;public;0;4;;@Override public String generateEntropy() {     return RESOLVED_MARKER. }
