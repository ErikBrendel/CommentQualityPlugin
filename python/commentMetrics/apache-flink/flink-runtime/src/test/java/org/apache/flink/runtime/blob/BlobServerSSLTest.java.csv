commented;modifiers;parameterAmount;loc;comment;code
false;public;0;22;;@Test public void testFailedToInitWithTwoProtocolsSet() {     final Configuration config = new Configuration().     config.setBoolean(SecurityOptions.SSL_INTERNAL_ENABLED, true).     config.setString(SecurityOptions.SSL_KEYSTORE, getClass().getResource("/local127.keystore").getPath()).     config.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password").     config.setString(SecurityOptions.SSL_KEY_PASSWORD, "password").     config.setString(SecurityOptions.SSL_TRUSTSTORE, getClass().getResource("/local127.truststore").getPath()).     config.setString(SecurityOptions.SSL_TRUSTSTORE_PASSWORD, "password").     config.setString(SecurityOptions.SSL_ALGORITHMS, "TLSv1,TLSv1.1").     try (final BlobServer ignored = new BlobServer(config, new VoidBlobStore())) {         fail().     } catch (Exception e) {         findThrowable(e, IOException.class).         findThrowableWithMessage(e, "Unable to open BLOB Server in specified port range: 0").     } }
false;public;0;18;;@Test public void testFailedToInitWithInvalidSslKeystoreConfigured() {     final Configuration config = new Configuration().     config.setBoolean(SecurityOptions.SSL_INTERNAL_ENABLED, true).     config.setString(SecurityOptions.SSL_KEYSTORE, "invalid.keystore").     config.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password").     config.setString(SecurityOptions.SSL_KEY_PASSWORD, "password").     config.setString(SecurityOptions.SSL_TRUSTSTORE, "invalid.keystore").     config.setString(SecurityOptions.SSL_TRUSTSTORE_PASSWORD, "password").     try (final BlobServer ignored = new BlobServer(config, new VoidBlobStore())) {         fail().     } catch (Exception e) {         findThrowable(e, IOException.class).         findThrowableWithMessage(e, "Failed to initialize SSL for the blob server").     } }
false;public;0;13;;@Test public void testFailedToInitWithMissingMandatorySslConfiguration() {     final Configuration config = new Configuration().     config.setBoolean(SecurityOptions.SSL_INTERNAL_ENABLED, true).     try (final BlobServer ignored = new BlobServer(config, new VoidBlobStore())) {         fail().     } catch (Exception e) {         findThrowable(e, IOException.class).         findThrowableWithMessage(e, "Failed to initialize SSL for the blob server").     } }
