commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;public TestingJobMasterGatewayBuilder setAddress(String address) {     this.address = address.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setHostname(String hostname) {     this.hostname = hostname.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setCancelFunction(Supplier<CompletableFuture<Acknowledge>> cancelFunction) {     this.cancelFunction = cancelFunction.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setStopFunction(Supplier<CompletableFuture<Acknowledge>> stopFunction) {     this.stopFunction = stopFunction.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setRescalingJobFunction(BiFunction<Integer, RescalingBehaviour, CompletableFuture<Acknowledge>> rescalingJobFunction) {     this.rescalingJobFunction = rescalingJobFunction.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setRescalingOperatorsFunction(TriFunction<Collection<JobVertexID>, Integer, RescalingBehaviour, CompletableFuture<Acknowledge>> rescalingOperatorsFunction) {     this.rescalingOperatorsFunction = rescalingOperatorsFunction.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setUpdateTaskExecutionStateFunction(Function<TaskExecutionState, CompletableFuture<Acknowledge>> updateTaskExecutionStateFunction) {     this.updateTaskExecutionStateFunction = updateTaskExecutionStateFunction.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setRequestNextInputSplitFunction(BiFunction<JobVertexID, ExecutionAttemptID, CompletableFuture<SerializedInputSplit>> requestNextInputSplitFunction) {     this.requestNextInputSplitFunction = requestNextInputSplitFunction.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setRequestPartitionStateFunction(BiFunction<IntermediateDataSetID, ResultPartitionID, CompletableFuture<ExecutionState>> requestPartitionStateFunction) {     this.requestPartitionStateFunction = requestPartitionStateFunction.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setScheduleOrUpdateConsumersFunction(Function<ResultPartitionID, CompletableFuture<Acknowledge>> scheduleOrUpdateConsumersFunction) {     this.scheduleOrUpdateConsumersFunction = scheduleOrUpdateConsumersFunction.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setDisconnectTaskManagerFunction(Function<ResourceID, CompletableFuture<Acknowledge>> disconnectTaskManagerFunction) {     this.disconnectTaskManagerFunction = disconnectTaskManagerFunction.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setDisconnectResourceManagerConsumer(Consumer<ResourceManagerId> disconnectResourceManagerConsumer) {     this.disconnectResourceManagerConsumer = disconnectResourceManagerConsumer.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setClassloadingPropsSupplier(Supplier<CompletableFuture<ClassloadingProps>> classloadingPropsSupplier) {     this.classloadingPropsSupplier = classloadingPropsSupplier.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setOfferSlotsFunction(BiFunction<ResourceID, Collection<SlotOffer>, CompletableFuture<Collection<SlotOffer>>> offerSlotsFunction) {     this.offerSlotsFunction = offerSlotsFunction.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setFailSlotConsumer(TriConsumer<ResourceID, AllocationID, Throwable> failSlotConsumer) {     this.failSlotConsumer = failSlotConsumer.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setRegisterTaskManagerFunction(BiFunction<String, TaskManagerLocation, CompletableFuture<RegistrationResponse>> registerTaskManagerFunction) {     this.registerTaskManagerFunction = registerTaskManagerFunction.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setTaskManagerHeartbeatConsumer(BiConsumer<ResourceID, AccumulatorReport> taskManagerHeartbeatConsumer) {     this.taskManagerHeartbeatConsumer = taskManagerHeartbeatConsumer.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setResourceManagerHeartbeatConsumer(Consumer<ResourceID> resourceManagerHeartbeatConsumer) {     this.resourceManagerHeartbeatConsumer = resourceManagerHeartbeatConsumer.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setRequestJobDetailsSupplier(Supplier<CompletableFuture<JobDetails>> requestJobDetailsSupplier) {     this.requestJobDetailsSupplier = requestJobDetailsSupplier.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setRequestJobSupplier(Supplier<CompletableFuture<ArchivedExecutionGraph>> requestJobSupplier) {     this.requestJobSupplier = requestJobSupplier.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setTriggerSavepointFunction(BiFunction<String, Boolean, CompletableFuture<String>> triggerSavepointFunction) {     this.triggerSavepointFunction = triggerSavepointFunction.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setRequestOperatorBackPressureStatsFunction(Function<JobVertexID, CompletableFuture<OperatorBackPressureStatsResponse>> requestOperatorBackPressureStatsFunction) {     this.requestOperatorBackPressureStatsFunction = requestOperatorBackPressureStatsFunction.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setNotifyAllocationFailureConsumer(BiConsumer<AllocationID, Throwable> notifyAllocationFailureConsumer) {     this.notifyAllocationFailureConsumer = notifyAllocationFailureConsumer.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setAcknowledgeCheckpointConsumer(Consumer<Tuple5<JobID, ExecutionAttemptID, Long, CheckpointMetrics, TaskStateSnapshot>> acknowledgeCheckpointConsumer) {     this.acknowledgeCheckpointConsumer = acknowledgeCheckpointConsumer.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setDeclineCheckpointConsumer(Consumer<DeclineCheckpoint> declineCheckpointConsumer) {     this.declineCheckpointConsumer = declineCheckpointConsumer.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setFencingTokenSupplier(Supplier<JobMasterId> fencingTokenSupplier) {     this.fencingTokenSupplier = fencingTokenSupplier.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setRequestKvStateLocationFunction(BiFunction<JobID, String, CompletableFuture<KvStateLocation>> requestKvStateLocationFunction) {     this.requestKvStateLocationFunction = requestKvStateLocationFunction.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setNotifyKvStateRegisteredFunction(Function<Tuple6<JobID, JobVertexID, KeyGroupRange, String, KvStateID, InetSocketAddress>, CompletableFuture<Acknowledge>> notifyKvStateRegisteredFunction) {     this.notifyKvStateRegisteredFunction = notifyKvStateRegisteredFunction.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setNotifyKvStateUnregisteredFunction(Function<Tuple4<JobID, JobVertexID, KeyGroupRange, String>, CompletableFuture<Acknowledge>> notifyKvStateUnregisteredFunction) {     this.notifyKvStateUnregisteredFunction = notifyKvStateUnregisteredFunction.     return this. }
false;public;1;4;;public TestingJobMasterGatewayBuilder setUpdateAggregateFunction(TriFunction<String, Object, byte[], CompletableFuture<Object>> updateAggregateFunction) {     this.updateAggregateFunction = updateAggregateFunction.     return this. }
false;public;0;3;;public TestingJobMasterGateway build() {     return new TestingJobMasterGateway(address, hostname, cancelFunction, stopFunction, rescalingJobFunction, rescalingOperatorsFunction, updateTaskExecutionStateFunction, requestNextInputSplitFunction, requestPartitionStateFunction, scheduleOrUpdateConsumersFunction, disconnectTaskManagerFunction, disconnectResourceManagerConsumer, classloadingPropsSupplier, offerSlotsFunction, failSlotConsumer, registerTaskManagerFunction, taskManagerHeartbeatConsumer, resourceManagerHeartbeatConsumer, requestJobDetailsSupplier, requestJobSupplier, triggerSavepointFunction, requestOperatorBackPressureStatsFunction, notifyAllocationFailureConsumer, acknowledgeCheckpointConsumer, declineCheckpointConsumer, fencingTokenSupplier, requestKvStateLocationFunction, notifyKvStateRegisteredFunction, notifyKvStateUnregisteredFunction, updateAggregateFunction). }
