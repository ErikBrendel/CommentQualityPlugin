# id;timestamp;commentText;codeText;commentWords;codeWords
CheckpointStatsHistoryTest -> @Test 	public void testZeroMaxSizeHistory() throws Exception;1484038132;Tests a checkpoint history with allowed size 0.;@Test_	public void testZeroMaxSizeHistory() throws Exception {_		CheckpointStatsHistory history = new CheckpointStatsHistory(0)___		history.addInProgressCheckpoint(createPendingCheckpointStats(0))__		assertFalse(history.replacePendingCheckpointById(createCompletedCheckpointStats(0)))___		CheckpointStatsHistory snapshot = history.createSnapshot()___		int counter = 0__		for (AbstractCheckpointStats ignored : snapshot.getCheckpoints()) {_			counter++__		}__		assertEquals(0, counter)__		assertNotNull(snapshot.getCheckpointById(0))__	};tests,a,checkpoint,history,with,allowed,size,0;test,public,void,test,zero,max,size,history,throws,exception,checkpoint,stats,history,history,new,checkpoint,stats,history,0,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,0,assert,false,history,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,0,checkpoint,stats,history,snapshot,history,create,snapshot,int,counter,0,for,abstract,checkpoint,stats,ignored,snapshot,get,checkpoints,counter,assert,equals,0,counter,assert,not,null,snapshot,get,checkpoint,by,id,0
CheckpointStatsHistoryTest -> @Test 	public void testZeroMaxSizeHistory() throws Exception;1485790402;Tests a checkpoint history with allowed size 0.;@Test_	public void testZeroMaxSizeHistory() throws Exception {_		CheckpointStatsHistory history = new CheckpointStatsHistory(0)___		history.addInProgressCheckpoint(createPendingCheckpointStats(0))__		assertFalse(history.replacePendingCheckpointById(createCompletedCheckpointStats(0)))___		CheckpointStatsHistory snapshot = history.createSnapshot()___		int counter = 0__		for (AbstractCheckpointStats ignored : snapshot.getCheckpoints()) {_			counter++__		}__		assertEquals(0, counter)__		assertNotNull(snapshot.getCheckpointById(0))__	};tests,a,checkpoint,history,with,allowed,size,0;test,public,void,test,zero,max,size,history,throws,exception,checkpoint,stats,history,history,new,checkpoint,stats,history,0,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,0,assert,false,history,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,0,checkpoint,stats,history,snapshot,history,create,snapshot,int,counter,0,for,abstract,checkpoint,stats,ignored,snapshot,get,checkpoints,counter,assert,equals,0,counter,assert,not,null,snapshot,get,checkpoint,by,id,0
CheckpointStatsHistoryTest -> @Test 	public void testZeroMaxSizeHistory() throws Exception;1487762095;Tests a checkpoint history with allowed size 0.;@Test_	public void testZeroMaxSizeHistory() throws Exception {_		CheckpointStatsHistory history = new CheckpointStatsHistory(0)___		history.addInProgressCheckpoint(createPendingCheckpointStats(0))__		assertFalse(history.replacePendingCheckpointById(createCompletedCheckpointStats(0)))___		CheckpointStatsHistory snapshot = history.createSnapshot()___		int counter = 0__		for (AbstractCheckpointStats ignored : snapshot.getCheckpoints()) {_			counter++__		}__		assertEquals(0, counter)__		assertNotNull(snapshot.getCheckpointById(0))__	};tests,a,checkpoint,history,with,allowed,size,0;test,public,void,test,zero,max,size,history,throws,exception,checkpoint,stats,history,history,new,checkpoint,stats,history,0,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,0,assert,false,history,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,0,checkpoint,stats,history,snapshot,history,create,snapshot,int,counter,0,for,abstract,checkpoint,stats,ignored,snapshot,get,checkpoints,counter,assert,equals,0,counter,assert,not,null,snapshot,get,checkpoint,by,id,0
CheckpointStatsHistoryTest -> @Test 	public void testZeroMaxSizeHistory() throws Exception;1487871589;Tests a checkpoint history with allowed size 0.;@Test_	public void testZeroMaxSizeHistory() throws Exception {_		CheckpointStatsHistory history = new CheckpointStatsHistory(0)___		history.addInProgressCheckpoint(createPendingCheckpointStats(0))__		assertFalse(history.replacePendingCheckpointById(createCompletedCheckpointStats(0)))___		CheckpointStatsHistory snapshot = history.createSnapshot()___		int counter = 0__		for (AbstractCheckpointStats ignored : snapshot.getCheckpoints()) {_			counter++__		}__		assertEquals(0, counter)__		assertNotNull(snapshot.getCheckpointById(0))__	};tests,a,checkpoint,history,with,allowed,size,0;test,public,void,test,zero,max,size,history,throws,exception,checkpoint,stats,history,history,new,checkpoint,stats,history,0,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,0,assert,false,history,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,0,checkpoint,stats,history,snapshot,history,create,snapshot,int,counter,0,for,abstract,checkpoint,stats,ignored,snapshot,get,checkpoints,counter,assert,equals,0,counter,assert,not,null,snapshot,get,checkpoint,by,id,0
CheckpointStatsHistoryTest -> @Test 	public void testZeroMaxSizeHistory() throws Exception;1516295283;Tests a checkpoint history with allowed size 0.;@Test_	public void testZeroMaxSizeHistory() throws Exception {_		CheckpointStatsHistory history = new CheckpointStatsHistory(0)___		history.addInProgressCheckpoint(createPendingCheckpointStats(0))__		assertFalse(history.replacePendingCheckpointById(createCompletedCheckpointStats(0)))___		CheckpointStatsHistory snapshot = history.createSnapshot()___		int counter = 0__		for (AbstractCheckpointStats ignored : snapshot.getCheckpoints()) {_			counter++__		}__		assertEquals(0, counter)__		assertNotNull(snapshot.getCheckpointById(0))__	};tests,a,checkpoint,history,with,allowed,size,0;test,public,void,test,zero,max,size,history,throws,exception,checkpoint,stats,history,history,new,checkpoint,stats,history,0,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,0,assert,false,history,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,0,checkpoint,stats,history,snapshot,history,create,snapshot,int,counter,0,for,abstract,checkpoint,stats,ignored,snapshot,get,checkpoints,counter,assert,equals,0,counter,assert,not,null,snapshot,get,checkpoint,by,id,0
CheckpointStatsHistoryTest -> @Test 	public void testSizeOneHistory() throws Exception;1484038132;Tests a checkpoint history with allowed size 1.;@Test_	public void testSizeOneHistory() throws Exception {_		CheckpointStatsHistory history = new CheckpointStatsHistory(1)___		history.addInProgressCheckpoint(createPendingCheckpointStats(0))__		history.addInProgressCheckpoint(createPendingCheckpointStats(1))___		assertFalse(history.replacePendingCheckpointById(createCompletedCheckpointStats(0)))__		assertTrue(history.replacePendingCheckpointById(createCompletedCheckpointStats(1)))___		CheckpointStatsHistory snapshot = history.createSnapshot()___		for (AbstractCheckpointStats stats : snapshot.getCheckpoints()) {_			assertEquals(1, stats.getCheckpointId())__			assertTrue(stats.getStatus().isCompleted())__		}_	};tests,a,checkpoint,history,with,allowed,size,1;test,public,void,test,size,one,history,throws,exception,checkpoint,stats,history,history,new,checkpoint,stats,history,1,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,0,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,1,assert,false,history,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,0,assert,true,history,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,1,checkpoint,stats,history,snapshot,history,create,snapshot,for,abstract,checkpoint,stats,stats,snapshot,get,checkpoints,assert,equals,1,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed
CheckpointStatsHistoryTest -> @Test 	public void testSizeOneHistory() throws Exception;1485790402;Tests a checkpoint history with allowed size 1.;@Test_	public void testSizeOneHistory() throws Exception {_		CheckpointStatsHistory history = new CheckpointStatsHistory(1)___		history.addInProgressCheckpoint(createPendingCheckpointStats(0))__		history.addInProgressCheckpoint(createPendingCheckpointStats(1))___		assertFalse(history.replacePendingCheckpointById(createCompletedCheckpointStats(0)))__		assertTrue(history.replacePendingCheckpointById(createCompletedCheckpointStats(1)))___		CheckpointStatsHistory snapshot = history.createSnapshot()___		for (AbstractCheckpointStats stats : snapshot.getCheckpoints()) {_			assertEquals(1, stats.getCheckpointId())__			assertTrue(stats.getStatus().isCompleted())__		}_	};tests,a,checkpoint,history,with,allowed,size,1;test,public,void,test,size,one,history,throws,exception,checkpoint,stats,history,history,new,checkpoint,stats,history,1,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,0,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,1,assert,false,history,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,0,assert,true,history,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,1,checkpoint,stats,history,snapshot,history,create,snapshot,for,abstract,checkpoint,stats,stats,snapshot,get,checkpoints,assert,equals,1,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed
CheckpointStatsHistoryTest -> @Test 	public void testSizeOneHistory() throws Exception;1487762095;Tests a checkpoint history with allowed size 1.;@Test_	public void testSizeOneHistory() throws Exception {_		CheckpointStatsHistory history = new CheckpointStatsHistory(1)___		history.addInProgressCheckpoint(createPendingCheckpointStats(0))__		history.addInProgressCheckpoint(createPendingCheckpointStats(1))___		assertFalse(history.replacePendingCheckpointById(createCompletedCheckpointStats(0)))__		assertTrue(history.replacePendingCheckpointById(createCompletedCheckpointStats(1)))___		CheckpointStatsHistory snapshot = history.createSnapshot()___		for (AbstractCheckpointStats stats : snapshot.getCheckpoints()) {_			assertEquals(1, stats.getCheckpointId())__			assertTrue(stats.getStatus().isCompleted())__		}_	};tests,a,checkpoint,history,with,allowed,size,1;test,public,void,test,size,one,history,throws,exception,checkpoint,stats,history,history,new,checkpoint,stats,history,1,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,0,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,1,assert,false,history,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,0,assert,true,history,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,1,checkpoint,stats,history,snapshot,history,create,snapshot,for,abstract,checkpoint,stats,stats,snapshot,get,checkpoints,assert,equals,1,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed
CheckpointStatsHistoryTest -> @Test 	public void testSizeOneHistory() throws Exception;1487871589;Tests a checkpoint history with allowed size 1.;@Test_	public void testSizeOneHistory() throws Exception {_		CheckpointStatsHistory history = new CheckpointStatsHistory(1)___		history.addInProgressCheckpoint(createPendingCheckpointStats(0))__		history.addInProgressCheckpoint(createPendingCheckpointStats(1))___		assertFalse(history.replacePendingCheckpointById(createCompletedCheckpointStats(0)))__		assertTrue(history.replacePendingCheckpointById(createCompletedCheckpointStats(1)))___		CheckpointStatsHistory snapshot = history.createSnapshot()___		for (AbstractCheckpointStats stats : snapshot.getCheckpoints()) {_			assertEquals(1, stats.getCheckpointId())__			assertTrue(stats.getStatus().isCompleted())__		}_	};tests,a,checkpoint,history,with,allowed,size,1;test,public,void,test,size,one,history,throws,exception,checkpoint,stats,history,history,new,checkpoint,stats,history,1,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,0,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,1,assert,false,history,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,0,assert,true,history,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,1,checkpoint,stats,history,snapshot,history,create,snapshot,for,abstract,checkpoint,stats,stats,snapshot,get,checkpoints,assert,equals,1,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed
CheckpointStatsHistoryTest -> @Test 	public void testSizeOneHistory() throws Exception;1516295283;Tests a checkpoint history with allowed size 1.;@Test_	public void testSizeOneHistory() throws Exception {_		CheckpointStatsHistory history = new CheckpointStatsHistory(1)___		history.addInProgressCheckpoint(createPendingCheckpointStats(0))__		history.addInProgressCheckpoint(createPendingCheckpointStats(1))___		assertFalse(history.replacePendingCheckpointById(createCompletedCheckpointStats(0)))__		assertTrue(history.replacePendingCheckpointById(createCompletedCheckpointStats(1)))___		CheckpointStatsHistory snapshot = history.createSnapshot()___		for (AbstractCheckpointStats stats : snapshot.getCheckpoints()) {_			assertEquals(1, stats.getCheckpointId())__			assertTrue(stats.getStatus().isCompleted())__		}_	};tests,a,checkpoint,history,with,allowed,size,1;test,public,void,test,size,one,history,throws,exception,checkpoint,stats,history,history,new,checkpoint,stats,history,1,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,0,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,1,assert,false,history,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,0,assert,true,history,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,1,checkpoint,stats,history,snapshot,history,create,snapshot,for,abstract,checkpoint,stats,stats,snapshot,get,checkpoints,assert,equals,1,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed
CheckpointStatsHistoryTest -> @Test 	public void testCheckpointHistory() throws Exception;1484038132;Tests the checkpoint history with multiple checkpoints.;@Test_	public void testCheckpointHistory() throws Exception {_		CheckpointStatsHistory history = new CheckpointStatsHistory(3)___		history.addInProgressCheckpoint(createPendingCheckpointStats(0))___		CheckpointStatsHistory snapshot = history.createSnapshot()__		for (AbstractCheckpointStats stats : snapshot.getCheckpoints()) {_			assertEquals(0, stats.getCheckpointId())__			assertTrue(stats.getStatus().isInProgress())__		}__		history.addInProgressCheckpoint(createPendingCheckpointStats(1))__		history.addInProgressCheckpoint(createPendingCheckpointStats(2))__		history.addInProgressCheckpoint(createPendingCheckpointStats(3))___		snapshot = history.createSnapshot()___		_		Iterator<AbstractCheckpointStats> it = snapshot.getCheckpoints().iterator()__		for (int i = 3_ i > 0_ i--) {_			assertTrue(it.hasNext())__			AbstractCheckpointStats stats = it.next()__			assertEquals(i, stats.getCheckpointId())__			assertTrue(stats.getStatus().isInProgress())__		}_		assertFalse(it.hasNext())___		_		history.replacePendingCheckpointById(createFailedCheckpointStats(1))__		history.replacePendingCheckpointById(createCompletedCheckpointStats(3))__		history.replacePendingCheckpointById(createFailedCheckpointStats(2))___		snapshot = history.createSnapshot()__		it = snapshot.getCheckpoints().iterator()___		assertTrue(it.hasNext())__		AbstractCheckpointStats stats = it.next()__		assertEquals(3, stats.getCheckpointId())__		assertNotNull(snapshot.getCheckpointById(3))__		assertTrue(stats.getStatus().isCompleted())__		assertTrue(snapshot.getCheckpointById(3).getStatus().isCompleted())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(2, stats.getCheckpointId())__		assertNotNull(snapshot.getCheckpointById(2))__		assertTrue(stats.getStatus().isFailed())__		assertTrue(snapshot.getCheckpointById(2).getStatus().isFailed())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(1, stats.getCheckpointId())__		assertNotNull(snapshot.getCheckpointById(1))__		assertTrue(stats.getStatus().isFailed())__		assertTrue(snapshot.getCheckpointById(1).getStatus().isFailed())___		assertFalse(it.hasNext())__	};tests,the,checkpoint,history,with,multiple,checkpoints;test,public,void,test,checkpoint,history,throws,exception,checkpoint,stats,history,history,new,checkpoint,stats,history,3,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,0,checkpoint,stats,history,snapshot,history,create,snapshot,for,abstract,checkpoint,stats,stats,snapshot,get,checkpoints,assert,equals,0,stats,get,checkpoint,id,assert,true,stats,get,status,is,in,progress,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,1,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,2,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,3,snapshot,history,create,snapshot,iterator,abstract,checkpoint,stats,it,snapshot,get,checkpoints,iterator,for,int,i,3,i,0,i,assert,true,it,has,next,abstract,checkpoint,stats,stats,it,next,assert,equals,i,stats,get,checkpoint,id,assert,true,stats,get,status,is,in,progress,assert,false,it,has,next,history,replace,pending,checkpoint,by,id,create,failed,checkpoint,stats,1,history,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,3,history,replace,pending,checkpoint,by,id,create,failed,checkpoint,stats,2,snapshot,history,create,snapshot,it,snapshot,get,checkpoints,iterator,assert,true,it,has,next,abstract,checkpoint,stats,stats,it,next,assert,equals,3,stats,get,checkpoint,id,assert,not,null,snapshot,get,checkpoint,by,id,3,assert,true,stats,get,status,is,completed,assert,true,snapshot,get,checkpoint,by,id,3,get,status,is,completed,assert,true,it,has,next,stats,it,next,assert,equals,2,stats,get,checkpoint,id,assert,not,null,snapshot,get,checkpoint,by,id,2,assert,true,stats,get,status,is,failed,assert,true,snapshot,get,checkpoint,by,id,2,get,status,is,failed,assert,true,it,has,next,stats,it,next,assert,equals,1,stats,get,checkpoint,id,assert,not,null,snapshot,get,checkpoint,by,id,1,assert,true,stats,get,status,is,failed,assert,true,snapshot,get,checkpoint,by,id,1,get,status,is,failed,assert,false,it,has,next
CheckpointStatsHistoryTest -> @Test 	public void testCheckpointHistory() throws Exception;1485790402;Tests the checkpoint history with multiple checkpoints.;@Test_	public void testCheckpointHistory() throws Exception {_		CheckpointStatsHistory history = new CheckpointStatsHistory(3)___		history.addInProgressCheckpoint(createPendingCheckpointStats(0))___		CheckpointStatsHistory snapshot = history.createSnapshot()__		for (AbstractCheckpointStats stats : snapshot.getCheckpoints()) {_			assertEquals(0, stats.getCheckpointId())__			assertTrue(stats.getStatus().isInProgress())__		}__		history.addInProgressCheckpoint(createPendingCheckpointStats(1))__		history.addInProgressCheckpoint(createPendingCheckpointStats(2))__		history.addInProgressCheckpoint(createPendingCheckpointStats(3))___		snapshot = history.createSnapshot()___		_		Iterator<AbstractCheckpointStats> it = snapshot.getCheckpoints().iterator()__		for (int i = 3_ i > 0_ i--) {_			assertTrue(it.hasNext())__			AbstractCheckpointStats stats = it.next()__			assertEquals(i, stats.getCheckpointId())__			assertTrue(stats.getStatus().isInProgress())__		}_		assertFalse(it.hasNext())___		_		history.replacePendingCheckpointById(createFailedCheckpointStats(1))__		history.replacePendingCheckpointById(createCompletedCheckpointStats(3))__		history.replacePendingCheckpointById(createFailedCheckpointStats(2))___		snapshot = history.createSnapshot()__		it = snapshot.getCheckpoints().iterator()___		assertTrue(it.hasNext())__		AbstractCheckpointStats stats = it.next()__		assertEquals(3, stats.getCheckpointId())__		assertNotNull(snapshot.getCheckpointById(3))__		assertTrue(stats.getStatus().isCompleted())__		assertTrue(snapshot.getCheckpointById(3).getStatus().isCompleted())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(2, stats.getCheckpointId())__		assertNotNull(snapshot.getCheckpointById(2))__		assertTrue(stats.getStatus().isFailed())__		assertTrue(snapshot.getCheckpointById(2).getStatus().isFailed())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(1, stats.getCheckpointId())__		assertNotNull(snapshot.getCheckpointById(1))__		assertTrue(stats.getStatus().isFailed())__		assertTrue(snapshot.getCheckpointById(1).getStatus().isFailed())___		assertFalse(it.hasNext())__	};tests,the,checkpoint,history,with,multiple,checkpoints;test,public,void,test,checkpoint,history,throws,exception,checkpoint,stats,history,history,new,checkpoint,stats,history,3,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,0,checkpoint,stats,history,snapshot,history,create,snapshot,for,abstract,checkpoint,stats,stats,snapshot,get,checkpoints,assert,equals,0,stats,get,checkpoint,id,assert,true,stats,get,status,is,in,progress,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,1,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,2,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,3,snapshot,history,create,snapshot,iterator,abstract,checkpoint,stats,it,snapshot,get,checkpoints,iterator,for,int,i,3,i,0,i,assert,true,it,has,next,abstract,checkpoint,stats,stats,it,next,assert,equals,i,stats,get,checkpoint,id,assert,true,stats,get,status,is,in,progress,assert,false,it,has,next,history,replace,pending,checkpoint,by,id,create,failed,checkpoint,stats,1,history,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,3,history,replace,pending,checkpoint,by,id,create,failed,checkpoint,stats,2,snapshot,history,create,snapshot,it,snapshot,get,checkpoints,iterator,assert,true,it,has,next,abstract,checkpoint,stats,stats,it,next,assert,equals,3,stats,get,checkpoint,id,assert,not,null,snapshot,get,checkpoint,by,id,3,assert,true,stats,get,status,is,completed,assert,true,snapshot,get,checkpoint,by,id,3,get,status,is,completed,assert,true,it,has,next,stats,it,next,assert,equals,2,stats,get,checkpoint,id,assert,not,null,snapshot,get,checkpoint,by,id,2,assert,true,stats,get,status,is,failed,assert,true,snapshot,get,checkpoint,by,id,2,get,status,is,failed,assert,true,it,has,next,stats,it,next,assert,equals,1,stats,get,checkpoint,id,assert,not,null,snapshot,get,checkpoint,by,id,1,assert,true,stats,get,status,is,failed,assert,true,snapshot,get,checkpoint,by,id,1,get,status,is,failed,assert,false,it,has,next
CheckpointStatsHistoryTest -> @Test 	public void testCheckpointHistory() throws Exception;1487762095;Tests the checkpoint history with multiple checkpoints.;@Test_	public void testCheckpointHistory() throws Exception {_		CheckpointStatsHistory history = new CheckpointStatsHistory(3)___		history.addInProgressCheckpoint(createPendingCheckpointStats(0))___		CheckpointStatsHistory snapshot = history.createSnapshot()__		for (AbstractCheckpointStats stats : snapshot.getCheckpoints()) {_			assertEquals(0, stats.getCheckpointId())__			assertTrue(stats.getStatus().isInProgress())__		}__		history.addInProgressCheckpoint(createPendingCheckpointStats(1))__		history.addInProgressCheckpoint(createPendingCheckpointStats(2))__		history.addInProgressCheckpoint(createPendingCheckpointStats(3))___		snapshot = history.createSnapshot()___		_		Iterator<AbstractCheckpointStats> it = snapshot.getCheckpoints().iterator()__		for (int i = 3_ i > 0_ i--) {_			assertTrue(it.hasNext())__			AbstractCheckpointStats stats = it.next()__			assertEquals(i, stats.getCheckpointId())__			assertTrue(stats.getStatus().isInProgress())__		}_		assertFalse(it.hasNext())___		_		history.replacePendingCheckpointById(createFailedCheckpointStats(1))__		history.replacePendingCheckpointById(createCompletedCheckpointStats(3))__		history.replacePendingCheckpointById(createFailedCheckpointStats(2))___		snapshot = history.createSnapshot()__		it = snapshot.getCheckpoints().iterator()___		assertTrue(it.hasNext())__		AbstractCheckpointStats stats = it.next()__		assertEquals(3, stats.getCheckpointId())__		assertNotNull(snapshot.getCheckpointById(3))__		assertTrue(stats.getStatus().isCompleted())__		assertTrue(snapshot.getCheckpointById(3).getStatus().isCompleted())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(2, stats.getCheckpointId())__		assertNotNull(snapshot.getCheckpointById(2))__		assertTrue(stats.getStatus().isFailed())__		assertTrue(snapshot.getCheckpointById(2).getStatus().isFailed())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(1, stats.getCheckpointId())__		assertNotNull(snapshot.getCheckpointById(1))__		assertTrue(stats.getStatus().isFailed())__		assertTrue(snapshot.getCheckpointById(1).getStatus().isFailed())___		assertFalse(it.hasNext())__	};tests,the,checkpoint,history,with,multiple,checkpoints;test,public,void,test,checkpoint,history,throws,exception,checkpoint,stats,history,history,new,checkpoint,stats,history,3,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,0,checkpoint,stats,history,snapshot,history,create,snapshot,for,abstract,checkpoint,stats,stats,snapshot,get,checkpoints,assert,equals,0,stats,get,checkpoint,id,assert,true,stats,get,status,is,in,progress,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,1,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,2,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,3,snapshot,history,create,snapshot,iterator,abstract,checkpoint,stats,it,snapshot,get,checkpoints,iterator,for,int,i,3,i,0,i,assert,true,it,has,next,abstract,checkpoint,stats,stats,it,next,assert,equals,i,stats,get,checkpoint,id,assert,true,stats,get,status,is,in,progress,assert,false,it,has,next,history,replace,pending,checkpoint,by,id,create,failed,checkpoint,stats,1,history,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,3,history,replace,pending,checkpoint,by,id,create,failed,checkpoint,stats,2,snapshot,history,create,snapshot,it,snapshot,get,checkpoints,iterator,assert,true,it,has,next,abstract,checkpoint,stats,stats,it,next,assert,equals,3,stats,get,checkpoint,id,assert,not,null,snapshot,get,checkpoint,by,id,3,assert,true,stats,get,status,is,completed,assert,true,snapshot,get,checkpoint,by,id,3,get,status,is,completed,assert,true,it,has,next,stats,it,next,assert,equals,2,stats,get,checkpoint,id,assert,not,null,snapshot,get,checkpoint,by,id,2,assert,true,stats,get,status,is,failed,assert,true,snapshot,get,checkpoint,by,id,2,get,status,is,failed,assert,true,it,has,next,stats,it,next,assert,equals,1,stats,get,checkpoint,id,assert,not,null,snapshot,get,checkpoint,by,id,1,assert,true,stats,get,status,is,failed,assert,true,snapshot,get,checkpoint,by,id,1,get,status,is,failed,assert,false,it,has,next
CheckpointStatsHistoryTest -> @Test 	public void testCheckpointHistory() throws Exception;1487871589;Tests the checkpoint history with multiple checkpoints.;@Test_	public void testCheckpointHistory() throws Exception {_		CheckpointStatsHistory history = new CheckpointStatsHistory(3)___		history.addInProgressCheckpoint(createPendingCheckpointStats(0))___		CheckpointStatsHistory snapshot = history.createSnapshot()__		for (AbstractCheckpointStats stats : snapshot.getCheckpoints()) {_			assertEquals(0, stats.getCheckpointId())__			assertTrue(stats.getStatus().isInProgress())__		}__		history.addInProgressCheckpoint(createPendingCheckpointStats(1))__		history.addInProgressCheckpoint(createPendingCheckpointStats(2))__		history.addInProgressCheckpoint(createPendingCheckpointStats(3))___		snapshot = history.createSnapshot()___		_		Iterator<AbstractCheckpointStats> it = snapshot.getCheckpoints().iterator()__		for (int i = 3_ i > 0_ i--) {_			assertTrue(it.hasNext())__			AbstractCheckpointStats stats = it.next()__			assertEquals(i, stats.getCheckpointId())__			assertTrue(stats.getStatus().isInProgress())__		}_		assertFalse(it.hasNext())___		_		history.replacePendingCheckpointById(createFailedCheckpointStats(1))__		history.replacePendingCheckpointById(createCompletedCheckpointStats(3))__		history.replacePendingCheckpointById(createFailedCheckpointStats(2))___		snapshot = history.createSnapshot()__		it = snapshot.getCheckpoints().iterator()___		assertTrue(it.hasNext())__		AbstractCheckpointStats stats = it.next()__		assertEquals(3, stats.getCheckpointId())__		assertNotNull(snapshot.getCheckpointById(3))__		assertTrue(stats.getStatus().isCompleted())__		assertTrue(snapshot.getCheckpointById(3).getStatus().isCompleted())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(2, stats.getCheckpointId())__		assertNotNull(snapshot.getCheckpointById(2))__		assertTrue(stats.getStatus().isFailed())__		assertTrue(snapshot.getCheckpointById(2).getStatus().isFailed())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(1, stats.getCheckpointId())__		assertNotNull(snapshot.getCheckpointById(1))__		assertTrue(stats.getStatus().isFailed())__		assertTrue(snapshot.getCheckpointById(1).getStatus().isFailed())___		assertFalse(it.hasNext())__	};tests,the,checkpoint,history,with,multiple,checkpoints;test,public,void,test,checkpoint,history,throws,exception,checkpoint,stats,history,history,new,checkpoint,stats,history,3,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,0,checkpoint,stats,history,snapshot,history,create,snapshot,for,abstract,checkpoint,stats,stats,snapshot,get,checkpoints,assert,equals,0,stats,get,checkpoint,id,assert,true,stats,get,status,is,in,progress,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,1,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,2,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,3,snapshot,history,create,snapshot,iterator,abstract,checkpoint,stats,it,snapshot,get,checkpoints,iterator,for,int,i,3,i,0,i,assert,true,it,has,next,abstract,checkpoint,stats,stats,it,next,assert,equals,i,stats,get,checkpoint,id,assert,true,stats,get,status,is,in,progress,assert,false,it,has,next,history,replace,pending,checkpoint,by,id,create,failed,checkpoint,stats,1,history,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,3,history,replace,pending,checkpoint,by,id,create,failed,checkpoint,stats,2,snapshot,history,create,snapshot,it,snapshot,get,checkpoints,iterator,assert,true,it,has,next,abstract,checkpoint,stats,stats,it,next,assert,equals,3,stats,get,checkpoint,id,assert,not,null,snapshot,get,checkpoint,by,id,3,assert,true,stats,get,status,is,completed,assert,true,snapshot,get,checkpoint,by,id,3,get,status,is,completed,assert,true,it,has,next,stats,it,next,assert,equals,2,stats,get,checkpoint,id,assert,not,null,snapshot,get,checkpoint,by,id,2,assert,true,stats,get,status,is,failed,assert,true,snapshot,get,checkpoint,by,id,2,get,status,is,failed,assert,true,it,has,next,stats,it,next,assert,equals,1,stats,get,checkpoint,id,assert,not,null,snapshot,get,checkpoint,by,id,1,assert,true,stats,get,status,is,failed,assert,true,snapshot,get,checkpoint,by,id,1,get,status,is,failed,assert,false,it,has,next
CheckpointStatsHistoryTest -> @Test 	public void testCheckpointHistory() throws Exception;1516295283;Tests the checkpoint history with multiple checkpoints.;@Test_	public void testCheckpointHistory() throws Exception {_		CheckpointStatsHistory history = new CheckpointStatsHistory(3)___		history.addInProgressCheckpoint(createPendingCheckpointStats(0))___		CheckpointStatsHistory snapshot = history.createSnapshot()__		for (AbstractCheckpointStats stats : snapshot.getCheckpoints()) {_			assertEquals(0, stats.getCheckpointId())__			assertTrue(stats.getStatus().isInProgress())__		}__		history.addInProgressCheckpoint(createPendingCheckpointStats(1))__		history.addInProgressCheckpoint(createPendingCheckpointStats(2))__		history.addInProgressCheckpoint(createPendingCheckpointStats(3))___		snapshot = history.createSnapshot()___		_		Iterator<AbstractCheckpointStats> it = snapshot.getCheckpoints().iterator()__		for (int i = 3_ i > 0_ i--) {_			assertTrue(it.hasNext())__			AbstractCheckpointStats stats = it.next()__			assertEquals(i, stats.getCheckpointId())__			assertTrue(stats.getStatus().isInProgress())__		}_		assertFalse(it.hasNext())___		_		history.replacePendingCheckpointById(createFailedCheckpointStats(1))__		history.replacePendingCheckpointById(createCompletedCheckpointStats(3))__		history.replacePendingCheckpointById(createFailedCheckpointStats(2))___		snapshot = history.createSnapshot()__		it = snapshot.getCheckpoints().iterator()___		assertTrue(it.hasNext())__		AbstractCheckpointStats stats = it.next()__		assertEquals(3, stats.getCheckpointId())__		assertNotNull(snapshot.getCheckpointById(3))__		assertTrue(stats.getStatus().isCompleted())__		assertTrue(snapshot.getCheckpointById(3).getStatus().isCompleted())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(2, stats.getCheckpointId())__		assertNotNull(snapshot.getCheckpointById(2))__		assertTrue(stats.getStatus().isFailed())__		assertTrue(snapshot.getCheckpointById(2).getStatus().isFailed())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(1, stats.getCheckpointId())__		assertNotNull(snapshot.getCheckpointById(1))__		assertTrue(stats.getStatus().isFailed())__		assertTrue(snapshot.getCheckpointById(1).getStatus().isFailed())___		assertFalse(it.hasNext())__	};tests,the,checkpoint,history,with,multiple,checkpoints;test,public,void,test,checkpoint,history,throws,exception,checkpoint,stats,history,history,new,checkpoint,stats,history,3,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,0,checkpoint,stats,history,snapshot,history,create,snapshot,for,abstract,checkpoint,stats,stats,snapshot,get,checkpoints,assert,equals,0,stats,get,checkpoint,id,assert,true,stats,get,status,is,in,progress,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,1,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,2,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,3,snapshot,history,create,snapshot,iterator,abstract,checkpoint,stats,it,snapshot,get,checkpoints,iterator,for,int,i,3,i,0,i,assert,true,it,has,next,abstract,checkpoint,stats,stats,it,next,assert,equals,i,stats,get,checkpoint,id,assert,true,stats,get,status,is,in,progress,assert,false,it,has,next,history,replace,pending,checkpoint,by,id,create,failed,checkpoint,stats,1,history,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,3,history,replace,pending,checkpoint,by,id,create,failed,checkpoint,stats,2,snapshot,history,create,snapshot,it,snapshot,get,checkpoints,iterator,assert,true,it,has,next,abstract,checkpoint,stats,stats,it,next,assert,equals,3,stats,get,checkpoint,id,assert,not,null,snapshot,get,checkpoint,by,id,3,assert,true,stats,get,status,is,completed,assert,true,snapshot,get,checkpoint,by,id,3,get,status,is,completed,assert,true,it,has,next,stats,it,next,assert,equals,2,stats,get,checkpoint,id,assert,not,null,snapshot,get,checkpoint,by,id,2,assert,true,stats,get,status,is,failed,assert,true,snapshot,get,checkpoint,by,id,2,get,status,is,failed,assert,true,it,has,next,stats,it,next,assert,equals,1,stats,get,checkpoint,id,assert,not,null,snapshot,get,checkpoint,by,id,1,assert,true,stats,get,status,is,failed,assert,true,snapshot,get,checkpoint,by,id,1,get,status,is,failed,assert,false,it,has,next
CheckpointStatsHistoryTest -> @Test 	public void testModifySnapshot() throws Exception;1484038132;Tests that a snapshot cannot be modified or copied.;@Test_	public void testModifySnapshot() throws Exception {_		CheckpointStatsHistory history = new CheckpointStatsHistory(3)___		history.addInProgressCheckpoint(createPendingCheckpointStats(0))__		history.addInProgressCheckpoint(createPendingCheckpointStats(1))__		history.addInProgressCheckpoint(createPendingCheckpointStats(2))___		CheckpointStatsHistory snapshot = history.createSnapshot()___		try {_			snapshot.addInProgressCheckpoint(createPendingCheckpointStats(4))__			fail("Did not throw expected Exception")__		} catch (UnsupportedOperationException ignored) {_		}__		try {_			snapshot.replacePendingCheckpointById(createCompletedCheckpointStats(2))__			fail("Did not throw expected Exception")__		} catch (UnsupportedOperationException ignored) {_		}__		try {_			snapshot.createSnapshot()__			fail("Did not throw expected Exception")__		} catch (UnsupportedOperationException ignored) {_		}_	};tests,that,a,snapshot,cannot,be,modified,or,copied;test,public,void,test,modify,snapshot,throws,exception,checkpoint,stats,history,history,new,checkpoint,stats,history,3,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,0,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,1,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,2,checkpoint,stats,history,snapshot,history,create,snapshot,try,snapshot,add,in,progress,checkpoint,create,pending,checkpoint,stats,4,fail,did,not,throw,expected,exception,catch,unsupported,operation,exception,ignored,try,snapshot,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,2,fail,did,not,throw,expected,exception,catch,unsupported,operation,exception,ignored,try,snapshot,create,snapshot,fail,did,not,throw,expected,exception,catch,unsupported,operation,exception,ignored
CheckpointStatsHistoryTest -> @Test 	public void testModifySnapshot() throws Exception;1485790402;Tests that a snapshot cannot be modified or copied.;@Test_	public void testModifySnapshot() throws Exception {_		CheckpointStatsHistory history = new CheckpointStatsHistory(3)___		history.addInProgressCheckpoint(createPendingCheckpointStats(0))__		history.addInProgressCheckpoint(createPendingCheckpointStats(1))__		history.addInProgressCheckpoint(createPendingCheckpointStats(2))___		CheckpointStatsHistory snapshot = history.createSnapshot()___		try {_			snapshot.addInProgressCheckpoint(createPendingCheckpointStats(4))__			fail("Did not throw expected Exception")__		} catch (UnsupportedOperationException ignored) {_		}__		try {_			snapshot.replacePendingCheckpointById(createCompletedCheckpointStats(2))__			fail("Did not throw expected Exception")__		} catch (UnsupportedOperationException ignored) {_		}__		try {_			snapshot.createSnapshot()__			fail("Did not throw expected Exception")__		} catch (UnsupportedOperationException ignored) {_		}_	};tests,that,a,snapshot,cannot,be,modified,or,copied;test,public,void,test,modify,snapshot,throws,exception,checkpoint,stats,history,history,new,checkpoint,stats,history,3,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,0,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,1,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,2,checkpoint,stats,history,snapshot,history,create,snapshot,try,snapshot,add,in,progress,checkpoint,create,pending,checkpoint,stats,4,fail,did,not,throw,expected,exception,catch,unsupported,operation,exception,ignored,try,snapshot,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,2,fail,did,not,throw,expected,exception,catch,unsupported,operation,exception,ignored,try,snapshot,create,snapshot,fail,did,not,throw,expected,exception,catch,unsupported,operation,exception,ignored
CheckpointStatsHistoryTest -> @Test 	public void testModifySnapshot() throws Exception;1487762095;Tests that a snapshot cannot be modified or copied.;@Test_	public void testModifySnapshot() throws Exception {_		CheckpointStatsHistory history = new CheckpointStatsHistory(3)___		history.addInProgressCheckpoint(createPendingCheckpointStats(0))__		history.addInProgressCheckpoint(createPendingCheckpointStats(1))__		history.addInProgressCheckpoint(createPendingCheckpointStats(2))___		CheckpointStatsHistory snapshot = history.createSnapshot()___		try {_			snapshot.addInProgressCheckpoint(createPendingCheckpointStats(4))__			fail("Did not throw expected Exception")__		} catch (UnsupportedOperationException ignored) {_		}__		try {_			snapshot.replacePendingCheckpointById(createCompletedCheckpointStats(2))__			fail("Did not throw expected Exception")__		} catch (UnsupportedOperationException ignored) {_		}__		try {_			snapshot.createSnapshot()__			fail("Did not throw expected Exception")__		} catch (UnsupportedOperationException ignored) {_		}_	};tests,that,a,snapshot,cannot,be,modified,or,copied;test,public,void,test,modify,snapshot,throws,exception,checkpoint,stats,history,history,new,checkpoint,stats,history,3,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,0,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,1,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,2,checkpoint,stats,history,snapshot,history,create,snapshot,try,snapshot,add,in,progress,checkpoint,create,pending,checkpoint,stats,4,fail,did,not,throw,expected,exception,catch,unsupported,operation,exception,ignored,try,snapshot,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,2,fail,did,not,throw,expected,exception,catch,unsupported,operation,exception,ignored,try,snapshot,create,snapshot,fail,did,not,throw,expected,exception,catch,unsupported,operation,exception,ignored
CheckpointStatsHistoryTest -> @Test 	public void testModifySnapshot() throws Exception;1487871589;Tests that a snapshot cannot be modified or copied.;@Test_	public void testModifySnapshot() throws Exception {_		CheckpointStatsHistory history = new CheckpointStatsHistory(3)___		history.addInProgressCheckpoint(createPendingCheckpointStats(0))__		history.addInProgressCheckpoint(createPendingCheckpointStats(1))__		history.addInProgressCheckpoint(createPendingCheckpointStats(2))___		CheckpointStatsHistory snapshot = history.createSnapshot()___		try {_			snapshot.addInProgressCheckpoint(createPendingCheckpointStats(4))__			fail("Did not throw expected Exception")__		} catch (UnsupportedOperationException ignored) {_		}__		try {_			snapshot.replacePendingCheckpointById(createCompletedCheckpointStats(2))__			fail("Did not throw expected Exception")__		} catch (UnsupportedOperationException ignored) {_		}__		try {_			snapshot.createSnapshot()__			fail("Did not throw expected Exception")__		} catch (UnsupportedOperationException ignored) {_		}_	};tests,that,a,snapshot,cannot,be,modified,or,copied;test,public,void,test,modify,snapshot,throws,exception,checkpoint,stats,history,history,new,checkpoint,stats,history,3,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,0,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,1,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,2,checkpoint,stats,history,snapshot,history,create,snapshot,try,snapshot,add,in,progress,checkpoint,create,pending,checkpoint,stats,4,fail,did,not,throw,expected,exception,catch,unsupported,operation,exception,ignored,try,snapshot,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,2,fail,did,not,throw,expected,exception,catch,unsupported,operation,exception,ignored,try,snapshot,create,snapshot,fail,did,not,throw,expected,exception,catch,unsupported,operation,exception,ignored
CheckpointStatsHistoryTest -> @Test 	public void testModifySnapshot() throws Exception;1516295283;Tests that a snapshot cannot be modified or copied.;@Test_	public void testModifySnapshot() throws Exception {_		CheckpointStatsHistory history = new CheckpointStatsHistory(3)___		history.addInProgressCheckpoint(createPendingCheckpointStats(0))__		history.addInProgressCheckpoint(createPendingCheckpointStats(1))__		history.addInProgressCheckpoint(createPendingCheckpointStats(2))___		CheckpointStatsHistory snapshot = history.createSnapshot()___		try {_			snapshot.addInProgressCheckpoint(createPendingCheckpointStats(4))__			fail("Did not throw expected Exception")__		} catch (UnsupportedOperationException ignored) {_		}__		try {_			snapshot.replacePendingCheckpointById(createCompletedCheckpointStats(2))__			fail("Did not throw expected Exception")__		} catch (UnsupportedOperationException ignored) {_		}__		try {_			snapshot.createSnapshot()__			fail("Did not throw expected Exception")__		} catch (UnsupportedOperationException ignored) {_		}_	};tests,that,a,snapshot,cannot,be,modified,or,copied;test,public,void,test,modify,snapshot,throws,exception,checkpoint,stats,history,history,new,checkpoint,stats,history,3,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,0,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,1,history,add,in,progress,checkpoint,create,pending,checkpoint,stats,2,checkpoint,stats,history,snapshot,history,create,snapshot,try,snapshot,add,in,progress,checkpoint,create,pending,checkpoint,stats,4,fail,did,not,throw,expected,exception,catch,unsupported,operation,exception,ignored,try,snapshot,replace,pending,checkpoint,by,id,create,completed,checkpoint,stats,2,fail,did,not,throw,expected,exception,catch,unsupported,operation,exception,ignored,try,snapshot,create,snapshot,fail,did,not,throw,expected,exception,catch,unsupported,operation,exception,ignored
