commented;modifiers;parameterAmount;loc;comment;code
false;public;0;20;;@Test public void testEntrypointClusterConfigurationParsing() throws FlinkParseException {     final String configDir = "/foo/bar".     final int restPort = 1234.     final String key = "key".     final String value = "value".     final String arg1 = "arg1".     final String arg2 = "arg2".     final String[] args = { "--configDir", configDir, "--executionMode", "cluster", "--host", "localhost", "-r", String.valueOf(restPort), String.format("-D%s=%s", key, value), arg1, arg2 }.     final EntrypointClusterConfiguration clusterConfiguration = commandLineParser.parse(args).     assertThat(clusterConfiguration.getConfigDir(), is(equalTo(configDir))).     assertThat(clusterConfiguration.getRestPort(), is(equalTo(restPort))).     final Properties dynamicProperties = clusterConfiguration.getDynamicProperties().     assertThat(dynamicProperties, hasEntry(key, value)).     assertThat(clusterConfiguration.getArgs(), arrayContaining(arg1, arg2)). }
false;public;0;10;;@Test public void testOnlyRequiredArguments() throws FlinkParseException {     final String configDir = "/foo/bar".     final String[] args = { "--configDir", configDir }.     final EntrypointClusterConfiguration clusterConfiguration = commandLineParser.parse(args).     assertThat(clusterConfiguration.getConfigDir(), is(equalTo(configDir))).     assertThat(clusterConfiguration.getRestPort(), is(equalTo(-1))). }
false;public;0;6;;@Test(expected = FlinkParseException.class) public void testMissingRequiredArgument() throws FlinkParseException {     final String[] args = {}.     commandLineParser.parse(args). }
