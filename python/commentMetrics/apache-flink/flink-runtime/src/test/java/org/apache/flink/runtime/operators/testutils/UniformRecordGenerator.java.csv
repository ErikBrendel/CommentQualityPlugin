commented;modifiers;parameterAmount;loc;comment;code
false;public;1;32;;@Override public Record next(Record reuse) {     if (!repeatKey) {         if (valCnt >= numVals + startVal) {             return null.         }         key.setValue(keyCnt++).         value.setValue(valCnt).         if (keyCnt == numKeys + startKey) {             keyCnt = startKey.             valCnt++.         }     } else {         if (keyCnt >= numKeys + startKey) {             return null.         }         key.setValue(keyCnt).         value.setValue(valCnt++).         if (valCnt == numVals + startVal) {             valCnt = startVal.             keyCnt++.         }     }     reuse.setField(0, this.key).     reuse.setField(1, this.value).     reuse.updateBinaryRepresenation().     return reuse. }
false;public;0;6;;@Override public Record next() {     key = new IntValue().     value = new IntValue().     return next(new Record(2)). }
