# id;timestamp;commentText;codeText;commentWords;codeWords
CheckpointStatsTrackerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testMetricsAreUpdated() throws Exception;1490214056;Tests that the metrics are updated properly. We had a bug that required new stats_snapshots in order to update the metrics.;@Test_	@SuppressWarnings("unchecked")_	public void testMetricsAreUpdated() throws Exception {_		final Map<String, Gauge<?>> registeredGauges = new HashMap<>()___		MetricGroup metricGroup = new MetricGroup() {_			@Override_			public Counter counter(int name) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public Counter counter(String name) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <C extends Counter> C counter(int name, C counter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <C extends Counter> C counter(String name, C counter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <T, G extends Gauge<T>> G gauge(int name, G gauge) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <T, G extends Gauge<T>> G gauge(String name, G gauge) {_				registeredGauges.put(name, gauge)__				return gauge__			}__			@Override_			public <H extends Histogram> H histogram(String name, H histogram) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <H extends Histogram> H histogram(int name, H histogram) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <M extends Meter> M meter(String name, M meter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <M extends Meter> M meter(int name, M meter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public MetricGroup addGroup(int name) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public MetricGroup addGroup(String name) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public String[] getScopeComponents() {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public Map<String, String> getAllVariables() {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public String getMetricIdentifier(String metricName) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public String getMetricIdentifier(String metricName, CharacterFilter filter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}_		}___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		CheckpointStatsTracker stats = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(JobSnapshottingSettings.class),_			metricGroup)___		_		assertEquals(9, registeredGauges.size())___		_		Gauge<Long> numCheckpoints = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_CHECKPOINTS_METRIC)__		Gauge<Integer> numInProgressCheckpoints = (Gauge<Integer>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_IN_PROGRESS_CHECKPOINTS_METRIC)__		Gauge<Long> numCompletedCheckpoints = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_COMPLETED_CHECKPOINTS_METRIC)__		Gauge<Long> numFailedCheckpoints = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_FAILED_CHECKPOINTS_METRIC)__		Gauge<Long> latestRestoreTimestamp = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_RESTORED_CHECKPOINT_TIMESTAMP_METRIC)__		Gauge<Long> latestCompletedSize = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_SIZE_METRIC)__		Gauge<Long> latestCompletedDuration = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_DURATION_METRIC)__		Gauge<Long> latestCompletedAlignmentBuffered = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_ALIGNMENT_BUFFERED_METRIC)__		Gauge<String> latestCompletedExternalPath = (Gauge<String>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_EXTERNAL_PATH_METRIC)___		assertEquals(Long.valueOf(0), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numFailedCheckpoints.getValue())__		assertEquals(Long.valueOf(-1), latestRestoreTimestamp.getValue())__		assertEquals(Long.valueOf(-1), latestCompletedSize.getValue())__		assertEquals(Long.valueOf(-1), latestCompletedDuration.getValue())__		assertEquals(Long.valueOf(-1), latestCompletedAlignmentBuffered.getValue())__		assertEquals("n/a", latestCompletedExternalPath.getValue())___		PendingCheckpointStats pending = stats.reportPendingCheckpoint(_			0,_			0,_			CheckpointProperties.forStandardCheckpoint())___		_		assertEquals(Long.valueOf(1), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(1), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numFailedCheckpoints.getValue())___		long ackTimestamp = 11231230L__		long stateSize = 12381238L__		long ignored = 0__		long alignmenetBuffered = 182812L__		String externalPath = "myexternalpath"___		SubtaskStateStats subtaskStats = new SubtaskStateStats(_			0,_			ackTimestamp,_			stateSize,_			ignored,_			ignored,_			alignmenetBuffered,_			ignored)___		assertTrue(pending.reportSubtaskStats(jobVertex.getJobVertexId(), subtaskStats))___		pending.reportCompletedCheckpoint(externalPath)___		_		assertEquals(Long.valueOf(1), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numFailedCheckpoints.getValue())__		assertEquals(Long.valueOf(-1), latestRestoreTimestamp.getValue())__		assertEquals(Long.valueOf(stateSize), latestCompletedSize.getValue())__		assertEquals(Long.valueOf(ackTimestamp), latestCompletedDuration.getValue())__		assertEquals(Long.valueOf(alignmenetBuffered), latestCompletedAlignmentBuffered.getValue())__		assertEquals(externalPath, latestCompletedExternalPath.getValue())___		_		PendingCheckpointStats nextPending = stats.reportPendingCheckpoint(_			1,_			11,_			CheckpointProperties.forStandardCheckpoint())___		long failureTimestamp = 1230123L__		nextPending.reportFailedCheckpoint(failureTimestamp, null)___		_		assertEquals(Long.valueOf(2), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numFailedCheckpoints.getValue())_ __		_		long restoreTimestamp = 183419283L__		RestoredCheckpointStats restored = new RestoredCheckpointStats(_			1,_			CheckpointProperties.forStandardCheckpoint(),_			restoreTimestamp,_			null)__		stats.reportRestoredCheckpoint(restored)___		assertEquals(Long.valueOf(2), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numFailedCheckpoints.getValue())___		assertEquals(Long.valueOf(restoreTimestamp), latestRestoreTimestamp.getValue())__	};tests,that,the,metrics,are,updated,properly,we,had,a,bug,that,required,new,stats,snapshots,in,order,to,update,the,metrics;test,suppress,warnings,unchecked,public,void,test,metrics,are,updated,throws,exception,final,map,string,gauge,registered,gauges,new,hash,map,metric,group,metric,group,new,metric,group,override,public,counter,counter,int,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,counter,counter,string,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,c,extends,counter,c,counter,int,name,c,counter,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,c,extends,counter,c,counter,string,name,c,counter,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,t,g,extends,gauge,t,g,gauge,int,name,g,gauge,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,t,g,extends,gauge,t,g,gauge,string,name,g,gauge,registered,gauges,put,name,gauge,return,gauge,override,public,h,extends,histogram,h,histogram,string,name,h,histogram,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,h,extends,histogram,h,histogram,int,name,h,histogram,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,m,extends,meter,m,meter,string,name,m,meter,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,m,extends,meter,m,meter,int,name,m,meter,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,metric,group,add,group,int,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,metric,group,add,group,string,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,string,get,scope,components,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,map,string,string,get,all,variables,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,string,get,metric,identifier,string,metric,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,string,get,metric,identifier,string,metric,name,character,filter,filter,throw,new,unsupported,operation,exception,not,expected,in,this,test,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,checkpoint,stats,tracker,stats,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,job,snapshotting,settings,class,metric,group,assert,equals,9,registered,gauges,size,gauge,long,num,checkpoints,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,integer,num,in,progress,checkpoints,gauge,integer,registered,gauges,get,checkpoint,stats,tracker,gauge,long,num,completed,checkpoints,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,num,failed,checkpoints,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,restore,timestamp,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,completed,size,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,completed,duration,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,completed,alignment,buffered,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,string,latest,completed,external,path,gauge,string,registered,gauges,get,checkpoint,stats,tracker,assert,equals,long,value,of,0,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,0,num,completed,checkpoints,get,value,assert,equals,long,value,of,0,num,failed,checkpoints,get,value,assert,equals,long,value,of,1,latest,restore,timestamp,get,value,assert,equals,long,value,of,1,latest,completed,size,get,value,assert,equals,long,value,of,1,latest,completed,duration,get,value,assert,equals,long,value,of,1,latest,completed,alignment,buffered,get,value,assert,equals,n,a,latest,completed,external,path,get,value,pending,checkpoint,stats,pending,stats,report,pending,checkpoint,0,0,checkpoint,properties,for,standard,checkpoint,assert,equals,long,value,of,1,num,checkpoints,get,value,assert,equals,integer,value,of,1,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,0,num,completed,checkpoints,get,value,assert,equals,long,value,of,0,num,failed,checkpoints,get,value,long,ack,timestamp,11231230l,long,state,size,12381238l,long,ignored,0,long,alignmenet,buffered,182812l,string,external,path,myexternalpath,subtask,state,stats,subtask,stats,new,subtask,state,stats,0,ack,timestamp,state,size,ignored,ignored,alignmenet,buffered,ignored,assert,true,pending,report,subtask,stats,job,vertex,get,job,vertex,id,subtask,stats,pending,report,completed,checkpoint,external,path,assert,equals,long,value,of,1,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,1,num,completed,checkpoints,get,value,assert,equals,long,value,of,0,num,failed,checkpoints,get,value,assert,equals,long,value,of,1,latest,restore,timestamp,get,value,assert,equals,long,value,of,state,size,latest,completed,size,get,value,assert,equals,long,value,of,ack,timestamp,latest,completed,duration,get,value,assert,equals,long,value,of,alignmenet,buffered,latest,completed,alignment,buffered,get,value,assert,equals,external,path,latest,completed,external,path,get,value,pending,checkpoint,stats,next,pending,stats,report,pending,checkpoint,1,11,checkpoint,properties,for,standard,checkpoint,long,failure,timestamp,1230123l,next,pending,report,failed,checkpoint,failure,timestamp,null,assert,equals,long,value,of,2,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,1,num,completed,checkpoints,get,value,assert,equals,long,value,of,1,num,failed,checkpoints,get,value,long,restore,timestamp,183419283l,restored,checkpoint,stats,restored,new,restored,checkpoint,stats,1,checkpoint,properties,for,standard,checkpoint,restore,timestamp,null,stats,report,restored,checkpoint,restored,assert,equals,long,value,of,2,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,1,num,completed,checkpoints,get,value,assert,equals,long,value,of,1,num,failed,checkpoints,get,value,assert,equals,long,value,of,restore,timestamp,latest,restore,timestamp,get,value
CheckpointStatsTrackerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testMetricsAreUpdated() throws Exception;1492678790;Tests that the metrics are updated properly. We had a bug that required new stats_snapshots in order to update the metrics.;@Test_	@SuppressWarnings("unchecked")_	public void testMetricsAreUpdated() throws Exception {_		final Map<String, Gauge<?>> registeredGauges = new HashMap<>()___		MetricGroup metricGroup = new MetricGroup() {_			@Override_			public Counter counter(int name) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public Counter counter(String name) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <C extends Counter> C counter(int name, C counter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <C extends Counter> C counter(String name, C counter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <T, G extends Gauge<T>> G gauge(int name, G gauge) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <T, G extends Gauge<T>> G gauge(String name, G gauge) {_				registeredGauges.put(name, gauge)__				return gauge__			}__			@Override_			public <H extends Histogram> H histogram(String name, H histogram) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <H extends Histogram> H histogram(int name, H histogram) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <M extends Meter> M meter(String name, M meter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <M extends Meter> M meter(int name, M meter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public MetricGroup addGroup(int name) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public MetricGroup addGroup(String name) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public String[] getScopeComponents() {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public Map<String, String> getAllVariables() {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public String getMetricIdentifier(String metricName) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public String getMetricIdentifier(String metricName, CharacterFilter filter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}_		}___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		CheckpointStatsTracker stats = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(JobCheckpointingSettings.class),_			metricGroup)___		_		assertEquals(9, registeredGauges.size())___		_		Gauge<Long> numCheckpoints = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_CHECKPOINTS_METRIC)__		Gauge<Integer> numInProgressCheckpoints = (Gauge<Integer>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_IN_PROGRESS_CHECKPOINTS_METRIC)__		Gauge<Long> numCompletedCheckpoints = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_COMPLETED_CHECKPOINTS_METRIC)__		Gauge<Long> numFailedCheckpoints = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_FAILED_CHECKPOINTS_METRIC)__		Gauge<Long> latestRestoreTimestamp = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_RESTORED_CHECKPOINT_TIMESTAMP_METRIC)__		Gauge<Long> latestCompletedSize = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_SIZE_METRIC)__		Gauge<Long> latestCompletedDuration = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_DURATION_METRIC)__		Gauge<Long> latestCompletedAlignmentBuffered = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_ALIGNMENT_BUFFERED_METRIC)__		Gauge<String> latestCompletedExternalPath = (Gauge<String>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_EXTERNAL_PATH_METRIC)___		assertEquals(Long.valueOf(0), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numFailedCheckpoints.getValue())__		assertEquals(Long.valueOf(-1), latestRestoreTimestamp.getValue())__		assertEquals(Long.valueOf(-1), latestCompletedSize.getValue())__		assertEquals(Long.valueOf(-1), latestCompletedDuration.getValue())__		assertEquals(Long.valueOf(-1), latestCompletedAlignmentBuffered.getValue())__		assertEquals("n/a", latestCompletedExternalPath.getValue())___		PendingCheckpointStats pending = stats.reportPendingCheckpoint(_			0,_			0,_			CheckpointProperties.forStandardCheckpoint())___		_		assertEquals(Long.valueOf(1), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(1), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numFailedCheckpoints.getValue())___		long ackTimestamp = 11231230L__		long stateSize = 12381238L__		long ignored = 0__		long alignmenetBuffered = 182812L__		String externalPath = "myexternalpath"___		SubtaskStateStats subtaskStats = new SubtaskStateStats(_			0,_			ackTimestamp,_			stateSize,_			ignored,_			ignored,_			alignmenetBuffered,_			ignored)___		assertTrue(pending.reportSubtaskStats(jobVertex.getJobVertexId(), subtaskStats))___		pending.reportCompletedCheckpoint(externalPath)___		_		assertEquals(Long.valueOf(1), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numFailedCheckpoints.getValue())__		assertEquals(Long.valueOf(-1), latestRestoreTimestamp.getValue())__		assertEquals(Long.valueOf(stateSize), latestCompletedSize.getValue())__		assertEquals(Long.valueOf(ackTimestamp), latestCompletedDuration.getValue())__		assertEquals(Long.valueOf(alignmenetBuffered), latestCompletedAlignmentBuffered.getValue())__		assertEquals(externalPath, latestCompletedExternalPath.getValue())___		_		PendingCheckpointStats nextPending = stats.reportPendingCheckpoint(_			1,_			11,_			CheckpointProperties.forStandardCheckpoint())___		long failureTimestamp = 1230123L__		nextPending.reportFailedCheckpoint(failureTimestamp, null)___		_		assertEquals(Long.valueOf(2), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numFailedCheckpoints.getValue())_ __		_		long restoreTimestamp = 183419283L__		RestoredCheckpointStats restored = new RestoredCheckpointStats(_			1,_			CheckpointProperties.forStandardCheckpoint(),_			restoreTimestamp,_			null)__		stats.reportRestoredCheckpoint(restored)___		assertEquals(Long.valueOf(2), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numFailedCheckpoints.getValue())___		assertEquals(Long.valueOf(restoreTimestamp), latestRestoreTimestamp.getValue())__	};tests,that,the,metrics,are,updated,properly,we,had,a,bug,that,required,new,stats,snapshots,in,order,to,update,the,metrics;test,suppress,warnings,unchecked,public,void,test,metrics,are,updated,throws,exception,final,map,string,gauge,registered,gauges,new,hash,map,metric,group,metric,group,new,metric,group,override,public,counter,counter,int,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,counter,counter,string,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,c,extends,counter,c,counter,int,name,c,counter,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,c,extends,counter,c,counter,string,name,c,counter,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,t,g,extends,gauge,t,g,gauge,int,name,g,gauge,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,t,g,extends,gauge,t,g,gauge,string,name,g,gauge,registered,gauges,put,name,gauge,return,gauge,override,public,h,extends,histogram,h,histogram,string,name,h,histogram,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,h,extends,histogram,h,histogram,int,name,h,histogram,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,m,extends,meter,m,meter,string,name,m,meter,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,m,extends,meter,m,meter,int,name,m,meter,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,metric,group,add,group,int,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,metric,group,add,group,string,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,string,get,scope,components,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,map,string,string,get,all,variables,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,string,get,metric,identifier,string,metric,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,string,get,metric,identifier,string,metric,name,character,filter,filter,throw,new,unsupported,operation,exception,not,expected,in,this,test,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,checkpoint,stats,tracker,stats,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,job,checkpointing,settings,class,metric,group,assert,equals,9,registered,gauges,size,gauge,long,num,checkpoints,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,integer,num,in,progress,checkpoints,gauge,integer,registered,gauges,get,checkpoint,stats,tracker,gauge,long,num,completed,checkpoints,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,num,failed,checkpoints,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,restore,timestamp,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,completed,size,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,completed,duration,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,completed,alignment,buffered,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,string,latest,completed,external,path,gauge,string,registered,gauges,get,checkpoint,stats,tracker,assert,equals,long,value,of,0,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,0,num,completed,checkpoints,get,value,assert,equals,long,value,of,0,num,failed,checkpoints,get,value,assert,equals,long,value,of,1,latest,restore,timestamp,get,value,assert,equals,long,value,of,1,latest,completed,size,get,value,assert,equals,long,value,of,1,latest,completed,duration,get,value,assert,equals,long,value,of,1,latest,completed,alignment,buffered,get,value,assert,equals,n,a,latest,completed,external,path,get,value,pending,checkpoint,stats,pending,stats,report,pending,checkpoint,0,0,checkpoint,properties,for,standard,checkpoint,assert,equals,long,value,of,1,num,checkpoints,get,value,assert,equals,integer,value,of,1,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,0,num,completed,checkpoints,get,value,assert,equals,long,value,of,0,num,failed,checkpoints,get,value,long,ack,timestamp,11231230l,long,state,size,12381238l,long,ignored,0,long,alignmenet,buffered,182812l,string,external,path,myexternalpath,subtask,state,stats,subtask,stats,new,subtask,state,stats,0,ack,timestamp,state,size,ignored,ignored,alignmenet,buffered,ignored,assert,true,pending,report,subtask,stats,job,vertex,get,job,vertex,id,subtask,stats,pending,report,completed,checkpoint,external,path,assert,equals,long,value,of,1,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,1,num,completed,checkpoints,get,value,assert,equals,long,value,of,0,num,failed,checkpoints,get,value,assert,equals,long,value,of,1,latest,restore,timestamp,get,value,assert,equals,long,value,of,state,size,latest,completed,size,get,value,assert,equals,long,value,of,ack,timestamp,latest,completed,duration,get,value,assert,equals,long,value,of,alignmenet,buffered,latest,completed,alignment,buffered,get,value,assert,equals,external,path,latest,completed,external,path,get,value,pending,checkpoint,stats,next,pending,stats,report,pending,checkpoint,1,11,checkpoint,properties,for,standard,checkpoint,long,failure,timestamp,1230123l,next,pending,report,failed,checkpoint,failure,timestamp,null,assert,equals,long,value,of,2,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,1,num,completed,checkpoints,get,value,assert,equals,long,value,of,1,num,failed,checkpoints,get,value,long,restore,timestamp,183419283l,restored,checkpoint,stats,restored,new,restored,checkpoint,stats,1,checkpoint,properties,for,standard,checkpoint,restore,timestamp,null,stats,report,restored,checkpoint,restored,assert,equals,long,value,of,2,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,1,num,completed,checkpoints,get,value,assert,equals,long,value,of,1,num,failed,checkpoints,get,value,assert,equals,long,value,of,restore,timestamp,latest,restore,timestamp,get,value
CheckpointStatsTrackerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testMetricsAreUpdated() throws Exception;1506590912;Tests that the metrics are updated properly. We had a bug that required new stats_snapshots in order to update the metrics.;@Test_	@SuppressWarnings("unchecked")_	public void testMetricsAreUpdated() throws Exception {_		final Map<String, Gauge<?>> registeredGauges = new HashMap<>()___		MetricGroup metricGroup = new MetricGroup() {_			@Override_			public Counter counter(int name) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public Counter counter(String name) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <C extends Counter> C counter(int name, C counter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <C extends Counter> C counter(String name, C counter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <T, G extends Gauge<T>> G gauge(int name, G gauge) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <T, G extends Gauge<T>> G gauge(String name, G gauge) {_				registeredGauges.put(name, gauge)__				return gauge__			}__			@Override_			public <H extends Histogram> H histogram(String name, H histogram) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <H extends Histogram> H histogram(int name, H histogram) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <M extends Meter> M meter(String name, M meter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <M extends Meter> M meter(int name, M meter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public MetricGroup addGroup(int name) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public MetricGroup addGroup(String name) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public String[] getScopeComponents() {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public Map<String, String> getAllVariables() {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public String getMetricIdentifier(String metricName) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public String getMetricIdentifier(String metricName, CharacterFilter filter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}_		}___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		CheckpointStatsTracker stats = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(JobCheckpointingSettings.class),_			metricGroup)___		_		assertEquals(9, registeredGauges.size())___		_		Gauge<Long> numCheckpoints = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_CHECKPOINTS_METRIC)__		Gauge<Integer> numInProgressCheckpoints = (Gauge<Integer>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_IN_PROGRESS_CHECKPOINTS_METRIC)__		Gauge<Long> numCompletedCheckpoints = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_COMPLETED_CHECKPOINTS_METRIC)__		Gauge<Long> numFailedCheckpoints = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_FAILED_CHECKPOINTS_METRIC)__		Gauge<Long> latestRestoreTimestamp = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_RESTORED_CHECKPOINT_TIMESTAMP_METRIC)__		Gauge<Long> latestCompletedSize = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_SIZE_METRIC)__		Gauge<Long> latestCompletedDuration = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_DURATION_METRIC)__		Gauge<Long> latestCompletedAlignmentBuffered = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_ALIGNMENT_BUFFERED_METRIC)__		Gauge<String> latestCompletedExternalPath = (Gauge<String>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_EXTERNAL_PATH_METRIC)___		assertEquals(Long.valueOf(0), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numFailedCheckpoints.getValue())__		assertEquals(Long.valueOf(-1), latestRestoreTimestamp.getValue())__		assertEquals(Long.valueOf(-1), latestCompletedSize.getValue())__		assertEquals(Long.valueOf(-1), latestCompletedDuration.getValue())__		assertEquals(Long.valueOf(-1), latestCompletedAlignmentBuffered.getValue())__		assertEquals("n/a", latestCompletedExternalPath.getValue())___		PendingCheckpointStats pending = stats.reportPendingCheckpoint(_			0,_			0,_			CheckpointProperties.forStandardCheckpoint())___		_		assertEquals(Long.valueOf(1), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(1), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numFailedCheckpoints.getValue())___		long ackTimestamp = 11231230L__		long stateSize = 12381238L__		long ignored = 0__		long alignmenetBuffered = 182812L__		String externalPath = "myexternalpath"___		SubtaskStateStats subtaskStats = new SubtaskStateStats(_			0,_			ackTimestamp,_			stateSize,_			ignored,_			ignored,_			alignmenetBuffered,_			ignored)___		assertTrue(pending.reportSubtaskStats(jobVertex.getJobVertexId(), subtaskStats))___		pending.reportCompletedCheckpoint(externalPath)___		_		assertEquals(Long.valueOf(1), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numFailedCheckpoints.getValue())__		assertEquals(Long.valueOf(-1), latestRestoreTimestamp.getValue())__		assertEquals(Long.valueOf(stateSize), latestCompletedSize.getValue())__		assertEquals(Long.valueOf(ackTimestamp), latestCompletedDuration.getValue())__		assertEquals(Long.valueOf(alignmenetBuffered), latestCompletedAlignmentBuffered.getValue())__		assertEquals(externalPath, latestCompletedExternalPath.getValue())___		_		PendingCheckpointStats nextPending = stats.reportPendingCheckpoint(_			1,_			11,_			CheckpointProperties.forStandardCheckpoint())___		long failureTimestamp = 1230123L__		nextPending.reportFailedCheckpoint(failureTimestamp, null)___		_		assertEquals(Long.valueOf(2), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numFailedCheckpoints.getValue())_ __		_		long restoreTimestamp = 183419283L__		RestoredCheckpointStats restored = new RestoredCheckpointStats(_			1,_			CheckpointProperties.forStandardCheckpoint(),_			restoreTimestamp,_			null)__		stats.reportRestoredCheckpoint(restored)___		assertEquals(Long.valueOf(2), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numFailedCheckpoints.getValue())___		assertEquals(Long.valueOf(restoreTimestamp), latestRestoreTimestamp.getValue())___		_		PendingCheckpointStats thirdPending = stats.reportPendingCheckpoint(_			2,_			5000,_			CheckpointProperties.forStandardCheckpoint())___		thirdPending.reportSubtaskStats(jobVertex.getJobVertexId(), subtaskStats)__		thirdPending.reportCompletedCheckpoint(null)___		_		assertEquals("n/a", latestCompletedExternalPath.getValue())__	};tests,that,the,metrics,are,updated,properly,we,had,a,bug,that,required,new,stats,snapshots,in,order,to,update,the,metrics;test,suppress,warnings,unchecked,public,void,test,metrics,are,updated,throws,exception,final,map,string,gauge,registered,gauges,new,hash,map,metric,group,metric,group,new,metric,group,override,public,counter,counter,int,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,counter,counter,string,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,c,extends,counter,c,counter,int,name,c,counter,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,c,extends,counter,c,counter,string,name,c,counter,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,t,g,extends,gauge,t,g,gauge,int,name,g,gauge,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,t,g,extends,gauge,t,g,gauge,string,name,g,gauge,registered,gauges,put,name,gauge,return,gauge,override,public,h,extends,histogram,h,histogram,string,name,h,histogram,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,h,extends,histogram,h,histogram,int,name,h,histogram,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,m,extends,meter,m,meter,string,name,m,meter,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,m,extends,meter,m,meter,int,name,m,meter,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,metric,group,add,group,int,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,metric,group,add,group,string,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,string,get,scope,components,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,map,string,string,get,all,variables,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,string,get,metric,identifier,string,metric,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,string,get,metric,identifier,string,metric,name,character,filter,filter,throw,new,unsupported,operation,exception,not,expected,in,this,test,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,checkpoint,stats,tracker,stats,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,job,checkpointing,settings,class,metric,group,assert,equals,9,registered,gauges,size,gauge,long,num,checkpoints,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,integer,num,in,progress,checkpoints,gauge,integer,registered,gauges,get,checkpoint,stats,tracker,gauge,long,num,completed,checkpoints,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,num,failed,checkpoints,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,restore,timestamp,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,completed,size,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,completed,duration,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,completed,alignment,buffered,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,string,latest,completed,external,path,gauge,string,registered,gauges,get,checkpoint,stats,tracker,assert,equals,long,value,of,0,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,0,num,completed,checkpoints,get,value,assert,equals,long,value,of,0,num,failed,checkpoints,get,value,assert,equals,long,value,of,1,latest,restore,timestamp,get,value,assert,equals,long,value,of,1,latest,completed,size,get,value,assert,equals,long,value,of,1,latest,completed,duration,get,value,assert,equals,long,value,of,1,latest,completed,alignment,buffered,get,value,assert,equals,n,a,latest,completed,external,path,get,value,pending,checkpoint,stats,pending,stats,report,pending,checkpoint,0,0,checkpoint,properties,for,standard,checkpoint,assert,equals,long,value,of,1,num,checkpoints,get,value,assert,equals,integer,value,of,1,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,0,num,completed,checkpoints,get,value,assert,equals,long,value,of,0,num,failed,checkpoints,get,value,long,ack,timestamp,11231230l,long,state,size,12381238l,long,ignored,0,long,alignmenet,buffered,182812l,string,external,path,myexternalpath,subtask,state,stats,subtask,stats,new,subtask,state,stats,0,ack,timestamp,state,size,ignored,ignored,alignmenet,buffered,ignored,assert,true,pending,report,subtask,stats,job,vertex,get,job,vertex,id,subtask,stats,pending,report,completed,checkpoint,external,path,assert,equals,long,value,of,1,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,1,num,completed,checkpoints,get,value,assert,equals,long,value,of,0,num,failed,checkpoints,get,value,assert,equals,long,value,of,1,latest,restore,timestamp,get,value,assert,equals,long,value,of,state,size,latest,completed,size,get,value,assert,equals,long,value,of,ack,timestamp,latest,completed,duration,get,value,assert,equals,long,value,of,alignmenet,buffered,latest,completed,alignment,buffered,get,value,assert,equals,external,path,latest,completed,external,path,get,value,pending,checkpoint,stats,next,pending,stats,report,pending,checkpoint,1,11,checkpoint,properties,for,standard,checkpoint,long,failure,timestamp,1230123l,next,pending,report,failed,checkpoint,failure,timestamp,null,assert,equals,long,value,of,2,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,1,num,completed,checkpoints,get,value,assert,equals,long,value,of,1,num,failed,checkpoints,get,value,long,restore,timestamp,183419283l,restored,checkpoint,stats,restored,new,restored,checkpoint,stats,1,checkpoint,properties,for,standard,checkpoint,restore,timestamp,null,stats,report,restored,checkpoint,restored,assert,equals,long,value,of,2,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,1,num,completed,checkpoints,get,value,assert,equals,long,value,of,1,num,failed,checkpoints,get,value,assert,equals,long,value,of,restore,timestamp,latest,restore,timestamp,get,value,pending,checkpoint,stats,third,pending,stats,report,pending,checkpoint,2,5000,checkpoint,properties,for,standard,checkpoint,third,pending,report,subtask,stats,job,vertex,get,job,vertex,id,subtask,stats,third,pending,report,completed,checkpoint,null,assert,equals,n,a,latest,completed,external,path,get,value
CheckpointStatsTrackerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testMetricsAreUpdated() throws Exception;1506618381;Tests that the metrics are updated properly. We had a bug that required new stats_snapshots in order to update the metrics.;@Test_	@SuppressWarnings("unchecked")_	public void testMetricsAreUpdated() throws Exception {_		final Map<String, Gauge<?>> registeredGauges = new HashMap<>()___		MetricGroup metricGroup = new MetricGroup() {_			@Override_			public Counter counter(int name) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public Counter counter(String name) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <C extends Counter> C counter(int name, C counter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <C extends Counter> C counter(String name, C counter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <T, G extends Gauge<T>> G gauge(int name, G gauge) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <T, G extends Gauge<T>> G gauge(String name, G gauge) {_				registeredGauges.put(name, gauge)__				return gauge__			}__			@Override_			public <H extends Histogram> H histogram(String name, H histogram) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <H extends Histogram> H histogram(int name, H histogram) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <M extends Meter> M meter(String name, M meter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <M extends Meter> M meter(int name, M meter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public MetricGroup addGroup(int name) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public MetricGroup addGroup(String name) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public String[] getScopeComponents() {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public Map<String, String> getAllVariables() {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public String getMetricIdentifier(String metricName) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public String getMetricIdentifier(String metricName, CharacterFilter filter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}_		}___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		CheckpointStatsTracker stats = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			metricGroup)___		_		assertEquals(9, registeredGauges.size())___		_		Gauge<Long> numCheckpoints = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_CHECKPOINTS_METRIC)__		Gauge<Integer> numInProgressCheckpoints = (Gauge<Integer>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_IN_PROGRESS_CHECKPOINTS_METRIC)__		Gauge<Long> numCompletedCheckpoints = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_COMPLETED_CHECKPOINTS_METRIC)__		Gauge<Long> numFailedCheckpoints = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_FAILED_CHECKPOINTS_METRIC)__		Gauge<Long> latestRestoreTimestamp = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_RESTORED_CHECKPOINT_TIMESTAMP_METRIC)__		Gauge<Long> latestCompletedSize = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_SIZE_METRIC)__		Gauge<Long> latestCompletedDuration = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_DURATION_METRIC)__		Gauge<Long> latestCompletedAlignmentBuffered = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_ALIGNMENT_BUFFERED_METRIC)__		Gauge<String> latestCompletedExternalPath = (Gauge<String>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_EXTERNAL_PATH_METRIC)___		assertEquals(Long.valueOf(0), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numFailedCheckpoints.getValue())__		assertEquals(Long.valueOf(-1), latestRestoreTimestamp.getValue())__		assertEquals(Long.valueOf(-1), latestCompletedSize.getValue())__		assertEquals(Long.valueOf(-1), latestCompletedDuration.getValue())__		assertEquals(Long.valueOf(-1), latestCompletedAlignmentBuffered.getValue())__		assertEquals("n/a", latestCompletedExternalPath.getValue())___		PendingCheckpointStats pending = stats.reportPendingCheckpoint(_			0,_			0,_			CheckpointProperties.forStandardCheckpoint())___		_		assertEquals(Long.valueOf(1), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(1), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numFailedCheckpoints.getValue())___		long ackTimestamp = 11231230L__		long stateSize = 12381238L__		long ignored = 0__		long alignmenetBuffered = 182812L__		String externalPath = "myexternalpath"___		SubtaskStateStats subtaskStats = new SubtaskStateStats(_			0,_			ackTimestamp,_			stateSize,_			ignored,_			ignored,_			alignmenetBuffered,_			ignored)___		assertTrue(pending.reportSubtaskStats(jobVertex.getJobVertexId(), subtaskStats))___		pending.reportCompletedCheckpoint(externalPath)___		_		assertEquals(Long.valueOf(1), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numFailedCheckpoints.getValue())__		assertEquals(Long.valueOf(-1), latestRestoreTimestamp.getValue())__		assertEquals(Long.valueOf(stateSize), latestCompletedSize.getValue())__		assertEquals(Long.valueOf(ackTimestamp), latestCompletedDuration.getValue())__		assertEquals(Long.valueOf(alignmenetBuffered), latestCompletedAlignmentBuffered.getValue())__		assertEquals(externalPath, latestCompletedExternalPath.getValue())___		_		PendingCheckpointStats nextPending = stats.reportPendingCheckpoint(_			1,_			11,_			CheckpointProperties.forStandardCheckpoint())___		long failureTimestamp = 1230123L__		nextPending.reportFailedCheckpoint(failureTimestamp, null)___		_		assertEquals(Long.valueOf(2), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numFailedCheckpoints.getValue())_ __		_		long restoreTimestamp = 183419283L__		RestoredCheckpointStats restored = new RestoredCheckpointStats(_			1,_			CheckpointProperties.forStandardCheckpoint(),_			restoreTimestamp,_			null)__		stats.reportRestoredCheckpoint(restored)___		assertEquals(Long.valueOf(2), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numFailedCheckpoints.getValue())___		assertEquals(Long.valueOf(restoreTimestamp), latestRestoreTimestamp.getValue())___		_		PendingCheckpointStats thirdPending = stats.reportPendingCheckpoint(_			2,_			5000,_			CheckpointProperties.forStandardCheckpoint())___		thirdPending.reportSubtaskStats(jobVertex.getJobVertexId(), subtaskStats)__		thirdPending.reportCompletedCheckpoint(null)___		_		assertEquals("n/a", latestCompletedExternalPath.getValue())__	};tests,that,the,metrics,are,updated,properly,we,had,a,bug,that,required,new,stats,snapshots,in,order,to,update,the,metrics;test,suppress,warnings,unchecked,public,void,test,metrics,are,updated,throws,exception,final,map,string,gauge,registered,gauges,new,hash,map,metric,group,metric,group,new,metric,group,override,public,counter,counter,int,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,counter,counter,string,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,c,extends,counter,c,counter,int,name,c,counter,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,c,extends,counter,c,counter,string,name,c,counter,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,t,g,extends,gauge,t,g,gauge,int,name,g,gauge,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,t,g,extends,gauge,t,g,gauge,string,name,g,gauge,registered,gauges,put,name,gauge,return,gauge,override,public,h,extends,histogram,h,histogram,string,name,h,histogram,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,h,extends,histogram,h,histogram,int,name,h,histogram,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,m,extends,meter,m,meter,string,name,m,meter,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,m,extends,meter,m,meter,int,name,m,meter,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,metric,group,add,group,int,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,metric,group,add,group,string,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,string,get,scope,components,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,map,string,string,get,all,variables,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,string,get,metric,identifier,string,metric,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,string,get,metric,identifier,string,metric,name,character,filter,filter,throw,new,unsupported,operation,exception,not,expected,in,this,test,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,checkpoint,stats,tracker,stats,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,metric,group,assert,equals,9,registered,gauges,size,gauge,long,num,checkpoints,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,integer,num,in,progress,checkpoints,gauge,integer,registered,gauges,get,checkpoint,stats,tracker,gauge,long,num,completed,checkpoints,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,num,failed,checkpoints,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,restore,timestamp,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,completed,size,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,completed,duration,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,completed,alignment,buffered,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,string,latest,completed,external,path,gauge,string,registered,gauges,get,checkpoint,stats,tracker,assert,equals,long,value,of,0,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,0,num,completed,checkpoints,get,value,assert,equals,long,value,of,0,num,failed,checkpoints,get,value,assert,equals,long,value,of,1,latest,restore,timestamp,get,value,assert,equals,long,value,of,1,latest,completed,size,get,value,assert,equals,long,value,of,1,latest,completed,duration,get,value,assert,equals,long,value,of,1,latest,completed,alignment,buffered,get,value,assert,equals,n,a,latest,completed,external,path,get,value,pending,checkpoint,stats,pending,stats,report,pending,checkpoint,0,0,checkpoint,properties,for,standard,checkpoint,assert,equals,long,value,of,1,num,checkpoints,get,value,assert,equals,integer,value,of,1,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,0,num,completed,checkpoints,get,value,assert,equals,long,value,of,0,num,failed,checkpoints,get,value,long,ack,timestamp,11231230l,long,state,size,12381238l,long,ignored,0,long,alignmenet,buffered,182812l,string,external,path,myexternalpath,subtask,state,stats,subtask,stats,new,subtask,state,stats,0,ack,timestamp,state,size,ignored,ignored,alignmenet,buffered,ignored,assert,true,pending,report,subtask,stats,job,vertex,get,job,vertex,id,subtask,stats,pending,report,completed,checkpoint,external,path,assert,equals,long,value,of,1,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,1,num,completed,checkpoints,get,value,assert,equals,long,value,of,0,num,failed,checkpoints,get,value,assert,equals,long,value,of,1,latest,restore,timestamp,get,value,assert,equals,long,value,of,state,size,latest,completed,size,get,value,assert,equals,long,value,of,ack,timestamp,latest,completed,duration,get,value,assert,equals,long,value,of,alignmenet,buffered,latest,completed,alignment,buffered,get,value,assert,equals,external,path,latest,completed,external,path,get,value,pending,checkpoint,stats,next,pending,stats,report,pending,checkpoint,1,11,checkpoint,properties,for,standard,checkpoint,long,failure,timestamp,1230123l,next,pending,report,failed,checkpoint,failure,timestamp,null,assert,equals,long,value,of,2,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,1,num,completed,checkpoints,get,value,assert,equals,long,value,of,1,num,failed,checkpoints,get,value,long,restore,timestamp,183419283l,restored,checkpoint,stats,restored,new,restored,checkpoint,stats,1,checkpoint,properties,for,standard,checkpoint,restore,timestamp,null,stats,report,restored,checkpoint,restored,assert,equals,long,value,of,2,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,1,num,completed,checkpoints,get,value,assert,equals,long,value,of,1,num,failed,checkpoints,get,value,assert,equals,long,value,of,restore,timestamp,latest,restore,timestamp,get,value,pending,checkpoint,stats,third,pending,stats,report,pending,checkpoint,2,5000,checkpoint,properties,for,standard,checkpoint,third,pending,report,subtask,stats,job,vertex,get,job,vertex,id,subtask,stats,third,pending,report,completed,checkpoint,null,assert,equals,n,a,latest,completed,external,path,get,value
CheckpointStatsTrackerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testMetricsAreUpdated() throws Exception;1513075960;Tests that the metrics are updated properly. We had a bug that required new stats_snapshots in order to update the metrics.;@Test_	@SuppressWarnings("unchecked")_	public void testMetricsAreUpdated() throws Exception {_		final Map<String, Gauge<?>> registeredGauges = new HashMap<>()___		MetricGroup metricGroup = new MetricGroup() {_			@Override_			public Counter counter(int name) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public Counter counter(String name) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <C extends Counter> C counter(int name, C counter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <C extends Counter> C counter(String name, C counter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <T, G extends Gauge<T>> G gauge(int name, G gauge) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <T, G extends Gauge<T>> G gauge(String name, G gauge) {_				registeredGauges.put(name, gauge)__				return gauge__			}__			@Override_			public <H extends Histogram> H histogram(String name, H histogram) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <H extends Histogram> H histogram(int name, H histogram) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <M extends Meter> M meter(String name, M meter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public <M extends Meter> M meter(int name, M meter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public MetricGroup addGroup(int name) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public MetricGroup addGroup(String name) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public MetricGroup addGroup(String key, String value) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public String[] getScopeComponents() {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public Map<String, String> getAllVariables() {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public String getMetricIdentifier(String metricName) {_				throw new UnsupportedOperationException("Not expected in this test")__			}__			@Override_			public String getMetricIdentifier(String metricName, CharacterFilter filter) {_				throw new UnsupportedOperationException("Not expected in this test")__			}_		}___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		CheckpointStatsTracker stats = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			metricGroup)___		_		assertEquals(9, registeredGauges.size())___		_		Gauge<Long> numCheckpoints = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_CHECKPOINTS_METRIC)__		Gauge<Integer> numInProgressCheckpoints = (Gauge<Integer>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_IN_PROGRESS_CHECKPOINTS_METRIC)__		Gauge<Long> numCompletedCheckpoints = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_COMPLETED_CHECKPOINTS_METRIC)__		Gauge<Long> numFailedCheckpoints = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_FAILED_CHECKPOINTS_METRIC)__		Gauge<Long> latestRestoreTimestamp = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_RESTORED_CHECKPOINT_TIMESTAMP_METRIC)__		Gauge<Long> latestCompletedSize = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_SIZE_METRIC)__		Gauge<Long> latestCompletedDuration = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_DURATION_METRIC)__		Gauge<Long> latestCompletedAlignmentBuffered = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_ALIGNMENT_BUFFERED_METRIC)__		Gauge<String> latestCompletedExternalPath = (Gauge<String>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_EXTERNAL_PATH_METRIC)___		assertEquals(Long.valueOf(0), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numFailedCheckpoints.getValue())__		assertEquals(Long.valueOf(-1), latestRestoreTimestamp.getValue())__		assertEquals(Long.valueOf(-1), latestCompletedSize.getValue())__		assertEquals(Long.valueOf(-1), latestCompletedDuration.getValue())__		assertEquals(Long.valueOf(-1), latestCompletedAlignmentBuffered.getValue())__		assertEquals("n/a", latestCompletedExternalPath.getValue())___		PendingCheckpointStats pending = stats.reportPendingCheckpoint(_			0,_			0,_			CheckpointProperties.forStandardCheckpoint())___		_		assertEquals(Long.valueOf(1), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(1), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numFailedCheckpoints.getValue())___		long ackTimestamp = 11231230L__		long stateSize = 12381238L__		long ignored = 0__		long alignmenetBuffered = 182812L__		String externalPath = "myexternalpath"___		SubtaskStateStats subtaskStats = new SubtaskStateStats(_			0,_			ackTimestamp,_			stateSize,_			ignored,_			ignored,_			alignmenetBuffered,_			ignored)___		assertTrue(pending.reportSubtaskStats(jobVertex.getJobVertexId(), subtaskStats))___		pending.reportCompletedCheckpoint(externalPath)___		_		assertEquals(Long.valueOf(1), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numFailedCheckpoints.getValue())__		assertEquals(Long.valueOf(-1), latestRestoreTimestamp.getValue())__		assertEquals(Long.valueOf(stateSize), latestCompletedSize.getValue())__		assertEquals(Long.valueOf(ackTimestamp), latestCompletedDuration.getValue())__		assertEquals(Long.valueOf(alignmenetBuffered), latestCompletedAlignmentBuffered.getValue())__		assertEquals(externalPath, latestCompletedExternalPath.getValue())___		_		PendingCheckpointStats nextPending = stats.reportPendingCheckpoint(_			1,_			11,_			CheckpointProperties.forStandardCheckpoint())___		long failureTimestamp = 1230123L__		nextPending.reportFailedCheckpoint(failureTimestamp, null)___		_		assertEquals(Long.valueOf(2), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numFailedCheckpoints.getValue())_ __		_		long restoreTimestamp = 183419283L__		RestoredCheckpointStats restored = new RestoredCheckpointStats(_			1,_			CheckpointProperties.forStandardCheckpoint(),_			restoreTimestamp,_			null)__		stats.reportRestoredCheckpoint(restored)___		assertEquals(Long.valueOf(2), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numFailedCheckpoints.getValue())___		assertEquals(Long.valueOf(restoreTimestamp), latestRestoreTimestamp.getValue())___		_		PendingCheckpointStats thirdPending = stats.reportPendingCheckpoint(_			2,_			5000,_			CheckpointProperties.forStandardCheckpoint())___		thirdPending.reportSubtaskStats(jobVertex.getJobVertexId(), subtaskStats)__		thirdPending.reportCompletedCheckpoint(null)___		_		assertEquals("n/a", latestCompletedExternalPath.getValue())__	};tests,that,the,metrics,are,updated,properly,we,had,a,bug,that,required,new,stats,snapshots,in,order,to,update,the,metrics;test,suppress,warnings,unchecked,public,void,test,metrics,are,updated,throws,exception,final,map,string,gauge,registered,gauges,new,hash,map,metric,group,metric,group,new,metric,group,override,public,counter,counter,int,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,counter,counter,string,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,c,extends,counter,c,counter,int,name,c,counter,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,c,extends,counter,c,counter,string,name,c,counter,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,t,g,extends,gauge,t,g,gauge,int,name,g,gauge,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,t,g,extends,gauge,t,g,gauge,string,name,g,gauge,registered,gauges,put,name,gauge,return,gauge,override,public,h,extends,histogram,h,histogram,string,name,h,histogram,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,h,extends,histogram,h,histogram,int,name,h,histogram,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,m,extends,meter,m,meter,string,name,m,meter,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,m,extends,meter,m,meter,int,name,m,meter,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,metric,group,add,group,int,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,metric,group,add,group,string,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,metric,group,add,group,string,key,string,value,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,string,get,scope,components,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,map,string,string,get,all,variables,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,string,get,metric,identifier,string,metric,name,throw,new,unsupported,operation,exception,not,expected,in,this,test,override,public,string,get,metric,identifier,string,metric,name,character,filter,filter,throw,new,unsupported,operation,exception,not,expected,in,this,test,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,checkpoint,stats,tracker,stats,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,metric,group,assert,equals,9,registered,gauges,size,gauge,long,num,checkpoints,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,integer,num,in,progress,checkpoints,gauge,integer,registered,gauges,get,checkpoint,stats,tracker,gauge,long,num,completed,checkpoints,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,num,failed,checkpoints,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,restore,timestamp,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,completed,size,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,completed,duration,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,completed,alignment,buffered,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,string,latest,completed,external,path,gauge,string,registered,gauges,get,checkpoint,stats,tracker,assert,equals,long,value,of,0,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,0,num,completed,checkpoints,get,value,assert,equals,long,value,of,0,num,failed,checkpoints,get,value,assert,equals,long,value,of,1,latest,restore,timestamp,get,value,assert,equals,long,value,of,1,latest,completed,size,get,value,assert,equals,long,value,of,1,latest,completed,duration,get,value,assert,equals,long,value,of,1,latest,completed,alignment,buffered,get,value,assert,equals,n,a,latest,completed,external,path,get,value,pending,checkpoint,stats,pending,stats,report,pending,checkpoint,0,0,checkpoint,properties,for,standard,checkpoint,assert,equals,long,value,of,1,num,checkpoints,get,value,assert,equals,integer,value,of,1,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,0,num,completed,checkpoints,get,value,assert,equals,long,value,of,0,num,failed,checkpoints,get,value,long,ack,timestamp,11231230l,long,state,size,12381238l,long,ignored,0,long,alignmenet,buffered,182812l,string,external,path,myexternalpath,subtask,state,stats,subtask,stats,new,subtask,state,stats,0,ack,timestamp,state,size,ignored,ignored,alignmenet,buffered,ignored,assert,true,pending,report,subtask,stats,job,vertex,get,job,vertex,id,subtask,stats,pending,report,completed,checkpoint,external,path,assert,equals,long,value,of,1,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,1,num,completed,checkpoints,get,value,assert,equals,long,value,of,0,num,failed,checkpoints,get,value,assert,equals,long,value,of,1,latest,restore,timestamp,get,value,assert,equals,long,value,of,state,size,latest,completed,size,get,value,assert,equals,long,value,of,ack,timestamp,latest,completed,duration,get,value,assert,equals,long,value,of,alignmenet,buffered,latest,completed,alignment,buffered,get,value,assert,equals,external,path,latest,completed,external,path,get,value,pending,checkpoint,stats,next,pending,stats,report,pending,checkpoint,1,11,checkpoint,properties,for,standard,checkpoint,long,failure,timestamp,1230123l,next,pending,report,failed,checkpoint,failure,timestamp,null,assert,equals,long,value,of,2,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,1,num,completed,checkpoints,get,value,assert,equals,long,value,of,1,num,failed,checkpoints,get,value,long,restore,timestamp,183419283l,restored,checkpoint,stats,restored,new,restored,checkpoint,stats,1,checkpoint,properties,for,standard,checkpoint,restore,timestamp,null,stats,report,restored,checkpoint,restored,assert,equals,long,value,of,2,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,1,num,completed,checkpoints,get,value,assert,equals,long,value,of,1,num,failed,checkpoints,get,value,assert,equals,long,value,of,restore,timestamp,latest,restore,timestamp,get,value,pending,checkpoint,stats,third,pending,stats,report,pending,checkpoint,2,5000,checkpoint,properties,for,standard,checkpoint,third,pending,report,subtask,stats,job,vertex,get,job,vertex,id,subtask,stats,third,pending,report,completed,checkpoint,null,assert,equals,n,a,latest,completed,external,path,get,value
CheckpointStatsTrackerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testMetricsAreUpdated() throws Exception;1513102157;Tests that the metrics are updated properly. We had a bug that required new stats_snapshots in order to update the metrics.;@Test_	@SuppressWarnings("unchecked")_	public void testMetricsAreUpdated() throws Exception {_		final Map<String, Gauge<?>> registeredGauges = new HashMap<>()___		MetricGroup metricGroup = new UnregisteredMetricsGroup() {_			@Override_			public <T, G extends Gauge<T>> G gauge(String name, G gauge) {_				registeredGauges.put(name, gauge)__				return gauge__			}_		}___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		CheckpointStatsTracker stats = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			metricGroup)___		_		assertEquals(9, registeredGauges.size())___		_		Gauge<Long> numCheckpoints = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_CHECKPOINTS_METRIC)__		Gauge<Integer> numInProgressCheckpoints = (Gauge<Integer>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_IN_PROGRESS_CHECKPOINTS_METRIC)__		Gauge<Long> numCompletedCheckpoints = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_COMPLETED_CHECKPOINTS_METRIC)__		Gauge<Long> numFailedCheckpoints = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_FAILED_CHECKPOINTS_METRIC)__		Gauge<Long> latestRestoreTimestamp = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_RESTORED_CHECKPOINT_TIMESTAMP_METRIC)__		Gauge<Long> latestCompletedSize = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_SIZE_METRIC)__		Gauge<Long> latestCompletedDuration = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_DURATION_METRIC)__		Gauge<Long> latestCompletedAlignmentBuffered = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_ALIGNMENT_BUFFERED_METRIC)__		Gauge<String> latestCompletedExternalPath = (Gauge<String>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_EXTERNAL_PATH_METRIC)___		assertEquals(Long.valueOf(0), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numFailedCheckpoints.getValue())__		assertEquals(Long.valueOf(-1), latestRestoreTimestamp.getValue())__		assertEquals(Long.valueOf(-1), latestCompletedSize.getValue())__		assertEquals(Long.valueOf(-1), latestCompletedDuration.getValue())__		assertEquals(Long.valueOf(-1), latestCompletedAlignmentBuffered.getValue())__		assertEquals("n/a", latestCompletedExternalPath.getValue())___		PendingCheckpointStats pending = stats.reportPendingCheckpoint(_			0,_			0,_			CheckpointProperties.forStandardCheckpoint())___		_		assertEquals(Long.valueOf(1), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(1), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numFailedCheckpoints.getValue())___		long ackTimestamp = 11231230L__		long stateSize = 12381238L__		long ignored = 0__		long alignmenetBuffered = 182812L__		String externalPath = "myexternalpath"___		SubtaskStateStats subtaskStats = new SubtaskStateStats(_			0,_			ackTimestamp,_			stateSize,_			ignored,_			ignored,_			alignmenetBuffered,_			ignored)___		assertTrue(pending.reportSubtaskStats(jobVertex.getJobVertexId(), subtaskStats))___		pending.reportCompletedCheckpoint(externalPath)___		_		assertEquals(Long.valueOf(1), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numFailedCheckpoints.getValue())__		assertEquals(Long.valueOf(-1), latestRestoreTimestamp.getValue())__		assertEquals(Long.valueOf(stateSize), latestCompletedSize.getValue())__		assertEquals(Long.valueOf(ackTimestamp), latestCompletedDuration.getValue())__		assertEquals(Long.valueOf(alignmenetBuffered), latestCompletedAlignmentBuffered.getValue())__		assertEquals(externalPath, latestCompletedExternalPath.getValue())___		_		PendingCheckpointStats nextPending = stats.reportPendingCheckpoint(_			1,_			11,_			CheckpointProperties.forStandardCheckpoint())___		long failureTimestamp = 1230123L__		nextPending.reportFailedCheckpoint(failureTimestamp, null)___		_		assertEquals(Long.valueOf(2), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numFailedCheckpoints.getValue())_ __		_		long restoreTimestamp = 183419283L__		RestoredCheckpointStats restored = new RestoredCheckpointStats(_			1,_			CheckpointProperties.forStandardCheckpoint(),_			restoreTimestamp,_			null)__		stats.reportRestoredCheckpoint(restored)___		assertEquals(Long.valueOf(2), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numFailedCheckpoints.getValue())___		assertEquals(Long.valueOf(restoreTimestamp), latestRestoreTimestamp.getValue())___		_		PendingCheckpointStats thirdPending = stats.reportPendingCheckpoint(_			2,_			5000,_			CheckpointProperties.forStandardCheckpoint())___		thirdPending.reportSubtaskStats(jobVertex.getJobVertexId(), subtaskStats)__		thirdPending.reportCompletedCheckpoint(null)___		_		assertEquals("n/a", latestCompletedExternalPath.getValue())__	};tests,that,the,metrics,are,updated,properly,we,had,a,bug,that,required,new,stats,snapshots,in,order,to,update,the,metrics;test,suppress,warnings,unchecked,public,void,test,metrics,are,updated,throws,exception,final,map,string,gauge,registered,gauges,new,hash,map,metric,group,metric,group,new,unregistered,metrics,group,override,public,t,g,extends,gauge,t,g,gauge,string,name,g,gauge,registered,gauges,put,name,gauge,return,gauge,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,checkpoint,stats,tracker,stats,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,metric,group,assert,equals,9,registered,gauges,size,gauge,long,num,checkpoints,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,integer,num,in,progress,checkpoints,gauge,integer,registered,gauges,get,checkpoint,stats,tracker,gauge,long,num,completed,checkpoints,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,num,failed,checkpoints,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,restore,timestamp,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,completed,size,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,completed,duration,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,completed,alignment,buffered,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,string,latest,completed,external,path,gauge,string,registered,gauges,get,checkpoint,stats,tracker,assert,equals,long,value,of,0,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,0,num,completed,checkpoints,get,value,assert,equals,long,value,of,0,num,failed,checkpoints,get,value,assert,equals,long,value,of,1,latest,restore,timestamp,get,value,assert,equals,long,value,of,1,latest,completed,size,get,value,assert,equals,long,value,of,1,latest,completed,duration,get,value,assert,equals,long,value,of,1,latest,completed,alignment,buffered,get,value,assert,equals,n,a,latest,completed,external,path,get,value,pending,checkpoint,stats,pending,stats,report,pending,checkpoint,0,0,checkpoint,properties,for,standard,checkpoint,assert,equals,long,value,of,1,num,checkpoints,get,value,assert,equals,integer,value,of,1,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,0,num,completed,checkpoints,get,value,assert,equals,long,value,of,0,num,failed,checkpoints,get,value,long,ack,timestamp,11231230l,long,state,size,12381238l,long,ignored,0,long,alignmenet,buffered,182812l,string,external,path,myexternalpath,subtask,state,stats,subtask,stats,new,subtask,state,stats,0,ack,timestamp,state,size,ignored,ignored,alignmenet,buffered,ignored,assert,true,pending,report,subtask,stats,job,vertex,get,job,vertex,id,subtask,stats,pending,report,completed,checkpoint,external,path,assert,equals,long,value,of,1,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,1,num,completed,checkpoints,get,value,assert,equals,long,value,of,0,num,failed,checkpoints,get,value,assert,equals,long,value,of,1,latest,restore,timestamp,get,value,assert,equals,long,value,of,state,size,latest,completed,size,get,value,assert,equals,long,value,of,ack,timestamp,latest,completed,duration,get,value,assert,equals,long,value,of,alignmenet,buffered,latest,completed,alignment,buffered,get,value,assert,equals,external,path,latest,completed,external,path,get,value,pending,checkpoint,stats,next,pending,stats,report,pending,checkpoint,1,11,checkpoint,properties,for,standard,checkpoint,long,failure,timestamp,1230123l,next,pending,report,failed,checkpoint,failure,timestamp,null,assert,equals,long,value,of,2,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,1,num,completed,checkpoints,get,value,assert,equals,long,value,of,1,num,failed,checkpoints,get,value,long,restore,timestamp,183419283l,restored,checkpoint,stats,restored,new,restored,checkpoint,stats,1,checkpoint,properties,for,standard,checkpoint,restore,timestamp,null,stats,report,restored,checkpoint,restored,assert,equals,long,value,of,2,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,1,num,completed,checkpoints,get,value,assert,equals,long,value,of,1,num,failed,checkpoints,get,value,assert,equals,long,value,of,restore,timestamp,latest,restore,timestamp,get,value,pending,checkpoint,stats,third,pending,stats,report,pending,checkpoint,2,5000,checkpoint,properties,for,standard,checkpoint,third,pending,report,subtask,stats,job,vertex,get,job,vertex,id,subtask,stats,third,pending,report,completed,checkpoint,null,assert,equals,n,a,latest,completed,external,path,get,value
CheckpointStatsTrackerTest -> @Test 	@SuppressWarnings("unchecked") 	public void testMetricsAreUpdated() throws Exception;1516295283;Tests that the metrics are updated properly. We had a bug that required new stats_snapshots in order to update the metrics.;@Test_	@SuppressWarnings("unchecked")_	public void testMetricsAreUpdated() throws Exception {_		final Map<String, Gauge<?>> registeredGauges = new HashMap<>()___		MetricGroup metricGroup = new UnregisteredMetricsGroup() {_			@Override_			public <T, G extends Gauge<T>> G gauge(String name, G gauge) {_				registeredGauges.put(name, gauge)__				return gauge__			}_		}___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		CheckpointStatsTracker stats = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			metricGroup)___		_		assertEquals(9, registeredGauges.size())___		_		Gauge<Long> numCheckpoints = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_CHECKPOINTS_METRIC)__		Gauge<Integer> numInProgressCheckpoints = (Gauge<Integer>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_IN_PROGRESS_CHECKPOINTS_METRIC)__		Gauge<Long> numCompletedCheckpoints = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_COMPLETED_CHECKPOINTS_METRIC)__		Gauge<Long> numFailedCheckpoints = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.NUMBER_OF_FAILED_CHECKPOINTS_METRIC)__		Gauge<Long> latestRestoreTimestamp = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_RESTORED_CHECKPOINT_TIMESTAMP_METRIC)__		Gauge<Long> latestCompletedSize = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_SIZE_METRIC)__		Gauge<Long> latestCompletedDuration = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_DURATION_METRIC)__		Gauge<Long> latestCompletedAlignmentBuffered = (Gauge<Long>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_ALIGNMENT_BUFFERED_METRIC)__		Gauge<String> latestCompletedExternalPath = (Gauge<String>) registeredGauges.get(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_EXTERNAL_PATH_METRIC)___		assertEquals(Long.valueOf(0), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numFailedCheckpoints.getValue())__		assertEquals(Long.valueOf(-1), latestRestoreTimestamp.getValue())__		assertEquals(Long.valueOf(-1), latestCompletedSize.getValue())__		assertEquals(Long.valueOf(-1), latestCompletedDuration.getValue())__		assertEquals(Long.valueOf(-1), latestCompletedAlignmentBuffered.getValue())__		assertEquals("n/a", latestCompletedExternalPath.getValue())___		PendingCheckpointStats pending = stats.reportPendingCheckpoint(_			0,_			0,_			CheckpointProperties.forCheckpoint(CheckpointRetentionPolicy.NEVER_RETAIN_AFTER_TERMINATION))___		_		assertEquals(Long.valueOf(1), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(1), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numFailedCheckpoints.getValue())___		long ackTimestamp = 11231230L__		long stateSize = 12381238L__		long ignored = 0__		long alignmenetBuffered = 182812L__		String externalPath = "myexternalpath"___		SubtaskStateStats subtaskStats = new SubtaskStateStats(_			0,_			ackTimestamp,_			stateSize,_			ignored,_			ignored,_			alignmenetBuffered,_			ignored)___		assertTrue(pending.reportSubtaskStats(jobVertex.getJobVertexId(), subtaskStats))___		pending.reportCompletedCheckpoint(externalPath)___		_		assertEquals(Long.valueOf(1), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(0), numFailedCheckpoints.getValue())__		assertEquals(Long.valueOf(-1), latestRestoreTimestamp.getValue())__		assertEquals(Long.valueOf(stateSize), latestCompletedSize.getValue())__		assertEquals(Long.valueOf(ackTimestamp), latestCompletedDuration.getValue())__		assertEquals(Long.valueOf(alignmenetBuffered), latestCompletedAlignmentBuffered.getValue())__		assertEquals(externalPath, latestCompletedExternalPath.getValue())___		_		PendingCheckpointStats nextPending = stats.reportPendingCheckpoint(_			1,_			11,_			CheckpointProperties.forCheckpoint(CheckpointRetentionPolicy.NEVER_RETAIN_AFTER_TERMINATION))___		long failureTimestamp = 1230123L__		nextPending.reportFailedCheckpoint(failureTimestamp, null)___		_		assertEquals(Long.valueOf(2), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numFailedCheckpoints.getValue())_ __		_		long restoreTimestamp = 183419283L__		RestoredCheckpointStats restored = new RestoredCheckpointStats(_			1,_			CheckpointProperties.forCheckpoint(CheckpointRetentionPolicy.NEVER_RETAIN_AFTER_TERMINATION),_			restoreTimestamp,_			null)__		stats.reportRestoredCheckpoint(restored)___		assertEquals(Long.valueOf(2), numCheckpoints.getValue())__		assertEquals(Integer.valueOf(0), numInProgressCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numCompletedCheckpoints.getValue())__		assertEquals(Long.valueOf(1), numFailedCheckpoints.getValue())___		assertEquals(Long.valueOf(restoreTimestamp), latestRestoreTimestamp.getValue())___		_		PendingCheckpointStats thirdPending = stats.reportPendingCheckpoint(_			2,_			5000,_			CheckpointProperties.forCheckpoint(CheckpointRetentionPolicy.NEVER_RETAIN_AFTER_TERMINATION))___		thirdPending.reportSubtaskStats(jobVertex.getJobVertexId(), subtaskStats)__		thirdPending.reportCompletedCheckpoint(null)___		_		assertEquals("n/a", latestCompletedExternalPath.getValue())__	};tests,that,the,metrics,are,updated,properly,we,had,a,bug,that,required,new,stats,snapshots,in,order,to,update,the,metrics;test,suppress,warnings,unchecked,public,void,test,metrics,are,updated,throws,exception,final,map,string,gauge,registered,gauges,new,hash,map,metric,group,metric,group,new,unregistered,metrics,group,override,public,t,g,extends,gauge,t,g,gauge,string,name,g,gauge,registered,gauges,put,name,gauge,return,gauge,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,checkpoint,stats,tracker,stats,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,metric,group,assert,equals,9,registered,gauges,size,gauge,long,num,checkpoints,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,integer,num,in,progress,checkpoints,gauge,integer,registered,gauges,get,checkpoint,stats,tracker,gauge,long,num,completed,checkpoints,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,num,failed,checkpoints,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,restore,timestamp,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,completed,size,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,completed,duration,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,long,latest,completed,alignment,buffered,gauge,long,registered,gauges,get,checkpoint,stats,tracker,gauge,string,latest,completed,external,path,gauge,string,registered,gauges,get,checkpoint,stats,tracker,assert,equals,long,value,of,0,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,0,num,completed,checkpoints,get,value,assert,equals,long,value,of,0,num,failed,checkpoints,get,value,assert,equals,long,value,of,1,latest,restore,timestamp,get,value,assert,equals,long,value,of,1,latest,completed,size,get,value,assert,equals,long,value,of,1,latest,completed,duration,get,value,assert,equals,long,value,of,1,latest,completed,alignment,buffered,get,value,assert,equals,n,a,latest,completed,external,path,get,value,pending,checkpoint,stats,pending,stats,report,pending,checkpoint,0,0,checkpoint,properties,for,checkpoint,checkpoint,retention,policy,assert,equals,long,value,of,1,num,checkpoints,get,value,assert,equals,integer,value,of,1,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,0,num,completed,checkpoints,get,value,assert,equals,long,value,of,0,num,failed,checkpoints,get,value,long,ack,timestamp,11231230l,long,state,size,12381238l,long,ignored,0,long,alignmenet,buffered,182812l,string,external,path,myexternalpath,subtask,state,stats,subtask,stats,new,subtask,state,stats,0,ack,timestamp,state,size,ignored,ignored,alignmenet,buffered,ignored,assert,true,pending,report,subtask,stats,job,vertex,get,job,vertex,id,subtask,stats,pending,report,completed,checkpoint,external,path,assert,equals,long,value,of,1,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,1,num,completed,checkpoints,get,value,assert,equals,long,value,of,0,num,failed,checkpoints,get,value,assert,equals,long,value,of,1,latest,restore,timestamp,get,value,assert,equals,long,value,of,state,size,latest,completed,size,get,value,assert,equals,long,value,of,ack,timestamp,latest,completed,duration,get,value,assert,equals,long,value,of,alignmenet,buffered,latest,completed,alignment,buffered,get,value,assert,equals,external,path,latest,completed,external,path,get,value,pending,checkpoint,stats,next,pending,stats,report,pending,checkpoint,1,11,checkpoint,properties,for,checkpoint,checkpoint,retention,policy,long,failure,timestamp,1230123l,next,pending,report,failed,checkpoint,failure,timestamp,null,assert,equals,long,value,of,2,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,1,num,completed,checkpoints,get,value,assert,equals,long,value,of,1,num,failed,checkpoints,get,value,long,restore,timestamp,183419283l,restored,checkpoint,stats,restored,new,restored,checkpoint,stats,1,checkpoint,properties,for,checkpoint,checkpoint,retention,policy,restore,timestamp,null,stats,report,restored,checkpoint,restored,assert,equals,long,value,of,2,num,checkpoints,get,value,assert,equals,integer,value,of,0,num,in,progress,checkpoints,get,value,assert,equals,long,value,of,1,num,completed,checkpoints,get,value,assert,equals,long,value,of,1,num,failed,checkpoints,get,value,assert,equals,long,value,of,restore,timestamp,latest,restore,timestamp,get,value,pending,checkpoint,stats,third,pending,stats,report,pending,checkpoint,2,5000,checkpoint,properties,for,checkpoint,checkpoint,retention,policy,third,pending,report,subtask,stats,job,vertex,get,job,vertex,id,subtask,stats,third,pending,report,completed,checkpoint,null,assert,equals,n,a,latest,completed,external,path,get,value
CheckpointStatsTrackerTest -> @Test 	public void testGetSnapshottingSettings() throws Exception;1484038132;Tests access to the snapshotting settings.;@Test_	public void testGetSnapshottingSettings() throws Exception {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		JobSnapshottingSettings snapshottingSettings = new JobSnapshottingSettings(_			Collections.singletonList(new JobVertexID()),_			Collections.singletonList(new JobVertexID()),_			Collections.singletonList(new JobVertexID()),_			181238123L,_			19191992L,_			191929L,_			123,_			ExternalizedCheckpointSettings.none(),_			false)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			snapshottingSettings,_			new UnregisteredMetricsGroup())___		assertEquals(snapshottingSettings, tracker.getSnapshottingSettings())__	};tests,access,to,the,snapshotting,settings;test,public,void,test,get,snapshotting,settings,throws,exception,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,job,snapshotting,settings,snapshotting,settings,new,job,snapshotting,settings,collections,singleton,list,new,job,vertex,id,collections,singleton,list,new,job,vertex,id,collections,singleton,list,new,job,vertex,id,181238123l,19191992l,191929l,123,externalized,checkpoint,settings,none,false,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,snapshotting,settings,new,unregistered,metrics,group,assert,equals,snapshotting,settings,tracker,get,snapshotting,settings
CheckpointStatsTrackerTest -> @Test 	public void testGetSnapshottingSettings() throws Exception;1488304933;Tests access to the snapshotting settings.;@Test_	public void testGetSnapshottingSettings() throws Exception {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		JobSnapshottingSettings snapshottingSettings = new JobSnapshottingSettings(_			Collections.singletonList(new JobVertexID()),_			Collections.singletonList(new JobVertexID()),_			Collections.singletonList(new JobVertexID()),_			181238123L,_			19191992L,_			191929L,_			123,_			ExternalizedCheckpointSettings.none(),_			null,_			false)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			snapshottingSettings,_			new UnregisteredMetricsGroup())___		assertEquals(snapshottingSettings, tracker.getSnapshottingSettings())__	};tests,access,to,the,snapshotting,settings;test,public,void,test,get,snapshotting,settings,throws,exception,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,job,snapshotting,settings,snapshotting,settings,new,job,snapshotting,settings,collections,singleton,list,new,job,vertex,id,collections,singleton,list,new,job,vertex,id,collections,singleton,list,new,job,vertex,id,181238123l,19191992l,191929l,123,externalized,checkpoint,settings,none,null,false,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,snapshotting,settings,new,unregistered,metrics,group,assert,equals,snapshotting,settings,tracker,get,snapshotting,settings
CheckpointStatsTrackerTest -> @Test 	public void testGetSnapshottingSettings() throws Exception;1490214056;Tests access to the snapshotting settings.;@Test_	public void testGetSnapshottingSettings() throws Exception {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		JobSnapshottingSettings snapshottingSettings = new JobSnapshottingSettings(_			Collections.singletonList(new JobVertexID()),_			Collections.singletonList(new JobVertexID()),_			Collections.singletonList(new JobVertexID()),_			181238123L,_			19191992L,_			191929L,_			123,_			ExternalizedCheckpointSettings.none(),_			null,_			false)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			snapshottingSettings,_			new UnregisteredMetricsGroup())___		assertEquals(snapshottingSettings, tracker.getSnapshottingSettings())__	};tests,access,to,the,snapshotting,settings;test,public,void,test,get,snapshotting,settings,throws,exception,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,job,snapshotting,settings,snapshotting,settings,new,job,snapshotting,settings,collections,singleton,list,new,job,vertex,id,collections,singleton,list,new,job,vertex,id,collections,singleton,list,new,job,vertex,id,181238123l,19191992l,191929l,123,externalized,checkpoint,settings,none,null,false,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,snapshotting,settings,new,unregistered,metrics,group,assert,equals,snapshotting,settings,tracker,get,snapshotting,settings
CheckpointStatsTrackerTest -> @Test 	public void testGetSnapshottingSettings() throws Exception;1492678790;Tests access to the snapshotting settings.;@Test_	public void testGetSnapshottingSettings() throws Exception {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		JobCheckpointingSettings snapshottingSettings = new JobCheckpointingSettings(_			Collections.singletonList(new JobVertexID()),_			Collections.singletonList(new JobVertexID()),_			Collections.singletonList(new JobVertexID()),_			181238123L,_			19191992L,_			191929L,_			123,_			ExternalizedCheckpointSettings.none(),_			null,_			false)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			snapshottingSettings,_			new UnregisteredMetricsGroup())___		assertEquals(snapshottingSettings, tracker.getSnapshottingSettings())__	};tests,access,to,the,snapshotting,settings;test,public,void,test,get,snapshotting,settings,throws,exception,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,job,checkpointing,settings,snapshotting,settings,new,job,checkpointing,settings,collections,singleton,list,new,job,vertex,id,collections,singleton,list,new,job,vertex,id,collections,singleton,list,new,job,vertex,id,181238123l,19191992l,191929l,123,externalized,checkpoint,settings,none,null,false,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,snapshotting,settings,new,unregistered,metrics,group,assert,equals,snapshotting,settings,tracker,get,snapshotting,settings
CheckpointStatsTrackerTest -> @Test 	public void testGetSnapshottingSettings() throws Exception;1506590912;Tests access to the snapshotting settings.;@Test_	public void testGetSnapshottingSettings() throws Exception {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		JobCheckpointingSettings snapshottingSettings = new JobCheckpointingSettings(_			Collections.singletonList(new JobVertexID()),_			Collections.singletonList(new JobVertexID()),_			Collections.singletonList(new JobVertexID()),_			181238123L,_			19191992L,_			191929L,_			123,_			ExternalizedCheckpointSettings.none(),_			null,_			false)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			snapshottingSettings,_			new UnregisteredMetricsGroup())___		assertEquals(snapshottingSettings, tracker.getSnapshottingSettings())__	};tests,access,to,the,snapshotting,settings;test,public,void,test,get,snapshotting,settings,throws,exception,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,job,checkpointing,settings,snapshotting,settings,new,job,checkpointing,settings,collections,singleton,list,new,job,vertex,id,collections,singleton,list,new,job,vertex,id,collections,singleton,list,new,job,vertex,id,181238123l,19191992l,191929l,123,externalized,checkpoint,settings,none,null,false,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,snapshotting,settings,new,unregistered,metrics,group,assert,equals,snapshotting,settings,tracker,get,snapshotting,settings
CheckpointStatsTrackerTest -> @Test 	public void testGetSnapshottingSettings() throws Exception;1506618381;Tests access to the snapshotting settings.;@Test_	public void testGetSnapshottingSettings() throws Exception {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		JobCheckpointingSettings snapshottingSettings = new JobCheckpointingSettings(_			Collections.singletonList(new JobVertexID()),_			Collections.singletonList(new JobVertexID()),_			Collections.singletonList(new JobVertexID()),_			new CheckpointCoordinatorConfiguration(_				181238123L,_				19191992L,_				191929L,_				123,_				ExternalizedCheckpointSettings.none(),_				false_			),_			null)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			snapshottingSettings.getCheckpointCoordinatorConfiguration(),_			new UnregisteredMetricsGroup())___		assertEquals(snapshottingSettings.getCheckpointCoordinatorConfiguration(), tracker.getJobCheckpointingConfiguration())__	};tests,access,to,the,snapshotting,settings;test,public,void,test,get,snapshotting,settings,throws,exception,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,job,checkpointing,settings,snapshotting,settings,new,job,checkpointing,settings,collections,singleton,list,new,job,vertex,id,collections,singleton,list,new,job,vertex,id,collections,singleton,list,new,job,vertex,id,new,checkpoint,coordinator,configuration,181238123l,19191992l,191929l,123,externalized,checkpoint,settings,none,false,null,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,snapshotting,settings,get,checkpoint,coordinator,configuration,new,unregistered,metrics,group,assert,equals,snapshotting,settings,get,checkpoint,coordinator,configuration,tracker,get,job,checkpointing,configuration
CheckpointStatsTrackerTest -> @Test 	public void testGetSnapshottingSettings() throws Exception;1513075960;Tests access to the snapshotting settings.;@Test_	public void testGetSnapshottingSettings() throws Exception {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		JobCheckpointingSettings snapshottingSettings = new JobCheckpointingSettings(_			Collections.singletonList(new JobVertexID()),_			Collections.singletonList(new JobVertexID()),_			Collections.singletonList(new JobVertexID()),_			new CheckpointCoordinatorConfiguration(_				181238123L,_				19191992L,_				191929L,_				123,_				ExternalizedCheckpointSettings.none(),_				false_			),_			null)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			snapshottingSettings.getCheckpointCoordinatorConfiguration(),_			new UnregisteredMetricsGroup())___		assertEquals(snapshottingSettings.getCheckpointCoordinatorConfiguration(), tracker.getJobCheckpointingConfiguration())__	};tests,access,to,the,snapshotting,settings;test,public,void,test,get,snapshotting,settings,throws,exception,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,job,checkpointing,settings,snapshotting,settings,new,job,checkpointing,settings,collections,singleton,list,new,job,vertex,id,collections,singleton,list,new,job,vertex,id,collections,singleton,list,new,job,vertex,id,new,checkpoint,coordinator,configuration,181238123l,19191992l,191929l,123,externalized,checkpoint,settings,none,false,null,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,snapshotting,settings,get,checkpoint,coordinator,configuration,new,unregistered,metrics,group,assert,equals,snapshotting,settings,get,checkpoint,coordinator,configuration,tracker,get,job,checkpointing,configuration
CheckpointStatsTrackerTest -> @Test 	public void testGetSnapshottingSettings() throws Exception;1513102157;Tests access to the snapshotting settings.;@Test_	public void testGetSnapshottingSettings() throws Exception {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		JobCheckpointingSettings snapshottingSettings = new JobCheckpointingSettings(_			Collections.singletonList(new JobVertexID()),_			Collections.singletonList(new JobVertexID()),_			Collections.singletonList(new JobVertexID()),_			new CheckpointCoordinatorConfiguration(_				181238123L,_				19191992L,_				191929L,_				123,_				ExternalizedCheckpointSettings.none(),_				false_			),_			null)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			snapshottingSettings.getCheckpointCoordinatorConfiguration(),_			new UnregisteredMetricsGroup())___		assertEquals(snapshottingSettings.getCheckpointCoordinatorConfiguration(), tracker.getJobCheckpointingConfiguration())__	};tests,access,to,the,snapshotting,settings;test,public,void,test,get,snapshotting,settings,throws,exception,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,job,checkpointing,settings,snapshotting,settings,new,job,checkpointing,settings,collections,singleton,list,new,job,vertex,id,collections,singleton,list,new,job,vertex,id,collections,singleton,list,new,job,vertex,id,new,checkpoint,coordinator,configuration,181238123l,19191992l,191929l,123,externalized,checkpoint,settings,none,false,null,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,snapshotting,settings,get,checkpoint,coordinator,configuration,new,unregistered,metrics,group,assert,equals,snapshotting,settings,get,checkpoint,coordinator,configuration,tracker,get,job,checkpointing,configuration
CheckpointStatsTrackerTest -> @Test 	public void testGetSnapshottingSettings() throws Exception;1516295283;Tests access to the snapshotting settings.;@Test_	public void testGetSnapshottingSettings() throws Exception {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		JobCheckpointingSettings snapshottingSettings = new JobCheckpointingSettings(_			Collections.singletonList(new JobVertexID()),_			Collections.singletonList(new JobVertexID()),_			Collections.singletonList(new JobVertexID()),_			new CheckpointCoordinatorConfiguration(_				181238123L,_				19191992L,_				191929L,_				123,_				CheckpointRetentionPolicy.NEVER_RETAIN_AFTER_TERMINATION,_				false_			),_			null)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			snapshottingSettings.getCheckpointCoordinatorConfiguration(),_			new UnregisteredMetricsGroup())___		assertEquals(snapshottingSettings.getCheckpointCoordinatorConfiguration(), tracker.getJobCheckpointingConfiguration())__	};tests,access,to,the,snapshotting,settings;test,public,void,test,get,snapshotting,settings,throws,exception,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,job,checkpointing,settings,snapshotting,settings,new,job,checkpointing,settings,collections,singleton,list,new,job,vertex,id,collections,singleton,list,new,job,vertex,id,collections,singleton,list,new,job,vertex,id,new,checkpoint,coordinator,configuration,181238123l,19191992l,191929l,123,checkpoint,retention,policy,false,null,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,snapshotting,settings,get,checkpoint,coordinator,configuration,new,unregistered,metrics,group,assert,equals,snapshotting,settings,get,checkpoint,coordinator,configuration,tracker,get,job,checkpointing,configuration
CheckpointStatsTrackerTest -> @Test 	public void testTrackerWithoutHistory() throws Exception;1484038132;Tests that the number of remembered checkpoints configuration_is respected.;@Test_	public void testTrackerWithoutHistory() throws Exception {_		int numberOfSubtasks = 3___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(numberOfSubtasks)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(JobSnapshottingSettings.class),_			new UnregisteredMetricsGroup())___		PendingCheckpointStats pending = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		pending.reportCompletedCheckpoint(null)___		CheckpointStatsSnapshot snapshot = tracker.createSnapshot()__		_		assertFalse(snapshot.getHistory().getCheckpoints().iterator().hasNext())___		_		CheckpointStatsCounts counts = snapshot.getCounts()__		assertEquals(1, counts.getNumberOfCompletedCheckpoints())__		assertEquals(1, counts.getTotalNumberOfCheckpoints())___		_		CompletedCheckpointStatsSummary summary = snapshot.getSummaryStats()__		assertEquals(1, summary.getStateSizeStats().getCount())__		assertEquals(1, summary.getEndToEndDurationStats().getCount())__		assertEquals(1, summary.getAlignmentBufferedStats().getCount())___		_		assertNotNull(snapshot.getHistory().getLatestCompletedCheckpoint())__		assertEquals(0, snapshot.getHistory().getLatestCompletedCheckpoint().getCheckpointId())__	};tests,that,the,number,of,remembered,checkpoints,configuration,is,respected;test,public,void,test,tracker,without,history,throws,exception,int,number,of,subtasks,3,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,number,of,subtasks,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,job,snapshotting,settings,class,new,unregistered,metrics,group,pending,checkpoint,stats,pending,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,pending,report,completed,checkpoint,null,checkpoint,stats,snapshot,snapshot,tracker,create,snapshot,assert,false,snapshot,get,history,get,checkpoints,iterator,has,next,checkpoint,stats,counts,counts,snapshot,get,counts,assert,equals,1,counts,get,number,of,completed,checkpoints,assert,equals,1,counts,get,total,number,of,checkpoints,completed,checkpoint,stats,summary,summary,snapshot,get,summary,stats,assert,equals,1,summary,get,state,size,stats,get,count,assert,equals,1,summary,get,end,to,end,duration,stats,get,count,assert,equals,1,summary,get,alignment,buffered,stats,get,count,assert,not,null,snapshot,get,history,get,latest,completed,checkpoint,assert,equals,0,snapshot,get,history,get,latest,completed,checkpoint,get,checkpoint,id
CheckpointStatsTrackerTest -> @Test 	public void testTrackerWithoutHistory() throws Exception;1488304933;Tests that the number of remembered checkpoints configuration_is respected.;@Test_	public void testTrackerWithoutHistory() throws Exception {_		int numberOfSubtasks = 3___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(numberOfSubtasks)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(JobSnapshottingSettings.class),_			new UnregisteredMetricsGroup())___		PendingCheckpointStats pending = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		pending.reportCompletedCheckpoint(null)___		CheckpointStatsSnapshot snapshot = tracker.createSnapshot()__		_		assertFalse(snapshot.getHistory().getCheckpoints().iterator().hasNext())___		_		CheckpointStatsCounts counts = snapshot.getCounts()__		assertEquals(1, counts.getNumberOfCompletedCheckpoints())__		assertEquals(1, counts.getTotalNumberOfCheckpoints())___		_		CompletedCheckpointStatsSummary summary = snapshot.getSummaryStats()__		assertEquals(1, summary.getStateSizeStats().getCount())__		assertEquals(1, summary.getEndToEndDurationStats().getCount())__		assertEquals(1, summary.getAlignmentBufferedStats().getCount())___		_		assertNotNull(snapshot.getHistory().getLatestCompletedCheckpoint())__		assertEquals(0, snapshot.getHistory().getLatestCompletedCheckpoint().getCheckpointId())__	};tests,that,the,number,of,remembered,checkpoints,configuration,is,respected;test,public,void,test,tracker,without,history,throws,exception,int,number,of,subtasks,3,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,number,of,subtasks,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,job,snapshotting,settings,class,new,unregistered,metrics,group,pending,checkpoint,stats,pending,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,pending,report,completed,checkpoint,null,checkpoint,stats,snapshot,snapshot,tracker,create,snapshot,assert,false,snapshot,get,history,get,checkpoints,iterator,has,next,checkpoint,stats,counts,counts,snapshot,get,counts,assert,equals,1,counts,get,number,of,completed,checkpoints,assert,equals,1,counts,get,total,number,of,checkpoints,completed,checkpoint,stats,summary,summary,snapshot,get,summary,stats,assert,equals,1,summary,get,state,size,stats,get,count,assert,equals,1,summary,get,end,to,end,duration,stats,get,count,assert,equals,1,summary,get,alignment,buffered,stats,get,count,assert,not,null,snapshot,get,history,get,latest,completed,checkpoint,assert,equals,0,snapshot,get,history,get,latest,completed,checkpoint,get,checkpoint,id
CheckpointStatsTrackerTest -> @Test 	public void testTrackerWithoutHistory() throws Exception;1490214056;Tests that the number of remembered checkpoints configuration_is respected.;@Test_	public void testTrackerWithoutHistory() throws Exception {_		int numberOfSubtasks = 3___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(numberOfSubtasks)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(JobSnapshottingSettings.class),_			new UnregisteredMetricsGroup())___		PendingCheckpointStats pending = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		pending.reportCompletedCheckpoint(null)___		CheckpointStatsSnapshot snapshot = tracker.createSnapshot()__		_		assertFalse(snapshot.getHistory().getCheckpoints().iterator().hasNext())___		_		CheckpointStatsCounts counts = snapshot.getCounts()__		assertEquals(1, counts.getNumberOfCompletedCheckpoints())__		assertEquals(1, counts.getTotalNumberOfCheckpoints())___		_		CompletedCheckpointStatsSummary summary = snapshot.getSummaryStats()__		assertEquals(1, summary.getStateSizeStats().getCount())__		assertEquals(1, summary.getEndToEndDurationStats().getCount())__		assertEquals(1, summary.getAlignmentBufferedStats().getCount())___		_		assertNotNull(snapshot.getHistory().getLatestCompletedCheckpoint())__		assertEquals(0, snapshot.getHistory().getLatestCompletedCheckpoint().getCheckpointId())__	};tests,that,the,number,of,remembered,checkpoints,configuration,is,respected;test,public,void,test,tracker,without,history,throws,exception,int,number,of,subtasks,3,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,number,of,subtasks,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,job,snapshotting,settings,class,new,unregistered,metrics,group,pending,checkpoint,stats,pending,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,pending,report,completed,checkpoint,null,checkpoint,stats,snapshot,snapshot,tracker,create,snapshot,assert,false,snapshot,get,history,get,checkpoints,iterator,has,next,checkpoint,stats,counts,counts,snapshot,get,counts,assert,equals,1,counts,get,number,of,completed,checkpoints,assert,equals,1,counts,get,total,number,of,checkpoints,completed,checkpoint,stats,summary,summary,snapshot,get,summary,stats,assert,equals,1,summary,get,state,size,stats,get,count,assert,equals,1,summary,get,end,to,end,duration,stats,get,count,assert,equals,1,summary,get,alignment,buffered,stats,get,count,assert,not,null,snapshot,get,history,get,latest,completed,checkpoint,assert,equals,0,snapshot,get,history,get,latest,completed,checkpoint,get,checkpoint,id
CheckpointStatsTrackerTest -> @Test 	public void testTrackerWithoutHistory() throws Exception;1492678790;Tests that the number of remembered checkpoints configuration_is respected.;@Test_	public void testTrackerWithoutHistory() throws Exception {_		int numberOfSubtasks = 3___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(numberOfSubtasks)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(JobCheckpointingSettings.class),_			new UnregisteredMetricsGroup())___		PendingCheckpointStats pending = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		pending.reportCompletedCheckpoint(null)___		CheckpointStatsSnapshot snapshot = tracker.createSnapshot()__		_		assertFalse(snapshot.getHistory().getCheckpoints().iterator().hasNext())___		_		CheckpointStatsCounts counts = snapshot.getCounts()__		assertEquals(1, counts.getNumberOfCompletedCheckpoints())__		assertEquals(1, counts.getTotalNumberOfCheckpoints())___		_		CompletedCheckpointStatsSummary summary = snapshot.getSummaryStats()__		assertEquals(1, summary.getStateSizeStats().getCount())__		assertEquals(1, summary.getEndToEndDurationStats().getCount())__		assertEquals(1, summary.getAlignmentBufferedStats().getCount())___		_		assertNotNull(snapshot.getHistory().getLatestCompletedCheckpoint())__		assertEquals(0, snapshot.getHistory().getLatestCompletedCheckpoint().getCheckpointId())__	};tests,that,the,number,of,remembered,checkpoints,configuration,is,respected;test,public,void,test,tracker,without,history,throws,exception,int,number,of,subtasks,3,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,number,of,subtasks,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,job,checkpointing,settings,class,new,unregistered,metrics,group,pending,checkpoint,stats,pending,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,pending,report,completed,checkpoint,null,checkpoint,stats,snapshot,snapshot,tracker,create,snapshot,assert,false,snapshot,get,history,get,checkpoints,iterator,has,next,checkpoint,stats,counts,counts,snapshot,get,counts,assert,equals,1,counts,get,number,of,completed,checkpoints,assert,equals,1,counts,get,total,number,of,checkpoints,completed,checkpoint,stats,summary,summary,snapshot,get,summary,stats,assert,equals,1,summary,get,state,size,stats,get,count,assert,equals,1,summary,get,end,to,end,duration,stats,get,count,assert,equals,1,summary,get,alignment,buffered,stats,get,count,assert,not,null,snapshot,get,history,get,latest,completed,checkpoint,assert,equals,0,snapshot,get,history,get,latest,completed,checkpoint,get,checkpoint,id
CheckpointStatsTrackerTest -> @Test 	public void testTrackerWithoutHistory() throws Exception;1506590912;Tests that the number of remembered checkpoints configuration_is respected.;@Test_	public void testTrackerWithoutHistory() throws Exception {_		int numberOfSubtasks = 3___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(numberOfSubtasks)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(JobCheckpointingSettings.class),_			new UnregisteredMetricsGroup())___		PendingCheckpointStats pending = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		pending.reportCompletedCheckpoint(null)___		CheckpointStatsSnapshot snapshot = tracker.createSnapshot()__		_		assertFalse(snapshot.getHistory().getCheckpoints().iterator().hasNext())___		_		CheckpointStatsCounts counts = snapshot.getCounts()__		assertEquals(1, counts.getNumberOfCompletedCheckpoints())__		assertEquals(1, counts.getTotalNumberOfCheckpoints())___		_		CompletedCheckpointStatsSummary summary = snapshot.getSummaryStats()__		assertEquals(1, summary.getStateSizeStats().getCount())__		assertEquals(1, summary.getEndToEndDurationStats().getCount())__		assertEquals(1, summary.getAlignmentBufferedStats().getCount())___		_		assertNotNull(snapshot.getHistory().getLatestCompletedCheckpoint())__		assertEquals(0, snapshot.getHistory().getLatestCompletedCheckpoint().getCheckpointId())__	};tests,that,the,number,of,remembered,checkpoints,configuration,is,respected;test,public,void,test,tracker,without,history,throws,exception,int,number,of,subtasks,3,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,number,of,subtasks,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,job,checkpointing,settings,class,new,unregistered,metrics,group,pending,checkpoint,stats,pending,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,pending,report,completed,checkpoint,null,checkpoint,stats,snapshot,snapshot,tracker,create,snapshot,assert,false,snapshot,get,history,get,checkpoints,iterator,has,next,checkpoint,stats,counts,counts,snapshot,get,counts,assert,equals,1,counts,get,number,of,completed,checkpoints,assert,equals,1,counts,get,total,number,of,checkpoints,completed,checkpoint,stats,summary,summary,snapshot,get,summary,stats,assert,equals,1,summary,get,state,size,stats,get,count,assert,equals,1,summary,get,end,to,end,duration,stats,get,count,assert,equals,1,summary,get,alignment,buffered,stats,get,count,assert,not,null,snapshot,get,history,get,latest,completed,checkpoint,assert,equals,0,snapshot,get,history,get,latest,completed,checkpoint,get,checkpoint,id
CheckpointStatsTrackerTest -> @Test 	public void testTrackerWithoutHistory() throws Exception;1506618381;Tests that the number of remembered checkpoints configuration_is respected.;@Test_	public void testTrackerWithoutHistory() throws Exception {_		int numberOfSubtasks = 3___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(numberOfSubtasks)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			new UnregisteredMetricsGroup())___		PendingCheckpointStats pending = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		pending.reportCompletedCheckpoint(null)___		CheckpointStatsSnapshot snapshot = tracker.createSnapshot()__		_		assertFalse(snapshot.getHistory().getCheckpoints().iterator().hasNext())___		_		CheckpointStatsCounts counts = snapshot.getCounts()__		assertEquals(1, counts.getNumberOfCompletedCheckpoints())__		assertEquals(1, counts.getTotalNumberOfCheckpoints())___		_		CompletedCheckpointStatsSummary summary = snapshot.getSummaryStats()__		assertEquals(1, summary.getStateSizeStats().getCount())__		assertEquals(1, summary.getEndToEndDurationStats().getCount())__		assertEquals(1, summary.getAlignmentBufferedStats().getCount())___		_		assertNotNull(snapshot.getHistory().getLatestCompletedCheckpoint())__		assertEquals(0, snapshot.getHistory().getLatestCompletedCheckpoint().getCheckpointId())__	};tests,that,the,number,of,remembered,checkpoints,configuration,is,respected;test,public,void,test,tracker,without,history,throws,exception,int,number,of,subtasks,3,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,number,of,subtasks,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,new,unregistered,metrics,group,pending,checkpoint,stats,pending,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,pending,report,completed,checkpoint,null,checkpoint,stats,snapshot,snapshot,tracker,create,snapshot,assert,false,snapshot,get,history,get,checkpoints,iterator,has,next,checkpoint,stats,counts,counts,snapshot,get,counts,assert,equals,1,counts,get,number,of,completed,checkpoints,assert,equals,1,counts,get,total,number,of,checkpoints,completed,checkpoint,stats,summary,summary,snapshot,get,summary,stats,assert,equals,1,summary,get,state,size,stats,get,count,assert,equals,1,summary,get,end,to,end,duration,stats,get,count,assert,equals,1,summary,get,alignment,buffered,stats,get,count,assert,not,null,snapshot,get,history,get,latest,completed,checkpoint,assert,equals,0,snapshot,get,history,get,latest,completed,checkpoint,get,checkpoint,id
CheckpointStatsTrackerTest -> @Test 	public void testTrackerWithoutHistory() throws Exception;1513075960;Tests that the number of remembered checkpoints configuration_is respected.;@Test_	public void testTrackerWithoutHistory() throws Exception {_		int numberOfSubtasks = 3___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(numberOfSubtasks)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			new UnregisteredMetricsGroup())___		PendingCheckpointStats pending = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		pending.reportCompletedCheckpoint(null)___		CheckpointStatsSnapshot snapshot = tracker.createSnapshot()__		_		assertFalse(snapshot.getHistory().getCheckpoints().iterator().hasNext())___		_		CheckpointStatsCounts counts = snapshot.getCounts()__		assertEquals(1, counts.getNumberOfCompletedCheckpoints())__		assertEquals(1, counts.getTotalNumberOfCheckpoints())___		_		CompletedCheckpointStatsSummary summary = snapshot.getSummaryStats()__		assertEquals(1, summary.getStateSizeStats().getCount())__		assertEquals(1, summary.getEndToEndDurationStats().getCount())__		assertEquals(1, summary.getAlignmentBufferedStats().getCount())___		_		assertNotNull(snapshot.getHistory().getLatestCompletedCheckpoint())__		assertEquals(0, snapshot.getHistory().getLatestCompletedCheckpoint().getCheckpointId())__	};tests,that,the,number,of,remembered,checkpoints,configuration,is,respected;test,public,void,test,tracker,without,history,throws,exception,int,number,of,subtasks,3,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,number,of,subtasks,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,new,unregistered,metrics,group,pending,checkpoint,stats,pending,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,pending,report,completed,checkpoint,null,checkpoint,stats,snapshot,snapshot,tracker,create,snapshot,assert,false,snapshot,get,history,get,checkpoints,iterator,has,next,checkpoint,stats,counts,counts,snapshot,get,counts,assert,equals,1,counts,get,number,of,completed,checkpoints,assert,equals,1,counts,get,total,number,of,checkpoints,completed,checkpoint,stats,summary,summary,snapshot,get,summary,stats,assert,equals,1,summary,get,state,size,stats,get,count,assert,equals,1,summary,get,end,to,end,duration,stats,get,count,assert,equals,1,summary,get,alignment,buffered,stats,get,count,assert,not,null,snapshot,get,history,get,latest,completed,checkpoint,assert,equals,0,snapshot,get,history,get,latest,completed,checkpoint,get,checkpoint,id
CheckpointStatsTrackerTest -> @Test 	public void testTrackerWithoutHistory() throws Exception;1513102157;Tests that the number of remembered checkpoints configuration_is respected.;@Test_	public void testTrackerWithoutHistory() throws Exception {_		int numberOfSubtasks = 3___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(numberOfSubtasks)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			new UnregisteredMetricsGroup())___		PendingCheckpointStats pending = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		pending.reportCompletedCheckpoint(null)___		CheckpointStatsSnapshot snapshot = tracker.createSnapshot()__		_		assertFalse(snapshot.getHistory().getCheckpoints().iterator().hasNext())___		_		CheckpointStatsCounts counts = snapshot.getCounts()__		assertEquals(1, counts.getNumberOfCompletedCheckpoints())__		assertEquals(1, counts.getTotalNumberOfCheckpoints())___		_		CompletedCheckpointStatsSummary summary = snapshot.getSummaryStats()__		assertEquals(1, summary.getStateSizeStats().getCount())__		assertEquals(1, summary.getEndToEndDurationStats().getCount())__		assertEquals(1, summary.getAlignmentBufferedStats().getCount())___		_		assertNotNull(snapshot.getHistory().getLatestCompletedCheckpoint())__		assertEquals(0, snapshot.getHistory().getLatestCompletedCheckpoint().getCheckpointId())__	};tests,that,the,number,of,remembered,checkpoints,configuration,is,respected;test,public,void,test,tracker,without,history,throws,exception,int,number,of,subtasks,3,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,number,of,subtasks,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,new,unregistered,metrics,group,pending,checkpoint,stats,pending,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,pending,report,completed,checkpoint,null,checkpoint,stats,snapshot,snapshot,tracker,create,snapshot,assert,false,snapshot,get,history,get,checkpoints,iterator,has,next,checkpoint,stats,counts,counts,snapshot,get,counts,assert,equals,1,counts,get,number,of,completed,checkpoints,assert,equals,1,counts,get,total,number,of,checkpoints,completed,checkpoint,stats,summary,summary,snapshot,get,summary,stats,assert,equals,1,summary,get,state,size,stats,get,count,assert,equals,1,summary,get,end,to,end,duration,stats,get,count,assert,equals,1,summary,get,alignment,buffered,stats,get,count,assert,not,null,snapshot,get,history,get,latest,completed,checkpoint,assert,equals,0,snapshot,get,history,get,latest,completed,checkpoint,get,checkpoint,id
CheckpointStatsTrackerTest -> @Test 	public void testTrackerWithoutHistory() throws Exception;1516295283;Tests that the number of remembered checkpoints configuration_is respected.;@Test_	public void testTrackerWithoutHistory() throws Exception {_		int numberOfSubtasks = 3___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(numberOfSubtasks)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			new UnregisteredMetricsGroup())___		PendingCheckpointStats pending = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forCheckpoint(CheckpointRetentionPolicy.NEVER_RETAIN_AFTER_TERMINATION))___		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		pending.reportCompletedCheckpoint(null)___		CheckpointStatsSnapshot snapshot = tracker.createSnapshot()__		_		assertFalse(snapshot.getHistory().getCheckpoints().iterator().hasNext())___		_		CheckpointStatsCounts counts = snapshot.getCounts()__		assertEquals(1, counts.getNumberOfCompletedCheckpoints())__		assertEquals(1, counts.getTotalNumberOfCheckpoints())___		_		CompletedCheckpointStatsSummary summary = snapshot.getSummaryStats()__		assertEquals(1, summary.getStateSizeStats().getCount())__		assertEquals(1, summary.getEndToEndDurationStats().getCount())__		assertEquals(1, summary.getAlignmentBufferedStats().getCount())___		_		assertNotNull(snapshot.getHistory().getLatestCompletedCheckpoint())__		assertEquals(0, snapshot.getHistory().getLatestCompletedCheckpoint().getCheckpointId())__	};tests,that,the,number,of,remembered,checkpoints,configuration,is,respected;test,public,void,test,tracker,without,history,throws,exception,int,number,of,subtasks,3,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,number,of,subtasks,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,new,unregistered,metrics,group,pending,checkpoint,stats,pending,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,checkpoint,checkpoint,retention,policy,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,pending,report,completed,checkpoint,null,checkpoint,stats,snapshot,snapshot,tracker,create,snapshot,assert,false,snapshot,get,history,get,checkpoints,iterator,has,next,checkpoint,stats,counts,counts,snapshot,get,counts,assert,equals,1,counts,get,number,of,completed,checkpoints,assert,equals,1,counts,get,total,number,of,checkpoints,completed,checkpoint,stats,summary,summary,snapshot,get,summary,stats,assert,equals,1,summary,get,state,size,stats,get,count,assert,equals,1,summary,get,end,to,end,duration,stats,get,count,assert,equals,1,summary,get,alignment,buffered,stats,get,count,assert,not,null,snapshot,get,history,get,latest,completed,checkpoint,assert,equals,0,snapshot,get,history,get,latest,completed,checkpoint,get,checkpoint,id
CheckpointStatsTrackerTest -> @Test 	public void testCreateSnapshot() throws Exception;1484038132;Tests that snapshots are only created if a new snapshot has been reported_or updated.;@Test_	public void testCreateSnapshot() throws Exception {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			10,_			Collections.singletonList(jobVertex),_			mock(JobSnapshottingSettings.class),_			new UnregisteredMetricsGroup())___		CheckpointStatsSnapshot snapshot1 = tracker.createSnapshot()___		_		PendingCheckpointStats pending = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))___		CheckpointStatsSnapshot snapshot2 = tracker.createSnapshot()__		assertNotEquals(snapshot1, snapshot2)___		assertEquals(snapshot2, tracker.createSnapshot())___		_		pending.reportCompletedCheckpoint(null)___		CheckpointStatsSnapshot snapshot3 = tracker.createSnapshot()__		assertNotEquals(snapshot2, snapshot3)___		_		tracker.reportRestoredCheckpoint(new RestoredCheckpointStats(12, CheckpointProperties.forStandardCheckpoint(), 12, null))___		CheckpointStatsSnapshot snapshot4 = tracker.createSnapshot()__		assertNotEquals(snapshot3, snapshot4)__		assertEquals(snapshot4, tracker.createSnapshot())__	};tests,that,snapshots,are,only,created,if,a,new,snapshot,has,been,reported,or,updated;test,public,void,test,create,snapshot,throws,exception,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,10,collections,singleton,list,job,vertex,mock,job,snapshotting,settings,class,new,unregistered,metrics,group,checkpoint,stats,snapshot,snapshot1,tracker,create,snapshot,pending,checkpoint,stats,pending,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,checkpoint,stats,snapshot,snapshot2,tracker,create,snapshot,assert,not,equals,snapshot1,snapshot2,assert,equals,snapshot2,tracker,create,snapshot,pending,report,completed,checkpoint,null,checkpoint,stats,snapshot,snapshot3,tracker,create,snapshot,assert,not,equals,snapshot2,snapshot3,tracker,report,restored,checkpoint,new,restored,checkpoint,stats,12,checkpoint,properties,for,standard,checkpoint,12,null,checkpoint,stats,snapshot,snapshot4,tracker,create,snapshot,assert,not,equals,snapshot3,snapshot4,assert,equals,snapshot4,tracker,create,snapshot
CheckpointStatsTrackerTest -> @Test 	public void testCreateSnapshot() throws Exception;1488304933;Tests that snapshots are only created if a new snapshot has been reported_or updated.;@Test_	public void testCreateSnapshot() throws Exception {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			10,_			Collections.singletonList(jobVertex),_			mock(JobSnapshottingSettings.class),_			new UnregisteredMetricsGroup())___		CheckpointStatsSnapshot snapshot1 = tracker.createSnapshot()___		_		PendingCheckpointStats pending = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))___		CheckpointStatsSnapshot snapshot2 = tracker.createSnapshot()__		assertNotEquals(snapshot1, snapshot2)___		assertEquals(snapshot2, tracker.createSnapshot())___		_		pending.reportCompletedCheckpoint(null)___		CheckpointStatsSnapshot snapshot3 = tracker.createSnapshot()__		assertNotEquals(snapshot2, snapshot3)___		_		tracker.reportRestoredCheckpoint(new RestoredCheckpointStats(12, CheckpointProperties.forStandardCheckpoint(), 12, null))___		CheckpointStatsSnapshot snapshot4 = tracker.createSnapshot()__		assertNotEquals(snapshot3, snapshot4)__		assertEquals(snapshot4, tracker.createSnapshot())__	};tests,that,snapshots,are,only,created,if,a,new,snapshot,has,been,reported,or,updated;test,public,void,test,create,snapshot,throws,exception,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,10,collections,singleton,list,job,vertex,mock,job,snapshotting,settings,class,new,unregistered,metrics,group,checkpoint,stats,snapshot,snapshot1,tracker,create,snapshot,pending,checkpoint,stats,pending,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,checkpoint,stats,snapshot,snapshot2,tracker,create,snapshot,assert,not,equals,snapshot1,snapshot2,assert,equals,snapshot2,tracker,create,snapshot,pending,report,completed,checkpoint,null,checkpoint,stats,snapshot,snapshot3,tracker,create,snapshot,assert,not,equals,snapshot2,snapshot3,tracker,report,restored,checkpoint,new,restored,checkpoint,stats,12,checkpoint,properties,for,standard,checkpoint,12,null,checkpoint,stats,snapshot,snapshot4,tracker,create,snapshot,assert,not,equals,snapshot3,snapshot4,assert,equals,snapshot4,tracker,create,snapshot
CheckpointStatsTrackerTest -> @Test 	public void testCreateSnapshot() throws Exception;1490214056;Tests that snapshots are only created if a new snapshot has been reported_or updated.;@Test_	public void testCreateSnapshot() throws Exception {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			10,_			Collections.singletonList(jobVertex),_			mock(JobSnapshottingSettings.class),_			new UnregisteredMetricsGroup())___		CheckpointStatsSnapshot snapshot1 = tracker.createSnapshot()___		_		PendingCheckpointStats pending = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))___		CheckpointStatsSnapshot snapshot2 = tracker.createSnapshot()__		assertNotEquals(snapshot1, snapshot2)___		assertEquals(snapshot2, tracker.createSnapshot())___		_		pending.reportCompletedCheckpoint(null)___		CheckpointStatsSnapshot snapshot3 = tracker.createSnapshot()__		assertNotEquals(snapshot2, snapshot3)___		_		tracker.reportRestoredCheckpoint(new RestoredCheckpointStats(12, CheckpointProperties.forStandardCheckpoint(), 12, null))___		CheckpointStatsSnapshot snapshot4 = tracker.createSnapshot()__		assertNotEquals(snapshot3, snapshot4)__		assertEquals(snapshot4, tracker.createSnapshot())__	};tests,that,snapshots,are,only,created,if,a,new,snapshot,has,been,reported,or,updated;test,public,void,test,create,snapshot,throws,exception,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,10,collections,singleton,list,job,vertex,mock,job,snapshotting,settings,class,new,unregistered,metrics,group,checkpoint,stats,snapshot,snapshot1,tracker,create,snapshot,pending,checkpoint,stats,pending,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,checkpoint,stats,snapshot,snapshot2,tracker,create,snapshot,assert,not,equals,snapshot1,snapshot2,assert,equals,snapshot2,tracker,create,snapshot,pending,report,completed,checkpoint,null,checkpoint,stats,snapshot,snapshot3,tracker,create,snapshot,assert,not,equals,snapshot2,snapshot3,tracker,report,restored,checkpoint,new,restored,checkpoint,stats,12,checkpoint,properties,for,standard,checkpoint,12,null,checkpoint,stats,snapshot,snapshot4,tracker,create,snapshot,assert,not,equals,snapshot3,snapshot4,assert,equals,snapshot4,tracker,create,snapshot
CheckpointStatsTrackerTest -> @Test 	public void testCreateSnapshot() throws Exception;1492678790;Tests that snapshots are only created if a new snapshot has been reported_or updated.;@Test_	public void testCreateSnapshot() throws Exception {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			10,_			Collections.singletonList(jobVertex),_			mock(JobCheckpointingSettings.class),_			new UnregisteredMetricsGroup())___		CheckpointStatsSnapshot snapshot1 = tracker.createSnapshot()___		_		PendingCheckpointStats pending = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))___		CheckpointStatsSnapshot snapshot2 = tracker.createSnapshot()__		assertNotEquals(snapshot1, snapshot2)___		assertEquals(snapshot2, tracker.createSnapshot())___		_		pending.reportCompletedCheckpoint(null)___		CheckpointStatsSnapshot snapshot3 = tracker.createSnapshot()__		assertNotEquals(snapshot2, snapshot3)___		_		tracker.reportRestoredCheckpoint(new RestoredCheckpointStats(12, CheckpointProperties.forStandardCheckpoint(), 12, null))___		CheckpointStatsSnapshot snapshot4 = tracker.createSnapshot()__		assertNotEquals(snapshot3, snapshot4)__		assertEquals(snapshot4, tracker.createSnapshot())__	};tests,that,snapshots,are,only,created,if,a,new,snapshot,has,been,reported,or,updated;test,public,void,test,create,snapshot,throws,exception,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,10,collections,singleton,list,job,vertex,mock,job,checkpointing,settings,class,new,unregistered,metrics,group,checkpoint,stats,snapshot,snapshot1,tracker,create,snapshot,pending,checkpoint,stats,pending,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,checkpoint,stats,snapshot,snapshot2,tracker,create,snapshot,assert,not,equals,snapshot1,snapshot2,assert,equals,snapshot2,tracker,create,snapshot,pending,report,completed,checkpoint,null,checkpoint,stats,snapshot,snapshot3,tracker,create,snapshot,assert,not,equals,snapshot2,snapshot3,tracker,report,restored,checkpoint,new,restored,checkpoint,stats,12,checkpoint,properties,for,standard,checkpoint,12,null,checkpoint,stats,snapshot,snapshot4,tracker,create,snapshot,assert,not,equals,snapshot3,snapshot4,assert,equals,snapshot4,tracker,create,snapshot
CheckpointStatsTrackerTest -> @Test 	public void testCreateSnapshot() throws Exception;1506590912;Tests that snapshots are only created if a new snapshot has been reported_or updated.;@Test_	public void testCreateSnapshot() throws Exception {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			10,_			Collections.singletonList(jobVertex),_			mock(JobCheckpointingSettings.class),_			new UnregisteredMetricsGroup())___		CheckpointStatsSnapshot snapshot1 = tracker.createSnapshot()___		_		PendingCheckpointStats pending = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))___		CheckpointStatsSnapshot snapshot2 = tracker.createSnapshot()__		assertNotEquals(snapshot1, snapshot2)___		assertEquals(snapshot2, tracker.createSnapshot())___		_		pending.reportCompletedCheckpoint(null)___		CheckpointStatsSnapshot snapshot3 = tracker.createSnapshot()__		assertNotEquals(snapshot2, snapshot3)___		_		tracker.reportRestoredCheckpoint(new RestoredCheckpointStats(12, CheckpointProperties.forStandardCheckpoint(), 12, null))___		CheckpointStatsSnapshot snapshot4 = tracker.createSnapshot()__		assertNotEquals(snapshot3, snapshot4)__		assertEquals(snapshot4, tracker.createSnapshot())__	};tests,that,snapshots,are,only,created,if,a,new,snapshot,has,been,reported,or,updated;test,public,void,test,create,snapshot,throws,exception,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,10,collections,singleton,list,job,vertex,mock,job,checkpointing,settings,class,new,unregistered,metrics,group,checkpoint,stats,snapshot,snapshot1,tracker,create,snapshot,pending,checkpoint,stats,pending,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,checkpoint,stats,snapshot,snapshot2,tracker,create,snapshot,assert,not,equals,snapshot1,snapshot2,assert,equals,snapshot2,tracker,create,snapshot,pending,report,completed,checkpoint,null,checkpoint,stats,snapshot,snapshot3,tracker,create,snapshot,assert,not,equals,snapshot2,snapshot3,tracker,report,restored,checkpoint,new,restored,checkpoint,stats,12,checkpoint,properties,for,standard,checkpoint,12,null,checkpoint,stats,snapshot,snapshot4,tracker,create,snapshot,assert,not,equals,snapshot3,snapshot4,assert,equals,snapshot4,tracker,create,snapshot
CheckpointStatsTrackerTest -> @Test 	public void testCreateSnapshot() throws Exception;1506618381;Tests that snapshots are only created if a new snapshot has been reported_or updated.;@Test_	public void testCreateSnapshot() throws Exception {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			10,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			new UnregisteredMetricsGroup())___		CheckpointStatsSnapshot snapshot1 = tracker.createSnapshot()___		_		PendingCheckpointStats pending = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))___		CheckpointStatsSnapshot snapshot2 = tracker.createSnapshot()__		assertNotEquals(snapshot1, snapshot2)___		assertEquals(snapshot2, tracker.createSnapshot())___		_		pending.reportCompletedCheckpoint(null)___		CheckpointStatsSnapshot snapshot3 = tracker.createSnapshot()__		assertNotEquals(snapshot2, snapshot3)___		_		tracker.reportRestoredCheckpoint(new RestoredCheckpointStats(12, CheckpointProperties.forStandardCheckpoint(), 12, null))___		CheckpointStatsSnapshot snapshot4 = tracker.createSnapshot()__		assertNotEquals(snapshot3, snapshot4)__		assertEquals(snapshot4, tracker.createSnapshot())__	};tests,that,snapshots,are,only,created,if,a,new,snapshot,has,been,reported,or,updated;test,public,void,test,create,snapshot,throws,exception,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,10,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,new,unregistered,metrics,group,checkpoint,stats,snapshot,snapshot1,tracker,create,snapshot,pending,checkpoint,stats,pending,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,checkpoint,stats,snapshot,snapshot2,tracker,create,snapshot,assert,not,equals,snapshot1,snapshot2,assert,equals,snapshot2,tracker,create,snapshot,pending,report,completed,checkpoint,null,checkpoint,stats,snapshot,snapshot3,tracker,create,snapshot,assert,not,equals,snapshot2,snapshot3,tracker,report,restored,checkpoint,new,restored,checkpoint,stats,12,checkpoint,properties,for,standard,checkpoint,12,null,checkpoint,stats,snapshot,snapshot4,tracker,create,snapshot,assert,not,equals,snapshot3,snapshot4,assert,equals,snapshot4,tracker,create,snapshot
CheckpointStatsTrackerTest -> @Test 	public void testCreateSnapshot() throws Exception;1513075960;Tests that snapshots are only created if a new snapshot has been reported_or updated.;@Test_	public void testCreateSnapshot() throws Exception {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			10,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			new UnregisteredMetricsGroup())___		CheckpointStatsSnapshot snapshot1 = tracker.createSnapshot()___		_		PendingCheckpointStats pending = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))___		CheckpointStatsSnapshot snapshot2 = tracker.createSnapshot()__		assertNotEquals(snapshot1, snapshot2)___		assertEquals(snapshot2, tracker.createSnapshot())___		_		pending.reportCompletedCheckpoint(null)___		CheckpointStatsSnapshot snapshot3 = tracker.createSnapshot()__		assertNotEquals(snapshot2, snapshot3)___		_		tracker.reportRestoredCheckpoint(new RestoredCheckpointStats(12, CheckpointProperties.forStandardCheckpoint(), 12, null))___		CheckpointStatsSnapshot snapshot4 = tracker.createSnapshot()__		assertNotEquals(snapshot3, snapshot4)__		assertEquals(snapshot4, tracker.createSnapshot())__	};tests,that,snapshots,are,only,created,if,a,new,snapshot,has,been,reported,or,updated;test,public,void,test,create,snapshot,throws,exception,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,10,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,new,unregistered,metrics,group,checkpoint,stats,snapshot,snapshot1,tracker,create,snapshot,pending,checkpoint,stats,pending,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,checkpoint,stats,snapshot,snapshot2,tracker,create,snapshot,assert,not,equals,snapshot1,snapshot2,assert,equals,snapshot2,tracker,create,snapshot,pending,report,completed,checkpoint,null,checkpoint,stats,snapshot,snapshot3,tracker,create,snapshot,assert,not,equals,snapshot2,snapshot3,tracker,report,restored,checkpoint,new,restored,checkpoint,stats,12,checkpoint,properties,for,standard,checkpoint,12,null,checkpoint,stats,snapshot,snapshot4,tracker,create,snapshot,assert,not,equals,snapshot3,snapshot4,assert,equals,snapshot4,tracker,create,snapshot
CheckpointStatsTrackerTest -> @Test 	public void testCreateSnapshot() throws Exception;1513102157;Tests that snapshots are only created if a new snapshot has been reported_or updated.;@Test_	public void testCreateSnapshot() throws Exception {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			10,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			new UnregisteredMetricsGroup())___		CheckpointStatsSnapshot snapshot1 = tracker.createSnapshot()___		_		PendingCheckpointStats pending = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))___		CheckpointStatsSnapshot snapshot2 = tracker.createSnapshot()__		assertNotEquals(snapshot1, snapshot2)___		assertEquals(snapshot2, tracker.createSnapshot())___		_		pending.reportCompletedCheckpoint(null)___		CheckpointStatsSnapshot snapshot3 = tracker.createSnapshot()__		assertNotEquals(snapshot2, snapshot3)___		_		tracker.reportRestoredCheckpoint(new RestoredCheckpointStats(12, CheckpointProperties.forStandardCheckpoint(), 12, null))___		CheckpointStatsSnapshot snapshot4 = tracker.createSnapshot()__		assertNotEquals(snapshot3, snapshot4)__		assertEquals(snapshot4, tracker.createSnapshot())__	};tests,that,snapshots,are,only,created,if,a,new,snapshot,has,been,reported,or,updated;test,public,void,test,create,snapshot,throws,exception,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,10,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,new,unregistered,metrics,group,checkpoint,stats,snapshot,snapshot1,tracker,create,snapshot,pending,checkpoint,stats,pending,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,checkpoint,stats,snapshot,snapshot2,tracker,create,snapshot,assert,not,equals,snapshot1,snapshot2,assert,equals,snapshot2,tracker,create,snapshot,pending,report,completed,checkpoint,null,checkpoint,stats,snapshot,snapshot3,tracker,create,snapshot,assert,not,equals,snapshot2,snapshot3,tracker,report,restored,checkpoint,new,restored,checkpoint,stats,12,checkpoint,properties,for,standard,checkpoint,12,null,checkpoint,stats,snapshot,snapshot4,tracker,create,snapshot,assert,not,equals,snapshot3,snapshot4,assert,equals,snapshot4,tracker,create,snapshot
CheckpointStatsTrackerTest -> @Test 	public void testCreateSnapshot() throws Exception;1516295283;Tests that snapshots are only created if a new snapshot has been reported_or updated.;@Test_	public void testCreateSnapshot() throws Exception {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			10,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			new UnregisteredMetricsGroup())___		CheckpointStatsSnapshot snapshot1 = tracker.createSnapshot()___		_		PendingCheckpointStats pending = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forCheckpoint(CheckpointRetentionPolicy.NEVER_RETAIN_AFTER_TERMINATION))___		pending.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))___		CheckpointStatsSnapshot snapshot2 = tracker.createSnapshot()__		assertNotEquals(snapshot1, snapshot2)___		assertEquals(snapshot2, tracker.createSnapshot())___		_		pending.reportCompletedCheckpoint(null)___		CheckpointStatsSnapshot snapshot3 = tracker.createSnapshot()__		assertNotEquals(snapshot2, snapshot3)___		_		tracker.reportRestoredCheckpoint(new RestoredCheckpointStats(12, CheckpointProperties.forCheckpoint(CheckpointRetentionPolicy.NEVER_RETAIN_AFTER_TERMINATION), 12, null))___		CheckpointStatsSnapshot snapshot4 = tracker.createSnapshot()__		assertNotEquals(snapshot3, snapshot4)__		assertEquals(snapshot4, tracker.createSnapshot())__	};tests,that,snapshots,are,only,created,if,a,new,snapshot,has,been,reported,or,updated;test,public,void,test,create,snapshot,throws,exception,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,10,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,new,unregistered,metrics,group,checkpoint,stats,snapshot,snapshot1,tracker,create,snapshot,pending,checkpoint,stats,pending,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,checkpoint,checkpoint,retention,policy,pending,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,checkpoint,stats,snapshot,snapshot2,tracker,create,snapshot,assert,not,equals,snapshot1,snapshot2,assert,equals,snapshot2,tracker,create,snapshot,pending,report,completed,checkpoint,null,checkpoint,stats,snapshot,snapshot3,tracker,create,snapshot,assert,not,equals,snapshot2,snapshot3,tracker,report,restored,checkpoint,new,restored,checkpoint,stats,12,checkpoint,properties,for,checkpoint,checkpoint,retention,policy,12,null,checkpoint,stats,snapshot,snapshot4,tracker,create,snapshot,assert,not,equals,snapshot3,snapshot4,assert,equals,snapshot4,tracker,create,snapshot
CheckpointStatsTrackerTest -> static CheckpointStatsTracker createTestTracker();1484038132;Creates a "disabled" checkpoint tracker for tests.;static CheckpointStatsTracker createTestTracker() {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		return new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(JobSnapshottingSettings.class),_			new UnregisteredMetricsGroup())__	};creates,a,disabled,checkpoint,tracker,for,tests;static,checkpoint,stats,tracker,create,test,tracker,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,return,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,job,snapshotting,settings,class,new,unregistered,metrics,group
CheckpointStatsTrackerTest -> static CheckpointStatsTracker createTestTracker();1488304933;Creates a "disabled" checkpoint tracker for tests.;static CheckpointStatsTracker createTestTracker() {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		return new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(JobSnapshottingSettings.class),_			new UnregisteredMetricsGroup())__	};creates,a,disabled,checkpoint,tracker,for,tests;static,checkpoint,stats,tracker,create,test,tracker,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,return,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,job,snapshotting,settings,class,new,unregistered,metrics,group
CheckpointStatsTrackerTest -> static CheckpointStatsTracker createTestTracker();1490214056;Creates a "disabled" checkpoint tracker for tests.;static CheckpointStatsTracker createTestTracker() {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		return new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(JobSnapshottingSettings.class),_			new UnregisteredMetricsGroup())__	};creates,a,disabled,checkpoint,tracker,for,tests;static,checkpoint,stats,tracker,create,test,tracker,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,return,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,job,snapshotting,settings,class,new,unregistered,metrics,group
CheckpointStatsTrackerTest -> static CheckpointStatsTracker createTestTracker();1492678790;Creates a "disabled" checkpoint tracker for tests.;static CheckpointStatsTracker createTestTracker() {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		return new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(JobCheckpointingSettings.class),_			new UnregisteredMetricsGroup())__	};creates,a,disabled,checkpoint,tracker,for,tests;static,checkpoint,stats,tracker,create,test,tracker,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,return,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,job,checkpointing,settings,class,new,unregistered,metrics,group
CheckpointStatsTrackerTest -> static CheckpointStatsTracker createTestTracker();1506590912;Creates a "disabled" checkpoint tracker for tests.;static CheckpointStatsTracker createTestTracker() {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		return new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(JobCheckpointingSettings.class),_			new UnregisteredMetricsGroup())__	};creates,a,disabled,checkpoint,tracker,for,tests;static,checkpoint,stats,tracker,create,test,tracker,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,return,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,job,checkpointing,settings,class,new,unregistered,metrics,group
CheckpointStatsTrackerTest -> static CheckpointStatsTracker createTestTracker();1506618381;Creates a "disabled" checkpoint tracker for tests.;static CheckpointStatsTracker createTestTracker() {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		return new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			new UnregisteredMetricsGroup())__	};creates,a,disabled,checkpoint,tracker,for,tests;static,checkpoint,stats,tracker,create,test,tracker,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,return,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,new,unregistered,metrics,group
CheckpointStatsTrackerTest -> static CheckpointStatsTracker createTestTracker();1513075960;Creates a "disabled" checkpoint tracker for tests.;static CheckpointStatsTracker createTestTracker() {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		return new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			new UnregisteredMetricsGroup())__	};creates,a,disabled,checkpoint,tracker,for,tests;static,checkpoint,stats,tracker,create,test,tracker,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,return,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,new,unregistered,metrics,group
CheckpointStatsTrackerTest -> static CheckpointStatsTracker createTestTracker();1513102157;Creates a "disabled" checkpoint tracker for tests.;static CheckpointStatsTracker createTestTracker() {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		return new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			new UnregisteredMetricsGroup())__	};creates,a,disabled,checkpoint,tracker,for,tests;static,checkpoint,stats,tracker,create,test,tracker,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,return,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,new,unregistered,metrics,group
CheckpointStatsTrackerTest -> static CheckpointStatsTracker createTestTracker();1516295283;Creates a "disabled" checkpoint tracker for tests.;static CheckpointStatsTracker createTestTracker() {_		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		return new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			new UnregisteredMetricsGroup())__	};creates,a,disabled,checkpoint,tracker,for,tests;static,checkpoint,stats,tracker,create,test,tracker,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,return,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,new,unregistered,metrics,group
CheckpointStatsTrackerTest -> @Test 	public void testCheckpointTracking() throws Exception;1484038132;Tests tracking of checkpoints.;@Test_	public void testCheckpointTracking() throws Exception {_		int numberOfSubtasks = 3___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(numberOfSubtasks)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			10,_			Collections.singletonList(jobVertex),_			mock(JobSnapshottingSettings.class),_			new UnregisteredMetricsGroup())___		_		PendingCheckpointStats completed1 = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		completed1.reportCompletedCheckpoint(null)___		_		PendingCheckpointStats failed = tracker.reportPendingCheckpoint(_			1,_			1,_			CheckpointProperties.forStandardCheckpoint())___		failed.reportFailedCheckpoint(12, null)___		_		PendingCheckpointStats savepoint = tracker.reportPendingCheckpoint(_			2,_			1,_			CheckpointProperties.forStandardSavepoint())___		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		savepoint.reportCompletedCheckpoint(null)___		_		PendingCheckpointStats inProgress = tracker.reportPendingCheckpoint(_			3,_			1,_			CheckpointProperties.forStandardCheckpoint())___		RestoredCheckpointStats restored = new RestoredCheckpointStats(81, CheckpointProperties.forStandardCheckpoint(), 123, null)__		tracker.reportRestoredCheckpoint(restored)___		CheckpointStatsSnapshot snapshot = tracker.createSnapshot()___		_		CheckpointStatsCounts counts = snapshot.getCounts()__		assertEquals(4, counts.getTotalNumberOfCheckpoints())__		assertEquals(1, counts.getNumberOfInProgressCheckpoints())__		assertEquals(2, counts.getNumberOfCompletedCheckpoints())__		assertEquals(1, counts.getNumberOfFailedCheckpoints())___		_		CompletedCheckpointStatsSummary summary = snapshot.getSummaryStats()__		assertEquals(2, summary.getStateSizeStats().getCount())__		assertEquals(2, summary.getEndToEndDurationStats().getCount())__		assertEquals(2, summary.getAlignmentBufferedStats().getCount())___		_		CheckpointStatsHistory history = snapshot.getHistory()__		Iterator<AbstractCheckpointStats> it = history.getCheckpoints().iterator()___		assertTrue(it.hasNext())__		AbstractCheckpointStats stats = it.next()__		assertEquals(3, stats.getCheckpointId())__		assertTrue(stats.getStatus().isInProgress())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(2, stats.getCheckpointId())__		assertTrue(stats.getStatus().isCompleted())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(1, stats.getCheckpointId())__		assertTrue(stats.getStatus().isFailed())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(0, stats.getCheckpointId())__		assertTrue(stats.getStatus().isCompleted())___		assertFalse(it.hasNext())___		_		assertEquals(completed1.getCheckpointId(), snapshot.getHistory().getLatestCompletedCheckpoint().getCheckpointId())__		assertEquals(savepoint.getCheckpointId(), snapshot.getHistory().getLatestSavepoint().getCheckpointId())__		assertEquals(failed.getCheckpointId(), snapshot.getHistory().getLatestFailedCheckpoint().getCheckpointId())__		assertEquals(restored, snapshot.getLatestRestoredCheckpoint())__	};tests,tracking,of,checkpoints;test,public,void,test,checkpoint,tracking,throws,exception,int,number,of,subtasks,3,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,number,of,subtasks,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,10,collections,singleton,list,job,vertex,mock,job,snapshotting,settings,class,new,unregistered,metrics,group,pending,checkpoint,stats,completed1,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,completed1,report,completed,checkpoint,null,pending,checkpoint,stats,failed,tracker,report,pending,checkpoint,1,1,checkpoint,properties,for,standard,checkpoint,failed,report,failed,checkpoint,12,null,pending,checkpoint,stats,savepoint,tracker,report,pending,checkpoint,2,1,checkpoint,properties,for,standard,savepoint,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,savepoint,report,completed,checkpoint,null,pending,checkpoint,stats,in,progress,tracker,report,pending,checkpoint,3,1,checkpoint,properties,for,standard,checkpoint,restored,checkpoint,stats,restored,new,restored,checkpoint,stats,81,checkpoint,properties,for,standard,checkpoint,123,null,tracker,report,restored,checkpoint,restored,checkpoint,stats,snapshot,snapshot,tracker,create,snapshot,checkpoint,stats,counts,counts,snapshot,get,counts,assert,equals,4,counts,get,total,number,of,checkpoints,assert,equals,1,counts,get,number,of,in,progress,checkpoints,assert,equals,2,counts,get,number,of,completed,checkpoints,assert,equals,1,counts,get,number,of,failed,checkpoints,completed,checkpoint,stats,summary,summary,snapshot,get,summary,stats,assert,equals,2,summary,get,state,size,stats,get,count,assert,equals,2,summary,get,end,to,end,duration,stats,get,count,assert,equals,2,summary,get,alignment,buffered,stats,get,count,checkpoint,stats,history,history,snapshot,get,history,iterator,abstract,checkpoint,stats,it,history,get,checkpoints,iterator,assert,true,it,has,next,abstract,checkpoint,stats,stats,it,next,assert,equals,3,stats,get,checkpoint,id,assert,true,stats,get,status,is,in,progress,assert,true,it,has,next,stats,it,next,assert,equals,2,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed,assert,true,it,has,next,stats,it,next,assert,equals,1,stats,get,checkpoint,id,assert,true,stats,get,status,is,failed,assert,true,it,has,next,stats,it,next,assert,equals,0,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed,assert,false,it,has,next,assert,equals,completed1,get,checkpoint,id,snapshot,get,history,get,latest,completed,checkpoint,get,checkpoint,id,assert,equals,savepoint,get,checkpoint,id,snapshot,get,history,get,latest,savepoint,get,checkpoint,id,assert,equals,failed,get,checkpoint,id,snapshot,get,history,get,latest,failed,checkpoint,get,checkpoint,id,assert,equals,restored,snapshot,get,latest,restored,checkpoint
CheckpointStatsTrackerTest -> @Test 	public void testCheckpointTracking() throws Exception;1488304933;Tests tracking of checkpoints.;@Test_	public void testCheckpointTracking() throws Exception {_		int numberOfSubtasks = 3___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(numberOfSubtasks)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			10,_			Collections.singletonList(jobVertex),_			mock(JobSnapshottingSettings.class),_			new UnregisteredMetricsGroup())___		_		PendingCheckpointStats completed1 = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		completed1.reportCompletedCheckpoint(null)___		_		PendingCheckpointStats failed = tracker.reportPendingCheckpoint(_			1,_			1,_			CheckpointProperties.forStandardCheckpoint())___		failed.reportFailedCheckpoint(12, null)___		_		PendingCheckpointStats savepoint = tracker.reportPendingCheckpoint(_			2,_			1,_			CheckpointProperties.forStandardSavepoint())___		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		savepoint.reportCompletedCheckpoint(null)___		_		PendingCheckpointStats inProgress = tracker.reportPendingCheckpoint(_			3,_			1,_			CheckpointProperties.forStandardCheckpoint())___		RestoredCheckpointStats restored = new RestoredCheckpointStats(81, CheckpointProperties.forStandardCheckpoint(), 123, null)__		tracker.reportRestoredCheckpoint(restored)___		CheckpointStatsSnapshot snapshot = tracker.createSnapshot()___		_		CheckpointStatsCounts counts = snapshot.getCounts()__		assertEquals(4, counts.getTotalNumberOfCheckpoints())__		assertEquals(1, counts.getNumberOfInProgressCheckpoints())__		assertEquals(2, counts.getNumberOfCompletedCheckpoints())__		assertEquals(1, counts.getNumberOfFailedCheckpoints())___		_		CompletedCheckpointStatsSummary summary = snapshot.getSummaryStats()__		assertEquals(2, summary.getStateSizeStats().getCount())__		assertEquals(2, summary.getEndToEndDurationStats().getCount())__		assertEquals(2, summary.getAlignmentBufferedStats().getCount())___		_		CheckpointStatsHistory history = snapshot.getHistory()__		Iterator<AbstractCheckpointStats> it = history.getCheckpoints().iterator()___		assertTrue(it.hasNext())__		AbstractCheckpointStats stats = it.next()__		assertEquals(3, stats.getCheckpointId())__		assertTrue(stats.getStatus().isInProgress())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(2, stats.getCheckpointId())__		assertTrue(stats.getStatus().isCompleted())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(1, stats.getCheckpointId())__		assertTrue(stats.getStatus().isFailed())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(0, stats.getCheckpointId())__		assertTrue(stats.getStatus().isCompleted())___		assertFalse(it.hasNext())___		_		assertEquals(completed1.getCheckpointId(), snapshot.getHistory().getLatestCompletedCheckpoint().getCheckpointId())__		assertEquals(savepoint.getCheckpointId(), snapshot.getHistory().getLatestSavepoint().getCheckpointId())__		assertEquals(failed.getCheckpointId(), snapshot.getHistory().getLatestFailedCheckpoint().getCheckpointId())__		assertEquals(restored, snapshot.getLatestRestoredCheckpoint())__	};tests,tracking,of,checkpoints;test,public,void,test,checkpoint,tracking,throws,exception,int,number,of,subtasks,3,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,number,of,subtasks,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,10,collections,singleton,list,job,vertex,mock,job,snapshotting,settings,class,new,unregistered,metrics,group,pending,checkpoint,stats,completed1,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,completed1,report,completed,checkpoint,null,pending,checkpoint,stats,failed,tracker,report,pending,checkpoint,1,1,checkpoint,properties,for,standard,checkpoint,failed,report,failed,checkpoint,12,null,pending,checkpoint,stats,savepoint,tracker,report,pending,checkpoint,2,1,checkpoint,properties,for,standard,savepoint,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,savepoint,report,completed,checkpoint,null,pending,checkpoint,stats,in,progress,tracker,report,pending,checkpoint,3,1,checkpoint,properties,for,standard,checkpoint,restored,checkpoint,stats,restored,new,restored,checkpoint,stats,81,checkpoint,properties,for,standard,checkpoint,123,null,tracker,report,restored,checkpoint,restored,checkpoint,stats,snapshot,snapshot,tracker,create,snapshot,checkpoint,stats,counts,counts,snapshot,get,counts,assert,equals,4,counts,get,total,number,of,checkpoints,assert,equals,1,counts,get,number,of,in,progress,checkpoints,assert,equals,2,counts,get,number,of,completed,checkpoints,assert,equals,1,counts,get,number,of,failed,checkpoints,completed,checkpoint,stats,summary,summary,snapshot,get,summary,stats,assert,equals,2,summary,get,state,size,stats,get,count,assert,equals,2,summary,get,end,to,end,duration,stats,get,count,assert,equals,2,summary,get,alignment,buffered,stats,get,count,checkpoint,stats,history,history,snapshot,get,history,iterator,abstract,checkpoint,stats,it,history,get,checkpoints,iterator,assert,true,it,has,next,abstract,checkpoint,stats,stats,it,next,assert,equals,3,stats,get,checkpoint,id,assert,true,stats,get,status,is,in,progress,assert,true,it,has,next,stats,it,next,assert,equals,2,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed,assert,true,it,has,next,stats,it,next,assert,equals,1,stats,get,checkpoint,id,assert,true,stats,get,status,is,failed,assert,true,it,has,next,stats,it,next,assert,equals,0,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed,assert,false,it,has,next,assert,equals,completed1,get,checkpoint,id,snapshot,get,history,get,latest,completed,checkpoint,get,checkpoint,id,assert,equals,savepoint,get,checkpoint,id,snapshot,get,history,get,latest,savepoint,get,checkpoint,id,assert,equals,failed,get,checkpoint,id,snapshot,get,history,get,latest,failed,checkpoint,get,checkpoint,id,assert,equals,restored,snapshot,get,latest,restored,checkpoint
CheckpointStatsTrackerTest -> @Test 	public void testCheckpointTracking() throws Exception;1490214056;Tests tracking of checkpoints.;@Test_	public void testCheckpointTracking() throws Exception {_		int numberOfSubtasks = 3___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(numberOfSubtasks)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			10,_			Collections.singletonList(jobVertex),_			mock(JobSnapshottingSettings.class),_			new UnregisteredMetricsGroup())___		_		PendingCheckpointStats completed1 = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		completed1.reportCompletedCheckpoint(null)___		_		PendingCheckpointStats failed = tracker.reportPendingCheckpoint(_			1,_			1,_			CheckpointProperties.forStandardCheckpoint())___		failed.reportFailedCheckpoint(12, null)___		_		PendingCheckpointStats savepoint = tracker.reportPendingCheckpoint(_			2,_			1,_			CheckpointProperties.forStandardSavepoint())___		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		savepoint.reportCompletedCheckpoint(null)___		_		PendingCheckpointStats inProgress = tracker.reportPendingCheckpoint(_			3,_			1,_			CheckpointProperties.forStandardCheckpoint())___		RestoredCheckpointStats restored = new RestoredCheckpointStats(81, CheckpointProperties.forStandardCheckpoint(), 123, null)__		tracker.reportRestoredCheckpoint(restored)___		CheckpointStatsSnapshot snapshot = tracker.createSnapshot()___		_		CheckpointStatsCounts counts = snapshot.getCounts()__		assertEquals(4, counts.getTotalNumberOfCheckpoints())__		assertEquals(1, counts.getNumberOfInProgressCheckpoints())__		assertEquals(2, counts.getNumberOfCompletedCheckpoints())__		assertEquals(1, counts.getNumberOfFailedCheckpoints())___		_		CompletedCheckpointStatsSummary summary = snapshot.getSummaryStats()__		assertEquals(2, summary.getStateSizeStats().getCount())__		assertEquals(2, summary.getEndToEndDurationStats().getCount())__		assertEquals(2, summary.getAlignmentBufferedStats().getCount())___		_		CheckpointStatsHistory history = snapshot.getHistory()__		Iterator<AbstractCheckpointStats> it = history.getCheckpoints().iterator()___		assertTrue(it.hasNext())__		AbstractCheckpointStats stats = it.next()__		assertEquals(3, stats.getCheckpointId())__		assertTrue(stats.getStatus().isInProgress())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(2, stats.getCheckpointId())__		assertTrue(stats.getStatus().isCompleted())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(1, stats.getCheckpointId())__		assertTrue(stats.getStatus().isFailed())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(0, stats.getCheckpointId())__		assertTrue(stats.getStatus().isCompleted())___		assertFalse(it.hasNext())___		_		assertEquals(completed1.getCheckpointId(), snapshot.getHistory().getLatestCompletedCheckpoint().getCheckpointId())__		assertEquals(savepoint.getCheckpointId(), snapshot.getHistory().getLatestSavepoint().getCheckpointId())__		assertEquals(failed.getCheckpointId(), snapshot.getHistory().getLatestFailedCheckpoint().getCheckpointId())__		assertEquals(restored, snapshot.getLatestRestoredCheckpoint())__	};tests,tracking,of,checkpoints;test,public,void,test,checkpoint,tracking,throws,exception,int,number,of,subtasks,3,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,number,of,subtasks,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,10,collections,singleton,list,job,vertex,mock,job,snapshotting,settings,class,new,unregistered,metrics,group,pending,checkpoint,stats,completed1,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,completed1,report,completed,checkpoint,null,pending,checkpoint,stats,failed,tracker,report,pending,checkpoint,1,1,checkpoint,properties,for,standard,checkpoint,failed,report,failed,checkpoint,12,null,pending,checkpoint,stats,savepoint,tracker,report,pending,checkpoint,2,1,checkpoint,properties,for,standard,savepoint,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,savepoint,report,completed,checkpoint,null,pending,checkpoint,stats,in,progress,tracker,report,pending,checkpoint,3,1,checkpoint,properties,for,standard,checkpoint,restored,checkpoint,stats,restored,new,restored,checkpoint,stats,81,checkpoint,properties,for,standard,checkpoint,123,null,tracker,report,restored,checkpoint,restored,checkpoint,stats,snapshot,snapshot,tracker,create,snapshot,checkpoint,stats,counts,counts,snapshot,get,counts,assert,equals,4,counts,get,total,number,of,checkpoints,assert,equals,1,counts,get,number,of,in,progress,checkpoints,assert,equals,2,counts,get,number,of,completed,checkpoints,assert,equals,1,counts,get,number,of,failed,checkpoints,completed,checkpoint,stats,summary,summary,snapshot,get,summary,stats,assert,equals,2,summary,get,state,size,stats,get,count,assert,equals,2,summary,get,end,to,end,duration,stats,get,count,assert,equals,2,summary,get,alignment,buffered,stats,get,count,checkpoint,stats,history,history,snapshot,get,history,iterator,abstract,checkpoint,stats,it,history,get,checkpoints,iterator,assert,true,it,has,next,abstract,checkpoint,stats,stats,it,next,assert,equals,3,stats,get,checkpoint,id,assert,true,stats,get,status,is,in,progress,assert,true,it,has,next,stats,it,next,assert,equals,2,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed,assert,true,it,has,next,stats,it,next,assert,equals,1,stats,get,checkpoint,id,assert,true,stats,get,status,is,failed,assert,true,it,has,next,stats,it,next,assert,equals,0,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed,assert,false,it,has,next,assert,equals,completed1,get,checkpoint,id,snapshot,get,history,get,latest,completed,checkpoint,get,checkpoint,id,assert,equals,savepoint,get,checkpoint,id,snapshot,get,history,get,latest,savepoint,get,checkpoint,id,assert,equals,failed,get,checkpoint,id,snapshot,get,history,get,latest,failed,checkpoint,get,checkpoint,id,assert,equals,restored,snapshot,get,latest,restored,checkpoint
CheckpointStatsTrackerTest -> @Test 	public void testCheckpointTracking() throws Exception;1492678790;Tests tracking of checkpoints.;@Test_	public void testCheckpointTracking() throws Exception {_		int numberOfSubtasks = 3___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(numberOfSubtasks)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			10,_			Collections.singletonList(jobVertex),_			mock(JobCheckpointingSettings.class),_			new UnregisteredMetricsGroup())___		_		PendingCheckpointStats completed1 = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		completed1.reportCompletedCheckpoint(null)___		_		PendingCheckpointStats failed = tracker.reportPendingCheckpoint(_			1,_			1,_			CheckpointProperties.forStandardCheckpoint())___		failed.reportFailedCheckpoint(12, null)___		_		PendingCheckpointStats savepoint = tracker.reportPendingCheckpoint(_			2,_			1,_			CheckpointProperties.forStandardSavepoint())___		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		savepoint.reportCompletedCheckpoint(null)___		_		PendingCheckpointStats inProgress = tracker.reportPendingCheckpoint(_			3,_			1,_			CheckpointProperties.forStandardCheckpoint())___		RestoredCheckpointStats restored = new RestoredCheckpointStats(81, CheckpointProperties.forStandardCheckpoint(), 123, null)__		tracker.reportRestoredCheckpoint(restored)___		CheckpointStatsSnapshot snapshot = tracker.createSnapshot()___		_		CheckpointStatsCounts counts = snapshot.getCounts()__		assertEquals(4, counts.getTotalNumberOfCheckpoints())__		assertEquals(1, counts.getNumberOfInProgressCheckpoints())__		assertEquals(2, counts.getNumberOfCompletedCheckpoints())__		assertEquals(1, counts.getNumberOfFailedCheckpoints())___		_		CompletedCheckpointStatsSummary summary = snapshot.getSummaryStats()__		assertEquals(2, summary.getStateSizeStats().getCount())__		assertEquals(2, summary.getEndToEndDurationStats().getCount())__		assertEquals(2, summary.getAlignmentBufferedStats().getCount())___		_		CheckpointStatsHistory history = snapshot.getHistory()__		Iterator<AbstractCheckpointStats> it = history.getCheckpoints().iterator()___		assertTrue(it.hasNext())__		AbstractCheckpointStats stats = it.next()__		assertEquals(3, stats.getCheckpointId())__		assertTrue(stats.getStatus().isInProgress())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(2, stats.getCheckpointId())__		assertTrue(stats.getStatus().isCompleted())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(1, stats.getCheckpointId())__		assertTrue(stats.getStatus().isFailed())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(0, stats.getCheckpointId())__		assertTrue(stats.getStatus().isCompleted())___		assertFalse(it.hasNext())___		_		assertEquals(completed1.getCheckpointId(), snapshot.getHistory().getLatestCompletedCheckpoint().getCheckpointId())__		assertEquals(savepoint.getCheckpointId(), snapshot.getHistory().getLatestSavepoint().getCheckpointId())__		assertEquals(failed.getCheckpointId(), snapshot.getHistory().getLatestFailedCheckpoint().getCheckpointId())__		assertEquals(restored, snapshot.getLatestRestoredCheckpoint())__	};tests,tracking,of,checkpoints;test,public,void,test,checkpoint,tracking,throws,exception,int,number,of,subtasks,3,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,number,of,subtasks,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,10,collections,singleton,list,job,vertex,mock,job,checkpointing,settings,class,new,unregistered,metrics,group,pending,checkpoint,stats,completed1,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,completed1,report,completed,checkpoint,null,pending,checkpoint,stats,failed,tracker,report,pending,checkpoint,1,1,checkpoint,properties,for,standard,checkpoint,failed,report,failed,checkpoint,12,null,pending,checkpoint,stats,savepoint,tracker,report,pending,checkpoint,2,1,checkpoint,properties,for,standard,savepoint,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,savepoint,report,completed,checkpoint,null,pending,checkpoint,stats,in,progress,tracker,report,pending,checkpoint,3,1,checkpoint,properties,for,standard,checkpoint,restored,checkpoint,stats,restored,new,restored,checkpoint,stats,81,checkpoint,properties,for,standard,checkpoint,123,null,tracker,report,restored,checkpoint,restored,checkpoint,stats,snapshot,snapshot,tracker,create,snapshot,checkpoint,stats,counts,counts,snapshot,get,counts,assert,equals,4,counts,get,total,number,of,checkpoints,assert,equals,1,counts,get,number,of,in,progress,checkpoints,assert,equals,2,counts,get,number,of,completed,checkpoints,assert,equals,1,counts,get,number,of,failed,checkpoints,completed,checkpoint,stats,summary,summary,snapshot,get,summary,stats,assert,equals,2,summary,get,state,size,stats,get,count,assert,equals,2,summary,get,end,to,end,duration,stats,get,count,assert,equals,2,summary,get,alignment,buffered,stats,get,count,checkpoint,stats,history,history,snapshot,get,history,iterator,abstract,checkpoint,stats,it,history,get,checkpoints,iterator,assert,true,it,has,next,abstract,checkpoint,stats,stats,it,next,assert,equals,3,stats,get,checkpoint,id,assert,true,stats,get,status,is,in,progress,assert,true,it,has,next,stats,it,next,assert,equals,2,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed,assert,true,it,has,next,stats,it,next,assert,equals,1,stats,get,checkpoint,id,assert,true,stats,get,status,is,failed,assert,true,it,has,next,stats,it,next,assert,equals,0,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed,assert,false,it,has,next,assert,equals,completed1,get,checkpoint,id,snapshot,get,history,get,latest,completed,checkpoint,get,checkpoint,id,assert,equals,savepoint,get,checkpoint,id,snapshot,get,history,get,latest,savepoint,get,checkpoint,id,assert,equals,failed,get,checkpoint,id,snapshot,get,history,get,latest,failed,checkpoint,get,checkpoint,id,assert,equals,restored,snapshot,get,latest,restored,checkpoint
CheckpointStatsTrackerTest -> @Test 	public void testCheckpointTracking() throws Exception;1506590912;Tests tracking of checkpoints.;@Test_	public void testCheckpointTracking() throws Exception {_		int numberOfSubtasks = 3___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(numberOfSubtasks)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			10,_			Collections.singletonList(jobVertex),_			mock(JobCheckpointingSettings.class),_			new UnregisteredMetricsGroup())___		_		PendingCheckpointStats completed1 = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		completed1.reportCompletedCheckpoint(null)___		_		PendingCheckpointStats failed = tracker.reportPendingCheckpoint(_			1,_			1,_			CheckpointProperties.forStandardCheckpoint())___		failed.reportFailedCheckpoint(12, null)___		_		PendingCheckpointStats savepoint = tracker.reportPendingCheckpoint(_			2,_			1,_			CheckpointProperties.forStandardSavepoint())___		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		savepoint.reportCompletedCheckpoint(null)___		_		PendingCheckpointStats inProgress = tracker.reportPendingCheckpoint(_			3,_			1,_			CheckpointProperties.forStandardCheckpoint())___		RestoredCheckpointStats restored = new RestoredCheckpointStats(81, CheckpointProperties.forStandardCheckpoint(), 123, null)__		tracker.reportRestoredCheckpoint(restored)___		CheckpointStatsSnapshot snapshot = tracker.createSnapshot()___		_		CheckpointStatsCounts counts = snapshot.getCounts()__		assertEquals(4, counts.getTotalNumberOfCheckpoints())__		assertEquals(1, counts.getNumberOfInProgressCheckpoints())__		assertEquals(2, counts.getNumberOfCompletedCheckpoints())__		assertEquals(1, counts.getNumberOfFailedCheckpoints())___		_		CompletedCheckpointStatsSummary summary = snapshot.getSummaryStats()__		assertEquals(2, summary.getStateSizeStats().getCount())__		assertEquals(2, summary.getEndToEndDurationStats().getCount())__		assertEquals(2, summary.getAlignmentBufferedStats().getCount())___		_		CheckpointStatsHistory history = snapshot.getHistory()__		Iterator<AbstractCheckpointStats> it = history.getCheckpoints().iterator()___		assertTrue(it.hasNext())__		AbstractCheckpointStats stats = it.next()__		assertEquals(3, stats.getCheckpointId())__		assertTrue(stats.getStatus().isInProgress())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(2, stats.getCheckpointId())__		assertTrue(stats.getStatus().isCompleted())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(1, stats.getCheckpointId())__		assertTrue(stats.getStatus().isFailed())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(0, stats.getCheckpointId())__		assertTrue(stats.getStatus().isCompleted())___		assertFalse(it.hasNext())___		_		assertEquals(completed1.getCheckpointId(), snapshot.getHistory().getLatestCompletedCheckpoint().getCheckpointId())__		assertEquals(savepoint.getCheckpointId(), snapshot.getHistory().getLatestSavepoint().getCheckpointId())__		assertEquals(failed.getCheckpointId(), snapshot.getHistory().getLatestFailedCheckpoint().getCheckpointId())__		assertEquals(restored, snapshot.getLatestRestoredCheckpoint())__	};tests,tracking,of,checkpoints;test,public,void,test,checkpoint,tracking,throws,exception,int,number,of,subtasks,3,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,number,of,subtasks,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,10,collections,singleton,list,job,vertex,mock,job,checkpointing,settings,class,new,unregistered,metrics,group,pending,checkpoint,stats,completed1,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,completed1,report,completed,checkpoint,null,pending,checkpoint,stats,failed,tracker,report,pending,checkpoint,1,1,checkpoint,properties,for,standard,checkpoint,failed,report,failed,checkpoint,12,null,pending,checkpoint,stats,savepoint,tracker,report,pending,checkpoint,2,1,checkpoint,properties,for,standard,savepoint,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,savepoint,report,completed,checkpoint,null,pending,checkpoint,stats,in,progress,tracker,report,pending,checkpoint,3,1,checkpoint,properties,for,standard,checkpoint,restored,checkpoint,stats,restored,new,restored,checkpoint,stats,81,checkpoint,properties,for,standard,checkpoint,123,null,tracker,report,restored,checkpoint,restored,checkpoint,stats,snapshot,snapshot,tracker,create,snapshot,checkpoint,stats,counts,counts,snapshot,get,counts,assert,equals,4,counts,get,total,number,of,checkpoints,assert,equals,1,counts,get,number,of,in,progress,checkpoints,assert,equals,2,counts,get,number,of,completed,checkpoints,assert,equals,1,counts,get,number,of,failed,checkpoints,completed,checkpoint,stats,summary,summary,snapshot,get,summary,stats,assert,equals,2,summary,get,state,size,stats,get,count,assert,equals,2,summary,get,end,to,end,duration,stats,get,count,assert,equals,2,summary,get,alignment,buffered,stats,get,count,checkpoint,stats,history,history,snapshot,get,history,iterator,abstract,checkpoint,stats,it,history,get,checkpoints,iterator,assert,true,it,has,next,abstract,checkpoint,stats,stats,it,next,assert,equals,3,stats,get,checkpoint,id,assert,true,stats,get,status,is,in,progress,assert,true,it,has,next,stats,it,next,assert,equals,2,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed,assert,true,it,has,next,stats,it,next,assert,equals,1,stats,get,checkpoint,id,assert,true,stats,get,status,is,failed,assert,true,it,has,next,stats,it,next,assert,equals,0,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed,assert,false,it,has,next,assert,equals,completed1,get,checkpoint,id,snapshot,get,history,get,latest,completed,checkpoint,get,checkpoint,id,assert,equals,savepoint,get,checkpoint,id,snapshot,get,history,get,latest,savepoint,get,checkpoint,id,assert,equals,failed,get,checkpoint,id,snapshot,get,history,get,latest,failed,checkpoint,get,checkpoint,id,assert,equals,restored,snapshot,get,latest,restored,checkpoint
CheckpointStatsTrackerTest -> @Test 	public void testCheckpointTracking() throws Exception;1506618381;Tests tracking of checkpoints.;@Test_	public void testCheckpointTracking() throws Exception {_		int numberOfSubtasks = 3___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(numberOfSubtasks)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			10,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			new UnregisteredMetricsGroup())___		_		PendingCheckpointStats completed1 = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		completed1.reportCompletedCheckpoint(null)___		_		PendingCheckpointStats failed = tracker.reportPendingCheckpoint(_			1,_			1,_			CheckpointProperties.forStandardCheckpoint())___		failed.reportFailedCheckpoint(12, null)___		_		PendingCheckpointStats savepoint = tracker.reportPendingCheckpoint(_			2,_			1,_			CheckpointProperties.forStandardSavepoint())___		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		savepoint.reportCompletedCheckpoint(null)___		_		PendingCheckpointStats inProgress = tracker.reportPendingCheckpoint(_			3,_			1,_			CheckpointProperties.forStandardCheckpoint())___		RestoredCheckpointStats restored = new RestoredCheckpointStats(81, CheckpointProperties.forStandardCheckpoint(), 123, null)__		tracker.reportRestoredCheckpoint(restored)___		CheckpointStatsSnapshot snapshot = tracker.createSnapshot()___		_		CheckpointStatsCounts counts = snapshot.getCounts()__		assertEquals(4, counts.getTotalNumberOfCheckpoints())__		assertEquals(1, counts.getNumberOfInProgressCheckpoints())__		assertEquals(2, counts.getNumberOfCompletedCheckpoints())__		assertEquals(1, counts.getNumberOfFailedCheckpoints())___		_		CompletedCheckpointStatsSummary summary = snapshot.getSummaryStats()__		assertEquals(2, summary.getStateSizeStats().getCount())__		assertEquals(2, summary.getEndToEndDurationStats().getCount())__		assertEquals(2, summary.getAlignmentBufferedStats().getCount())___		_		CheckpointStatsHistory history = snapshot.getHistory()__		Iterator<AbstractCheckpointStats> it = history.getCheckpoints().iterator()___		assertTrue(it.hasNext())__		AbstractCheckpointStats stats = it.next()__		assertEquals(3, stats.getCheckpointId())__		assertTrue(stats.getStatus().isInProgress())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(2, stats.getCheckpointId())__		assertTrue(stats.getStatus().isCompleted())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(1, stats.getCheckpointId())__		assertTrue(stats.getStatus().isFailed())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(0, stats.getCheckpointId())__		assertTrue(stats.getStatus().isCompleted())___		assertFalse(it.hasNext())___		_		assertEquals(completed1.getCheckpointId(), snapshot.getHistory().getLatestCompletedCheckpoint().getCheckpointId())__		assertEquals(savepoint.getCheckpointId(), snapshot.getHistory().getLatestSavepoint().getCheckpointId())__		assertEquals(failed.getCheckpointId(), snapshot.getHistory().getLatestFailedCheckpoint().getCheckpointId())__		assertEquals(restored, snapshot.getLatestRestoredCheckpoint())__	};tests,tracking,of,checkpoints;test,public,void,test,checkpoint,tracking,throws,exception,int,number,of,subtasks,3,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,number,of,subtasks,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,10,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,new,unregistered,metrics,group,pending,checkpoint,stats,completed1,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,completed1,report,completed,checkpoint,null,pending,checkpoint,stats,failed,tracker,report,pending,checkpoint,1,1,checkpoint,properties,for,standard,checkpoint,failed,report,failed,checkpoint,12,null,pending,checkpoint,stats,savepoint,tracker,report,pending,checkpoint,2,1,checkpoint,properties,for,standard,savepoint,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,savepoint,report,completed,checkpoint,null,pending,checkpoint,stats,in,progress,tracker,report,pending,checkpoint,3,1,checkpoint,properties,for,standard,checkpoint,restored,checkpoint,stats,restored,new,restored,checkpoint,stats,81,checkpoint,properties,for,standard,checkpoint,123,null,tracker,report,restored,checkpoint,restored,checkpoint,stats,snapshot,snapshot,tracker,create,snapshot,checkpoint,stats,counts,counts,snapshot,get,counts,assert,equals,4,counts,get,total,number,of,checkpoints,assert,equals,1,counts,get,number,of,in,progress,checkpoints,assert,equals,2,counts,get,number,of,completed,checkpoints,assert,equals,1,counts,get,number,of,failed,checkpoints,completed,checkpoint,stats,summary,summary,snapshot,get,summary,stats,assert,equals,2,summary,get,state,size,stats,get,count,assert,equals,2,summary,get,end,to,end,duration,stats,get,count,assert,equals,2,summary,get,alignment,buffered,stats,get,count,checkpoint,stats,history,history,snapshot,get,history,iterator,abstract,checkpoint,stats,it,history,get,checkpoints,iterator,assert,true,it,has,next,abstract,checkpoint,stats,stats,it,next,assert,equals,3,stats,get,checkpoint,id,assert,true,stats,get,status,is,in,progress,assert,true,it,has,next,stats,it,next,assert,equals,2,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed,assert,true,it,has,next,stats,it,next,assert,equals,1,stats,get,checkpoint,id,assert,true,stats,get,status,is,failed,assert,true,it,has,next,stats,it,next,assert,equals,0,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed,assert,false,it,has,next,assert,equals,completed1,get,checkpoint,id,snapshot,get,history,get,latest,completed,checkpoint,get,checkpoint,id,assert,equals,savepoint,get,checkpoint,id,snapshot,get,history,get,latest,savepoint,get,checkpoint,id,assert,equals,failed,get,checkpoint,id,snapshot,get,history,get,latest,failed,checkpoint,get,checkpoint,id,assert,equals,restored,snapshot,get,latest,restored,checkpoint
CheckpointStatsTrackerTest -> @Test 	public void testCheckpointTracking() throws Exception;1513075960;Tests tracking of checkpoints.;@Test_	public void testCheckpointTracking() throws Exception {_		int numberOfSubtasks = 3___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(numberOfSubtasks)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			10,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			new UnregisteredMetricsGroup())___		_		PendingCheckpointStats completed1 = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		completed1.reportCompletedCheckpoint(null)___		_		PendingCheckpointStats failed = tracker.reportPendingCheckpoint(_			1,_			1,_			CheckpointProperties.forStandardCheckpoint())___		failed.reportFailedCheckpoint(12, null)___		_		PendingCheckpointStats savepoint = tracker.reportPendingCheckpoint(_			2,_			1,_			CheckpointProperties.forStandardSavepoint())___		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		savepoint.reportCompletedCheckpoint(null)___		_		PendingCheckpointStats inProgress = tracker.reportPendingCheckpoint(_			3,_			1,_			CheckpointProperties.forStandardCheckpoint())___		RestoredCheckpointStats restored = new RestoredCheckpointStats(81, CheckpointProperties.forStandardCheckpoint(), 123, null)__		tracker.reportRestoredCheckpoint(restored)___		CheckpointStatsSnapshot snapshot = tracker.createSnapshot()___		_		CheckpointStatsCounts counts = snapshot.getCounts()__		assertEquals(4, counts.getTotalNumberOfCheckpoints())__		assertEquals(1, counts.getNumberOfInProgressCheckpoints())__		assertEquals(2, counts.getNumberOfCompletedCheckpoints())__		assertEquals(1, counts.getNumberOfFailedCheckpoints())___		_		CompletedCheckpointStatsSummary summary = snapshot.getSummaryStats()__		assertEquals(2, summary.getStateSizeStats().getCount())__		assertEquals(2, summary.getEndToEndDurationStats().getCount())__		assertEquals(2, summary.getAlignmentBufferedStats().getCount())___		_		CheckpointStatsHistory history = snapshot.getHistory()__		Iterator<AbstractCheckpointStats> it = history.getCheckpoints().iterator()___		assertTrue(it.hasNext())__		AbstractCheckpointStats stats = it.next()__		assertEquals(3, stats.getCheckpointId())__		assertTrue(stats.getStatus().isInProgress())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(2, stats.getCheckpointId())__		assertTrue(stats.getStatus().isCompleted())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(1, stats.getCheckpointId())__		assertTrue(stats.getStatus().isFailed())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(0, stats.getCheckpointId())__		assertTrue(stats.getStatus().isCompleted())___		assertFalse(it.hasNext())___		_		assertEquals(completed1.getCheckpointId(), snapshot.getHistory().getLatestCompletedCheckpoint().getCheckpointId())__		assertEquals(savepoint.getCheckpointId(), snapshot.getHistory().getLatestSavepoint().getCheckpointId())__		assertEquals(failed.getCheckpointId(), snapshot.getHistory().getLatestFailedCheckpoint().getCheckpointId())__		assertEquals(restored, snapshot.getLatestRestoredCheckpoint())__	};tests,tracking,of,checkpoints;test,public,void,test,checkpoint,tracking,throws,exception,int,number,of,subtasks,3,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,number,of,subtasks,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,10,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,new,unregistered,metrics,group,pending,checkpoint,stats,completed1,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,completed1,report,completed,checkpoint,null,pending,checkpoint,stats,failed,tracker,report,pending,checkpoint,1,1,checkpoint,properties,for,standard,checkpoint,failed,report,failed,checkpoint,12,null,pending,checkpoint,stats,savepoint,tracker,report,pending,checkpoint,2,1,checkpoint,properties,for,standard,savepoint,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,savepoint,report,completed,checkpoint,null,pending,checkpoint,stats,in,progress,tracker,report,pending,checkpoint,3,1,checkpoint,properties,for,standard,checkpoint,restored,checkpoint,stats,restored,new,restored,checkpoint,stats,81,checkpoint,properties,for,standard,checkpoint,123,null,tracker,report,restored,checkpoint,restored,checkpoint,stats,snapshot,snapshot,tracker,create,snapshot,checkpoint,stats,counts,counts,snapshot,get,counts,assert,equals,4,counts,get,total,number,of,checkpoints,assert,equals,1,counts,get,number,of,in,progress,checkpoints,assert,equals,2,counts,get,number,of,completed,checkpoints,assert,equals,1,counts,get,number,of,failed,checkpoints,completed,checkpoint,stats,summary,summary,snapshot,get,summary,stats,assert,equals,2,summary,get,state,size,stats,get,count,assert,equals,2,summary,get,end,to,end,duration,stats,get,count,assert,equals,2,summary,get,alignment,buffered,stats,get,count,checkpoint,stats,history,history,snapshot,get,history,iterator,abstract,checkpoint,stats,it,history,get,checkpoints,iterator,assert,true,it,has,next,abstract,checkpoint,stats,stats,it,next,assert,equals,3,stats,get,checkpoint,id,assert,true,stats,get,status,is,in,progress,assert,true,it,has,next,stats,it,next,assert,equals,2,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed,assert,true,it,has,next,stats,it,next,assert,equals,1,stats,get,checkpoint,id,assert,true,stats,get,status,is,failed,assert,true,it,has,next,stats,it,next,assert,equals,0,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed,assert,false,it,has,next,assert,equals,completed1,get,checkpoint,id,snapshot,get,history,get,latest,completed,checkpoint,get,checkpoint,id,assert,equals,savepoint,get,checkpoint,id,snapshot,get,history,get,latest,savepoint,get,checkpoint,id,assert,equals,failed,get,checkpoint,id,snapshot,get,history,get,latest,failed,checkpoint,get,checkpoint,id,assert,equals,restored,snapshot,get,latest,restored,checkpoint
CheckpointStatsTrackerTest -> @Test 	public void testCheckpointTracking() throws Exception;1513102157;Tests tracking of checkpoints.;@Test_	public void testCheckpointTracking() throws Exception {_		int numberOfSubtasks = 3___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(numberOfSubtasks)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			10,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			new UnregisteredMetricsGroup())___		_		PendingCheckpointStats completed1 = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forStandardCheckpoint())___		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		completed1.reportCompletedCheckpoint(null)___		_		PendingCheckpointStats failed = tracker.reportPendingCheckpoint(_			1,_			1,_			CheckpointProperties.forStandardCheckpoint())___		failed.reportFailedCheckpoint(12, null)___		_		PendingCheckpointStats savepoint = tracker.reportPendingCheckpoint(_			2,_			1,_			CheckpointProperties.forStandardSavepoint())___		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		savepoint.reportCompletedCheckpoint(null)___		_		PendingCheckpointStats inProgress = tracker.reportPendingCheckpoint(_			3,_			1,_			CheckpointProperties.forStandardCheckpoint())___		RestoredCheckpointStats restored = new RestoredCheckpointStats(81, CheckpointProperties.forStandardCheckpoint(), 123, null)__		tracker.reportRestoredCheckpoint(restored)___		CheckpointStatsSnapshot snapshot = tracker.createSnapshot()___		_		CheckpointStatsCounts counts = snapshot.getCounts()__		assertEquals(4, counts.getTotalNumberOfCheckpoints())__		assertEquals(1, counts.getNumberOfInProgressCheckpoints())__		assertEquals(2, counts.getNumberOfCompletedCheckpoints())__		assertEquals(1, counts.getNumberOfFailedCheckpoints())___		_		CompletedCheckpointStatsSummary summary = snapshot.getSummaryStats()__		assertEquals(2, summary.getStateSizeStats().getCount())__		assertEquals(2, summary.getEndToEndDurationStats().getCount())__		assertEquals(2, summary.getAlignmentBufferedStats().getCount())___		_		CheckpointStatsHistory history = snapshot.getHistory()__		Iterator<AbstractCheckpointStats> it = history.getCheckpoints().iterator()___		assertTrue(it.hasNext())__		AbstractCheckpointStats stats = it.next()__		assertEquals(3, stats.getCheckpointId())__		assertTrue(stats.getStatus().isInProgress())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(2, stats.getCheckpointId())__		assertTrue(stats.getStatus().isCompleted())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(1, stats.getCheckpointId())__		assertTrue(stats.getStatus().isFailed())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(0, stats.getCheckpointId())__		assertTrue(stats.getStatus().isCompleted())___		assertFalse(it.hasNext())___		_		assertEquals(completed1.getCheckpointId(), snapshot.getHistory().getLatestCompletedCheckpoint().getCheckpointId())__		assertEquals(savepoint.getCheckpointId(), snapshot.getHistory().getLatestSavepoint().getCheckpointId())__		assertEquals(failed.getCheckpointId(), snapshot.getHistory().getLatestFailedCheckpoint().getCheckpointId())__		assertEquals(restored, snapshot.getLatestRestoredCheckpoint())__	};tests,tracking,of,checkpoints;test,public,void,test,checkpoint,tracking,throws,exception,int,number,of,subtasks,3,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,number,of,subtasks,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,10,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,new,unregistered,metrics,group,pending,checkpoint,stats,completed1,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,standard,checkpoint,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,completed1,report,completed,checkpoint,null,pending,checkpoint,stats,failed,tracker,report,pending,checkpoint,1,1,checkpoint,properties,for,standard,checkpoint,failed,report,failed,checkpoint,12,null,pending,checkpoint,stats,savepoint,tracker,report,pending,checkpoint,2,1,checkpoint,properties,for,standard,savepoint,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,savepoint,report,completed,checkpoint,null,pending,checkpoint,stats,in,progress,tracker,report,pending,checkpoint,3,1,checkpoint,properties,for,standard,checkpoint,restored,checkpoint,stats,restored,new,restored,checkpoint,stats,81,checkpoint,properties,for,standard,checkpoint,123,null,tracker,report,restored,checkpoint,restored,checkpoint,stats,snapshot,snapshot,tracker,create,snapshot,checkpoint,stats,counts,counts,snapshot,get,counts,assert,equals,4,counts,get,total,number,of,checkpoints,assert,equals,1,counts,get,number,of,in,progress,checkpoints,assert,equals,2,counts,get,number,of,completed,checkpoints,assert,equals,1,counts,get,number,of,failed,checkpoints,completed,checkpoint,stats,summary,summary,snapshot,get,summary,stats,assert,equals,2,summary,get,state,size,stats,get,count,assert,equals,2,summary,get,end,to,end,duration,stats,get,count,assert,equals,2,summary,get,alignment,buffered,stats,get,count,checkpoint,stats,history,history,snapshot,get,history,iterator,abstract,checkpoint,stats,it,history,get,checkpoints,iterator,assert,true,it,has,next,abstract,checkpoint,stats,stats,it,next,assert,equals,3,stats,get,checkpoint,id,assert,true,stats,get,status,is,in,progress,assert,true,it,has,next,stats,it,next,assert,equals,2,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed,assert,true,it,has,next,stats,it,next,assert,equals,1,stats,get,checkpoint,id,assert,true,stats,get,status,is,failed,assert,true,it,has,next,stats,it,next,assert,equals,0,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed,assert,false,it,has,next,assert,equals,completed1,get,checkpoint,id,snapshot,get,history,get,latest,completed,checkpoint,get,checkpoint,id,assert,equals,savepoint,get,checkpoint,id,snapshot,get,history,get,latest,savepoint,get,checkpoint,id,assert,equals,failed,get,checkpoint,id,snapshot,get,history,get,latest,failed,checkpoint,get,checkpoint,id,assert,equals,restored,snapshot,get,latest,restored,checkpoint
CheckpointStatsTrackerTest -> @Test 	public void testCheckpointTracking() throws Exception;1516295283;Tests tracking of checkpoints.;@Test_	public void testCheckpointTracking() throws Exception {_		int numberOfSubtasks = 3___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(numberOfSubtasks)___		CheckpointStatsTracker tracker = new CheckpointStatsTracker(_			10,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			new UnregisteredMetricsGroup())___		_		PendingCheckpointStats completed1 = tracker.reportPendingCheckpoint(_			0,_			1,_			CheckpointProperties.forCheckpoint(CheckpointRetentionPolicy.NEVER_RETAIN_AFTER_TERMINATION))___		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		completed1.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		completed1.reportCompletedCheckpoint(null)___		_		PendingCheckpointStats failed = tracker.reportPendingCheckpoint(_			1,_			1,_			CheckpointProperties.forCheckpoint(CheckpointRetentionPolicy.NEVER_RETAIN_AFTER_TERMINATION))___		failed.reportFailedCheckpoint(12, null)___		_		PendingCheckpointStats savepoint = tracker.reportPendingCheckpoint(_			2,_			1,_			CheckpointProperties.forSavepoint())___		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(0))__		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(1))__		savepoint.reportSubtaskStats(jobVertex.getJobVertexId(), createSubtaskStats(2))___		savepoint.reportCompletedCheckpoint(null)___		_		PendingCheckpointStats inProgress = tracker.reportPendingCheckpoint(_			3,_			1,_			CheckpointProperties.forCheckpoint(CheckpointRetentionPolicy.NEVER_RETAIN_AFTER_TERMINATION))___		RestoredCheckpointStats restored = new RestoredCheckpointStats(81, CheckpointProperties.forCheckpoint(CheckpointRetentionPolicy.NEVER_RETAIN_AFTER_TERMINATION), 123, null)__		tracker.reportRestoredCheckpoint(restored)___		CheckpointStatsSnapshot snapshot = tracker.createSnapshot()___		_		CheckpointStatsCounts counts = snapshot.getCounts()__		assertEquals(4, counts.getTotalNumberOfCheckpoints())__		assertEquals(1, counts.getNumberOfInProgressCheckpoints())__		assertEquals(2, counts.getNumberOfCompletedCheckpoints())__		assertEquals(1, counts.getNumberOfFailedCheckpoints())___		_		CompletedCheckpointStatsSummary summary = snapshot.getSummaryStats()__		assertEquals(2, summary.getStateSizeStats().getCount())__		assertEquals(2, summary.getEndToEndDurationStats().getCount())__		assertEquals(2, summary.getAlignmentBufferedStats().getCount())___		_		CheckpointStatsHistory history = snapshot.getHistory()__		Iterator<AbstractCheckpointStats> it = history.getCheckpoints().iterator()___		assertTrue(it.hasNext())__		AbstractCheckpointStats stats = it.next()__		assertEquals(3, stats.getCheckpointId())__		assertTrue(stats.getStatus().isInProgress())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(2, stats.getCheckpointId())__		assertTrue(stats.getStatus().isCompleted())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(1, stats.getCheckpointId())__		assertTrue(stats.getStatus().isFailed())___		assertTrue(it.hasNext())__		stats = it.next()__		assertEquals(0, stats.getCheckpointId())__		assertTrue(stats.getStatus().isCompleted())___		assertFalse(it.hasNext())___		_		assertEquals(completed1.getCheckpointId(), snapshot.getHistory().getLatestCompletedCheckpoint().getCheckpointId())__		assertEquals(savepoint.getCheckpointId(), snapshot.getHistory().getLatestSavepoint().getCheckpointId())__		assertEquals(failed.getCheckpointId(), snapshot.getHistory().getLatestFailedCheckpoint().getCheckpointId())__		assertEquals(restored, snapshot.getLatestRestoredCheckpoint())__	};tests,tracking,of,checkpoints;test,public,void,test,checkpoint,tracking,throws,exception,int,number,of,subtasks,3,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,number,of,subtasks,checkpoint,stats,tracker,tracker,new,checkpoint,stats,tracker,10,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,new,unregistered,metrics,group,pending,checkpoint,stats,completed1,tracker,report,pending,checkpoint,0,1,checkpoint,properties,for,checkpoint,checkpoint,retention,policy,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,completed1,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,completed1,report,completed,checkpoint,null,pending,checkpoint,stats,failed,tracker,report,pending,checkpoint,1,1,checkpoint,properties,for,checkpoint,checkpoint,retention,policy,failed,report,failed,checkpoint,12,null,pending,checkpoint,stats,savepoint,tracker,report,pending,checkpoint,2,1,checkpoint,properties,for,savepoint,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,0,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,1,savepoint,report,subtask,stats,job,vertex,get,job,vertex,id,create,subtask,stats,2,savepoint,report,completed,checkpoint,null,pending,checkpoint,stats,in,progress,tracker,report,pending,checkpoint,3,1,checkpoint,properties,for,checkpoint,checkpoint,retention,policy,restored,checkpoint,stats,restored,new,restored,checkpoint,stats,81,checkpoint,properties,for,checkpoint,checkpoint,retention,policy,123,null,tracker,report,restored,checkpoint,restored,checkpoint,stats,snapshot,snapshot,tracker,create,snapshot,checkpoint,stats,counts,counts,snapshot,get,counts,assert,equals,4,counts,get,total,number,of,checkpoints,assert,equals,1,counts,get,number,of,in,progress,checkpoints,assert,equals,2,counts,get,number,of,completed,checkpoints,assert,equals,1,counts,get,number,of,failed,checkpoints,completed,checkpoint,stats,summary,summary,snapshot,get,summary,stats,assert,equals,2,summary,get,state,size,stats,get,count,assert,equals,2,summary,get,end,to,end,duration,stats,get,count,assert,equals,2,summary,get,alignment,buffered,stats,get,count,checkpoint,stats,history,history,snapshot,get,history,iterator,abstract,checkpoint,stats,it,history,get,checkpoints,iterator,assert,true,it,has,next,abstract,checkpoint,stats,stats,it,next,assert,equals,3,stats,get,checkpoint,id,assert,true,stats,get,status,is,in,progress,assert,true,it,has,next,stats,it,next,assert,equals,2,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed,assert,true,it,has,next,stats,it,next,assert,equals,1,stats,get,checkpoint,id,assert,true,stats,get,status,is,failed,assert,true,it,has,next,stats,it,next,assert,equals,0,stats,get,checkpoint,id,assert,true,stats,get,status,is,completed,assert,false,it,has,next,assert,equals,completed1,get,checkpoint,id,snapshot,get,history,get,latest,completed,checkpoint,get,checkpoint,id,assert,equals,savepoint,get,checkpoint,id,snapshot,get,history,get,latest,savepoint,get,checkpoint,id,assert,equals,failed,get,checkpoint,id,snapshot,get,history,get,latest,failed,checkpoint,get,checkpoint,id,assert,equals,restored,snapshot,get,latest,restored,checkpoint
CheckpointStatsTrackerTest -> @Test 	public void testMetrics() throws Exception;1484038132;Tests the registered metrics.;@Test_	public void testMetrics() throws Exception {_		MetricGroup metricGroup = mock(MetricGroup.class)___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(JobSnapshottingSettings.class),_			metricGroup)___		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_IN_PROGRESS_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_COMPLETED_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_FAILED_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_RESTORED_CHECKPOINT_TIMESTAMP_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_SIZE_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_DURATION_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_ALIGNMENT_BUFFERED_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_EXTERNAL_PATH_METRIC), any(Gauge.class))___		_		verify(metricGroup, times(9)).gauge(any(String.class), any(Gauge.class))__	};tests,the,registered,metrics;test,public,void,test,metrics,throws,exception,metric,group,metric,group,mock,metric,group,class,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,job,snapshotting,settings,class,metric,group,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,9,gauge,any,string,class,any,gauge,class
CheckpointStatsTrackerTest -> @Test 	public void testMetrics() throws Exception;1488304933;Tests the registered metrics.;@Test_	public void testMetrics() throws Exception {_		MetricGroup metricGroup = mock(MetricGroup.class)___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(JobSnapshottingSettings.class),_			metricGroup)___		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_IN_PROGRESS_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_COMPLETED_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_FAILED_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_RESTORED_CHECKPOINT_TIMESTAMP_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_SIZE_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_DURATION_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_ALIGNMENT_BUFFERED_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_EXTERNAL_PATH_METRIC), any(Gauge.class))___		_		verify(metricGroup, times(9)).gauge(any(String.class), any(Gauge.class))__	};tests,the,registered,metrics;test,public,void,test,metrics,throws,exception,metric,group,metric,group,mock,metric,group,class,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,job,snapshotting,settings,class,metric,group,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,9,gauge,any,string,class,any,gauge,class
CheckpointStatsTrackerTest -> @Test 	public void testMetricsRegistration() throws Exception;1490214056;Tests the registration of the checkpoint metrics.;@Test_	public void testMetricsRegistration() throws Exception {_		MetricGroup metricGroup = mock(MetricGroup.class)___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(JobSnapshottingSettings.class),_			metricGroup)___		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_IN_PROGRESS_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_COMPLETED_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_FAILED_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_RESTORED_CHECKPOINT_TIMESTAMP_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_SIZE_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_DURATION_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_ALIGNMENT_BUFFERED_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_EXTERNAL_PATH_METRIC), any(Gauge.class))___		_		verify(metricGroup, times(9)).gauge(any(String.class), any(Gauge.class))__	};tests,the,registration,of,the,checkpoint,metrics;test,public,void,test,metrics,registration,throws,exception,metric,group,metric,group,mock,metric,group,class,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,job,snapshotting,settings,class,metric,group,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,9,gauge,any,string,class,any,gauge,class
CheckpointStatsTrackerTest -> @Test 	public void testMetricsRegistration() throws Exception;1492678790;Tests the registration of the checkpoint metrics.;@Test_	public void testMetricsRegistration() throws Exception {_		MetricGroup metricGroup = mock(MetricGroup.class)___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(JobCheckpointingSettings.class),_			metricGroup)___		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_IN_PROGRESS_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_COMPLETED_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_FAILED_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_RESTORED_CHECKPOINT_TIMESTAMP_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_SIZE_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_DURATION_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_ALIGNMENT_BUFFERED_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_EXTERNAL_PATH_METRIC), any(Gauge.class))___		_		verify(metricGroup, times(9)).gauge(any(String.class), any(Gauge.class))__	};tests,the,registration,of,the,checkpoint,metrics;test,public,void,test,metrics,registration,throws,exception,metric,group,metric,group,mock,metric,group,class,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,job,checkpointing,settings,class,metric,group,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,9,gauge,any,string,class,any,gauge,class
CheckpointStatsTrackerTest -> @Test 	public void testMetricsRegistration() throws Exception;1506590912;Tests the registration of the checkpoint metrics.;@Test_	public void testMetricsRegistration() throws Exception {_		MetricGroup metricGroup = mock(MetricGroup.class)___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(JobCheckpointingSettings.class),_			metricGroup)___		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_IN_PROGRESS_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_COMPLETED_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_FAILED_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_RESTORED_CHECKPOINT_TIMESTAMP_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_SIZE_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_DURATION_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_ALIGNMENT_BUFFERED_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_EXTERNAL_PATH_METRIC), any(Gauge.class))___		_		verify(metricGroup, times(9)).gauge(any(String.class), any(Gauge.class))__	};tests,the,registration,of,the,checkpoint,metrics;test,public,void,test,metrics,registration,throws,exception,metric,group,metric,group,mock,metric,group,class,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,job,checkpointing,settings,class,metric,group,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,9,gauge,any,string,class,any,gauge,class
CheckpointStatsTrackerTest -> @Test 	public void testMetricsRegistration() throws Exception;1506618381;Tests the registration of the checkpoint metrics.;@Test_	public void testMetricsRegistration() throws Exception {_		MetricGroup metricGroup = mock(MetricGroup.class)___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			metricGroup)___		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_IN_PROGRESS_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_COMPLETED_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_FAILED_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_RESTORED_CHECKPOINT_TIMESTAMP_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_SIZE_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_DURATION_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_ALIGNMENT_BUFFERED_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_EXTERNAL_PATH_METRIC), any(Gauge.class))___		_		verify(metricGroup, times(9)).gauge(any(String.class), any(Gauge.class))__	};tests,the,registration,of,the,checkpoint,metrics;test,public,void,test,metrics,registration,throws,exception,metric,group,metric,group,mock,metric,group,class,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,metric,group,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,9,gauge,any,string,class,any,gauge,class
CheckpointStatsTrackerTest -> @Test 	public void testMetricsRegistration() throws Exception;1513075960;Tests the registration of the checkpoint metrics.;@Test_	public void testMetricsRegistration() throws Exception {_		MetricGroup metricGroup = mock(MetricGroup.class)___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			metricGroup)___		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_IN_PROGRESS_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_COMPLETED_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.NUMBER_OF_FAILED_CHECKPOINTS_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_RESTORED_CHECKPOINT_TIMESTAMP_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_SIZE_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_DURATION_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_ALIGNMENT_BUFFERED_METRIC), any(Gauge.class))__		verify(metricGroup, times(1)).gauge(eq(CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_EXTERNAL_PATH_METRIC), any(Gauge.class))___		_		verify(metricGroup, times(9)).gauge(any(String.class), any(Gauge.class))__	};tests,the,registration,of,the,checkpoint,metrics;test,public,void,test,metrics,registration,throws,exception,metric,group,metric,group,mock,metric,group,class,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,metric,group,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,1,gauge,eq,checkpoint,stats,tracker,any,gauge,class,verify,metric,group,times,9,gauge,any,string,class,any,gauge,class
CheckpointStatsTrackerTest -> @Test 	public void testMetricsRegistration() throws Exception;1513102157;Tests the registration of the checkpoint metrics.;@Test_	public void testMetricsRegistration() throws Exception {_		final Collection<String> registeredGaugeNames = new ArrayList<>()___		MetricGroup metricGroup = new UnregisteredMetricsGroup() {_			@Override_			public <T, G extends Gauge<T>> G gauge(String name, G gauge) {_				if (gauge != null) {_					registeredGaugeNames.add(name)__				}_				return gauge__			}_		}___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			metricGroup)___		_		assertTrue(registeredGaugeNames.containsAll(Arrays.asList(_			CheckpointStatsTracker.NUMBER_OF_CHECKPOINTS_METRIC,_			CheckpointStatsTracker.NUMBER_OF_IN_PROGRESS_CHECKPOINTS_METRIC,_			CheckpointStatsTracker.NUMBER_OF_COMPLETED_CHECKPOINTS_METRIC,_			CheckpointStatsTracker.NUMBER_OF_FAILED_CHECKPOINTS_METRIC,_			CheckpointStatsTracker.LATEST_RESTORED_CHECKPOINT_TIMESTAMP_METRIC,_			CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_SIZE_METRIC,_			CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_DURATION_METRIC,_			CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_ALIGNMENT_BUFFERED_METRIC,_			CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_EXTERNAL_PATH_METRIC_		)))__		assertEquals(9, registeredGaugeNames.size())__	};tests,the,registration,of,the,checkpoint,metrics;test,public,void,test,metrics,registration,throws,exception,final,collection,string,registered,gauge,names,new,array,list,metric,group,metric,group,new,unregistered,metrics,group,override,public,t,g,extends,gauge,t,g,gauge,string,name,g,gauge,if,gauge,null,registered,gauge,names,add,name,return,gauge,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,metric,group,assert,true,registered,gauge,names,contains,all,arrays,as,list,checkpoint,stats,tracker,checkpoint,stats,tracker,checkpoint,stats,tracker,checkpoint,stats,tracker,checkpoint,stats,tracker,checkpoint,stats,tracker,checkpoint,stats,tracker,checkpoint,stats,tracker,checkpoint,stats,tracker,assert,equals,9,registered,gauge,names,size
CheckpointStatsTrackerTest -> @Test 	public void testMetricsRegistration() throws Exception;1516295283;Tests the registration of the checkpoint metrics.;@Test_	public void testMetricsRegistration() throws Exception {_		final Collection<String> registeredGaugeNames = new ArrayList<>()___		MetricGroup metricGroup = new UnregisteredMetricsGroup() {_			@Override_			public <T, G extends Gauge<T>> G gauge(String name, G gauge) {_				if (gauge != null) {_					registeredGaugeNames.add(name)__				}_				return gauge__			}_		}___		ExecutionJobVertex jobVertex = mock(ExecutionJobVertex.class)__		when(jobVertex.getJobVertexId()).thenReturn(new JobVertexID())__		when(jobVertex.getParallelism()).thenReturn(1)___		new CheckpointStatsTracker(_			0,_			Collections.singletonList(jobVertex),_			mock(CheckpointCoordinatorConfiguration.class),_			metricGroup)___		_		assertTrue(registeredGaugeNames.containsAll(Arrays.asList(_			CheckpointStatsTracker.NUMBER_OF_CHECKPOINTS_METRIC,_			CheckpointStatsTracker.NUMBER_OF_IN_PROGRESS_CHECKPOINTS_METRIC,_			CheckpointStatsTracker.NUMBER_OF_COMPLETED_CHECKPOINTS_METRIC,_			CheckpointStatsTracker.NUMBER_OF_FAILED_CHECKPOINTS_METRIC,_			CheckpointStatsTracker.LATEST_RESTORED_CHECKPOINT_TIMESTAMP_METRIC,_			CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_SIZE_METRIC,_			CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_DURATION_METRIC,_			CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_ALIGNMENT_BUFFERED_METRIC,_			CheckpointStatsTracker.LATEST_COMPLETED_CHECKPOINT_EXTERNAL_PATH_METRIC_		)))__		assertEquals(9, registeredGaugeNames.size())__	};tests,the,registration,of,the,checkpoint,metrics;test,public,void,test,metrics,registration,throws,exception,final,collection,string,registered,gauge,names,new,array,list,metric,group,metric,group,new,unregistered,metrics,group,override,public,t,g,extends,gauge,t,g,gauge,string,name,g,gauge,if,gauge,null,registered,gauge,names,add,name,return,gauge,execution,job,vertex,job,vertex,mock,execution,job,vertex,class,when,job,vertex,get,job,vertex,id,then,return,new,job,vertex,id,when,job,vertex,get,parallelism,then,return,1,new,checkpoint,stats,tracker,0,collections,singleton,list,job,vertex,mock,checkpoint,coordinator,configuration,class,metric,group,assert,true,registered,gauge,names,contains,all,arrays,as,list,checkpoint,stats,tracker,checkpoint,stats,tracker,checkpoint,stats,tracker,checkpoint,stats,tracker,checkpoint,stats,tracker,checkpoint,stats,tracker,checkpoint,stats,tracker,checkpoint,stats,tracker,checkpoint,stats,tracker,assert,equals,9,registered,gauge,names,size
