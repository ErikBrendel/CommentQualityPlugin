commented;modifiers;parameterAmount;loc;comment;code
false;public;0;23;;@Test public void testCreateCustomHAServices() throws Exception {     Configuration config = new Configuration().     HighAvailabilityServices haServices = Mockito.mock(HighAvailabilityServices.class).     TestHAFactory.haServices = haServices.     Executor executor = Mockito.mock(Executor.class).     config.setString(HighAvailabilityOptions.HA_MODE, TestHAFactory.class.getName()).     // when     HighAvailabilityServices actualHaServices = HighAvailabilityServicesUtils.createAvailableOrEmbeddedServices(config, executor).     // then     assertSame(haServices, actualHaServices).     // when     actualHaServices = HighAvailabilityServicesUtils.createHighAvailabilityServices(config, executor, HighAvailabilityServicesUtils.AddressResolution.NO_ADDRESS_RESOLUTION).     // then     assertSame(haServices, actualHaServices). }
false;public;0;11;;@Test(expected = Exception.class) public void testCustomHAServicesFactoryNotDefined() throws Exception {     Configuration config = new Configuration().     Executor executor = Mockito.mock(Executor.class).     config.setString(HighAvailabilityOptions.HA_MODE, HighAvailabilityMode.FACTORY_CLASS.name().toLowerCase()).     // expect     HighAvailabilityServicesUtils.createAvailableOrEmbeddedServices(config, executor). }
false;public;2;4;;@Override public HighAvailabilityServices createHAServices(Configuration configuration, Executor executor) {     return haServices. }
