commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testThrowableType_NonRecoverable() {     assertEquals(ThrowableType.NonRecoverableError, ThrowableClassifier.getThrowableType(new SuppressRestartsException(new Exception("")))).     assertEquals(ThrowableType.NonRecoverableError, ThrowableClassifier.getThrowableType(new NoResourceAvailableException())). }
false;public;0;7;;@Test public void testThrowableType_Recoverable() {     assertEquals(ThrowableType.RecoverableError, ThrowableClassifier.getThrowableType(new Exception(""))).     assertEquals(ThrowableType.RecoverableError, ThrowableClassifier.getThrowableType(new ThrowableType_RecoverableFailure_Exception())). }
false;public;0;5;;@Test public void testThrowableType_EnvironmentError() {     assertEquals(ThrowableType.EnvironmentError, ThrowableClassifier.getThrowableType(new ThrowableType_EnvironmentError_Exception())). }
false;public;0;5;;@Test public void testThrowableType_PartitionDataMissingError() {     assertEquals(ThrowableType.PartitionDataMissingError, ThrowableClassifier.getThrowableType(new ThrowableType_PartitionDataMissingError_Exception())). }
false;public;0;5;;@Test public void testThrowableType_InheritError() {     assertEquals(ThrowableType.PartitionDataMissingError, ThrowableClassifier.getThrowableType(new Sub_ThrowableType_PartitionDataMissingError_Exception())). }
