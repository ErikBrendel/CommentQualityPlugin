commented;modifiers;parameterAmount;loc;comment;code
true;public;0;13;/**  * Shutdown the client and ZooKeeper server/cluster.  */ ;/**  * Shutdown the client and ZooKeeper server/cluster.  */ public void shutdown() throws Exception {     if (client != null) {         client.close().     }     if (zooKeeperServer != null) {         zooKeeperServer.close().     }     if (zooKeeperCluster != null) {         zooKeeperCluster.close().     } }
false;public;0;8;;public String getConnectString() {     if (zooKeeperServer != null) {         return zooKeeperServer.getConnectString().     } else {         return zooKeeperCluster.getConnectString().     } }
true;public;0;3;/**  * Returns a client for the started ZooKeeper server/cluster.  */ ;/**  * Returns a client for the started ZooKeeper server/cluster.  */ public CuratorFramework getClient() {     return client. }
false;public;0;3;;public String getClientNamespace() {     return client.getNamespace(). }
false;public;1;3;;public List<String> getChildren(String path) throws Exception {     return client.getChildren().forPath(path). }
true;public;0;5;/**  * Creates a new client for the started ZooKeeper server/cluster.  */ ;/**  * Creates a new client for the started ZooKeeper server/cluster.  */ public CuratorFramework createClient() {     Configuration config = new Configuration().     config.setString(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM, getConnectString()).     return ZooKeeperUtils.startCuratorFramework(config). }
true;public;0;25;/**  * Deletes all ZNodes under the root node.  *  * @throws Exception If the ZooKeeper operation fails  */ ;/**  * Deletes all ZNodes under the root node.  *  * @throws Exception If the ZooKeeper operation fails  */ public void deleteAll() throws Exception {     final String path = "/" + client.getNamespace().     int maxAttempts = 10.     for (int i = 0. i < maxAttempts. i++) {         try {             ZKPaths.deleteChildren(client.getZookeeperClient().getZooKeeper(), path, false).             return.         } catch (org.apache.zookeeper.KeeperException.NoNodeException e) {             // actually already deleted, that's fine.             return.         } catch (KeeperException.ConnectionLossException e) {             // Keep retrying             Thread.sleep(100).         }     }     throw new Exception("Could not clear the ZNodes under " + path + ". ZooKeeper is not in " + "a clean state."). }
