# id;timestamp;commentText;codeText;commentWords;codeWords
TaskManagerServicesTest -> @Test 	public void calculateNetworkBufNew() throws Exception;1494092429;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using new_configurations via {@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_FRACTION},_{@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MIN} and_{@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MAX}.;@Test_	public void calculateNetworkBufNew() throws Exception {_		Configuration config = new Configuration()___		_		final Float defaultFrac = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue()__		final Long defaultMin = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()__		final Long defaultMax = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config))___		calculateNetworkBufNew(config)__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,new,configurations,via,link,task,manager,options,link,task,manager,options,and,link,task,manager,options;test,public,void,calculate,network,buf,new,throws,exception,configuration,config,new,configuration,final,float,default,frac,task,manager,options,default,value,final,long,default,min,task,manager,options,default,value,final,long,default,max,task,manager,options,default,value,assert,equals,enforce,bounds,long,default,frac,10l,20,default,min,default,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config,assert,equals,enforce,bounds,long,default,frac,10l,30,default,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config,calculate,network,buf,new,config
TaskManagerServicesTest -> @Test 	public void calculateNetworkBufNew() throws Exception;1509547920;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using new_configurations via {@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_FRACTION},_{@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MIN} and_{@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MAX}.;@Test_	public void calculateNetworkBufNew() throws Exception {_		Configuration config = new Configuration()___		_		final Float defaultFrac = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue()__		final Long defaultMin = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()__		final Long defaultMax = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config))___		calculateNetworkBufNew(config)__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,new,configurations,via,link,task,manager,options,link,task,manager,options,and,link,task,manager,options;test,public,void,calculate,network,buf,new,throws,exception,configuration,config,new,configuration,final,float,default,frac,task,manager,options,default,value,final,long,default,min,task,manager,options,default,value,final,long,default,max,task,manager,options,default,value,assert,equals,enforce,bounds,long,default,frac,10l,20,default,min,default,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config,assert,equals,enforce,bounds,long,default,frac,10l,30,default,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config,calculate,network,buf,new,config
TaskManagerServicesTest -> @Test 	public void calculateNetworkBufNew() throws Exception;1511516912;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using new_configurations via {@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_FRACTION},_{@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MIN} and_{@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MAX}.;@Test_	public void calculateNetworkBufNew() throws Exception {_		Configuration config = new Configuration()___		_		final Float defaultFrac = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue()__		final Long defaultMin = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()__		final Long defaultMax = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config))___		calculateNetworkBufNew(config)__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,new,configurations,via,link,task,manager,options,link,task,manager,options,and,link,task,manager,options;test,public,void,calculate,network,buf,new,throws,exception,configuration,config,new,configuration,final,float,default,frac,task,manager,options,default,value,final,long,default,min,task,manager,options,default,value,final,long,default,max,task,manager,options,default,value,assert,equals,enforce,bounds,long,default,frac,10l,20,default,min,default,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config,assert,equals,enforce,bounds,long,default,frac,10l,30,default,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config,calculate,network,buf,new,config
TaskManagerServicesTest -> @Test 	public void calculateNetworkBufNew() throws Exception;1512555509;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using new_configurations via {@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_FRACTION},_{@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MIN} and_{@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MAX}.;@Test_	public void calculateNetworkBufNew() throws Exception {_		Configuration config = new Configuration()___		_		final Float defaultFrac = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue()__		final Long defaultMin = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()__		final Long defaultMax = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config))___		calculateNetworkBufNew(config)__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,new,configurations,via,link,task,manager,options,link,task,manager,options,and,link,task,manager,options;test,public,void,calculate,network,buf,new,throws,exception,configuration,config,new,configuration,final,float,default,frac,task,manager,options,default,value,final,long,default,min,task,manager,options,default,value,final,long,default,max,task,manager,options,default,value,assert,equals,enforce,bounds,long,default,frac,10l,20,default,min,default,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config,assert,equals,enforce,bounds,long,default,frac,10l,30,default,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config,calculate,network,buf,new,config
TaskManagerServicesTest -> @Test 	public void calculateNetworkBufNew() throws Exception;1515177485;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using new_configurations via {@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_FRACTION},_{@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MIN} and_{@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MAX}.;@Test_	public void calculateNetworkBufNew() throws Exception {_		Configuration config = new Configuration()___		_		final Float defaultFrac = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue()__		final Long defaultMin = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()__		final Long defaultMax = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config))___		calculateNetworkBufNew(config)__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,new,configurations,via,link,task,manager,options,link,task,manager,options,and,link,task,manager,options;test,public,void,calculate,network,buf,new,throws,exception,configuration,config,new,configuration,final,float,default,frac,task,manager,options,default,value,final,long,default,min,task,manager,options,default,value,final,long,default,max,task,manager,options,default,value,assert,equals,enforce,bounds,long,default,frac,10l,20,default,min,default,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config,assert,equals,enforce,bounds,long,default,frac,10l,30,default,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config,calculate,network,buf,new,config
TaskManagerServicesTest -> @Test 	public void calculateNetworkBufNew() throws Exception;1515481550;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using new_configurations via {@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_FRACTION},_{@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MIN} and_{@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MAX}.;@Test_	public void calculateNetworkBufNew() throws Exception {_		Configuration config = new Configuration()___		_		final Float defaultFrac = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue()__		final Long defaultMin = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()__		final Long defaultMax = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config))___		calculateNetworkBufNew(config)__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,new,configurations,via,link,task,manager,options,link,task,manager,options,and,link,task,manager,options;test,public,void,calculate,network,buf,new,throws,exception,configuration,config,new,configuration,final,float,default,frac,task,manager,options,default,value,final,long,default,min,task,manager,options,default,value,final,long,default,max,task,manager,options,default,value,assert,equals,enforce,bounds,long,default,frac,10l,20,default,min,default,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config,assert,equals,enforce,bounds,long,default,frac,10l,30,default,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config,calculate,network,buf,new,config
TaskManagerServicesTest -> @Test 	public void calculateNetworkBufNew() throws Exception;1521626214;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using new_configurations via {@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_FRACTION},_{@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MIN} and_{@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MAX}.;@Test_	public void calculateNetworkBufNew() throws Exception {_		Configuration config = new Configuration()___		_		final Float defaultFrac = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue()__		final Long defaultMin = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()__		final Long defaultMax = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config))___		calculateNetworkBufNew(config)__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,new,configurations,via,link,task,manager,options,link,task,manager,options,and,link,task,manager,options;test,public,void,calculate,network,buf,new,throws,exception,configuration,config,new,configuration,final,float,default,frac,task,manager,options,default,value,final,long,default,min,task,manager,options,default,value,final,long,default,max,task,manager,options,default,value,assert,equals,enforce,bounds,long,default,frac,10l,20,default,min,default,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config,assert,equals,enforce,bounds,long,default,frac,10l,30,default,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config,calculate,network,buf,new,config
TaskManagerServicesTest -> @Test 	public void calculateNetworkBufNew() throws Exception;1521626214;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using new_configurations via {@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_FRACTION},_{@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MIN} and_{@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MAX}.;@Test_	public void calculateNetworkBufNew() throws Exception {_		Configuration config = new Configuration()___		_		final Float defaultFrac = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue()__		final Long defaultMin = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()__		final Long defaultMax = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config))___		calculateNetworkBufNew(config)__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,new,configurations,via,link,task,manager,options,link,task,manager,options,and,link,task,manager,options;test,public,void,calculate,network,buf,new,throws,exception,configuration,config,new,configuration,final,float,default,frac,task,manager,options,default,value,final,long,default,min,task,manager,options,default,value,final,long,default,max,task,manager,options,default,value,assert,equals,enforce,bounds,long,default,frac,10l,20,default,min,default,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config,assert,equals,enforce,bounds,long,default,frac,10l,30,default,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config,calculate,network,buf,new,config
TaskManagerServicesTest -> @Test 	public void calculateNetworkBufNew() throws Exception;1522681180;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using new_configurations via {@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_FRACTION},_{@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MIN} and_{@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MAX}.;@Test_	public void calculateNetworkBufNew() throws Exception {_		Configuration config = new Configuration()___		_		final Float defaultFrac = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue()__		final Long defaultMin = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()__		final Long defaultMax = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config))___		calculateNetworkBufNew(config)__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,new,configurations,via,link,task,manager,options,link,task,manager,options,and,link,task,manager,options;test,public,void,calculate,network,buf,new,throws,exception,configuration,config,new,configuration,final,float,default,frac,task,manager,options,default,value,final,long,default,min,task,manager,options,default,value,final,long,default,max,task,manager,options,default,value,assert,equals,enforce,bounds,long,default,frac,10l,20,default,min,default,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config,assert,equals,enforce,bounds,long,default,frac,10l,30,default,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config,calculate,network,buf,new,config
TaskManagerServicesTest -> @Test 	public void calculateNetworkBufNew() throws Exception;1526494919;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using new_configurations via {@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_FRACTION},_{@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MIN} and_{@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MAX}.;@Test_	public void calculateNetworkBufNew() throws Exception {_		Configuration config = new Configuration()___		_		final Float defaultFrac = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue()__		final Long defaultMin = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()__		final Long defaultMax = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config))___		calculateNetworkBufNew(config)__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,new,configurations,via,link,task,manager,options,link,task,manager,options,and,link,task,manager,options;test,public,void,calculate,network,buf,new,throws,exception,configuration,config,new,configuration,final,float,default,frac,task,manager,options,default,value,final,long,default,min,task,manager,options,default,value,final,long,default,max,task,manager,options,default,value,assert,equals,enforce,bounds,long,default,frac,10l,20,default,min,default,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config,assert,equals,enforce,bounds,long,default,frac,10l,30,default,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config,calculate,network,buf,new,config
TaskManagerServicesTest -> @Test 	public void calculateNetworkBufNew() throws Exception;1530798894;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using new_configurations via {@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_FRACTION},_{@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MIN} and_{@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MAX}.;@Test_	public void calculateNetworkBufNew() throws Exception {_		Configuration config = new Configuration()___		_		final Float defaultFrac = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue()__		final Long defaultMin = MemorySize.parse(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()).getBytes()__		final Long defaultMax = MemorySize.parse(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()).getBytes()__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config))___		calculateNetworkBufNew(config)__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,new,configurations,via,link,task,manager,options,link,task,manager,options,and,link,task,manager,options;test,public,void,calculate,network,buf,new,throws,exception,configuration,config,new,configuration,final,float,default,frac,task,manager,options,default,value,final,long,default,min,memory,size,parse,task,manager,options,default,value,get,bytes,final,long,default,max,memory,size,parse,task,manager,options,default,value,get,bytes,assert,equals,enforce,bounds,long,default,frac,10l,20,default,min,default,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config,assert,equals,enforce,bounds,long,default,frac,10l,30,default,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config,calculate,network,buf,new,config
TaskManagerServicesTest -> private static void calculateNetworkBufNew(final Configuration config);1494092429;Helper to test {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} with the_new configuration parameters.__@param config configuration object;private static void calculateNetworkBufNew(final Configuration config) {_		_		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, 1L << 20)_ _		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, 1L << 20)_ __		_		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config))__		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(64L << 20, config))__		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(1L << 30, config))___		_		Random ran = new Random()__		for (int i = 0_ i < 1_000_ ++i){_			float frac = Math.max(ran.nextFloat(), Float.MIN_VALUE)__			config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, frac)___			long min = Math.max(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue(), ran.nextLong())__			config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, min)___			long max = Math.max(min, ran.nextLong())__			config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, max)___			long javaMem = Math.max(max + 1, ran.nextLong())___			final long networkBufMem = TaskManagerServices.calculateNetworkBufferMemory(javaMem, config)__			assertTrue("Lower bound not met with configuration: " + config.toString(),_				networkBufMem >= min)__			assertTrue("Upper bound not met with configuration: " + config.toString(),_				networkBufMem <= max)__			if (networkBufMem > min && networkBufMem < max) {_				assertEquals(_					"Wrong network buffer memory size with configuration: " + config.toString(),_					(long) (javaMem * frac), networkBufMem)__			}_		}_	};helper,to,test,link,task,manager,services,calculate,network,buffer,memory,long,configuration,with,the,new,configuration,parameters,param,config,configuration,object;private,static,void,calculate,network,buf,new,final,configuration,config,config,set,long,task,manager,options,1l,20,config,set,long,task,manager,options,1l,20,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,10l,20,config,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,64l,20,config,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,1l,30,config,random,ran,new,random,for,int,i,0,i,i,float,frac,math,max,ran,next,float,float,config,set,float,task,manager,options,frac,long,min,math,max,task,manager,options,default,value,ran,next,long,config,set,long,task,manager,options,min,long,max,math,max,min,ran,next,long,config,set,long,task,manager,options,max,long,java,mem,math,max,max,1,ran,next,long,final,long,network,buf,mem,task,manager,services,calculate,network,buffer,memory,java,mem,config,assert,true,lower,bound,not,met,with,configuration,config,to,string,network,buf,mem,min,assert,true,upper,bound,not,met,with,configuration,config,to,string,network,buf,mem,max,if,network,buf,mem,min,network,buf,mem,max,assert,equals,wrong,network,buffer,memory,size,with,configuration,config,to,string,long,java,mem,frac,network,buf,mem
TaskManagerServicesTest -> private static void calculateNetworkBufNew(final Configuration config);1509547920;Helper to test {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} with the_new configuration parameters.__@param config configuration object;private static void calculateNetworkBufNew(final Configuration config) {_		_		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, 1L << 20)_ _		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, 1L << 20)_ __		_		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config))__		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(64L << 20, config))__		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(1L << 30, config))___		_		Random ran = new Random()__		for (int i = 0_ i < 1_000_ ++i){_			float frac = Math.max(ran.nextFloat(), Float.MIN_VALUE)__			config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, frac)___			long min = Math.max(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue(), ran.nextLong())__			config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, min)___			long max = Math.max(min, ran.nextLong())__			config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, max)___			long javaMem = Math.max(max + 1, ran.nextLong())___			final long networkBufMem = TaskManagerServices.calculateNetworkBufferMemory(javaMem, config)__			assertTrue("Lower bound not met with configuration: " + config.toString(),_				networkBufMem >= min)__			assertTrue("Upper bound not met with configuration: " + config.toString(),_				networkBufMem <= max)__			if (networkBufMem > min && networkBufMem < max) {_				assertEquals(_					"Wrong network buffer memory size with configuration: " + config.toString(),_					(long) (javaMem * frac), networkBufMem)__			}_		}_	};helper,to,test,link,task,manager,services,calculate,network,buffer,memory,long,configuration,with,the,new,configuration,parameters,param,config,configuration,object;private,static,void,calculate,network,buf,new,final,configuration,config,config,set,long,task,manager,options,1l,20,config,set,long,task,manager,options,1l,20,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,10l,20,config,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,64l,20,config,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,1l,30,config,random,ran,new,random,for,int,i,0,i,i,float,frac,math,max,ran,next,float,float,config,set,float,task,manager,options,frac,long,min,math,max,task,manager,options,default,value,ran,next,long,config,set,long,task,manager,options,min,long,max,math,max,min,ran,next,long,config,set,long,task,manager,options,max,long,java,mem,math,max,max,1,ran,next,long,final,long,network,buf,mem,task,manager,services,calculate,network,buffer,memory,java,mem,config,assert,true,lower,bound,not,met,with,configuration,config,to,string,network,buf,mem,min,assert,true,upper,bound,not,met,with,configuration,config,to,string,network,buf,mem,max,if,network,buf,mem,min,network,buf,mem,max,assert,equals,wrong,network,buffer,memory,size,with,configuration,config,to,string,long,java,mem,frac,network,buf,mem
TaskManagerServicesTest -> private static void calculateNetworkBufNew(final Configuration config);1511516912;Helper to test {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} with the_new configuration parameters.__@param config configuration object;private static void calculateNetworkBufNew(final Configuration config) {_		_		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, 1L << 20)_ _		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, 1L << 20)_ __		_		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config))__		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(64L << 20, config))__		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(1L << 30, config))___		_		Random ran = new Random()__		for (int i = 0_ i < 1_000_ ++i){_			float frac = Math.max(ran.nextFloat(), Float.MIN_VALUE)__			config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, frac)___			long min = Math.max(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue(), ran.nextLong())__			config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, min)___			long max = Math.max(min, ran.nextLong())__			config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, max)___			long javaMem = Math.max(max + 1, ran.nextLong())___			final long networkBufMem = TaskManagerServices.calculateNetworkBufferMemory(javaMem, config)__			assertTrue("Lower bound not met with configuration: " + config.toString(),_				networkBufMem >= min)__			assertTrue("Upper bound not met with configuration: " + config.toString(),_				networkBufMem <= max)__			if (networkBufMem > min && networkBufMem < max) {_				assertEquals(_					"Wrong network buffer memory size with configuration: " + config.toString(),_					(long) (javaMem * frac), networkBufMem)__			}_		}_	};helper,to,test,link,task,manager,services,calculate,network,buffer,memory,long,configuration,with,the,new,configuration,parameters,param,config,configuration,object;private,static,void,calculate,network,buf,new,final,configuration,config,config,set,long,task,manager,options,1l,20,config,set,long,task,manager,options,1l,20,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,10l,20,config,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,64l,20,config,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,1l,30,config,random,ran,new,random,for,int,i,0,i,i,float,frac,math,max,ran,next,float,float,config,set,float,task,manager,options,frac,long,min,math,max,task,manager,options,default,value,ran,next,long,config,set,long,task,manager,options,min,long,max,math,max,min,ran,next,long,config,set,long,task,manager,options,max,long,java,mem,math,max,max,1,ran,next,long,final,long,network,buf,mem,task,manager,services,calculate,network,buffer,memory,java,mem,config,assert,true,lower,bound,not,met,with,configuration,config,to,string,network,buf,mem,min,assert,true,upper,bound,not,met,with,configuration,config,to,string,network,buf,mem,max,if,network,buf,mem,min,network,buf,mem,max,assert,equals,wrong,network,buffer,memory,size,with,configuration,config,to,string,long,java,mem,frac,network,buf,mem
TaskManagerServicesTest -> private static void calculateNetworkBufNew(final Configuration config);1512555509;Helper to test {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} with the_new configuration parameters.__@param config configuration object;private static void calculateNetworkBufNew(final Configuration config) {_		_		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, 1L << 20)_ _		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, 1L << 20)_ __		_		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config))__		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(64L << 20, config))__		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(1L << 30, config))___		_		Random ran = new Random()__		for (int i = 0_ i < 1_000_ ++i){_			float frac = Math.max(ran.nextFloat(), Float.MIN_VALUE)__			config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, frac)___			long min = Math.max(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue(), ran.nextLong())__			config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, min)___			long max = Math.max(min, ran.nextLong())__			config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, max)___			long javaMem = Math.max(max + 1, ran.nextLong())___			final long networkBufMem = TaskManagerServices.calculateNetworkBufferMemory(javaMem, config)___			if (networkBufMem < min) {_				fail("Lower bound not met with configuration: " + config.toString())__			}__			if (networkBufMem > max) {_				fail("Upper bound not met with configuration: " + config.toString())__			}__			if (networkBufMem > min && networkBufMem < max) {_				if ((javaMem  * frac) != networkBufMem) {_					fail("Wrong network buffer memory size with configuration: " + config.toString() +_					". Expected value: " + (javaMem * frac) + " actual value: " + networkBufMem + '.')__				}_			}_		}_	};helper,to,test,link,task,manager,services,calculate,network,buffer,memory,long,configuration,with,the,new,configuration,parameters,param,config,configuration,object;private,static,void,calculate,network,buf,new,final,configuration,config,config,set,long,task,manager,options,1l,20,config,set,long,task,manager,options,1l,20,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,10l,20,config,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,64l,20,config,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,1l,30,config,random,ran,new,random,for,int,i,0,i,i,float,frac,math,max,ran,next,float,float,config,set,float,task,manager,options,frac,long,min,math,max,task,manager,options,default,value,ran,next,long,config,set,long,task,manager,options,min,long,max,math,max,min,ran,next,long,config,set,long,task,manager,options,max,long,java,mem,math,max,max,1,ran,next,long,final,long,network,buf,mem,task,manager,services,calculate,network,buffer,memory,java,mem,config,if,network,buf,mem,min,fail,lower,bound,not,met,with,configuration,config,to,string,if,network,buf,mem,max,fail,upper,bound,not,met,with,configuration,config,to,string,if,network,buf,mem,min,network,buf,mem,max,if,java,mem,frac,network,buf,mem,fail,wrong,network,buffer,memory,size,with,configuration,config,to,string,expected,value,java,mem,frac,actual,value,network,buf,mem
TaskManagerServicesTest -> private static void calculateNetworkBufNew(final Configuration config);1515177485;Helper to test {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} with the_new configuration parameters.__@param config configuration object;private static void calculateNetworkBufNew(final Configuration config) {_		_		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, 1L << 20)_ _		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, 1L << 20)_ __		_		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config))__		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(64L << 20, config))__		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(1L << 30, config))___		_		Random ran = new Random()__		for (int i = 0_ i < 1_000_ ++i){_			float frac = Math.max(ran.nextFloat(), Float.MIN_VALUE)__			config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, frac)___			long min = Math.max(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue(), ran.nextLong())__			config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, min)___			long max = Math.max(min, ran.nextLong())__			config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, max)___			long javaMem = Math.max(max + 1, ran.nextLong())___			final long networkBufMem = TaskManagerServices.calculateNetworkBufferMemory(javaMem, config)___			if (networkBufMem < min) {_				fail("Lower bound not met with configuration: " + config.toString())__			}__			if (networkBufMem > max) {_				fail("Upper bound not met with configuration: " + config.toString())__			}__			if (networkBufMem > min && networkBufMem < max) {_				if ((javaMem  * frac) != networkBufMem) {_					fail("Wrong network buffer memory size with configuration: " + config.toString() +_					". Expected value: " + (javaMem * frac) + " actual value: " + networkBufMem + '.')__				}_			}_		}_	};helper,to,test,link,task,manager,services,calculate,network,buffer,memory,long,configuration,with,the,new,configuration,parameters,param,config,configuration,object;private,static,void,calculate,network,buf,new,final,configuration,config,config,set,long,task,manager,options,1l,20,config,set,long,task,manager,options,1l,20,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,10l,20,config,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,64l,20,config,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,1l,30,config,random,ran,new,random,for,int,i,0,i,i,float,frac,math,max,ran,next,float,float,config,set,float,task,manager,options,frac,long,min,math,max,task,manager,options,default,value,ran,next,long,config,set,long,task,manager,options,min,long,max,math,max,min,ran,next,long,config,set,long,task,manager,options,max,long,java,mem,math,max,max,1,ran,next,long,final,long,network,buf,mem,task,manager,services,calculate,network,buffer,memory,java,mem,config,if,network,buf,mem,min,fail,lower,bound,not,met,with,configuration,config,to,string,if,network,buf,mem,max,fail,upper,bound,not,met,with,configuration,config,to,string,if,network,buf,mem,min,network,buf,mem,max,if,java,mem,frac,network,buf,mem,fail,wrong,network,buffer,memory,size,with,configuration,config,to,string,expected,value,java,mem,frac,actual,value,network,buf,mem
TaskManagerServicesTest -> private static void calculateNetworkBufNew(final Configuration config);1515481550;Helper to test {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} with the_new configuration parameters.__@param config configuration object;private static void calculateNetworkBufNew(final Configuration config) {_		_		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, 1L << 20)_ _		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, 1L << 20)_ __		_		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config))__		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(64L << 20, config))__		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(1L << 30, config))___		_		Random ran = new Random()__		for (int i = 0_ i < 1_000_ ++i){_			float frac = Math.max(ran.nextFloat(), Float.MIN_VALUE)__			config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, frac)___			long min = Math.max(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue(), ran.nextLong())__			config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, min)___			long max = Math.max(min, ran.nextLong())__			config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, max)___			long javaMem = Math.max(max + 1, ran.nextLong())___			final long networkBufMem = TaskManagerServices.calculateNetworkBufferMemory(javaMem, config)___			if (networkBufMem < min) {_				fail("Lower bound not met with configuration: " + config.toString())__			}__			if (networkBufMem > max) {_				fail("Upper bound not met with configuration: " + config.toString())__			}__			if (networkBufMem > min && networkBufMem < max) {_				if ((javaMem  * frac) != networkBufMem) {_					fail("Wrong network buffer memory size with configuration: " + config.toString() +_					". Expected value: " + (javaMem * frac) + " actual value: " + networkBufMem + '.')__				}_			}_		}_	};helper,to,test,link,task,manager,services,calculate,network,buffer,memory,long,configuration,with,the,new,configuration,parameters,param,config,configuration,object;private,static,void,calculate,network,buf,new,final,configuration,config,config,set,long,task,manager,options,1l,20,config,set,long,task,manager,options,1l,20,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,10l,20,config,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,64l,20,config,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,1l,30,config,random,ran,new,random,for,int,i,0,i,i,float,frac,math,max,ran,next,float,float,config,set,float,task,manager,options,frac,long,min,math,max,task,manager,options,default,value,ran,next,long,config,set,long,task,manager,options,min,long,max,math,max,min,ran,next,long,config,set,long,task,manager,options,max,long,java,mem,math,max,max,1,ran,next,long,final,long,network,buf,mem,task,manager,services,calculate,network,buffer,memory,java,mem,config,if,network,buf,mem,min,fail,lower,bound,not,met,with,configuration,config,to,string,if,network,buf,mem,max,fail,upper,bound,not,met,with,configuration,config,to,string,if,network,buf,mem,min,network,buf,mem,max,if,java,mem,frac,network,buf,mem,fail,wrong,network,buffer,memory,size,with,configuration,config,to,string,expected,value,java,mem,frac,actual,value,network,buf,mem
TaskManagerServicesTest -> private static void calculateNetworkBufNew(final Configuration config);1521626214;Helper to test {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} with the_new configuration parameters.__@param config configuration object;private static void calculateNetworkBufNew(final Configuration config) {_		_		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, 1L << 20)_ _		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, 1L << 20)_ __		_		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config))__		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(64L << 20, config))__		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(1L << 30, config))___		_		Random ran = new Random()__		for (int i = 0_ i < 1_000_ ++i){_			float frac = Math.max(ran.nextFloat(), Float.MIN_VALUE)__			config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, frac)___			long min = Math.max(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue(), ran.nextLong())__			config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, min)___			long max = Math.max(min, ran.nextLong())__			config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, max)___			long javaMem = Math.max(max + 1, ran.nextLong())___			final long networkBufMem = TaskManagerServices.calculateNetworkBufferMemory(javaMem, config)___			if (networkBufMem < min) {_				fail("Lower bound not met with configuration: " + config.toString())__			}__			if (networkBufMem > max) {_				fail("Upper bound not met with configuration: " + config.toString())__			}__			if (networkBufMem > min && networkBufMem < max) {_				if ((javaMem  * frac) != networkBufMem) {_					fail("Wrong network buffer memory size with configuration: " + config.toString() +_					". Expected value: " + (javaMem * frac) + " actual value: " + networkBufMem + '.')__				}_			}_		}_	};helper,to,test,link,task,manager,services,calculate,network,buffer,memory,long,configuration,with,the,new,configuration,parameters,param,config,configuration,object;private,static,void,calculate,network,buf,new,final,configuration,config,config,set,long,task,manager,options,1l,20,config,set,long,task,manager,options,1l,20,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,10l,20,config,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,64l,20,config,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,1l,30,config,random,ran,new,random,for,int,i,0,i,i,float,frac,math,max,ran,next,float,float,config,set,float,task,manager,options,frac,long,min,math,max,task,manager,options,default,value,ran,next,long,config,set,long,task,manager,options,min,long,max,math,max,min,ran,next,long,config,set,long,task,manager,options,max,long,java,mem,math,max,max,1,ran,next,long,final,long,network,buf,mem,task,manager,services,calculate,network,buffer,memory,java,mem,config,if,network,buf,mem,min,fail,lower,bound,not,met,with,configuration,config,to,string,if,network,buf,mem,max,fail,upper,bound,not,met,with,configuration,config,to,string,if,network,buf,mem,min,network,buf,mem,max,if,java,mem,frac,network,buf,mem,fail,wrong,network,buffer,memory,size,with,configuration,config,to,string,expected,value,java,mem,frac,actual,value,network,buf,mem
TaskManagerServicesTest -> private static void calculateNetworkBufNew(final Configuration config);1521626214;Helper to test {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} with the_new configuration parameters.__@param config configuration object;private static void calculateNetworkBufNew(final Configuration config) {_		_		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, 1L << 20)_ _		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, 1L << 20)_ __		_		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config))__		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(64L << 20, config))__		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(1L << 30, config))___		_		Random ran = new Random()__		for (int i = 0_ i < 1_000_ ++i){_			float frac = Math.max(ran.nextFloat(), Float.MIN_VALUE)__			config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, frac)___			long min = Math.max(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue(), ran.nextLong())__			config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, min)___			long max = Math.max(min, ran.nextLong())__			config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, max)___			long javaMem = Math.max(max + 1, ran.nextLong())___			final long networkBufMem = TaskManagerServices.calculateNetworkBufferMemory(javaMem, config)___			if (networkBufMem < min) {_				fail("Lower bound not met with configuration: " + config.toString())__			}__			if (networkBufMem > max) {_				fail("Upper bound not met with configuration: " + config.toString())__			}__			if (networkBufMem > min && networkBufMem < max) {_				if ((javaMem  * frac) != networkBufMem) {_					fail("Wrong network buffer memory size with configuration: " + config.toString() +_					". Expected value: " + (javaMem * frac) + " actual value: " + networkBufMem + '.')__				}_			}_		}_	};helper,to,test,link,task,manager,services,calculate,network,buffer,memory,long,configuration,with,the,new,configuration,parameters,param,config,configuration,object;private,static,void,calculate,network,buf,new,final,configuration,config,config,set,long,task,manager,options,1l,20,config,set,long,task,manager,options,1l,20,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,10l,20,config,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,64l,20,config,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,1l,30,config,random,ran,new,random,for,int,i,0,i,i,float,frac,math,max,ran,next,float,float,config,set,float,task,manager,options,frac,long,min,math,max,task,manager,options,default,value,ran,next,long,config,set,long,task,manager,options,min,long,max,math,max,min,ran,next,long,config,set,long,task,manager,options,max,long,java,mem,math,max,max,1,ran,next,long,final,long,network,buf,mem,task,manager,services,calculate,network,buffer,memory,java,mem,config,if,network,buf,mem,min,fail,lower,bound,not,met,with,configuration,config,to,string,if,network,buf,mem,max,fail,upper,bound,not,met,with,configuration,config,to,string,if,network,buf,mem,min,network,buf,mem,max,if,java,mem,frac,network,buf,mem,fail,wrong,network,buffer,memory,size,with,configuration,config,to,string,expected,value,java,mem,frac,actual,value,network,buf,mem
TaskManagerServicesTest -> private static void calculateNetworkBufNew(final Configuration config);1522681180;Helper to test {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} with the_new configuration parameters.__@param config configuration object;private static void calculateNetworkBufNew(final Configuration config) {_		_		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, 1L << 20)_ _		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, 1L << 20)_ __		_		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config))__		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(64L << 20, config))__		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(1L << 30, config))___		_		Random ran = new Random()__		for (int i = 0_ i < 1_000_ ++i){_			float frac = Math.max(ran.nextFloat(), Float.MIN_VALUE)__			config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, frac)___			long min = Math.max(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue(), ran.nextLong())__			config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, min)___			long max = Math.max(min, ran.nextLong())__			config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, max)___			long javaMem = Math.max(max + 1, ran.nextLong())___			final long networkBufMem = TaskManagerServices.calculateNetworkBufferMemory(javaMem, config)___			if (networkBufMem < min) {_				fail("Lower bound not met with configuration: " + config.toString())__			}__			if (networkBufMem > max) {_				fail("Upper bound not met with configuration: " + config.toString())__			}__			if (networkBufMem > min && networkBufMem < max) {_				if ((javaMem  * frac) != networkBufMem) {_					fail("Wrong network buffer memory size with configuration: " + config.toString() +_					". Expected value: " + (javaMem * frac) + " actual value: " + networkBufMem + '.')__				}_			}_		}_	};helper,to,test,link,task,manager,services,calculate,network,buffer,memory,long,configuration,with,the,new,configuration,parameters,param,config,configuration,object;private,static,void,calculate,network,buf,new,final,configuration,config,config,set,long,task,manager,options,1l,20,config,set,long,task,manager,options,1l,20,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,10l,20,config,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,64l,20,config,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,1l,30,config,random,ran,new,random,for,int,i,0,i,i,float,frac,math,max,ran,next,float,float,config,set,float,task,manager,options,frac,long,min,math,max,task,manager,options,default,value,ran,next,long,config,set,long,task,manager,options,min,long,max,math,max,min,ran,next,long,config,set,long,task,manager,options,max,long,java,mem,math,max,max,1,ran,next,long,final,long,network,buf,mem,task,manager,services,calculate,network,buffer,memory,java,mem,config,if,network,buf,mem,min,fail,lower,bound,not,met,with,configuration,config,to,string,if,network,buf,mem,max,fail,upper,bound,not,met,with,configuration,config,to,string,if,network,buf,mem,min,network,buf,mem,max,if,java,mem,frac,network,buf,mem,fail,wrong,network,buffer,memory,size,with,configuration,config,to,string,expected,value,java,mem,frac,actual,value,network,buf,mem
TaskManagerServicesTest -> private static void calculateNetworkBufNew(final Configuration config);1526494919;Helper to test {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} with the_new configuration parameters.__@param config configuration object;private static void calculateNetworkBufNew(final Configuration config) {_		_		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, 1L << 20)_ _		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, 1L << 20)_ __		_		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config))__		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(64L << 20, config))__		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(1L << 30, config))___		_		Random ran = new Random()__		for (int i = 0_ i < 1_000_ ++i){_			float frac = Math.max(ran.nextFloat(), Float.MIN_VALUE)__			config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, frac)___			long min = Math.max(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue(), ran.nextLong())__			config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, min)___			long max = Math.max(min, ran.nextLong())__			config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, max)___			long javaMem = Math.max(max + 1, ran.nextLong())___			final long networkBufMem = TaskManagerServices.calculateNetworkBufferMemory(javaMem, config)___			if (networkBufMem < min) {_				fail("Lower bound not met with configuration: " + config.toString())__			}__			if (networkBufMem > max) {_				fail("Upper bound not met with configuration: " + config.toString())__			}__			if (networkBufMem > min && networkBufMem < max) {_				if ((javaMem  * frac) != networkBufMem) {_					fail("Wrong network buffer memory size with configuration: " + config.toString() +_					". Expected value: " + (javaMem * frac) + " actual value: " + networkBufMem + '.')__				}_			}_		}_	};helper,to,test,link,task,manager,services,calculate,network,buffer,memory,long,configuration,with,the,new,configuration,parameters,param,config,configuration,object;private,static,void,calculate,network,buf,new,final,configuration,config,config,set,long,task,manager,options,1l,20,config,set,long,task,manager,options,1l,20,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,10l,20,config,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,64l,20,config,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,1l,30,config,random,ran,new,random,for,int,i,0,i,i,float,frac,math,max,ran,next,float,float,config,set,float,task,manager,options,frac,long,min,math,max,task,manager,options,default,value,ran,next,long,config,set,long,task,manager,options,min,long,max,math,max,min,ran,next,long,config,set,long,task,manager,options,max,long,java,mem,math,max,max,1,ran,next,long,final,long,network,buf,mem,task,manager,services,calculate,network,buffer,memory,java,mem,config,if,network,buf,mem,min,fail,lower,bound,not,met,with,configuration,config,to,string,if,network,buf,mem,max,fail,upper,bound,not,met,with,configuration,config,to,string,if,network,buf,mem,min,network,buf,mem,max,if,java,mem,frac,network,buf,mem,fail,wrong,network,buffer,memory,size,with,configuration,config,to,string,expected,value,java,mem,frac,actual,value,network,buf,mem
TaskManagerServicesTest -> private static void calculateNetworkBufNew(final Configuration config);1530798894;Helper to test {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} with the_new configuration parameters.__@param config configuration object;private static void calculateNetworkBufNew(final Configuration config) {_		_		config.setString(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, String.valueOf(1L << 20))_ _		config.setString(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, String.valueOf(1L << 20))_ ___		_		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config))__		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(64L << 20, config))__		assertEquals(1 << 20, TaskManagerServices.calculateNetworkBufferMemory(1L << 30, config))___		_		Random ran = new Random()__		for (int i = 0_ i < 1_000_ ++i){_			float frac = Math.max(ran.nextFloat(), Float.MIN_VALUE)__			config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, frac)___			long min = Math.max(MemorySize.parse(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue()).getBytes(), ran.nextLong())__			config.setString(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, String.valueOf(min))____			long max = Math.max(min, ran.nextLong())__			config.setString(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, String.valueOf(max))___			long javaMem = Math.max(max + 1, ran.nextLong())___			final long networkBufMem = TaskManagerServices.calculateNetworkBufferMemory(javaMem, config)___			if (networkBufMem < min) {_				fail("Lower bound not met with configuration: " + config.toString())__			}__			if (networkBufMem > max) {_				fail("Upper bound not met with configuration: " + config.toString())__			}__			if (networkBufMem > min && networkBufMem < max) {_				if ((javaMem  * frac) != networkBufMem) {_					fail("Wrong network buffer memory size with configuration: " + config.toString() +_					". Expected value: " + (javaMem * frac) + " actual value: " + networkBufMem + '.')__				}_			}_		}_	};helper,to,test,link,task,manager,services,calculate,network,buffer,memory,long,configuration,with,the,new,configuration,parameters,param,config,configuration,object;private,static,void,calculate,network,buf,new,final,configuration,config,config,set,string,task,manager,options,string,value,of,1l,20,config,set,string,task,manager,options,string,value,of,1l,20,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,10l,20,config,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,64l,20,config,assert,equals,1,20,task,manager,services,calculate,network,buffer,memory,1l,30,config,random,ran,new,random,for,int,i,0,i,i,float,frac,math,max,ran,next,float,float,config,set,float,task,manager,options,frac,long,min,math,max,memory,size,parse,task,manager,options,default,value,get,bytes,ran,next,long,config,set,string,task,manager,options,string,value,of,min,long,max,math,max,min,ran,next,long,config,set,string,task,manager,options,string,value,of,max,long,java,mem,math,max,max,1,ran,next,long,final,long,network,buf,mem,task,manager,services,calculate,network,buffer,memory,java,mem,config,if,network,buf,mem,min,fail,lower,bound,not,met,with,configuration,config,to,string,if,network,buf,mem,max,fail,upper,bound,not,met,with,configuration,config,to,string,if,network,buf,mem,min,network,buf,mem,max,if,java,mem,frac,network,buf,mem,fail,wrong,network,buffer,memory,size,with,configuration,config,to,string,expected,value,java,mem,frac,actual,value,network,buf,mem
TaskManagerServicesTest -> @SuppressWarnings("deprecation") 	@Test 	public void calculateNetworkBufOld();1521626214;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using old_configurations via {@link TaskManagerOptions#NETWORK_NUM_BUFFERS}.;@SuppressWarnings("deprecation")_	@Test_	public void calculateNetworkBufOld() {_		Configuration config = new Configuration()__		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, 1)___		_		assertEquals(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue().longValue(),_			TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config))__		assertEquals(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue().longValue(),_			TaskManagerServices.calculateNetworkBufferMemory(64L << 20, config))___		_		int numBuffers = (int) ((2L << 32) / TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue())_ _		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, numBuffers)__		assertEquals(2L << 32, TaskManagerServices.calculateNetworkBufferMemory(2L << 33, config))__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,old,configurations,via,link,task,manager,options;suppress,warnings,deprecation,test,public,void,calculate,network,buf,old,configuration,config,new,configuration,config,set,integer,task,manager,options,1,assert,equals,task,manager,options,default,value,long,value,task,manager,services,calculate,network,buffer,memory,10l,20,config,assert,equals,task,manager,options,default,value,long,value,task,manager,services,calculate,network,buffer,memory,64l,20,config,int,num,buffers,int,2l,32,task,manager,options,default,value,config,set,integer,task,manager,options,num,buffers,assert,equals,2l,32,task,manager,services,calculate,network,buffer,memory,2l,33,config
TaskManagerServicesTest -> @SuppressWarnings("deprecation") 	@Test 	public void calculateNetworkBufOld();1522681180;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using old_configurations via {@link TaskManagerOptions#NETWORK_NUM_BUFFERS}.;@SuppressWarnings("deprecation")_	@Test_	public void calculateNetworkBufOld() {_		Configuration config = new Configuration()__		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, 1)___		_		assertEquals(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue().longValue(),_			TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config))__		assertEquals(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue().longValue(),_			TaskManagerServices.calculateNetworkBufferMemory(64L << 20, config))___		_		int numBuffers = (int) ((2L << 32) / TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue())_ _		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, numBuffers)__		assertEquals(2L << 32, TaskManagerServices.calculateNetworkBufferMemory(2L << 33, config))__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,old,configurations,via,link,task,manager,options;suppress,warnings,deprecation,test,public,void,calculate,network,buf,old,configuration,config,new,configuration,config,set,integer,task,manager,options,1,assert,equals,task,manager,options,default,value,long,value,task,manager,services,calculate,network,buffer,memory,10l,20,config,assert,equals,task,manager,options,default,value,long,value,task,manager,services,calculate,network,buffer,memory,64l,20,config,int,num,buffers,int,2l,32,task,manager,options,default,value,config,set,integer,task,manager,options,num,buffers,assert,equals,2l,32,task,manager,services,calculate,network,buffer,memory,2l,33,config
TaskManagerServicesTest -> @SuppressWarnings("deprecation") 	@Test 	public void calculateNetworkBufOld();1526494919;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using old_configurations via {@link TaskManagerOptions#NETWORK_NUM_BUFFERS}.;@SuppressWarnings("deprecation")_	@Test_	public void calculateNetworkBufOld() {_		Configuration config = new Configuration()__		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, 1)___		_		assertEquals(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue().longValue(),_			TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config))__		assertEquals(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue().longValue(),_			TaskManagerServices.calculateNetworkBufferMemory(64L << 20, config))___		_		int numBuffers = (int) ((2L << 32) / TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue())_ _		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, numBuffers)__		assertEquals(2L << 32, TaskManagerServices.calculateNetworkBufferMemory(2L << 33, config))__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,old,configurations,via,link,task,manager,options;suppress,warnings,deprecation,test,public,void,calculate,network,buf,old,configuration,config,new,configuration,config,set,integer,task,manager,options,1,assert,equals,task,manager,options,default,value,long,value,task,manager,services,calculate,network,buffer,memory,10l,20,config,assert,equals,task,manager,options,default,value,long,value,task,manager,services,calculate,network,buffer,memory,64l,20,config,int,num,buffers,int,2l,32,task,manager,options,default,value,config,set,integer,task,manager,options,num,buffers,assert,equals,2l,32,task,manager,services,calculate,network,buffer,memory,2l,33,config
TaskManagerServicesTest -> @SuppressWarnings("deprecation") 	@Test 	public void calculateNetworkBufOld();1530798894;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using old_configurations via {@link TaskManagerOptions#NETWORK_NUM_BUFFERS}.;@SuppressWarnings("deprecation")_	@Test_	public void calculateNetworkBufOld() {_		Configuration config = new Configuration()__		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, 1)___		_		assertEquals(MemorySize.parse(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue()).getBytes(),_			TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config))__		assertEquals(MemorySize.parse(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue()).getBytes(),_			TaskManagerServices.calculateNetworkBufferMemory(64L << 20, config))___		_		int numBuffers = (int) ((2L << 32) / MemorySize.parse(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue()).getBytes())_ _		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, numBuffers)__		assertEquals(2L << 32, TaskManagerServices.calculateNetworkBufferMemory(2L << 33, config))__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,old,configurations,via,link,task,manager,options;suppress,warnings,deprecation,test,public,void,calculate,network,buf,old,configuration,config,new,configuration,config,set,integer,task,manager,options,1,assert,equals,memory,size,parse,task,manager,options,default,value,get,bytes,task,manager,services,calculate,network,buffer,memory,10l,20,config,assert,equals,memory,size,parse,task,manager,options,default,value,get,bytes,task,manager,services,calculate,network,buffer,memory,64l,20,config,int,num,buffers,int,2l,32,memory,size,parse,task,manager,options,default,value,get,bytes,config,set,integer,task,manager,options,num,buffers,assert,equals,2l,32,task,manager,services,calculate,network,buffer,memory,2l,33,config
TaskManagerServicesTest -> @SuppressWarnings("deprecation") 	@Test 	public void calculateNetworkBufMixed() throws Exception;1494092429;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using mixed_old/new configurations.;@SuppressWarnings("deprecation")_	@Test_	public void calculateNetworkBufMixed() throws Exception {_		Configuration config = new Configuration()__		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, 1)___		final Float defaultFrac = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue()__		final Long defaultMin = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()__		final Long defaultMax = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()___		_		Configuration config1 = config.clone()__		config1.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		assertEquals(enforceBounds((long) (0.1f * (10L << 20)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config1))__		assertEquals(enforceBounds((long) (0.1f * (10L << 30)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))___		config1 = config.clone()__		long newMin = TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue()_ _		config1.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, newMin)__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), newMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 20), config1))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), newMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))___		config1 = config.clone()__		long newMax = Math.max(64L << 20 + 1, TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue())__		config1.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, newMax)__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), defaultMin, newMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config1))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), defaultMin, newMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))__		assertTrue(TaskManagerServicesConfiguration.hasNewNetworkBufConf(config1))___		_		calculateNetworkBufNew(config)__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,mixed,old,new,configurations;suppress,warnings,deprecation,test,public,void,calculate,network,buf,mixed,throws,exception,configuration,config,new,configuration,config,set,integer,task,manager,options,1,final,float,default,frac,task,manager,options,default,value,final,long,default,min,task,manager,options,default,value,final,long,default,max,task,manager,options,default,value,configuration,config1,config,clone,config1,set,float,task,manager,options,0,1f,assert,equals,enforce,bounds,long,0,1f,10l,20,default,min,default,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config1,assert,equals,enforce,bounds,long,0,1f,10l,30,default,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,config1,config,clone,long,new,min,task,manager,options,default,value,config1,set,long,task,manager,options,new,min,assert,equals,enforce,bounds,long,default,frac,10l,20,new,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,20,config1,assert,equals,enforce,bounds,long,default,frac,10l,30,new,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,config1,config,clone,long,new,max,math,max,64l,20,1,task,manager,options,default,value,config1,set,long,task,manager,options,new,max,assert,equals,enforce,bounds,long,default,frac,10l,20,default,min,new,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config1,assert,equals,enforce,bounds,long,default,frac,10l,30,default,min,new,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,assert,true,task,manager,services,configuration,has,new,network,buf,conf,config1,calculate,network,buf,new,config
TaskManagerServicesTest -> @SuppressWarnings("deprecation") 	@Test 	public void calculateNetworkBufMixed() throws Exception;1509547920;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using mixed_old/new configurations.;@SuppressWarnings("deprecation")_	@Test_	public void calculateNetworkBufMixed() throws Exception {_		Configuration config = new Configuration()__		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, 1)___		final Float defaultFrac = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue()__		final Long defaultMin = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()__		final Long defaultMax = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()___		_		Configuration config1 = config.clone()__		config1.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		assertEquals(enforceBounds((long) (0.1f * (10L << 20)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config1))__		assertEquals(enforceBounds((long) (0.1f * (10L << 30)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))___		config1 = config.clone()__		long newMin = TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue()_ _		config1.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, newMin)__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), newMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 20), config1))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), newMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))___		config1 = config.clone()__		long newMax = Math.max(64L << 20 + 1, TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue())__		config1.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, newMax)__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), defaultMin, newMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config1))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), defaultMin, newMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))__		assertTrue(TaskManagerServicesConfiguration.hasNewNetworkBufConf(config1))___		_		calculateNetworkBufNew(config)__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,mixed,old,new,configurations;suppress,warnings,deprecation,test,public,void,calculate,network,buf,mixed,throws,exception,configuration,config,new,configuration,config,set,integer,task,manager,options,1,final,float,default,frac,task,manager,options,default,value,final,long,default,min,task,manager,options,default,value,final,long,default,max,task,manager,options,default,value,configuration,config1,config,clone,config1,set,float,task,manager,options,0,1f,assert,equals,enforce,bounds,long,0,1f,10l,20,default,min,default,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config1,assert,equals,enforce,bounds,long,0,1f,10l,30,default,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,config1,config,clone,long,new,min,task,manager,options,default,value,config1,set,long,task,manager,options,new,min,assert,equals,enforce,bounds,long,default,frac,10l,20,new,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,20,config1,assert,equals,enforce,bounds,long,default,frac,10l,30,new,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,config1,config,clone,long,new,max,math,max,64l,20,1,task,manager,options,default,value,config1,set,long,task,manager,options,new,max,assert,equals,enforce,bounds,long,default,frac,10l,20,default,min,new,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config1,assert,equals,enforce,bounds,long,default,frac,10l,30,default,min,new,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,assert,true,task,manager,services,configuration,has,new,network,buf,conf,config1,calculate,network,buf,new,config
TaskManagerServicesTest -> @SuppressWarnings("deprecation") 	@Test 	public void calculateNetworkBufMixed() throws Exception;1511516912;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using mixed_old/new configurations.;@SuppressWarnings("deprecation")_	@Test_	public void calculateNetworkBufMixed() throws Exception {_		Configuration config = new Configuration()__		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, 1)___		final Float defaultFrac = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue()__		final Long defaultMin = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()__		final Long defaultMax = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()___		_		Configuration config1 = config.clone()__		config1.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		assertEquals(enforceBounds((long) (0.1f * (10L << 20)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config1))__		assertEquals(enforceBounds((long) (0.1f * (10L << 30)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))___		config1 = config.clone()__		long newMin = TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue()_ _		config1.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, newMin)__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), newMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 20), config1))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), newMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))___		config1 = config.clone()__		long newMax = Math.max(64L << 20 + 1, TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue())__		config1.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, newMax)__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), defaultMin, newMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config1))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), defaultMin, newMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))__		assertTrue(TaskManagerServicesConfiguration.hasNewNetworkBufConf(config1))___		_		calculateNetworkBufNew(config)__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,mixed,old,new,configurations;suppress,warnings,deprecation,test,public,void,calculate,network,buf,mixed,throws,exception,configuration,config,new,configuration,config,set,integer,task,manager,options,1,final,float,default,frac,task,manager,options,default,value,final,long,default,min,task,manager,options,default,value,final,long,default,max,task,manager,options,default,value,configuration,config1,config,clone,config1,set,float,task,manager,options,0,1f,assert,equals,enforce,bounds,long,0,1f,10l,20,default,min,default,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config1,assert,equals,enforce,bounds,long,0,1f,10l,30,default,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,config1,config,clone,long,new,min,task,manager,options,default,value,config1,set,long,task,manager,options,new,min,assert,equals,enforce,bounds,long,default,frac,10l,20,new,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,20,config1,assert,equals,enforce,bounds,long,default,frac,10l,30,new,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,config1,config,clone,long,new,max,math,max,64l,20,1,task,manager,options,default,value,config1,set,long,task,manager,options,new,max,assert,equals,enforce,bounds,long,default,frac,10l,20,default,min,new,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config1,assert,equals,enforce,bounds,long,default,frac,10l,30,default,min,new,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,assert,true,task,manager,services,configuration,has,new,network,buf,conf,config1,calculate,network,buf,new,config
TaskManagerServicesTest -> @SuppressWarnings("deprecation") 	@Test 	public void calculateNetworkBufMixed() throws Exception;1512555509;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using mixed_old/new configurations.;@SuppressWarnings("deprecation")_	@Test_	public void calculateNetworkBufMixed() throws Exception {_		Configuration config = new Configuration()__		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, 1)___		final Float defaultFrac = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue()__		final Long defaultMin = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()__		final Long defaultMax = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()___		_		Configuration config1 = config.clone()__		config1.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		assertEquals(enforceBounds((long) (0.1f * (10L << 20)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config1))__		assertEquals(enforceBounds((long) (0.1f * (10L << 30)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))___		config1 = config.clone()__		long newMin = TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue()_ _		config1.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, newMin)__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), newMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 20), config1))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), newMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))___		config1 = config.clone()__		long newMax = Math.max(64L << 20 + 1, TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue())__		config1.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, newMax)__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), defaultMin, newMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config1))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), defaultMin, newMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))__		assertTrue(TaskManagerServicesConfiguration.hasNewNetworkBufConf(config1))___		_		calculateNetworkBufNew(config)__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,mixed,old,new,configurations;suppress,warnings,deprecation,test,public,void,calculate,network,buf,mixed,throws,exception,configuration,config,new,configuration,config,set,integer,task,manager,options,1,final,float,default,frac,task,manager,options,default,value,final,long,default,min,task,manager,options,default,value,final,long,default,max,task,manager,options,default,value,configuration,config1,config,clone,config1,set,float,task,manager,options,0,1f,assert,equals,enforce,bounds,long,0,1f,10l,20,default,min,default,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config1,assert,equals,enforce,bounds,long,0,1f,10l,30,default,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,config1,config,clone,long,new,min,task,manager,options,default,value,config1,set,long,task,manager,options,new,min,assert,equals,enforce,bounds,long,default,frac,10l,20,new,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,20,config1,assert,equals,enforce,bounds,long,default,frac,10l,30,new,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,config1,config,clone,long,new,max,math,max,64l,20,1,task,manager,options,default,value,config1,set,long,task,manager,options,new,max,assert,equals,enforce,bounds,long,default,frac,10l,20,default,min,new,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config1,assert,equals,enforce,bounds,long,default,frac,10l,30,default,min,new,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,assert,true,task,manager,services,configuration,has,new,network,buf,conf,config1,calculate,network,buf,new,config
TaskManagerServicesTest -> @SuppressWarnings("deprecation") 	@Test 	public void calculateNetworkBufMixed() throws Exception;1515177485;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using mixed_old/new configurations.;@SuppressWarnings("deprecation")_	@Test_	public void calculateNetworkBufMixed() throws Exception {_		Configuration config = new Configuration()__		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, 1)___		final Float defaultFrac = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue()__		final Long defaultMin = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()__		final Long defaultMax = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()___		_		Configuration config1 = config.clone()__		config1.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		assertEquals(enforceBounds((long) (0.1f * (10L << 20)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config1))__		assertEquals(enforceBounds((long) (0.1f * (10L << 30)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))___		config1 = config.clone()__		long newMin = TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue()_ _		config1.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, newMin)__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), newMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 20), config1))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), newMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))___		config1 = config.clone()__		long newMax = Math.max(64L << 20 + 1, TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue())__		config1.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, newMax)__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), defaultMin, newMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config1))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), defaultMin, newMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))__		assertTrue(TaskManagerServicesConfiguration.hasNewNetworkBufConf(config1))___		_		calculateNetworkBufNew(config)__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,mixed,old,new,configurations;suppress,warnings,deprecation,test,public,void,calculate,network,buf,mixed,throws,exception,configuration,config,new,configuration,config,set,integer,task,manager,options,1,final,float,default,frac,task,manager,options,default,value,final,long,default,min,task,manager,options,default,value,final,long,default,max,task,manager,options,default,value,configuration,config1,config,clone,config1,set,float,task,manager,options,0,1f,assert,equals,enforce,bounds,long,0,1f,10l,20,default,min,default,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config1,assert,equals,enforce,bounds,long,0,1f,10l,30,default,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,config1,config,clone,long,new,min,task,manager,options,default,value,config1,set,long,task,manager,options,new,min,assert,equals,enforce,bounds,long,default,frac,10l,20,new,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,20,config1,assert,equals,enforce,bounds,long,default,frac,10l,30,new,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,config1,config,clone,long,new,max,math,max,64l,20,1,task,manager,options,default,value,config1,set,long,task,manager,options,new,max,assert,equals,enforce,bounds,long,default,frac,10l,20,default,min,new,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config1,assert,equals,enforce,bounds,long,default,frac,10l,30,default,min,new,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,assert,true,task,manager,services,configuration,has,new,network,buf,conf,config1,calculate,network,buf,new,config
TaskManagerServicesTest -> @SuppressWarnings("deprecation") 	@Test 	public void calculateNetworkBufMixed() throws Exception;1515481550;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using mixed_old/new configurations.;@SuppressWarnings("deprecation")_	@Test_	public void calculateNetworkBufMixed() throws Exception {_		Configuration config = new Configuration()__		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, 1)___		final Float defaultFrac = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue()__		final Long defaultMin = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()__		final Long defaultMax = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()___		_		Configuration config1 = config.clone()__		config1.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		assertEquals(enforceBounds((long) (0.1f * (10L << 20)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config1))__		assertEquals(enforceBounds((long) (0.1f * (10L << 30)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))___		config1 = config.clone()__		long newMin = TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue()_ _		config1.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, newMin)__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), newMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 20), config1))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), newMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))___		config1 = config.clone()__		long newMax = Math.max(64L << 20 + 1, TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue())__		config1.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, newMax)__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), defaultMin, newMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config1))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), defaultMin, newMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))__		assertTrue(TaskManagerServicesConfiguration.hasNewNetworkBufConf(config1))___		_		calculateNetworkBufNew(config)__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,mixed,old,new,configurations;suppress,warnings,deprecation,test,public,void,calculate,network,buf,mixed,throws,exception,configuration,config,new,configuration,config,set,integer,task,manager,options,1,final,float,default,frac,task,manager,options,default,value,final,long,default,min,task,manager,options,default,value,final,long,default,max,task,manager,options,default,value,configuration,config1,config,clone,config1,set,float,task,manager,options,0,1f,assert,equals,enforce,bounds,long,0,1f,10l,20,default,min,default,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config1,assert,equals,enforce,bounds,long,0,1f,10l,30,default,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,config1,config,clone,long,new,min,task,manager,options,default,value,config1,set,long,task,manager,options,new,min,assert,equals,enforce,bounds,long,default,frac,10l,20,new,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,20,config1,assert,equals,enforce,bounds,long,default,frac,10l,30,new,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,config1,config,clone,long,new,max,math,max,64l,20,1,task,manager,options,default,value,config1,set,long,task,manager,options,new,max,assert,equals,enforce,bounds,long,default,frac,10l,20,default,min,new,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config1,assert,equals,enforce,bounds,long,default,frac,10l,30,default,min,new,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,assert,true,task,manager,services,configuration,has,new,network,buf,conf,config1,calculate,network,buf,new,config
TaskManagerServicesTest -> @SuppressWarnings("deprecation") 	@Test 	public void calculateNetworkBufMixed() throws Exception;1521626214;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using mixed_old/new configurations.;@SuppressWarnings("deprecation")_	@Test_	public void calculateNetworkBufMixed() throws Exception {_		Configuration config = new Configuration()__		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, 1)___		final Float defaultFrac = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue()__		final Long defaultMin = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()__		final Long defaultMax = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()___		_		Configuration config1 = config.clone()__		config1.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		assertEquals(enforceBounds((long) (0.1f * (10L << 20)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config1))__		assertEquals(enforceBounds((long) (0.1f * (10L << 30)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))___		config1 = config.clone()__		long newMin = TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue()_ _		config1.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, newMin)__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), newMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 20), config1))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), newMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))___		config1 = config.clone()__		long newMax = Math.max(64L << 20 + 1, TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue())__		config1.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, newMax)__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), defaultMin, newMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config1))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), defaultMin, newMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))__		assertTrue(TaskManagerServicesConfiguration.hasNewNetworkBufConf(config1))___		_		calculateNetworkBufNew(config)__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,mixed,old,new,configurations;suppress,warnings,deprecation,test,public,void,calculate,network,buf,mixed,throws,exception,configuration,config,new,configuration,config,set,integer,task,manager,options,1,final,float,default,frac,task,manager,options,default,value,final,long,default,min,task,manager,options,default,value,final,long,default,max,task,manager,options,default,value,configuration,config1,config,clone,config1,set,float,task,manager,options,0,1f,assert,equals,enforce,bounds,long,0,1f,10l,20,default,min,default,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config1,assert,equals,enforce,bounds,long,0,1f,10l,30,default,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,config1,config,clone,long,new,min,task,manager,options,default,value,config1,set,long,task,manager,options,new,min,assert,equals,enforce,bounds,long,default,frac,10l,20,new,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,20,config1,assert,equals,enforce,bounds,long,default,frac,10l,30,new,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,config1,config,clone,long,new,max,math,max,64l,20,1,task,manager,options,default,value,config1,set,long,task,manager,options,new,max,assert,equals,enforce,bounds,long,default,frac,10l,20,default,min,new,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config1,assert,equals,enforce,bounds,long,default,frac,10l,30,default,min,new,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,assert,true,task,manager,services,configuration,has,new,network,buf,conf,config1,calculate,network,buf,new,config
TaskManagerServicesTest -> @SuppressWarnings("deprecation") 	@Test 	public void calculateNetworkBufMixed() throws Exception;1521626214;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using mixed_old/new configurations.;@SuppressWarnings("deprecation")_	@Test_	public void calculateNetworkBufMixed() throws Exception {_		Configuration config = new Configuration()__		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, 1)___		final Float defaultFrac = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue()__		final Long defaultMin = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()__		final Long defaultMax = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()___		_		Configuration config1 = config.clone()__		config1.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		assertEquals(enforceBounds((long) (0.1f * (10L << 20)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config1))__		assertEquals(enforceBounds((long) (0.1f * (10L << 30)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))___		config1 = config.clone()__		long newMin = TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue()_ _		config1.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, newMin)__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), newMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 20), config1))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), newMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))___		config1 = config.clone()__		long newMax = Math.max(64L << 20 + 1, TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue())__		config1.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, newMax)__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), defaultMin, newMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config1))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), defaultMin, newMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))__		assertTrue(TaskManagerServicesConfiguration.hasNewNetworkBufConf(config1))___		_		calculateNetworkBufNew(config)__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,mixed,old,new,configurations;suppress,warnings,deprecation,test,public,void,calculate,network,buf,mixed,throws,exception,configuration,config,new,configuration,config,set,integer,task,manager,options,1,final,float,default,frac,task,manager,options,default,value,final,long,default,min,task,manager,options,default,value,final,long,default,max,task,manager,options,default,value,configuration,config1,config,clone,config1,set,float,task,manager,options,0,1f,assert,equals,enforce,bounds,long,0,1f,10l,20,default,min,default,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config1,assert,equals,enforce,bounds,long,0,1f,10l,30,default,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,config1,config,clone,long,new,min,task,manager,options,default,value,config1,set,long,task,manager,options,new,min,assert,equals,enforce,bounds,long,default,frac,10l,20,new,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,20,config1,assert,equals,enforce,bounds,long,default,frac,10l,30,new,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,config1,config,clone,long,new,max,math,max,64l,20,1,task,manager,options,default,value,config1,set,long,task,manager,options,new,max,assert,equals,enforce,bounds,long,default,frac,10l,20,default,min,new,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config1,assert,equals,enforce,bounds,long,default,frac,10l,30,default,min,new,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,assert,true,task,manager,services,configuration,has,new,network,buf,conf,config1,calculate,network,buf,new,config
TaskManagerServicesTest -> @SuppressWarnings("deprecation") 	@Test 	public void calculateNetworkBufMixed() throws Exception;1522681180;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using mixed_old/new configurations.;@SuppressWarnings("deprecation")_	@Test_	public void calculateNetworkBufMixed() throws Exception {_		Configuration config = new Configuration()__		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, 1)___		final Float defaultFrac = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue()__		final Long defaultMin = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()__		final Long defaultMax = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()___		_		Configuration config1 = config.clone()__		config1.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		assertEquals(enforceBounds((long) (0.1f * (10L << 20)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config1))__		assertEquals(enforceBounds((long) (0.1f * (10L << 30)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))___		config1 = config.clone()__		long newMin = TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue()_ _		config1.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, newMin)__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), newMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 20), config1))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), newMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))___		config1 = config.clone()__		long newMax = Math.max(64L << 20 + 1, TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue())__		config1.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, newMax)__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), defaultMin, newMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config1))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), defaultMin, newMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))__		assertTrue(TaskManagerServicesConfiguration.hasNewNetworkBufConf(config1))___		_		calculateNetworkBufNew(config)__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,mixed,old,new,configurations;suppress,warnings,deprecation,test,public,void,calculate,network,buf,mixed,throws,exception,configuration,config,new,configuration,config,set,integer,task,manager,options,1,final,float,default,frac,task,manager,options,default,value,final,long,default,min,task,manager,options,default,value,final,long,default,max,task,manager,options,default,value,configuration,config1,config,clone,config1,set,float,task,manager,options,0,1f,assert,equals,enforce,bounds,long,0,1f,10l,20,default,min,default,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config1,assert,equals,enforce,bounds,long,0,1f,10l,30,default,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,config1,config,clone,long,new,min,task,manager,options,default,value,config1,set,long,task,manager,options,new,min,assert,equals,enforce,bounds,long,default,frac,10l,20,new,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,20,config1,assert,equals,enforce,bounds,long,default,frac,10l,30,new,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,config1,config,clone,long,new,max,math,max,64l,20,1,task,manager,options,default,value,config1,set,long,task,manager,options,new,max,assert,equals,enforce,bounds,long,default,frac,10l,20,default,min,new,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config1,assert,equals,enforce,bounds,long,default,frac,10l,30,default,min,new,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,assert,true,task,manager,services,configuration,has,new,network,buf,conf,config1,calculate,network,buf,new,config
TaskManagerServicesTest -> @SuppressWarnings("deprecation") 	@Test 	public void calculateNetworkBufMixed() throws Exception;1526494919;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using mixed_old/new configurations.;@SuppressWarnings("deprecation")_	@Test_	public void calculateNetworkBufMixed() throws Exception {_		Configuration config = new Configuration()__		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, 1)___		final Float defaultFrac = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue()__		final Long defaultMin = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()__		final Long defaultMax = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()___		_		Configuration config1 = config.clone()__		config1.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		assertEquals(enforceBounds((long) (0.1f * (10L << 20)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config1))__		assertEquals(enforceBounds((long) (0.1f * (10L << 30)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))___		config1 = config.clone()__		long newMin = TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue()_ _		config1.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, newMin)__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), newMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 20), config1))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), newMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))___		config1 = config.clone()__		long newMax = Math.max(64L << 20 + 1, TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue())__		config1.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, newMax)__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), defaultMin, newMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config1))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), defaultMin, newMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))__		assertTrue(TaskManagerServicesConfiguration.hasNewNetworkBufConf(config1))___		_		calculateNetworkBufNew(config)__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,mixed,old,new,configurations;suppress,warnings,deprecation,test,public,void,calculate,network,buf,mixed,throws,exception,configuration,config,new,configuration,config,set,integer,task,manager,options,1,final,float,default,frac,task,manager,options,default,value,final,long,default,min,task,manager,options,default,value,final,long,default,max,task,manager,options,default,value,configuration,config1,config,clone,config1,set,float,task,manager,options,0,1f,assert,equals,enforce,bounds,long,0,1f,10l,20,default,min,default,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config1,assert,equals,enforce,bounds,long,0,1f,10l,30,default,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,config1,config,clone,long,new,min,task,manager,options,default,value,config1,set,long,task,manager,options,new,min,assert,equals,enforce,bounds,long,default,frac,10l,20,new,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,20,config1,assert,equals,enforce,bounds,long,default,frac,10l,30,new,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,config1,config,clone,long,new,max,math,max,64l,20,1,task,manager,options,default,value,config1,set,long,task,manager,options,new,max,assert,equals,enforce,bounds,long,default,frac,10l,20,default,min,new,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config1,assert,equals,enforce,bounds,long,default,frac,10l,30,default,min,new,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,assert,true,task,manager,services,configuration,has,new,network,buf,conf,config1,calculate,network,buf,new,config
TaskManagerServicesTest -> @SuppressWarnings("deprecation") 	@Test 	public void calculateNetworkBufMixed() throws Exception;1530798894;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using mixed_old/new configurations.;@SuppressWarnings("deprecation")_	@Test_	public void calculateNetworkBufMixed() throws Exception {_		Configuration config = new Configuration()__		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, 1)___		final Float defaultFrac = TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION.defaultValue()__		final Long defaultMin = MemorySize.parse(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()).getBytes()__		final Long defaultMax = MemorySize.parse(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX.defaultValue()).getBytes()____		_		Configuration config1 = config.clone()__		config1.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		assertEquals(enforceBounds((long) (0.1f * (10L << 20)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config1))__		assertEquals(enforceBounds((long) (0.1f * (10L << 30)), defaultMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))___		config1 = config.clone()__		long newMin = MemorySize.parse(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue()).getBytes()_ _		config1.setString(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, String.valueOf(newMin))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), newMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 20), config1))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), newMin, defaultMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))___		config1 = config.clone()__		long newMax = Math.max(64L << 20 + 1, MemorySize.parse(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN.defaultValue()).getBytes())__		config1.setString(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, String.valueOf(newMax))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 20)), defaultMin, newMax),_			TaskManagerServices.calculateNetworkBufferMemory((64L << 20 + 1), config1))__		assertEquals(enforceBounds((long) (defaultFrac * (10L << 30)), defaultMin, newMax),_			TaskManagerServices.calculateNetworkBufferMemory((10L << 30), config1))__		assertTrue(TaskManagerServicesConfiguration.hasNewNetworkBufConf(config1))___		_		calculateNetworkBufNew(config)__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,mixed,old,new,configurations;suppress,warnings,deprecation,test,public,void,calculate,network,buf,mixed,throws,exception,configuration,config,new,configuration,config,set,integer,task,manager,options,1,final,float,default,frac,task,manager,options,default,value,final,long,default,min,memory,size,parse,task,manager,options,default,value,get,bytes,final,long,default,max,memory,size,parse,task,manager,options,default,value,get,bytes,configuration,config1,config,clone,config1,set,float,task,manager,options,0,1f,assert,equals,enforce,bounds,long,0,1f,10l,20,default,min,default,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config1,assert,equals,enforce,bounds,long,0,1f,10l,30,default,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,config1,config,clone,long,new,min,memory,size,parse,task,manager,options,default,value,get,bytes,config1,set,string,task,manager,options,string,value,of,new,min,assert,equals,enforce,bounds,long,default,frac,10l,20,new,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,20,config1,assert,equals,enforce,bounds,long,default,frac,10l,30,new,min,default,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,config1,config,clone,long,new,max,math,max,64l,20,1,memory,size,parse,task,manager,options,default,value,get,bytes,config1,set,string,task,manager,options,string,value,of,new,max,assert,equals,enforce,bounds,long,default,frac,10l,20,default,min,new,max,task,manager,services,calculate,network,buffer,memory,64l,20,1,config1,assert,equals,enforce,bounds,long,default,frac,10l,30,default,min,new,max,task,manager,services,calculate,network,buffer,memory,10l,30,config1,assert,true,task,manager,services,configuration,has,new,network,buf,conf,config1,calculate,network,buf,new,config
TaskManagerServicesTest -> private static TaskManagerServicesConfiguration getTmConfig( 		final long managedMemory, final float managedMemoryFraction, float networkBufFraction, 		long networkBufMin, long networkBufMax, 		final MemoryType memType);1494092429;Returns a task manager services configuration for the tests__@param managedMemory         see {@link TaskManagerOptions#MANAGED_MEMORY_SIZE}_@param managedMemoryFraction see {@link TaskManagerOptions#MANAGED_MEMORY_FRACTION}_@param networkBufFraction	see {@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_FRACTION}_@param networkBufMin			see {@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MIN}_@param networkBufMax			see {@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MAX}_@param memType				on-heap or off-heap__@return configuration object;private static TaskManagerServicesConfiguration getTmConfig(_		final long managedMemory, final float managedMemoryFraction, float networkBufFraction,_		long networkBufMin, long networkBufMax,_		final MemoryType memType) {__		final NetworkEnvironmentConfiguration networkConfig = new NetworkEnvironmentConfiguration(_			networkBufFraction,_			networkBufMin,_			networkBufMax,_			TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue(),_			memType,_			null,_			TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL.defaultValue(),_			TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX.defaultValue(),_			TaskManagerOptions.NETWORK_BUFFERS_PER_CHANNEL.defaultValue(),_			TaskManagerOptions.NETWORK_EXTRA_BUFFERS_PER_GATE.defaultValue(),_			null)___		return new TaskManagerServicesConfiguration(_			mock(InetAddress.class),_			new String[] {},_			networkConfig,_			QueryableStateConfiguration.disabled(),_			1,_			managedMemory,_			false,_			managedMemoryFraction,_			mock(MetricRegistryConfiguration.class),_			0)__	};returns,a,task,manager,services,configuration,for,the,tests,param,managed,memory,see,link,task,manager,options,param,managed,memory,fraction,see,link,task,manager,options,param,network,buf,fraction,see,link,task,manager,options,param,network,buf,min,see,link,task,manager,options,param,network,buf,max,see,link,task,manager,options,param,mem,type,on,heap,or,off,heap,return,configuration,object;private,static,task,manager,services,configuration,get,tm,config,final,long,managed,memory,final,float,managed,memory,fraction,float,network,buf,fraction,long,network,buf,min,long,network,buf,max,final,memory,type,mem,type,final,network,environment,configuration,network,config,new,network,environment,configuration,network,buf,fraction,network,buf,min,network,buf,max,task,manager,options,default,value,mem,type,null,task,manager,options,default,value,task,manager,options,default,value,task,manager,options,default,value,task,manager,options,default,value,null,return,new,task,manager,services,configuration,mock,inet,address,class,new,string,network,config,queryable,state,configuration,disabled,1,managed,memory,false,managed,memory,fraction,mock,metric,registry,configuration,class,0
TaskManagerServicesTest -> private static TaskManagerServicesConfiguration getTmConfig( 		final long managedMemory, final float managedMemoryFraction, float networkBufFraction, 		long networkBufMin, long networkBufMax, 		final MemoryType memType);1509547920;Returns a task manager services configuration for the tests__@param managedMemory         see {@link TaskManagerOptions#MANAGED_MEMORY_SIZE}_@param managedMemoryFraction see {@link TaskManagerOptions#MANAGED_MEMORY_FRACTION}_@param networkBufFraction	see {@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_FRACTION}_@param networkBufMin			see {@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MIN}_@param networkBufMax			see {@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MAX}_@param memType				on-heap or off-heap__@return configuration object;private static TaskManagerServicesConfiguration getTmConfig(_		final long managedMemory, final float managedMemoryFraction, float networkBufFraction,_		long networkBufMin, long networkBufMax,_		final MemoryType memType) {__		final NetworkEnvironmentConfiguration networkConfig = new NetworkEnvironmentConfiguration(_			networkBufFraction,_			networkBufMin,_			networkBufMax,_			TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue(),_			memType,_			null,_			TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL.defaultValue(),_			TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX.defaultValue(),_			TaskManagerOptions.NETWORK_BUFFERS_PER_CHANNEL.defaultValue(),_			TaskManagerOptions.NETWORK_EXTRA_BUFFERS_PER_GATE.defaultValue(),_			null)___		return new TaskManagerServicesConfiguration(_			mock(InetAddress.class),_			new String[] {},_			networkConfig,_			QueryableStateConfiguration.disabled(),_			1,_			managedMemory,_			false,_			managedMemoryFraction,_			0)__	};returns,a,task,manager,services,configuration,for,the,tests,param,managed,memory,see,link,task,manager,options,param,managed,memory,fraction,see,link,task,manager,options,param,network,buf,fraction,see,link,task,manager,options,param,network,buf,min,see,link,task,manager,options,param,network,buf,max,see,link,task,manager,options,param,mem,type,on,heap,or,off,heap,return,configuration,object;private,static,task,manager,services,configuration,get,tm,config,final,long,managed,memory,final,float,managed,memory,fraction,float,network,buf,fraction,long,network,buf,min,long,network,buf,max,final,memory,type,mem,type,final,network,environment,configuration,network,config,new,network,environment,configuration,network,buf,fraction,network,buf,min,network,buf,max,task,manager,options,default,value,mem,type,null,task,manager,options,default,value,task,manager,options,default,value,task,manager,options,default,value,task,manager,options,default,value,null,return,new,task,manager,services,configuration,mock,inet,address,class,new,string,network,config,queryable,state,configuration,disabled,1,managed,memory,false,managed,memory,fraction,0
TaskManagerServicesTest -> private static TaskManagerServicesConfiguration getTmConfig( 		final long managedMemory, final float managedMemoryFraction, float networkBufFraction, 		long networkBufMin, long networkBufMax, 		final MemoryType memType);1511516912;Returns a task manager services configuration for the tests__@param managedMemory         see {@link TaskManagerOptions#MANAGED_MEMORY_SIZE}_@param managedMemoryFraction see {@link TaskManagerOptions#MANAGED_MEMORY_FRACTION}_@param networkBufFraction	see {@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_FRACTION}_@param networkBufMin			see {@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MIN}_@param networkBufMax			see {@link TaskManagerOptions#NETWORK_BUFFERS_MEMORY_MAX}_@param memType				on-heap or off-heap__@return configuration object;private static TaskManagerServicesConfiguration getTmConfig(_		final long managedMemory, final float managedMemoryFraction, float networkBufFraction,_		long networkBufMin, long networkBufMax,_		final MemoryType memType) {__		final NetworkEnvironmentConfiguration networkConfig = new NetworkEnvironmentConfiguration(_			networkBufFraction,_			networkBufMin,_			networkBufMax,_			TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue(),_			null,_			TaskManagerOptions.NETWORK_REQUEST_BACKOFF_INITIAL.defaultValue(),_			TaskManagerOptions.NETWORK_REQUEST_BACKOFF_MAX.defaultValue(),_			TaskManagerOptions.NETWORK_BUFFERS_PER_CHANNEL.defaultValue(),_			TaskManagerOptions.NETWORK_EXTRA_BUFFERS_PER_GATE.defaultValue(),_			null)___		return new TaskManagerServicesConfiguration(_			mock(InetAddress.class),_			new String[] {},_			networkConfig,_			QueryableStateConfiguration.disabled(),_			1,_			managedMemory,_			memType,_			false,_			managedMemoryFraction,_			0)__	};returns,a,task,manager,services,configuration,for,the,tests,param,managed,memory,see,link,task,manager,options,param,managed,memory,fraction,see,link,task,manager,options,param,network,buf,fraction,see,link,task,manager,options,param,network,buf,min,see,link,task,manager,options,param,network,buf,max,see,link,task,manager,options,param,mem,type,on,heap,or,off,heap,return,configuration,object;private,static,task,manager,services,configuration,get,tm,config,final,long,managed,memory,final,float,managed,memory,fraction,float,network,buf,fraction,long,network,buf,min,long,network,buf,max,final,memory,type,mem,type,final,network,environment,configuration,network,config,new,network,environment,configuration,network,buf,fraction,network,buf,min,network,buf,max,task,manager,options,default,value,null,task,manager,options,default,value,task,manager,options,default,value,task,manager,options,default,value,task,manager,options,default,value,null,return,new,task,manager,services,configuration,mock,inet,address,class,new,string,network,config,queryable,state,configuration,disabled,1,managed,memory,mem,type,false,managed,memory,fraction,0
TaskManagerServicesTest -> private static long enforceBounds(final long value, final long lower, final long upper);1494092429;Returns the value or the lower/upper bound in case the value is less/greater than the lower/upper bound, respectively.__@param value value to inspec_@param lower lower bound_@param upper upper bound__@return <tt>min(upper, max(lower, value))</tt>;private static long enforceBounds(final long value, final long lower, final long upper) {_		return Math.min(upper, Math.max(lower, value))__	};returns,the,value,or,the,lower,upper,bound,in,case,the,value,is,less,greater,than,the,lower,upper,bound,respectively,param,value,value,to,inspec,param,lower,lower,bound,param,upper,upper,bound,return,tt,min,upper,max,lower,value,tt;private,static,long,enforce,bounds,final,long,value,final,long,lower,final,long,upper,return,math,min,upper,math,max,lower,value
TaskManagerServicesTest -> private static long enforceBounds(final long value, final long lower, final long upper);1509547920;Returns the value or the lower/upper bound in case the value is less/greater than the lower/upper bound, respectively.__@param value value to inspec_@param lower lower bound_@param upper upper bound__@return <tt>min(upper, max(lower, value))</tt>;private static long enforceBounds(final long value, final long lower, final long upper) {_		return Math.min(upper, Math.max(lower, value))__	};returns,the,value,or,the,lower,upper,bound,in,case,the,value,is,less,greater,than,the,lower,upper,bound,respectively,param,value,value,to,inspec,param,lower,lower,bound,param,upper,upper,bound,return,tt,min,upper,max,lower,value,tt;private,static,long,enforce,bounds,final,long,value,final,long,lower,final,long,upper,return,math,min,upper,math,max,lower,value
TaskManagerServicesTest -> private static long enforceBounds(final long value, final long lower, final long upper);1511516912;Returns the value or the lower/upper bound in case the value is less/greater than the lower/upper bound, respectively.__@param value value to inspec_@param lower lower bound_@param upper upper bound__@return <tt>min(upper, max(lower, value))</tt>;private static long enforceBounds(final long value, final long lower, final long upper) {_		return Math.min(upper, Math.max(lower, value))__	};returns,the,value,or,the,lower,upper,bound,in,case,the,value,is,less,greater,than,the,lower,upper,bound,respectively,param,value,value,to,inspec,param,lower,lower,bound,param,upper,upper,bound,return,tt,min,upper,max,lower,value,tt;private,static,long,enforce,bounds,final,long,value,final,long,lower,final,long,upper,return,math,min,upper,math,max,lower,value
TaskManagerServicesTest -> private static long enforceBounds(final long value, final long lower, final long upper);1512555509;Returns the value or the lower/upper bound in case the value is less/greater than the lower/upper bound, respectively.__@param value value to inspec_@param lower lower bound_@param upper upper bound__@return <tt>min(upper, max(lower, value))</tt>;private static long enforceBounds(final long value, final long lower, final long upper) {_		return Math.min(upper, Math.max(lower, value))__	};returns,the,value,or,the,lower,upper,bound,in,case,the,value,is,less,greater,than,the,lower,upper,bound,respectively,param,value,value,to,inspec,param,lower,lower,bound,param,upper,upper,bound,return,tt,min,upper,max,lower,value,tt;private,static,long,enforce,bounds,final,long,value,final,long,lower,final,long,upper,return,math,min,upper,math,max,lower,value
TaskManagerServicesTest -> private static long enforceBounds(final long value, final long lower, final long upper);1515177485;Returns the value or the lower/upper bound in case the value is less/greater than the lower/upper bound, respectively.__@param value value to inspect_@param lower lower bound_@param upper upper bound__@return <tt>min(upper, max(lower, value))</tt>;private static long enforceBounds(final long value, final long lower, final long upper) {_		return Math.min(upper, Math.max(lower, value))__	};returns,the,value,or,the,lower,upper,bound,in,case,the,value,is,less,greater,than,the,lower,upper,bound,respectively,param,value,value,to,inspect,param,lower,lower,bound,param,upper,upper,bound,return,tt,min,upper,max,lower,value,tt;private,static,long,enforce,bounds,final,long,value,final,long,lower,final,long,upper,return,math,min,upper,math,max,lower,value
TaskManagerServicesTest -> private static long enforceBounds(final long value, final long lower, final long upper);1515481550;Returns the value or the lower/upper bound in case the value is less/greater than the lower/upper bound, respectively.__@param value value to inspect_@param lower lower bound_@param upper upper bound__@return <tt>min(upper, max(lower, value))</tt>;private static long enforceBounds(final long value, final long lower, final long upper) {_		return Math.min(upper, Math.max(lower, value))__	};returns,the,value,or,the,lower,upper,bound,in,case,the,value,is,less,greater,than,the,lower,upper,bound,respectively,param,value,value,to,inspect,param,lower,lower,bound,param,upper,upper,bound,return,tt,min,upper,max,lower,value,tt;private,static,long,enforce,bounds,final,long,value,final,long,lower,final,long,upper,return,math,min,upper,math,max,lower,value
TaskManagerServicesTest -> private static long enforceBounds(final long value, final long lower, final long upper);1521626214;Returns the value or the lower/upper bound in case the value is less/greater than the lower/upper bound, respectively.__@param value value to inspect_@param lower lower bound_@param upper upper bound__@return <tt>min(upper, max(lower, value))</tt>;private static long enforceBounds(final long value, final long lower, final long upper) {_		return Math.min(upper, Math.max(lower, value))__	};returns,the,value,or,the,lower,upper,bound,in,case,the,value,is,less,greater,than,the,lower,upper,bound,respectively,param,value,value,to,inspect,param,lower,lower,bound,param,upper,upper,bound,return,tt,min,upper,max,lower,value,tt;private,static,long,enforce,bounds,final,long,value,final,long,lower,final,long,upper,return,math,min,upper,math,max,lower,value
TaskManagerServicesTest -> private static long enforceBounds(final long value, final long lower, final long upper);1521626214;Returns the value or the lower/upper bound in case the value is less/greater than the lower/upper bound, respectively.__@param value value to inspect_@param lower lower bound_@param upper upper bound__@return <tt>min(upper, max(lower, value))</tt>;private static long enforceBounds(final long value, final long lower, final long upper) {_		return Math.min(upper, Math.max(lower, value))__	};returns,the,value,or,the,lower,upper,bound,in,case,the,value,is,less,greater,than,the,lower,upper,bound,respectively,param,value,value,to,inspect,param,lower,lower,bound,param,upper,upper,bound,return,tt,min,upper,max,lower,value,tt;private,static,long,enforce,bounds,final,long,value,final,long,lower,final,long,upper,return,math,min,upper,math,max,lower,value
TaskManagerServicesTest -> private static long enforceBounds(final long value, final long lower, final long upper);1522681180;Returns the value or the lower/upper bound in case the value is less/greater than the lower/upper bound, respectively.__@param value value to inspect_@param lower lower bound_@param upper upper bound__@return <tt>min(upper, max(lower, value))</tt>;private static long enforceBounds(final long value, final long lower, final long upper) {_		return Math.min(upper, Math.max(lower, value))__	};returns,the,value,or,the,lower,upper,bound,in,case,the,value,is,less,greater,than,the,lower,upper,bound,respectively,param,value,value,to,inspect,param,lower,lower,bound,param,upper,upper,bound,return,tt,min,upper,max,lower,value,tt;private,static,long,enforce,bounds,final,long,value,final,long,lower,final,long,upper,return,math,min,upper,math,max,lower,value
TaskManagerServicesTest -> private static long enforceBounds(final long value, final long lower, final long upper);1526494919;Returns the value or the lower/upper bound in case the value is less/greater than the lower/upper bound, respectively.__@param value value to inspect_@param lower lower bound_@param upper upper bound__@return <tt>min(upper, max(lower, value))</tt>;private static long enforceBounds(final long value, final long lower, final long upper) {_		return Math.min(upper, Math.max(lower, value))__	};returns,the,value,or,the,lower,upper,bound,in,case,the,value,is,less,greater,than,the,lower,upper,bound,respectively,param,value,value,to,inspect,param,lower,lower,bound,param,upper,upper,bound,return,tt,min,upper,max,lower,value,tt;private,static,long,enforce,bounds,final,long,value,final,long,lower,final,long,upper,return,math,min,upper,math,max,lower,value
TaskManagerServicesTest -> private static long enforceBounds(final long value, final long lower, final long upper);1530798894;Returns the value or the lower/upper bound in case the value is less/greater than the lower/upper bound, respectively.__@param value value to inspect_@param lower lower bound_@param upper upper bound__@return <tt>min(upper, max(lower, value))</tt>;private static long enforceBounds(final long value, final long lower, final long upper) {_		return Math.min(upper, Math.max(lower, value))__	};returns,the,value,or,the,lower,upper,bound,in,case,the,value,is,less,greater,than,the,lower,upper,bound,respectively,param,value,value,to,inspect,param,lower,lower,bound,param,upper,upper,bound,return,tt,min,upper,max,lower,value,tt;private,static,long,enforce,bounds,final,long,value,final,long,lower,final,long,upper,return,math,min,upper,math,max,lower,value
TaskManagerServicesTest -> @Test 	public void calculateHeapSizeMB() throws Exception;1494092429;Test for {@link TaskManagerServices#calculateHeapSizeMB(long, Configuration)} with some_manually calculated scenarios.;@Test_	public void calculateHeapSizeMB() throws Exception {_		Configuration config = new Configuration()__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, 64L << 20)_ _		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, 1L << 30)_ __		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, false)__		assertEquals(1000, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, true)__		config.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, 10)_ _		assertEquals(890, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, -1)_ _		config.setFloat(TaskManagerOptions.MANAGED_MEMORY_FRACTION, 0.1f)_ _		assertEquals(810, TaskManagerServices.calculateHeapSizeMB(1000, config))__	};test,for,link,task,manager,services,calculate,heap,size,mb,long,configuration,with,some,manually,calculated,scenarios;test,public,void,calculate,heap,size,mb,throws,exception,configuration,config,new,configuration,config,set,float,task,manager,options,0,1f,config,set,long,task,manager,options,64l,20,config,set,long,task,manager,options,1l,30,config,set,boolean,task,manager,options,false,assert,equals,1000,task,manager,services,calculate,heap,size,mb,1000,config,config,set,boolean,task,manager,options,true,config,set,long,task,manager,options,10,assert,equals,890,task,manager,services,calculate,heap,size,mb,1000,config,config,set,long,task,manager,options,1,config,set,float,task,manager,options,0,1f,assert,equals,810,task,manager,services,calculate,heap,size,mb,1000,config
TaskManagerServicesTest -> @Test 	public void calculateHeapSizeMB() throws Exception;1509547920;Test for {@link TaskManagerServices#calculateHeapSizeMB(long, Configuration)} with some_manually calculated scenarios.;@Test_	public void calculateHeapSizeMB() throws Exception {_		Configuration config = new Configuration()__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, 64L << 20)_ _		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, 1L << 30)_ __		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, false)__		assertEquals(1000, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, true)__		config.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, 10)_ _		assertEquals(890, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, -1)_ _		config.setFloat(TaskManagerOptions.MANAGED_MEMORY_FRACTION, 0.1f)_ _		assertEquals(810, TaskManagerServices.calculateHeapSizeMB(1000, config))__	};test,for,link,task,manager,services,calculate,heap,size,mb,long,configuration,with,some,manually,calculated,scenarios;test,public,void,calculate,heap,size,mb,throws,exception,configuration,config,new,configuration,config,set,float,task,manager,options,0,1f,config,set,long,task,manager,options,64l,20,config,set,long,task,manager,options,1l,30,config,set,boolean,task,manager,options,false,assert,equals,1000,task,manager,services,calculate,heap,size,mb,1000,config,config,set,boolean,task,manager,options,true,config,set,long,task,manager,options,10,assert,equals,890,task,manager,services,calculate,heap,size,mb,1000,config,config,set,long,task,manager,options,1,config,set,float,task,manager,options,0,1f,assert,equals,810,task,manager,services,calculate,heap,size,mb,1000,config
TaskManagerServicesTest -> @Test 	public void calculateHeapSizeMB() throws Exception;1511516912;Test for {@link TaskManagerServices#calculateHeapSizeMB(long, Configuration)} with some_manually calculated scenarios.;@Test_	public void calculateHeapSizeMB() throws Exception {_		Configuration config = new Configuration()__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, 64L << 20)_ _		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, 1L << 30)_ __		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, false)__		assertEquals(900, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, false)__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.2f)__		assertEquals(800, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, true)__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		config.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, 10)_ _		assertEquals(890, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, -1)_ _		config.setFloat(TaskManagerOptions.MANAGED_MEMORY_FRACTION, 0.1f)_ _		assertEquals(810, TaskManagerServices.calculateHeapSizeMB(1000, config))__	};test,for,link,task,manager,services,calculate,heap,size,mb,long,configuration,with,some,manually,calculated,scenarios;test,public,void,calculate,heap,size,mb,throws,exception,configuration,config,new,configuration,config,set,float,task,manager,options,0,1f,config,set,long,task,manager,options,64l,20,config,set,long,task,manager,options,1l,30,config,set,boolean,task,manager,options,false,assert,equals,900,task,manager,services,calculate,heap,size,mb,1000,config,config,set,boolean,task,manager,options,false,config,set,float,task,manager,options,0,2f,assert,equals,800,task,manager,services,calculate,heap,size,mb,1000,config,config,set,boolean,task,manager,options,true,config,set,float,task,manager,options,0,1f,config,set,long,task,manager,options,10,assert,equals,890,task,manager,services,calculate,heap,size,mb,1000,config,config,set,long,task,manager,options,1,config,set,float,task,manager,options,0,1f,assert,equals,810,task,manager,services,calculate,heap,size,mb,1000,config
TaskManagerServicesTest -> @Test 	public void calculateHeapSizeMB() throws Exception;1512555509;Test for {@link TaskManagerServices#calculateHeapSizeMB(long, Configuration)} with some_manually calculated scenarios.;@Test_	public void calculateHeapSizeMB() throws Exception {_		Configuration config = new Configuration()__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, 64L << 20)_ _		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, 1L << 30)_ __		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, false)__		assertEquals(900, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, false)__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.2f)__		assertEquals(800, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, true)__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		config.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, 10)_ _		assertEquals(890, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, -1)_ _		config.setFloat(TaskManagerOptions.MANAGED_MEMORY_FRACTION, 0.1f)_ _		assertEquals(810, TaskManagerServices.calculateHeapSizeMB(1000, config))__	};test,for,link,task,manager,services,calculate,heap,size,mb,long,configuration,with,some,manually,calculated,scenarios;test,public,void,calculate,heap,size,mb,throws,exception,configuration,config,new,configuration,config,set,float,task,manager,options,0,1f,config,set,long,task,manager,options,64l,20,config,set,long,task,manager,options,1l,30,config,set,boolean,task,manager,options,false,assert,equals,900,task,manager,services,calculate,heap,size,mb,1000,config,config,set,boolean,task,manager,options,false,config,set,float,task,manager,options,0,2f,assert,equals,800,task,manager,services,calculate,heap,size,mb,1000,config,config,set,boolean,task,manager,options,true,config,set,float,task,manager,options,0,1f,config,set,long,task,manager,options,10,assert,equals,890,task,manager,services,calculate,heap,size,mb,1000,config,config,set,long,task,manager,options,1,config,set,float,task,manager,options,0,1f,assert,equals,810,task,manager,services,calculate,heap,size,mb,1000,config
TaskManagerServicesTest -> @Test 	public void calculateHeapSizeMB() throws Exception;1515177485;Test for {@link TaskManagerServices#calculateHeapSizeMB(long, Configuration)} with some_manually calculated scenarios.;@Test_	public void calculateHeapSizeMB() throws Exception {_		Configuration config = new Configuration()__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, 64L << 20)_ _		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, 1L << 30)_ __		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, false)__		assertEquals(900, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, false)__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.2f)__		assertEquals(800, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, true)__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		config.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, 10)_ _		assertEquals(890, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, -1)_ _		config.setFloat(TaskManagerOptions.MANAGED_MEMORY_FRACTION, 0.1f)_ _		assertEquals(810, TaskManagerServices.calculateHeapSizeMB(1000, config))__	};test,for,link,task,manager,services,calculate,heap,size,mb,long,configuration,with,some,manually,calculated,scenarios;test,public,void,calculate,heap,size,mb,throws,exception,configuration,config,new,configuration,config,set,float,task,manager,options,0,1f,config,set,long,task,manager,options,64l,20,config,set,long,task,manager,options,1l,30,config,set,boolean,task,manager,options,false,assert,equals,900,task,manager,services,calculate,heap,size,mb,1000,config,config,set,boolean,task,manager,options,false,config,set,float,task,manager,options,0,2f,assert,equals,800,task,manager,services,calculate,heap,size,mb,1000,config,config,set,boolean,task,manager,options,true,config,set,float,task,manager,options,0,1f,config,set,long,task,manager,options,10,assert,equals,890,task,manager,services,calculate,heap,size,mb,1000,config,config,set,long,task,manager,options,1,config,set,float,task,manager,options,0,1f,assert,equals,810,task,manager,services,calculate,heap,size,mb,1000,config
TaskManagerServicesTest -> @Test 	public void calculateHeapSizeMB() throws Exception;1515481550;Test for {@link TaskManagerServices#calculateHeapSizeMB(long, Configuration)} with some_manually calculated scenarios.;@Test_	public void calculateHeapSizeMB() throws Exception {_		Configuration config = new Configuration()__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, 64L << 20)_ _		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, 1L << 30)_ __		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, false)__		assertEquals(900, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, false)__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.2f)__		assertEquals(800, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, true)__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		config.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, 10)_ _		assertEquals(890, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, -1)_ _		config.setFloat(TaskManagerOptions.MANAGED_MEMORY_FRACTION, 0.1f)_ _		assertEquals(810, TaskManagerServices.calculateHeapSizeMB(1000, config))__	};test,for,link,task,manager,services,calculate,heap,size,mb,long,configuration,with,some,manually,calculated,scenarios;test,public,void,calculate,heap,size,mb,throws,exception,configuration,config,new,configuration,config,set,float,task,manager,options,0,1f,config,set,long,task,manager,options,64l,20,config,set,long,task,manager,options,1l,30,config,set,boolean,task,manager,options,false,assert,equals,900,task,manager,services,calculate,heap,size,mb,1000,config,config,set,boolean,task,manager,options,false,config,set,float,task,manager,options,0,2f,assert,equals,800,task,manager,services,calculate,heap,size,mb,1000,config,config,set,boolean,task,manager,options,true,config,set,float,task,manager,options,0,1f,config,set,long,task,manager,options,10,assert,equals,890,task,manager,services,calculate,heap,size,mb,1000,config,config,set,long,task,manager,options,1,config,set,float,task,manager,options,0,1f,assert,equals,810,task,manager,services,calculate,heap,size,mb,1000,config
TaskManagerServicesTest -> @Test 	public void calculateHeapSizeMB() throws Exception;1521626214;Test for {@link TaskManagerServices#calculateHeapSizeMB(long, Configuration)} with some_manually calculated scenarios.;@Test_	public void calculateHeapSizeMB() throws Exception {_		Configuration config = new Configuration()__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, 64L << 20)_ _		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, 1L << 30)_ __		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, false)__		assertEquals(900, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, false)__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.2f)__		assertEquals(800, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, true)__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		config.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, 10)_ _		assertEquals(890, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, -1)_ _		config.setFloat(TaskManagerOptions.MANAGED_MEMORY_FRACTION, 0.1f)_ _		assertEquals(810, TaskManagerServices.calculateHeapSizeMB(1000, config))__	};test,for,link,task,manager,services,calculate,heap,size,mb,long,configuration,with,some,manually,calculated,scenarios;test,public,void,calculate,heap,size,mb,throws,exception,configuration,config,new,configuration,config,set,float,task,manager,options,0,1f,config,set,long,task,manager,options,64l,20,config,set,long,task,manager,options,1l,30,config,set,boolean,task,manager,options,false,assert,equals,900,task,manager,services,calculate,heap,size,mb,1000,config,config,set,boolean,task,manager,options,false,config,set,float,task,manager,options,0,2f,assert,equals,800,task,manager,services,calculate,heap,size,mb,1000,config,config,set,boolean,task,manager,options,true,config,set,float,task,manager,options,0,1f,config,set,long,task,manager,options,10,assert,equals,890,task,manager,services,calculate,heap,size,mb,1000,config,config,set,long,task,manager,options,1,config,set,float,task,manager,options,0,1f,assert,equals,810,task,manager,services,calculate,heap,size,mb,1000,config
TaskManagerServicesTest -> @Test 	public void calculateHeapSizeMB() throws Exception;1521626214;Test for {@link TaskManagerServices#calculateHeapSizeMB(long, Configuration)} with some_manually calculated scenarios.;@Test_	public void calculateHeapSizeMB() throws Exception {_		Configuration config = new Configuration()__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, 64L << 20)_ _		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, 1L << 30)_ __		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, false)__		assertEquals(900, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, false)__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.2f)__		assertEquals(800, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, true)__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		config.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, 10)_ _		assertEquals(890, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, -1)_ _		config.setFloat(TaskManagerOptions.MANAGED_MEMORY_FRACTION, 0.1f)_ _		assertEquals(810, TaskManagerServices.calculateHeapSizeMB(1000, config))__	};test,for,link,task,manager,services,calculate,heap,size,mb,long,configuration,with,some,manually,calculated,scenarios;test,public,void,calculate,heap,size,mb,throws,exception,configuration,config,new,configuration,config,set,float,task,manager,options,0,1f,config,set,long,task,manager,options,64l,20,config,set,long,task,manager,options,1l,30,config,set,boolean,task,manager,options,false,assert,equals,900,task,manager,services,calculate,heap,size,mb,1000,config,config,set,boolean,task,manager,options,false,config,set,float,task,manager,options,0,2f,assert,equals,800,task,manager,services,calculate,heap,size,mb,1000,config,config,set,boolean,task,manager,options,true,config,set,float,task,manager,options,0,1f,config,set,long,task,manager,options,10,assert,equals,890,task,manager,services,calculate,heap,size,mb,1000,config,config,set,long,task,manager,options,1,config,set,float,task,manager,options,0,1f,assert,equals,810,task,manager,services,calculate,heap,size,mb,1000,config
TaskManagerServicesTest -> @Test 	public void calculateHeapSizeMB() throws Exception;1522681180;Test for {@link TaskManagerServices#calculateHeapSizeMB(long, Configuration)} with some_manually calculated scenarios.;@Test_	public void calculateHeapSizeMB() throws Exception {_		Configuration config = new Configuration()__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, 64L << 20)_ _		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, 1L << 30)_ __		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, false)__		assertEquals(900, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, false)__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.2f)__		assertEquals(800, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, true)__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		config.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, 10)_ _		assertEquals(890, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, -1)_ _		config.setFloat(TaskManagerOptions.MANAGED_MEMORY_FRACTION, 0.1f)_ _		assertEquals(810, TaskManagerServices.calculateHeapSizeMB(1000, config))__	};test,for,link,task,manager,services,calculate,heap,size,mb,long,configuration,with,some,manually,calculated,scenarios;test,public,void,calculate,heap,size,mb,throws,exception,configuration,config,new,configuration,config,set,float,task,manager,options,0,1f,config,set,long,task,manager,options,64l,20,config,set,long,task,manager,options,1l,30,config,set,boolean,task,manager,options,false,assert,equals,900,task,manager,services,calculate,heap,size,mb,1000,config,config,set,boolean,task,manager,options,false,config,set,float,task,manager,options,0,2f,assert,equals,800,task,manager,services,calculate,heap,size,mb,1000,config,config,set,boolean,task,manager,options,true,config,set,float,task,manager,options,0,1f,config,set,long,task,manager,options,10,assert,equals,890,task,manager,services,calculate,heap,size,mb,1000,config,config,set,long,task,manager,options,1,config,set,float,task,manager,options,0,1f,assert,equals,810,task,manager,services,calculate,heap,size,mb,1000,config
TaskManagerServicesTest -> @Test 	public void calculateHeapSizeMB() throws Exception;1526494919;Test for {@link TaskManagerServices#calculateHeapSizeMB(long, Configuration)} with some_manually calculated scenarios.;@Test_	public void calculateHeapSizeMB() throws Exception {_		Configuration config = new Configuration()__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, 64L << 20)_ _		config.setLong(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, 1L << 30)_ __		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, false)__		assertEquals(900, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, false)__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.2f)__		assertEquals(800, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, true)__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		config.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, 10)_ _		assertEquals(890, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setLong(TaskManagerOptions.MANAGED_MEMORY_SIZE, -1)_ _		config.setFloat(TaskManagerOptions.MANAGED_MEMORY_FRACTION, 0.1f)_ _		assertEquals(810, TaskManagerServices.calculateHeapSizeMB(1000, config))__	};test,for,link,task,manager,services,calculate,heap,size,mb,long,configuration,with,some,manually,calculated,scenarios;test,public,void,calculate,heap,size,mb,throws,exception,configuration,config,new,configuration,config,set,float,task,manager,options,0,1f,config,set,long,task,manager,options,64l,20,config,set,long,task,manager,options,1l,30,config,set,boolean,task,manager,options,false,assert,equals,900,task,manager,services,calculate,heap,size,mb,1000,config,config,set,boolean,task,manager,options,false,config,set,float,task,manager,options,0,2f,assert,equals,800,task,manager,services,calculate,heap,size,mb,1000,config,config,set,boolean,task,manager,options,true,config,set,float,task,manager,options,0,1f,config,set,long,task,manager,options,10,assert,equals,890,task,manager,services,calculate,heap,size,mb,1000,config,config,set,long,task,manager,options,1,config,set,float,task,manager,options,0,1f,assert,equals,810,task,manager,services,calculate,heap,size,mb,1000,config
TaskManagerServicesTest -> @Test 	public void calculateHeapSizeMB() throws Exception;1530798894;Test for {@link TaskManagerServices#calculateHeapSizeMB(long, Configuration)} with some_manually calculated scenarios.;@Test_	public void calculateHeapSizeMB() throws Exception {_		Configuration config = new Configuration()__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		config.setString(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MIN, String.valueOf(64L << 20))_ _		config.setString(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_MAX, String.valueOf(1L << 30))_ __		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, false)__		assertEquals(900, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, false)__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.2f)__		assertEquals(800, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setBoolean(TaskManagerOptions.MEMORY_OFF_HEAP, true)__		config.setFloat(TaskManagerOptions.NETWORK_BUFFERS_MEMORY_FRACTION, 0.1f)__		config.setString(TaskManagerOptions.MANAGED_MEMORY_SIZE, "10m")_ _		assertEquals(890, TaskManagerServices.calculateHeapSizeMB(1000, config))___		config.setString(TaskManagerOptions.MANAGED_MEMORY_SIZE, "0")_ _		config.setFloat(TaskManagerOptions.MANAGED_MEMORY_FRACTION, 0.1f)_ _		assertEquals(810, TaskManagerServices.calculateHeapSizeMB(1000, config))__	};test,for,link,task,manager,services,calculate,heap,size,mb,long,configuration,with,some,manually,calculated,scenarios;test,public,void,calculate,heap,size,mb,throws,exception,configuration,config,new,configuration,config,set,float,task,manager,options,0,1f,config,set,string,task,manager,options,string,value,of,64l,20,config,set,string,task,manager,options,string,value,of,1l,30,config,set,boolean,task,manager,options,false,assert,equals,900,task,manager,services,calculate,heap,size,mb,1000,config,config,set,boolean,task,manager,options,false,config,set,float,task,manager,options,0,2f,assert,equals,800,task,manager,services,calculate,heap,size,mb,1000,config,config,set,boolean,task,manager,options,true,config,set,float,task,manager,options,0,1f,config,set,string,task,manager,options,10m,assert,equals,890,task,manager,services,calculate,heap,size,mb,1000,config,config,set,string,task,manager,options,0,config,set,float,task,manager,options,0,1f,assert,equals,810,task,manager,services,calculate,heap,size,mb,1000,config
TaskManagerServicesTest -> @SuppressWarnings("deprecation") 	@Test 	public void calculateNetworkBufOld() throws Exception;1494092429;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using old_configurations via {@link TaskManagerOptions#NETWORK_NUM_BUFFERS}.;@SuppressWarnings("deprecation")_	@Test_	public void calculateNetworkBufOld() throws Exception {_		Configuration config = new Configuration()__		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, 1)___		_		assertEquals(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue().longValue(),_			TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config))__		assertEquals(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue().longValue(),_			TaskManagerServices.calculateNetworkBufferMemory(64L << 20, config))___		_		int numBuffers = (int) ((2L << 32) / TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue())_ _		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, numBuffers)__		assertEquals(2L << 32, TaskManagerServices.calculateNetworkBufferMemory(2L << 33, config))__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,old,configurations,via,link,task,manager,options;suppress,warnings,deprecation,test,public,void,calculate,network,buf,old,throws,exception,configuration,config,new,configuration,config,set,integer,task,manager,options,1,assert,equals,task,manager,options,default,value,long,value,task,manager,services,calculate,network,buffer,memory,10l,20,config,assert,equals,task,manager,options,default,value,long,value,task,manager,services,calculate,network,buffer,memory,64l,20,config,int,num,buffers,int,2l,32,task,manager,options,default,value,config,set,integer,task,manager,options,num,buffers,assert,equals,2l,32,task,manager,services,calculate,network,buffer,memory,2l,33,config
TaskManagerServicesTest -> @SuppressWarnings("deprecation") 	@Test 	public void calculateNetworkBufOld() throws Exception;1509547920;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using old_configurations via {@link TaskManagerOptions#NETWORK_NUM_BUFFERS}.;@SuppressWarnings("deprecation")_	@Test_	public void calculateNetworkBufOld() throws Exception {_		Configuration config = new Configuration()__		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, 1)___		_		assertEquals(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue().longValue(),_			TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config))__		assertEquals(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue().longValue(),_			TaskManagerServices.calculateNetworkBufferMemory(64L << 20, config))___		_		int numBuffers = (int) ((2L << 32) / TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue())_ _		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, numBuffers)__		assertEquals(2L << 32, TaskManagerServices.calculateNetworkBufferMemory(2L << 33, config))__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,old,configurations,via,link,task,manager,options;suppress,warnings,deprecation,test,public,void,calculate,network,buf,old,throws,exception,configuration,config,new,configuration,config,set,integer,task,manager,options,1,assert,equals,task,manager,options,default,value,long,value,task,manager,services,calculate,network,buffer,memory,10l,20,config,assert,equals,task,manager,options,default,value,long,value,task,manager,services,calculate,network,buffer,memory,64l,20,config,int,num,buffers,int,2l,32,task,manager,options,default,value,config,set,integer,task,manager,options,num,buffers,assert,equals,2l,32,task,manager,services,calculate,network,buffer,memory,2l,33,config
TaskManagerServicesTest -> @SuppressWarnings("deprecation") 	@Test 	public void calculateNetworkBufOld() throws Exception;1511516912;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using old_configurations via {@link TaskManagerOptions#NETWORK_NUM_BUFFERS}.;@SuppressWarnings("deprecation")_	@Test_	public void calculateNetworkBufOld() throws Exception {_		Configuration config = new Configuration()__		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, 1)___		_		assertEquals(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue().longValue(),_			TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config))__		assertEquals(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue().longValue(),_			TaskManagerServices.calculateNetworkBufferMemory(64L << 20, config))___		_		int numBuffers = (int) ((2L << 32) / TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue())_ _		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, numBuffers)__		assertEquals(2L << 32, TaskManagerServices.calculateNetworkBufferMemory(2L << 33, config))__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,old,configurations,via,link,task,manager,options;suppress,warnings,deprecation,test,public,void,calculate,network,buf,old,throws,exception,configuration,config,new,configuration,config,set,integer,task,manager,options,1,assert,equals,task,manager,options,default,value,long,value,task,manager,services,calculate,network,buffer,memory,10l,20,config,assert,equals,task,manager,options,default,value,long,value,task,manager,services,calculate,network,buffer,memory,64l,20,config,int,num,buffers,int,2l,32,task,manager,options,default,value,config,set,integer,task,manager,options,num,buffers,assert,equals,2l,32,task,manager,services,calculate,network,buffer,memory,2l,33,config
TaskManagerServicesTest -> @SuppressWarnings("deprecation") 	@Test 	public void calculateNetworkBufOld() throws Exception;1512555509;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using old_configurations via {@link TaskManagerOptions#NETWORK_NUM_BUFFERS}.;@SuppressWarnings("deprecation")_	@Test_	public void calculateNetworkBufOld() throws Exception {_		Configuration config = new Configuration()__		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, 1)___		_		assertEquals(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue().longValue(),_			TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config))__		assertEquals(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue().longValue(),_			TaskManagerServices.calculateNetworkBufferMemory(64L << 20, config))___		_		int numBuffers = (int) ((2L << 32) / TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue())_ _		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, numBuffers)__		assertEquals(2L << 32, TaskManagerServices.calculateNetworkBufferMemory(2L << 33, config))__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,old,configurations,via,link,task,manager,options;suppress,warnings,deprecation,test,public,void,calculate,network,buf,old,throws,exception,configuration,config,new,configuration,config,set,integer,task,manager,options,1,assert,equals,task,manager,options,default,value,long,value,task,manager,services,calculate,network,buffer,memory,10l,20,config,assert,equals,task,manager,options,default,value,long,value,task,manager,services,calculate,network,buffer,memory,64l,20,config,int,num,buffers,int,2l,32,task,manager,options,default,value,config,set,integer,task,manager,options,num,buffers,assert,equals,2l,32,task,manager,services,calculate,network,buffer,memory,2l,33,config
TaskManagerServicesTest -> @SuppressWarnings("deprecation") 	@Test 	public void calculateNetworkBufOld() throws Exception;1515177485;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using old_configurations via {@link TaskManagerOptions#NETWORK_NUM_BUFFERS}.;@SuppressWarnings("deprecation")_	@Test_	public void calculateNetworkBufOld() throws Exception {_		Configuration config = new Configuration()__		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, 1)___		_		assertEquals(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue().longValue(),_			TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config))__		assertEquals(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue().longValue(),_			TaskManagerServices.calculateNetworkBufferMemory(64L << 20, config))___		_		int numBuffers = (int) ((2L << 32) / TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue())_ _		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, numBuffers)__		assertEquals(2L << 32, TaskManagerServices.calculateNetworkBufferMemory(2L << 33, config))__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,old,configurations,via,link,task,manager,options;suppress,warnings,deprecation,test,public,void,calculate,network,buf,old,throws,exception,configuration,config,new,configuration,config,set,integer,task,manager,options,1,assert,equals,task,manager,options,default,value,long,value,task,manager,services,calculate,network,buffer,memory,10l,20,config,assert,equals,task,manager,options,default,value,long,value,task,manager,services,calculate,network,buffer,memory,64l,20,config,int,num,buffers,int,2l,32,task,manager,options,default,value,config,set,integer,task,manager,options,num,buffers,assert,equals,2l,32,task,manager,services,calculate,network,buffer,memory,2l,33,config
TaskManagerServicesTest -> @SuppressWarnings("deprecation") 	@Test 	public void calculateNetworkBufOld() throws Exception;1515481550;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using old_configurations via {@link TaskManagerOptions#NETWORK_NUM_BUFFERS}.;@SuppressWarnings("deprecation")_	@Test_	public void calculateNetworkBufOld() throws Exception {_		Configuration config = new Configuration()__		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, 1)___		_		assertEquals(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue().longValue(),_			TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config))__		assertEquals(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue().longValue(),_			TaskManagerServices.calculateNetworkBufferMemory(64L << 20, config))___		_		int numBuffers = (int) ((2L << 32) / TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue())_ _		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, numBuffers)__		assertEquals(2L << 32, TaskManagerServices.calculateNetworkBufferMemory(2L << 33, config))__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,old,configurations,via,link,task,manager,options;suppress,warnings,deprecation,test,public,void,calculate,network,buf,old,throws,exception,configuration,config,new,configuration,config,set,integer,task,manager,options,1,assert,equals,task,manager,options,default,value,long,value,task,manager,services,calculate,network,buffer,memory,10l,20,config,assert,equals,task,manager,options,default,value,long,value,task,manager,services,calculate,network,buffer,memory,64l,20,config,int,num,buffers,int,2l,32,task,manager,options,default,value,config,set,integer,task,manager,options,num,buffers,assert,equals,2l,32,task,manager,services,calculate,network,buffer,memory,2l,33,config
TaskManagerServicesTest -> @SuppressWarnings("deprecation") 	@Test 	public void calculateNetworkBufOld() throws Exception;1521626214;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(long, Configuration)} using old_configurations via {@link TaskManagerOptions#NETWORK_NUM_BUFFERS}.;@SuppressWarnings("deprecation")_	@Test_	public void calculateNetworkBufOld() throws Exception {_		Configuration config = new Configuration()__		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, 1)___		_		assertEquals(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue().longValue(),_			TaskManagerServices.calculateNetworkBufferMemory(10L << 20, config))__		assertEquals(TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue().longValue(),_			TaskManagerServices.calculateNetworkBufferMemory(64L << 20, config))___		_		int numBuffers = (int) ((2L << 32) / TaskManagerOptions.MEMORY_SEGMENT_SIZE.defaultValue())_ _		config.setInteger(TaskManagerOptions.NETWORK_NUM_BUFFERS, numBuffers)__		assertEquals(2L << 32, TaskManagerServices.calculateNetworkBufferMemory(2L << 33, config))__	};test,for,link,task,manager,services,calculate,network,buffer,memory,long,configuration,using,old,configurations,via,link,task,manager,options;suppress,warnings,deprecation,test,public,void,calculate,network,buf,old,throws,exception,configuration,config,new,configuration,config,set,integer,task,manager,options,1,assert,equals,task,manager,options,default,value,long,value,task,manager,services,calculate,network,buffer,memory,10l,20,config,assert,equals,task,manager,options,default,value,long,value,task,manager,services,calculate,network,buffer,memory,64l,20,config,int,num,buffers,int,2l,32,task,manager,options,default,value,config,set,integer,task,manager,options,num,buffers,assert,equals,2l,32,task,manager,services,calculate,network,buffer,memory,2l,33,config
TaskManagerServicesTest -> @Test 	public void calculateNetworkBufFromHeapSize() throws Exception;1494092429;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(TaskManagerServicesConfiguration)}_using the same (manual) test cases as in {@link #calculateHeapSizeMB()}.;@Test_	public void calculateNetworkBufFromHeapSize() throws Exception {_		PowerMockito.mockStatic(EnvironmentInformation.class)__		_		when(EnvironmentInformation.getSizeOfFreeHeapMemoryWithDefrag()).thenReturn(1000L << 20)_ _		when(EnvironmentInformation.getMaxJvmHeapMemory()).thenReturn(1000L << 20)_ __		TaskManagerServicesConfiguration tmConfig___		tmConfig = getTmConfig(TaskManagerOptions.MANAGED_MEMORY_SIZE.defaultValue(),_			TaskManagerOptions.MANAGED_MEMORY_FRACTION.defaultValue(),_			0.1f, 60L << 20, 1L << 30, MemoryType.HEAP)__		when(EnvironmentInformation.getSizeOfFreeHeapMemoryWithDefrag()).thenReturn(1000L << 20)_ _		assertEquals(100L << 20, TaskManagerServices.calculateNetworkBufferMemory(tmConfig))___		tmConfig = getTmConfig(10, TaskManagerOptions.MANAGED_MEMORY_FRACTION.defaultValue(),_			0.1f, 60L << 20, 1L << 30, MemoryType.OFF_HEAP)__		when(EnvironmentInformation.getMaxJvmHeapMemory()).thenReturn(890L << 20)_ _		assertEquals((100L << 20) + 1 ,_			TaskManagerServices.calculateNetworkBufferMemory(tmConfig))___		tmConfig = getTmConfig(-1, 0.1f,_			0.1f, 60L << 20, 1L << 30, MemoryType.OFF_HEAP)__		when(EnvironmentInformation.getMaxJvmHeapMemory()).thenReturn(810L << 20)_ _		assertEquals((100L << 20) + 1 ,_			TaskManagerServices.calculateNetworkBufferMemory(tmConfig))__	};test,for,link,task,manager,services,calculate,network,buffer,memory,task,manager,services,configuration,using,the,same,manual,test,cases,as,in,link,calculate,heap,size,mb;test,public,void,calculate,network,buf,from,heap,size,throws,exception,power,mockito,mock,static,environment,information,class,when,environment,information,get,size,of,free,heap,memory,with,defrag,then,return,1000l,20,when,environment,information,get,max,jvm,heap,memory,then,return,1000l,20,task,manager,services,configuration,tm,config,tm,config,get,tm,config,task,manager,options,default,value,task,manager,options,default,value,0,1f,60l,20,1l,30,memory,type,heap,when,environment,information,get,size,of,free,heap,memory,with,defrag,then,return,1000l,20,assert,equals,100l,20,task,manager,services,calculate,network,buffer,memory,tm,config,tm,config,get,tm,config,10,task,manager,options,default,value,0,1f,60l,20,1l,30,memory,type,when,environment,information,get,max,jvm,heap,memory,then,return,890l,20,assert,equals,100l,20,1,task,manager,services,calculate,network,buffer,memory,tm,config,tm,config,get,tm,config,1,0,1f,0,1f,60l,20,1l,30,memory,type,when,environment,information,get,max,jvm,heap,memory,then,return,810l,20,assert,equals,100l,20,1,task,manager,services,calculate,network,buffer,memory,tm,config
TaskManagerServicesTest -> @Test 	public void calculateNetworkBufFromHeapSize() throws Exception;1509547920;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(TaskManagerServicesConfiguration)}_using the same (manual) test cases as in {@link #calculateHeapSizeMB()}.;@Test_	public void calculateNetworkBufFromHeapSize() throws Exception {_		PowerMockito.mockStatic(EnvironmentInformation.class)__		_		when(EnvironmentInformation.getSizeOfFreeHeapMemoryWithDefrag()).thenReturn(1000L << 20)_ _		when(EnvironmentInformation.getMaxJvmHeapMemory()).thenReturn(1000L << 20)_ __		TaskManagerServicesConfiguration tmConfig___		tmConfig = getTmConfig(TaskManagerOptions.MANAGED_MEMORY_SIZE.defaultValue(),_			TaskManagerOptions.MANAGED_MEMORY_FRACTION.defaultValue(),_			0.1f, 60L << 20, 1L << 30, MemoryType.HEAP)__		when(EnvironmentInformation.getSizeOfFreeHeapMemoryWithDefrag()).thenReturn(1000L << 20)_ _		assertEquals(100L << 20, TaskManagerServices.calculateNetworkBufferMemory(tmConfig))___		tmConfig = getTmConfig(10, TaskManagerOptions.MANAGED_MEMORY_FRACTION.defaultValue(),_			0.1f, 60L << 20, 1L << 30, MemoryType.OFF_HEAP)__		when(EnvironmentInformation.getMaxJvmHeapMemory()).thenReturn(890L << 20)_ _		assertEquals((100L << 20) + 1 ,_			TaskManagerServices.calculateNetworkBufferMemory(tmConfig))___		tmConfig = getTmConfig(-1, 0.1f,_			0.1f, 60L << 20, 1L << 30, MemoryType.OFF_HEAP)__		when(EnvironmentInformation.getMaxJvmHeapMemory()).thenReturn(810L << 20)_ _		assertEquals((100L << 20) + 1 ,_			TaskManagerServices.calculateNetworkBufferMemory(tmConfig))__	};test,for,link,task,manager,services,calculate,network,buffer,memory,task,manager,services,configuration,using,the,same,manual,test,cases,as,in,link,calculate,heap,size,mb;test,public,void,calculate,network,buf,from,heap,size,throws,exception,power,mockito,mock,static,environment,information,class,when,environment,information,get,size,of,free,heap,memory,with,defrag,then,return,1000l,20,when,environment,information,get,max,jvm,heap,memory,then,return,1000l,20,task,manager,services,configuration,tm,config,tm,config,get,tm,config,task,manager,options,default,value,task,manager,options,default,value,0,1f,60l,20,1l,30,memory,type,heap,when,environment,information,get,size,of,free,heap,memory,with,defrag,then,return,1000l,20,assert,equals,100l,20,task,manager,services,calculate,network,buffer,memory,tm,config,tm,config,get,tm,config,10,task,manager,options,default,value,0,1f,60l,20,1l,30,memory,type,when,environment,information,get,max,jvm,heap,memory,then,return,890l,20,assert,equals,100l,20,1,task,manager,services,calculate,network,buffer,memory,tm,config,tm,config,get,tm,config,1,0,1f,0,1f,60l,20,1l,30,memory,type,when,environment,information,get,max,jvm,heap,memory,then,return,810l,20,assert,equals,100l,20,1,task,manager,services,calculate,network,buffer,memory,tm,config
TaskManagerServicesTest -> @Test 	public void calculateNetworkBufFromHeapSize() throws Exception;1511516912;Test for {@link TaskManagerServices#calculateNetworkBufferMemory(TaskManagerServicesConfiguration)}_using the same (manual) test cases as in {@link #calculateHeapSizeMB()}.;@Test_	public void calculateNetworkBufFromHeapSize() throws Exception {_		PowerMockito.mockStatic(EnvironmentInformation.class)__		_		when(EnvironmentInformation.getSizeOfFreeHeapMemoryWithDefrag()).thenReturn(1000L << 20)_ _		when(EnvironmentInformation.getMaxJvmHeapMemory()).thenReturn(1000L << 20)_ __		TaskManagerServicesConfiguration tmConfig___		tmConfig = getTmConfig(TaskManagerOptions.MANAGED_MEMORY_SIZE.defaultValue(),_			TaskManagerOptions.MANAGED_MEMORY_FRACTION.defaultValue(),_			0.1f, 60L << 20, 1L << 30, MemoryType.HEAP)__		when(EnvironmentInformation.getMaxJvmHeapMemory()).thenReturn(900L << 20)_ _		assertEquals((100L << 20) + 1 ,_			TaskManagerServices.calculateNetworkBufferMemory(tmConfig))___		tmConfig = getTmConfig(TaskManagerOptions.MANAGED_MEMORY_SIZE.defaultValue(),_			TaskManagerOptions.MANAGED_MEMORY_FRACTION.defaultValue(),_			0.2f, 60L << 20, 1L << 30, MemoryType.HEAP)__		when(EnvironmentInformation.getMaxJvmHeapMemory()).thenReturn(800L << 20)_ _		assertEquals((200L << 20) + 3 ,_			TaskManagerServices.calculateNetworkBufferMemory(tmConfig))___		tmConfig = getTmConfig(10, TaskManagerOptions.MANAGED_MEMORY_FRACTION.defaultValue(),_			0.1f, 60L << 20, 1L << 30, MemoryType.OFF_HEAP)__		when(EnvironmentInformation.getMaxJvmHeapMemory()).thenReturn(890L << 20)_ _		assertEquals((100L << 20) + 1 ,_			TaskManagerServices.calculateNetworkBufferMemory(tmConfig))___		tmConfig = getTmConfig(-1, 0.1f,_			0.1f, 60L << 20, 1L << 30, MemoryType.OFF_HEAP)__		when(EnvironmentInformation.getMaxJvmHeapMemory()).thenReturn(810L << 20)_ _		assertEquals((100L << 20) + 1 ,_			TaskManagerServices.calculateNetworkBufferMemory(tmConfig))__	};test,for,link,task,manager,services,calculate,network,buffer,memory,task,manager,services,configuration,using,the,same,manual,test,cases,as,in,link,calculate,heap,size,mb;test,public,void,calculate,network,buf,from,heap,size,throws,exception,power,mockito,mock,static,environment,information,class,when,environment,information,get,size,of,free,heap,memory,with,defrag,then,return,1000l,20,when,environment,information,get,max,jvm,heap,memory,then,return,1000l,20,task,manager,services,configuration,tm,config,tm,config,get,tm,config,task,manager,options,default,value,task,manager,options,default,value,0,1f,60l,20,1l,30,memory,type,heap,when,environment,information,get,max,jvm,heap,memory,then,return,900l,20,assert,equals,100l,20,1,task,manager,services,calculate,network,buffer,memory,tm,config,tm,config,get,tm,config,task,manager,options,default,value,task,manager,options,default,value,0,2f,60l,20,1l,30,memory,type,heap,when,environment,information,get,max,jvm,heap,memory,then,return,800l,20,assert,equals,200l,20,3,task,manager,services,calculate,network,buffer,memory,tm,config,tm,config,get,tm,config,10,task,manager,options,default,value,0,1f,60l,20,1l,30,memory,type,when,environment,information,get,max,jvm,heap,memory,then,return,890l,20,assert,equals,100l,20,1,task,manager,services,calculate,network,buffer,memory,tm,config,tm,config,get,tm,config,1,0,1f,0,1f,60l,20,1l,30,memory,type,when,environment,information,get,max,jvm,heap,memory,then,return,810l,20,assert,equals,100l,20,1,task,manager,services,calculate,network,buffer,memory,tm,config
