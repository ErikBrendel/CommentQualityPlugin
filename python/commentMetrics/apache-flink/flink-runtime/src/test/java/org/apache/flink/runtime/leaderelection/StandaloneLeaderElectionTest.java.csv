# id;timestamp;commentText;codeText;commentWords;codeWords
StandaloneLeaderElectionTest -> @Test 	public void testStandaloneLeaderElectionRetrieval() throws Exception;1441011751;Tests that the standalone leader election and retrieval service return the same leader_URL.;@Test_	public void testStandaloneLeaderElectionRetrieval() throws Exception {_		StandaloneLeaderElectionService leaderElectionService = new StandaloneLeaderElectionService()__		StandaloneLeaderRetrievalService leaderRetrievalService = new StandaloneLeaderRetrievalService(TEST_URL)__		TestingContender contender = new TestingContender(TEST_URL, leaderElectionService)__		TestingListener testingListener = new TestingListener()___		try {_			leaderElectionService.start(contender)__			leaderRetrievalService.start(testingListener)___			contender.waitForLeader(1000l)___			assertTrue(contender.isLeader())__			assertEquals(null, contender.getLeaderSessionID())___			testingListener.waitForLeader(1000l)___			assertEquals(TEST_URL, testingListener.getAddress())__			assertEquals(null, testingListener.getLeaderSessionID())__		} finally {_			leaderElectionService.stop()__			leaderRetrievalService.stop()__		}_	};tests,that,the,standalone,leader,election,and,retrieval,service,return,the,same,leader,url;test,public,void,test,standalone,leader,election,retrieval,throws,exception,standalone,leader,election,service,leader,election,service,new,standalone,leader,election,service,standalone,leader,retrieval,service,leader,retrieval,service,new,standalone,leader,retrieval,service,testing,contender,contender,new,testing,contender,leader,election,service,testing,listener,testing,listener,new,testing,listener,try,leader,election,service,start,contender,leader,retrieval,service,start,testing,listener,contender,wait,for,leader,1000l,assert,true,contender,is,leader,assert,equals,null,contender,get,leader,session,id,testing,listener,wait,for,leader,1000l,assert,equals,testing,listener,get,address,assert,equals,null,testing,listener,get,leader,session,id,finally,leader,election,service,stop,leader,retrieval,service,stop
StandaloneLeaderElectionTest -> @Test 	public void testStandaloneLeaderElectionRetrieval() throws Exception;1443099371;Tests that the standalone leader election and retrieval service return the same leader_URL.;@Test_	public void testStandaloneLeaderElectionRetrieval() throws Exception {_		StandaloneLeaderElectionService leaderElectionService = new StandaloneLeaderElectionService()__		StandaloneLeaderRetrievalService leaderRetrievalService = new StandaloneLeaderRetrievalService(TEST_URL)__		TestingContender contender = new TestingContender(TEST_URL, leaderElectionService)__		TestingListener testingListener = new TestingListener()___		try {_			leaderElectionService.start(contender)__			leaderRetrievalService.start(testingListener)___			contender.waitForLeader(1000l)___			assertTrue(contender.isLeader())__			assertEquals(null, contender.getLeaderSessionID())___			testingListener.waitForNewLeader(1000l)___			assertEquals(TEST_URL, testingListener.getAddress())__			assertEquals(null, testingListener.getLeaderSessionID())__		} finally {_			leaderElectionService.stop()__			leaderRetrievalService.stop()__		}_	};tests,that,the,standalone,leader,election,and,retrieval,service,return,the,same,leader,url;test,public,void,test,standalone,leader,election,retrieval,throws,exception,standalone,leader,election,service,leader,election,service,new,standalone,leader,election,service,standalone,leader,retrieval,service,leader,retrieval,service,new,standalone,leader,retrieval,service,testing,contender,contender,new,testing,contender,leader,election,service,testing,listener,testing,listener,new,testing,listener,try,leader,election,service,start,contender,leader,retrieval,service,start,testing,listener,contender,wait,for,leader,1000l,assert,true,contender,is,leader,assert,equals,null,contender,get,leader,session,id,testing,listener,wait,for,new,leader,1000l,assert,equals,testing,listener,get,address,assert,equals,null,testing,listener,get,leader,session,id,finally,leader,election,service,stop,leader,retrieval,service,stop
StandaloneLeaderElectionTest -> @Test 	public void testStandaloneLeaderElectionRetrieval() throws Exception;1490174800;Tests that the standalone leader election and retrieval service return the same leader_URL.;@Test_	public void testStandaloneLeaderElectionRetrieval() throws Exception {_		StandaloneLeaderElectionService leaderElectionService = new StandaloneLeaderElectionService()__		StandaloneLeaderRetrievalService leaderRetrievalService = new StandaloneLeaderRetrievalService(TEST_URL)__		TestingContender contender = new TestingContender(TEST_URL, leaderElectionService)__		TestingListener testingListener = new TestingListener()___		try {_			leaderElectionService.start(contender)__			leaderRetrievalService.start(testingListener)___			contender.waitForLeader(1000l)___			assertTrue(contender.isLeader())__			assertEquals(HighAvailabilityServices.DEFAULT_LEADER_ID, contender.getLeaderSessionID())___			testingListener.waitForNewLeader(1000l)___			assertEquals(TEST_URL, testingListener.getAddress())__			assertEquals(HighAvailabilityServices.DEFAULT_LEADER_ID, testingListener.getLeaderSessionID())__		} finally {_			leaderElectionService.stop()__			leaderRetrievalService.stop()__		}_	};tests,that,the,standalone,leader,election,and,retrieval,service,return,the,same,leader,url;test,public,void,test,standalone,leader,election,retrieval,throws,exception,standalone,leader,election,service,leader,election,service,new,standalone,leader,election,service,standalone,leader,retrieval,service,leader,retrieval,service,new,standalone,leader,retrieval,service,testing,contender,contender,new,testing,contender,leader,election,service,testing,listener,testing,listener,new,testing,listener,try,leader,election,service,start,contender,leader,retrieval,service,start,testing,listener,contender,wait,for,leader,1000l,assert,true,contender,is,leader,assert,equals,high,availability,services,contender,get,leader,session,id,testing,listener,wait,for,new,leader,1000l,assert,equals,testing,listener,get,address,assert,equals,high,availability,services,testing,listener,get,leader,session,id,finally,leader,election,service,stop,leader,retrieval,service,stop
