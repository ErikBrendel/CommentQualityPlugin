commented;modifiers;parameterAmount;loc;comment;code
false;public,synchronized;0;8;;public synchronized Buffer create() {     if (numberOfCreatedBuffers >= poolSize) {         return null.     }     numberOfCreatedBuffers++.     return new NetworkBuffer(MemorySegmentFactory.allocateUnpooledSegment(bufferSize), bufferRecycler). }
false;public,synchronized;0;3;;public synchronized int getNumberOfCreatedBuffers() {     return numberOfCreatedBuffers. }
false;public,synchronized;0;3;;public synchronized int getBufferSize() {     return bufferSize. }
true;public,static;1;3;/**  * Creates a (network) buffer with default size, i.e. {@link #BUFFER_SIZE}, and unspecified data  * of the given size.  *  * @param dataSize  * 		size of the data in the buffer, i.e. the new writer index  *  * @return a new buffer instance  */ ;// ------------------------------------------------------------------------ // Static test helpers // ------------------------------------------------------------------------ /**  * Creates a (network) buffer with default size, i.e. {@link #BUFFER_SIZE}, and unspecified data  * of the given size.  *  * @param dataSize  * 		size of the data in the buffer, i.e. the new writer index  *  * @return a new buffer instance  */ public static Buffer createBuffer(int dataSize) {     return createBuffer(BUFFER_SIZE, dataSize). }
true;public,static;2;4;/**  * Creates a (network) buffer with unspecified data of the given size.  *  * @param bufferSize  * 		size of the buffer  * @param dataSize  * 		size of the data in the buffer, i.e. the new writer index  *  * @return a new buffer instance  */ ;/**  * Creates a (network) buffer with unspecified data of the given size.  *  * @param bufferSize  * 		size of the buffer  * @param dataSize  * 		size of the data in the buffer, i.e. the new writer index  *  * @return a new buffer instance  */ public static Buffer createBuffer(int bufferSize, int dataSize) {     return new NetworkBuffer(MemorySegmentFactory.allocateUnpooledSegment(bufferSize), RECYCLER, true, dataSize). }
