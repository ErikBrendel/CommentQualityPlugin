commented;modifiers;parameterAmount;loc;comment;code
false;public;0;26;;@Test public void testCreateAndSetFinished() throws Exception {     final File folder = tempFolder.newFolder().     final String uri = folder.toURI().toString().     final JobID jid = new JobID().     FsNegativeRunningJobsRegistry registry = new FsNegativeRunningJobsRegistry(new Path(uri)).     // another registry should pick this up     FsNegativeRunningJobsRegistry otherRegistry = new FsNegativeRunningJobsRegistry(new Path(uri)).     // initially, without any call, the job is pending     assertEquals(JobSchedulingStatus.PENDING, registry.getJobSchedulingStatus(jid)).     assertEquals(JobSchedulingStatus.PENDING, otherRegistry.getJobSchedulingStatus(jid)).     // after set running, the job is running     registry.setJobRunning(jid).     assertEquals(JobSchedulingStatus.RUNNING, registry.getJobSchedulingStatus(jid)).     assertEquals(JobSchedulingStatus.RUNNING, otherRegistry.getJobSchedulingStatus(jid)).     // set the job to finished and validate     registry.setJobFinished(jid).     assertEquals(JobSchedulingStatus.DONE, registry.getJobSchedulingStatus(jid)).     assertEquals(JobSchedulingStatus.DONE, otherRegistry.getJobSchedulingStatus(jid)). }
false;public;0;26;;@Test public void testSetFinishedAndRunning() throws Exception {     final File folder = tempFolder.newFolder().     final String uri = folder.toURI().toString().     final JobID jid = new JobID().     FsNegativeRunningJobsRegistry registry = new FsNegativeRunningJobsRegistry(new Path(uri)).     // set the job to finished and validate     registry.setJobFinished(jid).     assertEquals(JobSchedulingStatus.DONE, registry.getJobSchedulingStatus(jid)).     // set the job to running does not overwrite the finished status     registry.setJobRunning(jid).     assertEquals(JobSchedulingStatus.DONE, registry.getJobSchedulingStatus(jid)).     // another registry should pick this up     FsNegativeRunningJobsRegistry otherRegistry = new FsNegativeRunningJobsRegistry(new Path(uri)).     assertEquals(JobSchedulingStatus.DONE, otherRegistry.getJobSchedulingStatus(jid)).     // clear the running and finished marker, it will be pending     otherRegistry.clearJob(jid).     assertEquals(JobSchedulingStatus.PENDING, registry.getJobSchedulingStatus(jid)).     assertEquals(JobSchedulingStatus.PENDING, otherRegistry.getJobSchedulingStatus(jid)). }
