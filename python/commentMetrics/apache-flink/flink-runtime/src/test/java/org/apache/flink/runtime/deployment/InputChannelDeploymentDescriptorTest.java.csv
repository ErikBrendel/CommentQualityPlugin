# id;timestamp;commentText;codeText;commentWords;codeWords
InputChannelDeploymentDescriptorTest -> @Test 	public void testMixedLocalRemoteUnknownDeployment() throws Exception;1478815615;Tests the deployment descriptors for local, remote, and unknown partition_locations (with lazy deployment allowed and all execution states for the_producers).;@Test_	public void testMixedLocalRemoteUnknownDeployment() throws Exception {_		boolean allowLazyDeployment = true___		ResourceID consumerResourceId = ResourceID.generate()__		ExecutionVertex consumer = mock(ExecutionVertex.class)__		SimpleSlot consumerSlot = mockSlot(consumerResourceId)___		_		_		for (ExecutionState state : ExecutionState.values()) {_			_			ExecutionVertex localProducer = mockExecutionVertex(state, consumerResourceId)__			IntermediateResultPartition localPartition = mockPartition(localProducer)__			ResultPartitionID localPartitionId = new ResultPartitionID(localPartition.getPartitionId(), localProducer.getCurrentExecutionAttempt().getAttemptId())__			ExecutionEdge localEdge = new ExecutionEdge(localPartition, consumer, 0)___			_			ExecutionVertex remoteProducer = mockExecutionVertex(state, ResourceID.generate())_ _			IntermediateResultPartition remotePartition = mockPartition(remoteProducer)__			ResultPartitionID remotePartitionId = new ResultPartitionID(remotePartition.getPartitionId(), remoteProducer.getCurrentExecutionAttempt().getAttemptId())__			ConnectionID remoteConnectionId = new ConnectionID(remoteProducer.getCurrentAssignedResource().getTaskManagerLocation(), 0)__			ExecutionEdge remoteEdge = new ExecutionEdge(remotePartition, consumer, 1)___			_			ExecutionVertex unknownProducer = mockExecutionVertex(state, null)_ _			IntermediateResultPartition unknownPartition = mockPartition(unknownProducer)__			ResultPartitionID unknownPartitionId = new ResultPartitionID(unknownPartition.getPartitionId(), unknownProducer.getCurrentExecutionAttempt().getAttemptId())__			ExecutionEdge unknownEdge = new ExecutionEdge(unknownPartition, consumer, 2)___			InputChannelDeploymentDescriptor[] desc = InputChannelDeploymentDescriptor.fromEdges(_				new ExecutionEdge[]{localEdge, remoteEdge, unknownEdge},_				consumerSlot,_				allowLazyDeployment)___			assertEquals(3, desc.length)___			_			if (state == ExecutionState.RUNNING || state == ExecutionState.FINISHED ||_				state == ExecutionState.SCHEDULED || state == ExecutionState.DEPLOYING) {__				_				assertEquals(localPartitionId, desc[0].getConsumedPartitionId())__				assertTrue(desc[0].getConsumedPartitionLocation().isLocal())__				assertNull(desc[0].getConsumedPartitionLocation().getConnectionId())___				assertEquals(remotePartitionId, desc[1].getConsumedPartitionId())__				assertTrue(desc[1].getConsumedPartitionLocation().isRemote())__				assertEquals(remoteConnectionId, desc[1].getConsumedPartitionLocation().getConnectionId())__			} else {_				_				assertEquals(localPartitionId, desc[0].getConsumedPartitionId())__				assertTrue(desc[0].getConsumedPartitionLocation().isUnknown())__				assertNull(desc[0].getConsumedPartitionLocation().getConnectionId())___				assertEquals(remotePartitionId, desc[1].getConsumedPartitionId())__				assertTrue(desc[1].getConsumedPartitionLocation().isUnknown())__				assertNull(desc[1].getConsumedPartitionLocation().getConnectionId())__			}__			assertEquals(unknownPartitionId, desc[2].getConsumedPartitionId())__			assertTrue(desc[2].getConsumedPartitionLocation().isUnknown())__			assertNull(desc[2].getConsumedPartitionLocation().getConnectionId())__		}_	};tests,the,deployment,descriptors,for,local,remote,and,unknown,partition,locations,with,lazy,deployment,allowed,and,all,execution,states,for,the,producers;test,public,void,test,mixed,local,remote,unknown,deployment,throws,exception,boolean,allow,lazy,deployment,true,resource,id,consumer,resource,id,resource,id,generate,execution,vertex,consumer,mock,execution,vertex,class,simple,slot,consumer,slot,mock,slot,consumer,resource,id,for,execution,state,state,execution,state,values,execution,vertex,local,producer,mock,execution,vertex,state,consumer,resource,id,intermediate,result,partition,local,partition,mock,partition,local,producer,result,partition,id,local,partition,id,new,result,partition,id,local,partition,get,partition,id,local,producer,get,current,execution,attempt,get,attempt,id,execution,edge,local,edge,new,execution,edge,local,partition,consumer,0,execution,vertex,remote,producer,mock,execution,vertex,state,resource,id,generate,intermediate,result,partition,remote,partition,mock,partition,remote,producer,result,partition,id,remote,partition,id,new,result,partition,id,remote,partition,get,partition,id,remote,producer,get,current,execution,attempt,get,attempt,id,connection,id,remote,connection,id,new,connection,id,remote,producer,get,current,assigned,resource,get,task,manager,location,0,execution,edge,remote,edge,new,execution,edge,remote,partition,consumer,1,execution,vertex,unknown,producer,mock,execution,vertex,state,null,intermediate,result,partition,unknown,partition,mock,partition,unknown,producer,result,partition,id,unknown,partition,id,new,result,partition,id,unknown,partition,get,partition,id,unknown,producer,get,current,execution,attempt,get,attempt,id,execution,edge,unknown,edge,new,execution,edge,unknown,partition,consumer,2,input,channel,deployment,descriptor,desc,input,channel,deployment,descriptor,from,edges,new,execution,edge,local,edge,remote,edge,unknown,edge,consumer,slot,allow,lazy,deployment,assert,equals,3,desc,length,if,state,execution,state,running,state,execution,state,finished,state,execution,state,scheduled,state,execution,state,deploying,assert,equals,local,partition,id,desc,0,get,consumed,partition,id,assert,true,desc,0,get,consumed,partition,location,is,local,assert,null,desc,0,get,consumed,partition,location,get,connection,id,assert,equals,remote,partition,id,desc,1,get,consumed,partition,id,assert,true,desc,1,get,consumed,partition,location,is,remote,assert,equals,remote,connection,id,desc,1,get,consumed,partition,location,get,connection,id,else,assert,equals,local,partition,id,desc,0,get,consumed,partition,id,assert,true,desc,0,get,consumed,partition,location,is,unknown,assert,null,desc,0,get,consumed,partition,location,get,connection,id,assert,equals,remote,partition,id,desc,1,get,consumed,partition,id,assert,true,desc,1,get,consumed,partition,location,is,unknown,assert,null,desc,1,get,consumed,partition,location,get,connection,id,assert,equals,unknown,partition,id,desc,2,get,consumed,partition,id,assert,true,desc,2,get,consumed,partition,location,is,unknown,assert,null,desc,2,get,consumed,partition,location,get,connection,id
InputChannelDeploymentDescriptorTest -> @Test 	public void testMixedLocalRemoteUnknownDeployment() throws Exception;1499497171;Tests the deployment descriptors for local, remote, and unknown partition_locations (with lazy deployment allowed and all execution states for the_producers).;@Test_	public void testMixedLocalRemoteUnknownDeployment() throws Exception {_		boolean allowLazyDeployment = true___		ResourceID consumerResourceId = ResourceID.generate()__		ExecutionVertex consumer = mock(ExecutionVertex.class)__		SimpleSlot consumerSlot = mockSlot(consumerResourceId)___		_		_		for (ExecutionState state : ExecutionState.values()) {_			_			ExecutionVertex localProducer = mockExecutionVertex(state, consumerResourceId)__			IntermediateResultPartition localPartition = mockPartition(localProducer)__			ResultPartitionID localPartitionId = new ResultPartitionID(localPartition.getPartitionId(), localProducer.getCurrentExecutionAttempt().getAttemptId())__			ExecutionEdge localEdge = new ExecutionEdge(localPartition, consumer, 0)___			_			ExecutionVertex remoteProducer = mockExecutionVertex(state, ResourceID.generate())_ _			IntermediateResultPartition remotePartition = mockPartition(remoteProducer)__			ResultPartitionID remotePartitionId = new ResultPartitionID(remotePartition.getPartitionId(), remoteProducer.getCurrentExecutionAttempt().getAttemptId())__			ConnectionID remoteConnectionId = new ConnectionID(remoteProducer.getCurrentAssignedResource().getTaskManagerLocation(), 0)__			ExecutionEdge remoteEdge = new ExecutionEdge(remotePartition, consumer, 1)___			_			ExecutionVertex unknownProducer = mockExecutionVertex(state, null)_ _			IntermediateResultPartition unknownPartition = mockPartition(unknownProducer)__			ResultPartitionID unknownPartitionId = new ResultPartitionID(unknownPartition.getPartitionId(), unknownProducer.getCurrentExecutionAttempt().getAttemptId())__			ExecutionEdge unknownEdge = new ExecutionEdge(unknownPartition, consumer, 2)___			InputChannelDeploymentDescriptor[] desc = InputChannelDeploymentDescriptor.fromEdges(_				new ExecutionEdge[]{localEdge, remoteEdge, unknownEdge},_				consumerSlot,_				allowLazyDeployment)___			assertEquals(3, desc.length)___			_			if (state == ExecutionState.RUNNING || state == ExecutionState.FINISHED ||_				state == ExecutionState.SCHEDULED || state == ExecutionState.DEPLOYING) {__				_				assertEquals(localPartitionId, desc[0].getConsumedPartitionId())__				assertTrue(desc[0].getConsumedPartitionLocation().isLocal())__				assertNull(desc[0].getConsumedPartitionLocation().getConnectionId())___				assertEquals(remotePartitionId, desc[1].getConsumedPartitionId())__				assertTrue(desc[1].getConsumedPartitionLocation().isRemote())__				assertEquals(remoteConnectionId, desc[1].getConsumedPartitionLocation().getConnectionId())__			} else {_				_				assertEquals(localPartitionId, desc[0].getConsumedPartitionId())__				assertTrue(desc[0].getConsumedPartitionLocation().isUnknown())__				assertNull(desc[0].getConsumedPartitionLocation().getConnectionId())___				assertEquals(remotePartitionId, desc[1].getConsumedPartitionId())__				assertTrue(desc[1].getConsumedPartitionLocation().isUnknown())__				assertNull(desc[1].getConsumedPartitionLocation().getConnectionId())__			}__			assertEquals(unknownPartitionId, desc[2].getConsumedPartitionId())__			assertTrue(desc[2].getConsumedPartitionLocation().isUnknown())__			assertNull(desc[2].getConsumedPartitionLocation().getConnectionId())__		}_	};tests,the,deployment,descriptors,for,local,remote,and,unknown,partition,locations,with,lazy,deployment,allowed,and,all,execution,states,for,the,producers;test,public,void,test,mixed,local,remote,unknown,deployment,throws,exception,boolean,allow,lazy,deployment,true,resource,id,consumer,resource,id,resource,id,generate,execution,vertex,consumer,mock,execution,vertex,class,simple,slot,consumer,slot,mock,slot,consumer,resource,id,for,execution,state,state,execution,state,values,execution,vertex,local,producer,mock,execution,vertex,state,consumer,resource,id,intermediate,result,partition,local,partition,mock,partition,local,producer,result,partition,id,local,partition,id,new,result,partition,id,local,partition,get,partition,id,local,producer,get,current,execution,attempt,get,attempt,id,execution,edge,local,edge,new,execution,edge,local,partition,consumer,0,execution,vertex,remote,producer,mock,execution,vertex,state,resource,id,generate,intermediate,result,partition,remote,partition,mock,partition,remote,producer,result,partition,id,remote,partition,id,new,result,partition,id,remote,partition,get,partition,id,remote,producer,get,current,execution,attempt,get,attempt,id,connection,id,remote,connection,id,new,connection,id,remote,producer,get,current,assigned,resource,get,task,manager,location,0,execution,edge,remote,edge,new,execution,edge,remote,partition,consumer,1,execution,vertex,unknown,producer,mock,execution,vertex,state,null,intermediate,result,partition,unknown,partition,mock,partition,unknown,producer,result,partition,id,unknown,partition,id,new,result,partition,id,unknown,partition,get,partition,id,unknown,producer,get,current,execution,attempt,get,attempt,id,execution,edge,unknown,edge,new,execution,edge,unknown,partition,consumer,2,input,channel,deployment,descriptor,desc,input,channel,deployment,descriptor,from,edges,new,execution,edge,local,edge,remote,edge,unknown,edge,consumer,slot,allow,lazy,deployment,assert,equals,3,desc,length,if,state,execution,state,running,state,execution,state,finished,state,execution,state,scheduled,state,execution,state,deploying,assert,equals,local,partition,id,desc,0,get,consumed,partition,id,assert,true,desc,0,get,consumed,partition,location,is,local,assert,null,desc,0,get,consumed,partition,location,get,connection,id,assert,equals,remote,partition,id,desc,1,get,consumed,partition,id,assert,true,desc,1,get,consumed,partition,location,is,remote,assert,equals,remote,connection,id,desc,1,get,consumed,partition,location,get,connection,id,else,assert,equals,local,partition,id,desc,0,get,consumed,partition,id,assert,true,desc,0,get,consumed,partition,location,is,unknown,assert,null,desc,0,get,consumed,partition,location,get,connection,id,assert,equals,remote,partition,id,desc,1,get,consumed,partition,id,assert,true,desc,1,get,consumed,partition,location,is,unknown,assert,null,desc,1,get,consumed,partition,location,get,connection,id,assert,equals,unknown,partition,id,desc,2,get,consumed,partition,id,assert,true,desc,2,get,consumed,partition,location,is,unknown,assert,null,desc,2,get,consumed,partition,location,get,connection,id
InputChannelDeploymentDescriptorTest -> @Test 	public void testMixedLocalRemoteUnknownDeployment() throws Exception;1513201052;Tests the deployment descriptors for local, remote, and unknown partition_locations (with lazy deployment allowed and all execution states for the_producers).;@Test_	public void testMixedLocalRemoteUnknownDeployment() throws Exception {_		boolean allowLazyDeployment = true___		ResourceID consumerResourceId = ResourceID.generate()__		ExecutionVertex consumer = mock(ExecutionVertex.class)__		LogicalSlot consumerSlot = mockSlot(consumerResourceId)___		_		_		for (ExecutionState state : ExecutionState.values()) {_			_			ExecutionVertex localProducer = mockExecutionVertex(state, consumerResourceId)__			IntermediateResultPartition localPartition = mockPartition(localProducer)__			ResultPartitionID localPartitionId = new ResultPartitionID(localPartition.getPartitionId(), localProducer.getCurrentExecutionAttempt().getAttemptId())__			ExecutionEdge localEdge = new ExecutionEdge(localPartition, consumer, 0)___			_			ExecutionVertex remoteProducer = mockExecutionVertex(state, ResourceID.generate())_ _			IntermediateResultPartition remotePartition = mockPartition(remoteProducer)__			ResultPartitionID remotePartitionId = new ResultPartitionID(remotePartition.getPartitionId(), remoteProducer.getCurrentExecutionAttempt().getAttemptId())__			ConnectionID remoteConnectionId = new ConnectionID(remoteProducer.getCurrentAssignedResource().getTaskManagerLocation(), 0)__			ExecutionEdge remoteEdge = new ExecutionEdge(remotePartition, consumer, 1)___			_			ExecutionVertex unknownProducer = mockExecutionVertex(state, null)_ _			IntermediateResultPartition unknownPartition = mockPartition(unknownProducer)__			ResultPartitionID unknownPartitionId = new ResultPartitionID(unknownPartition.getPartitionId(), unknownProducer.getCurrentExecutionAttempt().getAttemptId())__			ExecutionEdge unknownEdge = new ExecutionEdge(unknownPartition, consumer, 2)___			InputChannelDeploymentDescriptor[] desc = InputChannelDeploymentDescriptor.fromEdges(_				new ExecutionEdge[]{localEdge, remoteEdge, unknownEdge},_				consumerSlot.getTaskManagerLocation().getResourceID(),_				allowLazyDeployment)___			assertEquals(3, desc.length)___			_			if (state == ExecutionState.RUNNING || state == ExecutionState.FINISHED ||_				state == ExecutionState.SCHEDULED || state == ExecutionState.DEPLOYING) {__				_				assertEquals(localPartitionId, desc[0].getConsumedPartitionId())__				assertTrue(desc[0].getConsumedPartitionLocation().isLocal())__				assertNull(desc[0].getConsumedPartitionLocation().getConnectionId())___				assertEquals(remotePartitionId, desc[1].getConsumedPartitionId())__				assertTrue(desc[1].getConsumedPartitionLocation().isRemote())__				assertEquals(remoteConnectionId, desc[1].getConsumedPartitionLocation().getConnectionId())__			} else {_				_				assertEquals(localPartitionId, desc[0].getConsumedPartitionId())__				assertTrue(desc[0].getConsumedPartitionLocation().isUnknown())__				assertNull(desc[0].getConsumedPartitionLocation().getConnectionId())___				assertEquals(remotePartitionId, desc[1].getConsumedPartitionId())__				assertTrue(desc[1].getConsumedPartitionLocation().isUnknown())__				assertNull(desc[1].getConsumedPartitionLocation().getConnectionId())__			}__			assertEquals(unknownPartitionId, desc[2].getConsumedPartitionId())__			assertTrue(desc[2].getConsumedPartitionLocation().isUnknown())__			assertNull(desc[2].getConsumedPartitionLocation().getConnectionId())__		}_	};tests,the,deployment,descriptors,for,local,remote,and,unknown,partition,locations,with,lazy,deployment,allowed,and,all,execution,states,for,the,producers;test,public,void,test,mixed,local,remote,unknown,deployment,throws,exception,boolean,allow,lazy,deployment,true,resource,id,consumer,resource,id,resource,id,generate,execution,vertex,consumer,mock,execution,vertex,class,logical,slot,consumer,slot,mock,slot,consumer,resource,id,for,execution,state,state,execution,state,values,execution,vertex,local,producer,mock,execution,vertex,state,consumer,resource,id,intermediate,result,partition,local,partition,mock,partition,local,producer,result,partition,id,local,partition,id,new,result,partition,id,local,partition,get,partition,id,local,producer,get,current,execution,attempt,get,attempt,id,execution,edge,local,edge,new,execution,edge,local,partition,consumer,0,execution,vertex,remote,producer,mock,execution,vertex,state,resource,id,generate,intermediate,result,partition,remote,partition,mock,partition,remote,producer,result,partition,id,remote,partition,id,new,result,partition,id,remote,partition,get,partition,id,remote,producer,get,current,execution,attempt,get,attempt,id,connection,id,remote,connection,id,new,connection,id,remote,producer,get,current,assigned,resource,get,task,manager,location,0,execution,edge,remote,edge,new,execution,edge,remote,partition,consumer,1,execution,vertex,unknown,producer,mock,execution,vertex,state,null,intermediate,result,partition,unknown,partition,mock,partition,unknown,producer,result,partition,id,unknown,partition,id,new,result,partition,id,unknown,partition,get,partition,id,unknown,producer,get,current,execution,attempt,get,attempt,id,execution,edge,unknown,edge,new,execution,edge,unknown,partition,consumer,2,input,channel,deployment,descriptor,desc,input,channel,deployment,descriptor,from,edges,new,execution,edge,local,edge,remote,edge,unknown,edge,consumer,slot,get,task,manager,location,get,resource,id,allow,lazy,deployment,assert,equals,3,desc,length,if,state,execution,state,running,state,execution,state,finished,state,execution,state,scheduled,state,execution,state,deploying,assert,equals,local,partition,id,desc,0,get,consumed,partition,id,assert,true,desc,0,get,consumed,partition,location,is,local,assert,null,desc,0,get,consumed,partition,location,get,connection,id,assert,equals,remote,partition,id,desc,1,get,consumed,partition,id,assert,true,desc,1,get,consumed,partition,location,is,remote,assert,equals,remote,connection,id,desc,1,get,consumed,partition,location,get,connection,id,else,assert,equals,local,partition,id,desc,0,get,consumed,partition,id,assert,true,desc,0,get,consumed,partition,location,is,unknown,assert,null,desc,0,get,consumed,partition,location,get,connection,id,assert,equals,remote,partition,id,desc,1,get,consumed,partition,id,assert,true,desc,1,get,consumed,partition,location,is,unknown,assert,null,desc,1,get,consumed,partition,location,get,connection,id,assert,equals,unknown,partition,id,desc,2,get,consumed,partition,id,assert,true,desc,2,get,consumed,partition,location,is,unknown,assert,null,desc,2,get,consumed,partition,location,get,connection,id
InputChannelDeploymentDescriptorTest -> @Test 	public void testMixedLocalRemoteUnknownDeployment() throws Exception;1513261599;Tests the deployment descriptors for local, remote, and unknown partition_locations (with lazy deployment allowed and all execution states for the_producers).;@Test_	public void testMixedLocalRemoteUnknownDeployment() throws Exception {_		boolean allowLazyDeployment = true___		ResourceID consumerResourceId = ResourceID.generate()__		ExecutionVertex consumer = mock(ExecutionVertex.class)__		LogicalSlot consumerSlot = mockSlot(consumerResourceId)___		_		_		for (ExecutionState state : ExecutionState.values()) {_			_			ExecutionVertex localProducer = mockExecutionVertex(state, consumerResourceId)__			IntermediateResultPartition localPartition = mockPartition(localProducer)__			ResultPartitionID localPartitionId = new ResultPartitionID(localPartition.getPartitionId(), localProducer.getCurrentExecutionAttempt().getAttemptId())__			ExecutionEdge localEdge = new ExecutionEdge(localPartition, consumer, 0)___			_			ExecutionVertex remoteProducer = mockExecutionVertex(state, ResourceID.generate())_ _			IntermediateResultPartition remotePartition = mockPartition(remoteProducer)__			ResultPartitionID remotePartitionId = new ResultPartitionID(remotePartition.getPartitionId(), remoteProducer.getCurrentExecutionAttempt().getAttemptId())__			ConnectionID remoteConnectionId = new ConnectionID(remoteProducer.getCurrentAssignedResource().getTaskManagerLocation(), 0)__			ExecutionEdge remoteEdge = new ExecutionEdge(remotePartition, consumer, 1)___			_			ExecutionVertex unknownProducer = mockExecutionVertex(state, null)_ _			IntermediateResultPartition unknownPartition = mockPartition(unknownProducer)__			ResultPartitionID unknownPartitionId = new ResultPartitionID(unknownPartition.getPartitionId(), unknownProducer.getCurrentExecutionAttempt().getAttemptId())__			ExecutionEdge unknownEdge = new ExecutionEdge(unknownPartition, consumer, 2)___			InputChannelDeploymentDescriptor[] desc = InputChannelDeploymentDescriptor.fromEdges(_				new ExecutionEdge[]{localEdge, remoteEdge, unknownEdge},_				consumerSlot.getTaskManagerLocation().getResourceID(),_				allowLazyDeployment)___			assertEquals(3, desc.length)___			_			if (state == ExecutionState.RUNNING || state == ExecutionState.FINISHED ||_				state == ExecutionState.SCHEDULED || state == ExecutionState.DEPLOYING) {__				_				assertEquals(localPartitionId, desc[0].getConsumedPartitionId())__				assertTrue(desc[0].getConsumedPartitionLocation().isLocal())__				assertNull(desc[0].getConsumedPartitionLocation().getConnectionId())___				assertEquals(remotePartitionId, desc[1].getConsumedPartitionId())__				assertTrue(desc[1].getConsumedPartitionLocation().isRemote())__				assertEquals(remoteConnectionId, desc[1].getConsumedPartitionLocation().getConnectionId())__			} else {_				_				assertEquals(localPartitionId, desc[0].getConsumedPartitionId())__				assertTrue(desc[0].getConsumedPartitionLocation().isUnknown())__				assertNull(desc[0].getConsumedPartitionLocation().getConnectionId())___				assertEquals(remotePartitionId, desc[1].getConsumedPartitionId())__				assertTrue(desc[1].getConsumedPartitionLocation().isUnknown())__				assertNull(desc[1].getConsumedPartitionLocation().getConnectionId())__			}__			assertEquals(unknownPartitionId, desc[2].getConsumedPartitionId())__			assertTrue(desc[2].getConsumedPartitionLocation().isUnknown())__			assertNull(desc[2].getConsumedPartitionLocation().getConnectionId())__		}_	};tests,the,deployment,descriptors,for,local,remote,and,unknown,partition,locations,with,lazy,deployment,allowed,and,all,execution,states,for,the,producers;test,public,void,test,mixed,local,remote,unknown,deployment,throws,exception,boolean,allow,lazy,deployment,true,resource,id,consumer,resource,id,resource,id,generate,execution,vertex,consumer,mock,execution,vertex,class,logical,slot,consumer,slot,mock,slot,consumer,resource,id,for,execution,state,state,execution,state,values,execution,vertex,local,producer,mock,execution,vertex,state,consumer,resource,id,intermediate,result,partition,local,partition,mock,partition,local,producer,result,partition,id,local,partition,id,new,result,partition,id,local,partition,get,partition,id,local,producer,get,current,execution,attempt,get,attempt,id,execution,edge,local,edge,new,execution,edge,local,partition,consumer,0,execution,vertex,remote,producer,mock,execution,vertex,state,resource,id,generate,intermediate,result,partition,remote,partition,mock,partition,remote,producer,result,partition,id,remote,partition,id,new,result,partition,id,remote,partition,get,partition,id,remote,producer,get,current,execution,attempt,get,attempt,id,connection,id,remote,connection,id,new,connection,id,remote,producer,get,current,assigned,resource,get,task,manager,location,0,execution,edge,remote,edge,new,execution,edge,remote,partition,consumer,1,execution,vertex,unknown,producer,mock,execution,vertex,state,null,intermediate,result,partition,unknown,partition,mock,partition,unknown,producer,result,partition,id,unknown,partition,id,new,result,partition,id,unknown,partition,get,partition,id,unknown,producer,get,current,execution,attempt,get,attempt,id,execution,edge,unknown,edge,new,execution,edge,unknown,partition,consumer,2,input,channel,deployment,descriptor,desc,input,channel,deployment,descriptor,from,edges,new,execution,edge,local,edge,remote,edge,unknown,edge,consumer,slot,get,task,manager,location,get,resource,id,allow,lazy,deployment,assert,equals,3,desc,length,if,state,execution,state,running,state,execution,state,finished,state,execution,state,scheduled,state,execution,state,deploying,assert,equals,local,partition,id,desc,0,get,consumed,partition,id,assert,true,desc,0,get,consumed,partition,location,is,local,assert,null,desc,0,get,consumed,partition,location,get,connection,id,assert,equals,remote,partition,id,desc,1,get,consumed,partition,id,assert,true,desc,1,get,consumed,partition,location,is,remote,assert,equals,remote,connection,id,desc,1,get,consumed,partition,location,get,connection,id,else,assert,equals,local,partition,id,desc,0,get,consumed,partition,id,assert,true,desc,0,get,consumed,partition,location,is,unknown,assert,null,desc,0,get,consumed,partition,location,get,connection,id,assert,equals,remote,partition,id,desc,1,get,consumed,partition,id,assert,true,desc,1,get,consumed,partition,location,is,unknown,assert,null,desc,1,get,consumed,partition,location,get,connection,id,assert,equals,unknown,partition,id,desc,2,get,consumed,partition,id,assert,true,desc,2,get,consumed,partition,location,is,unknown,assert,null,desc,2,get,consumed,partition,location,get,connection,id
InputChannelDeploymentDescriptorTest -> @Test 	public void testMixedLocalRemoteUnknownDeployment() throws Exception;1547644408;Tests the deployment descriptors for local, remote, and unknown partition_locations (with lazy deployment allowed and all execution states for the_producers).;@Test_	public void testMixedLocalRemoteUnknownDeployment() throws Exception {_		boolean allowLazyDeployment = true___		ResourceID consumerResourceId = ResourceID.generate()__		ExecutionVertex consumer = mock(ExecutionVertex.class)__		LogicalSlot consumerSlot = mockSlot(consumerResourceId)___		_		_		for (ExecutionState state : ExecutionState.values()) {_			_			ExecutionVertex localProducer = mockExecutionVertex(state, consumerResourceId)__			IntermediateResultPartition localPartition = mockPartition(localProducer)__			ResultPartitionID localPartitionId = new ResultPartitionID(localPartition.getPartitionId(), localProducer.getCurrentExecutionAttempt().getAttemptId())__			ExecutionEdge localEdge = new ExecutionEdge(localPartition, consumer, 0)___			_			ExecutionVertex remoteProducer = mockExecutionVertex(state, ResourceID.generate())_ _			IntermediateResultPartition remotePartition = mockPartition(remoteProducer)__			ResultPartitionID remotePartitionId = new ResultPartitionID(remotePartition.getPartitionId(), remoteProducer.getCurrentExecutionAttempt().getAttemptId())__			ConnectionID remoteConnectionId = new ConnectionID(remoteProducer.getCurrentAssignedResource().getTaskManagerLocation(), 0)__			ExecutionEdge remoteEdge = new ExecutionEdge(remotePartition, consumer, 1)___			_			ExecutionVertex unknownProducer = mockExecutionVertex(state, null)_ _			IntermediateResultPartition unknownPartition = mockPartition(unknownProducer)__			ResultPartitionID unknownPartitionId = new ResultPartitionID(unknownPartition.getPartitionId(), unknownProducer.getCurrentExecutionAttempt().getAttemptId())__			ExecutionEdge unknownEdge = new ExecutionEdge(unknownPartition, consumer, 2)___			InputChannelDeploymentDescriptor[] desc = InputChannelDeploymentDescriptor.fromEdges(_				new ExecutionEdge[]{localEdge, remoteEdge, unknownEdge},_				consumerSlot.getTaskManagerLocation().getResourceID(),_				allowLazyDeployment)___			assertEquals(3, desc.length)___			_			if (state == ExecutionState.RUNNING || state == ExecutionState.FINISHED ||_				state == ExecutionState.SCHEDULED || state == ExecutionState.DEPLOYING) {__				_				assertEquals(localPartitionId, desc[0].getConsumedPartitionId())__				assertTrue(desc[0].getConsumedPartitionLocation().isLocal())__				assertNull(desc[0].getConsumedPartitionLocation().getConnectionId())___				assertEquals(remotePartitionId, desc[1].getConsumedPartitionId())__				assertTrue(desc[1].getConsumedPartitionLocation().isRemote())__				assertEquals(remoteConnectionId, desc[1].getConsumedPartitionLocation().getConnectionId())__			} else {_				_				assertEquals(localPartitionId, desc[0].getConsumedPartitionId())__				assertTrue(desc[0].getConsumedPartitionLocation().isUnknown())__				assertNull(desc[0].getConsumedPartitionLocation().getConnectionId())___				assertEquals(remotePartitionId, desc[1].getConsumedPartitionId())__				assertTrue(desc[1].getConsumedPartitionLocation().isUnknown())__				assertNull(desc[1].getConsumedPartitionLocation().getConnectionId())__			}__			assertEquals(unknownPartitionId, desc[2].getConsumedPartitionId())__			assertTrue(desc[2].getConsumedPartitionLocation().isUnknown())__			assertNull(desc[2].getConsumedPartitionLocation().getConnectionId())__		}_	};tests,the,deployment,descriptors,for,local,remote,and,unknown,partition,locations,with,lazy,deployment,allowed,and,all,execution,states,for,the,producers;test,public,void,test,mixed,local,remote,unknown,deployment,throws,exception,boolean,allow,lazy,deployment,true,resource,id,consumer,resource,id,resource,id,generate,execution,vertex,consumer,mock,execution,vertex,class,logical,slot,consumer,slot,mock,slot,consumer,resource,id,for,execution,state,state,execution,state,values,execution,vertex,local,producer,mock,execution,vertex,state,consumer,resource,id,intermediate,result,partition,local,partition,mock,partition,local,producer,result,partition,id,local,partition,id,new,result,partition,id,local,partition,get,partition,id,local,producer,get,current,execution,attempt,get,attempt,id,execution,edge,local,edge,new,execution,edge,local,partition,consumer,0,execution,vertex,remote,producer,mock,execution,vertex,state,resource,id,generate,intermediate,result,partition,remote,partition,mock,partition,remote,producer,result,partition,id,remote,partition,id,new,result,partition,id,remote,partition,get,partition,id,remote,producer,get,current,execution,attempt,get,attempt,id,connection,id,remote,connection,id,new,connection,id,remote,producer,get,current,assigned,resource,get,task,manager,location,0,execution,edge,remote,edge,new,execution,edge,remote,partition,consumer,1,execution,vertex,unknown,producer,mock,execution,vertex,state,null,intermediate,result,partition,unknown,partition,mock,partition,unknown,producer,result,partition,id,unknown,partition,id,new,result,partition,id,unknown,partition,get,partition,id,unknown,producer,get,current,execution,attempt,get,attempt,id,execution,edge,unknown,edge,new,execution,edge,unknown,partition,consumer,2,input,channel,deployment,descriptor,desc,input,channel,deployment,descriptor,from,edges,new,execution,edge,local,edge,remote,edge,unknown,edge,consumer,slot,get,task,manager,location,get,resource,id,allow,lazy,deployment,assert,equals,3,desc,length,if,state,execution,state,running,state,execution,state,finished,state,execution,state,scheduled,state,execution,state,deploying,assert,equals,local,partition,id,desc,0,get,consumed,partition,id,assert,true,desc,0,get,consumed,partition,location,is,local,assert,null,desc,0,get,consumed,partition,location,get,connection,id,assert,equals,remote,partition,id,desc,1,get,consumed,partition,id,assert,true,desc,1,get,consumed,partition,location,is,remote,assert,equals,remote,connection,id,desc,1,get,consumed,partition,location,get,connection,id,else,assert,equals,local,partition,id,desc,0,get,consumed,partition,id,assert,true,desc,0,get,consumed,partition,location,is,unknown,assert,null,desc,0,get,consumed,partition,location,get,connection,id,assert,equals,remote,partition,id,desc,1,get,consumed,partition,id,assert,true,desc,1,get,consumed,partition,location,is,unknown,assert,null,desc,1,get,consumed,partition,location,get,connection,id,assert,equals,unknown,partition,id,desc,2,get,consumed,partition,id,assert,true,desc,2,get,consumed,partition,location,is,unknown,assert,null,desc,2,get,consumed,partition,location,get,connection,id
