commented;modifiers;parameterAmount;loc;comment;code
true;public,static,final;0;3;/**  * Gets an instance of the serializer factory. The instance is shared, since the factory is a  * stateless class.  *  * @return An instance of the serializer factory.  */ ;/**  * Gets an instance of the serializer factory. The instance is shared, since the factory is a  * stateless class.  *  * @return An instance of the serializer factory.  */ public static final RecordSerializerFactory get() {     return INSTANCE. }
false;public;1;2;;// -------------------------------------------------------------------------------------------- @Override public void writeParametersToConfig(Configuration config) { }
false;public;2;2;;@Override public void readParametersFromConfig(Configuration config, ClassLoader cl) { }
false;public;0;4;;@Override public TypeSerializer<Record> getSerializer() {     return RecordSerializer.get(). }
false;public;0;4;;@Override public Class<Record> getDataType() {     return Record.class. }
false;public;0;4;;// -------------------------------------------------------------------------------------------- @Override public int hashCode() {     return 31. }
false;public;1;4;;@Override public boolean equals(Object obj) {     return obj != null && obj.getClass() == RecordSerializerFactory.class. }
