commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isImmutableType() {     return false. }
false;public;0;4;;@Override public IntPairSerializer duplicate() {     return this. }
false;public;0;4;;@Override public IntPair createInstance() {     return new IntPair(). }
false;public;1;4;;@Override public IntPair copy(IntPair from) {     return new IntPair(from.getKey(), from.getValue()). }
false;public;2;6;;@Override public IntPair copy(IntPair from, IntPair reuse) {     reuse.setKey(from.getKey()).     reuse.setValue(from.getValue()).     return reuse. }
false;public;0;4;;@Override public int getLength() {     return 8. }
false;public;2;5;;@Override public void serialize(IntPair record, DataOutputView target) throws IOException {     target.writeInt(record.getKey()).     target.writeInt(record.getValue()). }
false;public;1;4;;@Override public IntPair deserialize(DataInputView source) throws IOException {     return new IntPair(source.readInt(), source.readInt()). }
false;public;2;6;;@Override public IntPair deserialize(IntPair reuse, DataInputView source) throws IOException {     reuse.setKey(source.readInt()).     reuse.setValue(source.readInt()).     return reuse. }
false;public;2;4;;@Override public void copy(DataInputView source, DataOutputView target) throws IOException {     target.write(source, 8). }
false;public;1;4;;@Override public boolean equals(Object obj) {     return obj instanceof IntPairSerializer. }
false;public;0;4;;@Override public int hashCode() {     return IntPairSerializer.class.hashCode(). }
false;public;1;2;;@Override public void writeParametersToConfig(Configuration config) { }
false;public;2;2;;@Override public void readParametersFromConfig(Configuration config, ClassLoader cl) { }
false;public;0;4;;@Override public IntPairSerializer getSerializer() {     return new IntPairSerializer(). }
false;public;0;4;;@Override public Class<IntPair> getDataType() {     return IntPair.class. }
false;public;0;4;;@Override public int hashCode() {     return 42. }
false;public;1;3;;public boolean equals(Object obj) {     return obj.getClass() == IntPairSerializerFactory.class. }
false;public;0;4;;@Override public TypeSerializerConfigSnapshot<IntPair> snapshotConfiguration() {     throw new UnsupportedOperationException(). }
