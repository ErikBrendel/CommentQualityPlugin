commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Nonnull @Override public Collection<DispatcherResourceManagerComponent<?>> getDispatcherResourceManagerComponents() {     return super.getDispatcherResourceManagerComponents(). }
false;public;1;5;;@Nonnull @Override public CompletableFuture<Void> terminateTaskExecutor(int index) {     return super.terminateTaskExecutor(index). }
false;public;0;4;;@Override public void startTaskExecutor() throws Exception {     super.startTaskExecutor(). }
false;protected;0;4;;@Override protected boolean useLocalCommunication() {     return localCommunication. }
false;protected;2;8;;@Override protected HighAvailabilityServices createHighAvailabilityServices(Configuration configuration, Executor executor) throws Exception {     if (highAvailabilityServicesSupplier != null) {         return highAvailabilityServicesSupplier.get().     } else {         return super.createHighAvailabilityServices(configuration, executor).     } }
false;protected;8;30;;@Override protected Collection<? extends DispatcherResourceManagerComponent<?>> createDispatcherResourceManagerComponents(Configuration configuration, RpcServiceFactory rpcServiceFactory, HighAvailabilityServices haServices, BlobServer blobServer, HeartbeatServices heartbeatServices, MetricRegistry metricRegistry, MetricQueryServiceRetriever metricQueryServiceRetriever, FatalErrorHandler fatalErrorHandler) throws Exception {     SessionDispatcherResourceManagerComponentFactory dispatcherResourceManagerComponentFactory = createTestingDispatcherResourceManagerComponentFactory().     final List<DispatcherResourceManagerComponent<?>> result = new ArrayList<>(numberDispatcherResourceManagerComponents).     for (int i = 0. i < numberDispatcherResourceManagerComponents. i++) {         result.add(dispatcherResourceManagerComponentFactory.create(configuration, rpcServiceFactory.createRpcService(), haServices, blobServer, heartbeatServices, metricRegistry, new MemoryArchivedExecutionGraphStore(), metricQueryServiceRetriever, fatalErrorHandler)).     }     return result. }
false;public;0;4;;@Override public CompletableFuture<DispatcherGateway> getDispatcherGatewayFuture() {     return super.getDispatcherGatewayFuture(). }
false;private;0;5;;private SessionDispatcherResourceManagerComponentFactory createTestingDispatcherResourceManagerComponentFactory() {     return new SessionDispatcherResourceManagerComponentFactory(SessionDispatcherWithUUIDFactory.INSTANCE, StandaloneResourceManagerWithUUIDFactory.INSTANCE). }
