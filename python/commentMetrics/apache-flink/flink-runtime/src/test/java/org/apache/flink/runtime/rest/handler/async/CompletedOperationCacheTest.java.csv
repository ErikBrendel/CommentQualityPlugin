commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Before public void setUp() {     manualTicker = new ManualTicker().     completedOperationCache = new CompletedOperationCache<>(manualTicker). }
false;public;0;11;;@Test public void testShouldFinishClosingCacheIfAllResultsAreEvicted() {     completedOperationCache.registerOngoingOperation(TEST_OPERATION_KEY, TEST_OPERATION_RESULT).     final CompletableFuture<Void> closeCacheFuture = completedOperationCache.closeAsync().     assertThat(closeCacheFuture.isDone(), is(false)).     manualTicker.advanceTime(300, TimeUnit.SECONDS).     completedOperationCache.cleanUp().     assertThat(closeCacheFuture.isDone(), is(true)). }
false;public;0;12;;@Test public void testShouldFinishClosingCacheIfAllResultsAccessed() throws Exception {     completedOperationCache.registerOngoingOperation(TEST_OPERATION_KEY, TEST_OPERATION_RESULT).     final CompletableFuture<Void> closeCacheFuture = completedOperationCache.closeAsync().     assertThat(closeCacheFuture.isDone(), is(false)).     final Either<Throwable, String> operationResultOrError = completedOperationCache.get(TEST_OPERATION_KEY).     assertThat(operationResultOrError, is(notNullValue())).     assertThat(operationResultOrError.right(), is(equalTo(TEST_OPERATION_RESULT.get()))).     assertThat(closeCacheFuture.isDone(), is(true)). }
