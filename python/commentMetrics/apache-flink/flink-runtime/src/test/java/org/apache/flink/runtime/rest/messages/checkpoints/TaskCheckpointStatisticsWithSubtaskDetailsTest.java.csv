commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected Class<TaskCheckpointStatisticsWithSubtaskDetails> getTestResponseClass() {     return TaskCheckpointStatisticsWithSubtaskDetails.class. }
false;protected;0;35;;@Override protected TaskCheckpointStatisticsWithSubtaskDetails getTestResponseInstance() throws Exception {     final TaskCheckpointStatisticsWithSubtaskDetails.Summary summary = new TaskCheckpointStatisticsWithSubtaskDetails.Summary(new MinMaxAvgStatistics(1L, 2L, 3L), new MinMaxAvgStatistics(1L, 2L, 3L), new TaskCheckpointStatisticsWithSubtaskDetails.CheckpointDuration(new MinMaxAvgStatistics(1L, 2L, 3L), new MinMaxAvgStatistics(1L, 2L, 3L)), new TaskCheckpointStatisticsWithSubtaskDetails.CheckpointAlignment(new MinMaxAvgStatistics(1L, 2L, 3L), new MinMaxAvgStatistics(1L, 2L, 3L))).     List<SubtaskCheckpointStatistics> subtaskCheckpointStatistics = new ArrayList<>(2).     subtaskCheckpointStatistics.add(new SubtaskCheckpointStatistics.PendingSubtaskCheckpointStatistics(0)).     subtaskCheckpointStatistics.add(new SubtaskCheckpointStatistics.CompletedSubtaskCheckpointStatistics(1, 4L, 13L, 1337L, new SubtaskCheckpointStatistics.CompletedSubtaskCheckpointStatistics.CheckpointDuration(1L, 2L), new SubtaskCheckpointStatistics.CompletedSubtaskCheckpointStatistics.CheckpointAlignment(2L, 3L))).     return new TaskCheckpointStatisticsWithSubtaskDetails(4L, CheckpointStatsStatus.COMPLETED, 4L, 1337L, 1L, 2L, 8, 9, summary, subtaskCheckpointStatistics). }
