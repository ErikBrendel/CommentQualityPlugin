# id;timestamp;commentText;codeText;commentWords;codeWords
ReadOnlySlicedBufferTest -> @Test 	public void testForwardsRetainBuffer1();1516286125;Tests forwarding of both {@link ReadOnlySlicedNetworkBuffer#recycleBuffer()} and_{@link ReadOnlySlicedNetworkBuffer#isRecycled()}.;@Test_	public void testForwardsRetainBuffer1() {_		ReadOnlySlicedNetworkBuffer slice = buffer.readOnlySlice()__		assertEquals(buffer.refCnt(), slice.refCnt())__		slice.retainBuffer()__		assertEquals(buffer.refCnt(), slice.refCnt())__	};tests,forwarding,of,both,link,read,only,sliced,network,buffer,recycle,buffer,and,link,read,only,sliced,network,buffer,is,recycled;test,public,void,test,forwards,retain,buffer1,read,only,sliced,network,buffer,slice,buffer,read,only,slice,assert,equals,buffer,ref,cnt,slice,ref,cnt,slice,retain,buffer,assert,equals,buffer,ref,cnt,slice,ref,cnt
ReadOnlySlicedBufferTest -> @Test 	public void testForwardsRetainBuffer1();1516291532;Tests forwarding of both {@link ReadOnlySlicedNetworkBuffer#recycleBuffer()} and_{@link ReadOnlySlicedNetworkBuffer#isRecycled()}.;@Test_	public void testForwardsRetainBuffer1() {_		ReadOnlySlicedNetworkBuffer slice = buffer.readOnlySlice()__		assertEquals(buffer.refCnt(), slice.refCnt())__		slice.retainBuffer()__		assertEquals(buffer.refCnt(), slice.refCnt())__	};tests,forwarding,of,both,link,read,only,sliced,network,buffer,recycle,buffer,and,link,read,only,sliced,network,buffer,is,recycled;test,public,void,test,forwards,retain,buffer1,read,only,sliced,network,buffer,slice,buffer,read,only,slice,assert,equals,buffer,ref,cnt,slice,ref,cnt,slice,retain,buffer,assert,equals,buffer,ref,cnt,slice,ref,cnt
ReadOnlySlicedBufferTest -> @Test 	public void testForwardsRetainBuffer1();1519718835;Tests forwarding of both {@link ReadOnlySlicedNetworkBuffer#recycleBuffer()} and_{@link ReadOnlySlicedNetworkBuffer#isRecycled()}.;@Test_	public void testForwardsRetainBuffer1() {_		ReadOnlySlicedNetworkBuffer slice = buffer.readOnlySlice()__		assertEquals(buffer.refCnt(), slice.refCnt())__		slice.retainBuffer()__		assertEquals(buffer.refCnt(), slice.refCnt())__	};tests,forwarding,of,both,link,read,only,sliced,network,buffer,recycle,buffer,and,link,read,only,sliced,network,buffer,is,recycled;test,public,void,test,forwards,retain,buffer1,read,only,sliced,network,buffer,slice,buffer,read,only,slice,assert,equals,buffer,ref,cnt,slice,ref,cnt,slice,retain,buffer,assert,equals,buffer,ref,cnt,slice,ref,cnt
ReadOnlySlicedBufferTest -> @Test 	public void testForwardsRetainBuffer1();1528876304;Tests forwarding of both {@link ReadOnlySlicedNetworkBuffer#recycleBuffer()} and_{@link ReadOnlySlicedNetworkBuffer#isRecycled()}.;@Test_	public void testForwardsRetainBuffer1() {_		ReadOnlySlicedNetworkBuffer slice = buffer.readOnlySlice()__		assertEquals(buffer.refCnt(), slice.refCnt())__		slice.retainBuffer()__		assertEquals(buffer.refCnt(), slice.refCnt())__	};tests,forwarding,of,both,link,read,only,sliced,network,buffer,recycle,buffer,and,link,read,only,sliced,network,buffer,is,recycled;test,public,void,test,forwards,retain,buffer1,read,only,sliced,network,buffer,slice,buffer,read,only,slice,assert,equals,buffer,ref,cnt,slice,ref,cnt,slice,retain,buffer,assert,equals,buffer,ref,cnt,slice,ref,cnt
ReadOnlySlicedBufferTest -> @Test 	public void testForwardsRetainBuffer1();1528876304;Tests forwarding of both {@link ReadOnlySlicedNetworkBuffer#recycleBuffer()} and_{@link ReadOnlySlicedNetworkBuffer#isRecycled()}.;@Test_	public void testForwardsRetainBuffer1() {_		ReadOnlySlicedNetworkBuffer slice = buffer.readOnlySlice()__		assertEquals(buffer.refCnt(), slice.refCnt())__		slice.retainBuffer()__		assertEquals(buffer.refCnt(), slice.refCnt())__	};tests,forwarding,of,both,link,read,only,sliced,network,buffer,recycle,buffer,and,link,read,only,sliced,network,buffer,is,recycled;test,public,void,test,forwards,retain,buffer1,read,only,sliced,network,buffer,slice,buffer,read,only,slice,assert,equals,buffer,ref,cnt,slice,ref,cnt,slice,retain,buffer,assert,equals,buffer,ref,cnt,slice,ref,cnt
ReadOnlySlicedBufferTest -> @Test 	public void testForwardsRetainBuffer2();1516286125;Tests forwarding of both {@link ReadOnlySlicedNetworkBuffer#retainBuffer()} and_{@link ReadOnlySlicedNetworkBuffer#isRecycled()}.;@Test_	public void testForwardsRetainBuffer2() {_		ReadOnlySlicedNetworkBuffer slice = buffer.readOnlySlice(1, 2)__		assertEquals(buffer.refCnt(), slice.refCnt())__		slice.retainBuffer()__		assertEquals(buffer.refCnt(), slice.refCnt())__	};tests,forwarding,of,both,link,read,only,sliced,network,buffer,retain,buffer,and,link,read,only,sliced,network,buffer,is,recycled;test,public,void,test,forwards,retain,buffer2,read,only,sliced,network,buffer,slice,buffer,read,only,slice,1,2,assert,equals,buffer,ref,cnt,slice,ref,cnt,slice,retain,buffer,assert,equals,buffer,ref,cnt,slice,ref,cnt
ReadOnlySlicedBufferTest -> @Test 	public void testForwardsRetainBuffer2();1516291532;Tests forwarding of both {@link ReadOnlySlicedNetworkBuffer#retainBuffer()} and_{@link ReadOnlySlicedNetworkBuffer#isRecycled()}.;@Test_	public void testForwardsRetainBuffer2() {_		ReadOnlySlicedNetworkBuffer slice = buffer.readOnlySlice(1, 2)__		assertEquals(buffer.refCnt(), slice.refCnt())__		slice.retainBuffer()__		assertEquals(buffer.refCnt(), slice.refCnt())__	};tests,forwarding,of,both,link,read,only,sliced,network,buffer,retain,buffer,and,link,read,only,sliced,network,buffer,is,recycled;test,public,void,test,forwards,retain,buffer2,read,only,sliced,network,buffer,slice,buffer,read,only,slice,1,2,assert,equals,buffer,ref,cnt,slice,ref,cnt,slice,retain,buffer,assert,equals,buffer,ref,cnt,slice,ref,cnt
ReadOnlySlicedBufferTest -> @Test 	public void testForwardsRetainBuffer2();1519718835;Tests forwarding of both {@link ReadOnlySlicedNetworkBuffer#retainBuffer()} and_{@link ReadOnlySlicedNetworkBuffer#isRecycled()}.;@Test_	public void testForwardsRetainBuffer2() {_		ReadOnlySlicedNetworkBuffer slice = buffer.readOnlySlice(1, 2)__		assertEquals(buffer.refCnt(), slice.refCnt())__		slice.retainBuffer()__		assertEquals(buffer.refCnt(), slice.refCnt())__	};tests,forwarding,of,both,link,read,only,sliced,network,buffer,retain,buffer,and,link,read,only,sliced,network,buffer,is,recycled;test,public,void,test,forwards,retain,buffer2,read,only,sliced,network,buffer,slice,buffer,read,only,slice,1,2,assert,equals,buffer,ref,cnt,slice,ref,cnt,slice,retain,buffer,assert,equals,buffer,ref,cnt,slice,ref,cnt
ReadOnlySlicedBufferTest -> @Test 	public void testForwardsRetainBuffer2();1528876304;Tests forwarding of both {@link ReadOnlySlicedNetworkBuffer#retainBuffer()} and_{@link ReadOnlySlicedNetworkBuffer#isRecycled()}.;@Test_	public void testForwardsRetainBuffer2() {_		ReadOnlySlicedNetworkBuffer slice = buffer.readOnlySlice(1, 2)__		assertEquals(buffer.refCnt(), slice.refCnt())__		slice.retainBuffer()__		assertEquals(buffer.refCnt(), slice.refCnt())__	};tests,forwarding,of,both,link,read,only,sliced,network,buffer,retain,buffer,and,link,read,only,sliced,network,buffer,is,recycled;test,public,void,test,forwards,retain,buffer2,read,only,sliced,network,buffer,slice,buffer,read,only,slice,1,2,assert,equals,buffer,ref,cnt,slice,ref,cnt,slice,retain,buffer,assert,equals,buffer,ref,cnt,slice,ref,cnt
ReadOnlySlicedBufferTest -> @Test 	public void testForwardsRetainBuffer2();1528876304;Tests forwarding of both {@link ReadOnlySlicedNetworkBuffer#retainBuffer()} and_{@link ReadOnlySlicedNetworkBuffer#isRecycled()}.;@Test_	public void testForwardsRetainBuffer2() {_		ReadOnlySlicedNetworkBuffer slice = buffer.readOnlySlice(1, 2)__		assertEquals(buffer.refCnt(), slice.refCnt())__		slice.retainBuffer()__		assertEquals(buffer.refCnt(), slice.refCnt())__	};tests,forwarding,of,both,link,read,only,sliced,network,buffer,retain,buffer,and,link,read,only,sliced,network,buffer,is,recycled;test,public,void,test,forwards,retain,buffer2,read,only,sliced,network,buffer,slice,buffer,read,only,slice,1,2,assert,equals,buffer,ref,cnt,slice,ref,cnt,slice,retain,buffer,assert,equals,buffer,ref,cnt,slice,ref,cnt
ReadOnlySlicedBufferTest -> @Test 	public void testForwardsRecycleBuffer2();1516286125;Tests forwarding of both {@link ReadOnlySlicedNetworkBuffer#recycleBuffer()} and_{@link ReadOnlySlicedNetworkBuffer#isRecycled()}.;@Test_	public void testForwardsRecycleBuffer2() {_		ReadOnlySlicedNetworkBuffer slice = buffer.readOnlySlice(1, 2)__		assertFalse(slice.isRecycled())__		slice.recycleBuffer()__		assertTrue(slice.isRecycled())__		assertTrue(buffer.isRecycled())__	};tests,forwarding,of,both,link,read,only,sliced,network,buffer,recycle,buffer,and,link,read,only,sliced,network,buffer,is,recycled;test,public,void,test,forwards,recycle,buffer2,read,only,sliced,network,buffer,slice,buffer,read,only,slice,1,2,assert,false,slice,is,recycled,slice,recycle,buffer,assert,true,slice,is,recycled,assert,true,buffer,is,recycled
ReadOnlySlicedBufferTest -> @Test 	public void testForwardsRecycleBuffer2();1516291532;Tests forwarding of both {@link ReadOnlySlicedNetworkBuffer#recycleBuffer()} and_{@link ReadOnlySlicedNetworkBuffer#isRecycled()}.;@Test_	public void testForwardsRecycleBuffer2() {_		ReadOnlySlicedNetworkBuffer slice = buffer.readOnlySlice(1, 2)__		assertFalse(slice.isRecycled())__		slice.recycleBuffer()__		assertTrue(slice.isRecycled())__		assertTrue(buffer.isRecycled())__	};tests,forwarding,of,both,link,read,only,sliced,network,buffer,recycle,buffer,and,link,read,only,sliced,network,buffer,is,recycled;test,public,void,test,forwards,recycle,buffer2,read,only,sliced,network,buffer,slice,buffer,read,only,slice,1,2,assert,false,slice,is,recycled,slice,recycle,buffer,assert,true,slice,is,recycled,assert,true,buffer,is,recycled
ReadOnlySlicedBufferTest -> @Test 	public void testForwardsRecycleBuffer2();1519718835;Tests forwarding of both {@link ReadOnlySlicedNetworkBuffer#recycleBuffer()} and_{@link ReadOnlySlicedNetworkBuffer#isRecycled()}.;@Test_	public void testForwardsRecycleBuffer2() {_		ReadOnlySlicedNetworkBuffer slice = buffer.readOnlySlice(1, 2)__		assertFalse(slice.isRecycled())__		slice.recycleBuffer()__		assertTrue(slice.isRecycled())__		assertTrue(buffer.isRecycled())__	};tests,forwarding,of,both,link,read,only,sliced,network,buffer,recycle,buffer,and,link,read,only,sliced,network,buffer,is,recycled;test,public,void,test,forwards,recycle,buffer2,read,only,sliced,network,buffer,slice,buffer,read,only,slice,1,2,assert,false,slice,is,recycled,slice,recycle,buffer,assert,true,slice,is,recycled,assert,true,buffer,is,recycled
ReadOnlySlicedBufferTest -> @Test 	public void testForwardsRecycleBuffer2();1528876304;Tests forwarding of both {@link ReadOnlySlicedNetworkBuffer#recycleBuffer()} and_{@link ReadOnlySlicedNetworkBuffer#isRecycled()}.;@Test_	public void testForwardsRecycleBuffer2() {_		ReadOnlySlicedNetworkBuffer slice = buffer.readOnlySlice(1, 2)__		assertFalse(slice.isRecycled())__		slice.recycleBuffer()__		assertTrue(slice.isRecycled())__		assertTrue(buffer.isRecycled())__	};tests,forwarding,of,both,link,read,only,sliced,network,buffer,recycle,buffer,and,link,read,only,sliced,network,buffer,is,recycled;test,public,void,test,forwards,recycle,buffer2,read,only,sliced,network,buffer,slice,buffer,read,only,slice,1,2,assert,false,slice,is,recycled,slice,recycle,buffer,assert,true,slice,is,recycled,assert,true,buffer,is,recycled
ReadOnlySlicedBufferTest -> @Test 	public void testForwardsRecycleBuffer2();1528876304;Tests forwarding of both {@link ReadOnlySlicedNetworkBuffer#recycleBuffer()} and_{@link ReadOnlySlicedNetworkBuffer#isRecycled()}.;@Test_	public void testForwardsRecycleBuffer2() {_		ReadOnlySlicedNetworkBuffer slice = buffer.readOnlySlice(1, 2)__		assertFalse(slice.isRecycled())__		slice.recycleBuffer()__		assertTrue(slice.isRecycled())__		assertTrue(buffer.isRecycled())__	};tests,forwarding,of,both,link,read,only,sliced,network,buffer,recycle,buffer,and,link,read,only,sliced,network,buffer,is,recycled;test,public,void,test,forwards,recycle,buffer2,read,only,sliced,network,buffer,slice,buffer,read,only,slice,1,2,assert,false,slice,is,recycled,slice,recycle,buffer,assert,true,slice,is,recycled,assert,true,buffer,is,recycled
ReadOnlySlicedBufferTest -> @Test 	public void testGetSetReaderIndex1();1516286125;Tests the independence of the reader index via_{@link ReadOnlySlicedNetworkBuffer#setReaderIndex(int)} and_{@link ReadOnlySlicedNetworkBuffer#getReaderIndex()}.;@Test_	public void testGetSetReaderIndex1() {_		testGetSetReaderIndex(buffer.readOnlySlice())__	};tests,the,independence,of,the,reader,index,via,link,read,only,sliced,network,buffer,set,reader,index,int,and,link,read,only,sliced,network,buffer,get,reader,index;test,public,void,test,get,set,reader,index1,test,get,set,reader,index,buffer,read,only,slice
ReadOnlySlicedBufferTest -> @Test 	public void testGetSetReaderIndex1();1516291532;Tests the independence of the reader index via_{@link ReadOnlySlicedNetworkBuffer#setReaderIndex(int)} and_{@link ReadOnlySlicedNetworkBuffer#getReaderIndex()}.;@Test_	public void testGetSetReaderIndex1() {_		testGetSetReaderIndex(buffer.readOnlySlice())__	};tests,the,independence,of,the,reader,index,via,link,read,only,sliced,network,buffer,set,reader,index,int,and,link,read,only,sliced,network,buffer,get,reader,index;test,public,void,test,get,set,reader,index1,test,get,set,reader,index,buffer,read,only,slice
ReadOnlySlicedBufferTest -> @Test 	public void testGetSetReaderIndex1();1519718835;Tests the independence of the reader index via_{@link ReadOnlySlicedNetworkBuffer#setReaderIndex(int)} and_{@link ReadOnlySlicedNetworkBuffer#getReaderIndex()}.;@Test_	public void testGetSetReaderIndex1() {_		testGetSetReaderIndex(buffer.readOnlySlice())__	};tests,the,independence,of,the,reader,index,via,link,read,only,sliced,network,buffer,set,reader,index,int,and,link,read,only,sliced,network,buffer,get,reader,index;test,public,void,test,get,set,reader,index1,test,get,set,reader,index,buffer,read,only,slice
ReadOnlySlicedBufferTest -> @Test 	public void testGetSetReaderIndex1();1528876304;Tests the independence of the reader index via_{@link ReadOnlySlicedNetworkBuffer#setReaderIndex(int)} and_{@link ReadOnlySlicedNetworkBuffer#getReaderIndex()}.;@Test_	public void testGetSetReaderIndex1() {_		testGetSetReaderIndex(buffer.readOnlySlice())__	};tests,the,independence,of,the,reader,index,via,link,read,only,sliced,network,buffer,set,reader,index,int,and,link,read,only,sliced,network,buffer,get,reader,index;test,public,void,test,get,set,reader,index1,test,get,set,reader,index,buffer,read,only,slice
ReadOnlySlicedBufferTest -> @Test 	public void testGetSetReaderIndex1();1528876304;Tests the independence of the reader index via_{@link ReadOnlySlicedNetworkBuffer#setReaderIndex(int)} and_{@link ReadOnlySlicedNetworkBuffer#getReaderIndex()}.;@Test_	public void testGetSetReaderIndex1() {_		testGetSetReaderIndex(buffer.readOnlySlice())__	};tests,the,independence,of,the,reader,index,via,link,read,only,sliced,network,buffer,set,reader,index,int,and,link,read,only,sliced,network,buffer,get,reader,index;test,public,void,test,get,set,reader,index1,test,get,set,reader,index,buffer,read,only,slice
ReadOnlySlicedBufferTest -> @Test 	public void testGetSetSize2();1516286125;Tests the independence of the writer index via_{@link ReadOnlySlicedNetworkBuffer#setSize(int)},_{@link ReadOnlySlicedNetworkBuffer#getSize()}, and_{@link ReadOnlySlicedNetworkBuffer#getSizeUnsafe()}.;@Test_	public void testGetSetSize2() {_		testGetSetSize(buffer.readOnlySlice(1, 2), 2)__	};tests,the,independence,of,the,writer,index,via,link,read,only,sliced,network,buffer,set,size,int,link,read,only,sliced,network,buffer,get,size,and,link,read,only,sliced,network,buffer,get,size,unsafe;test,public,void,test,get,set,size2,test,get,set,size,buffer,read,only,slice,1,2,2
ReadOnlySlicedBufferTest -> @Test 	public void testGetSetSize2();1516291532;Tests the independence of the writer index via_{@link ReadOnlySlicedNetworkBuffer#setSize(int)},_{@link ReadOnlySlicedNetworkBuffer#getSize()}, and_{@link ReadOnlySlicedNetworkBuffer#getSizeUnsafe()}.;@Test_	public void testGetSetSize2() {_		testGetSetSize(buffer.readOnlySlice(1, 2), 2)__	};tests,the,independence,of,the,writer,index,via,link,read,only,sliced,network,buffer,set,size,int,link,read,only,sliced,network,buffer,get,size,and,link,read,only,sliced,network,buffer,get,size,unsafe;test,public,void,test,get,set,size2,test,get,set,size,buffer,read,only,slice,1,2,2
ReadOnlySlicedBufferTest -> @Test 	public void testGetSetSize2();1519718835;Tests the independence of the writer index via_{@link ReadOnlySlicedNetworkBuffer#setSize(int)},_{@link ReadOnlySlicedNetworkBuffer#getSize()}, and_{@link ReadOnlySlicedNetworkBuffer#getSizeUnsafe()}.;@Test_	public void testGetSetSize2() {_		testGetSetSize(buffer.readOnlySlice(1, 2), 2)__	};tests,the,independence,of,the,writer,index,via,link,read,only,sliced,network,buffer,set,size,int,link,read,only,sliced,network,buffer,get,size,and,link,read,only,sliced,network,buffer,get,size,unsafe;test,public,void,test,get,set,size2,test,get,set,size,buffer,read,only,slice,1,2,2
ReadOnlySlicedBufferTest -> @Test 	public void testGetSetSize2();1528876304;Tests the independence of the writer index via_{@link ReadOnlySlicedNetworkBuffer#setSize(int)},_{@link ReadOnlySlicedNetworkBuffer#getSize()}, and_{@link ReadOnlySlicedNetworkBuffer#getSizeUnsafe()}.;@Test_	public void testGetSetSize2() {_		testGetSetSize(buffer.readOnlySlice(1, 2), 2)__	};tests,the,independence,of,the,writer,index,via,link,read,only,sliced,network,buffer,set,size,int,link,read,only,sliced,network,buffer,get,size,and,link,read,only,sliced,network,buffer,get,size,unsafe;test,public,void,test,get,set,size2,test,get,set,size,buffer,read,only,slice,1,2,2
ReadOnlySlicedBufferTest -> @Test 	public void testGetSetSize2();1528876304;Tests the independence of the writer index via_{@link ReadOnlySlicedNetworkBuffer#setSize(int)},_{@link ReadOnlySlicedNetworkBuffer#getSize()}, and_{@link ReadOnlySlicedNetworkBuffer#getSizeUnsafe()}.;@Test_	public void testGetSetSize2() {_		testGetSetSize(buffer.readOnlySlice(1, 2), 2)__	};tests,the,independence,of,the,writer,index,via,link,read,only,sliced,network,buffer,set,size,int,link,read,only,sliced,network,buffer,get,size,and,link,read,only,sliced,network,buffer,get,size,unsafe;test,public,void,test,get,set,size2,test,get,set,size,buffer,read,only,slice,1,2,2
ReadOnlySlicedBufferTest -> @Test 	public void testForwardsRecycleBuffer1();1516286125;Tests forwarding of both {@link ReadOnlySlicedNetworkBuffer#recycleBuffer()} and_{@link ReadOnlySlicedNetworkBuffer#isRecycled()}.;@Test_	public void testForwardsRecycleBuffer1() {_		ReadOnlySlicedNetworkBuffer slice = buffer.readOnlySlice()__		assertFalse(slice.isRecycled())__		slice.recycleBuffer()__		assertTrue(slice.isRecycled())__		assertTrue(buffer.isRecycled())__	};tests,forwarding,of,both,link,read,only,sliced,network,buffer,recycle,buffer,and,link,read,only,sliced,network,buffer,is,recycled;test,public,void,test,forwards,recycle,buffer1,read,only,sliced,network,buffer,slice,buffer,read,only,slice,assert,false,slice,is,recycled,slice,recycle,buffer,assert,true,slice,is,recycled,assert,true,buffer,is,recycled
ReadOnlySlicedBufferTest -> @Test 	public void testForwardsRecycleBuffer1();1516291532;Tests forwarding of both {@link ReadOnlySlicedNetworkBuffer#recycleBuffer()} and_{@link ReadOnlySlicedNetworkBuffer#isRecycled()}.;@Test_	public void testForwardsRecycleBuffer1() {_		ReadOnlySlicedNetworkBuffer slice = buffer.readOnlySlice()__		assertFalse(slice.isRecycled())__		slice.recycleBuffer()__		assertTrue(slice.isRecycled())__		assertTrue(buffer.isRecycled())__	};tests,forwarding,of,both,link,read,only,sliced,network,buffer,recycle,buffer,and,link,read,only,sliced,network,buffer,is,recycled;test,public,void,test,forwards,recycle,buffer1,read,only,sliced,network,buffer,slice,buffer,read,only,slice,assert,false,slice,is,recycled,slice,recycle,buffer,assert,true,slice,is,recycled,assert,true,buffer,is,recycled
ReadOnlySlicedBufferTest -> @Test 	public void testForwardsRecycleBuffer1();1519718835;Tests forwarding of both {@link ReadOnlySlicedNetworkBuffer#recycleBuffer()} and_{@link ReadOnlySlicedNetworkBuffer#isRecycled()}.;@Test_	public void testForwardsRecycleBuffer1() {_		ReadOnlySlicedNetworkBuffer slice = buffer.readOnlySlice()__		assertFalse(slice.isRecycled())__		slice.recycleBuffer()__		assertTrue(slice.isRecycled())__		assertTrue(buffer.isRecycled())__	};tests,forwarding,of,both,link,read,only,sliced,network,buffer,recycle,buffer,and,link,read,only,sliced,network,buffer,is,recycled;test,public,void,test,forwards,recycle,buffer1,read,only,sliced,network,buffer,slice,buffer,read,only,slice,assert,false,slice,is,recycled,slice,recycle,buffer,assert,true,slice,is,recycled,assert,true,buffer,is,recycled
ReadOnlySlicedBufferTest -> @Test 	public void testForwardsRecycleBuffer1();1528876304;Tests forwarding of both {@link ReadOnlySlicedNetworkBuffer#recycleBuffer()} and_{@link ReadOnlySlicedNetworkBuffer#isRecycled()}.;@Test_	public void testForwardsRecycleBuffer1() {_		ReadOnlySlicedNetworkBuffer slice = buffer.readOnlySlice()__		assertFalse(slice.isRecycled())__		slice.recycleBuffer()__		assertTrue(slice.isRecycled())__		assertTrue(buffer.isRecycled())__	};tests,forwarding,of,both,link,read,only,sliced,network,buffer,recycle,buffer,and,link,read,only,sliced,network,buffer,is,recycled;test,public,void,test,forwards,recycle,buffer1,read,only,sliced,network,buffer,slice,buffer,read,only,slice,assert,false,slice,is,recycled,slice,recycle,buffer,assert,true,slice,is,recycled,assert,true,buffer,is,recycled
ReadOnlySlicedBufferTest -> @Test 	public void testForwardsRecycleBuffer1();1528876304;Tests forwarding of both {@link ReadOnlySlicedNetworkBuffer#recycleBuffer()} and_{@link ReadOnlySlicedNetworkBuffer#isRecycled()}.;@Test_	public void testForwardsRecycleBuffer1() {_		ReadOnlySlicedNetworkBuffer slice = buffer.readOnlySlice()__		assertFalse(slice.isRecycled())__		slice.recycleBuffer()__		assertTrue(slice.isRecycled())__		assertTrue(buffer.isRecycled())__	};tests,forwarding,of,both,link,read,only,sliced,network,buffer,recycle,buffer,and,link,read,only,sliced,network,buffer,is,recycled;test,public,void,test,forwards,recycle,buffer1,read,only,sliced,network,buffer,slice,buffer,read,only,slice,assert,false,slice,is,recycled,slice,recycle,buffer,assert,true,slice,is,recycled,assert,true,buffer,is,recycled
ReadOnlySlicedBufferTest -> @Test 	public void testGetSetReaderIndex2();1516286125;Tests the independence of the reader index via_{@link ReadOnlySlicedNetworkBuffer#setReaderIndex(int)} and_{@link ReadOnlySlicedNetworkBuffer#getReaderIndex()}.;@Test_	public void testGetSetReaderIndex2() {_		testGetSetReaderIndex(buffer.readOnlySlice(1, 2))__	};tests,the,independence,of,the,reader,index,via,link,read,only,sliced,network,buffer,set,reader,index,int,and,link,read,only,sliced,network,buffer,get,reader,index;test,public,void,test,get,set,reader,index2,test,get,set,reader,index,buffer,read,only,slice,1,2
ReadOnlySlicedBufferTest -> @Test 	public void testGetSetReaderIndex2();1516291532;Tests the independence of the reader index via_{@link ReadOnlySlicedNetworkBuffer#setReaderIndex(int)} and_{@link ReadOnlySlicedNetworkBuffer#getReaderIndex()}.;@Test_	public void testGetSetReaderIndex2() {_		testGetSetReaderIndex(buffer.readOnlySlice(1, 2))__	};tests,the,independence,of,the,reader,index,via,link,read,only,sliced,network,buffer,set,reader,index,int,and,link,read,only,sliced,network,buffer,get,reader,index;test,public,void,test,get,set,reader,index2,test,get,set,reader,index,buffer,read,only,slice,1,2
ReadOnlySlicedBufferTest -> @Test 	public void testGetSetReaderIndex2();1519718835;Tests the independence of the reader index via_{@link ReadOnlySlicedNetworkBuffer#setReaderIndex(int)} and_{@link ReadOnlySlicedNetworkBuffer#getReaderIndex()}.;@Test_	public void testGetSetReaderIndex2() {_		testGetSetReaderIndex(buffer.readOnlySlice(1, 2))__	};tests,the,independence,of,the,reader,index,via,link,read,only,sliced,network,buffer,set,reader,index,int,and,link,read,only,sliced,network,buffer,get,reader,index;test,public,void,test,get,set,reader,index2,test,get,set,reader,index,buffer,read,only,slice,1,2
ReadOnlySlicedBufferTest -> @Test 	public void testGetSetReaderIndex2();1528876304;Tests the independence of the reader index via_{@link ReadOnlySlicedNetworkBuffer#setReaderIndex(int)} and_{@link ReadOnlySlicedNetworkBuffer#getReaderIndex()}.;@Test_	public void testGetSetReaderIndex2() {_		testGetSetReaderIndex(buffer.readOnlySlice(1, 2))__	};tests,the,independence,of,the,reader,index,via,link,read,only,sliced,network,buffer,set,reader,index,int,and,link,read,only,sliced,network,buffer,get,reader,index;test,public,void,test,get,set,reader,index2,test,get,set,reader,index,buffer,read,only,slice,1,2
ReadOnlySlicedBufferTest -> @Test 	public void testGetSetReaderIndex2();1528876304;Tests the independence of the reader index via_{@link ReadOnlySlicedNetworkBuffer#setReaderIndex(int)} and_{@link ReadOnlySlicedNetworkBuffer#getReaderIndex()}.;@Test_	public void testGetSetReaderIndex2() {_		testGetSetReaderIndex(buffer.readOnlySlice(1, 2))__	};tests,the,independence,of,the,reader,index,via,link,read,only,sliced,network,buffer,set,reader,index,int,and,link,read,only,sliced,network,buffer,get,reader,index;test,public,void,test,get,set,reader,index2,test,get,set,reader,index,buffer,read,only,slice,1,2
ReadOnlySlicedBufferTest -> @Test 	public void testGetSetSize1();1516286125;Tests the independence of the writer index via_{@link ReadOnlySlicedNetworkBuffer#setSize(int)},_{@link ReadOnlySlicedNetworkBuffer#getSize()}, and_{@link ReadOnlySlicedNetworkBuffer#getSizeUnsafe()}.;@Test_	public void testGetSetSize1() {_		testGetSetSize(buffer.readOnlySlice(), DATA_SIZE)__	};tests,the,independence,of,the,writer,index,via,link,read,only,sliced,network,buffer,set,size,int,link,read,only,sliced,network,buffer,get,size,and,link,read,only,sliced,network,buffer,get,size,unsafe;test,public,void,test,get,set,size1,test,get,set,size,buffer,read,only,slice
ReadOnlySlicedBufferTest -> @Test 	public void testGetSetSize1();1516291532;Tests the independence of the writer index via_{@link ReadOnlySlicedNetworkBuffer#setSize(int)},_{@link ReadOnlySlicedNetworkBuffer#getSize()}, and_{@link ReadOnlySlicedNetworkBuffer#getSizeUnsafe()}.;@Test_	public void testGetSetSize1() {_		testGetSetSize(buffer.readOnlySlice(), DATA_SIZE)__	};tests,the,independence,of,the,writer,index,via,link,read,only,sliced,network,buffer,set,size,int,link,read,only,sliced,network,buffer,get,size,and,link,read,only,sliced,network,buffer,get,size,unsafe;test,public,void,test,get,set,size1,test,get,set,size,buffer,read,only,slice
ReadOnlySlicedBufferTest -> @Test 	public void testGetSetSize1();1519718835;Tests the independence of the writer index via_{@link ReadOnlySlicedNetworkBuffer#setSize(int)},_{@link ReadOnlySlicedNetworkBuffer#getSize()}, and_{@link ReadOnlySlicedNetworkBuffer#getSizeUnsafe()}.;@Test_	public void testGetSetSize1() {_		testGetSetSize(buffer.readOnlySlice(), DATA_SIZE)__	};tests,the,independence,of,the,writer,index,via,link,read,only,sliced,network,buffer,set,size,int,link,read,only,sliced,network,buffer,get,size,and,link,read,only,sliced,network,buffer,get,size,unsafe;test,public,void,test,get,set,size1,test,get,set,size,buffer,read,only,slice
ReadOnlySlicedBufferTest -> @Test 	public void testGetSetSize1();1528876304;Tests the independence of the writer index via_{@link ReadOnlySlicedNetworkBuffer#setSize(int)},_{@link ReadOnlySlicedNetworkBuffer#getSize()}, and_{@link ReadOnlySlicedNetworkBuffer#getSizeUnsafe()}.;@Test_	public void testGetSetSize1() {_		testGetSetSize(buffer.readOnlySlice(), DATA_SIZE)__	};tests,the,independence,of,the,writer,index,via,link,read,only,sliced,network,buffer,set,size,int,link,read,only,sliced,network,buffer,get,size,and,link,read,only,sliced,network,buffer,get,size,unsafe;test,public,void,test,get,set,size1,test,get,set,size,buffer,read,only,slice
ReadOnlySlicedBufferTest -> @Test 	public void testGetSetSize1();1528876304;Tests the independence of the writer index via_{@link ReadOnlySlicedNetworkBuffer#setSize(int)},_{@link ReadOnlySlicedNetworkBuffer#getSize()}, and_{@link ReadOnlySlicedNetworkBuffer#getSizeUnsafe()}.;@Test_	public void testGetSetSize1() {_		testGetSetSize(buffer.readOnlySlice(), DATA_SIZE)__	};tests,the,independence,of,the,writer,index,via,link,read,only,sliced,network,buffer,set,size,int,link,read,only,sliced,network,buffer,get,size,and,link,read,only,sliced,network,buffer,get,size,unsafe;test,public,void,test,get,set,size1,test,get,set,size,buffer,read,only,slice
