# id;timestamp;commentText;codeText;commentWords;codeWords
SSLUtilsTest -> @Test 	public void testCreateSSLClientContextMisconfiguration();1476696544;Tests if SSL Client Context creation fails with bad SSL configuration;@Test_	public void testCreateSSLClientContextMisconfiguration() {__		Configuration clientConfig = new Configuration()__		clientConfig.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__		clientConfig.setString(ConfigConstants.SECURITY_SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		clientConfig.setString(ConfigConstants.SECURITY_SSL_TRUSTSTORE_PASSWORD, "badpassword")___		try {_			SSLContext clientContext = SSLUtils.createSSLClientContext(clientConfig)__			Assert.fail("SSL client context created even with bad SSL configuration ")__		} catch (Exception e) {_			_		}_	};tests,if,ssl,client,context,creation,fails,with,bad,ssl,configuration;test,public,void,test,create,sslclient,context,misconfiguration,configuration,client,config,new,configuration,client,config,set,boolean,config,constants,true,client,config,set,string,config,constants,src,test,resources,local127,truststore,client,config,set,string,config,constants,badpassword,try,sslcontext,client,context,sslutils,create,sslclient,context,client,config,assert,fail,ssl,client,context,created,even,with,bad,ssl,configuration,catch,exception,e
SSLUtilsTest -> @Test 	public void testCreateSSLClientContextMisconfiguration();1489748538;Tests if SSL Client Context creation fails with bad SSL configuration;@Test_	public void testCreateSSLClientContextMisconfiguration() {__		Configuration clientConfig = new Configuration()__		clientConfig.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__		clientConfig.setString(ConfigConstants.SECURITY_SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		clientConfig.setString(ConfigConstants.SECURITY_SSL_TRUSTSTORE_PASSWORD, "badpassword")___		try {_			SSLContext clientContext = SSLUtils.createSSLClientContext(clientConfig)__			Assert.fail("SSL client context created even with bad SSL configuration ")__		} catch (Exception e) {_			_		}_	};tests,if,ssl,client,context,creation,fails,with,bad,ssl,configuration;test,public,void,test,create,sslclient,context,misconfiguration,configuration,client,config,new,configuration,client,config,set,boolean,config,constants,true,client,config,set,string,config,constants,src,test,resources,local127,truststore,client,config,set,string,config,constants,badpassword,try,sslcontext,client,context,sslutils,create,sslclient,context,client,config,assert,fail,ssl,client,context,created,even,with,bad,ssl,configuration,catch,exception,e
SSLUtilsTest -> @Test 	public void testCreateSSLClientContextMisconfiguration();1498894422;Tests if SSL Client Context creation fails with bad SSL configuration;@Test_	public void testCreateSSLClientContextMisconfiguration() {__		Configuration clientConfig = new Configuration()__		clientConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		clientConfig.setString(SecurityOptions.SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		clientConfig.setString(SecurityOptions.SSL_TRUSTSTORE_PASSWORD, "badpassword")___		try {_			SSLContext clientContext = SSLUtils.createSSLClientContext(clientConfig)__			Assert.fail("SSL client context created even with bad SSL configuration ")__		} catch (Exception e) {_			_		}_	};tests,if,ssl,client,context,creation,fails,with,bad,ssl,configuration;test,public,void,test,create,sslclient,context,misconfiguration,configuration,client,config,new,configuration,client,config,set,boolean,security,options,true,client,config,set,string,security,options,src,test,resources,local127,truststore,client,config,set,string,security,options,badpassword,try,sslcontext,client,context,sslutils,create,sslclient,context,client,config,assert,fail,ssl,client,context,created,even,with,bad,ssl,configuration,catch,exception,e
SSLUtilsTest -> @Test 	public void testCreateSSLClientContextMisconfiguration();1499164413;Tests if SSL Client Context creation fails with bad SSL configuration.;@Test_	public void testCreateSSLClientContextMisconfiguration() {__		Configuration clientConfig = new Configuration()__		clientConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		clientConfig.setString(SecurityOptions.SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		clientConfig.setString(SecurityOptions.SSL_TRUSTSTORE_PASSWORD, "badpassword")___		try {_			SSLContext clientContext = SSLUtils.createSSLClientContext(clientConfig)__			Assert.fail("SSL client context created even with bad SSL configuration ")__		} catch (Exception e) {_			_		}_	};tests,if,ssl,client,context,creation,fails,with,bad,ssl,configuration;test,public,void,test,create,sslclient,context,misconfiguration,configuration,client,config,new,configuration,client,config,set,boolean,security,options,true,client,config,set,string,security,options,src,test,resources,local127,truststore,client,config,set,string,security,options,badpassword,try,sslcontext,client,context,sslutils,create,sslclient,context,client,config,assert,fail,ssl,client,context,created,even,with,bad,ssl,configuration,catch,exception,e
SSLUtilsTest -> @Test 	public void testCreateSSLClientContextMisconfiguration();1525904579;Tests if SSL Client Context creation fails with bad SSL configuration.;@Test_	public void testCreateSSLClientContextMisconfiguration() {__		Configuration clientConfig = new Configuration()__		clientConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		clientConfig.setString(SecurityOptions.SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		clientConfig.setString(SecurityOptions.SSL_TRUSTSTORE_PASSWORD, "badpassword")___		try {_			SSLContext clientContext = SSLUtils.createSSLClientContext(clientConfig)__			Assert.fail("SSL client context created even with bad SSL configuration ")__		} catch (Exception e) {_			_		}_	};tests,if,ssl,client,context,creation,fails,with,bad,ssl,configuration;test,public,void,test,create,sslclient,context,misconfiguration,configuration,client,config,new,configuration,client,config,set,boolean,security,options,true,client,config,set,string,security,options,src,test,resources,local127,truststore,client,config,set,string,security,options,badpassword,try,sslcontext,client,context,sslutils,create,sslclient,context,client,config,assert,fail,ssl,client,context,created,even,with,bad,ssl,configuration,catch,exception,e
SSLUtilsTest -> @Test 	public void testCreateSSLClientContextMisconfiguration();1531721446;Tests if SSL Client Context creation fails with bad SSL configuration.;@Test_	public void testCreateSSLClientContextMisconfiguration() {__		Configuration clientConfig = new Configuration()__		clientConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		clientConfig.setString(SecurityOptions.SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		clientConfig.setString(SecurityOptions.SSL_TRUSTSTORE_PASSWORD, "badpassword")___		try {_			SSLContext clientContext = SSLUtils.createSSLClientContext(clientConfig)__			Assert.fail("SSL client context created even with bad SSL configuration ")__		} catch (Exception e) {_			_		}_	};tests,if,ssl,client,context,creation,fails,with,bad,ssl,configuration;test,public,void,test,create,sslclient,context,misconfiguration,configuration,client,config,new,configuration,client,config,set,boolean,security,options,true,client,config,set,string,security,options,src,test,resources,local127,truststore,client,config,set,string,security,options,badpassword,try,sslcontext,client,context,sslutils,create,sslclient,context,client,config,assert,fail,ssl,client,context,created,even,with,bad,ssl,configuration,catch,exception,e
SSLUtilsTest -> @Test 	public void testCreateSSLServerContextWithMultiProtocols();1489748538;Tests if SSL Server Context creation fails with bad SSL configuration;@Test_	public void testCreateSSLServerContextWithMultiProtocols() {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__		serverConfig.setString(ConfigConstants.SECURITY_SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(ConfigConstants.SECURITY_SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(ConfigConstants.SECURITY_SSL_KEY_PASSWORD, "password")__		serverConfig.setString(ConfigConstants.SECURITY_SSL_PROTOCOL, "TLSv1,TLSv1.2")___		try {_			SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__			Assert.fail("SSL server context created even with multiple protocols set ")__		} catch (Exception e) {_			_		}_	};tests,if,ssl,server,context,creation,fails,with,bad,ssl,configuration;test,public,void,test,create,sslserver,context,with,multi,protocols,configuration,server,config,new,configuration,server,config,set,boolean,config,constants,true,server,config,set,string,config,constants,src,test,resources,local127,keystore,server,config,set,string,config,constants,password,server,config,set,string,config,constants,password,server,config,set,string,config,constants,tlsv1,tlsv1,2,try,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,fail,ssl,server,context,created,even,with,multiple,protocols,set,catch,exception,e
SSLUtilsTest -> @Test 	public void testCreateSSLServerContextWithMultiProtocols();1498894422;Tests if SSL Server Context creation fails with bad SSL configuration;@Test_	public void testCreateSSLServerContextWithMultiProtocols() {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_PROTOCOL, "TLSv1,TLSv1.2")___		try {_			SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__			Assert.fail("SSL server context created even with multiple protocols set ")__		} catch (Exception e) {_			_		}_	};tests,if,ssl,server,context,creation,fails,with,bad,ssl,configuration;test,public,void,test,create,sslserver,context,with,multi,protocols,configuration,server,config,new,configuration,server,config,set,boolean,security,options,true,server,config,set,string,security,options,src,test,resources,local127,keystore,server,config,set,string,security,options,password,server,config,set,string,security,options,password,server,config,set,string,security,options,tlsv1,tlsv1,2,try,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,fail,ssl,server,context,created,even,with,multiple,protocols,set,catch,exception,e
SSLUtilsTest -> @Test 	public void testCreateSSLServerContextWithMultiProtocols();1499164413;Tests if SSL Server Context creation fails with bad SSL configuration.;@Test_	public void testCreateSSLServerContextWithMultiProtocols() {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_PROTOCOL, "TLSv1,TLSv1.2")___		try {_			SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__			Assert.fail("SSL server context created even with multiple protocols set ")__		} catch (Exception e) {_			_		}_	};tests,if,ssl,server,context,creation,fails,with,bad,ssl,configuration;test,public,void,test,create,sslserver,context,with,multi,protocols,configuration,server,config,new,configuration,server,config,set,boolean,security,options,true,server,config,set,string,security,options,src,test,resources,local127,keystore,server,config,set,string,security,options,password,server,config,set,string,security,options,password,server,config,set,string,security,options,tlsv1,tlsv1,2,try,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,fail,ssl,server,context,created,even,with,multiple,protocols,set,catch,exception,e
SSLUtilsTest -> @Test 	public void testCreateSSLServerContextWithMultiProtocols();1525904579;Tests if SSL Server Context creation fails with bad SSL configuration.;@Test_	public void testCreateSSLServerContextWithMultiProtocols() {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_PROTOCOL, "TLSv1,TLSv1.2")___		try {_			SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__			Assert.fail("SSL server context created even with multiple protocols set ")__		} catch (Exception e) {_			_		}_	};tests,if,ssl,server,context,creation,fails,with,bad,ssl,configuration;test,public,void,test,create,sslserver,context,with,multi,protocols,configuration,server,config,new,configuration,server,config,set,boolean,security,options,true,server,config,set,string,security,options,src,test,resources,local127,keystore,server,config,set,string,security,options,password,server,config,set,string,security,options,password,server,config,set,string,security,options,tlsv1,tlsv1,2,try,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,fail,ssl,server,context,created,even,with,multiple,protocols,set,catch,exception,e
SSLUtilsTest -> @Test 	public void testCreateSSLServerContextWithMultiProtocols();1531721446;Tests if SSL Server Context creation fails with bad SSL configuration.;@Test_	public void testCreateSSLServerContextWithMultiProtocols() {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_PROTOCOL, "TLSv1,TLSv1.2")___		try {_			SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__			Assert.fail("SSL server context created even with multiple protocols set ")__		} catch (Exception e) {_			_		}_	};tests,if,ssl,server,context,creation,fails,with,bad,ssl,configuration;test,public,void,test,create,sslserver,context,with,multi,protocols,configuration,server,config,new,configuration,server,config,set,boolean,security,options,true,server,config,set,string,security,options,src,test,resources,local127,keystore,server,config,set,string,security,options,password,server,config,set,string,security,options,password,server,config,set,string,security,options,tlsv1,tlsv1,2,try,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,fail,ssl,server,context,created,even,with,multiple,protocols,set,catch,exception,e
SSLUtilsTest -> @Test 	public void testCreateSSLClientContextWithSSLDisabled() throws Exception;1476696544;Tests if SSL Client Context is not created if SSL is not configured;@Test_	public void testCreateSSLClientContextWithSSLDisabled() throws Exception {__		Configuration clientConfig = new Configuration()__		clientConfig.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, false)___		SSLContext clientContext = SSLUtils.createSSLClientContext(clientConfig)__		Assert.assertNull(clientContext)__	};tests,if,ssl,client,context,is,not,created,if,ssl,is,not,configured;test,public,void,test,create,sslclient,context,with,ssldisabled,throws,exception,configuration,client,config,new,configuration,client,config,set,boolean,config,constants,false,sslcontext,client,context,sslutils,create,sslclient,context,client,config,assert,assert,null,client,context
SSLUtilsTest -> @Test 	public void testCreateSSLClientContextWithSSLDisabled() throws Exception;1489748538;Tests if SSL Client Context is not created if SSL is not configured;@Test_	public void testCreateSSLClientContextWithSSLDisabled() throws Exception {__		Configuration clientConfig = new Configuration()__		clientConfig.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, false)___		SSLContext clientContext = SSLUtils.createSSLClientContext(clientConfig)__		Assert.assertNull(clientContext)__	};tests,if,ssl,client,context,is,not,created,if,ssl,is,not,configured;test,public,void,test,create,sslclient,context,with,ssldisabled,throws,exception,configuration,client,config,new,configuration,client,config,set,boolean,config,constants,false,sslcontext,client,context,sslutils,create,sslclient,context,client,config,assert,assert,null,client,context
SSLUtilsTest -> @Test 	public void testCreateSSLClientContextWithSSLDisabled() throws Exception;1498894422;Tests if SSL Client Context is not created if SSL is not configured;@Test_	public void testCreateSSLClientContextWithSSLDisabled() throws Exception {__		Configuration clientConfig = new Configuration()__		clientConfig.setBoolean(SecurityOptions.SSL_ENABLED, false)___		SSLContext clientContext = SSLUtils.createSSLClientContext(clientConfig)__		Assert.assertNull(clientContext)__	};tests,if,ssl,client,context,is,not,created,if,ssl,is,not,configured;test,public,void,test,create,sslclient,context,with,ssldisabled,throws,exception,configuration,client,config,new,configuration,client,config,set,boolean,security,options,false,sslcontext,client,context,sslutils,create,sslclient,context,client,config,assert,assert,null,client,context
SSLUtilsTest -> @Test 	public void testCreateSSLClientContextWithSSLDisabled() throws Exception;1499164413;Tests if SSL Client Context is not created if SSL is not configured.;@Test_	public void testCreateSSLClientContextWithSSLDisabled() throws Exception {__		Configuration clientConfig = new Configuration()__		clientConfig.setBoolean(SecurityOptions.SSL_ENABLED, false)___		SSLContext clientContext = SSLUtils.createSSLClientContext(clientConfig)__		Assert.assertNull(clientContext)__	};tests,if,ssl,client,context,is,not,created,if,ssl,is,not,configured;test,public,void,test,create,sslclient,context,with,ssldisabled,throws,exception,configuration,client,config,new,configuration,client,config,set,boolean,security,options,false,sslcontext,client,context,sslutils,create,sslclient,context,client,config,assert,assert,null,client,context
SSLUtilsTest -> @Test 	public void testCreateSSLClientContextWithSSLDisabled() throws Exception;1525904579;Tests if SSL Client Context is not created if SSL is not configured.;@Test_	public void testCreateSSLClientContextWithSSLDisabled() throws Exception {__		Configuration clientConfig = new Configuration()__		clientConfig.setBoolean(SecurityOptions.SSL_ENABLED, false)___		SSLContext clientContext = SSLUtils.createSSLClientContext(clientConfig)__		Assert.assertNull(clientContext)__	};tests,if,ssl,client,context,is,not,created,if,ssl,is,not,configured;test,public,void,test,create,sslclient,context,with,ssldisabled,throws,exception,configuration,client,config,new,configuration,client,config,set,boolean,security,options,false,sslcontext,client,context,sslutils,create,sslclient,context,client,config,assert,assert,null,client,context
SSLUtilsTest -> @Test 	public void testCreateSSLClientContextWithSSLDisabled() throws Exception;1531721446;Tests if SSL Client Context is not created if SSL is not configured.;@Test_	public void testCreateSSLClientContextWithSSLDisabled() throws Exception {__		Configuration clientConfig = new Configuration()__		clientConfig.setBoolean(SecurityOptions.SSL_ENABLED, false)___		SSLContext clientContext = SSLUtils.createSSLClientContext(clientConfig)__		Assert.assertNull(clientContext)__	};tests,if,ssl,client,context,is,not,created,if,ssl,is,not,configured;test,public,void,test,create,sslclient,context,with,ssldisabled,throws,exception,configuration,client,config,new,configuration,client,config,set,boolean,security,options,false,sslcontext,client,context,sslutils,create,sslclient,context,client,config,assert,assert,null,client,context
SSLUtilsTest -> @Test 	public void testRESTClientSSL() throws Exception;1531721446;Tests if REST Client SSL is created given a valid SSL configuration.;@Test_	public void testRESTClientSSL() throws Exception {_		Configuration clientConfig = createRestSslConfigWithTrustStore()___		SSLEngineFactory ssl = SSLUtils.createRestClientSSLEngineFactory(clientConfig)__		assertNotNull(ssl)__	};tests,if,rest,client,ssl,is,created,given,a,valid,ssl,configuration;test,public,void,test,restclient,ssl,throws,exception,configuration,client,config,create,rest,ssl,config,with,trust,store,sslengine,factory,ssl,sslutils,create,rest,client,sslengine,factory,client,config,assert,not,null,ssl
SSLUtilsTest -> @Test 	public void testRESTClientSSL() throws Exception;1531721446;Tests if REST Client SSL is created given a valid SSL configuration.;@Test_	public void testRESTClientSSL() throws Exception {_		Configuration clientConfig = createRestSslConfigWithTrustStore()___		SSLEngineFactory ssl = SSLUtils.createRestClientSSLEngineFactory(clientConfig)__		assertNotNull(ssl)__	};tests,if,rest,client,ssl,is,created,given,a,valid,ssl,configuration;test,public,void,test,restclient,ssl,throws,exception,configuration,client,config,create,rest,ssl,config,with,trust,store,sslengine,factory,ssl,sslutils,create,rest,client,sslengine,factory,client,config,assert,not,null,ssl
SSLUtilsTest -> @Test 	public void testRESTClientSSL() throws Exception;1538485302;Tests if REST Client SSL is created given a valid SSL configuration.;@Test_	public void testRESTClientSSL() throws Exception {_		Configuration clientConfig = createRestSslConfigWithTrustStore()___		SSLEngineFactory ssl = SSLUtils.createRestClientSSLEngineFactory(clientConfig)__		assertNotNull(ssl)__	};tests,if,rest,client,ssl,is,created,given,a,valid,ssl,configuration;test,public,void,test,restclient,ssl,throws,exception,configuration,client,config,create,rest,ssl,config,with,trust,store,sslengine,factory,ssl,sslutils,create,rest,client,sslengine,factory,client,config,assert,not,null,ssl
SSLUtilsTest -> @Test 	public void testRESTClientSSL() throws Exception;1540215410;Tests if REST Client SSL is created given a valid SSL configuration.;@Test_	public void testRESTClientSSL() throws Exception {_		Configuration clientConfig = createRestSslConfigWithTrustStore()___		SSLHandlerFactory ssl = SSLUtils.createRestClientSSLEngineFactory(clientConfig)__		assertNotNull(ssl)__	};tests,if,rest,client,ssl,is,created,given,a,valid,ssl,configuration;test,public,void,test,restclient,ssl,throws,exception,configuration,client,config,create,rest,ssl,config,with,trust,store,sslhandler,factory,ssl,sslutils,create,rest,client,sslengine,factory,client,config,assert,not,null,ssl
SSLUtilsTest -> @Test 	public void testSetSSLVersionAndCipherSuitesForSSLServerSocket() throws Exception;1489748538;Tests if SSLUtils set the right ssl version and cipher suites for SSLServerSocket;@Test_	public void testSetSSLVersionAndCipherSuitesForSSLServerSocket() throws Exception {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__		serverConfig.setString(ConfigConstants.SECURITY_SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(ConfigConstants.SECURITY_SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(ConfigConstants.SECURITY_SSL_KEY_PASSWORD, "password")__		serverConfig.setString(ConfigConstants.SECURITY_SSL_PROTOCOL, "TLSv1.1")__		serverConfig.setString(ConfigConstants.SECURITY_SSL_ALGORITHMS, "TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA256")___		SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__		ServerSocket socket = null__		try {_			socket = serverContext.getServerSocketFactory().createServerSocket(0)___			String[] protocols = ((SSLServerSocket) socket).getEnabledProtocols()__			String[] algorithms = ((SSLServerSocket) socket).getEnabledCipherSuites()___			Assert.assertNotEquals(1, protocols.length)__			Assert.assertNotEquals(2, algorithms.length)___			SSLUtils.setSSLVerAndCipherSuites(socket, serverConfig)__			protocols = ((SSLServerSocket) socket).getEnabledProtocols()__			algorithms = ((SSLServerSocket) socket).getEnabledCipherSuites()___			Assert.assertEquals(1, protocols.length)__			Assert.assertEquals("TLSv1.1", protocols[0])__			Assert.assertEquals(2, algorithms.length)__			Assert.assertTrue(algorithms[0].equals("TLS_RSA_WITH_AES_128_CBC_SHA") || algorithms[0].equals("TLS_RSA_WITH_AES_128_CBC_SHA256"))__			Assert.assertTrue(algorithms[1].equals("TLS_RSA_WITH_AES_128_CBC_SHA") || algorithms[1].equals("TLS_RSA_WITH_AES_128_CBC_SHA256"))__		} finally {_			if (socket != null) {_				socket.close()__			}_		}_	};tests,if,sslutils,set,the,right,ssl,version,and,cipher,suites,for,sslserver,socket;test,public,void,test,set,sslversion,and,cipher,suites,for,sslserver,socket,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,config,constants,true,server,config,set,string,config,constants,src,test,resources,local127,keystore,server,config,set,string,config,constants,password,server,config,set,string,config,constants,password,server,config,set,string,config,constants,tlsv1,1,server,config,set,string,config,constants,sslcontext,server,context,sslutils,create,sslserver,context,server,config,server,socket,socket,null,try,socket,server,context,get,server,socket,factory,create,server,socket,0,string,protocols,sslserver,socket,socket,get,enabled,protocols,string,algorithms,sslserver,socket,socket,get,enabled,cipher,suites,assert,assert,not,equals,1,protocols,length,assert,assert,not,equals,2,algorithms,length,sslutils,set,sslver,and,cipher,suites,socket,server,config,protocols,sslserver,socket,socket,get,enabled,protocols,algorithms,sslserver,socket,socket,get,enabled,cipher,suites,assert,assert,equals,1,protocols,length,assert,assert,equals,tlsv1,1,protocols,0,assert,assert,equals,2,algorithms,length,assert,assert,true,algorithms,0,equals,algorithms,0,equals,assert,assert,true,algorithms,1,equals,algorithms,1,equals,finally,if,socket,null,socket,close
SSLUtilsTest -> @Test 	public void testSetSSLVersionAndCipherSuitesForSSLServerSocket() throws Exception;1498894422;Tests if SSLUtils set the right ssl version and cipher suites for SSLServerSocket;@Test_	public void testSetSSLVersionAndCipherSuitesForSSLServerSocket() throws Exception {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_PROTOCOL, "TLSv1.1")__		serverConfig.setString(SecurityOptions.SSL_ALGORITHMS, "TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA256")___		SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__		ServerSocket socket = null__		try {_			socket = serverContext.getServerSocketFactory().createServerSocket(0)___			String[] protocols = ((SSLServerSocket) socket).getEnabledProtocols()__			String[] algorithms = ((SSLServerSocket) socket).getEnabledCipherSuites()___			Assert.assertNotEquals(1, protocols.length)__			Assert.assertNotEquals(2, algorithms.length)___			SSLUtils.setSSLVerAndCipherSuites(socket, serverConfig)__			protocols = ((SSLServerSocket) socket).getEnabledProtocols()__			algorithms = ((SSLServerSocket) socket).getEnabledCipherSuites()___			Assert.assertEquals(1, protocols.length)__			Assert.assertEquals("TLSv1.1", protocols[0])__			Assert.assertEquals(2, algorithms.length)__			Assert.assertTrue(algorithms[0].equals("TLS_RSA_WITH_AES_128_CBC_SHA") || algorithms[0].equals("TLS_RSA_WITH_AES_128_CBC_SHA256"))__			Assert.assertTrue(algorithms[1].equals("TLS_RSA_WITH_AES_128_CBC_SHA") || algorithms[1].equals("TLS_RSA_WITH_AES_128_CBC_SHA256"))__		} finally {_			if (socket != null) {_				socket.close()__			}_		}_	};tests,if,sslutils,set,the,right,ssl,version,and,cipher,suites,for,sslserver,socket;test,public,void,test,set,sslversion,and,cipher,suites,for,sslserver,socket,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,security,options,true,server,config,set,string,security,options,src,test,resources,local127,keystore,server,config,set,string,security,options,password,server,config,set,string,security,options,password,server,config,set,string,security,options,tlsv1,1,server,config,set,string,security,options,sslcontext,server,context,sslutils,create,sslserver,context,server,config,server,socket,socket,null,try,socket,server,context,get,server,socket,factory,create,server,socket,0,string,protocols,sslserver,socket,socket,get,enabled,protocols,string,algorithms,sslserver,socket,socket,get,enabled,cipher,suites,assert,assert,not,equals,1,protocols,length,assert,assert,not,equals,2,algorithms,length,sslutils,set,sslver,and,cipher,suites,socket,server,config,protocols,sslserver,socket,socket,get,enabled,protocols,algorithms,sslserver,socket,socket,get,enabled,cipher,suites,assert,assert,equals,1,protocols,length,assert,assert,equals,tlsv1,1,protocols,0,assert,assert,equals,2,algorithms,length,assert,assert,true,algorithms,0,equals,algorithms,0,equals,assert,assert,true,algorithms,1,equals,algorithms,1,equals,finally,if,socket,null,socket,close
SSLUtilsTest -> @Test 	public void testSetSSLVersionAndCipherSuitesForSSLServerSocket() throws Exception;1499164413;Tests if SSLUtils set the right ssl version and cipher suites for SSLServerSocket.;@Test_	public void testSetSSLVersionAndCipherSuitesForSSLServerSocket() throws Exception {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_PROTOCOL, "TLSv1.1")__		serverConfig.setString(SecurityOptions.SSL_ALGORITHMS, "TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA256")___		SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__		ServerSocket socket = null__		try {_			socket = serverContext.getServerSocketFactory().createServerSocket(0)___			String[] protocols = ((SSLServerSocket) socket).getEnabledProtocols()__			String[] algorithms = ((SSLServerSocket) socket).getEnabledCipherSuites()___			Assert.assertNotEquals(1, protocols.length)__			Assert.assertNotEquals(2, algorithms.length)___			SSLUtils.setSSLVerAndCipherSuites(socket, serverConfig)__			protocols = ((SSLServerSocket) socket).getEnabledProtocols()__			algorithms = ((SSLServerSocket) socket).getEnabledCipherSuites()___			Assert.assertEquals(1, protocols.length)__			Assert.assertEquals("TLSv1.1", protocols[0])__			Assert.assertEquals(2, algorithms.length)__			Assert.assertTrue(algorithms[0].equals("TLS_RSA_WITH_AES_128_CBC_SHA") || algorithms[0].equals("TLS_RSA_WITH_AES_128_CBC_SHA256"))__			Assert.assertTrue(algorithms[1].equals("TLS_RSA_WITH_AES_128_CBC_SHA") || algorithms[1].equals("TLS_RSA_WITH_AES_128_CBC_SHA256"))__		} finally {_			if (socket != null) {_				socket.close()__			}_		}_	};tests,if,sslutils,set,the,right,ssl,version,and,cipher,suites,for,sslserver,socket;test,public,void,test,set,sslversion,and,cipher,suites,for,sslserver,socket,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,security,options,true,server,config,set,string,security,options,src,test,resources,local127,keystore,server,config,set,string,security,options,password,server,config,set,string,security,options,password,server,config,set,string,security,options,tlsv1,1,server,config,set,string,security,options,sslcontext,server,context,sslutils,create,sslserver,context,server,config,server,socket,socket,null,try,socket,server,context,get,server,socket,factory,create,server,socket,0,string,protocols,sslserver,socket,socket,get,enabled,protocols,string,algorithms,sslserver,socket,socket,get,enabled,cipher,suites,assert,assert,not,equals,1,protocols,length,assert,assert,not,equals,2,algorithms,length,sslutils,set,sslver,and,cipher,suites,socket,server,config,protocols,sslserver,socket,socket,get,enabled,protocols,algorithms,sslserver,socket,socket,get,enabled,cipher,suites,assert,assert,equals,1,protocols,length,assert,assert,equals,tlsv1,1,protocols,0,assert,assert,equals,2,algorithms,length,assert,assert,true,algorithms,0,equals,algorithms,0,equals,assert,assert,true,algorithms,1,equals,algorithms,1,equals,finally,if,socket,null,socket,close
SSLUtilsTest -> @Test 	public void testSetSSLVersionAndCipherSuitesForSSLServerSocket() throws Exception;1525904579;Tests if SSLUtils set the right ssl version and cipher suites for SSLServerSocket.;@Test_	public void testSetSSLVersionAndCipherSuitesForSSLServerSocket() throws Exception {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_PROTOCOL, "TLSv1.1")__		serverConfig.setString(SecurityOptions.SSL_ALGORITHMS, "TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA256")___		SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__		ServerSocket socket = null__		try {_			socket = serverContext.getServerSocketFactory().createServerSocket(0)___			String[] protocols = ((SSLServerSocket) socket).getEnabledProtocols()__			String[] algorithms = ((SSLServerSocket) socket).getEnabledCipherSuites()___			Assert.assertNotEquals(1, protocols.length)__			Assert.assertNotEquals(2, algorithms.length)___			SSLUtils.setSSLVerAndCipherSuites(socket, serverConfig)__			protocols = ((SSLServerSocket) socket).getEnabledProtocols()__			algorithms = ((SSLServerSocket) socket).getEnabledCipherSuites()___			Assert.assertEquals(1, protocols.length)__			Assert.assertEquals("TLSv1.1", protocols[0])__			Assert.assertEquals(2, algorithms.length)__			Assert.assertTrue(algorithms[0].equals("TLS_RSA_WITH_AES_128_CBC_SHA") || algorithms[0].equals("TLS_RSA_WITH_AES_128_CBC_SHA256"))__			Assert.assertTrue(algorithms[1].equals("TLS_RSA_WITH_AES_128_CBC_SHA") || algorithms[1].equals("TLS_RSA_WITH_AES_128_CBC_SHA256"))__		} finally {_			if (socket != null) {_				socket.close()__			}_		}_	};tests,if,sslutils,set,the,right,ssl,version,and,cipher,suites,for,sslserver,socket;test,public,void,test,set,sslversion,and,cipher,suites,for,sslserver,socket,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,security,options,true,server,config,set,string,security,options,src,test,resources,local127,keystore,server,config,set,string,security,options,password,server,config,set,string,security,options,password,server,config,set,string,security,options,tlsv1,1,server,config,set,string,security,options,sslcontext,server,context,sslutils,create,sslserver,context,server,config,server,socket,socket,null,try,socket,server,context,get,server,socket,factory,create,server,socket,0,string,protocols,sslserver,socket,socket,get,enabled,protocols,string,algorithms,sslserver,socket,socket,get,enabled,cipher,suites,assert,assert,not,equals,1,protocols,length,assert,assert,not,equals,2,algorithms,length,sslutils,set,sslver,and,cipher,suites,socket,server,config,protocols,sslserver,socket,socket,get,enabled,protocols,algorithms,sslserver,socket,socket,get,enabled,cipher,suites,assert,assert,equals,1,protocols,length,assert,assert,equals,tlsv1,1,protocols,0,assert,assert,equals,2,algorithms,length,assert,assert,true,algorithms,0,equals,algorithms,0,equals,assert,assert,true,algorithms,1,equals,algorithms,1,equals,finally,if,socket,null,socket,close
SSLUtilsTest -> @Test 	public void testSetSSLVersionAndCipherSuitesForSSLServerSocket() throws Exception;1531721446;Tests if SSLUtils set the right ssl version and cipher suites for SSLServerSocket.;@Test_	public void testSetSSLVersionAndCipherSuitesForSSLServerSocket() throws Exception {_		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")___		_		serverConfig.setString(SecurityOptions.SSL_PROTOCOL, "TLSv1.1")__		serverConfig.setString(SecurityOptions.SSL_ALGORITHMS, "TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA256")___		try (ServerSocket socket = SSLUtils.createSSLServerSocketFactory(serverConfig).createServerSocket(0)) {_			assertTrue(socket instanceof SSLServerSocket)__			final SSLServerSocket sslSocket = (SSLServerSocket) socket___			String[] protocols = sslSocket.getEnabledProtocols()__			String[] algorithms = sslSocket.getEnabledCipherSuites()___			assertEquals(1, protocols.length)__			assertEquals("TLSv1.1", protocols[0])__			assertEquals(2, algorithms.length)__			assertThat(algorithms, IsArrayContainingInAnyOrder.arrayContainingInAnyOrder(_					"TLS_RSA_WITH_AES_128_CBC_SHA", "TLS_RSA_WITH_AES_128_CBC_SHA256"))__		}_	};tests,if,sslutils,set,the,right,ssl,version,and,cipher,suites,for,sslserver,socket;test,public,void,test,set,sslversion,and,cipher,suites,for,sslserver,socket,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,security,options,true,server,config,set,string,security,options,src,test,resources,local127,keystore,server,config,set,string,security,options,password,server,config,set,string,security,options,password,server,config,set,string,security,options,tlsv1,1,server,config,set,string,security,options,try,server,socket,socket,sslutils,create,sslserver,socket,factory,server,config,create,server,socket,0,assert,true,socket,instanceof,sslserver,socket,final,sslserver,socket,ssl,socket,sslserver,socket,socket,string,protocols,ssl,socket,get,enabled,protocols,string,algorithms,ssl,socket,get,enabled,cipher,suites,assert,equals,1,protocols,length,assert,equals,tlsv1,1,protocols,0,assert,equals,2,algorithms,length,assert,that,algorithms,is,array,containing,in,any,order,array,containing,in,any,order
SSLUtilsTest -> @Test 	public void testSetSSLVersionAndCipherSuitesForSSLServerSocket() throws Exception;1531721446;Tests if SSLUtils set the right ssl version and cipher suites for SSLServerSocket.;@Test_	public void testSetSSLVersionAndCipherSuitesForSSLServerSocket() throws Exception {_		Configuration serverConfig = createInternalSslConfigWithKeyAndTrustStores()___		_		serverConfig.setString(SecurityOptions.SSL_PROTOCOL, "TLSv1.1")__		serverConfig.setString(SecurityOptions.SSL_ALGORITHMS, "TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA256")___		try (ServerSocket socket = SSLUtils.createSSLServerSocketFactory(serverConfig).createServerSocket(0)) {_			assertTrue(socket instanceof SSLServerSocket)__			final SSLServerSocket sslSocket = (SSLServerSocket) socket___			String[] protocols = sslSocket.getEnabledProtocols()__			String[] algorithms = sslSocket.getEnabledCipherSuites()___			assertEquals(1, protocols.length)__			assertEquals("TLSv1.1", protocols[0])__			assertEquals(2, algorithms.length)__			assertThat(algorithms, arrayContainingInAnyOrder(_					"TLS_RSA_WITH_AES_128_CBC_SHA", "TLS_RSA_WITH_AES_128_CBC_SHA256"))__		}_	};tests,if,sslutils,set,the,right,ssl,version,and,cipher,suites,for,sslserver,socket;test,public,void,test,set,sslversion,and,cipher,suites,for,sslserver,socket,throws,exception,configuration,server,config,create,internal,ssl,config,with,key,and,trust,stores,server,config,set,string,security,options,tlsv1,1,server,config,set,string,security,options,try,server,socket,socket,sslutils,create,sslserver,socket,factory,server,config,create,server,socket,0,assert,true,socket,instanceof,sslserver,socket,final,sslserver,socket,ssl,socket,sslserver,socket,socket,string,protocols,ssl,socket,get,enabled,protocols,string,algorithms,ssl,socket,get,enabled,cipher,suites,assert,equals,1,protocols,length,assert,equals,tlsv1,1,protocols,0,assert,equals,2,algorithms,length,assert,that,algorithms,array,containing,in,any,order
SSLUtilsTest -> @Test 	public void testSetSSLVersionAndCipherSuitesForSSLServerSocket() throws Exception;1531721446;Tests if SSLUtils set the right ssl version and cipher suites for SSLServerSocket.;@Test_	public void testSetSSLVersionAndCipherSuitesForSSLServerSocket() throws Exception {_		Configuration serverConfig = createInternalSslConfigWithKeyAndTrustStores()___		_		serverConfig.setString(SecurityOptions.SSL_PROTOCOL, "TLSv1.1")__		serverConfig.setString(SecurityOptions.SSL_ALGORITHMS, "TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA256")___		try (ServerSocket socket = SSLUtils.createSSLServerSocketFactory(serverConfig).createServerSocket(0)) {_			assertTrue(socket instanceof SSLServerSocket)__			final SSLServerSocket sslSocket = (SSLServerSocket) socket___			String[] protocols = sslSocket.getEnabledProtocols()__			String[] algorithms = sslSocket.getEnabledCipherSuites()___			assertEquals(1, protocols.length)__			assertEquals("TLSv1.1", protocols[0])__			assertEquals(2, algorithms.length)__			assertThat(algorithms, arrayContainingInAnyOrder(_					"TLS_RSA_WITH_AES_128_CBC_SHA", "TLS_RSA_WITH_AES_128_CBC_SHA256"))__		}_	};tests,if,sslutils,set,the,right,ssl,version,and,cipher,suites,for,sslserver,socket;test,public,void,test,set,sslversion,and,cipher,suites,for,sslserver,socket,throws,exception,configuration,server,config,create,internal,ssl,config,with,key,and,trust,stores,server,config,set,string,security,options,tlsv1,1,server,config,set,string,security,options,try,server,socket,socket,sslutils,create,sslserver,socket,factory,server,config,create,server,socket,0,assert,true,socket,instanceof,sslserver,socket,final,sslserver,socket,ssl,socket,sslserver,socket,socket,string,protocols,ssl,socket,get,enabled,protocols,string,algorithms,ssl,socket,get,enabled,cipher,suites,assert,equals,1,protocols,length,assert,equals,tlsv1,1,protocols,0,assert,equals,2,algorithms,length,assert,that,algorithms,array,containing,in,any,order
SSLUtilsTest -> @Test 	public void testSetSSLVersionAndCipherSuitesForSSLServerSocket() throws Exception;1538485302;Tests if SSLUtils set the right ssl version and cipher suites for SSLServerSocket.;@Test_	public void testSetSSLVersionAndCipherSuitesForSSLServerSocket() throws Exception {_		Configuration serverConfig = createInternalSslConfigWithKeyAndTrustStores()___		_		serverConfig.setString(SecurityOptions.SSL_PROTOCOL, "TLSv1.1")__		serverConfig.setString(SecurityOptions.SSL_ALGORITHMS, "TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA256")___		try (ServerSocket socket = SSLUtils.createSSLServerSocketFactory(serverConfig).createServerSocket(0)) {_			assertTrue(socket instanceof SSLServerSocket)__			final SSLServerSocket sslSocket = (SSLServerSocket) socket___			String[] protocols = sslSocket.getEnabledProtocols()__			String[] algorithms = sslSocket.getEnabledCipherSuites()___			assertEquals(1, protocols.length)__			assertEquals("TLSv1.1", protocols[0])__			assertEquals(2, algorithms.length)__			assertThat(algorithms, arrayContainingInAnyOrder(_					"TLS_RSA_WITH_AES_128_CBC_SHA", "TLS_RSA_WITH_AES_128_CBC_SHA256"))__		}_	};tests,if,sslutils,set,the,right,ssl,version,and,cipher,suites,for,sslserver,socket;test,public,void,test,set,sslversion,and,cipher,suites,for,sslserver,socket,throws,exception,configuration,server,config,create,internal,ssl,config,with,key,and,trust,stores,server,config,set,string,security,options,tlsv1,1,server,config,set,string,security,options,try,server,socket,socket,sslutils,create,sslserver,socket,factory,server,config,create,server,socket,0,assert,true,socket,instanceof,sslserver,socket,final,sslserver,socket,ssl,socket,sslserver,socket,socket,string,protocols,ssl,socket,get,enabled,protocols,string,algorithms,ssl,socket,get,enabled,cipher,suites,assert,equals,1,protocols,length,assert,equals,tlsv1,1,protocols,0,assert,equals,2,algorithms,length,assert,that,algorithms,array,containing,in,any,order
SSLUtilsTest -> @Test 	public void testSetSSLVersionAndCipherSuitesForSSLServerSocket() throws Exception;1540215410;Tests if SSLUtils set the right ssl version and cipher suites for SSLServerSocket.;@Test_	public void testSetSSLVersionAndCipherSuitesForSSLServerSocket() throws Exception {_		Configuration serverConfig = createInternalSslConfigWithKeyAndTrustStores()___		_		serverConfig.setString(SecurityOptions.SSL_PROTOCOL, "TLSv1.1")__		serverConfig.setString(SecurityOptions.SSL_ALGORITHMS, "TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA256")___		try (ServerSocket socket = SSLUtils.createSSLServerSocketFactory(serverConfig).createServerSocket(0)) {_			assertTrue(socket instanceof SSLServerSocket)__			final SSLServerSocket sslSocket = (SSLServerSocket) socket___			String[] protocols = sslSocket.getEnabledProtocols()__			String[] algorithms = sslSocket.getEnabledCipherSuites()___			assertEquals(1, protocols.length)__			assertEquals("TLSv1.1", protocols[0])__			assertEquals(2, algorithms.length)__			assertThat(algorithms, arrayContainingInAnyOrder(_					"TLS_RSA_WITH_AES_128_CBC_SHA", "TLS_RSA_WITH_AES_128_CBC_SHA256"))__		}_	};tests,if,sslutils,set,the,right,ssl,version,and,cipher,suites,for,sslserver,socket;test,public,void,test,set,sslversion,and,cipher,suites,for,sslserver,socket,throws,exception,configuration,server,config,create,internal,ssl,config,with,key,and,trust,stores,server,config,set,string,security,options,tlsv1,1,server,config,set,string,security,options,try,server,socket,socket,sslutils,create,sslserver,socket,factory,server,config,create,server,socket,0,assert,true,socket,instanceof,sslserver,socket,final,sslserver,socket,ssl,socket,sslserver,socket,socket,string,protocols,ssl,socket,get,enabled,protocols,string,algorithms,ssl,socket,get,enabled,cipher,suites,assert,equals,1,protocols,length,assert,equals,tlsv1,1,protocols,0,assert,equals,2,algorithms,length,assert,that,algorithms,array,containing,in,any,order
SSLUtilsTest -> @Test 	public void testSetSSLVersionAndCipherSuitesForSSLEngine() throws Exception;1489748538;Tests if SSLUtils set the right ssl version and cipher suites for SSLEngine;@Test_	public void testSetSSLVersionAndCipherSuitesForSSLEngine() throws Exception {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__		serverConfig.setString(ConfigConstants.SECURITY_SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(ConfigConstants.SECURITY_SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(ConfigConstants.SECURITY_SSL_KEY_PASSWORD, "password")__		serverConfig.setString(ConfigConstants.SECURITY_SSL_PROTOCOL, "TLSv1")__		serverConfig.setString(ConfigConstants.SECURITY_SSL_ALGORITHMS, "TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256")___		SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__		SSLEngine engine = serverContext.createSSLEngine()___		String[] protocols = engine.getEnabledProtocols()__		String[] algorithms = engine.getEnabledCipherSuites()___		Assert.assertNotEquals(1, protocols.length)__		Assert.assertNotEquals(2, algorithms.length)___		SSLUtils.setSSLVerAndCipherSuites(engine, serverConfig)__		protocols = engine.getEnabledProtocols()__		algorithms = engine.getEnabledCipherSuites()___		Assert.assertEquals(1, protocols.length)__		Assert.assertEquals("TLSv1", protocols[0])__		Assert.assertEquals(2, algorithms.length)__		Assert.assertTrue(algorithms[0].equals("TLS_DHE_RSA_WITH_AES_128_CBC_SHA") || algorithms[0].equals("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256"))__		Assert.assertTrue(algorithms[1].equals("TLS_DHE_RSA_WITH_AES_128_CBC_SHA") || algorithms[1].equals("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256"))__	};tests,if,sslutils,set,the,right,ssl,version,and,cipher,suites,for,sslengine;test,public,void,test,set,sslversion,and,cipher,suites,for,sslengine,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,config,constants,true,server,config,set,string,config,constants,src,test,resources,local127,keystore,server,config,set,string,config,constants,password,server,config,set,string,config,constants,password,server,config,set,string,config,constants,tlsv1,server,config,set,string,config,constants,sslcontext,server,context,sslutils,create,sslserver,context,server,config,sslengine,engine,server,context,create,sslengine,string,protocols,engine,get,enabled,protocols,string,algorithms,engine,get,enabled,cipher,suites,assert,assert,not,equals,1,protocols,length,assert,assert,not,equals,2,algorithms,length,sslutils,set,sslver,and,cipher,suites,engine,server,config,protocols,engine,get,enabled,protocols,algorithms,engine,get,enabled,cipher,suites,assert,assert,equals,1,protocols,length,assert,assert,equals,tlsv1,protocols,0,assert,assert,equals,2,algorithms,length,assert,assert,true,algorithms,0,equals,algorithms,0,equals,assert,assert,true,algorithms,1,equals,algorithms,1,equals
SSLUtilsTest -> @Test 	public void testSetSSLVersionAndCipherSuitesForSSLEngine() throws Exception;1498894422;Tests if SSLUtils set the right ssl version and cipher suites for SSLEngine;@Test_	public void testSetSSLVersionAndCipherSuitesForSSLEngine() throws Exception {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_PROTOCOL, "TLSv1")__		serverConfig.setString(SecurityOptions.SSL_ALGORITHMS, "TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256")___		SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__		SSLEngine engine = serverContext.createSSLEngine()___		String[] protocols = engine.getEnabledProtocols()__		String[] algorithms = engine.getEnabledCipherSuites()___		Assert.assertNotEquals(1, protocols.length)__		Assert.assertNotEquals(2, algorithms.length)___		SSLUtils.setSSLVerAndCipherSuites(engine, serverConfig)__		protocols = engine.getEnabledProtocols()__		algorithms = engine.getEnabledCipherSuites()___		Assert.assertEquals(1, protocols.length)__		Assert.assertEquals("TLSv1", protocols[0])__		Assert.assertEquals(2, algorithms.length)__		Assert.assertTrue(algorithms[0].equals("TLS_DHE_RSA_WITH_AES_128_CBC_SHA") || algorithms[0].equals("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256"))__		Assert.assertTrue(algorithms[1].equals("TLS_DHE_RSA_WITH_AES_128_CBC_SHA") || algorithms[1].equals("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256"))__	};tests,if,sslutils,set,the,right,ssl,version,and,cipher,suites,for,sslengine;test,public,void,test,set,sslversion,and,cipher,suites,for,sslengine,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,security,options,true,server,config,set,string,security,options,src,test,resources,local127,keystore,server,config,set,string,security,options,password,server,config,set,string,security,options,password,server,config,set,string,security,options,tlsv1,server,config,set,string,security,options,sslcontext,server,context,sslutils,create,sslserver,context,server,config,sslengine,engine,server,context,create,sslengine,string,protocols,engine,get,enabled,protocols,string,algorithms,engine,get,enabled,cipher,suites,assert,assert,not,equals,1,protocols,length,assert,assert,not,equals,2,algorithms,length,sslutils,set,sslver,and,cipher,suites,engine,server,config,protocols,engine,get,enabled,protocols,algorithms,engine,get,enabled,cipher,suites,assert,assert,equals,1,protocols,length,assert,assert,equals,tlsv1,protocols,0,assert,assert,equals,2,algorithms,length,assert,assert,true,algorithms,0,equals,algorithms,0,equals,assert,assert,true,algorithms,1,equals,algorithms,1,equals
SSLUtilsTest -> @Test 	public void testSetSSLVersionAndCipherSuitesForSSLEngine() throws Exception;1499164413;Tests if SSLUtils set the right ssl version and cipher suites for SSLEngine.;@Test_	public void testSetSSLVersionAndCipherSuitesForSSLEngine() throws Exception {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_PROTOCOL, "TLSv1")__		serverConfig.setString(SecurityOptions.SSL_ALGORITHMS, "TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256")___		SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__		SSLEngine engine = serverContext.createSSLEngine()___		String[] protocols = engine.getEnabledProtocols()__		String[] algorithms = engine.getEnabledCipherSuites()___		Assert.assertNotEquals(1, protocols.length)__		Assert.assertNotEquals(2, algorithms.length)___		SSLUtils.setSSLVerAndCipherSuites(engine, serverConfig)__		protocols = engine.getEnabledProtocols()__		algorithms = engine.getEnabledCipherSuites()___		Assert.assertEquals(1, protocols.length)__		Assert.assertEquals("TLSv1", protocols[0])__		Assert.assertEquals(2, algorithms.length)__		Assert.assertTrue(algorithms[0].equals("TLS_DHE_RSA_WITH_AES_128_CBC_SHA") || algorithms[0].equals("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256"))__		Assert.assertTrue(algorithms[1].equals("TLS_DHE_RSA_WITH_AES_128_CBC_SHA") || algorithms[1].equals("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256"))__	};tests,if,sslutils,set,the,right,ssl,version,and,cipher,suites,for,sslengine;test,public,void,test,set,sslversion,and,cipher,suites,for,sslengine,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,security,options,true,server,config,set,string,security,options,src,test,resources,local127,keystore,server,config,set,string,security,options,password,server,config,set,string,security,options,password,server,config,set,string,security,options,tlsv1,server,config,set,string,security,options,sslcontext,server,context,sslutils,create,sslserver,context,server,config,sslengine,engine,server,context,create,sslengine,string,protocols,engine,get,enabled,protocols,string,algorithms,engine,get,enabled,cipher,suites,assert,assert,not,equals,1,protocols,length,assert,assert,not,equals,2,algorithms,length,sslutils,set,sslver,and,cipher,suites,engine,server,config,protocols,engine,get,enabled,protocols,algorithms,engine,get,enabled,cipher,suites,assert,assert,equals,1,protocols,length,assert,assert,equals,tlsv1,protocols,0,assert,assert,equals,2,algorithms,length,assert,assert,true,algorithms,0,equals,algorithms,0,equals,assert,assert,true,algorithms,1,equals,algorithms,1,equals
SSLUtilsTest -> @Test 	public void testSetSSLVersionAndCipherSuitesForSSLEngine() throws Exception;1525904579;Tests if SSLUtils set the right ssl version and cipher suites for SSLEngine.;@Test_	public void testSetSSLVersionAndCipherSuitesForSSLEngine() throws Exception {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_PROTOCOL, "TLSv1")__		serverConfig.setString(SecurityOptions.SSL_ALGORITHMS, "TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256")___		SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__		SSLEngine engine = serverContext.createSSLEngine()___		String[] protocols = engine.getEnabledProtocols()__		String[] algorithms = engine.getEnabledCipherSuites()___		Assert.assertNotEquals(1, protocols.length)__		Assert.assertNotEquals(2, algorithms.length)___		SSLUtils.setSSLVerAndCipherSuites(engine, serverConfig)__		protocols = engine.getEnabledProtocols()__		algorithms = engine.getEnabledCipherSuites()___		Assert.assertEquals(1, protocols.length)__		Assert.assertEquals("TLSv1", protocols[0])__		Assert.assertEquals(2, algorithms.length)__		Assert.assertTrue(algorithms[0].equals("TLS_DHE_RSA_WITH_AES_128_CBC_SHA") || algorithms[0].equals("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256"))__		Assert.assertTrue(algorithms[1].equals("TLS_DHE_RSA_WITH_AES_128_CBC_SHA") || algorithms[1].equals("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256"))__	};tests,if,sslutils,set,the,right,ssl,version,and,cipher,suites,for,sslengine;test,public,void,test,set,sslversion,and,cipher,suites,for,sslengine,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,security,options,true,server,config,set,string,security,options,src,test,resources,local127,keystore,server,config,set,string,security,options,password,server,config,set,string,security,options,password,server,config,set,string,security,options,tlsv1,server,config,set,string,security,options,sslcontext,server,context,sslutils,create,sslserver,context,server,config,sslengine,engine,server,context,create,sslengine,string,protocols,engine,get,enabled,protocols,string,algorithms,engine,get,enabled,cipher,suites,assert,assert,not,equals,1,protocols,length,assert,assert,not,equals,2,algorithms,length,sslutils,set,sslver,and,cipher,suites,engine,server,config,protocols,engine,get,enabled,protocols,algorithms,engine,get,enabled,cipher,suites,assert,assert,equals,1,protocols,length,assert,assert,equals,tlsv1,protocols,0,assert,assert,equals,2,algorithms,length,assert,assert,true,algorithms,0,equals,algorithms,0,equals,assert,assert,true,algorithms,1,equals,algorithms,1,equals
SSLUtilsTest -> @Test 	public void testSetSSLVersionAndCipherSuitesForSSLEngine() throws Exception;1531721446;Tests if SSLUtils set the right ssl version and cipher suites for SSLEngine.;@Test_	public void testSetSSLVersionAndCipherSuitesForSSLEngine() throws Exception {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_PROTOCOL, "TLSv1")__		serverConfig.setString(SecurityOptions.SSL_ALGORITHMS, "TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256")___		SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__		SSLEngine engine = serverContext.createSSLEngine()___		String[] protocols = engine.getEnabledProtocols()__		String[] algorithms = engine.getEnabledCipherSuites()___		Assert.assertNotEquals(1, protocols.length)__		Assert.assertNotEquals(2, algorithms.length)___		SSLUtils.setSSLVerAndCipherSuites(engine, serverConfig)__		protocols = engine.getEnabledProtocols()__		algorithms = engine.getEnabledCipherSuites()___		Assert.assertEquals(1, protocols.length)__		Assert.assertEquals("TLSv1", protocols[0])__		Assert.assertEquals(2, algorithms.length)__		Assert.assertTrue(algorithms[0].equals("TLS_DHE_RSA_WITH_AES_128_CBC_SHA") || algorithms[0].equals("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256"))__		Assert.assertTrue(algorithms[1].equals("TLS_DHE_RSA_WITH_AES_128_CBC_SHA") || algorithms[1].equals("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256"))__	};tests,if,sslutils,set,the,right,ssl,version,and,cipher,suites,for,sslengine;test,public,void,test,set,sslversion,and,cipher,suites,for,sslengine,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,security,options,true,server,config,set,string,security,options,src,test,resources,local127,keystore,server,config,set,string,security,options,password,server,config,set,string,security,options,password,server,config,set,string,security,options,tlsv1,server,config,set,string,security,options,sslcontext,server,context,sslutils,create,sslserver,context,server,config,sslengine,engine,server,context,create,sslengine,string,protocols,engine,get,enabled,protocols,string,algorithms,engine,get,enabled,cipher,suites,assert,assert,not,equals,1,protocols,length,assert,assert,not,equals,2,algorithms,length,sslutils,set,sslver,and,cipher,suites,engine,server,config,protocols,engine,get,enabled,protocols,algorithms,engine,get,enabled,cipher,suites,assert,assert,equals,1,protocols,length,assert,assert,equals,tlsv1,protocols,0,assert,assert,equals,2,algorithms,length,assert,assert,true,algorithms,0,equals,algorithms,0,equals,assert,assert,true,algorithms,1,equals,algorithms,1,equals
SSLUtilsTest -> @Test 	public void testCreateSSLClientContext() throws Exception;1476696544;Tests if SSL Client Context is created given a valid SSL configuration;@Test_	public void testCreateSSLClientContext() throws Exception {__		Configuration clientConfig = new Configuration()__		clientConfig.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__		clientConfig.setString(ConfigConstants.SECURITY_SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		clientConfig.setString(ConfigConstants.SECURITY_SSL_TRUSTSTORE_PASSWORD, "password")___		SSLContext clientContext = SSLUtils.createSSLClientContext(clientConfig)__		Assert.assertNotNull(clientContext)__	};tests,if,ssl,client,context,is,created,given,a,valid,ssl,configuration;test,public,void,test,create,sslclient,context,throws,exception,configuration,client,config,new,configuration,client,config,set,boolean,config,constants,true,client,config,set,string,config,constants,src,test,resources,local127,truststore,client,config,set,string,config,constants,password,sslcontext,client,context,sslutils,create,sslclient,context,client,config,assert,assert,not,null,client,context
SSLUtilsTest -> @Test 	public void testCreateSSLClientContext() throws Exception;1489748538;Tests if SSL Client Context is created given a valid SSL configuration;@Test_	public void testCreateSSLClientContext() throws Exception {__		Configuration clientConfig = new Configuration()__		clientConfig.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__		clientConfig.setString(ConfigConstants.SECURITY_SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		clientConfig.setString(ConfigConstants.SECURITY_SSL_TRUSTSTORE_PASSWORD, "password")___		SSLContext clientContext = SSLUtils.createSSLClientContext(clientConfig)__		Assert.assertNotNull(clientContext)__	};tests,if,ssl,client,context,is,created,given,a,valid,ssl,configuration;test,public,void,test,create,sslclient,context,throws,exception,configuration,client,config,new,configuration,client,config,set,boolean,config,constants,true,client,config,set,string,config,constants,src,test,resources,local127,truststore,client,config,set,string,config,constants,password,sslcontext,client,context,sslutils,create,sslclient,context,client,config,assert,assert,not,null,client,context
SSLUtilsTest -> @Test 	public void testCreateSSLClientContext() throws Exception;1498894422;Tests if SSL Client Context is created given a valid SSL configuration;@Test_	public void testCreateSSLClientContext() throws Exception {__		Configuration clientConfig = new Configuration()__		clientConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		clientConfig.setString(SecurityOptions.SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		clientConfig.setString(SecurityOptions.SSL_TRUSTSTORE_PASSWORD, "password")___		SSLContext clientContext = SSLUtils.createSSLClientContext(clientConfig)__		Assert.assertNotNull(clientContext)__	};tests,if,ssl,client,context,is,created,given,a,valid,ssl,configuration;test,public,void,test,create,sslclient,context,throws,exception,configuration,client,config,new,configuration,client,config,set,boolean,security,options,true,client,config,set,string,security,options,src,test,resources,local127,truststore,client,config,set,string,security,options,password,sslcontext,client,context,sslutils,create,sslclient,context,client,config,assert,assert,not,null,client,context
SSLUtilsTest -> @Test 	public void testCreateSSLClientContext() throws Exception;1499164413;Tests if SSL Client Context is created given a valid SSL configuration.;@Test_	public void testCreateSSLClientContext() throws Exception {__		Configuration clientConfig = new Configuration()__		clientConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		clientConfig.setString(SecurityOptions.SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		clientConfig.setString(SecurityOptions.SSL_TRUSTSTORE_PASSWORD, "password")___		SSLContext clientContext = SSLUtils.createSSLClientContext(clientConfig)__		Assert.assertNotNull(clientContext)__	};tests,if,ssl,client,context,is,created,given,a,valid,ssl,configuration;test,public,void,test,create,sslclient,context,throws,exception,configuration,client,config,new,configuration,client,config,set,boolean,security,options,true,client,config,set,string,security,options,src,test,resources,local127,truststore,client,config,set,string,security,options,password,sslcontext,client,context,sslutils,create,sslclient,context,client,config,assert,assert,not,null,client,context
SSLUtilsTest -> @Test 	public void testCreateSSLClientContext() throws Exception;1525904579;Tests if SSL Client Context is created given a valid SSL configuration.;@Test_	public void testCreateSSLClientContext() throws Exception {__		Configuration clientConfig = new Configuration()__		clientConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		clientConfig.setString(SecurityOptions.SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		clientConfig.setString(SecurityOptions.SSL_TRUSTSTORE_PASSWORD, "password")___		SSLContext clientContext = SSLUtils.createSSLClientContext(clientConfig)__		Assert.assertNotNull(clientContext)__	};tests,if,ssl,client,context,is,created,given,a,valid,ssl,configuration;test,public,void,test,create,sslclient,context,throws,exception,configuration,client,config,new,configuration,client,config,set,boolean,security,options,true,client,config,set,string,security,options,src,test,resources,local127,truststore,client,config,set,string,security,options,password,sslcontext,client,context,sslutils,create,sslclient,context,client,config,assert,assert,not,null,client,context
SSLUtilsTest -> @Test 	public void testCreateSSLClientContext() throws Exception;1531721446;Tests if SSL Client Context is created given a valid SSL configuration.;@Test_	public void testCreateSSLClientContext() throws Exception {__		Configuration clientConfig = new Configuration()__		clientConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		clientConfig.setString(SecurityOptions.SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		clientConfig.setString(SecurityOptions.SSL_TRUSTSTORE_PASSWORD, "password")___		SSLContext clientContext = SSLUtils.createSSLClientContext(clientConfig)__		Assert.assertNotNull(clientContext)__	};tests,if,ssl,client,context,is,created,given,a,valid,ssl,configuration;test,public,void,test,create,sslclient,context,throws,exception,configuration,client,config,new,configuration,client,config,set,boolean,security,options,true,client,config,set,string,security,options,src,test,resources,local127,truststore,client,config,set,string,security,options,password,sslcontext,client,context,sslutils,create,sslclient,context,client,config,assert,assert,not,null,client,context
SSLUtilsTest -> @Test 	public void testRESTClientSSLDisabled() throws Exception;1531721446;Tests that REST Client SSL Client is not created if SSL is not configured.;@Test_	public void testRESTClientSSLDisabled() throws Exception {_		Configuration clientConfig = createRestSslConfigWithTrustStore()__		clientConfig.setBoolean(SecurityOptions.SSL_REST_ENABLED, false)___		try {_			SSLUtils.createRestClientSSLEngineFactory(clientConfig)__			fail("exception expected")__		} catch (IllegalConfigurationException ignored) {}_	};tests,that,rest,client,ssl,client,is,not,created,if,ssl,is,not,configured;test,public,void,test,restclient,ssldisabled,throws,exception,configuration,client,config,create,rest,ssl,config,with,trust,store,client,config,set,boolean,security,options,false,try,sslutils,create,rest,client,sslengine,factory,client,config,fail,exception,expected,catch,illegal,configuration,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTClientSSLDisabled() throws Exception;1531721446;Tests that REST Client SSL Client is not created if SSL is not configured.;@Test_	public void testRESTClientSSLDisabled() throws Exception {_		Configuration clientConfig = createRestSslConfigWithTrustStore()__		clientConfig.setBoolean(SecurityOptions.SSL_REST_ENABLED, false)___		try {_			SSLUtils.createRestClientSSLEngineFactory(clientConfig)__			fail("exception expected")__		} catch (IllegalConfigurationException ignored) {}_	};tests,that,rest,client,ssl,client,is,not,created,if,ssl,is,not,configured;test,public,void,test,restclient,ssldisabled,throws,exception,configuration,client,config,create,rest,ssl,config,with,trust,store,client,config,set,boolean,security,options,false,try,sslutils,create,rest,client,sslengine,factory,client,config,fail,exception,expected,catch,illegal,configuration,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTClientSSLDisabled() throws Exception;1538485302;Tests that REST Client SSL Client is not created if SSL is not configured.;@Test_	public void testRESTClientSSLDisabled() throws Exception {_		Configuration clientConfig = createRestSslConfigWithTrustStore()__		clientConfig.setBoolean(SecurityOptions.SSL_REST_ENABLED, false)___		try {_			SSLUtils.createRestClientSSLEngineFactory(clientConfig)__			fail("exception expected")__		} catch (IllegalConfigurationException ignored) {}_	};tests,that,rest,client,ssl,client,is,not,created,if,ssl,is,not,configured;test,public,void,test,restclient,ssldisabled,throws,exception,configuration,client,config,create,rest,ssl,config,with,trust,store,client,config,set,boolean,security,options,false,try,sslutils,create,rest,client,sslengine,factory,client,config,fail,exception,expected,catch,illegal,configuration,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTClientSSLDisabled() throws Exception;1540215410;Tests that REST Client SSL Client is not created if SSL is not configured.;@Test_	public void testRESTClientSSLDisabled() throws Exception {_		Configuration clientConfig = createRestSslConfigWithTrustStore()__		clientConfig.setBoolean(SecurityOptions.SSL_REST_ENABLED, false)___		try {_			SSLUtils.createRestClientSSLEngineFactory(clientConfig)__			fail("exception expected")__		} catch (IllegalConfigurationException ignored) {}_	};tests,that,rest,client,ssl,client,is,not,created,if,ssl,is,not,configured;test,public,void,test,restclient,ssldisabled,throws,exception,configuration,client,config,create,rest,ssl,config,with,trust,store,client,config,set,boolean,security,options,false,try,sslutils,create,rest,client,sslengine,factory,client,config,fail,exception,expected,catch,illegal,configuration,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTClientSSLMissingTrustStore() throws Exception;1531721446;Tests that REST Client SSL creation fails with bad SSL configuration.;@Test_	public void testRESTClientSSLMissingTrustStore() throws Exception {_		Configuration config = new Configuration()__		config.setBoolean(SecurityOptions.SSL_REST_ENABLED, true)__		config.setString(SecurityOptions.SSL_REST_TRUSTSTORE_PASSWORD, "some password")___		try {_			SSLUtils.createRestClientSSLEngineFactory(config)__			fail("exception expected")__		} catch (IllegalConfigurationException ignored) {}_	};tests,that,rest,client,ssl,creation,fails,with,bad,ssl,configuration;test,public,void,test,restclient,sslmissing,trust,store,throws,exception,configuration,config,new,configuration,config,set,boolean,security,options,true,config,set,string,security,options,some,password,try,sslutils,create,rest,client,sslengine,factory,config,fail,exception,expected,catch,illegal,configuration,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTClientSSLMissingTrustStore() throws Exception;1531721446;Tests that REST Client SSL creation fails with bad SSL configuration.;@Test_	public void testRESTClientSSLMissingTrustStore() throws Exception {_		Configuration config = new Configuration()__		config.setBoolean(SecurityOptions.SSL_REST_ENABLED, true)__		config.setString(SecurityOptions.SSL_REST_TRUSTSTORE_PASSWORD, "some password")___		try {_			SSLUtils.createRestClientSSLEngineFactory(config)__			fail("exception expected")__		} catch (IllegalConfigurationException ignored) {}_	};tests,that,rest,client,ssl,creation,fails,with,bad,ssl,configuration;test,public,void,test,restclient,sslmissing,trust,store,throws,exception,configuration,config,new,configuration,config,set,boolean,security,options,true,config,set,string,security,options,some,password,try,sslutils,create,rest,client,sslengine,factory,config,fail,exception,expected,catch,illegal,configuration,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTClientSSLMissingTrustStore() throws Exception;1538485302;Tests that REST Client SSL creation fails with bad SSL configuration.;@Test_	public void testRESTClientSSLMissingTrustStore() throws Exception {_		Configuration config = new Configuration()__		config.setBoolean(SecurityOptions.SSL_REST_ENABLED, true)__		config.setString(SecurityOptions.SSL_REST_TRUSTSTORE_PASSWORD, "some password")___		try {_			SSLUtils.createRestClientSSLEngineFactory(config)__			fail("exception expected")__		} catch (IllegalConfigurationException ignored) {}_	};tests,that,rest,client,ssl,creation,fails,with,bad,ssl,configuration;test,public,void,test,restclient,sslmissing,trust,store,throws,exception,configuration,config,new,configuration,config,set,boolean,security,options,true,config,set,string,security,options,some,password,try,sslutils,create,rest,client,sslengine,factory,config,fail,exception,expected,catch,illegal,configuration,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTClientSSLMissingTrustStore() throws Exception;1540215410;Tests that REST Client SSL creation fails with bad SSL configuration.;@Test_	public void testRESTClientSSLMissingTrustStore() throws Exception {_		Configuration config = new Configuration()__		config.setBoolean(SecurityOptions.SSL_REST_ENABLED, true)__		config.setString(SecurityOptions.SSL_REST_TRUSTSTORE_PASSWORD, "some password")___		try {_			SSLUtils.createRestClientSSLEngineFactory(config)__			fail("exception expected")__		} catch (IllegalConfigurationException ignored) {}_	};tests,that,rest,client,ssl,creation,fails,with,bad,ssl,configuration;test,public,void,test,restclient,sslmissing,trust,store,throws,exception,configuration,config,new,configuration,config,set,boolean,security,options,true,config,set,string,security,options,some,password,try,sslutils,create,rest,client,sslengine,factory,config,fail,exception,expected,catch,illegal,configuration,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTServerSSL() throws Exception;1531721446;Tests that REST Server SSL Engine is created given a valid SSL configuration.;@Test_	public void testRESTServerSSL() throws Exception {_		Configuration serverConfig = createRestSslConfigWithKeyStore()___		SSLEngineFactory ssl = SSLUtils.createRestServerSSLEngineFactory(serverConfig)__		assertNotNull(ssl)__	};tests,that,rest,server,ssl,engine,is,created,given,a,valid,ssl,configuration;test,public,void,test,restserver,ssl,throws,exception,configuration,server,config,create,rest,ssl,config,with,key,store,sslengine,factory,ssl,sslutils,create,rest,server,sslengine,factory,server,config,assert,not,null,ssl
SSLUtilsTest -> @Test 	public void testRESTServerSSL() throws Exception;1531721446;Tests that REST Server SSL Engine is created given a valid SSL configuration.;@Test_	public void testRESTServerSSL() throws Exception {_		Configuration serverConfig = createRestSslConfigWithKeyStore()___		SSLEngineFactory ssl = SSLUtils.createRestServerSSLEngineFactory(serverConfig)__		assertNotNull(ssl)__	};tests,that,rest,server,ssl,engine,is,created,given,a,valid,ssl,configuration;test,public,void,test,restserver,ssl,throws,exception,configuration,server,config,create,rest,ssl,config,with,key,store,sslengine,factory,ssl,sslutils,create,rest,server,sslengine,factory,server,config,assert,not,null,ssl
SSLUtilsTest -> @Test 	public void testRESTServerSSL() throws Exception;1538485302;Tests that REST Server SSL Engine is created given a valid SSL configuration.;@Test_	public void testRESTServerSSL() throws Exception {_		Configuration serverConfig = createRestSslConfigWithKeyStore()___		SSLEngineFactory ssl = SSLUtils.createRestServerSSLEngineFactory(serverConfig)__		assertNotNull(ssl)__	};tests,that,rest,server,ssl,engine,is,created,given,a,valid,ssl,configuration;test,public,void,test,restserver,ssl,throws,exception,configuration,server,config,create,rest,ssl,config,with,key,store,sslengine,factory,ssl,sslutils,create,rest,server,sslengine,factory,server,config,assert,not,null,ssl
SSLUtilsTest -> @Test 	public void testRESTServerSSL() throws Exception;1540215410;Tests that REST Server SSL Engine is created given a valid SSL configuration.;@Test_	public void testRESTServerSSL() throws Exception {_		Configuration serverConfig = createRestSslConfigWithKeyStore()___		SSLHandlerFactory ssl = SSLUtils.createRestServerSSLEngineFactory(serverConfig)__		assertNotNull(ssl)__	};tests,that,rest,server,ssl,engine,is,created,given,a,valid,ssl,configuration;test,public,void,test,restserver,ssl,throws,exception,configuration,server,config,create,rest,ssl,config,with,key,store,sslhandler,factory,ssl,sslutils,create,rest,server,sslengine,factory,server,config,assert,not,null,ssl
SSLUtilsTest -> @Test 	public void testCreateSSLServerContext() throws Exception;1476696544;Tests if SSL Server Context is created given a valid SSL configuration;@Test_	public void testCreateSSLServerContext() throws Exception {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__		serverConfig.setString(ConfigConstants.SECURITY_SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(ConfigConstants.SECURITY_SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(ConfigConstants.SECURITY_SSL_KEY_PASSWORD, "password")___		SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__		Assert.assertNotNull(serverContext)__	};tests,if,ssl,server,context,is,created,given,a,valid,ssl,configuration;test,public,void,test,create,sslserver,context,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,config,constants,true,server,config,set,string,config,constants,src,test,resources,local127,keystore,server,config,set,string,config,constants,password,server,config,set,string,config,constants,password,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,assert,not,null,server,context
SSLUtilsTest -> @Test 	public void testCreateSSLServerContext() throws Exception;1489748538;Tests if SSL Server Context is created given a valid SSL configuration;@Test_	public void testCreateSSLServerContext() throws Exception {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__		serverConfig.setString(ConfigConstants.SECURITY_SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(ConfigConstants.SECURITY_SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(ConfigConstants.SECURITY_SSL_KEY_PASSWORD, "password")___		SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__		Assert.assertNotNull(serverContext)__	};tests,if,ssl,server,context,is,created,given,a,valid,ssl,configuration;test,public,void,test,create,sslserver,context,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,config,constants,true,server,config,set,string,config,constants,src,test,resources,local127,keystore,server,config,set,string,config,constants,password,server,config,set,string,config,constants,password,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,assert,not,null,server,context
SSLUtilsTest -> @Test 	public void testCreateSSLServerContext() throws Exception;1498894422;Tests if SSL Server Context is created given a valid SSL configuration;@Test_	public void testCreateSSLServerContext() throws Exception {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")___		SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__		Assert.assertNotNull(serverContext)__	};tests,if,ssl,server,context,is,created,given,a,valid,ssl,configuration;test,public,void,test,create,sslserver,context,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,security,options,true,server,config,set,string,security,options,src,test,resources,local127,keystore,server,config,set,string,security,options,password,server,config,set,string,security,options,password,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,assert,not,null,server,context
SSLUtilsTest -> @Test 	public void testCreateSSLServerContext() throws Exception;1499164413;Tests if SSL Server Context is created given a valid SSL configuration.;@Test_	public void testCreateSSLServerContext() throws Exception {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")___		SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__		Assert.assertNotNull(serverContext)__	};tests,if,ssl,server,context,is,created,given,a,valid,ssl,configuration;test,public,void,test,create,sslserver,context,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,security,options,true,server,config,set,string,security,options,src,test,resources,local127,keystore,server,config,set,string,security,options,password,server,config,set,string,security,options,password,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,assert,not,null,server,context
SSLUtilsTest -> @Test 	public void testCreateSSLServerContext() throws Exception;1525904579;Tests if SSL Server Context is created given a valid SSL configuration.;@Test_	public void testCreateSSLServerContext() throws Exception {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")___		SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__		Assert.assertNotNull(serverContext)__	};tests,if,ssl,server,context,is,created,given,a,valid,ssl,configuration;test,public,void,test,create,sslserver,context,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,security,options,true,server,config,set,string,security,options,src,test,resources,local127,keystore,server,config,set,string,security,options,password,server,config,set,string,security,options,password,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,assert,not,null,server,context
SSLUtilsTest -> @Test 	public void testCreateSSLServerContext() throws Exception;1531721446;Tests if SSL Server Context is created given a valid SSL configuration.;@Test_	public void testCreateSSLServerContext() throws Exception {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")___		SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__		Assert.assertNotNull(serverContext)__	};tests,if,ssl,server,context,is,created,given,a,valid,ssl,configuration;test,public,void,test,create,sslserver,context,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,security,options,true,server,config,set,string,security,options,src,test,resources,local127,keystore,server,config,set,string,security,options,password,server,config,set,string,security,options,password,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,assert,not,null,server,context
SSLUtilsTest -> @Test 	public void testCreateSSLServerContextMisconfiguration();1476696544;Tests if SSL Server Context creation fails with bad SSL configuration;@Test_	public void testCreateSSLServerContextMisconfiguration() {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__		serverConfig.setString(ConfigConstants.SECURITY_SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(ConfigConstants.SECURITY_SSL_KEYSTORE_PASSWORD, "badpassword")__		serverConfig.setString(ConfigConstants.SECURITY_SSL_KEY_PASSWORD, "badpassword")___		try {_			SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__			Assert.fail("SSL server context created even with bad SSL configuration ")__		} catch (Exception e) {_			_		}_	};tests,if,ssl,server,context,creation,fails,with,bad,ssl,configuration;test,public,void,test,create,sslserver,context,misconfiguration,configuration,server,config,new,configuration,server,config,set,boolean,config,constants,true,server,config,set,string,config,constants,src,test,resources,local127,keystore,server,config,set,string,config,constants,badpassword,server,config,set,string,config,constants,badpassword,try,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,fail,ssl,server,context,created,even,with,bad,ssl,configuration,catch,exception,e
SSLUtilsTest -> @Test 	public void testCreateSSLServerContextMisconfiguration();1489748538;Tests if SSL Server Context creation fails with bad SSL configuration;@Test_	public void testCreateSSLServerContextMisconfiguration() {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__		serverConfig.setString(ConfigConstants.SECURITY_SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(ConfigConstants.SECURITY_SSL_KEYSTORE_PASSWORD, "badpassword")__		serverConfig.setString(ConfigConstants.SECURITY_SSL_KEY_PASSWORD, "badpassword")___		try {_			SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__			Assert.fail("SSL server context created even with bad SSL configuration ")__		} catch (Exception e) {_			_		}_	};tests,if,ssl,server,context,creation,fails,with,bad,ssl,configuration;test,public,void,test,create,sslserver,context,misconfiguration,configuration,server,config,new,configuration,server,config,set,boolean,config,constants,true,server,config,set,string,config,constants,src,test,resources,local127,keystore,server,config,set,string,config,constants,badpassword,server,config,set,string,config,constants,badpassword,try,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,fail,ssl,server,context,created,even,with,bad,ssl,configuration,catch,exception,e
SSLUtilsTest -> @Test 	public void testCreateSSLServerContextMisconfiguration();1498894422;Tests if SSL Server Context creation fails with bad SSL configuration;@Test_	public void testCreateSSLServerContextMisconfiguration() {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "badpassword")__		serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, "badpassword")___		try {_			SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__			Assert.fail("SSL server context created even with bad SSL configuration ")__		} catch (Exception e) {_			_		}_	};tests,if,ssl,server,context,creation,fails,with,bad,ssl,configuration;test,public,void,test,create,sslserver,context,misconfiguration,configuration,server,config,new,configuration,server,config,set,boolean,security,options,true,server,config,set,string,security,options,src,test,resources,local127,keystore,server,config,set,string,security,options,badpassword,server,config,set,string,security,options,badpassword,try,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,fail,ssl,server,context,created,even,with,bad,ssl,configuration,catch,exception,e
SSLUtilsTest -> @Test 	public void testCreateSSLServerContextMisconfiguration();1499164413;Tests if SSL Server Context creation fails with bad SSL configuration.;@Test_	public void testCreateSSLServerContextMisconfiguration() {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "badpassword")__		serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, "badpassword")___		try {_			SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__			Assert.fail("SSL server context created even with bad SSL configuration ")__		} catch (Exception e) {_			_		}_	};tests,if,ssl,server,context,creation,fails,with,bad,ssl,configuration;test,public,void,test,create,sslserver,context,misconfiguration,configuration,server,config,new,configuration,server,config,set,boolean,security,options,true,server,config,set,string,security,options,src,test,resources,local127,keystore,server,config,set,string,security,options,badpassword,server,config,set,string,security,options,badpassword,try,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,fail,ssl,server,context,created,even,with,bad,ssl,configuration,catch,exception,e
SSLUtilsTest -> @Test 	public void testCreateSSLServerContextMisconfiguration();1525904579;Tests if SSL Server Context creation fails with bad SSL configuration.;@Test_	public void testCreateSSLServerContextMisconfiguration() {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "badpassword")__		serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, "badpassword")___		try {_			SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__			Assert.fail("SSL server context created even with bad SSL configuration ")__		} catch (Exception e) {_			_		}_	};tests,if,ssl,server,context,creation,fails,with,bad,ssl,configuration;test,public,void,test,create,sslserver,context,misconfiguration,configuration,server,config,new,configuration,server,config,set,boolean,security,options,true,server,config,set,string,security,options,src,test,resources,local127,keystore,server,config,set,string,security,options,badpassword,server,config,set,string,security,options,badpassword,try,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,fail,ssl,server,context,created,even,with,bad,ssl,configuration,catch,exception,e
SSLUtilsTest -> @Test 	public void testCreateSSLServerContextMisconfiguration();1531721446;Tests if SSL Server Context creation fails with bad SSL configuration.;@Test_	public void testCreateSSLServerContextMisconfiguration() {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "badpassword")__		serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, "badpassword")___		try {_			SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__			Assert.fail("SSL server context created even with bad SSL configuration ")__		} catch (Exception e) {_			_		}_	};tests,if,ssl,server,context,creation,fails,with,bad,ssl,configuration;test,public,void,test,create,sslserver,context,misconfiguration,configuration,server,config,new,configuration,server,config,set,boolean,security,options,true,server,config,set,string,security,options,src,test,resources,local127,keystore,server,config,set,string,security,options,badpassword,server,config,set,string,security,options,badpassword,try,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,fail,ssl,server,context,created,even,with,bad,ssl,configuration,catch,exception,e
SSLUtilsTest -> @Test 	public void testRESTServerSSLDisabled() throws Exception;1531721446;Tests that REST Server SSL Engine is not created if SSL is disabled.;@Test_	public void testRESTServerSSLDisabled() throws Exception {_		Configuration serverConfig = createRestSslConfigWithKeyStore()__		serverConfig.setBoolean(SecurityOptions.SSL_REST_ENABLED, false)___		try {_			SSLUtils.createRestServerSSLEngineFactory(serverConfig)__			fail("exception expected")__		} catch (IllegalConfigurationException ignored) {}_	};tests,that,rest,server,ssl,engine,is,not,created,if,ssl,is,disabled;test,public,void,test,restserver,ssldisabled,throws,exception,configuration,server,config,create,rest,ssl,config,with,key,store,server,config,set,boolean,security,options,false,try,sslutils,create,rest,server,sslengine,factory,server,config,fail,exception,expected,catch,illegal,configuration,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTServerSSLDisabled() throws Exception;1531721446;Tests that REST Server SSL Engine is not created if SSL is disabled.;@Test_	public void testRESTServerSSLDisabled() throws Exception {_		Configuration serverConfig = createRestSslConfigWithKeyStore()__		serverConfig.setBoolean(SecurityOptions.SSL_REST_ENABLED, false)___		try {_			SSLUtils.createRestServerSSLEngineFactory(serverConfig)__			fail("exception expected")__		} catch (IllegalConfigurationException ignored) {}_	};tests,that,rest,server,ssl,engine,is,not,created,if,ssl,is,disabled;test,public,void,test,restserver,ssldisabled,throws,exception,configuration,server,config,create,rest,ssl,config,with,key,store,server,config,set,boolean,security,options,false,try,sslutils,create,rest,server,sslengine,factory,server,config,fail,exception,expected,catch,illegal,configuration,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTServerSSLDisabled() throws Exception;1538485302;Tests that REST Server SSL Engine is not created if SSL is disabled.;@Test_	public void testRESTServerSSLDisabled() throws Exception {_		Configuration serverConfig = createRestSslConfigWithKeyStore()__		serverConfig.setBoolean(SecurityOptions.SSL_REST_ENABLED, false)___		try {_			SSLUtils.createRestServerSSLEngineFactory(serverConfig)__			fail("exception expected")__		} catch (IllegalConfigurationException ignored) {}_	};tests,that,rest,server,ssl,engine,is,not,created,if,ssl,is,disabled;test,public,void,test,restserver,ssldisabled,throws,exception,configuration,server,config,create,rest,ssl,config,with,key,store,server,config,set,boolean,security,options,false,try,sslutils,create,rest,server,sslengine,factory,server,config,fail,exception,expected,catch,illegal,configuration,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTServerSSLDisabled() throws Exception;1540215410;Tests that REST Server SSL Engine is not created if SSL is disabled.;@Test_	public void testRESTServerSSLDisabled() throws Exception {_		Configuration serverConfig = createRestSslConfigWithKeyStore()__		serverConfig.setBoolean(SecurityOptions.SSL_REST_ENABLED, false)___		try {_			SSLUtils.createRestServerSSLEngineFactory(serverConfig)__			fail("exception expected")__		} catch (IllegalConfigurationException ignored) {}_	};tests,that,rest,server,ssl,engine,is,not,created,if,ssl,is,disabled;test,public,void,test,restserver,ssldisabled,throws,exception,configuration,server,config,create,rest,ssl,config,with,key,store,server,config,set,boolean,security,options,false,try,sslutils,create,rest,server,sslengine,factory,server,config,fail,exception,expected,catch,illegal,configuration,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTClientSSLWrongPassword() throws Exception;1531721446;Tests that REST Client SSL creation fails with bad SSL configuration.;@Test_	public void testRESTClientSSLWrongPassword() throws Exception {_		Configuration clientConfig = createRestSslConfigWithTrustStore()__		clientConfig.setString(SecurityOptions.SSL_REST_TRUSTSTORE_PASSWORD, "badpassword")___		try {_			SSLUtils.createRestClientSSLEngineFactory(clientConfig)__			fail("exception expected")__		} catch (Exception ignored) {}_	};tests,that,rest,client,ssl,creation,fails,with,bad,ssl,configuration;test,public,void,test,restclient,sslwrong,password,throws,exception,configuration,client,config,create,rest,ssl,config,with,trust,store,client,config,set,string,security,options,badpassword,try,sslutils,create,rest,client,sslengine,factory,client,config,fail,exception,expected,catch,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTClientSSLWrongPassword() throws Exception;1531721446;Tests that REST Client SSL creation fails with bad SSL configuration.;@Test_	public void testRESTClientSSLWrongPassword() throws Exception {_		Configuration clientConfig = createRestSslConfigWithTrustStore()__		clientConfig.setString(SecurityOptions.SSL_REST_TRUSTSTORE_PASSWORD, "badpassword")___		try {_			SSLUtils.createRestClientSSLEngineFactory(clientConfig)__			fail("exception expected")__		} catch (Exception ignored) {}_	};tests,that,rest,client,ssl,creation,fails,with,bad,ssl,configuration;test,public,void,test,restclient,sslwrong,password,throws,exception,configuration,client,config,create,rest,ssl,config,with,trust,store,client,config,set,string,security,options,badpassword,try,sslutils,create,rest,client,sslengine,factory,client,config,fail,exception,expected,catch,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTClientSSLWrongPassword() throws Exception;1538485302;Tests that REST Client SSL creation fails with bad SSL configuration.;@Test_	public void testRESTClientSSLWrongPassword() throws Exception {_		Configuration clientConfig = createRestSslConfigWithTrustStore()__		clientConfig.setString(SecurityOptions.SSL_REST_TRUSTSTORE_PASSWORD, "badpassword")___		try {_			SSLUtils.createRestClientSSLEngineFactory(clientConfig)__			fail("exception expected")__		} catch (Exception ignored) {}_	};tests,that,rest,client,ssl,creation,fails,with,bad,ssl,configuration;test,public,void,test,restclient,sslwrong,password,throws,exception,configuration,client,config,create,rest,ssl,config,with,trust,store,client,config,set,string,security,options,badpassword,try,sslutils,create,rest,client,sslengine,factory,client,config,fail,exception,expected,catch,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTClientSSLWrongPassword() throws Exception;1540215410;Tests that REST Client SSL creation fails with bad SSL configuration.;@Test_	public void testRESTClientSSLWrongPassword() throws Exception {_		Configuration clientConfig = createRestSslConfigWithTrustStore()__		clientConfig.setString(SecurityOptions.SSL_REST_TRUSTSTORE_PASSWORD, "badpassword")___		try {_			SSLUtils.createRestClientSSLEngineFactory(clientConfig)__			fail("exception expected")__		} catch (Exception ignored) {}_	};tests,that,rest,client,ssl,creation,fails,with,bad,ssl,configuration;test,public,void,test,restclient,sslwrong,password,throws,exception,configuration,client,config,create,rest,ssl,config,with,trust,store,client,config,set,string,security,options,badpassword,try,sslutils,create,rest,client,sslengine,factory,client,config,fail,exception,expected,catch,exception,ignored
SSLUtilsTest -> @Test 	public void testCreateSSLEngineFactory() throws Exception;1525904579;Tests that {@link SSLEngineFactory} is created correctly.;@Test_	public void testCreateSSLEngineFactory() throws Exception {_		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_PROTOCOL, "TLSv1")__		serverConfig.setString(SecurityOptions.SSL_ALGORITHMS, "TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256")___		final SSLEngineFactory serverSSLEngineFactory = SSLUtils.createServerSSLEngineFactory(serverConfig)__		final SSLEngine sslEngine = serverSSLEngineFactory.createSSLEngine()___		assertThat(_			Arrays.asList(sslEngine.getEnabledProtocols()),_			contains("TLSv1"))__		assertThat(_			Arrays.asList(sslEngine.getEnabledCipherSuites()),_			containsInAnyOrder("TLS_DHE_RSA_WITH_AES_128_CBC_SHA", "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256"))__	};tests,that,link,sslengine,factory,is,created,correctly;test,public,void,test,create,sslengine,factory,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,security,options,true,server,config,set,string,security,options,src,test,resources,local127,keystore,server,config,set,string,security,options,password,server,config,set,string,security,options,password,server,config,set,string,security,options,tlsv1,server,config,set,string,security,options,final,sslengine,factory,server,sslengine,factory,sslutils,create,server,sslengine,factory,server,config,final,sslengine,ssl,engine,server,sslengine,factory,create,sslengine,assert,that,arrays,as,list,ssl,engine,get,enabled,protocols,contains,tlsv1,assert,that,arrays,as,list,ssl,engine,get,enabled,cipher,suites,contains,in,any,order
SSLUtilsTest -> @Test 	public void testCreateSSLEngineFactory() throws Exception;1531721446;Tests that {@link SSLEngineFactory} is created correctly.;@Test_	public void testCreateSSLEngineFactory() throws Exception {_		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		serverConfig.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")__		serverConfig.setString(SecurityOptions.SSL_PROTOCOL, "TLSv1")__		serverConfig.setString(SecurityOptions.SSL_ALGORITHMS, "TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256")___		final SSLEngineFactory serverSSLEngineFactory = SSLUtils.createServerSSLEngineFactory(serverConfig)__		final SSLEngine sslEngine = serverSSLEngineFactory.createSSLEngine()___		assertThat(_			Arrays.asList(sslEngine.getEnabledProtocols()),_			contains("TLSv1"))__		assertThat(_			Arrays.asList(sslEngine.getEnabledCipherSuites()),_			containsInAnyOrder("TLS_DHE_RSA_WITH_AES_128_CBC_SHA", "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256"))__	};tests,that,link,sslengine,factory,is,created,correctly;test,public,void,test,create,sslengine,factory,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,security,options,true,server,config,set,string,security,options,src,test,resources,local127,keystore,server,config,set,string,security,options,password,server,config,set,string,security,options,password,server,config,set,string,security,options,tlsv1,server,config,set,string,security,options,final,sslengine,factory,server,sslengine,factory,sslutils,create,server,sslengine,factory,server,config,final,sslengine,ssl,engine,server,sslengine,factory,create,sslengine,assert,that,arrays,as,list,ssl,engine,get,enabled,protocols,contains,tlsv1,assert,that,arrays,as,list,ssl,engine,get,enabled,cipher,suites,contains,in,any,order
SSLUtilsTest -> @Test 	public void testCreateSSLEngineFactory() throws Exception;1531721446;Tests that {@link SSLEngineFactory} is created correctly.;@Test_	public void testCreateSSLEngineFactory() throws Exception {_		Configuration serverConfig = createInternalSslConfigWithKeyAndTrustStores()___		_		serverConfig.setString(SecurityOptions.SSL_PROTOCOL, "TLSv1")__		serverConfig.setString(SecurityOptions.SSL_ALGORITHMS, "TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256")___		final SSLEngineFactory serverSSLEngineFactory = SSLUtils.createInternalServerSSLEngineFactory(serverConfig)__		final SSLEngine sslEngine = serverSSLEngineFactory.createSSLEngine()___		assertEquals(1, sslEngine.getEnabledProtocols().length)__		assertEquals("TLSv1", sslEngine.getEnabledProtocols()[0])___		assertEquals(2, sslEngine.getEnabledCipherSuites().length)__		assertThat(sslEngine.getEnabledCipherSuites(), arrayContainingInAnyOrder(_				"TLS_DHE_RSA_WITH_AES_128_CBC_SHA", "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256"))__	};tests,that,link,sslengine,factory,is,created,correctly;test,public,void,test,create,sslengine,factory,throws,exception,configuration,server,config,create,internal,ssl,config,with,key,and,trust,stores,server,config,set,string,security,options,tlsv1,server,config,set,string,security,options,final,sslengine,factory,server,sslengine,factory,sslutils,create,internal,server,sslengine,factory,server,config,final,sslengine,ssl,engine,server,sslengine,factory,create,sslengine,assert,equals,1,ssl,engine,get,enabled,protocols,length,assert,equals,tlsv1,ssl,engine,get,enabled,protocols,0,assert,equals,2,ssl,engine,get,enabled,cipher,suites,length,assert,that,ssl,engine,get,enabled,cipher,suites,array,containing,in,any,order
SSLUtilsTest -> @Test 	public void testCreateSSLEngineFactory() throws Exception;1531721446;Tests that {@link SSLEngineFactory} is created correctly.;@Test_	public void testCreateSSLEngineFactory() throws Exception {_		Configuration serverConfig = createInternalSslConfigWithKeyAndTrustStores()___		_		serverConfig.setString(SecurityOptions.SSL_PROTOCOL, "TLSv1")__		serverConfig.setString(SecurityOptions.SSL_ALGORITHMS, "TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256")___		final SSLEngineFactory serverSSLEngineFactory = SSLUtils.createInternalServerSSLEngineFactory(serverConfig)__		final SSLEngine sslEngine = serverSSLEngineFactory.createSSLEngine()___		assertEquals(1, sslEngine.getEnabledProtocols().length)__		assertEquals("TLSv1", sslEngine.getEnabledProtocols()[0])___		assertEquals(2, sslEngine.getEnabledCipherSuites().length)__		assertThat(sslEngine.getEnabledCipherSuites(), arrayContainingInAnyOrder(_				"TLS_DHE_RSA_WITH_AES_128_CBC_SHA", "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256"))__	};tests,that,link,sslengine,factory,is,created,correctly;test,public,void,test,create,sslengine,factory,throws,exception,configuration,server,config,create,internal,ssl,config,with,key,and,trust,stores,server,config,set,string,security,options,tlsv1,server,config,set,string,security,options,final,sslengine,factory,server,sslengine,factory,sslutils,create,internal,server,sslengine,factory,server,config,final,sslengine,ssl,engine,server,sslengine,factory,create,sslengine,assert,equals,1,ssl,engine,get,enabled,protocols,length,assert,equals,tlsv1,ssl,engine,get,enabled,protocols,0,assert,equals,2,ssl,engine,get,enabled,cipher,suites,length,assert,that,ssl,engine,get,enabled,cipher,suites,array,containing,in,any,order
SSLUtilsTest -> @Test 	public void testCreateSSLEngineFactory() throws Exception;1538485302;Tests that {@link SSLEngineFactory} is created correctly.;@Test_	public void testCreateSSLEngineFactory() throws Exception {_		Configuration serverConfig = createInternalSslConfigWithKeyAndTrustStores()___		_		serverConfig.setString(SecurityOptions.SSL_PROTOCOL, "TLSv1")__		serverConfig.setString(SecurityOptions.SSL_ALGORITHMS, "TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256")___		final SSLEngineFactory serverSSLEngineFactory = SSLUtils.createInternalServerSSLEngineFactory(serverConfig)__		final SSLEngine sslEngine = serverSSLEngineFactory.createSSLEngine()___		assertEquals(1, sslEngine.getEnabledProtocols().length)__		assertEquals("TLSv1", sslEngine.getEnabledProtocols()[0])___		assertEquals(2, sslEngine.getEnabledCipherSuites().length)__		assertThat(sslEngine.getEnabledCipherSuites(), arrayContainingInAnyOrder(_				"TLS_DHE_RSA_WITH_AES_128_CBC_SHA", "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256"))__	};tests,that,link,sslengine,factory,is,created,correctly;test,public,void,test,create,sslengine,factory,throws,exception,configuration,server,config,create,internal,ssl,config,with,key,and,trust,stores,server,config,set,string,security,options,tlsv1,server,config,set,string,security,options,final,sslengine,factory,server,sslengine,factory,sslutils,create,internal,server,sslengine,factory,server,config,final,sslengine,ssl,engine,server,sslengine,factory,create,sslengine,assert,equals,1,ssl,engine,get,enabled,protocols,length,assert,equals,tlsv1,ssl,engine,get,enabled,protocols,0,assert,equals,2,ssl,engine,get,enabled,cipher,suites,length,assert,that,ssl,engine,get,enabled,cipher,suites,array,containing,in,any,order
SSLUtilsTest -> @Test 	public void testCreateSSLEngineFactory() throws Exception;1540215410;Tests that {@link SSLHandlerFactory} is created correctly.;@Test_	public void testCreateSSLEngineFactory() throws Exception {_		Configuration serverConfig = createInternalSslConfigWithKeyAndTrustStores()___		_		serverConfig.setString(SecurityOptions.SSL_PROTOCOL, "TLSv1")__		serverConfig.setString(SecurityOptions.SSL_ALGORITHMS, "TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256")___		final SSLHandlerFactory serverSSLHandlerFactory = SSLUtils.createInternalServerSSLEngineFactory(serverConfig)__		final SslHandler sslHandler = serverSSLHandlerFactory.createNettySSLHandler()___		assertEquals(1, sslHandler.engine().getEnabledProtocols().length)__		assertEquals("TLSv1", sslHandler.engine().getEnabledProtocols()[0])___		assertEquals(2, sslHandler.engine().getEnabledCipherSuites().length)__		assertThat(sslHandler.engine().getEnabledCipherSuites(), arrayContainingInAnyOrder(_				"TLS_DHE_RSA_WITH_AES_128_CBC_SHA", "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256"))__	};tests,that,link,sslhandler,factory,is,created,correctly;test,public,void,test,create,sslengine,factory,throws,exception,configuration,server,config,create,internal,ssl,config,with,key,and,trust,stores,server,config,set,string,security,options,tlsv1,server,config,set,string,security,options,final,sslhandler,factory,server,sslhandler,factory,sslutils,create,internal,server,sslengine,factory,server,config,final,ssl,handler,ssl,handler,server,sslhandler,factory,create,netty,sslhandler,assert,equals,1,ssl,handler,engine,get,enabled,protocols,length,assert,equals,tlsv1,ssl,handler,engine,get,enabled,protocols,0,assert,equals,2,ssl,handler,engine,get,enabled,cipher,suites,length,assert,that,ssl,handler,engine,get,enabled,cipher,suites,array,containing,in,any,order
SSLUtilsTest -> @Test 	public void testRESTServerSSLBadKeystorePassword();1531721446;Tests that REST Server SSL Engine creation fails with bad SSL configuration.;@Test_	public void testRESTServerSSLBadKeystorePassword() {_		Configuration serverConfig = createRestSslConfigWithKeyStore()__		serverConfig.setString(SecurityOptions.SSL_REST_KEYSTORE_PASSWORD, "badpassword")___		try {_			SSLUtils.createRestServerSSLEngineFactory(serverConfig)__			fail("exception expected")__		} catch (Exception ignored) {}_	};tests,that,rest,server,ssl,engine,creation,fails,with,bad,ssl,configuration;test,public,void,test,restserver,sslbad,keystore,password,configuration,server,config,create,rest,ssl,config,with,key,store,server,config,set,string,security,options,badpassword,try,sslutils,create,rest,server,sslengine,factory,server,config,fail,exception,expected,catch,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTServerSSLBadKeystorePassword();1531721446;Tests that REST Server SSL Engine creation fails with bad SSL configuration.;@Test_	public void testRESTServerSSLBadKeystorePassword() {_		Configuration serverConfig = createRestSslConfigWithKeyStore()__		serverConfig.setString(SecurityOptions.SSL_REST_KEYSTORE_PASSWORD, "badpassword")___		try {_			SSLUtils.createRestServerSSLEngineFactory(serverConfig)__			fail("exception expected")__		} catch (Exception ignored) {}_	};tests,that,rest,server,ssl,engine,creation,fails,with,bad,ssl,configuration;test,public,void,test,restserver,sslbad,keystore,password,configuration,server,config,create,rest,ssl,config,with,key,store,server,config,set,string,security,options,badpassword,try,sslutils,create,rest,server,sslengine,factory,server,config,fail,exception,expected,catch,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTServerSSLBadKeystorePassword();1538485302;Tests that REST Server SSL Engine creation fails with bad SSL configuration.;@Test_	public void testRESTServerSSLBadKeystorePassword() {_		Configuration serverConfig = createRestSslConfigWithKeyStore()__		serverConfig.setString(SecurityOptions.SSL_REST_KEYSTORE_PASSWORD, "badpassword")___		try {_			SSLUtils.createRestServerSSLEngineFactory(serverConfig)__			fail("exception expected")__		} catch (Exception ignored) {}_	};tests,that,rest,server,ssl,engine,creation,fails,with,bad,ssl,configuration;test,public,void,test,restserver,sslbad,keystore,password,configuration,server,config,create,rest,ssl,config,with,key,store,server,config,set,string,security,options,badpassword,try,sslutils,create,rest,server,sslengine,factory,server,config,fail,exception,expected,catch,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTServerSSLBadKeystorePassword();1540215410;Tests that REST Server SSL Engine creation fails with bad SSL configuration.;@Test_	public void testRESTServerSSLBadKeystorePassword() {_		Configuration serverConfig = createRestSslConfigWithKeyStore()__		serverConfig.setString(SecurityOptions.SSL_REST_KEYSTORE_PASSWORD, "badpassword")___		try {_			SSLUtils.createRestServerSSLEngineFactory(serverConfig)__			fail("exception expected")__		} catch (Exception ignored) {}_	};tests,that,rest,server,ssl,engine,creation,fails,with,bad,ssl,configuration;test,public,void,test,restserver,sslbad,keystore,password,configuration,server,config,create,rest,ssl,config,with,key,store,server,config,set,string,security,options,badpassword,try,sslutils,create,rest,server,sslengine,factory,server,config,fail,exception,expected,catch,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTClientSSLMissingPassword() throws Exception;1531721446;Tests that REST Client SSL creation fails with bad SSL configuration.;@Test_	public void testRESTClientSSLMissingPassword() throws Exception {_		Configuration config = new Configuration()__		config.setBoolean(SecurityOptions.SSL_REST_ENABLED, true)__		config.setString(SecurityOptions.SSL_REST_TRUSTSTORE, TRUST_STORE_PATH)___		try {_			SSLUtils.createRestClientSSLEngineFactory(config)__			fail("exception expected")__		} catch (IllegalConfigurationException ignored) {}_	};tests,that,rest,client,ssl,creation,fails,with,bad,ssl,configuration;test,public,void,test,restclient,sslmissing,password,throws,exception,configuration,config,new,configuration,config,set,boolean,security,options,true,config,set,string,security,options,try,sslutils,create,rest,client,sslengine,factory,config,fail,exception,expected,catch,illegal,configuration,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTClientSSLMissingPassword() throws Exception;1531721446;Tests that REST Client SSL creation fails with bad SSL configuration.;@Test_	public void testRESTClientSSLMissingPassword() throws Exception {_		Configuration config = new Configuration()__		config.setBoolean(SecurityOptions.SSL_REST_ENABLED, true)__		config.setString(SecurityOptions.SSL_REST_TRUSTSTORE, TRUST_STORE_PATH)___		try {_			SSLUtils.createRestClientSSLEngineFactory(config)__			fail("exception expected")__		} catch (IllegalConfigurationException ignored) {}_	};tests,that,rest,client,ssl,creation,fails,with,bad,ssl,configuration;test,public,void,test,restclient,sslmissing,password,throws,exception,configuration,config,new,configuration,config,set,boolean,security,options,true,config,set,string,security,options,try,sslutils,create,rest,client,sslengine,factory,config,fail,exception,expected,catch,illegal,configuration,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTClientSSLMissingPassword() throws Exception;1538485302;Tests that REST Client SSL creation fails with bad SSL configuration.;@Test_	public void testRESTClientSSLMissingPassword() throws Exception {_		Configuration config = new Configuration()__		config.setBoolean(SecurityOptions.SSL_REST_ENABLED, true)__		config.setString(SecurityOptions.SSL_REST_TRUSTSTORE, TRUST_STORE_PATH)___		try {_			SSLUtils.createRestClientSSLEngineFactory(config)__			fail("exception expected")__		} catch (IllegalConfigurationException ignored) {}_	};tests,that,rest,client,ssl,creation,fails,with,bad,ssl,configuration;test,public,void,test,restclient,sslmissing,password,throws,exception,configuration,config,new,configuration,config,set,boolean,security,options,true,config,set,string,security,options,try,sslutils,create,rest,client,sslengine,factory,config,fail,exception,expected,catch,illegal,configuration,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTClientSSLMissingPassword() throws Exception;1540215410;Tests that REST Client SSL creation fails with bad SSL configuration.;@Test_	public void testRESTClientSSLMissingPassword() throws Exception {_		Configuration config = new Configuration()__		config.setBoolean(SecurityOptions.SSL_REST_ENABLED, true)__		config.setString(SecurityOptions.SSL_REST_TRUSTSTORE, TRUST_STORE_PATH)___		try {_			SSLUtils.createRestClientSSLEngineFactory(config)__			fail("exception expected")__		} catch (IllegalConfigurationException ignored) {}_	};tests,that,rest,client,ssl,creation,fails,with,bad,ssl,configuration;test,public,void,test,restclient,sslmissing,password,throws,exception,configuration,config,new,configuration,config,set,boolean,security,options,true,config,set,string,security,options,try,sslutils,create,rest,client,sslengine,factory,config,fail,exception,expected,catch,illegal,configuration,exception,ignored
SSLUtilsTest -> @Test 	public void checkEnableRestSSLAuthentication();1538485302;Tests whether activation of REST mutual SSL authentication evaluates the config flags correctly.;@Test_	public void checkEnableRestSSLAuthentication() {_		_		Configuration noSSLOptions = new Configuration()__		noSSLOptions.setBoolean(SecurityOptions.SSL_REST_ENABLED, false)__		noSSLOptions.setBoolean(SecurityOptions.SSL_REST_AUTHENTICATION_ENABLED, true)__		assertFalse(SSLUtils.isRestSSLAuthenticationEnabled(noSSLOptions))___		_		Configuration defaultOptions = new Configuration()__		defaultOptions.setBoolean(SecurityOptions.SSL_REST_ENABLED, true)__		assertFalse(SSLUtils.isRestSSLAuthenticationEnabled(defaultOptions))___		Configuration options = new Configuration()__		noSSLOptions.setBoolean(SecurityOptions.SSL_REST_ENABLED, true)__		noSSLOptions.setBoolean(SecurityOptions.SSL_REST_AUTHENTICATION_ENABLED, true)__		assertTrue(SSLUtils.isRestSSLAuthenticationEnabled(noSSLOptions))__	};tests,whether,activation,of,rest,mutual,ssl,authentication,evaluates,the,config,flags,correctly;test,public,void,check,enable,rest,sslauthentication,configuration,no,ssloptions,new,configuration,no,ssloptions,set,boolean,security,options,false,no,ssloptions,set,boolean,security,options,true,assert,false,sslutils,is,rest,sslauthentication,enabled,no,ssloptions,configuration,default,options,new,configuration,default,options,set,boolean,security,options,true,assert,false,sslutils,is,rest,sslauthentication,enabled,default,options,configuration,options,new,configuration,no,ssloptions,set,boolean,security,options,true,no,ssloptions,set,boolean,security,options,true,assert,true,sslutils,is,rest,sslauthentication,enabled,no,ssloptions
SSLUtilsTest -> @Test 	public void checkEnableRestSSLAuthentication();1540215410;Tests whether activation of REST mutual SSL authentication evaluates the config flags correctly.;@Test_	public void checkEnableRestSSLAuthentication() {_		_		Configuration noSSLOptions = new Configuration()__		noSSLOptions.setBoolean(SecurityOptions.SSL_REST_ENABLED, false)__		noSSLOptions.setBoolean(SecurityOptions.SSL_REST_AUTHENTICATION_ENABLED, true)__		assertFalse(SSLUtils.isRestSSLAuthenticationEnabled(noSSLOptions))___		_		Configuration defaultOptions = new Configuration()__		defaultOptions.setBoolean(SecurityOptions.SSL_REST_ENABLED, true)__		assertFalse(SSLUtils.isRestSSLAuthenticationEnabled(defaultOptions))___		Configuration options = new Configuration()__		noSSLOptions.setBoolean(SecurityOptions.SSL_REST_ENABLED, true)__		noSSLOptions.setBoolean(SecurityOptions.SSL_REST_AUTHENTICATION_ENABLED, true)__		assertTrue(SSLUtils.isRestSSLAuthenticationEnabled(noSSLOptions))__	};tests,whether,activation,of,rest,mutual,ssl,authentication,evaluates,the,config,flags,correctly;test,public,void,check,enable,rest,sslauthentication,configuration,no,ssloptions,new,configuration,no,ssloptions,set,boolean,security,options,false,no,ssloptions,set,boolean,security,options,true,assert,false,sslutils,is,rest,sslauthentication,enabled,no,ssloptions,configuration,default,options,new,configuration,default,options,set,boolean,security,options,true,assert,false,sslutils,is,rest,sslauthentication,enabled,default,options,configuration,options,new,configuration,no,ssloptions,set,boolean,security,options,true,no,ssloptions,set,boolean,security,options,true,assert,true,sslutils,is,rest,sslauthentication,enabled,no,ssloptions
SSLUtilsTest -> @Test 	public void testCreateSSLServerContextWithSSLDisabled() throws Exception;1476696544;Tests if SSL Server Context is not created if SSL is disabled;@Test_	public void testCreateSSLServerContextWithSSLDisabled() throws Exception {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, false)___		SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__		Assert.assertNull(serverContext)__	};tests,if,ssl,server,context,is,not,created,if,ssl,is,disabled;test,public,void,test,create,sslserver,context,with,ssldisabled,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,config,constants,false,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,assert,null,server,context
SSLUtilsTest -> @Test 	public void testCreateSSLServerContextWithSSLDisabled() throws Exception;1489748538;Tests if SSL Server Context is not created if SSL is disabled;@Test_	public void testCreateSSLServerContextWithSSLDisabled() throws Exception {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, false)___		SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__		Assert.assertNull(serverContext)__	};tests,if,ssl,server,context,is,not,created,if,ssl,is,disabled;test,public,void,test,create,sslserver,context,with,ssldisabled,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,config,constants,false,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,assert,null,server,context
SSLUtilsTest -> @Test 	public void testCreateSSLServerContextWithSSLDisabled() throws Exception;1498894422;Tests if SSL Server Context is not created if SSL is disabled;@Test_	public void testCreateSSLServerContextWithSSLDisabled() throws Exception {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, false)___		SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__		Assert.assertNull(serverContext)__	};tests,if,ssl,server,context,is,not,created,if,ssl,is,disabled;test,public,void,test,create,sslserver,context,with,ssldisabled,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,security,options,false,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,assert,null,server,context
SSLUtilsTest -> @Test 	public void testCreateSSLServerContextWithSSLDisabled() throws Exception;1499164413;Tests if SSL Server Context is not created if SSL is disabled.;@Test_	public void testCreateSSLServerContextWithSSLDisabled() throws Exception {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, false)___		SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__		Assert.assertNull(serverContext)__	};tests,if,ssl,server,context,is,not,created,if,ssl,is,disabled;test,public,void,test,create,sslserver,context,with,ssldisabled,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,security,options,false,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,assert,null,server,context
SSLUtilsTest -> @Test 	public void testCreateSSLServerContextWithSSLDisabled() throws Exception;1525904579;Tests if SSL Server Context is not created if SSL is disabled.;@Test_	public void testCreateSSLServerContextWithSSLDisabled() throws Exception {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, false)___		SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__		Assert.assertNull(serverContext)__	};tests,if,ssl,server,context,is,not,created,if,ssl,is,disabled;test,public,void,test,create,sslserver,context,with,ssldisabled,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,security,options,false,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,assert,null,server,context
SSLUtilsTest -> @Test 	public void testCreateSSLServerContextWithSSLDisabled() throws Exception;1531721446;Tests if SSL Server Context is not created if SSL is disabled.;@Test_	public void testCreateSSLServerContextWithSSLDisabled() throws Exception {__		Configuration serverConfig = new Configuration()__		serverConfig.setBoolean(SecurityOptions.SSL_ENABLED, false)___		SSLContext serverContext = SSLUtils.createSSLServerContext(serverConfig)__		Assert.assertNull(serverContext)__	};tests,if,ssl,server,context,is,not,created,if,ssl,is,disabled;test,public,void,test,create,sslserver,context,with,ssldisabled,throws,exception,configuration,server,config,new,configuration,server,config,set,boolean,security,options,false,sslcontext,server,context,sslutils,create,sslserver,context,server,config,assert,assert,null,server,context
SSLUtilsTest -> @SuppressWarnings("deprecation") 	@Test 	public void checkEnableSSL();1531721446;Tests whether activation of internal / REST SSL evaluates the config flags correctly.;@SuppressWarnings("deprecation")_	@Test_	public void checkEnableSSL() {_		_		Configuration oldConf = new Configuration()__		oldConf.setBoolean(SecurityOptions.SSL_ENABLED, true)__		assertTrue(SSLUtils.isInternalSSLEnabled(oldConf))__		assertTrue(SSLUtils.isRestSSLEnabled(oldConf))___		_		Configuration newOptions = new Configuration()__		newOptions.setBoolean(SecurityOptions.SSL_INTERNAL_ENABLED, true)__		newOptions.setBoolean(SecurityOptions.SSL_REST_ENABLED, false)__		assertTrue(SSLUtils.isInternalSSLEnabled(newOptions))__		assertFalse(SSLUtils.isRestSSLEnabled(newOptions))___		_		Configuration precedence = new Configuration()__		precedence.setBoolean(SecurityOptions.SSL_ENABLED, true)__		precedence.setBoolean(SecurityOptions.SSL_INTERNAL_ENABLED, false)__		precedence.setBoolean(SecurityOptions.SSL_REST_ENABLED, false)__		assertFalse(SSLUtils.isInternalSSLEnabled(precedence))__		assertFalse(SSLUtils.isRestSSLEnabled(precedence))__	};tests,whether,activation,of,internal,rest,ssl,evaluates,the,config,flags,correctly;suppress,warnings,deprecation,test,public,void,check,enable,ssl,configuration,old,conf,new,configuration,old,conf,set,boolean,security,options,true,assert,true,sslutils,is,internal,sslenabled,old,conf,assert,true,sslutils,is,rest,sslenabled,old,conf,configuration,new,options,new,configuration,new,options,set,boolean,security,options,true,new,options,set,boolean,security,options,false,assert,true,sslutils,is,internal,sslenabled,new,options,assert,false,sslutils,is,rest,sslenabled,new,options,configuration,precedence,new,configuration,precedence,set,boolean,security,options,true,precedence,set,boolean,security,options,false,precedence,set,boolean,security,options,false,assert,false,sslutils,is,internal,sslenabled,precedence,assert,false,sslutils,is,rest,sslenabled,precedence
SSLUtilsTest -> @SuppressWarnings("deprecation") 	@Test 	public void checkEnableSSL();1531721446;Tests whether activation of internal / REST SSL evaluates the config flags correctly.;@SuppressWarnings("deprecation")_	@Test_	public void checkEnableSSL() {_		_		Configuration oldConf = new Configuration()__		oldConf.setBoolean(SecurityOptions.SSL_ENABLED, true)__		assertTrue(SSLUtils.isInternalSSLEnabled(oldConf))__		assertTrue(SSLUtils.isRestSSLEnabled(oldConf))___		_		Configuration newOptions = new Configuration()__		newOptions.setBoolean(SecurityOptions.SSL_INTERNAL_ENABLED, true)__		newOptions.setBoolean(SecurityOptions.SSL_REST_ENABLED, false)__		assertTrue(SSLUtils.isInternalSSLEnabled(newOptions))__		assertFalse(SSLUtils.isRestSSLEnabled(newOptions))___		_		Configuration precedence = new Configuration()__		precedence.setBoolean(SecurityOptions.SSL_ENABLED, true)__		precedence.setBoolean(SecurityOptions.SSL_INTERNAL_ENABLED, false)__		precedence.setBoolean(SecurityOptions.SSL_REST_ENABLED, false)__		assertFalse(SSLUtils.isInternalSSLEnabled(precedence))__		assertFalse(SSLUtils.isRestSSLEnabled(precedence))__	};tests,whether,activation,of,internal,rest,ssl,evaluates,the,config,flags,correctly;suppress,warnings,deprecation,test,public,void,check,enable,ssl,configuration,old,conf,new,configuration,old,conf,set,boolean,security,options,true,assert,true,sslutils,is,internal,sslenabled,old,conf,assert,true,sslutils,is,rest,sslenabled,old,conf,configuration,new,options,new,configuration,new,options,set,boolean,security,options,true,new,options,set,boolean,security,options,false,assert,true,sslutils,is,internal,sslenabled,new,options,assert,false,sslutils,is,rest,sslenabled,new,options,configuration,precedence,new,configuration,precedence,set,boolean,security,options,true,precedence,set,boolean,security,options,false,precedence,set,boolean,security,options,false,assert,false,sslutils,is,internal,sslenabled,precedence,assert,false,sslutils,is,rest,sslenabled,precedence
SSLUtilsTest -> @SuppressWarnings("deprecation") 	@Test 	public void checkEnableSSL();1538485302;Tests whether activation of internal / REST SSL evaluates the config flags correctly.;@SuppressWarnings("deprecation")_	@Test_	public void checkEnableSSL() {_		_		Configuration oldConf = new Configuration()__		oldConf.setBoolean(SecurityOptions.SSL_ENABLED, true)__		assertTrue(SSLUtils.isInternalSSLEnabled(oldConf))__		assertTrue(SSLUtils.isRestSSLEnabled(oldConf))___		_		Configuration newOptions = new Configuration()__		newOptions.setBoolean(SecurityOptions.SSL_INTERNAL_ENABLED, true)__		newOptions.setBoolean(SecurityOptions.SSL_REST_ENABLED, false)__		assertTrue(SSLUtils.isInternalSSLEnabled(newOptions))__		assertFalse(SSLUtils.isRestSSLEnabled(newOptions))___		_		Configuration precedence = new Configuration()__		precedence.setBoolean(SecurityOptions.SSL_ENABLED, true)__		precedence.setBoolean(SecurityOptions.SSL_INTERNAL_ENABLED, false)__		precedence.setBoolean(SecurityOptions.SSL_REST_ENABLED, false)__		assertFalse(SSLUtils.isInternalSSLEnabled(precedence))__		assertFalse(SSLUtils.isRestSSLEnabled(precedence))__	};tests,whether,activation,of,internal,rest,ssl,evaluates,the,config,flags,correctly;suppress,warnings,deprecation,test,public,void,check,enable,ssl,configuration,old,conf,new,configuration,old,conf,set,boolean,security,options,true,assert,true,sslutils,is,internal,sslenabled,old,conf,assert,true,sslutils,is,rest,sslenabled,old,conf,configuration,new,options,new,configuration,new,options,set,boolean,security,options,true,new,options,set,boolean,security,options,false,assert,true,sslutils,is,internal,sslenabled,new,options,assert,false,sslutils,is,rest,sslenabled,new,options,configuration,precedence,new,configuration,precedence,set,boolean,security,options,true,precedence,set,boolean,security,options,false,precedence,set,boolean,security,options,false,assert,false,sslutils,is,internal,sslenabled,precedence,assert,false,sslutils,is,rest,sslenabled,precedence
SSLUtilsTest -> @SuppressWarnings("deprecation") 	@Test 	public void checkEnableSSL();1540215410;Tests whether activation of internal / REST SSL evaluates the config flags correctly.;@SuppressWarnings("deprecation")_	@Test_	public void checkEnableSSL() {_		_		Configuration oldConf = new Configuration()__		oldConf.setBoolean(SecurityOptions.SSL_ENABLED, true)__		assertTrue(SSLUtils.isInternalSSLEnabled(oldConf))__		assertTrue(SSLUtils.isRestSSLEnabled(oldConf))___		_		Configuration newOptions = new Configuration()__		newOptions.setBoolean(SecurityOptions.SSL_INTERNAL_ENABLED, true)__		newOptions.setBoolean(SecurityOptions.SSL_REST_ENABLED, false)__		assertTrue(SSLUtils.isInternalSSLEnabled(newOptions))__		assertFalse(SSLUtils.isRestSSLEnabled(newOptions))___		_		Configuration precedence = new Configuration()__		precedence.setBoolean(SecurityOptions.SSL_ENABLED, true)__		precedence.setBoolean(SecurityOptions.SSL_INTERNAL_ENABLED, false)__		precedence.setBoolean(SecurityOptions.SSL_REST_ENABLED, false)__		assertFalse(SSLUtils.isInternalSSLEnabled(precedence))__		assertFalse(SSLUtils.isRestSSLEnabled(precedence))__	};tests,whether,activation,of,internal,rest,ssl,evaluates,the,config,flags,correctly;suppress,warnings,deprecation,test,public,void,check,enable,ssl,configuration,old,conf,new,configuration,old,conf,set,boolean,security,options,true,assert,true,sslutils,is,internal,sslenabled,old,conf,assert,true,sslutils,is,rest,sslenabled,old,conf,configuration,new,options,new,configuration,new,options,set,boolean,security,options,true,new,options,set,boolean,security,options,false,assert,true,sslutils,is,internal,sslenabled,new,options,assert,false,sslutils,is,rest,sslenabled,new,options,configuration,precedence,new,configuration,precedence,set,boolean,security,options,true,precedence,set,boolean,security,options,false,precedence,set,boolean,security,options,false,assert,false,sslutils,is,internal,sslenabled,precedence,assert,false,sslutils,is,rest,sslenabled,precedence
SSLUtilsTest -> @Test 	public void testRESTServerSSLBadKeyPassword();1531721446;Tests that REST Server SSL Engine creation fails with bad SSL configuration.;@Test_	public void testRESTServerSSLBadKeyPassword() {_		Configuration serverConfig = createRestSslConfigWithKeyStore()__		serverConfig.setString(SecurityOptions.SSL_REST_KEY_PASSWORD, "badpassword")___		try {_			SSLUtils.createRestServerSSLEngineFactory(serverConfig)__			fail("exception expected")__		} catch (Exception ignored) {}_	};tests,that,rest,server,ssl,engine,creation,fails,with,bad,ssl,configuration;test,public,void,test,restserver,sslbad,key,password,configuration,server,config,create,rest,ssl,config,with,key,store,server,config,set,string,security,options,badpassword,try,sslutils,create,rest,server,sslengine,factory,server,config,fail,exception,expected,catch,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTServerSSLBadKeyPassword();1531721446;Tests that REST Server SSL Engine creation fails with bad SSL configuration.;@Test_	public void testRESTServerSSLBadKeyPassword() {_		Configuration serverConfig = createRestSslConfigWithKeyStore()__		serverConfig.setString(SecurityOptions.SSL_REST_KEY_PASSWORD, "badpassword")___		try {_			SSLUtils.createRestServerSSLEngineFactory(serverConfig)__			fail("exception expected")__		} catch (Exception ignored) {}_	};tests,that,rest,server,ssl,engine,creation,fails,with,bad,ssl,configuration;test,public,void,test,restserver,sslbad,key,password,configuration,server,config,create,rest,ssl,config,with,key,store,server,config,set,string,security,options,badpassword,try,sslutils,create,rest,server,sslengine,factory,server,config,fail,exception,expected,catch,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTServerSSLBadKeyPassword();1538485302;Tests that REST Server SSL Engine creation fails with bad SSL configuration.;@Test_	public void testRESTServerSSLBadKeyPassword() {_		Configuration serverConfig = createRestSslConfigWithKeyStore()__		serverConfig.setString(SecurityOptions.SSL_REST_KEY_PASSWORD, "badpassword")___		try {_			SSLUtils.createRestServerSSLEngineFactory(serverConfig)__			fail("exception expected")__		} catch (Exception ignored) {}_	};tests,that,rest,server,ssl,engine,creation,fails,with,bad,ssl,configuration;test,public,void,test,restserver,sslbad,key,password,configuration,server,config,create,rest,ssl,config,with,key,store,server,config,set,string,security,options,badpassword,try,sslutils,create,rest,server,sslengine,factory,server,config,fail,exception,expected,catch,exception,ignored
SSLUtilsTest -> @Test 	public void testRESTServerSSLBadKeyPassword();1540215410;Tests that REST Server SSL Engine creation fails with bad SSL configuration.;@Test_	public void testRESTServerSSLBadKeyPassword() {_		Configuration serverConfig = createRestSslConfigWithKeyStore()__		serverConfig.setString(SecurityOptions.SSL_REST_KEY_PASSWORD, "badpassword")___		try {_			SSLUtils.createRestServerSSLEngineFactory(serverConfig)__			fail("exception expected")__		} catch (Exception ignored) {}_	};tests,that,rest,server,ssl,engine,creation,fails,with,bad,ssl,configuration;test,public,void,test,restserver,sslbad,key,password,configuration,server,config,create,rest,ssl,config,with,key,store,server,config,set,string,security,options,badpassword,try,sslutils,create,rest,server,sslengine,factory,server,config,fail,exception,expected,catch,exception,ignored
