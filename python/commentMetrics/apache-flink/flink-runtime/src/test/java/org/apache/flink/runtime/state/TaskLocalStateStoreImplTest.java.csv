# id;timestamp;commentText;codeText;commentWords;codeWords
TaskLocalStateStoreImplTest -> @Test 	public void dispose() throws Exception;1519568061;Tests that disposal of a {@link TaskLocalStateStoreImpl} works and discards all local states.;@Test_	public void dispose() throws Exception {_		final int chkCount = 3__		final int confirmed = chkCount - 1__		List<TaskStateSnapshot> taskStateSnapshots = storeStates(chkCount)__		taskLocalStateStore.confirmCheckpoint(confirmed)__		taskLocalStateStore.dispose()___		checkPrunedAndDiscarded(taskStateSnapshots, 0, chkCount)__	};tests,that,disposal,of,a,link,task,local,state,store,impl,works,and,discards,all,local,states;test,public,void,dispose,throws,exception,final,int,chk,count,3,final,int,confirmed,chk,count,1,list,task,state,snapshot,task,state,snapshots,store,states,chk,count,task,local,state,store,confirm,checkpoint,confirmed,task,local,state,store,dispose,check,pruned,and,discarded,task,state,snapshots,0,chk,count
TaskLocalStateStoreImplTest -> @Test 	public void dispose() throws Exception;1519821266;Tests that disposal of a {@link TaskLocalStateStoreImpl} works and discards all local states.;@Test_	public void dispose() throws Exception {_		final int chkCount = 3__		final int confirmed = chkCount - 1__		List<TaskStateSnapshot> taskStateSnapshots = storeStates(chkCount)__		taskLocalStateStore.confirmCheckpoint(confirmed)__		taskLocalStateStore.dispose()___		checkPrunedAndDiscarded(taskStateSnapshots, 0, chkCount)__	};tests,that,disposal,of,a,link,task,local,state,store,impl,works,and,discards,all,local,states;test,public,void,dispose,throws,exception,final,int,chk,count,3,final,int,confirmed,chk,count,1,list,task,state,snapshot,task,state,snapshots,store,states,chk,count,task,local,state,store,confirm,checkpoint,confirmed,task,local,state,store,dispose,check,pruned,and,discarded,task,state,snapshots,0,chk,count
TaskLocalStateStoreImplTest -> @Test 	public void dispose() throws Exception;1526313052;Tests that disposal of a {@link TaskLocalStateStoreImpl} works and discards all local states.;@Test_	public void dispose() throws Exception {_		final int chkCount = 3__		final int confirmed = chkCount - 1__		List<TaskStateSnapshot> taskStateSnapshots = storeStates(chkCount)__		taskLocalStateStore.confirmCheckpoint(confirmed)__		taskLocalStateStore.dispose()___		checkPrunedAndDiscarded(taskStateSnapshots, 0, chkCount)__	};tests,that,disposal,of,a,link,task,local,state,store,impl,works,and,discards,all,local,states;test,public,void,dispose,throws,exception,final,int,chk,count,3,final,int,confirmed,chk,count,1,list,task,state,snapshot,task,state,snapshots,store,states,chk,count,task,local,state,store,confirm,checkpoint,confirmed,task,local,state,store,dispose,check,pruned,and,discarded,task,state,snapshots,0,chk,count
TaskLocalStateStoreImplTest -> @Test 	public void getLocalRecoveryRootDirectoryProvider();1519568061;Test that the instance delivers a correctly configured LocalRecoveryDirectoryProvider.;@Test_	public void getLocalRecoveryRootDirectoryProvider() {__		LocalRecoveryConfig directoryProvider = taskLocalStateStore.getLocalRecoveryConfig()__		Assert.assertEquals(_			allocationBaseDirs.length,_			directoryProvider.getLocalStateDirectoryProvider().allocationBaseDirsCount())___		for (int i = 0_ i < allocationBaseDirs.length_ ++i) {_			Assert.assertEquals(_				allocationBaseDirs[i],_				directoryProvider.getLocalStateDirectoryProvider().selectAllocationBaseDirectory(i))__		}_	};test,that,the,instance,delivers,a,correctly,configured,local,recovery,directory,provider;test,public,void,get,local,recovery,root,directory,provider,local,recovery,config,directory,provider,task,local,state,store,get,local,recovery,config,assert,assert,equals,allocation,base,dirs,length,directory,provider,get,local,state,directory,provider,allocation,base,dirs,count,for,int,i,0,i,allocation,base,dirs,length,i,assert,assert,equals,allocation,base,dirs,i,directory,provider,get,local,state,directory,provider,select,allocation,base,directory,i
TaskLocalStateStoreImplTest -> @Test 	public void getLocalRecoveryRootDirectoryProvider();1519821266;Test that the instance delivers a correctly configured LocalRecoveryDirectoryProvider.;@Test_	public void getLocalRecoveryRootDirectoryProvider() {__		LocalRecoveryConfig directoryProvider = taskLocalStateStore.getLocalRecoveryConfig()__		Assert.assertEquals(_			allocationBaseDirs.length,_			directoryProvider.getLocalStateDirectoryProvider().allocationBaseDirsCount())___		for (int i = 0_ i < allocationBaseDirs.length_ ++i) {_			Assert.assertEquals(_				allocationBaseDirs[i],_				directoryProvider.getLocalStateDirectoryProvider().selectAllocationBaseDirectory(i))__		}_	};test,that,the,instance,delivers,a,correctly,configured,local,recovery,directory,provider;test,public,void,get,local,recovery,root,directory,provider,local,recovery,config,directory,provider,task,local,state,store,get,local,recovery,config,assert,assert,equals,allocation,base,dirs,length,directory,provider,get,local,state,directory,provider,allocation,base,dirs,count,for,int,i,0,i,allocation,base,dirs,length,i,assert,assert,equals,allocation,base,dirs,i,directory,provider,get,local,state,directory,provider,select,allocation,base,directory,i
TaskLocalStateStoreImplTest -> @Test 	public void getLocalRecoveryRootDirectoryProvider();1526313052;Test that the instance delivers a correctly configured LocalRecoveryDirectoryProvider.;@Test_	public void getLocalRecoveryRootDirectoryProvider() {__		LocalRecoveryConfig directoryProvider = taskLocalStateStore.getLocalRecoveryConfig()__		Assert.assertEquals(_			allocationBaseDirs.length,_			directoryProvider.getLocalStateDirectoryProvider().allocationBaseDirsCount())___		for (int i = 0_ i < allocationBaseDirs.length_ ++i) {_			Assert.assertEquals(_				allocationBaseDirs[i],_				directoryProvider.getLocalStateDirectoryProvider().selectAllocationBaseDirectory(i))__		}_	};test,that,the,instance,delivers,a,correctly,configured,local,recovery,directory,provider;test,public,void,get,local,recovery,root,directory,provider,local,recovery,config,directory,provider,task,local,state,store,get,local,recovery,config,assert,assert,equals,allocation,base,dirs,length,directory,provider,get,local,state,directory,provider,allocation,base,dirs,count,for,int,i,0,i,allocation,base,dirs,length,i,assert,assert,equals,allocation,base,dirs,i,directory,provider,get,local,state,directory,provider,select,allocation,base,directory,i
TaskLocalStateStoreImplTest -> @Test 	public void confirmCheckpoint() throws Exception;1519568061;Tests pruning of previous checkpoints if a new checkpoint is confirmed.;@Test_	public void confirmCheckpoint() throws Exception {__		final int chkCount = 3__		final int confirmed = chkCount - 1__		List<TaskStateSnapshot> taskStateSnapshots = storeStates(chkCount)__		taskLocalStateStore.confirmCheckpoint(confirmed)__		checkPrunedAndDiscarded(taskStateSnapshots, 0, confirmed)__		checkStoredAsExpected(taskStateSnapshots, confirmed, chkCount)__	};tests,pruning,of,previous,checkpoints,if,a,new,checkpoint,is,confirmed;test,public,void,confirm,checkpoint,throws,exception,final,int,chk,count,3,final,int,confirmed,chk,count,1,list,task,state,snapshot,task,state,snapshots,store,states,chk,count,task,local,state,store,confirm,checkpoint,confirmed,check,pruned,and,discarded,task,state,snapshots,0,confirmed,check,stored,as,expected,task,state,snapshots,confirmed,chk,count
TaskLocalStateStoreImplTest -> @Test 	public void confirmCheckpoint() throws Exception;1519821266;Tests pruning of previous checkpoints if a new checkpoint is confirmed.;@Test_	public void confirmCheckpoint() throws Exception {__		final int chkCount = 3__		final int confirmed = chkCount - 1__		List<TaskStateSnapshot> taskStateSnapshots = storeStates(chkCount)__		taskLocalStateStore.confirmCheckpoint(confirmed)__		checkPrunedAndDiscarded(taskStateSnapshots, 0, confirmed)__		checkStoredAsExpected(taskStateSnapshots, confirmed, chkCount)__	};tests,pruning,of,previous,checkpoints,if,a,new,checkpoint,is,confirmed;test,public,void,confirm,checkpoint,throws,exception,final,int,chk,count,3,final,int,confirmed,chk,count,1,list,task,state,snapshot,task,state,snapshots,store,states,chk,count,task,local,state,store,confirm,checkpoint,confirmed,check,pruned,and,discarded,task,state,snapshots,0,confirmed,check,stored,as,expected,task,state,snapshots,confirmed,chk,count
TaskLocalStateStoreImplTest -> @Test 	public void confirmCheckpoint() throws Exception;1526313052;Tests pruning of previous checkpoints if a new checkpoint is confirmed.;@Test_	public void confirmCheckpoint() throws Exception {__		final int chkCount = 3__		final int confirmed = chkCount - 1__		List<TaskStateSnapshot> taskStateSnapshots = storeStates(chkCount)__		taskLocalStateStore.confirmCheckpoint(confirmed)__		checkPrunedAndDiscarded(taskStateSnapshots, 0, confirmed)__		checkStoredAsExpected(taskStateSnapshots, confirmed, chkCount)__	};tests,pruning,of,previous,checkpoints,if,a,new,checkpoint,is,confirmed;test,public,void,confirm,checkpoint,throws,exception,final,int,chk,count,3,final,int,confirmed,chk,count,1,list,task,state,snapshot,task,state,snapshots,store,states,chk,count,task,local,state,store,confirm,checkpoint,confirmed,check,pruned,and,discarded,task,state,snapshots,0,confirmed,check,stored,as,expected,task,state,snapshots,confirmed,chk,count
TaskLocalStateStoreImplTest -> @Test 	public void pruneCheckpoints() throws Exception;1519821266;Test checkpoint pruning.;@Test_	public void pruneCheckpoints() throws Exception {__		final int chkCount = 3___		List<TaskStateSnapshot> taskStateSnapshots = storeStates(chkCount)___		_		taskLocalStateStore.pruneMatchingCheckpoints((long chk) -> chk != chkCount - 1)___		for (int i = 0_ i < chkCount - 1_ ++i) {_			Assert.assertNull(taskLocalStateStore.retrieveLocalState(i))__		}__		checkStoredAsExpected(taskStateSnapshots, chkCount - 1, chkCount)__	};test,checkpoint,pruning;test,public,void,prune,checkpoints,throws,exception,final,int,chk,count,3,list,task,state,snapshot,task,state,snapshots,store,states,chk,count,task,local,state,store,prune,matching,checkpoints,long,chk,chk,chk,count,1,for,int,i,0,i,chk,count,1,i,assert,assert,null,task,local,state,store,retrieve,local,state,i,check,stored,as,expected,task,state,snapshots,chk,count,1,chk,count
TaskLocalStateStoreImplTest -> @Test 	public void pruneCheckpoints() throws Exception;1526313052;Test checkpoint pruning.;@Test_	public void pruneCheckpoints() throws Exception {__		final int chkCount = 3___		List<TaskStateSnapshot> taskStateSnapshots = storeStates(chkCount)___		_		taskLocalStateStore.pruneMatchingCheckpoints((long chk) -> chk != chkCount - 1)___		for (int i = 0_ i < chkCount - 1_ ++i) {_			Assert.assertNull(taskLocalStateStore.retrieveLocalState(i))__		}__		checkStoredAsExpected(taskStateSnapshots, chkCount - 1, chkCount)__	};test,checkpoint,pruning;test,public,void,prune,checkpoints,throws,exception,final,int,chk,count,3,list,task,state,snapshot,task,state,snapshots,store,states,chk,count,task,local,state,store,prune,matching,checkpoints,long,chk,chk,chk,count,1,for,int,i,0,i,chk,count,1,i,assert,assert,null,task,local,state,store,retrieve,local,state,i,check,stored,as,expected,task,state,snapshots,chk,count,1,chk,count
TaskLocalStateStoreImplTest -> @Test 	public void storeAndRetrieve() throws Exception;1519568061;Tests basic store/retrieve of local state.;@Test_	public void storeAndRetrieve() throws Exception {__		final int chkCount = 3___		for (int i = 0_ i < chkCount_ ++i) {_			Assert.assertNull(taskLocalStateStore.retrieveLocalState(i))__		}__		List<TaskStateSnapshot> taskStateSnapshots = storeStates(chkCount)___		checkStoredAsExpected(taskStateSnapshots, 0, chkCount)___		Assert.assertNull(taskLocalStateStore.retrieveLocalState(chkCount + 1))__	};tests,basic,store,retrieve,of,local,state;test,public,void,store,and,retrieve,throws,exception,final,int,chk,count,3,for,int,i,0,i,chk,count,i,assert,assert,null,task,local,state,store,retrieve,local,state,i,list,task,state,snapshot,task,state,snapshots,store,states,chk,count,check,stored,as,expected,task,state,snapshots,0,chk,count,assert,assert,null,task,local,state,store,retrieve,local,state,chk,count,1
TaskLocalStateStoreImplTest -> @Test 	public void storeAndRetrieve() throws Exception;1519821266;Tests basic store/retrieve of local state.;@Test_	public void storeAndRetrieve() throws Exception {__		final int chkCount = 3___		for (int i = 0_ i < chkCount_ ++i) {_			Assert.assertNull(taskLocalStateStore.retrieveLocalState(i))__		}__		List<TaskStateSnapshot> taskStateSnapshots = storeStates(chkCount)___		checkStoredAsExpected(taskStateSnapshots, 0, chkCount)___		Assert.assertNull(taskLocalStateStore.retrieveLocalState(chkCount + 1))__	};tests,basic,store,retrieve,of,local,state;test,public,void,store,and,retrieve,throws,exception,final,int,chk,count,3,for,int,i,0,i,chk,count,i,assert,assert,null,task,local,state,store,retrieve,local,state,i,list,task,state,snapshot,task,state,snapshots,store,states,chk,count,check,stored,as,expected,task,state,snapshots,0,chk,count,assert,assert,null,task,local,state,store,retrieve,local,state,chk,count,1
TaskLocalStateStoreImplTest -> @Test 	public void storeAndRetrieve() throws Exception;1526313052;Tests basic store/retrieve of local state.;@Test_	public void storeAndRetrieve() throws Exception {__		final int chkCount = 3___		for (int i = 0_ i < chkCount_ ++i) {_			Assert.assertNull(taskLocalStateStore.retrieveLocalState(i))__		}__		List<TaskStateSnapshot> taskStateSnapshots = storeStates(chkCount)___		checkStoredAsExpected(taskStateSnapshots, 0, chkCount)___		Assert.assertNull(taskLocalStateStore.retrieveLocalState(chkCount + 1))__	};tests,basic,store,retrieve,of,local,state;test,public,void,store,and,retrieve,throws,exception,final,int,chk,count,3,for,int,i,0,i,chk,count,i,assert,assert,null,task,local,state,store,retrieve,local,state,i,list,task,state,snapshot,task,state,snapshots,store,states,chk,count,check,stored,as,expected,task,state,snapshots,0,chk,count,assert,assert,null,task,local,state,store,retrieve,local,state,chk,count,1
