commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Before public void setUp() throws Exception {     leaderRetriever = () -> CompletableFuture.completedFuture(null).     final SavepointHandlers savepointHandlers = new SavepointHandlers(null).     savepointTriggerHandler = savepointHandlers.new SavepointTriggerHandler(leaderRetriever, TIMEOUT, Collections.emptyMap()).     savepointStatusHandler = savepointHandlers.new SavepointStatusHandler(leaderRetriever, TIMEOUT, Collections.emptyMap()). }
false;public;0;23;;@Test public void testSavepointCompletedSuccessfully() throws Exception {     final TestingRestfulGateway testingRestfulGateway = new TestingRestfulGateway.Builder().setTriggerSavepointFunction((JobID jobId, String targetDirectory) -> CompletableFuture.completedFuture(COMPLETED_SAVEPOINT_EXTERNAL_POINTER)).build().     final TriggerId triggerId = savepointTriggerHandler.handleRequest(triggerSavepointRequest(), testingRestfulGateway).get().getTriggerId().     AsynchronousOperationResult<SavepointInfo> savepointResponseBody.     savepointResponseBody = savepointStatusHandler.handleRequest(savepointStatusRequest(triggerId), testingRestfulGateway).get().     assertThat(savepointResponseBody.queueStatus().getId(), equalTo(QueueStatus.Id.COMPLETED)).     assertThat(savepointResponseBody.resource(), notNullValue()).     assertThat(savepointResponseBody.resource().getLocation(), equalTo(COMPLETED_SAVEPOINT_EXTERNAL_POINTER)). }
false;public;0;23;;@Test public void testTriggerSavepointWithDefaultDirectory() throws Exception {     final CompletableFuture<String> targetDirectoryFuture = new CompletableFuture<>().     final TestingRestfulGateway testingRestfulGateway = new TestingRestfulGateway.Builder().setTriggerSavepointFunction((JobID jobId, String targetDirectory) -> {         targetDirectoryFuture.complete(targetDirectory).         return CompletableFuture.completedFuture(COMPLETED_SAVEPOINT_EXTERNAL_POINTER).     }).build().     final String defaultSavepointDir = "/other/dir".     final SavepointHandlers savepointHandlers = new SavepointHandlers(defaultSavepointDir).     final SavepointHandlers.SavepointTriggerHandler savepointTriggerHandler = savepointHandlers.new SavepointTriggerHandler(leaderRetriever, TIMEOUT, Collections.emptyMap()).     savepointTriggerHandler.handleRequest(triggerSavepointRequestWithDefaultDirectory(), testingRestfulGateway).get().     assertThat(targetDirectoryFuture.get(), equalTo(defaultSavepointDir)). }
false;public;0;19;;@Test public void testTriggerSavepointNoDirectory() throws Exception {     TestingRestfulGateway testingRestfulGateway = new TestingRestfulGateway.Builder().setTriggerSavepointFunction((JobID jobId, String directory) -> CompletableFuture.completedFuture(COMPLETED_SAVEPOINT_EXTERNAL_POINTER)).build().     try {         savepointTriggerHandler.handleRequest(triggerSavepointRequestWithDefaultDirectory(), testingRestfulGateway).get().         fail("Expected exception not thrown.").     } catch (RestHandlerException rhe) {         assertThat(rhe.getMessage(), equalTo("Config key [state.savepoints.dir] is not set. " + "Property [target-directory] must be provided.")).         assertThat(rhe.getHttpResponseStatus(), equalTo(HttpResponseStatus.BAD_REQUEST)).     } }
false;public;0;23;;@Test public void testSavepointCompletedWithException() throws Exception {     TestingRestfulGateway testingRestfulGateway = new TestingRestfulGateway.Builder().setTriggerSavepointFunction((JobID jobId, String directory) -> FutureUtils.completedExceptionally(new RuntimeException("expected"))).build().     final TriggerId triggerId = savepointTriggerHandler.handleRequest(triggerSavepointRequest(), testingRestfulGateway).get().getTriggerId().     final AsynchronousOperationResult<SavepointInfo> savepointResponseBody = savepointStatusHandler.handleRequest(savepointStatusRequest(triggerId), testingRestfulGateway).get().     assertThat(savepointResponseBody.queueStatus().getId(), equalTo(QueueStatus.Id.COMPLETED)).     assertThat(savepointResponseBody.resource(), notNullValue()).     assertThat(savepointResponseBody.resource().getFailureCause(), notNullValue()).     final Throwable savepointError = savepointResponseBody.resource().getFailureCause().deserializeError(ClassLoader.getSystemClassLoader()).     assertThat(savepointError.getMessage(), equalTo("expected")).     assertThat(savepointError, instanceOf(RuntimeException.class)). }
false;private,static;0;3;;private static HandlerRequest<SavepointTriggerRequestBody, SavepointTriggerMessageParameters> triggerSavepointRequest() throws HandlerRequestException {     return triggerSavepointRequest(DEFAULT_REQUESTED_SAVEPOINT_TARGET_DIRECTORY). }
false;private,static;0;3;;private static HandlerRequest<SavepointTriggerRequestBody, SavepointTriggerMessageParameters> triggerSavepointRequestWithDefaultDirectory() throws HandlerRequestException {     return triggerSavepointRequest(null). }
false;private,static;1;9;;private static HandlerRequest<SavepointTriggerRequestBody, SavepointTriggerMessageParameters> triggerSavepointRequest(final String targetDirectory) throws HandlerRequestException {     return new HandlerRequest<>(new SavepointTriggerRequestBody(targetDirectory, false), new SavepointTriggerMessageParameters(), Collections.singletonMap(JobIDPathParameter.KEY, JOB_ID.toString()), Collections.emptyMap()). }
false;private,static;1;12;;private static HandlerRequest<EmptyRequestBody, SavepointStatusMessageParameters> savepointStatusRequest(final TriggerId triggerId) throws HandlerRequestException {     final Map<String, String> pathParameters = new HashMap<>().     pathParameters.put(JobIDPathParameter.KEY, JOB_ID.toString()).     pathParameters.put(TriggerIdPathParameter.KEY, triggerId.toString()).     return new HandlerRequest<>(EmptyRequestBody.getInstance(), new SavepointStatusMessageParameters(), pathParameters, Collections.emptyMap()). }
