# id;timestamp;commentText;codeText;commentWords;codeWords
BlobClientSslTest -> @Test(expected = IOException.class) 	public void testSSLClientFailure() throws Exception;1502100084;Verify ssl client to non-ssl server failure;@Test(expected = IOException.class)_	public void testSSLClientFailure() throws Exception {_		_		uploadJarFile(BLOB_SERVER, sslClientConfig)__	};verify,ssl,client,to,non,ssl,server,failure;test,expected,ioexception,class,public,void,test,sslclient,failure,throws,exception,upload,jar,file,ssl,client,config
BlobClientSslTest -> @Test(expected = IOException.class) 	public void testSSLClientFailure() throws Exception;1507212387;Verify ssl client to non-ssl server failure.;@Test(expected = IOException.class)_	public void testSSLClientFailure() throws Exception {_		_		uploadJarFile(BLOB_SERVER, sslClientConfig)__	};verify,ssl,client,to,non,ssl,server,failure;test,expected,ioexception,class,public,void,test,sslclient,failure,throws,exception,upload,jar,file,ssl,client,config
BlobClientSslTest -> @Test(expected = IOException.class) 	public void testSSLClientFailure() throws Exception;1515428991;Verify ssl client to non-ssl server failure.;@Test(expected = IOException.class)_	public void testSSLClientFailure() throws Exception {_		_		uploadJarFile(blobServer, sslClientConfig)__	};verify,ssl,client,to,non,ssl,server,failure;test,expected,ioexception,class,public,void,test,sslclient,failure,throws,exception,upload,jar,file,blob,server,ssl,client,config
BlobClientSslTest -> @Test(expected = IOException.class) 	public void testSSLClientFailure() throws Exception;1531721446;Verify ssl client to non-ssl server failure.;@Test(expected = IOException.class)_	public void testSSLClientFailure() throws Exception {_		_		uploadJarFile(blobServer, sslClientConfig)__	};verify,ssl,client,to,non,ssl,server,failure;test,expected,ioexception,class,public,void,test,sslclient,failure,throws,exception,upload,jar,file,blob,server,ssl,client,config
BlobClientSslTest -> @BeforeClass 	public static void startSSLServer() throws IOException;1495001929;Starts the SSL enabled BLOB server.;@BeforeClass_	public static void startSSLServer() throws IOException {_		Configuration config = new Configuration()__		config.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__		config.setString(ConfigConstants.SECURITY_SSL_KEYSTORE, "src/test/resources/local127.keystore")__		config.setString(ConfigConstants.SECURITY_SSL_KEYSTORE_PASSWORD, "password")__		config.setString(ConfigConstants.SECURITY_SSL_KEY_PASSWORD, "password")__		BLOB_SSL_SERVER = new BlobServer(config, new VoidBlobStore())____		sslClientConfig = new Configuration()__		sslClientConfig.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__		sslClientConfig.setString(ConfigConstants.SECURITY_SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		sslClientConfig.setString(ConfigConstants.SECURITY_SSL_TRUSTSTORE_PASSWORD, "password")__	};starts,the,ssl,enabled,blob,server;before,class,public,static,void,start,sslserver,throws,ioexception,configuration,config,new,configuration,config,set,boolean,config,constants,true,config,set,string,config,constants,src,test,resources,local127,keystore,config,set,string,config,constants,password,config,set,string,config,constants,password,new,blob,server,config,new,void,blob,store,ssl,client,config,new,configuration,ssl,client,config,set,boolean,config,constants,true,ssl,client,config,set,string,config,constants,src,test,resources,local127,truststore,ssl,client,config,set,string,config,constants,password
BlobClientSslTest -> @BeforeClass 	public static void startSSLServer() throws IOException;1498894422;Starts the SSL enabled BLOB server.;@BeforeClass_	public static void startSSLServer() throws IOException {_		Configuration config = new Configuration()__		config.setBoolean(SecurityOptions.SSL_ENABLED, true)__		config.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		config.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		config.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")__		BLOB_SSL_SERVER = new BlobServer(config, new VoidBlobStore())___		sslClientConfig = new Configuration()__		sslClientConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		sslClientConfig.setString(SecurityOptions.SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		sslClientConfig.setString(SecurityOptions.SSL_TRUSTSTORE_PASSWORD, "password")__	};starts,the,ssl,enabled,blob,server;before,class,public,static,void,start,sslserver,throws,ioexception,configuration,config,new,configuration,config,set,boolean,security,options,true,config,set,string,security,options,src,test,resources,local127,keystore,config,set,string,security,options,password,config,set,string,security,options,password,new,blob,server,config,new,void,blob,store,ssl,client,config,new,configuration,ssl,client,config,set,boolean,security,options,true,ssl,client,config,set,string,security,options,src,test,resources,local127,truststore,ssl,client,config,set,string,security,options,password
BlobClientSslTest -> @BeforeClass 	public static void startSSLServer() throws IOException;1499789965;Starts the SSL enabled BLOB server.;@BeforeClass_	public static void startSSLServer() throws IOException {_		Configuration config = new Configuration()__		config.setBoolean(SecurityOptions.SSL_ENABLED, true)__		config.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		config.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		config.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")__		BLOB_SSL_SERVER = new BlobServer(config, new VoidBlobStore())___		sslClientConfig = new Configuration()__		sslClientConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		sslClientConfig.setString(SecurityOptions.SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		sslClientConfig.setString(SecurityOptions.SSL_TRUSTSTORE_PASSWORD, "password")__	};starts,the,ssl,enabled,blob,server;before,class,public,static,void,start,sslserver,throws,ioexception,configuration,config,new,configuration,config,set,boolean,security,options,true,config,set,string,security,options,src,test,resources,local127,keystore,config,set,string,security,options,password,config,set,string,security,options,password,new,blob,server,config,new,void,blob,store,ssl,client,config,new,configuration,ssl,client,config,set,boolean,security,options,true,ssl,client,config,set,string,security,options,src,test,resources,local127,truststore,ssl,client,config,set,string,security,options,password
BlobClientSslTest -> @BeforeClass 	public static void startSSLServer() throws IOException;1502100084;Starts the SSL enabled BLOB server.;@BeforeClass_	public static void startSSLServer() throws IOException {_		Configuration config = new Configuration()__		config.setString(BlobServerOptions.STORAGE_DIRECTORY,_			temporarySslFolder.newFolder().getAbsolutePath())__		config.setBoolean(SecurityOptions.SSL_ENABLED, true)__		config.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		config.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		config.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")__		BLOB_SSL_SERVER = new BlobServer(config, new VoidBlobStore())___		sslClientConfig = new Configuration()__		sslClientConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		sslClientConfig.setString(SecurityOptions.SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		sslClientConfig.setString(SecurityOptions.SSL_TRUSTSTORE_PASSWORD, "password")__	};starts,the,ssl,enabled,blob,server;before,class,public,static,void,start,sslserver,throws,ioexception,configuration,config,new,configuration,config,set,string,blob,server,options,temporary,ssl,folder,new,folder,get,absolute,path,config,set,boolean,security,options,true,config,set,string,security,options,src,test,resources,local127,keystore,config,set,string,security,options,password,config,set,string,security,options,password,new,blob,server,config,new,void,blob,store,ssl,client,config,new,configuration,ssl,client,config,set,boolean,security,options,true,ssl,client,config,set,string,security,options,src,test,resources,local127,truststore,ssl,client,config,set,string,security,options,password
BlobClientSslTest -> @BeforeClass 	public static void startSSLServer() throws IOException;1507212387;Starts the SSL enabled BLOB server.;@BeforeClass_	public static void startSSLServer() throws IOException {_		Configuration config = new Configuration()__		config.setString(BlobServerOptions.STORAGE_DIRECTORY,_			temporarySslFolder.newFolder().getAbsolutePath())__		config.setBoolean(SecurityOptions.SSL_ENABLED, true)__		config.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		config.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		config.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")__		BLOB_SSL_SERVER = new BlobServer(config, new VoidBlobStore())__		BLOB_SSL_SERVER.start()___		sslClientConfig = new Configuration()__		sslClientConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		sslClientConfig.setString(SecurityOptions.SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		sslClientConfig.setString(SecurityOptions.SSL_TRUSTSTORE_PASSWORD, "password")__	};starts,the,ssl,enabled,blob,server;before,class,public,static,void,start,sslserver,throws,ioexception,configuration,config,new,configuration,config,set,string,blob,server,options,temporary,ssl,folder,new,folder,get,absolute,path,config,set,boolean,security,options,true,config,set,string,security,options,src,test,resources,local127,keystore,config,set,string,security,options,password,config,set,string,security,options,password,new,blob,server,config,new,void,blob,store,start,ssl,client,config,new,configuration,ssl,client,config,set,boolean,security,options,true,ssl,client,config,set,string,security,options,src,test,resources,local127,truststore,ssl,client,config,set,string,security,options,password
BlobClientSslTest -> @BeforeClass 	public static void startSSLServer() throws IOException;1515428991;Starts the SSL enabled BLOB server.;@BeforeClass_	public static void startSSLServer() throws IOException {_		Configuration config = new Configuration()__		config.setString(BlobServerOptions.STORAGE_DIRECTORY,_			temporarySslFolder.newFolder().getAbsolutePath())__		config.setBoolean(SecurityOptions.SSL_ENABLED, true)__		config.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		config.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		config.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")__		blobSslServer = new BlobServer(config, new VoidBlobStore())__		blobSslServer.start()___		sslClientConfig = new Configuration()__		sslClientConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		sslClientConfig.setString(SecurityOptions.SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		sslClientConfig.setString(SecurityOptions.SSL_TRUSTSTORE_PASSWORD, "password")__	};starts,the,ssl,enabled,blob,server;before,class,public,static,void,start,sslserver,throws,ioexception,configuration,config,new,configuration,config,set,string,blob,server,options,temporary,ssl,folder,new,folder,get,absolute,path,config,set,boolean,security,options,true,config,set,string,security,options,src,test,resources,local127,keystore,config,set,string,security,options,password,config,set,string,security,options,password,blob,ssl,server,new,blob,server,config,new,void,blob,store,blob,ssl,server,start,ssl,client,config,new,configuration,ssl,client,config,set,boolean,security,options,true,ssl,client,config,set,string,security,options,src,test,resources,local127,truststore,ssl,client,config,set,string,security,options,password
BlobClientSslTest -> @BeforeClass 	public static void startSSLServer() throws IOException;1531721446;Starts the SSL enabled BLOB server.;@BeforeClass_	public static void startSSLServer() throws IOException {_		Configuration config = SSLUtilsTest.createInternalSslConfigWithKeyAndTrustStores()__		config.setString(BlobServerOptions.STORAGE_DIRECTORY, temporarySslFolder.newFolder().getAbsolutePath())___		blobSslServer = new BlobServer(config, new VoidBlobStore())__		blobSslServer.start()___		sslClientConfig = config__	};starts,the,ssl,enabled,blob,server;before,class,public,static,void,start,sslserver,throws,ioexception,configuration,config,sslutils,test,create,internal,ssl,config,with,key,and,trust,stores,config,set,string,blob,server,options,temporary,ssl,folder,new,folder,get,absolute,path,blob,ssl,server,new,blob,server,config,new,void,blob,store,blob,ssl,server,start,ssl,client,config,config
BlobClientSslTest -> @Test 	public void testContentAddressableStream();1476696544;Tests the PUT/GET operations for content-addressable streams.;@Test_	public void testContentAddressableStream() {__		BlobClient client = null__		InputStream is = null___		try {_			File testFile = File.createTempFile("testfile", ".dat")__			testFile.deleteOnExit()___			BlobKey origKey = prepareTestFile(testFile)___			InetSocketAddress serverAddress = new InetSocketAddress("localhost", BLOB_SSL_SERVER.getPort())__			client = new BlobClient(serverAddress, sslClientConfig)___			_			is = new FileInputStream(testFile)__			BlobKey receivedKey = client.put(is)__			assertEquals(origKey, receivedKey)___			is.close()__			is = null___			_			is = client.get(receivedKey)__			validateGet(is, testFile)__		}_		catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_		finally {_			if (is != null) {_				try {_					is.close()__				} catch (Throwable t) {}_			}_			if (client != null) {_				try {_					client.close()__				} catch (Throwable t) {}_			}_		}_	};tests,the,put,get,operations,for,content,addressable,streams;test,public,void,test,content,addressable,stream,blob,client,client,null,input,stream,is,null,try,file,test,file,file,create,temp,file,testfile,dat,test,file,delete,on,exit,blob,key,orig,key,prepare,test,file,test,file,inet,socket,address,server,address,new,inet,socket,address,localhost,get,port,client,new,blob,client,server,address,ssl,client,config,is,new,file,input,stream,test,file,blob,key,received,key,client,put,is,assert,equals,orig,key,received,key,is,close,is,null,is,client,get,received,key,validate,get,is,test,file,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,if,is,null,try,is,close,catch,throwable,t,if,client,null,try,client,close,catch,throwable,t
BlobClientSslTest -> @Test 	public void testContentAddressableStream();1494690800;Tests the PUT/GET operations for content-addressable streams.;@Test_	public void testContentAddressableStream() {__		BlobClient client = null__		InputStream is = null___		try {_			File testFile = File.createTempFile("testfile", ".dat")__			testFile.deleteOnExit()___			BlobKey origKey = prepareTestFile(testFile)___			InetSocketAddress serverAddress = new InetSocketAddress("localhost", BLOB_SSL_SERVER.getPort())__			client = new BlobClient(serverAddress, sslClientConfig)___			_			is = new FileInputStream(testFile)__			BlobKey receivedKey = client.put(is)__			assertEquals(origKey, receivedKey)___			is.close()__			is = null___			_			is = client.get(receivedKey)__			validateGet(is, testFile)__		}_		catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_		finally {_			if (is != null) {_				try {_					is.close()__				} catch (Throwable t) {}_			}_			if (client != null) {_				try {_					client.close()__				} catch (Throwable t) {}_			}_		}_	};tests,the,put,get,operations,for,content,addressable,streams;test,public,void,test,content,addressable,stream,blob,client,client,null,input,stream,is,null,try,file,test,file,file,create,temp,file,testfile,dat,test,file,delete,on,exit,blob,key,orig,key,prepare,test,file,test,file,inet,socket,address,server,address,new,inet,socket,address,localhost,get,port,client,new,blob,client,server,address,ssl,client,config,is,new,file,input,stream,test,file,blob,key,received,key,client,put,is,assert,equals,orig,key,received,key,is,close,is,null,is,client,get,received,key,validate,get,is,test,file,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,if,is,null,try,is,close,catch,throwable,t,if,client,null,try,client,close,catch,throwable,t
BlobClientSslTest -> @Test 	public void testContentAddressableStream();1495001929;Tests the PUT/GET operations for content-addressable streams.;@Test_	public void testContentAddressableStream() {__		BlobClient client = null__		InputStream is = null___		try {_			File testFile = File.createTempFile("testfile", ".dat")__			testFile.deleteOnExit()___			BlobKey origKey = prepareTestFile(testFile)___			InetSocketAddress serverAddress = new InetSocketAddress("localhost", BLOB_SSL_SERVER.getPort())__			client = new BlobClient(serverAddress, sslClientConfig)___			_			is = new FileInputStream(testFile)__			BlobKey receivedKey = client.put(is)__			assertEquals(origKey, receivedKey)___			is.close()__			is = null___			_			is = client.get(receivedKey)__			validateGet(is, testFile)__		}_		catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_		finally {_			if (is != null) {_				try {_					is.close()__				} catch (Throwable t) {}_			}_			if (client != null) {_				try {_					client.close()__				} catch (Throwable t) {}_			}_		}_	};tests,the,put,get,operations,for,content,addressable,streams;test,public,void,test,content,addressable,stream,blob,client,client,null,input,stream,is,null,try,file,test,file,file,create,temp,file,testfile,dat,test,file,delete,on,exit,blob,key,orig,key,prepare,test,file,test,file,inet,socket,address,server,address,new,inet,socket,address,localhost,get,port,client,new,blob,client,server,address,ssl,client,config,is,new,file,input,stream,test,file,blob,key,received,key,client,put,is,assert,equals,orig,key,received,key,is,close,is,null,is,client,get,received,key,validate,get,is,test,file,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,if,is,null,try,is,close,catch,throwable,t,if,client,null,try,client,close,catch,throwable,t
BlobClientSslTest -> @Test 	public void testContentAddressableStream();1498894422;Tests the PUT/GET operations for content-addressable streams.;@Test_	public void testContentAddressableStream() {__		BlobClient client = null__		InputStream is = null___		try {_			File testFile = File.createTempFile("testfile", ".dat")__			testFile.deleteOnExit()___			BlobKey origKey = prepareTestFile(testFile)___			InetSocketAddress serverAddress = new InetSocketAddress("localhost", BLOB_SSL_SERVER.getPort())__			client = new BlobClient(serverAddress, sslClientConfig)___			_			is = new FileInputStream(testFile)__			BlobKey receivedKey = client.put(is)__			assertEquals(origKey, receivedKey)___			is.close()__			is = null___			_			is = client.get(receivedKey)__			validateGet(is, testFile)__		}_		catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_		finally {_			if (is != null) {_				try {_					is.close()__				} catch (Throwable t) {}_			}_			if (client != null) {_				try {_					client.close()__				} catch (Throwable t) {}_			}_		}_	};tests,the,put,get,operations,for,content,addressable,streams;test,public,void,test,content,addressable,stream,blob,client,client,null,input,stream,is,null,try,file,test,file,file,create,temp,file,testfile,dat,test,file,delete,on,exit,blob,key,orig,key,prepare,test,file,test,file,inet,socket,address,server,address,new,inet,socket,address,localhost,get,port,client,new,blob,client,server,address,ssl,client,config,is,new,file,input,stream,test,file,blob,key,received,key,client,put,is,assert,equals,orig,key,received,key,is,close,is,null,is,client,get,received,key,validate,get,is,test,file,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,if,is,null,try,is,close,catch,throwable,t,if,client,null,try,client,close,catch,throwable,t
BlobClientSslTest -> @Test 	public void testContentAddressableStream();1499789965;Tests the PUT/GET operations for content-addressable streams.;@Test_	public void testContentAddressableStream() {__		BlobClient client = null__		InputStream is = null___		try {_			File testFile = File.createTempFile("testfile", ".dat")__			testFile.deleteOnExit()___			BlobKey origKey = prepareTestFile(testFile)___			InetSocketAddress serverAddress = new InetSocketAddress("localhost", BLOB_SSL_SERVER.getPort())__			client = new BlobClient(serverAddress, sslClientConfig)___			_			is = new FileInputStream(testFile)__			BlobKey receivedKey = client.put(is)__			assertEquals(origKey, receivedKey)___			is.close()__			is = null___			_			is = client.get(receivedKey)__			validateGet(is, testFile)__		}_		catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_		finally {_			if (is != null) {_				try {_					is.close()__				} catch (Throwable t) {}_			}_			if (client != null) {_				try {_					client.close()__				} catch (Throwable t) {}_			}_		}_	};tests,the,put,get,operations,for,content,addressable,streams;test,public,void,test,content,addressable,stream,blob,client,client,null,input,stream,is,null,try,file,test,file,file,create,temp,file,testfile,dat,test,file,delete,on,exit,blob,key,orig,key,prepare,test,file,test,file,inet,socket,address,server,address,new,inet,socket,address,localhost,get,port,client,new,blob,client,server,address,ssl,client,config,is,new,file,input,stream,test,file,blob,key,received,key,client,put,is,assert,equals,orig,key,received,key,is,close,is,null,is,client,get,received,key,validate,get,is,test,file,catch,exception,e,e,print,stack,trace,fail,e,get,message,finally,if,is,null,try,is,close,catch,throwable,t,if,client,null,try,client,close,catch,throwable,t
BlobClientSslTest -> @Test(expected = IOException.class) 	public void testSSLServerFailure2() throws Exception;1502100084;Verify non-ssl client to ssl server failure;@Test(expected = IOException.class)_	public void testSSLServerFailure2() throws Exception {_		_		uploadJarFile(BLOB_SSL_SERVER, nonSslClientConfig)__	};verify,non,ssl,client,to,ssl,server,failure;test,expected,ioexception,class,public,void,test,sslserver,failure2,throws,exception,upload,jar,file,non,ssl,client,config
BlobClientSslTest -> @Test(expected = IOException.class) 	public void testSSLServerFailure2() throws Exception;1507212387;Verify non-ssl client to ssl server failure.;@Test(expected = IOException.class)_	public void testSSLServerFailure2() throws Exception {_		_		uploadJarFile(BLOB_SSL_SERVER, nonSslClientConfig)__	};verify,non,ssl,client,to,ssl,server,failure;test,expected,ioexception,class,public,void,test,sslserver,failure2,throws,exception,upload,jar,file,non,ssl,client,config
BlobClientSslTest -> @Test(expected = IOException.class) 	public void testSSLServerFailure2() throws Exception;1515428991;Verify non-ssl client to ssl server failure.;@Test(expected = IOException.class)_	public void testSSLServerFailure2() throws Exception {_		_		uploadJarFile(blobSslServer, nonSslClientConfig)__	};verify,non,ssl,client,to,ssl,server,failure;test,expected,ioexception,class,public,void,test,sslserver,failure2,throws,exception,upload,jar,file,blob,ssl,server,non,ssl,client,config
BlobClientSslTest -> @Test(expected = IOException.class) 	public void testSSLServerFailure2() throws Exception;1531721446;Verify non-ssl client to ssl server failure.;@Test(expected = IOException.class)_	public void testSSLServerFailure2() throws Exception {_		_		uploadJarFile(blobSslServer, nonSslClientConfig)__	};verify,non,ssl,client,to,ssl,server,failure;test,expected,ioexception,class,public,void,test,sslserver,failure2,throws,exception,upload,jar,file,blob,ssl,server,non,ssl,client,config
BlobClientSslTest -> @BeforeClass 	public static void startSSLServer();1476696544;Starts the SSL enabled BLOB server.;@BeforeClass_	public static void startSSLServer() {_		try {_			Configuration config = new Configuration()__			config.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__			config.setString(ConfigConstants.SECURITY_SSL_KEYSTORE, "src/test/resources/local127.keystore")__			config.setString(ConfigConstants.SECURITY_SSL_KEYSTORE_PASSWORD, "password")__			config.setString(ConfigConstants.SECURITY_SSL_KEY_PASSWORD, "password")__			BLOB_SSL_SERVER = new BlobServer(config)__		}_		catch (IOException e) {_			e.printStackTrace()__			fail(e.getMessage())__		}__		sslClientConfig = new Configuration()__		sslClientConfig.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__		sslClientConfig.setString(ConfigConstants.SECURITY_SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		sslClientConfig.setString(ConfigConstants.SECURITY_SSL_TRUSTSTORE_PASSWORD, "password")__	};starts,the,ssl,enabled,blob,server;before,class,public,static,void,start,sslserver,try,configuration,config,new,configuration,config,set,boolean,config,constants,true,config,set,string,config,constants,src,test,resources,local127,keystore,config,set,string,config,constants,password,config,set,string,config,constants,password,new,blob,server,config,catch,ioexception,e,e,print,stack,trace,fail,e,get,message,ssl,client,config,new,configuration,ssl,client,config,set,boolean,config,constants,true,ssl,client,config,set,string,config,constants,src,test,resources,local127,truststore,ssl,client,config,set,string,config,constants,password
BlobClientSslTest -> @BeforeClass 	public static void startSSLServer();1494690800;Starts the SSL enabled BLOB server.;@BeforeClass_	public static void startSSLServer() {_		try {_			Configuration config = new Configuration()__			config.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__			config.setString(ConfigConstants.SECURITY_SSL_KEYSTORE, "src/test/resources/local127.keystore")__			config.setString(ConfigConstants.SECURITY_SSL_KEYSTORE_PASSWORD, "password")__			config.setString(ConfigConstants.SECURITY_SSL_KEY_PASSWORD, "password")__			BLOB_SSL_SERVER = new BlobServer(config)__		}_		catch (IOException e) {_			e.printStackTrace()__			fail(e.getMessage())__		}__		sslClientConfig = new Configuration()__		sslClientConfig.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__		sslClientConfig.setString(ConfigConstants.SECURITY_SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		sslClientConfig.setString(ConfigConstants.SECURITY_SSL_TRUSTSTORE_PASSWORD, "password")__	};starts,the,ssl,enabled,blob,server;before,class,public,static,void,start,sslserver,try,configuration,config,new,configuration,config,set,boolean,config,constants,true,config,set,string,config,constants,src,test,resources,local127,keystore,config,set,string,config,constants,password,config,set,string,config,constants,password,new,blob,server,config,catch,ioexception,e,e,print,stack,trace,fail,e,get,message,ssl,client,config,new,configuration,ssl,client,config,set,boolean,config,constants,true,ssl,client,config,set,string,config,constants,src,test,resources,local127,truststore,ssl,client,config,set,string,config,constants,password
BlobClientSslTest -> private void uploadJarFile(BlobServer blobServer, Configuration blobClientConfig) throws Exception;1476696544;Tests the static {@link BlobClient#uploadJarFiles(InetSocketAddress, Configuration, List)} helper.;private void uploadJarFile(BlobServer blobServer, Configuration blobClientConfig) throws Exception {_		final File testFile = File.createTempFile("testfile", ".dat")__		testFile.deleteOnExit()__		prepareTestFile(testFile)___		InetSocketAddress serverAddress = new InetSocketAddress("localhost", blobServer.getPort())___		List<BlobKey> blobKeys = BlobClient.uploadJarFiles(serverAddress, blobClientConfig,_			Collections.singletonList(new Path(testFile.toURI())))___		assertEquals(1, blobKeys.size())___		try (BlobClient blobClient = new BlobClient(serverAddress, blobClientConfig)) {_			InputStream is = blobClient.get(blobKeys.get(0))__			validateGet(is, testFile)__		}_	};tests,the,static,link,blob,client,upload,jar,files,inet,socket,address,configuration,list,helper;private,void,upload,jar,file,blob,server,blob,server,configuration,blob,client,config,throws,exception,final,file,test,file,file,create,temp,file,testfile,dat,test,file,delete,on,exit,prepare,test,file,test,file,inet,socket,address,server,address,new,inet,socket,address,localhost,blob,server,get,port,list,blob,key,blob,keys,blob,client,upload,jar,files,server,address,blob,client,config,collections,singleton,list,new,path,test,file,to,uri,assert,equals,1,blob,keys,size,try,blob,client,blob,client,new,blob,client,server,address,blob,client,config,input,stream,is,blob,client,get,blob,keys,get,0,validate,get,is,test,file
BlobClientSslTest -> private void uploadJarFile(BlobServer blobServer, Configuration blobClientConfig) throws Exception;1494690800;Tests the static {@link BlobClient#uploadJarFiles(InetSocketAddress, Configuration, List)} helper.;private void uploadJarFile(BlobServer blobServer, Configuration blobClientConfig) throws Exception {_		final File testFile = File.createTempFile("testfile", ".dat")__		testFile.deleteOnExit()__		prepareTestFile(testFile)___		InetSocketAddress serverAddress = new InetSocketAddress("localhost", blobServer.getPort())___		List<BlobKey> blobKeys = BlobClient.uploadJarFiles(serverAddress, blobClientConfig,_			Collections.singletonList(new Path(testFile.toURI())))___		assertEquals(1, blobKeys.size())___		try (BlobClient blobClient = new BlobClient(serverAddress, blobClientConfig)) {_			InputStream is = blobClient.get(blobKeys.get(0))__			validateGet(is, testFile)__		}_	};tests,the,static,link,blob,client,upload,jar,files,inet,socket,address,configuration,list,helper;private,void,upload,jar,file,blob,server,blob,server,configuration,blob,client,config,throws,exception,final,file,test,file,file,create,temp,file,testfile,dat,test,file,delete,on,exit,prepare,test,file,test,file,inet,socket,address,server,address,new,inet,socket,address,localhost,blob,server,get,port,list,blob,key,blob,keys,blob,client,upload,jar,files,server,address,blob,client,config,collections,singleton,list,new,path,test,file,to,uri,assert,equals,1,blob,keys,size,try,blob,client,blob,client,new,blob,client,server,address,blob,client,config,input,stream,is,blob,client,get,blob,keys,get,0,validate,get,is,test,file
BlobClientSslTest -> private void uploadJarFile(BlobServer blobServer, Configuration blobClientConfig) throws Exception;1495001929;Tests the static {@link BlobClient#uploadJarFiles(InetSocketAddress, Configuration, List)} helper.;private void uploadJarFile(BlobServer blobServer, Configuration blobClientConfig) throws Exception {_		final File testFile = File.createTempFile("testfile", ".dat")__		testFile.deleteOnExit()__		prepareTestFile(testFile)___		InetSocketAddress serverAddress = new InetSocketAddress("localhost", blobServer.getPort())___		List<BlobKey> blobKeys = BlobClient.uploadJarFiles(serverAddress, blobClientConfig,_			Collections.singletonList(new Path(testFile.toURI())))___		assertEquals(1, blobKeys.size())___		try (BlobClient blobClient = new BlobClient(serverAddress, blobClientConfig)) {_			InputStream is = blobClient.get(blobKeys.get(0))__			validateGet(is, testFile)__		}_	};tests,the,static,link,blob,client,upload,jar,files,inet,socket,address,configuration,list,helper;private,void,upload,jar,file,blob,server,blob,server,configuration,blob,client,config,throws,exception,final,file,test,file,file,create,temp,file,testfile,dat,test,file,delete,on,exit,prepare,test,file,test,file,inet,socket,address,server,address,new,inet,socket,address,localhost,blob,server,get,port,list,blob,key,blob,keys,blob,client,upload,jar,files,server,address,blob,client,config,collections,singleton,list,new,path,test,file,to,uri,assert,equals,1,blob,keys,size,try,blob,client,blob,client,new,blob,client,server,address,blob,client,config,input,stream,is,blob,client,get,blob,keys,get,0,validate,get,is,test,file
BlobClientSslTest -> private void uploadJarFile(BlobServer blobServer, Configuration blobClientConfig) throws Exception;1498894422;Tests the static {@link BlobClient#uploadJarFiles(InetSocketAddress, Configuration, List)} helper.;private void uploadJarFile(BlobServer blobServer, Configuration blobClientConfig) throws Exception {_		final File testFile = File.createTempFile("testfile", ".dat")__		testFile.deleteOnExit()__		prepareTestFile(testFile)___		InetSocketAddress serverAddress = new InetSocketAddress("localhost", blobServer.getPort())___		List<BlobKey> blobKeys = BlobClient.uploadJarFiles(serverAddress, blobClientConfig,_			Collections.singletonList(new Path(testFile.toURI())))___		assertEquals(1, blobKeys.size())___		try (BlobClient blobClient = new BlobClient(serverAddress, blobClientConfig)) {_			InputStream is = blobClient.get(blobKeys.get(0))__			validateGet(is, testFile)__		}_	};tests,the,static,link,blob,client,upload,jar,files,inet,socket,address,configuration,list,helper;private,void,upload,jar,file,blob,server,blob,server,configuration,blob,client,config,throws,exception,final,file,test,file,file,create,temp,file,testfile,dat,test,file,delete,on,exit,prepare,test,file,test,file,inet,socket,address,server,address,new,inet,socket,address,localhost,blob,server,get,port,list,blob,key,blob,keys,blob,client,upload,jar,files,server,address,blob,client,config,collections,singleton,list,new,path,test,file,to,uri,assert,equals,1,blob,keys,size,try,blob,client,blob,client,new,blob,client,server,address,blob,client,config,input,stream,is,blob,client,get,blob,keys,get,0,validate,get,is,test,file
BlobClientSslTest -> private void uploadJarFile(BlobServer blobServer, Configuration blobClientConfig) throws Exception;1499789965;Tests the static {@link BlobClient#uploadJarFiles(InetSocketAddress, Configuration, List)} helper.;private void uploadJarFile(BlobServer blobServer, Configuration blobClientConfig) throws Exception {_		final File testFile = File.createTempFile("testfile", ".dat")__		testFile.deleteOnExit()__		prepareTestFile(testFile)___		InetSocketAddress serverAddress = new InetSocketAddress("localhost", blobServer.getPort())___		List<BlobKey> blobKeys = BlobClient.uploadJarFiles(serverAddress, blobClientConfig,_			Collections.singletonList(new Path(testFile.toURI())))___		assertEquals(1, blobKeys.size())___		try (BlobClient blobClient = new BlobClient(serverAddress, blobClientConfig)) {_			InputStream is = blobClient.get(blobKeys.get(0))__			validateGet(is, testFile)__		}_	};tests,the,static,link,blob,client,upload,jar,files,inet,socket,address,configuration,list,helper;private,void,upload,jar,file,blob,server,blob,server,configuration,blob,client,config,throws,exception,final,file,test,file,file,create,temp,file,testfile,dat,test,file,delete,on,exit,prepare,test,file,test,file,inet,socket,address,server,address,new,inet,socket,address,localhost,blob,server,get,port,list,blob,key,blob,keys,blob,client,upload,jar,files,server,address,blob,client,config,collections,singleton,list,new,path,test,file,to,uri,assert,equals,1,blob,keys,size,try,blob,client,blob,client,new,blob,client,server,address,blob,client,config,input,stream,is,blob,client,get,blob,keys,get,0,validate,get,is,test,file
BlobClientSslTest -> @BeforeClass 	public static void startNonSSLServer();1476696544;Starts the SSL disabled BLOB server.;@BeforeClass_	public static void startNonSSLServer() {_		try {_			Configuration config = new Configuration()__			config.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__			config.setBoolean(ConfigConstants.BLOB_SERVICE_SSL_ENABLED, false)__			config.setString(ConfigConstants.SECURITY_SSL_KEYSTORE, "src/test/resources/local127.keystore")__			config.setString(ConfigConstants.SECURITY_SSL_KEYSTORE_PASSWORD, "password")__			config.setString(ConfigConstants.SECURITY_SSL_KEY_PASSWORD, "password")__			BLOB_SERVER = new BlobServer(config)__		}_		catch (IOException e) {_			e.printStackTrace()__			fail(e.getMessage())__		}__		clientConfig = new Configuration()__		clientConfig.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__		clientConfig.setBoolean(ConfigConstants.BLOB_SERVICE_SSL_ENABLED, false)__		clientConfig.setString(ConfigConstants.SECURITY_SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		clientConfig.setString(ConfigConstants.SECURITY_SSL_TRUSTSTORE_PASSWORD, "password")__	};starts,the,ssl,disabled,blob,server;before,class,public,static,void,start,non,sslserver,try,configuration,config,new,configuration,config,set,boolean,config,constants,true,config,set,boolean,config,constants,false,config,set,string,config,constants,src,test,resources,local127,keystore,config,set,string,config,constants,password,config,set,string,config,constants,password,new,blob,server,config,catch,ioexception,e,e,print,stack,trace,fail,e,get,message,client,config,new,configuration,client,config,set,boolean,config,constants,true,client,config,set,boolean,config,constants,false,client,config,set,string,config,constants,src,test,resources,local127,truststore,client,config,set,string,config,constants,password
BlobClientSslTest -> @BeforeClass 	public static void startNonSSLServer();1494690800;Starts the SSL disabled BLOB server.;@BeforeClass_	public static void startNonSSLServer() {_		try {_			Configuration config = new Configuration()__			config.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__			config.setBoolean(BlobServerOptions.SSL_ENABLED, false)__			config.setString(ConfigConstants.SECURITY_SSL_KEYSTORE, "src/test/resources/local127.keystore")__			config.setString(ConfigConstants.SECURITY_SSL_KEYSTORE_PASSWORD, "password")__			config.setString(ConfigConstants.SECURITY_SSL_KEY_PASSWORD, "password")__			BLOB_SERVER = new BlobServer(config)__		}_		catch (IOException e) {_			e.printStackTrace()__			fail(e.getMessage())__		}__		clientConfig = new Configuration()__		clientConfig.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__		clientConfig.setBoolean(BlobServerOptions.SSL_ENABLED, false)__		clientConfig.setString(ConfigConstants.SECURITY_SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		clientConfig.setString(ConfigConstants.SECURITY_SSL_TRUSTSTORE_PASSWORD, "password")__	};starts,the,ssl,disabled,blob,server;before,class,public,static,void,start,non,sslserver,try,configuration,config,new,configuration,config,set,boolean,config,constants,true,config,set,boolean,blob,server,options,false,config,set,string,config,constants,src,test,resources,local127,keystore,config,set,string,config,constants,password,config,set,string,config,constants,password,new,blob,server,config,catch,ioexception,e,e,print,stack,trace,fail,e,get,message,client,config,new,configuration,client,config,set,boolean,config,constants,true,client,config,set,boolean,blob,server,options,false,client,config,set,string,config,constants,src,test,resources,local127,truststore,client,config,set,string,config,constants,password
BlobClientSslTest -> private static BlobKey prepareTestFile(File file) throws IOException;1476696544;Prepares a test file for the unit tests, i.e. the methods fills the file with a particular byte patterns and_computes the file's BLOB key.__@param file_the file to prepare for the unit tests_@return the BLOB key of the prepared file_@throws IOException_thrown if an I/O error occurs while writing to the test file;private static BlobKey prepareTestFile(File file) throws IOException {__		MessageDigest md = BlobUtils.createMessageDigest()___		final byte[] buf = new byte[TEST_BUFFER_SIZE]__		for (int i = 0_ i < buf.length_ ++i) {_			buf[i] = (byte) (i % 128)__		}__		FileOutputStream fos = null__		try {_			fos = new FileOutputStream(file)___			for (int i = 0_ i < 20_ ++i) {_				fos.write(buf)__				md.update(buf)__			}__		} finally {_			if (fos != null) {_				fos.close()__			}_		}__		return new BlobKey(md.digest())__	};prepares,a,test,file,for,the,unit,tests,i,e,the,methods,fills,the,file,with,a,particular,byte,patterns,and,computes,the,file,s,blob,key,param,file,the,file,to,prepare,for,the,unit,tests,return,the,blob,key,of,the,prepared,file,throws,ioexception,thrown,if,an,i,o,error,occurs,while,writing,to,the,test,file;private,static,blob,key,prepare,test,file,file,file,throws,ioexception,message,digest,md,blob,utils,create,message,digest,final,byte,buf,new,byte,for,int,i,0,i,buf,length,i,buf,i,byte,i,128,file,output,stream,fos,null,try,fos,new,file,output,stream,file,for,int,i,0,i,20,i,fos,write,buf,md,update,buf,finally,if,fos,null,fos,close,return,new,blob,key,md,digest
BlobClientSslTest -> private static BlobKey prepareTestFile(File file) throws IOException;1494690800;Prepares a test file for the unit tests, i.e. the methods fills the file with a particular byte patterns and_computes the file's BLOB key.__@param file_the file to prepare for the unit tests_@return the BLOB key of the prepared file_@throws IOException_thrown if an I/O error occurs while writing to the test file;private static BlobKey prepareTestFile(File file) throws IOException {__		MessageDigest md = BlobUtils.createMessageDigest()___		final byte[] buf = new byte[TEST_BUFFER_SIZE]__		for (int i = 0_ i < buf.length_ ++i) {_			buf[i] = (byte) (i % 128)__		}__		FileOutputStream fos = null__		try {_			fos = new FileOutputStream(file)___			for (int i = 0_ i < 20_ ++i) {_				fos.write(buf)__				md.update(buf)__			}__		} finally {_			if (fos != null) {_				fos.close()__			}_		}__		return new BlobKey(md.digest())__	};prepares,a,test,file,for,the,unit,tests,i,e,the,methods,fills,the,file,with,a,particular,byte,patterns,and,computes,the,file,s,blob,key,param,file,the,file,to,prepare,for,the,unit,tests,return,the,blob,key,of,the,prepared,file,throws,ioexception,thrown,if,an,i,o,error,occurs,while,writing,to,the,test,file;private,static,blob,key,prepare,test,file,file,file,throws,ioexception,message,digest,md,blob,utils,create,message,digest,final,byte,buf,new,byte,for,int,i,0,i,buf,length,i,buf,i,byte,i,128,file,output,stream,fos,null,try,fos,new,file,output,stream,file,for,int,i,0,i,20,i,fos,write,buf,md,update,buf,finally,if,fos,null,fos,close,return,new,blob,key,md,digest
BlobClientSslTest -> private static BlobKey prepareTestFile(File file) throws IOException;1495001929;Prepares a test file for the unit tests, i.e. the methods fills the file with a particular byte patterns and_computes the file's BLOB key.__@param file_the file to prepare for the unit tests_@return the BLOB key of the prepared file_@throws IOException_thrown if an I/O error occurs while writing to the test file;private static BlobKey prepareTestFile(File file) throws IOException {__		MessageDigest md = BlobUtils.createMessageDigest()___		final byte[] buf = new byte[TEST_BUFFER_SIZE]__		for (int i = 0_ i < buf.length_ ++i) {_			buf[i] = (byte) (i % 128)__		}__		FileOutputStream fos = null__		try {_			fos = new FileOutputStream(file)___			for (int i = 0_ i < 20_ ++i) {_				fos.write(buf)__				md.update(buf)__			}__		} finally {_			if (fos != null) {_				fos.close()__			}_		}__		return new BlobKey(md.digest())__	};prepares,a,test,file,for,the,unit,tests,i,e,the,methods,fills,the,file,with,a,particular,byte,patterns,and,computes,the,file,s,blob,key,param,file,the,file,to,prepare,for,the,unit,tests,return,the,blob,key,of,the,prepared,file,throws,ioexception,thrown,if,an,i,o,error,occurs,while,writing,to,the,test,file;private,static,blob,key,prepare,test,file,file,file,throws,ioexception,message,digest,md,blob,utils,create,message,digest,final,byte,buf,new,byte,for,int,i,0,i,buf,length,i,buf,i,byte,i,128,file,output,stream,fos,null,try,fos,new,file,output,stream,file,for,int,i,0,i,20,i,fos,write,buf,md,update,buf,finally,if,fos,null,fos,close,return,new,blob,key,md,digest
BlobClientSslTest -> private static BlobKey prepareTestFile(File file) throws IOException;1498894422;Prepares a test file for the unit tests, i.e. the methods fills the file with a particular byte patterns and_computes the file's BLOB key.__@param file_the file to prepare for the unit tests_@return the BLOB key of the prepared file_@throws IOException_thrown if an I/O error occurs while writing to the test file;private static BlobKey prepareTestFile(File file) throws IOException {__		MessageDigest md = BlobUtils.createMessageDigest()___		final byte[] buf = new byte[TEST_BUFFER_SIZE]__		for (int i = 0_ i < buf.length_ ++i) {_			buf[i] = (byte) (i % 128)__		}__		FileOutputStream fos = null__		try {_			fos = new FileOutputStream(file)___			for (int i = 0_ i < 20_ ++i) {_				fos.write(buf)__				md.update(buf)__			}__		} finally {_			if (fos != null) {_				fos.close()__			}_		}__		return new BlobKey(md.digest())__	};prepares,a,test,file,for,the,unit,tests,i,e,the,methods,fills,the,file,with,a,particular,byte,patterns,and,computes,the,file,s,blob,key,param,file,the,file,to,prepare,for,the,unit,tests,return,the,blob,key,of,the,prepared,file,throws,ioexception,thrown,if,an,i,o,error,occurs,while,writing,to,the,test,file;private,static,blob,key,prepare,test,file,file,file,throws,ioexception,message,digest,md,blob,utils,create,message,digest,final,byte,buf,new,byte,for,int,i,0,i,buf,length,i,buf,i,byte,i,128,file,output,stream,fos,null,try,fos,new,file,output,stream,file,for,int,i,0,i,20,i,fos,write,buf,md,update,buf,finally,if,fos,null,fos,close,return,new,blob,key,md,digest
BlobClientSslTest -> private static BlobKey prepareTestFile(File file) throws IOException;1499789965;Prepares a test file for the unit tests, i.e. the methods fills the file with a particular byte patterns and_computes the file's BLOB key.__@param file_the file to prepare for the unit tests_@return the BLOB key of the prepared file_@throws IOException_thrown if an I/O error occurs while writing to the test file;private static BlobKey prepareTestFile(File file) throws IOException {__		MessageDigest md = BlobUtils.createMessageDigest()___		final byte[] buf = new byte[TEST_BUFFER_SIZE]__		for (int i = 0_ i < buf.length_ ++i) {_			buf[i] = (byte) (i % 128)__		}__		FileOutputStream fos = null__		try {_			fos = new FileOutputStream(file)___			for (int i = 0_ i < 20_ ++i) {_				fos.write(buf)__				md.update(buf)__			}__		} finally {_			if (fos != null) {_				fos.close()__			}_		}__		return new BlobKey(md.digest())__	};prepares,a,test,file,for,the,unit,tests,i,e,the,methods,fills,the,file,with,a,particular,byte,patterns,and,computes,the,file,s,blob,key,param,file,the,file,to,prepare,for,the,unit,tests,return,the,blob,key,of,the,prepared,file,throws,ioexception,thrown,if,an,i,o,error,occurs,while,writing,to,the,test,file;private,static,blob,key,prepare,test,file,file,file,throws,ioexception,message,digest,md,blob,utils,create,message,digest,final,byte,buf,new,byte,for,int,i,0,i,buf,length,i,buf,i,byte,i,128,file,output,stream,fos,null,try,fos,new,file,output,stream,file,for,int,i,0,i,20,i,fos,write,buf,md,update,buf,finally,if,fos,null,fos,close,return,new,blob,key,md,digest
BlobClientSslTest -> @Test 	public void testRegularStream();1476696544;Tests the PUT/GET operations for regular (non-content-addressable) streams.;@Test_	public void testRegularStream() {__		final JobID jobID = JobID.generate()__		final String key = "testkey3"___		try {_			final File testFile = File.createTempFile("testfile", ".dat")__			testFile.deleteOnExit()__			prepareTestFile(testFile)___			BlobClient client = null__			InputStream is = null__			try {__				final InetSocketAddress serverAddress = new InetSocketAddress("localhost", BLOB_SSL_SERVER.getPort())__				client = new BlobClient(serverAddress, sslClientConfig)___				_				is = new FileInputStream(testFile)__				client.put(jobID, key, is)___				is.close()__				is = null___				_				is = client.get(jobID, key)__				validateGet(is, testFile)___			}_			finally {_				if (is != null) {_					is.close()__				}_				if (client != null) {_					client.close()__				}_			}__		}_		catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_	};tests,the,put,get,operations,for,regular,non,content,addressable,streams;test,public,void,test,regular,stream,final,job,id,job,id,job,id,generate,final,string,key,testkey3,try,final,file,test,file,file,create,temp,file,testfile,dat,test,file,delete,on,exit,prepare,test,file,test,file,blob,client,client,null,input,stream,is,null,try,final,inet,socket,address,server,address,new,inet,socket,address,localhost,get,port,client,new,blob,client,server,address,ssl,client,config,is,new,file,input,stream,test,file,client,put,job,id,key,is,is,close,is,null,is,client,get,job,id,key,validate,get,is,test,file,finally,if,is,null,is,close,if,client,null,client,close,catch,exception,e,e,print,stack,trace,fail,e,get,message
BlobClientSslTest -> @Test 	public void testRegularStream();1494690800;Tests the PUT/GET operations for regular (non-content-addressable) streams.;@Test_	public void testRegularStream() {__		final JobID jobID = JobID.generate()__		final String key = "testkey3"___		try {_			final File testFile = File.createTempFile("testfile", ".dat")__			testFile.deleteOnExit()__			prepareTestFile(testFile)___			BlobClient client = null__			InputStream is = null__			try {__				final InetSocketAddress serverAddress = new InetSocketAddress("localhost", BLOB_SSL_SERVER.getPort())__				client = new BlobClient(serverAddress, sslClientConfig)___				_				is = new FileInputStream(testFile)__				client.put(jobID, key, is)___				is.close()__				is = null___				_				is = client.get(jobID, key)__				validateGet(is, testFile)___			}_			finally {_				if (is != null) {_					is.close()__				}_				if (client != null) {_					client.close()__				}_			}__		}_		catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_	};tests,the,put,get,operations,for,regular,non,content,addressable,streams;test,public,void,test,regular,stream,final,job,id,job,id,job,id,generate,final,string,key,testkey3,try,final,file,test,file,file,create,temp,file,testfile,dat,test,file,delete,on,exit,prepare,test,file,test,file,blob,client,client,null,input,stream,is,null,try,final,inet,socket,address,server,address,new,inet,socket,address,localhost,get,port,client,new,blob,client,server,address,ssl,client,config,is,new,file,input,stream,test,file,client,put,job,id,key,is,is,close,is,null,is,client,get,job,id,key,validate,get,is,test,file,finally,if,is,null,is,close,if,client,null,client,close,catch,exception,e,e,print,stack,trace,fail,e,get,message
BlobClientSslTest -> @Test 	public void testRegularStream();1495001929;Tests the PUT/GET operations for regular (non-content-addressable) streams.;@Test_	public void testRegularStream() {__		final JobID jobID = JobID.generate()__		final String key = "testkey3"___		try {_			final File testFile = File.createTempFile("testfile", ".dat")__			testFile.deleteOnExit()__			prepareTestFile(testFile)___			BlobClient client = null__			InputStream is = null__			try {__				final InetSocketAddress serverAddress = new InetSocketAddress("localhost", BLOB_SSL_SERVER.getPort())__				client = new BlobClient(serverAddress, sslClientConfig)___				_				is = new FileInputStream(testFile)__				client.put(jobID, key, is)___				is.close()__				is = null___				_				is = client.get(jobID, key)__				validateGet(is, testFile)___			}_			finally {_				if (is != null) {_					is.close()__				}_				if (client != null) {_					client.close()__				}_			}__		}_		catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_	};tests,the,put,get,operations,for,regular,non,content,addressable,streams;test,public,void,test,regular,stream,final,job,id,job,id,job,id,generate,final,string,key,testkey3,try,final,file,test,file,file,create,temp,file,testfile,dat,test,file,delete,on,exit,prepare,test,file,test,file,blob,client,client,null,input,stream,is,null,try,final,inet,socket,address,server,address,new,inet,socket,address,localhost,get,port,client,new,blob,client,server,address,ssl,client,config,is,new,file,input,stream,test,file,client,put,job,id,key,is,is,close,is,null,is,client,get,job,id,key,validate,get,is,test,file,finally,if,is,null,is,close,if,client,null,client,close,catch,exception,e,e,print,stack,trace,fail,e,get,message
BlobClientSslTest -> @Test 	public void testRegularStream();1498894422;Tests the PUT/GET operations for regular (non-content-addressable) streams.;@Test_	public void testRegularStream() {__		final JobID jobID = JobID.generate()__		final String key = "testkey3"___		try {_			final File testFile = File.createTempFile("testfile", ".dat")__			testFile.deleteOnExit()__			prepareTestFile(testFile)___			BlobClient client = null__			InputStream is = null__			try {__				final InetSocketAddress serverAddress = new InetSocketAddress("localhost", BLOB_SSL_SERVER.getPort())__				client = new BlobClient(serverAddress, sslClientConfig)___				_				is = new FileInputStream(testFile)__				client.put(jobID, key, is)___				is.close()__				is = null___				_				is = client.get(jobID, key)__				validateGet(is, testFile)___			}_			finally {_				if (is != null) {_					is.close()__				}_				if (client != null) {_					client.close()__				}_			}__		}_		catch (Exception e) {_			e.printStackTrace()__			fail(e.getMessage())__		}_	};tests,the,put,get,operations,for,regular,non,content,addressable,streams;test,public,void,test,regular,stream,final,job,id,job,id,job,id,generate,final,string,key,testkey3,try,final,file,test,file,file,create,temp,file,testfile,dat,test,file,delete,on,exit,prepare,test,file,test,file,blob,client,client,null,input,stream,is,null,try,final,inet,socket,address,server,address,new,inet,socket,address,localhost,get,port,client,new,blob,client,server,address,ssl,client,config,is,new,file,input,stream,test,file,client,put,job,id,key,is,is,close,is,null,is,client,get,job,id,key,validate,get,is,test,file,finally,if,is,null,is,close,if,client,null,client,close,catch,exception,e,e,print,stack,trace,fail,e,get,message
BlobClientSslTest -> @Test(expected = IOException.class) 	public void testSSLClientFailure2() throws Exception;1502100084;Verify ssl client to non-ssl server failure;@Test(expected = IOException.class)_	public void testSSLClientFailure2() throws Exception {_		_		uploadJarFile(BLOB_NON_SSL_SERVER, sslClientConfig)__	};verify,ssl,client,to,non,ssl,server,failure;test,expected,ioexception,class,public,void,test,sslclient,failure2,throws,exception,upload,jar,file,ssl,client,config
BlobClientSslTest -> @Test(expected = IOException.class) 	public void testSSLClientFailure2() throws Exception;1507212387;Verify ssl client to non-ssl server failure.;@Test(expected = IOException.class)_	public void testSSLClientFailure2() throws Exception {_		_		uploadJarFile(BLOB_NON_SSL_SERVER, sslClientConfig)__	};verify,ssl,client,to,non,ssl,server,failure;test,expected,ioexception,class,public,void,test,sslclient,failure2,throws,exception,upload,jar,file,ssl,client,config
BlobClientSslTest -> @Test(expected = IOException.class) 	public void testSSLClientFailure2() throws Exception;1515428991;Verify ssl client to non-ssl server failure.;@Test(expected = IOException.class)_	public void testSSLClientFailure2() throws Exception {_		_		uploadJarFile(blobNonSslServer, sslClientConfig)__	};verify,ssl,client,to,non,ssl,server,failure;test,expected,ioexception,class,public,void,test,sslclient,failure2,throws,exception,upload,jar,file,blob,non,ssl,server,ssl,client,config
BlobClientSslTest -> @Test(expected = IOException.class) 	public void testSSLClientFailure2() throws Exception;1531721446;Verify ssl client to non-ssl server failure.;@Test(expected = IOException.class)_	public void testSSLClientFailure2() throws Exception {_		_		uploadJarFile(blobNonSslServer, sslClientConfig)__	};verify,ssl,client,to,non,ssl,server,failure;test,expected,ioexception,class,public,void,test,sslclient,failure2,throws,exception,upload,jar,file,blob,non,ssl,server,ssl,client,config
BlobClientSslTest -> @Test(expected = IOException.class) 	public void testSSLServerFailure() throws Exception;1502100084;Verify non-ssl client to ssl server failure;@Test(expected = IOException.class)_	public void testSSLServerFailure() throws Exception {_		_		uploadJarFile(BLOB_SSL_SERVER, clientConfig)__	};verify,non,ssl,client,to,ssl,server,failure;test,expected,ioexception,class,public,void,test,sslserver,failure,throws,exception,upload,jar,file,client,config
BlobClientSslTest -> @Test(expected = IOException.class) 	public void testSSLServerFailure() throws Exception;1507212387;Verify non-ssl client to ssl server failure.;@Test(expected = IOException.class)_	public void testSSLServerFailure() throws Exception {_		_		uploadJarFile(BLOB_SSL_SERVER, clientConfig)__	};verify,non,ssl,client,to,ssl,server,failure;test,expected,ioexception,class,public,void,test,sslserver,failure,throws,exception,upload,jar,file,client,config
BlobClientSslTest -> @Test(expected = IOException.class) 	public void testSSLServerFailure() throws Exception;1515428991;Verify non-ssl client to ssl server failure.;@Test(expected = IOException.class)_	public void testSSLServerFailure() throws Exception {_		_		uploadJarFile(blobSslServer, clientConfig)__	};verify,non,ssl,client,to,ssl,server,failure;test,expected,ioexception,class,public,void,test,sslserver,failure,throws,exception,upload,jar,file,blob,ssl,server,client,config
BlobClientSslTest -> @Test(expected = IOException.class) 	public void testSSLServerFailure() throws Exception;1531721446;Verify non-ssl client to ssl server failure.;@Test(expected = IOException.class)_	public void testSSLServerFailure() throws Exception {_		_		uploadJarFile(blobSslServer, clientConfig)__	};verify,non,ssl,client,to,ssl,server,failure;test,expected,ioexception,class,public,void,test,sslserver,failure,throws,exception,upload,jar,file,blob,ssl,server,client,config
BlobClientSslTest -> @Test 	public void testNonSSLConnection() throws Exception;1476696544;Verify non-ssl connection sanity;@Test_	public void testNonSSLConnection() throws Exception {_		uploadJarFile(BLOB_SERVER, clientConfig)__	};verify,non,ssl,connection,sanity;test,public,void,test,non,sslconnection,throws,exception,upload,jar,file,client,config
BlobClientSslTest -> @Test 	public void testNonSSLConnection() throws Exception;1494690800;Verify non-ssl connection sanity;@Test_	public void testNonSSLConnection() throws Exception {_		uploadJarFile(BLOB_SERVER, clientConfig)__	};verify,non,ssl,connection,sanity;test,public,void,test,non,sslconnection,throws,exception,upload,jar,file,client,config
BlobClientSslTest -> @Test 	public void testNonSSLConnection() throws Exception;1495001929;Verify non-ssl connection sanity;@Test_	public void testNonSSLConnection() throws Exception {_		uploadJarFile(BLOB_SERVER, clientConfig)__	};verify,non,ssl,connection,sanity;test,public,void,test,non,sslconnection,throws,exception,upload,jar,file,client,config
BlobClientSslTest -> @Test 	public void testNonSSLConnection() throws Exception;1498894422;Verify non-ssl connection sanity;@Test_	public void testNonSSLConnection() throws Exception {_		uploadJarFile(BLOB_SERVER, clientConfig)__	};verify,non,ssl,connection,sanity;test,public,void,test,non,sslconnection,throws,exception,upload,jar,file,client,config
BlobClientSslTest -> @Test 	public void testNonSSLConnection() throws Exception;1499789965;Verify non-ssl connection sanity;@Test_	public void testNonSSLConnection() throws Exception {_		uploadJarFile(BLOB_SERVER, clientConfig)__	};verify,non,ssl,connection,sanity;test,public,void,test,non,sslconnection,throws,exception,upload,jar,file,client,config
BlobClientSslTest -> @Test 	public void testNonSSLConnection() throws Exception;1502100084;Verify non-ssl connection sanity;@Test_	public void testNonSSLConnection() throws Exception {_		uploadJarFile(BLOB_SERVER, clientConfig)__	};verify,non,ssl,connection,sanity;test,public,void,test,non,sslconnection,throws,exception,upload,jar,file,client,config
BlobClientSslTest -> @Test 	public void testNonSSLConnection() throws Exception;1507212387;Verify non-ssl connection sanity.;@Test_	public void testNonSSLConnection() throws Exception {_		uploadJarFile(BLOB_SERVER, clientConfig)__	};verify,non,ssl,connection,sanity;test,public,void,test,non,sslconnection,throws,exception,upload,jar,file,client,config
BlobClientSslTest -> @Test 	public void testNonSSLConnection() throws Exception;1515428991;Verify non-ssl connection sanity.;@Test_	public void testNonSSLConnection() throws Exception {_		uploadJarFile(blobServer, clientConfig)__	};verify,non,ssl,connection,sanity;test,public,void,test,non,sslconnection,throws,exception,upload,jar,file,blob,server,client,config
BlobClientSslTest -> @Test 	public void testNonSSLConnection() throws Exception;1531721446;Verify non-ssl connection sanity.;@Test_	public void testNonSSLConnection() throws Exception {_		uploadJarFile(blobServer, clientConfig)__	};verify,non,ssl,connection,sanity;test,public,void,test,non,sslconnection,throws,exception,upload,jar,file,blob,server,client,config
BlobClientSslTest -> @BeforeClass 	public static void startNonSSLServer() throws IOException;1495001929;Starts the SSL disabled BLOB server.;@BeforeClass_	public static void startNonSSLServer() throws IOException {_		Configuration config = new Configuration()__		config.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__		config.setBoolean(BlobServerOptions.SSL_ENABLED, false)__		config.setString(ConfigConstants.SECURITY_SSL_KEYSTORE, "src/test/resources/local127.keystore")__		config.setString(ConfigConstants.SECURITY_SSL_KEYSTORE_PASSWORD, "password")__		config.setString(ConfigConstants.SECURITY_SSL_KEY_PASSWORD, "password")__		BLOB_SERVER = new BlobServer(config, new VoidBlobStore())___		clientConfig = new Configuration()__		clientConfig.setBoolean(ConfigConstants.SECURITY_SSL_ENABLED, true)__		clientConfig.setBoolean(BlobServerOptions.SSL_ENABLED, false)__		clientConfig.setString(ConfigConstants.SECURITY_SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		clientConfig.setString(ConfigConstants.SECURITY_SSL_TRUSTSTORE_PASSWORD, "password")__	};starts,the,ssl,disabled,blob,server;before,class,public,static,void,start,non,sslserver,throws,ioexception,configuration,config,new,configuration,config,set,boolean,config,constants,true,config,set,boolean,blob,server,options,false,config,set,string,config,constants,src,test,resources,local127,keystore,config,set,string,config,constants,password,config,set,string,config,constants,password,new,blob,server,config,new,void,blob,store,client,config,new,configuration,client,config,set,boolean,config,constants,true,client,config,set,boolean,blob,server,options,false,client,config,set,string,config,constants,src,test,resources,local127,truststore,client,config,set,string,config,constants,password
BlobClientSslTest -> @BeforeClass 	public static void startNonSSLServer() throws IOException;1498894422;Starts the SSL disabled BLOB server.;@BeforeClass_	public static void startNonSSLServer() throws IOException {_		Configuration config = new Configuration()__		config.setBoolean(SecurityOptions.SSL_ENABLED, true)__		config.setBoolean(BlobServerOptions.SSL_ENABLED, false)__		config.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		config.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		config.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")__		BLOB_SERVER = new BlobServer(config, new VoidBlobStore())___		clientConfig = new Configuration()__		clientConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		clientConfig.setBoolean(BlobServerOptions.SSL_ENABLED, false)__		clientConfig.setString(SecurityOptions.SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		clientConfig.setString(SecurityOptions.SSL_TRUSTSTORE_PASSWORD, "password")__	};starts,the,ssl,disabled,blob,server;before,class,public,static,void,start,non,sslserver,throws,ioexception,configuration,config,new,configuration,config,set,boolean,security,options,true,config,set,boolean,blob,server,options,false,config,set,string,security,options,src,test,resources,local127,keystore,config,set,string,security,options,password,config,set,string,security,options,password,new,blob,server,config,new,void,blob,store,client,config,new,configuration,client,config,set,boolean,security,options,true,client,config,set,boolean,blob,server,options,false,client,config,set,string,security,options,src,test,resources,local127,truststore,client,config,set,string,security,options,password
BlobClientSslTest -> @BeforeClass 	public static void startNonSSLServer() throws IOException;1499789965;Starts the SSL disabled BLOB server.;@BeforeClass_	public static void startNonSSLServer() throws IOException {_		Configuration config = new Configuration()__		config.setBoolean(SecurityOptions.SSL_ENABLED, true)__		config.setBoolean(BlobServerOptions.SSL_ENABLED, false)__		config.setString(SecurityOptions.SSL_KEYSTORE, "src/test/resources/local127.keystore")__		config.setString(SecurityOptions.SSL_KEYSTORE_PASSWORD, "password")__		config.setString(SecurityOptions.SSL_KEY_PASSWORD, "password")__		BLOB_SERVER = new BlobServer(config, new VoidBlobStore())___		clientConfig = new Configuration()__		clientConfig.setBoolean(SecurityOptions.SSL_ENABLED, true)__		clientConfig.setBoolean(BlobServerOptions.SSL_ENABLED, false)__		clientConfig.setString(SecurityOptions.SSL_TRUSTSTORE, "src/test/resources/local127.truststore")__		clientConfig.setString(SecurityOptions.SSL_TRUSTSTORE_PASSWORD, "password")__	};starts,the,ssl,disabled,blob,server;before,class,public,static,void,start,non,sslserver,throws,ioexception,configuration,config,new,configuration,config,set,boolean,security,options,true,config,set,boolean,blob,server,options,false,config,set,string,security,options,src,test,resources,local127,keystore,config,set,string,security,options,password,config,set,string,security,options,password,new,blob,server,config,new,void,blob,store,client,config,new,configuration,client,config,set,boolean,security,options,true,client,config,set,boolean,blob,server,options,false,client,config,set,string,security,options,src,test,resources,local127,truststore,client,config,set,string,security,options,password
BlobClientSslTest -> @Test 	public void testSSLServerFailure() throws Exception;1476696544;Verify non-ssl client to ssl server failure;@Test_	public void testSSLServerFailure() throws Exception {_		try {_			uploadJarFile(BLOB_SSL_SERVER, clientConfig)__			fail("Non-SSL client connected to ssl server")__		} catch (Exception e) {_			_		}_	};verify,non,ssl,client,to,ssl,server,failure;test,public,void,test,sslserver,failure,throws,exception,try,upload,jar,file,client,config,fail,non,ssl,client,connected,to,ssl,server,catch,exception,e
BlobClientSslTest -> @Test 	public void testSSLServerFailure() throws Exception;1494690800;Verify non-ssl client to ssl server failure;@Test_	public void testSSLServerFailure() throws Exception {_		try {_			uploadJarFile(BLOB_SSL_SERVER, clientConfig)__			fail("Non-SSL client connected to ssl server")__		} catch (Exception e) {_			_		}_	};verify,non,ssl,client,to,ssl,server,failure;test,public,void,test,sslserver,failure,throws,exception,try,upload,jar,file,client,config,fail,non,ssl,client,connected,to,ssl,server,catch,exception,e
BlobClientSslTest -> @Test 	public void testSSLServerFailure() throws Exception;1495001929;Verify non-ssl client to ssl server failure;@Test_	public void testSSLServerFailure() throws Exception {_		try {_			uploadJarFile(BLOB_SSL_SERVER, clientConfig)__			fail("Non-SSL client connected to ssl server")__		} catch (Exception e) {_			_		}_	};verify,non,ssl,client,to,ssl,server,failure;test,public,void,test,sslserver,failure,throws,exception,try,upload,jar,file,client,config,fail,non,ssl,client,connected,to,ssl,server,catch,exception,e
BlobClientSslTest -> @Test 	public void testSSLServerFailure() throws Exception;1498894422;Verify non-ssl client to ssl server failure;@Test_	public void testSSLServerFailure() throws Exception {_		try {_			uploadJarFile(BLOB_SSL_SERVER, clientConfig)__			fail("Non-SSL client connected to ssl server")__		} catch (Exception e) {_			_		}_	};verify,non,ssl,client,to,ssl,server,failure;test,public,void,test,sslserver,failure,throws,exception,try,upload,jar,file,client,config,fail,non,ssl,client,connected,to,ssl,server,catch,exception,e
BlobClientSslTest -> @Test 	public void testSSLServerFailure() throws Exception;1499789965;Verify non-ssl client to ssl server failure;@Test_	public void testSSLServerFailure() throws Exception {_		try {_			uploadJarFile(BLOB_SSL_SERVER, clientConfig)__			fail("Non-SSL client connected to ssl server")__		} catch (Exception e) {_			_		}_	};verify,non,ssl,client,to,ssl,server,failure;test,public,void,test,sslserver,failure,throws,exception,try,upload,jar,file,client,config,fail,non,ssl,client,connected,to,ssl,server,catch,exception,e
BlobClientSslTest -> @AfterClass 	public static void stopServers();1476696544;Shuts the BLOB server down.;@AfterClass_	public static void stopServers() {_		if (BLOB_SSL_SERVER != null) {_			BLOB_SSL_SERVER.shutdown()__		}__		if (BLOB_SERVER != null) {_			BLOB_SERVER.shutdown()__		}_	};shuts,the,blob,server,down;after,class,public,static,void,stop,servers,if,null,shutdown,if,null,shutdown
BlobClientSslTest -> @AfterClass 	public static void stopServers();1494690800;Shuts the BLOB server down.;@AfterClass_	public static void stopServers() {_		if (BLOB_SSL_SERVER != null) {_			BLOB_SSL_SERVER.shutdown()__		}__		if (BLOB_SERVER != null) {_			BLOB_SERVER.shutdown()__		}_	};shuts,the,blob,server,down;after,class,public,static,void,stop,servers,if,null,shutdown,if,null,shutdown
BlobClientSslTest -> @Test 	public void testSSLClientFailure() throws Exception;1476696544;Verify ssl client to non-ssl server failure;@Test_	public void testSSLClientFailure() throws Exception {_		try {_			uploadJarFile(BLOB_SERVER, sslClientConfig)__			fail("SSL client connected to non-ssl server")__		} catch (Exception e) {_			_		}_	};verify,ssl,client,to,non,ssl,server,failure;test,public,void,test,sslclient,failure,throws,exception,try,upload,jar,file,ssl,client,config,fail,ssl,client,connected,to,non,ssl,server,catch,exception,e
BlobClientSslTest -> @Test 	public void testSSLClientFailure() throws Exception;1494690800;Verify ssl client to non-ssl server failure;@Test_	public void testSSLClientFailure() throws Exception {_		try {_			uploadJarFile(BLOB_SERVER, sslClientConfig)__			fail("SSL client connected to non-ssl server")__		} catch (Exception e) {_			_		}_	};verify,ssl,client,to,non,ssl,server,failure;test,public,void,test,sslclient,failure,throws,exception,try,upload,jar,file,ssl,client,config,fail,ssl,client,connected,to,non,ssl,server,catch,exception,e
BlobClientSslTest -> @Test 	public void testSSLClientFailure() throws Exception;1495001929;Verify ssl client to non-ssl server failure;@Test_	public void testSSLClientFailure() throws Exception {_		try {_			uploadJarFile(BLOB_SERVER, sslClientConfig)__			fail("SSL client connected to non-ssl server")__		} catch (Exception e) {_			_		}_	};verify,ssl,client,to,non,ssl,server,failure;test,public,void,test,sslclient,failure,throws,exception,try,upload,jar,file,ssl,client,config,fail,ssl,client,connected,to,non,ssl,server,catch,exception,e
BlobClientSslTest -> @Test 	public void testSSLClientFailure() throws Exception;1498894422;Verify ssl client to non-ssl server failure;@Test_	public void testSSLClientFailure() throws Exception {_		try {_			uploadJarFile(BLOB_SERVER, sslClientConfig)__			fail("SSL client connected to non-ssl server")__		} catch (Exception e) {_			_		}_	};verify,ssl,client,to,non,ssl,server,failure;test,public,void,test,sslclient,failure,throws,exception,try,upload,jar,file,ssl,client,config,fail,ssl,client,connected,to,non,ssl,server,catch,exception,e
BlobClientSslTest -> @Test 	public void testSSLClientFailure() throws Exception;1499789965;Verify ssl client to non-ssl server failure;@Test_	public void testSSLClientFailure() throws Exception {_		try {_			uploadJarFile(BLOB_SERVER, sslClientConfig)__			fail("SSL client connected to non-ssl server")__		} catch (Exception e) {_			_		}_	};verify,ssl,client,to,non,ssl,server,failure;test,public,void,test,sslclient,failure,throws,exception,try,upload,jar,file,ssl,client,config,fail,ssl,client,connected,to,non,ssl,server,catch,exception,e
BlobClientSslTest -> @AfterClass 	public static void stopServers() throws IOException;1495001929;Shuts the BLOB server down.;@AfterClass_	public static void stopServers() throws IOException {_		if (BLOB_SSL_SERVER != null) {_			BLOB_SSL_SERVER.close()__		}__		if (BLOB_SERVER != null) {_			BLOB_SERVER.close()__		}_	};shuts,the,blob,server,down;after,class,public,static,void,stop,servers,throws,ioexception,if,null,close,if,null,close
BlobClientSslTest -> @AfterClass 	public static void stopServers() throws IOException;1498894422;Shuts the BLOB server down.;@AfterClass_	public static void stopServers() throws IOException {_		if (BLOB_SSL_SERVER != null) {_			BLOB_SSL_SERVER.close()__		}__		if (BLOB_SERVER != null) {_			BLOB_SERVER.close()__		}_	};shuts,the,blob,server,down;after,class,public,static,void,stop,servers,throws,ioexception,if,null,close,if,null,close
BlobClientSslTest -> @AfterClass 	public static void stopServers() throws IOException;1499789965;Shuts the BLOB server down.;@AfterClass_	public static void stopServers() throws IOException {_		if (BLOB_SSL_SERVER != null) {_			BLOB_SSL_SERVER.close()__		}__		if (BLOB_SERVER != null) {_			BLOB_SERVER.close()__		}_	};shuts,the,blob,server,down;after,class,public,static,void,stop,servers,throws,ioexception,if,null,close,if,null,close
BlobClientSslTest -> @AfterClass 	public static void stopServers() throws IOException;1502100084;Shuts the BLOB server down.;@AfterClass_	public static void stopServers() throws IOException {_		if (BLOB_SSL_SERVER != null) {_			BLOB_SSL_SERVER.close()__		}_		if (BLOB_NON_SSL_SERVER != null) {_			BLOB_NON_SSL_SERVER.close()__		}_	};shuts,the,blob,server,down;after,class,public,static,void,stop,servers,throws,ioexception,if,null,close,if,null,close
BlobClientSslTest -> @AfterClass 	public static void stopServers() throws IOException;1507212387;Shuts the BLOB server down.;@AfterClass_	public static void stopServers() throws IOException {_		if (BLOB_SSL_SERVER != null) {_			BLOB_SSL_SERVER.close()__		}_		if (BLOB_NON_SSL_SERVER != null) {_			BLOB_NON_SSL_SERVER.close()__		}_	};shuts,the,blob,server,down;after,class,public,static,void,stop,servers,throws,ioexception,if,null,close,if,null,close
BlobClientSslTest -> @AfterClass 	public static void stopServers() throws IOException;1515428991;Shuts the BLOB server down.;@AfterClass_	public static void stopServers() throws IOException {_		if (blobSslServer != null) {_			blobSslServer.close()__		}_		if (blobNonSslServer != null) {_			blobNonSslServer.close()__		}_	};shuts,the,blob,server,down;after,class,public,static,void,stop,servers,throws,ioexception,if,blob,ssl,server,null,blob,ssl,server,close,if,blob,non,ssl,server,null,blob,non,ssl,server,close
BlobClientSslTest -> @AfterClass 	public static void stopServers() throws IOException;1531721446;Shuts the BLOB server down.;@AfterClass_	public static void stopServers() throws IOException {_		if (blobSslServer != null) {_			blobSslServer.close()__		}_		if (blobNonSslServer != null) {_			blobNonSslServer.close()__		}_	};shuts,the,blob,server,down;after,class,public,static,void,stop,servers,throws,ioexception,if,blob,ssl,server,null,blob,ssl,server,close,if,blob,non,ssl,server,null,blob,non,ssl,server,close
BlobClientSslTest -> private static void validateGet(final InputStream inputStream, final File file) throws IOException;1476696544;Validates the result of a GET operation by comparing the data from the retrieved input stream to the content of_the specified file.__@param inputStream_the input stream returned from the GET operation_@param file_the file to compare the input stream's data to_@throws IOException_thrown if an I/O error occurs while reading the input stream or the file;private static void validateGet(final InputStream inputStream, final File file) throws IOException {__		InputStream inputStream2 = null__		try {__			inputStream2 = new FileInputStream(file)___			while (true) {__				final int r1 = inputStream.read()__				final int r2 = inputStream2.read()___				assertEquals(r2, r1)___				if (r1 < 0) {_					break__				}_			}__		} finally {_			if (inputStream2 != null) {_				inputStream2.close()__			}_		}__	};validates,the,result,of,a,get,operation,by,comparing,the,data,from,the,retrieved,input,stream,to,the,content,of,the,specified,file,param,input,stream,the,input,stream,returned,from,the,get,operation,param,file,the,file,to,compare,the,input,stream,s,data,to,throws,ioexception,thrown,if,an,i,o,error,occurs,while,reading,the,input,stream,or,the,file;private,static,void,validate,get,final,input,stream,input,stream,final,file,file,throws,ioexception,input,stream,input,stream2,null,try,input,stream2,new,file,input,stream,file,while,true,final,int,r1,input,stream,read,final,int,r2,input,stream2,read,assert,equals,r2,r1,if,r1,0,break,finally,if,input,stream2,null,input,stream2,close
BlobClientSslTest -> private static void validateGet(final InputStream inputStream, final File file) throws IOException;1494690800;Validates the result of a GET operation by comparing the data from the retrieved input stream to the content of_the specified file.__@param inputStream_the input stream returned from the GET operation_@param file_the file to compare the input stream's data to_@throws IOException_thrown if an I/O error occurs while reading the input stream or the file;private static void validateGet(final InputStream inputStream, final File file) throws IOException {__		InputStream inputStream2 = null__		try {__			inputStream2 = new FileInputStream(file)___			while (true) {__				final int r1 = inputStream.read()__				final int r2 = inputStream2.read()___				assertEquals(r2, r1)___				if (r1 < 0) {_					break__				}_			}__		} finally {_			if (inputStream2 != null) {_				inputStream2.close()__			}_		}__	};validates,the,result,of,a,get,operation,by,comparing,the,data,from,the,retrieved,input,stream,to,the,content,of,the,specified,file,param,input,stream,the,input,stream,returned,from,the,get,operation,param,file,the,file,to,compare,the,input,stream,s,data,to,throws,ioexception,thrown,if,an,i,o,error,occurs,while,reading,the,input,stream,or,the,file;private,static,void,validate,get,final,input,stream,input,stream,final,file,file,throws,ioexception,input,stream,input,stream2,null,try,input,stream2,new,file,input,stream,file,while,true,final,int,r1,input,stream,read,final,int,r2,input,stream2,read,assert,equals,r2,r1,if,r1,0,break,finally,if,input,stream2,null,input,stream2,close
BlobClientSslTest -> private static void validateGet(final InputStream inputStream, final File file) throws IOException;1495001929;Validates the result of a GET operation by comparing the data from the retrieved input stream to the content of_the specified file.__@param inputStream_the input stream returned from the GET operation_@param file_the file to compare the input stream's data to_@throws IOException_thrown if an I/O error occurs while reading the input stream or the file;private static void validateGet(final InputStream inputStream, final File file) throws IOException {__		InputStream inputStream2 = null__		try {__			inputStream2 = new FileInputStream(file)___			while (true) {__				final int r1 = inputStream.read()__				final int r2 = inputStream2.read()___				assertEquals(r2, r1)___				if (r1 < 0) {_					break__				}_			}__		} finally {_			if (inputStream2 != null) {_				inputStream2.close()__			}_		}__	};validates,the,result,of,a,get,operation,by,comparing,the,data,from,the,retrieved,input,stream,to,the,content,of,the,specified,file,param,input,stream,the,input,stream,returned,from,the,get,operation,param,file,the,file,to,compare,the,input,stream,s,data,to,throws,ioexception,thrown,if,an,i,o,error,occurs,while,reading,the,input,stream,or,the,file;private,static,void,validate,get,final,input,stream,input,stream,final,file,file,throws,ioexception,input,stream,input,stream2,null,try,input,stream2,new,file,input,stream,file,while,true,final,int,r1,input,stream,read,final,int,r2,input,stream2,read,assert,equals,r2,r1,if,r1,0,break,finally,if,input,stream2,null,input,stream2,close
BlobClientSslTest -> private static void validateGet(final InputStream inputStream, final File file) throws IOException;1498894422;Validates the result of a GET operation by comparing the data from the retrieved input stream to the content of_the specified file.__@param inputStream_the input stream returned from the GET operation_@param file_the file to compare the input stream's data to_@throws IOException_thrown if an I/O error occurs while reading the input stream or the file;private static void validateGet(final InputStream inputStream, final File file) throws IOException {__		InputStream inputStream2 = null__		try {__			inputStream2 = new FileInputStream(file)___			while (true) {__				final int r1 = inputStream.read()__				final int r2 = inputStream2.read()___				assertEquals(r2, r1)___				if (r1 < 0) {_					break__				}_			}__		} finally {_			if (inputStream2 != null) {_				inputStream2.close()__			}_		}__	};validates,the,result,of,a,get,operation,by,comparing,the,data,from,the,retrieved,input,stream,to,the,content,of,the,specified,file,param,input,stream,the,input,stream,returned,from,the,get,operation,param,file,the,file,to,compare,the,input,stream,s,data,to,throws,ioexception,thrown,if,an,i,o,error,occurs,while,reading,the,input,stream,or,the,file;private,static,void,validate,get,final,input,stream,input,stream,final,file,file,throws,ioexception,input,stream,input,stream2,null,try,input,stream2,new,file,input,stream,file,while,true,final,int,r1,input,stream,read,final,int,r2,input,stream2,read,assert,equals,r2,r1,if,r1,0,break,finally,if,input,stream2,null,input,stream2,close
BlobClientSslTest -> private static void validateGet(final InputStream inputStream, final File file) throws IOException;1499789965;Validates the result of a GET operation by comparing the data from the retrieved input stream to the content of_the specified file.__@param inputStream_the input stream returned from the GET operation_@param file_the file to compare the input stream's data to_@throws IOException_thrown if an I/O error occurs while reading the input stream or the file;private static void validateGet(final InputStream inputStream, final File file) throws IOException {__		InputStream inputStream2 = null__		try {__			inputStream2 = new FileInputStream(file)___			while (true) {__				final int r1 = inputStream.read()__				final int r2 = inputStream2.read()___				assertEquals(r2, r1)___				if (r1 < 0) {_					break__				}_			}__		} finally {_			if (inputStream2 != null) {_				inputStream2.close()__			}_		}__	};validates,the,result,of,a,get,operation,by,comparing,the,data,from,the,retrieved,input,stream,to,the,content,of,the,specified,file,param,input,stream,the,input,stream,returned,from,the,get,operation,param,file,the,file,to,compare,the,input,stream,s,data,to,throws,ioexception,thrown,if,an,i,o,error,occurs,while,reading,the,input,stream,or,the,file;private,static,void,validate,get,final,input,stream,input,stream,final,file,file,throws,ioexception,input,stream,input,stream2,null,try,input,stream2,new,file,input,stream,file,while,true,final,int,r1,input,stream,read,final,int,r2,input,stream2,read,assert,equals,r2,r1,if,r1,0,break,finally,if,input,stream2,null,input,stream2,close
BlobClientSslTest -> @Test 	public void testUploadJarFilesHelper() throws Exception;1476696544;Verify ssl client to ssl server upload;@Test_	public void testUploadJarFilesHelper() throws Exception {_		uploadJarFile(BLOB_SSL_SERVER, sslClientConfig)__	};verify,ssl,client,to,ssl,server,upload;test,public,void,test,upload,jar,files,helper,throws,exception,upload,jar,file,ssl,client,config
BlobClientSslTest -> @Test 	public void testUploadJarFilesHelper() throws Exception;1494690800;Verify ssl client to ssl server upload;@Test_	public void testUploadJarFilesHelper() throws Exception {_		uploadJarFile(BLOB_SSL_SERVER, sslClientConfig)__	};verify,ssl,client,to,ssl,server,upload;test,public,void,test,upload,jar,files,helper,throws,exception,upload,jar,file,ssl,client,config
BlobClientSslTest -> @Test 	public void testUploadJarFilesHelper() throws Exception;1495001929;Verify ssl client to ssl server upload;@Test_	public void testUploadJarFilesHelper() throws Exception {_		uploadJarFile(BLOB_SSL_SERVER, sslClientConfig)__	};verify,ssl,client,to,ssl,server,upload;test,public,void,test,upload,jar,files,helper,throws,exception,upload,jar,file,ssl,client,config
BlobClientSslTest -> @Test 	public void testUploadJarFilesHelper() throws Exception;1498894422;Verify ssl client to ssl server upload;@Test_	public void testUploadJarFilesHelper() throws Exception {_		uploadJarFile(BLOB_SSL_SERVER, sslClientConfig)__	};verify,ssl,client,to,ssl,server,upload;test,public,void,test,upload,jar,files,helper,throws,exception,upload,jar,file,ssl,client,config
BlobClientSslTest -> @Test 	public void testUploadJarFilesHelper() throws Exception;1499789965;Verify ssl client to ssl server upload;@Test_	public void testUploadJarFilesHelper() throws Exception {_		uploadJarFile(BLOB_SSL_SERVER, sslClientConfig)__	};verify,ssl,client,to,ssl,server,upload;test,public,void,test,upload,jar,files,helper,throws,exception,upload,jar,file,ssl,client,config
BlobClientSslTest -> @Test 	public void testUploadJarFilesHelper() throws Exception;1502100084;Verify ssl client to ssl server upload;@Test_	public void testUploadJarFilesHelper() throws Exception {_		uploadJarFile(BLOB_SSL_SERVER, sslClientConfig)__	};verify,ssl,client,to,ssl,server,upload;test,public,void,test,upload,jar,files,helper,throws,exception,upload,jar,file,ssl,client,config
BlobClientSslTest -> @Test 	public void testUploadJarFilesHelper() throws Exception;1507212387;Verify ssl client to ssl server upload.;@Test_	public void testUploadJarFilesHelper() throws Exception {_		uploadJarFile(BLOB_SSL_SERVER, sslClientConfig)__	};verify,ssl,client,to,ssl,server,upload;test,public,void,test,upload,jar,files,helper,throws,exception,upload,jar,file,ssl,client,config
BlobClientSslTest -> @Test 	public void testUploadJarFilesHelper() throws Exception;1515428991;Verify ssl client to ssl server upload.;@Test_	public void testUploadJarFilesHelper() throws Exception {_		uploadJarFile(blobSslServer, sslClientConfig)__	};verify,ssl,client,to,ssl,server,upload;test,public,void,test,upload,jar,files,helper,throws,exception,upload,jar,file,blob,ssl,server,ssl,client,config
BlobClientSslTest -> @Test 	public void testUploadJarFilesHelper() throws Exception;1531721446;Verify ssl client to ssl server upload.;@Test_	public void testUploadJarFilesHelper() throws Exception {_		uploadJarFile(blobSslServer, sslClientConfig)__	};verify,ssl,client,to,ssl,server,upload;test,public,void,test,upload,jar,files,helper,throws,exception,upload,jar,file,blob,ssl,server,ssl,client,config
BlobClientSslTest -> @Test 	public void testNonSSLConnection3() throws Exception;1502100084;Verify non-ssl connection sanity;@Test_	public void testNonSSLConnection3() throws Exception {_		uploadJarFile(BLOB_NON_SSL_SERVER, clientConfig)__	};verify,non,ssl,connection,sanity;test,public,void,test,non,sslconnection3,throws,exception,upload,jar,file,client,config
BlobClientSslTest -> @Test 	public void testNonSSLConnection3() throws Exception;1507212387;Verify non-ssl connection sanity.;@Test_	public void testNonSSLConnection3() throws Exception {_		uploadJarFile(BLOB_NON_SSL_SERVER, clientConfig)__	};verify,non,ssl,connection,sanity;test,public,void,test,non,sslconnection3,throws,exception,upload,jar,file,client,config
BlobClientSslTest -> @Test 	public void testNonSSLConnection3() throws Exception;1515428991;Verify non-ssl connection sanity.;@Test_	public void testNonSSLConnection3() throws Exception {_		uploadJarFile(blobNonSslServer, clientConfig)__	};verify,non,ssl,connection,sanity;test,public,void,test,non,sslconnection3,throws,exception,upload,jar,file,blob,non,ssl,server,client,config
BlobClientSslTest -> @Test 	public void testNonSSLConnection3() throws Exception;1531721446;Verify non-ssl connection sanity.;@Test_	public void testNonSSLConnection3() throws Exception {_		uploadJarFile(blobNonSslServer, clientConfig)__	};verify,non,ssl,connection,sanity;test,public,void,test,non,sslconnection3,throws,exception,upload,jar,file,blob,non,ssl,server,client,config
BlobClientSslTest -> @Test 	public void testNonSSLConnection4() throws Exception;1502100084;Verify non-ssl connection sanity;@Test_	public void testNonSSLConnection4() throws Exception {_		uploadJarFile(BLOB_NON_SSL_SERVER, nonSslClientConfig)__	};verify,non,ssl,connection,sanity;test,public,void,test,non,sslconnection4,throws,exception,upload,jar,file,non,ssl,client,config
BlobClientSslTest -> @Test 	public void testNonSSLConnection4() throws Exception;1507212387;Verify non-ssl connection sanity.;@Test_	public void testNonSSLConnection4() throws Exception {_		uploadJarFile(BLOB_NON_SSL_SERVER, nonSslClientConfig)__	};verify,non,ssl,connection,sanity;test,public,void,test,non,sslconnection4,throws,exception,upload,jar,file,non,ssl,client,config
BlobClientSslTest -> @Test 	public void testNonSSLConnection4() throws Exception;1515428991;Verify non-ssl connection sanity.;@Test_	public void testNonSSLConnection4() throws Exception {_		uploadJarFile(blobNonSslServer, nonSslClientConfig)__	};verify,non,ssl,connection,sanity;test,public,void,test,non,sslconnection4,throws,exception,upload,jar,file,blob,non,ssl,server,non,ssl,client,config
BlobClientSslTest -> @Test 	public void testNonSSLConnection4() throws Exception;1531721446;Verify non-ssl connection sanity.;@Test_	public void testNonSSLConnection4() throws Exception {_		uploadJarFile(blobNonSslServer, nonSslClientConfig)__	};verify,non,ssl,connection,sanity;test,public,void,test,non,sslconnection4,throws,exception,upload,jar,file,blob,non,ssl,server,non,ssl,client,config
BlobClientSslTest -> @Test 	public void testNonSSLConnection2() throws Exception;1502100084;Verify non-ssl connection sanity;@Test_	public void testNonSSLConnection2() throws Exception {_		uploadJarFile(BLOB_SERVER, nonSslClientConfig)__	};verify,non,ssl,connection,sanity;test,public,void,test,non,sslconnection2,throws,exception,upload,jar,file,non,ssl,client,config
BlobClientSslTest -> @Test 	public void testNonSSLConnection2() throws Exception;1507212387;Verify non-ssl connection sanity.;@Test_	public void testNonSSLConnection2() throws Exception {_		uploadJarFile(BLOB_SERVER, nonSslClientConfig)__	};verify,non,ssl,connection,sanity;test,public,void,test,non,sslconnection2,throws,exception,upload,jar,file,non,ssl,client,config
BlobClientSslTest -> @Test 	public void testNonSSLConnection2() throws Exception;1515428991;Verify non-ssl connection sanity.;@Test_	public void testNonSSLConnection2() throws Exception {_		uploadJarFile(blobServer, nonSslClientConfig)__	};verify,non,ssl,connection,sanity;test,public,void,test,non,sslconnection2,throws,exception,upload,jar,file,blob,server,non,ssl,client,config
BlobClientSslTest -> @Test 	public void testNonSSLConnection2() throws Exception;1531721446;Verify non-ssl connection sanity.;@Test_	public void testNonSSLConnection2() throws Exception {_		uploadJarFile(blobServer, nonSslClientConfig)__	};verify,non,ssl,connection,sanity;test,public,void,test,non,sslconnection2,throws,exception,upload,jar,file,blob,server,non,ssl,client,config
