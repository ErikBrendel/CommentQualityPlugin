commented;modifiers;parameterAmount;loc;comment;code
false;public;0;45;;@Test public void testSchema() {     final Map<String, String> properties = new Csv().schema(SCHEMA).fieldDelimiter('.').lineDelimiter("\r\n").quoteCharacter('\'').allowComments().ignoreParseErrors().arrayElementDelimiter("|").escapeCharacter('\\').nullLiteral("n/a").toProperties().     final CsvRowDeserializationSchema expectedDeser = new CsvRowDeserializationSchema.Builder(SCHEMA).setFieldDelimiter('.').setQuoteCharacter('\'').setAllowComments(true).setIgnoreParseErrors(true).setArrayElementDelimiter("|").setEscapeCharacter('\\').setNullLiteral("n/a").build().     final DeserializationSchema<?> actualDeser = TableFactoryService.find(DeserializationSchemaFactory.class, properties).createDeserializationSchema(properties).     assertEquals(expectedDeser, actualDeser).     final CsvRowSerializationSchema expectedSer = new CsvRowSerializationSchema.Builder(SCHEMA).setFieldDelimiter('.').setLineDelimiter("\r\n").setQuoteCharacter('\'').setArrayElementDelimiter("|").setEscapeCharacter('\\').setNullLiteral("n/a").build().     final SerializationSchema<?> actualSer = TableFactoryService.find(SerializationSchemaFactory.class, properties).createSerializationSchema(properties).     assertEquals(expectedSer, actualSer). }
false;public;0;21;;@Test public void testSchemaDerivation() {     final Map<String, String> properties = new HashMap<>().     properties.putAll(new Schema().schema(TableSchema.fromTypeInfo(SCHEMA)).toProperties()).     properties.putAll(new Csv().deriveSchema().toProperties()).     final CsvRowSerializationSchema expectedSer = new CsvRowSerializationSchema.Builder(SCHEMA).build().     final CsvRowDeserializationSchema expectedDeser = new CsvRowDeserializationSchema.Builder(SCHEMA).build().     final SerializationSchema<?> actualSer = TableFactoryService.find(SerializationSchemaFactory.class, properties).createSerializationSchema(properties).     assertEquals(expectedSer, actualSer).     final DeserializationSchema<?> actualDeser = TableFactoryService.find(DeserializationSchemaFactory.class, properties).createDeserializationSchema(properties).     assertEquals(expectedDeser, actualDeser). }
