commented;modifiers;parameterAmount;loc;comment;code
false;public;0;30;;@Test @SuppressWarnings("unchecked") public void testReadMapFromNestedRecord() throws IOException {     Tuple3<Class<? extends SpecificRecord>, SpecificRecord, Row> nested = TestUtil.getNestedRecordTestData().     Path path = TestUtil.createTempParquetFile(tempRoot.getRoot(), TestUtil.NESTED_SCHEMA, Collections.singletonList(nested.f1)).     MessageType nestedType = SCHEMA_CONVERTER.convert(TestUtil.NESTED_SCHEMA).     ParquetMapInputFormat inputFormat = new ParquetMapInputFormat(path, nestedType).     inputFormat.setRuntimeContext(TestUtil.getMockRuntimeContext()).     FileInputSplit[] splits = inputFormat.createInputSplits(1).     assertEquals(1, splits.length).     inputFormat.open(splits[0]).     Map map = inputFormat.nextRecord(null).     assertNotNull(map).     assertEquals(5, map.size()).     assertArrayEquals((Long[]) nested.f2.getField(3), (Long[]) map.get("arr")).     assertArrayEquals((String[]) nested.f2.getField(4), (String[]) map.get("strArray")).     Map<String, String> mapItem = (Map<String, String>) ((Map) map.get("nestedMap")).get("mapItem").     assertEquals(2, mapItem.size()).     assertEquals("map", mapItem.get("type")).     assertEquals("hashMap", mapItem.get("value")).     List<Map<String, String>> nestedArray = (List<Map<String, String>>) map.get("nestedArray").     assertEquals(1, nestedArray.size()).     assertEquals("color", nestedArray.get(0).get("type")).     assertEquals("yellow", nestedArray.get(0).get("value")). }
false;public;0;24;;@Test @SuppressWarnings("unchecked") public void testProjectedReadMapFromNestedRecord() throws IOException {     Tuple3<Class<? extends SpecificRecord>, SpecificRecord, Row> nested = TestUtil.getNestedRecordTestData().     Path path = TestUtil.createTempParquetFile(tempRoot.getRoot(), TestUtil.NESTED_SCHEMA, Collections.singletonList(nested.f1)).     MessageType nestedType = SCHEMA_CONVERTER.convert(TestUtil.NESTED_SCHEMA).     ParquetMapInputFormat inputFormat = new ParquetMapInputFormat(path, nestedType).     inputFormat.selectFields(Collections.singletonList("nestedMap").toArray(new String[0])).     inputFormat.setRuntimeContext(TestUtil.getMockRuntimeContext()).     FileInputSplit[] splits = inputFormat.createInputSplits(1).     assertEquals(1, splits.length).     inputFormat.open(splits[0]).     Map map = inputFormat.nextRecord(null).     assertNotNull(map).     assertEquals(1, map.size()).     Map<String, String> mapItem = (Map<String, String>) ((Map) map.get("nestedMap")).get("mapItem").     assertEquals(2, mapItem.size()).     assertEquals("map", mapItem.get("type")).     assertEquals("hashMap", mapItem.get("value")). }
