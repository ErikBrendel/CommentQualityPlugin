commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testSchema() {     final Map<String, String> properties = toMap(new Json().schema(SCHEMA).failOnMissingField(false)).     testSchemaSerializationSchema(properties).     testSchemaDeserializationSchema(properties). }
false;public;0;11;;@Test public void testJsonSchema() {     final Map<String, String> properties = toMap(new Json().jsonSchema(JSON_SCHEMA).failOnMissingField(true)).     testJsonSchemaSerializationSchema(properties).     testJsonSchemaDeserializationSchema(properties). }
false;public;0;14;;@Test public void testSchemaDerivation() {     final Map<String, String> properties = toMap(new Schema().field("field1", Types.BOOLEAN()).field("field2", Types.INT()).field("proctime", Types.SQL_TIMESTAMP()).proctime(), new Json().deriveSchema()).     testSchemaSerializationSchema(properties).     testSchemaDeserializationSchema(properties). }
false;private;1;8;;private void testSchemaDeserializationSchema(Map<String, String> properties) {     final DeserializationSchema<?> actual2 = TableFactoryService.find(DeserializationSchemaFactory.class, properties).createDeserializationSchema(properties).     final JsonRowDeserializationSchema expected2 = new JsonRowDeserializationSchema(SCHEMA).     expected2.setFailOnMissingField(false).     assertEquals(expected2, actual2). }
false;private;1;7;;private void testSchemaSerializationSchema(Map<String, String> properties) {     final SerializationSchema<?> actual1 = TableFactoryService.find(SerializationSchemaFactory.class, properties).createSerializationSchema(properties).     final SerializationSchema<?> expected1 = new JsonRowSerializationSchema(SCHEMA).     assertEquals(expected1, actual1). }
false;private;1;8;;private void testJsonSchemaDeserializationSchema(Map<String, String> properties) {     final DeserializationSchema<?> actual2 = TableFactoryService.find(DeserializationSchemaFactory.class, properties).createDeserializationSchema(properties).     final JsonRowDeserializationSchema expected2 = new JsonRowDeserializationSchema(JSON_SCHEMA).     expected2.setFailOnMissingField(true).     assertEquals(expected2, actual2). }
false;private;1;7;;private void testJsonSchemaSerializationSchema(Map<String, String> properties) {     final SerializationSchema<?> actual1 = TableFactoryService.find(SerializationSchemaFactory.class, properties).createSerializationSchema(properties).     final SerializationSchema<?> expected1 = new JsonRowSerializationSchema(JSON_SCHEMA).     assertEquals(expected1, actual1). }
false;private,static;1;7;;private static Map<String, String> toMap(Descriptor... desc) {     final DescriptorProperties descriptorProperties = new DescriptorProperties().     for (Descriptor d : desc) {         descriptorProperties.putProperties(d.toProperties()).     }     return descriptorProperties.asMap(). }
