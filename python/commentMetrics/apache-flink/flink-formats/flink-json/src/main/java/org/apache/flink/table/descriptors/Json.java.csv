# id;timestamp;commentText;codeText;commentWords;codeWords
Json -> public Json failOnMissingField(boolean failOnMissingField);1519754754;Sets flag whether to fail if a field is missing or not.__@param failOnMissingField If set to true, the operation fails if there is a missing field._If set to false, a missing field is set to null.;public Json failOnMissingField(boolean failOnMissingField) {_		this.failOnMissingField = failOnMissingField__		return this__	};sets,flag,whether,to,fail,if,a,field,is,missing,or,not,param,fail,on,missing,field,if,set,to,true,the,operation,fails,if,there,is,a,missing,field,if,set,to,false,a,missing,field,is,set,to,null;public,json,fail,on,missing,field,boolean,fail,on,missing,field,this,fail,on,missing,field,fail,on,missing,field,return,this
Json -> public Json failOnMissingField(boolean failOnMissingField);1531641088;Sets flag whether to fail if a field is missing or not.__@param failOnMissingField If set to true, the operation fails if there is a missing field._If set to false, a missing field is set to null.;public Json failOnMissingField(boolean failOnMissingField) {_		this.failOnMissingField = failOnMissingField__		return this__	};sets,flag,whether,to,fail,if,a,field,is,missing,or,not,param,fail,on,missing,field,if,set,to,true,the,operation,fails,if,there,is,a,missing,field,if,set,to,false,a,missing,field,is,set,to,null;public,json,fail,on,missing,field,boolean,fail,on,missing,field,this,fail,on,missing,field,fail,on,missing,field,return,this
Json -> public Json failOnMissingField(boolean failOnMissingField);1533230387;Sets flag whether to fail if a field is missing or not.__@param failOnMissingField If set to true, the operation fails if there is a missing field._If set to false, a missing field is set to null.;public Json failOnMissingField(boolean failOnMissingField) {_		this.failOnMissingField = failOnMissingField__		return this__	};sets,flag,whether,to,fail,if,a,field,is,missing,or,not,param,fail,on,missing,field,if,set,to,true,the,operation,fails,if,there,is,a,missing,field,if,set,to,false,a,missing,field,is,set,to,null;public,json,fail,on,missing,field,boolean,fail,on,missing,field,this,fail,on,missing,field,fail,on,missing,field,return,this
Json -> public Json failOnMissingField(boolean failOnMissingField);1540894120;Sets flag whether to fail if a field is missing or not.__@param failOnMissingField If set to true, the operation fails if there is a missing field._If set to false, a missing field is set to null.;public Json failOnMissingField(boolean failOnMissingField) {_		this.failOnMissingField = failOnMissingField__		return this__	};sets,flag,whether,to,fail,if,a,field,is,missing,or,not,param,fail,on,missing,field,if,set,to,true,the,operation,fails,if,there,is,a,missing,field,if,set,to,false,a,missing,field,is,set,to,null;public,json,fail,on,missing,field,boolean,fail,on,missing,field,this,fail,on,missing,field,fail,on,missing,field,return,this
Json -> public Json failOnMissingField(boolean failOnMissingField);1540894120;Sets flag whether to fail if a field is missing or not.__@param failOnMissingField If set to true, the operation fails if there is a missing field._If set to false, a missing field is set to null.;public Json failOnMissingField(boolean failOnMissingField) {_		this.failOnMissingField = failOnMissingField__		return this__	};sets,flag,whether,to,fail,if,a,field,is,missing,or,not,param,fail,on,missing,field,if,set,to,true,the,operation,fails,if,there,is,a,missing,field,if,set,to,false,a,missing,field,is,set,to,null;public,json,fail,on,missing,field,boolean,fail,on,missing,field,this,fail,on,missing,field,fail,on,missing,field,return,this
Json -> public Json failOnMissingField(boolean failOnMissingField);1550856853;Sets flag whether to fail if a field is missing or not.__@param failOnMissingField If set to true, the operation fails if there is a missing field._If set to false, a missing field is set to null.;public Json failOnMissingField(boolean failOnMissingField) {_		this.failOnMissingField = failOnMissingField__		return this__	};sets,flag,whether,to,fail,if,a,field,is,missing,or,not,param,fail,on,missing,field,if,set,to,true,the,operation,fails,if,there,is,a,missing,field,if,set,to,false,a,missing,field,is,set,to,null;public,json,fail,on,missing,field,boolean,fail,on,missing,field,this,fail,on,missing,field,fail,on,missing,field,return,this
Json -> public Json();1519754754;Format descriptor for JSON.;public Json() {_		super(FORMAT_TYPE_VALUE, 1)__	};format,descriptor,for,json;public,json,super,1
Json -> public Json();1531641088;Format descriptor for JSON.;public Json() {_		super(FORMAT_TYPE_VALUE, 1)__	};format,descriptor,for,json;public,json,super,1
Json -> public Json();1533230387;Format descriptor for JSON.;public Json() {_		super(FORMAT_TYPE_VALUE, 1)__	};format,descriptor,for,json;public,json,super,1
Json -> public Json();1540894120;Format descriptor for JSON.;public Json() {_		super(FORMAT_TYPE_VALUE, 1)__	};format,descriptor,for,json;public,json,super,1
Json -> public Json();1540894120;Format descriptor for JSON.;public Json() {_		super(FORMAT_TYPE_VALUE, 1)__	};format,descriptor,for,json;public,json,super,1
Json -> public Json();1550856853;Format descriptor for JSON.;public Json() {_		super(FORMAT_TYPE_VALUE, 1)__	};format,descriptor,for,json;public,json,super,1
Json -> @Override 	public void addFormatProperties(DescriptorProperties properties);1519754754;Internal method for format properties conversion.;@Override_	public void addFormatProperties(DescriptorProperties properties) {_		if (deriveSchema != null) {_			properties.putBoolean(FORMAT_DERIVE_SCHEMA(), deriveSchema)__		}__		if (jsonSchema != null) {_			properties.putString(FORMAT_JSON_SCHEMA, jsonSchema)__		}__		if (schema != null) {_			properties.putString(FORMAT_SCHEMA, schema)__		}__		if (failOnMissingField != null) {_			properties.putBoolean(FORMAT_FAIL_ON_MISSING_FIELD, failOnMissingField)__		}_	};internal,method,for,format,properties,conversion;override,public,void,add,format,properties,descriptor,properties,properties,if,derive,schema,null,properties,put,boolean,derive,schema,if,json,schema,null,properties,put,string,json,schema,if,schema,null,properties,put,string,schema,if,fail,on,missing,field,null,properties,put,boolean,fail,on,missing,field
Json -> @Override 	public void addFormatProperties(DescriptorProperties properties);1531641088;Internal method for format properties conversion.;@Override_	public void addFormatProperties(DescriptorProperties properties) {_		if (deriveSchema != null) {_			properties.putBoolean(FORMAT_DERIVE_SCHEMA(), deriveSchema)__		}__		if (jsonSchema != null) {_			properties.putString(FORMAT_JSON_SCHEMA, jsonSchema)__		}__		if (schema != null) {_			properties.putString(FORMAT_SCHEMA, schema)__		}__		if (failOnMissingField != null) {_			properties.putBoolean(FORMAT_FAIL_ON_MISSING_FIELD, failOnMissingField)__		}_	};internal,method,for,format,properties,conversion;override,public,void,add,format,properties,descriptor,properties,properties,if,derive,schema,null,properties,put,boolean,derive,schema,if,json,schema,null,properties,put,string,json,schema,if,schema,null,properties,put,string,schema,if,fail,on,missing,field,null,properties,put,boolean,fail,on,missing,field
Json -> @Override 	public void addFormatProperties(DescriptorProperties properties);1533230387;Internal method for format properties conversion.;@Override_	public void addFormatProperties(DescriptorProperties properties) {_		if (deriveSchema != null) {_			properties.putBoolean(FORMAT_DERIVE_SCHEMA(), deriveSchema)__		}__		if (jsonSchema != null) {_			properties.putString(FORMAT_JSON_SCHEMA, jsonSchema)__		}__		if (schema != null) {_			properties.putString(FORMAT_SCHEMA, schema)__		}__		if (failOnMissingField != null) {_			properties.putBoolean(FORMAT_FAIL_ON_MISSING_FIELD, failOnMissingField)__		}_	};internal,method,for,format,properties,conversion;override,public,void,add,format,properties,descriptor,properties,properties,if,derive,schema,null,properties,put,boolean,derive,schema,if,json,schema,null,properties,put,string,json,schema,if,schema,null,properties,put,string,schema,if,fail,on,missing,field,null,properties,put,boolean,fail,on,missing,field
Json -> @Override 	public void addFormatProperties(DescriptorProperties properties);1540894120;Internal method for format properties conversion.;@Override_	public void addFormatProperties(DescriptorProperties properties) {_		if (deriveSchema != null) {_			properties.putBoolean(FORMAT_DERIVE_SCHEMA(), deriveSchema)__		}__		if (jsonSchema != null) {_			properties.putString(FORMAT_JSON_SCHEMA, jsonSchema)__		}__		if (schema != null) {_			properties.putString(FORMAT_SCHEMA, schema)__		}__		if (failOnMissingField != null) {_			properties.putBoolean(FORMAT_FAIL_ON_MISSING_FIELD, failOnMissingField)__		}_	};internal,method,for,format,properties,conversion;override,public,void,add,format,properties,descriptor,properties,properties,if,derive,schema,null,properties,put,boolean,derive,schema,if,json,schema,null,properties,put,string,json,schema,if,schema,null,properties,put,string,schema,if,fail,on,missing,field,null,properties,put,boolean,fail,on,missing,field
Json -> public Json jsonSchema(String jsonSchema);1519754754;Sets the JSON schema string with field names and the types according to the JSON schema_specification [[http://json-schema.org/specification.html]].__<p>The schema might be nested.__@param jsonSchema JSON schema;public Json jsonSchema(String jsonSchema) {_		Preconditions.checkNotNull(jsonSchema)__		this.jsonSchema = jsonSchema__		this.schema = null__		this.deriveSchema = null__		return this__	};sets,the,json,schema,string,with,field,names,and,the,types,according,to,the,json,schema,specification,http,json,schema,org,specification,html,p,the,schema,might,be,nested,param,json,schema,json,schema;public,json,json,schema,string,json,schema,preconditions,check,not,null,json,schema,this,json,schema,json,schema,this,schema,null,this,derive,schema,null,return,this
Json -> public Json jsonSchema(String jsonSchema);1531641088;Sets the JSON schema string with field names and the types according to the JSON schema_specification [[http://json-schema.org/specification.html]].__<p>The schema might be nested.__@param jsonSchema JSON schema;public Json jsonSchema(String jsonSchema) {_		Preconditions.checkNotNull(jsonSchema)__		this.jsonSchema = jsonSchema__		this.schema = null__		this.deriveSchema = null__		return this__	};sets,the,json,schema,string,with,field,names,and,the,types,according,to,the,json,schema,specification,http,json,schema,org,specification,html,p,the,schema,might,be,nested,param,json,schema,json,schema;public,json,json,schema,string,json,schema,preconditions,check,not,null,json,schema,this,json,schema,json,schema,this,schema,null,this,derive,schema,null,return,this
Json -> public Json jsonSchema(String jsonSchema);1533230387;Sets the JSON schema string with field names and the types according to the JSON schema_specification [[http://json-schema.org/specification.html]].__<p>The schema might be nested.__@param jsonSchema JSON schema;public Json jsonSchema(String jsonSchema) {_		Preconditions.checkNotNull(jsonSchema)__		this.jsonSchema = jsonSchema__		this.schema = null__		this.deriveSchema = null__		return this__	};sets,the,json,schema,string,with,field,names,and,the,types,according,to,the,json,schema,specification,http,json,schema,org,specification,html,p,the,schema,might,be,nested,param,json,schema,json,schema;public,json,json,schema,string,json,schema,preconditions,check,not,null,json,schema,this,json,schema,json,schema,this,schema,null,this,derive,schema,null,return,this
Json -> public Json jsonSchema(String jsonSchema);1540894120;Sets the JSON schema string with field names and the types according to the JSON schema_specification [[http://json-schema.org/specification.html]].__<p>The schema might be nested.__@param jsonSchema JSON schema;public Json jsonSchema(String jsonSchema) {_		Preconditions.checkNotNull(jsonSchema)__		this.jsonSchema = jsonSchema__		this.schema = null__		this.deriveSchema = null__		return this__	};sets,the,json,schema,string,with,field,names,and,the,types,according,to,the,json,schema,specification,http,json,schema,org,specification,html,p,the,schema,might,be,nested,param,json,schema,json,schema;public,json,json,schema,string,json,schema,preconditions,check,not,null,json,schema,this,json,schema,json,schema,this,schema,null,this,derive,schema,null,return,this
Json -> public Json jsonSchema(String jsonSchema);1540894120;Sets the JSON schema string with field names and the types according to the JSON schema_specification [[http://json-schema.org/specification.html]].__<p>The schema might be nested.__@param jsonSchema JSON schema;public Json jsonSchema(String jsonSchema) {_		Preconditions.checkNotNull(jsonSchema)__		this.jsonSchema = jsonSchema__		this.schema = null__		this.deriveSchema = null__		return this__	};sets,the,json,schema,string,with,field,names,and,the,types,according,to,the,json,schema,specification,http,json,schema,org,specification,html,p,the,schema,might,be,nested,param,json,schema,json,schema;public,json,json,schema,string,json,schema,preconditions,check,not,null,json,schema,this,json,schema,json,schema,this,schema,null,this,derive,schema,null,return,this
Json -> public Json jsonSchema(String jsonSchema);1550856853;Sets the JSON schema string with field names and the types according to the JSON schema_specification [[http://json-schema.org/specification.html]].__<p>The schema might be nested.__@param jsonSchema JSON schema;public Json jsonSchema(String jsonSchema) {_		Preconditions.checkNotNull(jsonSchema)__		this.jsonSchema = jsonSchema__		this.schema = null__		this.deriveSchema = null__		return this__	};sets,the,json,schema,string,with,field,names,and,the,types,according,to,the,json,schema,specification,http,json,schema,org,specification,html,p,the,schema,might,be,nested,param,json,schema,json,schema;public,json,json,schema,string,json,schema,preconditions,check,not,null,json,schema,this,json,schema,json,schema,this,schema,null,this,derive,schema,null,return,this
Json -> public Json deriveSchema();1519754754;Derives the format schema from the table's schema described using {@link Schema}.__<p>This allows for defining schema information only once.__<p>The names, types, and field order of the format are determined by the table's_schema. Time attributes are ignored. A "from" definition is interpreted as a field renaming_in the format.;public Json deriveSchema() {_		this.deriveSchema = true__		this.schema = null__		this.jsonSchema = null__		return this__	};derives,the,format,schema,from,the,table,s,schema,described,using,link,schema,p,this,allows,for,defining,schema,information,only,once,p,the,names,types,and,field,order,of,the,format,are,determined,by,the,table,s,schema,time,attributes,are,ignored,a,from,definition,is,interpreted,as,a,field,renaming,in,the,format;public,json,derive,schema,this,derive,schema,true,this,schema,null,this,json,schema,null,return,this
Json -> public Json deriveSchema();1531641088;Derives the format schema from the table's schema described using {@link Schema}.__<p>This allows for defining schema information only once.__<p>The names, types, and field order of the format are determined by the table's_schema. Time attributes are ignored. A "from" definition is interpreted as a field renaming_in the format.;public Json deriveSchema() {_		this.deriveSchema = true__		this.schema = null__		this.jsonSchema = null__		return this__	};derives,the,format,schema,from,the,table,s,schema,described,using,link,schema,p,this,allows,for,defining,schema,information,only,once,p,the,names,types,and,field,order,of,the,format,are,determined,by,the,table,s,schema,time,attributes,are,ignored,a,from,definition,is,interpreted,as,a,field,renaming,in,the,format;public,json,derive,schema,this,derive,schema,true,this,schema,null,this,json,schema,null,return,this
Json -> public Json deriveSchema();1533230387;Derives the format schema from the table's schema described using {@link Schema}.__<p>This allows for defining schema information only once.__<p>The names, types, and field order of the format are determined by the table's_schema. Time attributes are ignored if their origin is not a field. A "from" definition_is interpreted as a field renaming in the format.;public Json deriveSchema() {_		this.deriveSchema = true__		this.schema = null__		this.jsonSchema = null__		return this__	};derives,the,format,schema,from,the,table,s,schema,described,using,link,schema,p,this,allows,for,defining,schema,information,only,once,p,the,names,types,and,field,order,of,the,format,are,determined,by,the,table,s,schema,time,attributes,are,ignored,if,their,origin,is,not,a,field,a,from,definition,is,interpreted,as,a,field,renaming,in,the,format;public,json,derive,schema,this,derive,schema,true,this,schema,null,this,json,schema,null,return,this
Json -> public Json deriveSchema();1540894120;Derives the format schema from the table's schema described using {@link Schema}.__<p>This allows for defining schema information only once.__<p>The names, types, and field order of the format are determined by the table's_schema. Time attributes are ignored if their origin is not a field. A "from" definition_is interpreted as a field renaming in the format.;public Json deriveSchema() {_		this.deriveSchema = true__		this.schema = null__		this.jsonSchema = null__		return this__	};derives,the,format,schema,from,the,table,s,schema,described,using,link,schema,p,this,allows,for,defining,schema,information,only,once,p,the,names,types,and,field,order,of,the,format,are,determined,by,the,table,s,schema,time,attributes,are,ignored,if,their,origin,is,not,a,field,a,from,definition,is,interpreted,as,a,field,renaming,in,the,format;public,json,derive,schema,this,derive,schema,true,this,schema,null,this,json,schema,null,return,this
Json -> public Json deriveSchema();1540894120;Derives the format schema from the table's schema described using {@link Schema}.__<p>This allows for defining schema information only once.__<p>The names, types, and field order of the format are determined by the table's_schema. Time attributes are ignored if their origin is not a field. A "from" definition_is interpreted as a field renaming in the format.;public Json deriveSchema() {_		this.deriveSchema = true__		this.schema = null__		this.jsonSchema = null__		return this__	};derives,the,format,schema,from,the,table,s,schema,described,using,link,schema,p,this,allows,for,defining,schema,information,only,once,p,the,names,types,and,field,order,of,the,format,are,determined,by,the,table,s,schema,time,attributes,are,ignored,if,their,origin,is,not,a,field,a,from,definition,is,interpreted,as,a,field,renaming,in,the,format;public,json,derive,schema,this,derive,schema,true,this,schema,null,this,json,schema,null,return,this
Json -> public Json deriveSchema();1550856853;Derives the format schema from the table's schema described.__<p>This allows for defining schema information only once.__<p>The names, types, and fields' order of the format are determined by the table's_schema. Time attributes are ignored if their origin is not a field. A "from" definition_is interpreted as a field renaming in the format.;public Json deriveSchema() {_		this.deriveSchema = true__		this.schema = null__		this.jsonSchema = null__		return this__	};derives,the,format,schema,from,the,table,s,schema,described,p,this,allows,for,defining,schema,information,only,once,p,the,names,types,and,fields,order,of,the,format,are,determined,by,the,table,s,schema,time,attributes,are,ignored,if,their,origin,is,not,a,field,a,from,definition,is,interpreted,as,a,field,renaming,in,the,format;public,json,derive,schema,this,derive,schema,true,this,schema,null,this,json,schema,null,return,this
Json -> public Json schema(TypeInformation<Row> schemaType);1531641088;Sets the schema using type information.__<p>JSON objects are represented as ROW types.__<p>The schema might be nested.__@param schemaType type information that describes the schema;public Json schema(TypeInformation<Row> schemaType) {_		Preconditions.checkNotNull(schemaType)__		this.schema = TypeStringUtils.writeTypeInfo(schemaType)__		this.jsonSchema = null__		this.deriveSchema = null__		return this__	};sets,the,schema,using,type,information,p,json,objects,are,represented,as,row,types,p,the,schema,might,be,nested,param,schema,type,type,information,that,describes,the,schema;public,json,schema,type,information,row,schema,type,preconditions,check,not,null,schema,type,this,schema,type,string,utils,write,type,info,schema,type,this,json,schema,null,this,derive,schema,null,return,this
Json -> public Json schema(TypeInformation<Row> schemaType);1533230387;Sets the schema using type information.__<p>JSON objects are represented as ROW types.__<p>The schema might be nested.__@param schemaType type information that describes the schema;public Json schema(TypeInformation<Row> schemaType) {_		Preconditions.checkNotNull(schemaType)__		this.schema = TypeStringUtils.writeTypeInfo(schemaType)__		this.jsonSchema = null__		this.deriveSchema = null__		return this__	};sets,the,schema,using,type,information,p,json,objects,are,represented,as,row,types,p,the,schema,might,be,nested,param,schema,type,type,information,that,describes,the,schema;public,json,schema,type,information,row,schema,type,preconditions,check,not,null,schema,type,this,schema,type,string,utils,write,type,info,schema,type,this,json,schema,null,this,derive,schema,null,return,this
Json -> public Json schema(TypeInformation<Row> schemaType);1540894120;Sets the schema using type information.__<p>JSON objects are represented as ROW types.__<p>The schema might be nested.__@param schemaType type information that describes the schema;public Json schema(TypeInformation<Row> schemaType) {_		Preconditions.checkNotNull(schemaType)__		this.schema = TypeStringUtils.writeTypeInfo(schemaType)__		this.jsonSchema = null__		this.deriveSchema = null__		return this__	};sets,the,schema,using,type,information,p,json,objects,are,represented,as,row,types,p,the,schema,might,be,nested,param,schema,type,type,information,that,describes,the,schema;public,json,schema,type,information,row,schema,type,preconditions,check,not,null,schema,type,this,schema,type,string,utils,write,type,info,schema,type,this,json,schema,null,this,derive,schema,null,return,this
Json -> public Json schema(TypeInformation<Row> schemaType);1540894120;Sets the schema using type information.__<p>JSON objects are represented as ROW types.__<p>The schema might be nested.__@param schemaType type information that describes the schema;public Json schema(TypeInformation<Row> schemaType) {_		Preconditions.checkNotNull(schemaType)__		this.schema = TypeStringUtils.writeTypeInfo(schemaType)__		this.jsonSchema = null__		this.deriveSchema = null__		return this__	};sets,the,schema,using,type,information,p,json,objects,are,represented,as,row,types,p,the,schema,might,be,nested,param,schema,type,type,information,that,describes,the,schema;public,json,schema,type,information,row,schema,type,preconditions,check,not,null,schema,type,this,schema,type,string,utils,write,type,info,schema,type,this,json,schema,null,this,derive,schema,null,return,this
Json -> public Json schema(TypeInformation<Row> schemaType);1550856853;Sets the schema using type information.__<p>JSON objects are represented as ROW types.__<p>The schema might be nested.__@param schemaType type information that describes the schema;public Json schema(TypeInformation<Row> schemaType) {_		Preconditions.checkNotNull(schemaType)__		this.schema = TypeStringUtils.writeTypeInfo(schemaType)__		this.jsonSchema = null__		this.deriveSchema = null__		return this__	};sets,the,schema,using,type,information,p,json,objects,are,represented,as,row,types,p,the,schema,might,be,nested,param,schema,type,type,information,that,describes,the,schema;public,json,schema,type,information,row,schema,type,preconditions,check,not,null,schema,type,this,schema,type,string,utils,write,type,info,schema,type,this,json,schema,null,this,derive,schema,null,return,this
