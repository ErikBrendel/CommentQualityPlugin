commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;7;;@Override protected List<String> supportedFormatProperties() {     final List<String> properties = new ArrayList<>().     properties.add(AvroValidator.FORMAT_RECORD_CLASS).     properties.add(AvroValidator.FORMAT_AVRO_SCHEMA).     return properties. }
false;public;1;12;;@Override public DeserializationSchema<Row> createDeserializationSchema(Map<String, String> properties) {     final DescriptorProperties descriptorProperties = getValidatedProperties(properties).     // create and configure     if (descriptorProperties.containsKey(AvroValidator.FORMAT_RECORD_CLASS)) {         return new AvroRowDeserializationSchema(descriptorProperties.getClass(AvroValidator.FORMAT_RECORD_CLASS, SpecificRecord.class)).     } else {         return new AvroRowDeserializationSchema(descriptorProperties.getString(AvroValidator.FORMAT_AVRO_SCHEMA)).     } }
false;public;1;12;;@Override public SerializationSchema<Row> createSerializationSchema(Map<String, String> properties) {     final DescriptorProperties descriptorProperties = getValidatedProperties(properties).     // create and configure     if (descriptorProperties.containsKey(AvroValidator.FORMAT_RECORD_CLASS)) {         return new AvroRowSerializationSchema(descriptorProperties.getClass(AvroValidator.FORMAT_RECORD_CLASS, SpecificRecord.class)).     } else {         return new AvroRowSerializationSchema(descriptorProperties.getString(AvroValidator.FORMAT_AVRO_SCHEMA)).     } }
false;private,static;1;9;;private static DescriptorProperties getValidatedProperties(Map<String, String> propertiesMap) {     final DescriptorProperties descriptorProperties = new DescriptorProperties().     descriptorProperties.putProperties(propertiesMap).     // validate     new AvroValidator().validate(descriptorProperties).     return descriptorProperties. }
