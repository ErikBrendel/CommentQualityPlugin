commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;26;;public static User generateRandomUser(Random rnd) {     return new User(generateRandomString(rnd, 50), rnd.nextBoolean() ? null : rnd.nextInt(), rnd.nextBoolean() ? null : generateRandomString(rnd, 6), rnd.nextBoolean() ? null : rnd.nextLong(), rnd.nextDouble(), null, rnd.nextBoolean(), generateRandomStringList(rnd, 20, 30), generateRandomBooleanList(rnd, 20), rnd.nextBoolean() ? null : generateRandomStringList(rnd, 20, 20), generateRandomColor(rnd), new HashMap<>(), generateRandomFixed16(rnd), generateRandomUnion(rnd), generateRandomAddress(rnd), generateRandomBytes(rnd), LocalDate.parse("2014-03-01"), LocalTime.parse("12:12:12"), 123456, DateTime.parse("2014-03-01T12:12:12.321Z"), 123456L, ByteBuffer.wrap(BigDecimal.valueOf(2000, 2).unscaledValue().toByteArray()), new Fixed2(BigDecimal.valueOf(2000, 2).unscaledValue().toByteArray())). }
false;public,static;1;19;;public static SimpleUser generateRandomSimpleUser(Random rnd) {     return new SimpleUser(generateRandomString(rnd, 50), rnd.nextBoolean() ? null : rnd.nextInt(), rnd.nextBoolean() ? null : generateRandomString(rnd, 6), rnd.nextBoolean() ? null : rnd.nextLong(), rnd.nextDouble(), null, rnd.nextBoolean(), generateRandomStringList(rnd, 20, 30), generateRandomBooleanList(rnd, 20), rnd.nextBoolean() ? null : generateRandomStringList(rnd, 20, 20), generateRandomColor(rnd), new HashMap<>(), generateRandomFixed16(rnd), generateRandomUnion(rnd), generateRandomAddress(rnd), generateRandomBytes(rnd)). }
false;public,static;1;3;;public static Colors generateRandomColor(Random rnd) {     return Colors.values()[rnd.nextInt(Colors.values().length)]. }
false;public,static;1;10;;public static Fixed16 generateRandomFixed16(Random rnd) {     if (rnd.nextBoolean()) {         return new Fixed16().     } else {         byte[] bytes = new byte[16].         rnd.nextBytes(bytes).         return new Fixed16(bytes).     } }
false;public,static;1;8;;public static Address generateRandomAddress(Random rnd) {     return new Address(rnd.nextInt(), generateRandomString(rnd, 20), generateRandomString(rnd, 20), generateRandomString(rnd, 20), generateRandomString(rnd, 20)). }
false;public,static;1;5;;public static ByteBuffer generateRandomBytes(Random rnd) {     final byte[] bytes = new byte[10].     rnd.nextBytes(bytes).     return ByteBuffer.wrap(bytes). }
false;private,static;2;8;;private static List<Boolean> generateRandomBooleanList(Random rnd, int maxEntries) {     final int num = rnd.nextInt(maxEntries + 1).     ArrayList<Boolean> list = new ArrayList<>().     for (int i = 0. i < num. i++) {         list.add(rnd.nextBoolean()).     }     return list. }
false;private,static;3;8;;private static List<CharSequence> generateRandomStringList(Random rnd, int maxEntries, int maxLen) {     final int num = rnd.nextInt(maxEntries + 1).     ArrayList<CharSequence> list = new ArrayList<>().     for (int i = 0. i < num. i++) {         list.add(generateRandomString(rnd, maxLen)).     }     return list. }
false;private,static;2;7;;private static String generateRandomString(Random rnd, int maxLen) {     char[] chars = new char[rnd.nextInt(maxLen + 1)].     for (int i = 0. i < chars.length. i++) {         chars[i] = (char) rnd.nextInt(Character.MIN_SURROGATE).     }     return new String(chars). }
false;private,static;1;15;;private static Object generateRandomUnion(Random rnd) {     if (rnd.nextBoolean()) {         if (rnd.nextBoolean()) {             return null.         } else {             return rnd.nextBoolean().         }     } else {         if (rnd.nextBoolean()) {             return rnd.nextLong().         } else {             return rnd.nextDouble().         }     } }
