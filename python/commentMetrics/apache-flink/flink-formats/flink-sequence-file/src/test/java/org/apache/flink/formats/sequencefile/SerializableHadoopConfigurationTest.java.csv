commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Before public void createConfigWithCustomProperty() {     this.configuration = new Configuration().     configuration.set(TEST_KEY, TEST_VALUE). }
false;public;0;8;;@Test public void customPropertiesSurviveSerializationDeserialization() throws IOException, ClassNotFoundException {     final SerializableHadoopConfiguration serializableConfigUnderTest = new SerializableHadoopConfiguration(configuration).     final byte[] serializedConfigUnderTest = serializeAndGetBytes(serializableConfigUnderTest).     final SerializableHadoopConfiguration deserializableConfigUnderTest = deserializeAndGetConfiguration(serializedConfigUnderTest).     Assert.assertThat(deserializableConfigUnderTest.get(), hasTheSamePropertiesAs(configuration)). }
false;protected;1;5;;@Override protected boolean matchesSafely(Configuration actualConfig) {     final String value = actualConfig.get(TEST_KEY).     return actualConfig != expectedConfig && value != null && expectedConfig.get(TEST_KEY).equals(value). }
false;public;1;7;;@Override public void describeTo(Description description) {     description.appendText("a Hadoop Configuration with property: key=").appendValue(TEST_KEY).appendText(" and value=").appendValue(TEST_VALUE). }
false;private,static;1;17;;// ----------------------------------------	Matchers ---------------------------------------- // private static TypeSafeMatcher<Configuration> hasTheSamePropertiesAs(final Configuration expectedConfig) {     return new TypeSafeMatcher<Configuration>() {          @Override         protected boolean matchesSafely(Configuration actualConfig) {             final String value = actualConfig.get(TEST_KEY).             return actualConfig != expectedConfig && value != null && expectedConfig.get(TEST_KEY).equals(value).         }          @Override         public void describeTo(Description description) {             description.appendText("a Hadoop Configuration with property: key=").appendValue(TEST_KEY).appendText(" and value=").appendValue(TEST_VALUE).         }     }. }
false;private;1;10;;// ----------------------------------------	Helper Methods ---------------------------------------- // private byte[] serializeAndGetBytes(SerializableHadoopConfiguration serializableConfigUnderTest) throws IOException {     try (ByteArrayOutputStream byteStream = new ByteArrayOutputStream().         ObjectOutputStream out = new ObjectOutputStream(byteStream)) {         out.writeObject(serializableConfigUnderTest).         out.flush().         return byteStream.toByteArray().     } }
false;private;1;5;;private SerializableHadoopConfiguration deserializeAndGetConfiguration(byte[] serializedConfig) throws IOException, ClassNotFoundException {     try (ObjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(serializedConfig))) {         return (SerializableHadoopConfiguration) in.readObject().     } }
