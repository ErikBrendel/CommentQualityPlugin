commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public SV getInternal() {     return getInternal(getKeyBytes()). }
false;;1;12;;SV getInternal(byte[] key) {     try {         byte[] valueBytes = backend.db.get(columnFamily, key).         if (valueBytes == null) {             return null.         }         dataInputView.setBuffer(valueBytes).         return valueSerializer.deserialize(dataInputView).     } catch (IOException | RocksDBException e) {         throw new FlinkRuntimeException("Error while retrieving data from RocksDB", e).     } }
false;public;1;4;;@Override public void updateInternal(SV valueToStore) {     updateInternal(getKeyBytes(), valueToStore). }
false;;2;9;;void updateInternal(byte[] key, SV valueToStore) {     try {         // write the new value to RocksDB         backend.db.put(columnFamily, writeOptions, key, getValueBytes(valueToStore)).     } catch (RocksDBException e) {         throw new FlinkRuntimeException("Error while adding value to RocksDB", e).     } }
