commented;modifiers;parameterAmount;loc;comment;code
false;public,final;4;18;;@Nonnull @Override public final RunnableFuture<SnapshotResult<KeyedStateHandle>> snapshot(long checkpointId, long timestamp, @Nonnull CheckpointStreamFactory streamFactory, @Nonnull CheckpointOptions checkpointOptions) throws Exception {     if (kvStateInformation.isEmpty()) {         if (LOG.isDebugEnabled()) {             LOG.debug("Asynchronous RocksDB snapshot performed on empty keyed state at {}. Returning null.", timestamp).         }         return DoneFuture.of(SnapshotResult.empty()).     } else {         return doSnapshot(checkpointId, timestamp, streamFactory, checkpointOptions).     } }
true;protected,abstract;4;6;/**  * This method implements the concrete snapshot logic for a non-empty state.  */ ;/**  * This method implements the concrete snapshot logic for a non-empty state.  */ @Nonnull protected abstract RunnableFuture<SnapshotResult<KeyedStateHandle>> doSnapshot(long checkpointId, long timestamp, CheckpointStreamFactory streamFactory, CheckpointOptions checkpointOptions) throws Exception.
