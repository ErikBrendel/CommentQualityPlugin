commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isValid() {     return this.iterator.isValid(). }
false;public;0;5;;@Override public void seekToFirst() {     iterator.seekToFirst().     status(). }
false;public;0;5;;@Override public void seekToLast() {     iterator.seekToFirst().     status(). }
false;public;1;5;;@Override public void seek(byte[] target) {     iterator.seek(target).     status(). }
false;public;1;5;;@Override public void seekForPrev(byte[] target) {     iterator.seekForPrev(target).     status(). }
false;public;0;5;;@Override public void next() {     iterator.next().     status(). }
false;public;0;5;;@Override public void prev() {     iterator.prev().     status(). }
false;public;0;8;;@Override public void status() {     try {         iterator.status().     } catch (RocksDBException ex) {         throw new FlinkRuntimeException("Internal exception found in RocksDB", ex).     } }
false;public;0;3;;public byte[] key() {     return iterator.key(). }
false;public;0;3;;public byte[] value() {     return iterator.value(). }
false;public;0;4;;@Override public void close() {     iterator.close(). }
