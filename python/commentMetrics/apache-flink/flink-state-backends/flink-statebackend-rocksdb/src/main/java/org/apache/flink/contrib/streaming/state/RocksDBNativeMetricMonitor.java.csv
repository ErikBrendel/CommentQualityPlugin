commented;modifiers;parameterAmount;loc;comment;code
true;;2;8;/**  * Register gauges to pull native metrics for the column family.  * @param columnFamilyName group name for the new gauges  * @param handle native handle to the column family  */ ;/**  * Register gauges to pull native metrics for the column family.  * @param columnFamilyName group name for the new gauges  * @param handle native handle to the column family  */ void registerColumnFamily(String columnFamilyName, ColumnFamilyHandle handle) {     MetricGroup group = metricGroup.addGroup(columnFamilyName).     for (String property : options.getProperties()) {         RocksDBNativeMetricView gauge = new RocksDBNativeMetricView(handle, property).         group.gauge(property, gauge).     } }
true;private;3;16;/**  * Updates the value of metricView if the reference is still valid.  */ ;/**  * Updates the value of metricView if the reference is still valid.  */ private void setProperty(ColumnFamilyHandle handle, String property, RocksDBNativeMetricView metricView) {     if (metricView.isClosed()) {         return.     }     try {         synchronized (lock) {             if (rocksDB != null) {                 long value = rocksDB.getLongProperty(handle, property).                 metricView.setValue(value).             }         }     } catch (RocksDBException e) {         metricView.close().         LOG.warn("Failed to read native metric %s from RocksDB", property, e).     } }
false;public;0;6;;@Override public void close() {     synchronized (lock) {         rocksDB = null.     } }
false;public;1;13;;public void setValue(long value) {     if (value >= 0L) {         bigInteger = BigInteger.valueOf(value).     } else {         int upper = (int) (value >>> 32).         int lower = (int) value.         bigInteger = BigInteger.valueOf(Integer.toUnsignedLong(upper)).shiftLeft(32).add(BigInteger.valueOf(Integer.toUnsignedLong(lower))).     } }
false;public;0;3;;public void close() {     closed = true. }
false;public;0;3;;public boolean isClosed() {     return closed. }
false;public;0;4;;@Override public BigInteger getValue() {     return bigInteger. }
false;public;0;4;;@Override public void update() {     setProperty(handle, property, this). }
