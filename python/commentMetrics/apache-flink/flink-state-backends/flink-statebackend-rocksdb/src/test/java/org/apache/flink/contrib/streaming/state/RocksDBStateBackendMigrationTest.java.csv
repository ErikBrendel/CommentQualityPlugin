commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;4;;@Parameterized.Parameters(name = "Incremental checkpointing: {0}") public static Collection<Boolean> parameters() {     return Arrays.asList(false, true). }
false;protected;0;14;;@Override protected RocksDBStateBackend getStateBackend() throws IOException {     dbPath = tempFolder.newFolder().getAbsolutePath().     String checkpointPath = tempFolder.newFolder().toURI().toString().     RocksDBStateBackend backend = new RocksDBStateBackend(new FsStateBackend(checkpointPath), enableIncrementalCheckpointing).     Configuration configuration = new Configuration().     configuration.setString(RocksDBOptions.TIMER_SERVICE_FACTORY, RocksDBStateBackend.PriorityQueueStateType.ROCKSDB.toString()).     backend = backend.configure(configuration, Thread.currentThread().getContextClassLoader()).     backend.setDbStoragePath(dbPath).     return backend. }
