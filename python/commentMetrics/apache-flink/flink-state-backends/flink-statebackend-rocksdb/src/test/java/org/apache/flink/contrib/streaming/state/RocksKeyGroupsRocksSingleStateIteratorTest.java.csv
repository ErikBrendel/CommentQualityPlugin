commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void testEmptyMergeIterator() throws Exception {     RocksStatesPerKeyGroupMergeIterator emptyIterator = new RocksStatesPerKeyGroupMergeIterator(Collections.emptyList(), 2).     Assert.assertFalse(emptyIterator.isValid()). }
false;public;0;6;;@Test public void testMergeIteratorByte() throws Exception {     Assert.assertTrue(MAX_NUM_KEYS <= Byte.MAX_VALUE).     testMergeIterator(Byte.MAX_VALUE). }
false;public;0;6;;@Test public void testMergeIteratorShort() throws Exception {     Assert.assertTrue(MAX_NUM_KEYS <= Byte.MAX_VALUE).     testMergeIterator(Short.MAX_VALUE). }
false;public;1;78;;public void testMergeIterator(int maxParallelism) throws Exception {     Random random = new Random(1234).     try (RocksDB rocksDB = RocksDB.open(tempFolder.getRoot().getAbsolutePath())) {         List<Tuple2<RocksIteratorWrapper, Integer>> rocksIteratorsWithKVStateId = new ArrayList<>().         List<Tuple2<ColumnFamilyHandle, Integer>> columnFamilyHandlesWithKeyCount = new ArrayList<>().         int totalKeysExpected = 0.         for (int c = 0. c < NUM_KEY_VAL_STATES. ++c) {             ColumnFamilyHandle handle = rocksDB.createColumnFamily(new ColumnFamilyDescriptor(("column-" + c).getBytes(ConfigConstants.DEFAULT_CHARSET))).             ByteArrayOutputStreamWithPos bos = new ByteArrayOutputStreamWithPos().             DataOutputStream dos = new DataOutputStream(bos).             int numKeys = random.nextInt(MAX_NUM_KEYS + 1).             for (int i = 0. i < numKeys. ++i) {                 if (maxParallelism <= Byte.MAX_VALUE) {                     dos.writeByte(i).                 } else {                     dos.writeShort(i).                 }                 dos.writeInt(i).                 byte[] key = bos.toByteArray().                 byte[] val = new byte[] { 42 }.                 rocksDB.put(handle, key, val).                 bos.reset().             }             columnFamilyHandlesWithKeyCount.add(new Tuple2<>(handle, numKeys)).             totalKeysExpected += numKeys.         }         int id = 0.         for (Tuple2<ColumnFamilyHandle, Integer> columnFamilyHandle : columnFamilyHandlesWithKeyCount) {             rocksIteratorsWithKVStateId.add(new Tuple2<>(RocksDBOperationUtils.getRocksIterator(rocksDB, columnFamilyHandle.f0), id)).             ++id.         }         try (RocksStatesPerKeyGroupMergeIterator mergeIterator = new RocksStatesPerKeyGroupMergeIterator(rocksIteratorsWithKVStateId, maxParallelism <= Byte.MAX_VALUE ? 1 : 2)) {             int prevKVState = -1.             int prevKey = -1.             int prevKeyGroup = -1.             int totalKeysActual = 0.             while (mergeIterator.isValid()) {                 ByteBuffer bb = ByteBuffer.wrap(mergeIterator.key()).                 int keyGroup = maxParallelism > Byte.MAX_VALUE ? bb.getShort() : bb.get().                 int key = bb.getInt().                 Assert.assertTrue(keyGroup >= prevKeyGroup).                 Assert.assertTrue(key >= prevKey).                 Assert.assertEquals(prevKeyGroup != keyGroup, mergeIterator.isNewKeyGroup()).                 Assert.assertEquals(prevKVState != mergeIterator.kvStateId(), mergeIterator.isNewKeyValueState()).                 prevKeyGroup = keyGroup.                 prevKVState = mergeIterator.kvStateId().                 mergeIterator.next().                 ++totalKeysActual.             }             Assert.assertEquals(totalKeysExpected, totalKeysActual).         }         IOUtils.closeQuietly(rocksDB.getDefaultColumnFamily()).         for (Tuple2<ColumnFamilyHandle, Integer> handleWithCount : columnFamilyHandlesWithKeyCount) {             IOUtils.closeQuietly(handleWithCount.f0).         }     } }
