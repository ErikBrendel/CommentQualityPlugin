commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;// ------------------------------------------------------------------------ // Delegate calls to the allocated and prohibit heap buffer allocations // ------------------------------------------------------------------------ @Override public ByteBuf buffer() {     return alloc.buffer(). }
false;public;1;4;;@Override public ByteBuf buffer(int initialCapacity) {     return alloc.buffer(initialCapacity). }
false;public;2;4;;@Override public ByteBuf buffer(int initialCapacity, int maxCapacity) {     return alloc.buffer(initialCapacity, maxCapacity). }
false;public;0;4;;@Override public ByteBuf ioBuffer() {     return alloc.ioBuffer(). }
false;public;1;4;;@Override public ByteBuf ioBuffer(int initialCapacity) {     return alloc.ioBuffer(initialCapacity). }
false;public;2;4;;@Override public ByteBuf ioBuffer(int initialCapacity, int maxCapacity) {     return alloc.ioBuffer(initialCapacity, maxCapacity). }
false;public;0;4;;@Override public ByteBuf heapBuffer() {     throw new UnsupportedOperationException("Heap buffer"). }
false;public;1;4;;@Override public ByteBuf heapBuffer(int initialCapacity) {     throw new UnsupportedOperationException("Heap buffer"). }
false;public;2;4;;@Override public ByteBuf heapBuffer(int initialCapacity, int maxCapacity) {     throw new UnsupportedOperationException("Heap buffer"). }
false;public;0;4;;@Override public ByteBuf directBuffer() {     return alloc.directBuffer(). }
false;public;1;4;;@Override public ByteBuf directBuffer(int initialCapacity) {     return alloc.directBuffer(initialCapacity). }
false;public;2;4;;@Override public ByteBuf directBuffer(int initialCapacity, int maxCapacity) {     return alloc.directBuffer(initialCapacity, maxCapacity). }
false;public;0;4;;@Override public CompositeByteBuf compositeBuffer() {     return alloc.compositeBuffer(). }
false;public;1;4;;@Override public CompositeByteBuf compositeBuffer(int maxNumComponents) {     return alloc.compositeBuffer(maxNumComponents). }
false;public;0;4;;@Override public CompositeByteBuf compositeHeapBuffer() {     throw new UnsupportedOperationException("Heap buffer"). }
false;public;1;4;;@Override public CompositeByteBuf compositeHeapBuffer(int maxNumComponents) {     throw new UnsupportedOperationException("Heap buffer"). }
false;public;0;4;;@Override public CompositeByteBuf compositeDirectBuffer() {     return alloc.compositeDirectBuffer(). }
false;public;1;4;;@Override public CompositeByteBuf compositeDirectBuffer(int maxNumComponents) {     return alloc.compositeDirectBuffer(maxNumComponents). }
false;public;0;4;;@Override public boolean isDirectBufferPooled() {     return alloc.isDirectBufferPooled(). }
false;public;2;4;;@Override public int calculateNewCapacity(int minNewCapacity, int maxCapacity) {     return alloc.calculateNewCapacity(minNewCapacity, maxCapacity). }
