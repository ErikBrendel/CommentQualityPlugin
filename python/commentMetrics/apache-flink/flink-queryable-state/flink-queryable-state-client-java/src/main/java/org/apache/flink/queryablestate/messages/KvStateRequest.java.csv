commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public JobID getJobId() {     return jobId. }
false;public;0;3;;public String getStateName() {     return stateName. }
false;public;0;3;;public int getKeyHashCode() {     return keyHashCode. }
false;public;0;3;;public byte[] getSerializedKeyAndNamespace() {     return serializedKeyAndNamespace. }
false;public;0;22;;@Override public byte[] serialize() {     byte[] serializedStateName = stateName.getBytes(ConfigConstants.DEFAULT_CHARSET).     // JobID + stateName + sizeOf(stateName) + hashCode + keyAndNamespace + sizeOf(keyAndNamespace)     final int size = JobID.SIZE + serializedStateName.length + Integer.BYTES + Integer.BYTES + serializedKeyAndNamespace.length + Integer.BYTES.     return ByteBuffer.allocate(size).putLong(jobId.getLowerPart()).putLong(jobId.getUpperPart()).putInt(serializedStateName.length).put(serializedStateName).putInt(keyHashCode).putInt(serializedKeyAndNamespace.length).put(serializedKeyAndNamespace).array(). }
false;public;0;9;;@Override public String toString() {     return "KvStateRequest{" + "jobId=" + jobId + ", stateName='" + stateName + '\'' + ", keyHashCode=" + keyHashCode + ", serializedKeyAndNamespace=" + Arrays.toString(serializedKeyAndNamespace) + '}'. }
false;public;1;29;;@Override public KvStateRequest deserializeMessage(ByteBuf buf) {     JobID jobId = new JobID(buf.readLong(), buf.readLong()).     int statenameLength = buf.readInt().     Preconditions.checkArgument(statenameLength >= 0, "Negative length for state name. " + "This indicates a serialization error.").     String stateName = "".     if (statenameLength > 0) {         byte[] name = new byte[statenameLength].         buf.readBytes(name).         stateName = new String(name, ConfigConstants.DEFAULT_CHARSET).     }     int keyHashCode = buf.readInt().     int knamespaceLength = buf.readInt().     Preconditions.checkArgument(knamespaceLength >= 0, "Negative length for key and namespace. " + "This indicates a serialization error.").     byte[] serializedKeyAndNamespace = new byte[knamespaceLength].     if (knamespaceLength > 0) {         buf.readBytes(serializedKeyAndNamespace).     }     return new KvStateRequest(jobId, stateName, keyHashCode, serializedKeyAndNamespace). }
