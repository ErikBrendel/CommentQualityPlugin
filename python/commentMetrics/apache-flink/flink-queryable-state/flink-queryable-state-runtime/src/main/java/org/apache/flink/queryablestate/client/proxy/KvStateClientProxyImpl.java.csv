# id;timestamp;commentText;codeText;commentWords;codeWords
KvStateClientProxyImpl -> public KvStateClientProxyImpl( 			final InetAddress bindAddress, 			final Iterator<Integer> bindPortIterator, 			final Integer numEventLoopThreads, 			final Integer numQueryThreads, 			final KvStateRequestStats stats);1509037054;Creates the Queryable State Client Proxy.__<p>The server is instantiated using reflection by the_{@link org.apache.flink.runtime.query.QueryableStateUtils#createKvStateClientProxy(InetAddress, Iterator, int, int, KvStateRequestStats)_QueryableStateUtils.createKvStateClientProxy(InetAddress, Iterator, int, int, KvStateRequestStats)}.__<p>The server needs to be started via {@link #start()} in order to bind_to the configured bind address.__@param bindAddress the address to listen to._@param bindPortIterator the port range to try to bind to._@param numEventLoopThreads number of event loop threads._@param numQueryThreads number of query threads._@param stats the statistics collector.;public KvStateClientProxyImpl(_			final InetAddress bindAddress,_			final Iterator<Integer> bindPortIterator,_			final Integer numEventLoopThreads,_			final Integer numQueryThreads,_			final KvStateRequestStats stats) {__		super("Queryable State Proxy Server", bindAddress, bindPortIterator, numEventLoopThreads, numQueryThreads)__		Preconditions.checkArgument(numQueryThreads >= 1, "Non-positive number of query threads.")__		this.queryExecutorThreads = numQueryThreads__		this.stats = Preconditions.checkNotNull(stats)__	};creates,the,queryable,state,client,proxy,p,the,server,is,instantiated,using,reflection,by,the,link,org,apache,flink,runtime,query,queryable,state,utils,create,kv,state,client,proxy,inet,address,iterator,int,int,kv,state,request,stats,queryable,state,utils,create,kv,state,client,proxy,inet,address,iterator,int,int,kv,state,request,stats,p,the,server,needs,to,be,started,via,link,start,in,order,to,bind,to,the,configured,bind,address,param,bind,address,the,address,to,listen,to,param,bind,port,iterator,the,port,range,to,try,to,bind,to,param,num,event,loop,threads,number,of,event,loop,threads,param,num,query,threads,number,of,query,threads,param,stats,the,statistics,collector;public,kv,state,client,proxy,impl,final,inet,address,bind,address,final,iterator,integer,bind,port,iterator,final,integer,num,event,loop,threads,final,integer,num,query,threads,final,kv,state,request,stats,stats,super,queryable,state,proxy,server,bind,address,bind,port,iterator,num,event,loop,threads,num,query,threads,preconditions,check,argument,num,query,threads,1,non,positive,number,of,query,threads,this,query,executor,threads,num,query,threads,this,stats,preconditions,check,not,null,stats
KvStateClientProxyImpl -> public KvStateClientProxyImpl( 			final InetAddress bindAddress, 			final Iterator<Integer> bindPortIterator, 			final Integer numEventLoopThreads, 			final Integer numQueryThreads, 			final KvStateRequestStats stats);1509404932;Creates the Queryable State Client Proxy.__<p>The server is instantiated using reflection by the_{@link org.apache.flink.runtime.query.QueryableStateUtils#createKvStateClientProxy(InetAddress, Iterator, int, int, KvStateRequestStats)_QueryableStateUtils.createKvStateClientProxy(InetAddress, Iterator, int, int, KvStateRequestStats)}.__<p>The server needs to be started via {@link #start()} in order to bind_to the configured bind address.__@param bindAddress the address to listen to._@param bindPortIterator the port range to try to bind to._@param numEventLoopThreads number of event loop threads._@param numQueryThreads number of query threads._@param stats the statistics collector.;public KvStateClientProxyImpl(_			final InetAddress bindAddress,_			final Iterator<Integer> bindPortIterator,_			final Integer numEventLoopThreads,_			final Integer numQueryThreads,_			final KvStateRequestStats stats) {__		super("Queryable State Proxy Server", bindAddress, bindPortIterator, numEventLoopThreads, numQueryThreads)__		Preconditions.checkArgument(numQueryThreads >= 1, "Non-positive number of query threads.")__		this.queryExecutorThreads = numQueryThreads__		this.stats = Preconditions.checkNotNull(stats)__	};creates,the,queryable,state,client,proxy,p,the,server,is,instantiated,using,reflection,by,the,link,org,apache,flink,runtime,query,queryable,state,utils,create,kv,state,client,proxy,inet,address,iterator,int,int,kv,state,request,stats,queryable,state,utils,create,kv,state,client,proxy,inet,address,iterator,int,int,kv,state,request,stats,p,the,server,needs,to,be,started,via,link,start,in,order,to,bind,to,the,configured,bind,address,param,bind,address,the,address,to,listen,to,param,bind,port,iterator,the,port,range,to,try,to,bind,to,param,num,event,loop,threads,number,of,event,loop,threads,param,num,query,threads,number,of,query,threads,param,stats,the,statistics,collector;public,kv,state,client,proxy,impl,final,inet,address,bind,address,final,iterator,integer,bind,port,iterator,final,integer,num,event,loop,threads,final,integer,num,query,threads,final,kv,state,request,stats,stats,super,queryable,state,proxy,server,bind,address,bind,port,iterator,num,event,loop,threads,num,query,threads,preconditions,check,argument,num,query,threads,1,non,positive,number,of,query,threads,this,query,executor,threads,num,query,threads,this,stats,preconditions,check,not,null,stats
KvStateClientProxyImpl -> public KvStateClientProxyImpl( 			final InetAddress bindAddress, 			final Iterator<Integer> bindPortIterator, 			final Integer numEventLoopThreads, 			final Integer numQueryThreads, 			final KvStateRequestStats stats);1512567202;Creates the Queryable State Client Proxy.__<p>The server is instantiated using reflection by the_{@link org.apache.flink.runtime.query.QueryableStateUtils#createKvStateClientProxy(InetAddress, Iterator, int, int, KvStateRequestStats)_QueryableStateUtils.createKvStateClientProxy(InetAddress, Iterator, int, int, KvStateRequestStats)}.__<p>The server needs to be started via {@link #start()} in order to bind_to the configured bind address.__@param bindAddress the address to listen to._@param bindPortIterator the port range to try to bind to._@param numEventLoopThreads number of event loop threads._@param numQueryThreads number of query threads._@param stats the statistics collector.;public KvStateClientProxyImpl(_			final InetAddress bindAddress,_			final Iterator<Integer> bindPortIterator,_			final Integer numEventLoopThreads,_			final Integer numQueryThreads,_			final KvStateRequestStats stats) {__		super("Queryable State Proxy Server", bindAddress, bindPortIterator, numEventLoopThreads, numQueryThreads)__		Preconditions.checkArgument(numQueryThreads >= 1, "Non-positive number of query threads.")__		this.queryExecutorThreads = numQueryThreads__		this.stats = Preconditions.checkNotNull(stats)__	};creates,the,queryable,state,client,proxy,p,the,server,is,instantiated,using,reflection,by,the,link,org,apache,flink,runtime,query,queryable,state,utils,create,kv,state,client,proxy,inet,address,iterator,int,int,kv,state,request,stats,queryable,state,utils,create,kv,state,client,proxy,inet,address,iterator,int,int,kv,state,request,stats,p,the,server,needs,to,be,started,via,link,start,in,order,to,bind,to,the,configured,bind,address,param,bind,address,the,address,to,listen,to,param,bind,port,iterator,the,port,range,to,try,to,bind,to,param,num,event,loop,threads,number,of,event,loop,threads,param,num,query,threads,number,of,query,threads,param,stats,the,statistics,collector;public,kv,state,client,proxy,impl,final,inet,address,bind,address,final,iterator,integer,bind,port,iterator,final,integer,num,event,loop,threads,final,integer,num,query,threads,final,kv,state,request,stats,stats,super,queryable,state,proxy,server,bind,address,bind,port,iterator,num,event,loop,threads,num,query,threads,preconditions,check,argument,num,query,threads,1,non,positive,number,of,query,threads,this,query,executor,threads,num,query,threads,this,stats,preconditions,check,not,null,stats
KvStateClientProxyImpl -> public KvStateClientProxyImpl( 			final InetAddress bindAddress, 			final Iterator<Integer> bindPortIterator, 			final Integer numEventLoopThreads, 			final Integer numQueryThreads, 			final KvStateRequestStats stats);1517914184;Creates the Queryable State Client Proxy.__<p>The server is instantiated using reflection by the_{@link org.apache.flink.runtime.query.QueryableStateUtils#createKvStateClientProxy(InetAddress, Iterator, int, int, KvStateRequestStats)_QueryableStateUtils.createKvStateClientProxy(InetAddress, Iterator, int, int, KvStateRequestStats)}.__<p>The server needs to be started via {@link #start()} in order to bind_to the configured bind address.__@param bindAddress the address to listen to._@param bindPortIterator the port range to try to bind to._@param numEventLoopThreads number of event loop threads._@param numQueryThreads number of query threads._@param stats the statistics collector.;public KvStateClientProxyImpl(_			final InetAddress bindAddress,_			final Iterator<Integer> bindPortIterator,_			final Integer numEventLoopThreads,_			final Integer numQueryThreads,_			final KvStateRequestStats stats) {__		super("Queryable State Proxy Server", bindAddress, bindPortIterator, numEventLoopThreads, numQueryThreads)__		Preconditions.checkArgument(numQueryThreads >= 1, "Non-positive number of query threads.")__		this.queryExecutorThreads = numQueryThreads__		this.stats = Preconditions.checkNotNull(stats)___		this.kvStateLocationOracles = new ConcurrentHashMap<>(4)__	};creates,the,queryable,state,client,proxy,p,the,server,is,instantiated,using,reflection,by,the,link,org,apache,flink,runtime,query,queryable,state,utils,create,kv,state,client,proxy,inet,address,iterator,int,int,kv,state,request,stats,queryable,state,utils,create,kv,state,client,proxy,inet,address,iterator,int,int,kv,state,request,stats,p,the,server,needs,to,be,started,via,link,start,in,order,to,bind,to,the,configured,bind,address,param,bind,address,the,address,to,listen,to,param,bind,port,iterator,the,port,range,to,try,to,bind,to,param,num,event,loop,threads,number,of,event,loop,threads,param,num,query,threads,number,of,query,threads,param,stats,the,statistics,collector;public,kv,state,client,proxy,impl,final,inet,address,bind,address,final,iterator,integer,bind,port,iterator,final,integer,num,event,loop,threads,final,integer,num,query,threads,final,kv,state,request,stats,stats,super,queryable,state,proxy,server,bind,address,bind,port,iterator,num,event,loop,threads,num,query,threads,preconditions,check,argument,num,query,threads,1,non,positive,number,of,query,threads,this,query,executor,threads,num,query,threads,this,stats,preconditions,check,not,null,stats,this,kv,state,location,oracles,new,concurrent,hash,map,4
KvStateClientProxyImpl -> public KvStateClientProxyImpl( 			final InetAddress bindAddress, 			final Iterator<Integer> bindPortIterator, 			final Integer numEventLoopThreads, 			final Integer numQueryThreads, 			final KvStateRequestStats stats);1522681180;Creates the Queryable State Client Proxy.__<p>The server is instantiated using reflection by the_{@link org.apache.flink.runtime.query.QueryableStateUtils#createKvStateClientProxy(InetAddress, Iterator, int, int, KvStateRequestStats)_QueryableStateUtils.createKvStateClientProxy(InetAddress, Iterator, int, int, KvStateRequestStats)}.__<p>The server needs to be started via {@link #start()} in order to bind_to the configured bind address.__@param bindAddress the address to listen to._@param bindPortIterator the port range to try to bind to._@param numEventLoopThreads number of event loop threads._@param numQueryThreads number of query threads._@param stats the statistics collector.;public KvStateClientProxyImpl(_			final InetAddress bindAddress,_			final Iterator<Integer> bindPortIterator,_			final Integer numEventLoopThreads,_			final Integer numQueryThreads,_			final KvStateRequestStats stats) {__		super("Queryable State Proxy Server", bindAddress, bindPortIterator, numEventLoopThreads, numQueryThreads)__		Preconditions.checkArgument(numQueryThreads >= 1, "Non-positive number of query threads.")__		this.queryExecutorThreads = numQueryThreads__		this.stats = Preconditions.checkNotNull(stats)___		this.kvStateLocationOracles = new ConcurrentHashMap<>(4)__	};creates,the,queryable,state,client,proxy,p,the,server,is,instantiated,using,reflection,by,the,link,org,apache,flink,runtime,query,queryable,state,utils,create,kv,state,client,proxy,inet,address,iterator,int,int,kv,state,request,stats,queryable,state,utils,create,kv,state,client,proxy,inet,address,iterator,int,int,kv,state,request,stats,p,the,server,needs,to,be,started,via,link,start,in,order,to,bind,to,the,configured,bind,address,param,bind,address,the,address,to,listen,to,param,bind,port,iterator,the,port,range,to,try,to,bind,to,param,num,event,loop,threads,number,of,event,loop,threads,param,num,query,threads,number,of,query,threads,param,stats,the,statistics,collector;public,kv,state,client,proxy,impl,final,inet,address,bind,address,final,iterator,integer,bind,port,iterator,final,integer,num,event,loop,threads,final,integer,num,query,threads,final,kv,state,request,stats,stats,super,queryable,state,proxy,server,bind,address,bind,port,iterator,num,event,loop,threads,num,query,threads,preconditions,check,argument,num,query,threads,1,non,positive,number,of,query,threads,this,query,executor,threads,num,query,threads,this,stats,preconditions,check,not,null,stats,this,kv,state,location,oracles,new,concurrent,hash,map,4
