# id;timestamp;commentText;codeText;commentWords;codeWords
KvStateServerHandlerTest -> @Test 	public void testCloseChannelOnExceptionCaught() throws Exception;1509037054;Tests that the channel is closed if an Exception reaches the channel handler.;@Test_	public void testCloseChannelOnExceptionCaught() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(handler)___		channel.pipeline().fireExceptionCaught(new RuntimeException("Expected test Exception"))___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		Throwable response = MessageSerializer.deserializeServerFailure(buf)___		assertTrue(response.getMessage().contains("Expected test Exception"))___		channel.closeFuture().await(READ_TIMEOUT_MILLIS)__		assertFalse(channel.isActive())__	};tests,that,the,channel,is,closed,if,an,exception,reaches,the,channel,handler;test,public,void,test,close,channel,on,exception,caught,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,handler,channel,pipeline,fire,exception,caught,new,runtime,exception,expected,test,exception,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,throwable,response,message,serializer,deserialize,server,failure,buf,assert,true,response,get,message,contains,expected,test,exception,channel,close,future,await,assert,false,channel,is,active
KvStateServerHandlerTest -> @Test 	public void testCloseChannelOnExceptionCaught() throws Exception;1510911969;Tests that the channel is closed if an Exception reaches the channel handler.;@Test_	public void testCloseChannelOnExceptionCaught() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(handler)___		channel.pipeline().fireExceptionCaught(new RuntimeException("Expected test Exception"))___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		Throwable response = MessageSerializer.deserializeServerFailure(buf)___		assertTrue(response.getMessage().contains("Expected test Exception"))___		channel.closeFuture().await(READ_TIMEOUT_MILLIS)__		assertFalse(channel.isActive())__	};tests,that,the,channel,is,closed,if,an,exception,reaches,the,channel,handler;test,public,void,test,close,channel,on,exception,caught,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,handler,channel,pipeline,fire,exception,caught,new,runtime,exception,expected,test,exception,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,throwable,response,message,serializer,deserialize,server,failure,buf,assert,true,response,get,message,contains,expected,test,exception,channel,close,future,await,assert,false,channel,is,active
KvStateServerHandlerTest -> @Test 	public void testCloseChannelOnExceptionCaught() throws Exception;1517914184;Tests that the channel is closed if an Exception reaches the channel handler.;@Test_	public void testCloseChannelOnExceptionCaught() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(handler)___		channel.pipeline().fireExceptionCaught(new RuntimeException("Expected test Exception"))___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		Throwable response = MessageSerializer.deserializeServerFailure(buf)___		assertTrue(response.getMessage().contains("Expected test Exception"))___		channel.closeFuture().await(READ_TIMEOUT_MILLIS)__		assertFalse(channel.isActive())__	};tests,that,the,channel,is,closed,if,an,exception,reaches,the,channel,handler;test,public,void,test,close,channel,on,exception,caught,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,handler,channel,pipeline,fire,exception,caught,new,runtime,exception,expected,test,exception,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,throwable,response,message,serializer,deserialize,server,failure,buf,assert,true,response,get,message,contains,expected,test,exception,channel,close,future,await,assert,false,channel,is,active
KvStateServerHandlerTest -> @Test 	public void testCloseChannelOnExceptionCaught() throws Exception;1522337739;Tests that the channel is closed if an Exception reaches the channel handler.;@Test_	public void testCloseChannelOnExceptionCaught() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(handler)___		channel.pipeline().fireExceptionCaught(new RuntimeException("Expected test Exception"))___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		Throwable response = MessageSerializer.deserializeServerFailure(buf)___		assertTrue(response.getMessage().contains("Expected test Exception"))___		channel.closeFuture().await(READ_TIMEOUT_MILLIS)__		assertFalse(channel.isActive())__	};tests,that,the,channel,is,closed,if,an,exception,reaches,the,channel,handler;test,public,void,test,close,channel,on,exception,caught,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,handler,channel,pipeline,fire,exception,caught,new,runtime,exception,expected,test,exception,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,throwable,response,message,serializer,deserialize,server,failure,buf,assert,true,response,get,message,contains,expected,test,exception,channel,close,future,await,assert,false,channel,is,active
KvStateServerHandlerTest -> @Test 	public void testCloseChannelOnExceptionCaught() throws Exception;1531419503;Tests that the channel is closed if an Exception reaches the channel handler.;@Test_	public void testCloseChannelOnExceptionCaught() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(handler)___		channel.pipeline().fireExceptionCaught(new RuntimeException("Expected test Exception"))___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		Throwable response = MessageSerializer.deserializeServerFailure(buf)___		assertTrue(response.getMessage().contains("Expected test Exception"))___		channel.closeFuture().await(READ_TIMEOUT_MILLIS)__		assertFalse(channel.isActive())__	};tests,that,the,channel,is,closed,if,an,exception,reaches,the,channel,handler;test,public,void,test,close,channel,on,exception,caught,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,handler,channel,pipeline,fire,exception,caught,new,runtime,exception,expected,test,exception,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,throwable,response,message,serializer,deserialize,server,failure,buf,assert,true,response,get,message,contains,expected,test,exception,channel,close,future,await,assert,false,channel,is,active
KvStateServerHandlerTest -> @Test 	public void testCloseChannelOnExceptionCaught() throws Exception;1539939663;Tests that the channel is closed if an Exception reaches the channel handler.;@Test_	public void testCloseChannelOnExceptionCaught() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(handler)___		channel.pipeline().fireExceptionCaught(new RuntimeException("Expected test Exception"))___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		Throwable response = MessageSerializer.deserializeServerFailure(buf)___		assertTrue(response.getMessage().contains("Expected test Exception"))___		channel.closeFuture().await(READ_TIMEOUT_MILLIS)__		assertFalse(channel.isActive())__	};tests,that,the,channel,is,closed,if,an,exception,reaches,the,channel,handler;test,public,void,test,close,channel,on,exception,caught,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,handler,channel,pipeline,fire,exception,caught,new,runtime,exception,expected,test,exception,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,throwable,response,message,serializer,deserialize,server,failure,buf,assert,true,response,get,message,contains,expected,test,exception,channel,close,future,await,assert,false,channel,is,active
KvStateServerHandlerTest -> @Test 	public void testCloseChannelOnExceptionCaught() throws Exception;1548755874;Tests that the channel is closed if an Exception reaches the channel handler.;@Test_	public void testCloseChannelOnExceptionCaught() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(handler)___		channel.pipeline().fireExceptionCaught(new RuntimeException("Expected test Exception"))___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		Throwable response = MessageSerializer.deserializeServerFailure(buf)___		assertTrue(response.getMessage().contains("Expected test Exception"))___		channel.closeFuture().await(READ_TIMEOUT_MILLIS)__		assertFalse(channel.isActive())__	};tests,that,the,channel,is,closed,if,an,exception,reaches,the,channel,handler;test,public,void,test,close,channel,on,exception,caught,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,handler,channel,pipeline,fire,exception,caught,new,runtime,exception,expected,test,exception,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,throwable,response,message,serializer,deserialize,server,failure,buf,assert,true,response,get,message,contains,expected,test,exception,channel,close,future,await,assert,false,channel,is,active
KvStateServerHandlerTest -> @Test 	public void testCloseChannelOnExceptionCaught() throws Exception;1550863001;Tests that the channel is closed if an Exception reaches the channel handler.;@Test_	public void testCloseChannelOnExceptionCaught() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(handler)___		channel.pipeline().fireExceptionCaught(new RuntimeException("Expected test Exception"))___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		Throwable response = MessageSerializer.deserializeServerFailure(buf)___		assertTrue(response.getMessage().contains("Expected test Exception"))___		channel.closeFuture().await(READ_TIMEOUT_MILLIS)__		assertFalse(channel.isActive())__	};tests,that,the,channel,is,closed,if,an,exception,reaches,the,channel,handler;test,public,void,test,close,channel,on,exception,caught,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,handler,channel,pipeline,fire,exception,caught,new,runtime,exception,expected,test,exception,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,throwable,response,message,serializer,deserialize,server,failure,buf,assert,true,response,get,message,contains,expected,test,exception,channel,close,future,await,assert,false,channel,is,active
KvStateServerHandlerTest -> @Test 	public void testChunkedResponse() throws Exception;1509037054;Tests that large responses are chunked.;@Test_	public void testChunkedResponse() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		KvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = abstractBackend.createKeyedStateBackend(_				dummyEnv,_				new JobID(),_				"test_op",_				IntSerializer.INSTANCE,_				numKeyGroups,_				new KeyGroupRange(0, 0),_				registry.createTaskRegistry(dummyEnv.getJobID(), dummyEnv.getJobVertexId()))___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(registryListener)___		_		ValueStateDescriptor<byte[]> desc = new ValueStateDescriptor<>("any", BytePrimitiveArraySerializer.INSTANCE)__		desc.setQueryable("vanilla")___		ValueState<byte[]> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		_		byte[] bytes = new byte[2 * channel.config().getWriteBufferHighWaterMark()]___		byte current = 0__		for (int i = 0_ i < bytes.length_ i++) {_			bytes[i] = current++__		}__		int key = 99812822__		backend.setCurrentKey(key)__		state.update(bytes)___		_		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 182828L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, serializedKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		Object msg = readInboundBlocking(channel)__		assertTrue("Not ChunkedByteBuf", msg instanceof ChunkedByteBuf)__	};tests,that,large,responses,are,chunked;test,public,void,test,chunked,response,throws,exception,kv,state,registry,registry,new,kv,state,registry,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,abstract,backend,create,keyed,state,backend,dummy,env,new,job,id,int,serializer,instance,num,key,groups,new,key,group,range,0,0,registry,create,task,registry,dummy,env,get,job,id,dummy,env,get,job,vertex,id,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,registry,listener,value,state,descriptor,byte,desc,new,value,state,descriptor,any,byte,primitive,array,serializer,instance,desc,set,queryable,vanilla,value,state,byte,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,byte,bytes,new,byte,2,channel,config,get,write,buffer,high,water,mark,byte,current,0,for,int,i,0,i,bytes,length,i,bytes,i,current,int,key,99812822,backend,set,current,key,key,state,update,bytes,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,182828l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,object,msg,read,inbound,blocking,channel,assert,true,not,chunked,byte,buf,msg,instanceof,chunked,byte,buf
KvStateServerHandlerTest -> @Test 	public void testChunkedResponse() throws Exception;1510911969;Tests that large responses are chunked.;@Test_	public void testChunkedResponse() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		KvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = abstractBackend.createKeyedStateBackend(_				dummyEnv,_				new JobID(),_				"test_op",_				IntSerializer.INSTANCE,_				numKeyGroups,_				new KeyGroupRange(0, 0),_				registry.createTaskRegistry(dummyEnv.getJobID(), dummyEnv.getJobVertexId()))___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(registryListener)___		_		ValueStateDescriptor<byte[]> desc = new ValueStateDescriptor<>("any", BytePrimitiveArraySerializer.INSTANCE)__		desc.setQueryable("vanilla")___		ValueState<byte[]> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		_		byte[] bytes = new byte[2 * channel.config().getWriteBufferHighWaterMark()]___		byte current = 0__		for (int i = 0_ i < bytes.length_ i++) {_			bytes[i] = current++__		}__		int key = 99812822__		backend.setCurrentKey(key)__		state.update(bytes)___		_		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 182828L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, serializedKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		Object msg = readInboundBlocking(channel)__		assertTrue("Not ChunkedByteBuf", msg instanceof ChunkedByteBuf)__	};tests,that,large,responses,are,chunked;test,public,void,test,chunked,response,throws,exception,kv,state,registry,registry,new,kv,state,registry,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,abstract,backend,create,keyed,state,backend,dummy,env,new,job,id,int,serializer,instance,num,key,groups,new,key,group,range,0,0,registry,create,task,registry,dummy,env,get,job,id,dummy,env,get,job,vertex,id,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,registry,listener,value,state,descriptor,byte,desc,new,value,state,descriptor,any,byte,primitive,array,serializer,instance,desc,set,queryable,vanilla,value,state,byte,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,byte,bytes,new,byte,2,channel,config,get,write,buffer,high,water,mark,byte,current,0,for,int,i,0,i,bytes,length,i,bytes,i,current,int,key,99812822,backend,set,current,key,key,state,update,bytes,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,182828l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,object,msg,read,inbound,blocking,channel,assert,true,not,chunked,byte,buf,msg,instanceof,chunked,byte,buf
KvStateServerHandlerTest -> @Test 	public void testChunkedResponse() throws Exception;1517914184;Tests that large responses are chunked.;@Test_	public void testChunkedResponse() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		KvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<byte[]> desc = new ValueStateDescriptor<>("any", BytePrimitiveArraySerializer.INSTANCE)__		desc.setQueryable("vanilla")___		ValueState<byte[]> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		_		byte[] bytes = new byte[2 * channel.config().getWriteBufferHighWaterMark()]___		byte current = 0__		for (int i = 0_ i < bytes.length_ i++) {_			bytes[i] = current++__		}__		int key = 99812822__		backend.setCurrentKey(key)__		state.update(bytes)___		_		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 182828L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, serializedKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		Object msg = readInboundBlocking(channel)__		assertTrue("Not ChunkedByteBuf", msg instanceof ChunkedByteBuf)__	};tests,that,large,responses,are,chunked;test,public,void,test,chunked,response,throws,exception,kv,state,registry,registry,new,kv,state,registry,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,byte,desc,new,value,state,descriptor,any,byte,primitive,array,serializer,instance,desc,set,queryable,vanilla,value,state,byte,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,byte,bytes,new,byte,2,channel,config,get,write,buffer,high,water,mark,byte,current,0,for,int,i,0,i,bytes,length,i,bytes,i,current,int,key,99812822,backend,set,current,key,key,state,update,bytes,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,182828l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,object,msg,read,inbound,blocking,channel,assert,true,not,chunked,byte,buf,msg,instanceof,chunked,byte,buf
KvStateServerHandlerTest -> @Test 	public void testChunkedResponse() throws Exception;1522337739;Tests that large responses are chunked.;@Test_	public void testChunkedResponse() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		KvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<byte[]> desc = new ValueStateDescriptor<>("any", BytePrimitiveArraySerializer.INSTANCE)__		desc.setQueryable("vanilla")___		ValueState<byte[]> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		_		byte[] bytes = new byte[2 * channel.config().getWriteBufferHighWaterMark()]___		byte current = 0__		for (int i = 0_ i < bytes.length_ i++) {_			bytes[i] = current++__		}__		int key = 99812822__		backend.setCurrentKey(key)__		state.update(bytes)___		_		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 182828L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, serializedKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		Object msg = readInboundBlocking(channel)__		assertTrue("Not ChunkedByteBuf", msg instanceof ChunkedByteBuf)__	};tests,that,large,responses,are,chunked;test,public,void,test,chunked,response,throws,exception,kv,state,registry,registry,new,kv,state,registry,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,byte,desc,new,value,state,descriptor,any,byte,primitive,array,serializer,instance,desc,set,queryable,vanilla,value,state,byte,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,byte,bytes,new,byte,2,channel,config,get,write,buffer,high,water,mark,byte,current,0,for,int,i,0,i,bytes,length,i,bytes,i,current,int,key,99812822,backend,set,current,key,key,state,update,bytes,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,182828l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,object,msg,read,inbound,blocking,channel,assert,true,not,chunked,byte,buf,msg,instanceof,chunked,byte,buf
KvStateServerHandlerTest -> @Test 	public void testChunkedResponse() throws Exception;1531419503;Tests that large responses are chunked.;@Test_	public void testChunkedResponse() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		KvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<byte[]> desc = new ValueStateDescriptor<>("any", BytePrimitiveArraySerializer.INSTANCE)__		desc.setQueryable("vanilla")___		ValueState<byte[]> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		_		byte[] bytes = new byte[2 * channel.config().getWriteBufferHighWaterMark()]___		byte current = 0__		for (int i = 0_ i < bytes.length_ i++) {_			bytes[i] = current++__		}__		int key = 99812822__		backend.setCurrentKey(key)__		state.update(bytes)___		_		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 182828L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, serializedKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		Object msg = readInboundBlocking(channel)__		assertTrue("Not ChunkedByteBuf", msg instanceof ChunkedByteBuf)__	};tests,that,large,responses,are,chunked;test,public,void,test,chunked,response,throws,exception,kv,state,registry,registry,new,kv,state,registry,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,byte,desc,new,value,state,descriptor,any,byte,primitive,array,serializer,instance,desc,set,queryable,vanilla,value,state,byte,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,byte,bytes,new,byte,2,channel,config,get,write,buffer,high,water,mark,byte,current,0,for,int,i,0,i,bytes,length,i,bytes,i,current,int,key,99812822,backend,set,current,key,key,state,update,bytes,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,182828l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,object,msg,read,inbound,blocking,channel,assert,true,not,chunked,byte,buf,msg,instanceof,chunked,byte,buf
KvStateServerHandlerTest -> @Test 	public void testChunkedResponse() throws Exception;1539939663;Tests that large responses are chunked.;@Test_	public void testChunkedResponse() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		KvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<byte[]> desc = new ValueStateDescriptor<>("any", BytePrimitiveArraySerializer.INSTANCE)__		desc.setQueryable("vanilla")___		ValueState<byte[]> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		_		byte[] bytes = new byte[2 * channel.config().getWriteBufferHighWaterMark()]___		byte current = 0__		for (int i = 0_ i < bytes.length_ i++) {_			bytes[i] = current++__		}__		int key = 99812822__		backend.setCurrentKey(key)__		state.update(bytes)___		_		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 182828L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, serializedKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		Object msg = readInboundBlocking(channel)__		assertTrue("Not ChunkedByteBuf", msg instanceof ChunkedByteBuf)__	};tests,that,large,responses,are,chunked;test,public,void,test,chunked,response,throws,exception,kv,state,registry,registry,new,kv,state,registry,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,byte,desc,new,value,state,descriptor,any,byte,primitive,array,serializer,instance,desc,set,queryable,vanilla,value,state,byte,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,byte,bytes,new,byte,2,channel,config,get,write,buffer,high,water,mark,byte,current,0,for,int,i,0,i,bytes,length,i,bytes,i,current,int,key,99812822,backend,set,current,key,key,state,update,bytes,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,182828l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,object,msg,read,inbound,blocking,channel,assert,true,not,chunked,byte,buf,msg,instanceof,chunked,byte,buf
KvStateServerHandlerTest -> @Test 	public void testChunkedResponse() throws Exception;1548755874;Tests that large responses are chunked.;@Test_	public void testChunkedResponse() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		KvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<byte[]> desc = new ValueStateDescriptor<>("any", BytePrimitiveArraySerializer.INSTANCE)__		desc.setQueryable("vanilla")___		ValueState<byte[]> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		_		byte[] bytes = new byte[2 * channel.config().getWriteBufferHighWaterMark()]___		byte current = 0__		for (int i = 0_ i < bytes.length_ i++) {_			bytes[i] = current++__		}__		int key = 99812822__		backend.setCurrentKey(key)__		state.update(bytes)___		_		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 182828L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, serializedKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		Object msg = readInboundBlocking(channel)__		assertTrue("Not ChunkedByteBuf", msg instanceof ChunkedByteBuf)__	};tests,that,large,responses,are,chunked;test,public,void,test,chunked,response,throws,exception,kv,state,registry,registry,new,kv,state,registry,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,byte,desc,new,value,state,descriptor,any,byte,primitive,array,serializer,instance,desc,set,queryable,vanilla,value,state,byte,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,byte,bytes,new,byte,2,channel,config,get,write,buffer,high,water,mark,byte,current,0,for,int,i,0,i,bytes,length,i,bytes,i,current,int,key,99812822,backend,set,current,key,key,state,update,bytes,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,182828l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,object,msg,read,inbound,blocking,channel,assert,true,not,chunked,byte,buf,msg,instanceof,chunked,byte,buf
KvStateServerHandlerTest -> @Test 	public void testChunkedResponse() throws Exception;1550863001;Tests that large responses are chunked.;@Test_	public void testChunkedResponse() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		KvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<byte[]> desc = new ValueStateDescriptor<>("any", BytePrimitiveArraySerializer.INSTANCE)__		desc.setQueryable("vanilla")___		ValueState<byte[]> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		_		byte[] bytes = new byte[2 * channel.config().getWriteBufferHighWaterMark()]___		byte current = 0__		for (int i = 0_ i < bytes.length_ i++) {_			bytes[i] = current++__		}__		int key = 99812822__		backend.setCurrentKey(key)__		state.update(bytes)___		_		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 182828L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, serializedKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		Object msg = readInboundBlocking(channel)__		assertTrue("Not ChunkedByteBuf", msg instanceof ChunkedByteBuf)__	};tests,that,large,responses,are,chunked;test,public,void,test,chunked,response,throws,exception,kv,state,registry,registry,new,kv,state,registry,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,byte,desc,new,value,state,descriptor,any,byte,primitive,array,serializer,instance,desc,set,queryable,vanilla,value,state,byte,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,byte,bytes,new,byte,2,channel,config,get,write,buffer,high,water,mark,byte,current,0,for,int,i,0,i,bytes,length,i,bytes,i,current,int,key,99812822,backend,set,current,key,key,state,update,bytes,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,182828l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,object,msg,read,inbound,blocking,channel,assert,true,not,chunked,byte,buf,msg,instanceof,chunked,byte,buf
KvStateServerHandlerTest -> @Test 	public void testQueryUnknownKvStateID() throws Exception;1509037054;Tests the failure response with {@link UnknownKvStateIdException} as cause on_queries for unregistered KvStateIDs.;@Test_	public void testQueryUnknownKvStateID() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		long requestId = Integer.MAX_VALUE + 182828L___		KvStateInternalRequest request = new KvStateInternalRequest(new KvStateID(), new byte[0])___		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertEquals(requestId, response.getRequestId())___		assertTrue("Did not respond with expected failure cause", response.getCause() instanceof UnknownKvStateIdException)___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,with,link,unknown,kv,state,id,exception,as,cause,on,queries,for,unregistered,kv,state,ids;test,public,void,test,query,unknown,kv,state,id,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,long,request,id,integer,182828l,kv,state,internal,request,request,new,kv,state,internal,request,new,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,request,id,response,get,request,id,assert,true,did,not,respond,with,expected,failure,cause,response,get,cause,instanceof,unknown,kv,state,id,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testQueryUnknownKvStateID() throws Exception;1510911969;Tests the failure response with {@link UnknownKvStateIdException} as cause on_queries for unregistered KvStateIDs.;@Test_	public void testQueryUnknownKvStateID() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		long requestId = Integer.MAX_VALUE + 182828L___		KvStateInternalRequest request = new KvStateInternalRequest(new KvStateID(), new byte[0])___		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertEquals(requestId, response.getRequestId())___		assertTrue("Did not respond with expected failure cause", response.getCause() instanceof UnknownKvStateIdException)___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,with,link,unknown,kv,state,id,exception,as,cause,on,queries,for,unregistered,kv,state,ids;test,public,void,test,query,unknown,kv,state,id,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,long,request,id,integer,182828l,kv,state,internal,request,request,new,kv,state,internal,request,new,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,request,id,response,get,request,id,assert,true,did,not,respond,with,expected,failure,cause,response,get,cause,instanceof,unknown,kv,state,id,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testQueryUnknownKvStateID() throws Exception;1517914184;Tests the failure response with {@link UnknownKvStateIdException} as cause on_queries for unregistered KvStateIDs.;@Test_	public void testQueryUnknownKvStateID() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		long requestId = Integer.MAX_VALUE + 182828L___		KvStateInternalRequest request = new KvStateInternalRequest(new KvStateID(), new byte[0])___		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertEquals(requestId, response.getRequestId())___		assertTrue("Did not respond with expected failure cause", response.getCause() instanceof UnknownKvStateIdException)___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,with,link,unknown,kv,state,id,exception,as,cause,on,queries,for,unregistered,kv,state,ids;test,public,void,test,query,unknown,kv,state,id,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,long,request,id,integer,182828l,kv,state,internal,request,request,new,kv,state,internal,request,new,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,request,id,response,get,request,id,assert,true,did,not,respond,with,expected,failure,cause,response,get,cause,instanceof,unknown,kv,state,id,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testQueryUnknownKvStateID() throws Exception;1522337739;Tests the failure response with {@link UnknownKvStateIdException} as cause on_queries for unregistered KvStateIDs.;@Test_	public void testQueryUnknownKvStateID() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		long requestId = Integer.MAX_VALUE + 182828L___		KvStateInternalRequest request = new KvStateInternalRequest(new KvStateID(), new byte[0])___		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertEquals(requestId, response.getRequestId())___		assertTrue("Did not respond with expected failure cause", response.getCause() instanceof UnknownKvStateIdException)___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,with,link,unknown,kv,state,id,exception,as,cause,on,queries,for,unregistered,kv,state,ids;test,public,void,test,query,unknown,kv,state,id,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,long,request,id,integer,182828l,kv,state,internal,request,request,new,kv,state,internal,request,new,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,request,id,response,get,request,id,assert,true,did,not,respond,with,expected,failure,cause,response,get,cause,instanceof,unknown,kv,state,id,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testQueryUnknownKvStateID() throws Exception;1531419503;Tests the failure response with {@link UnknownKvStateIdException} as cause on_queries for unregistered KvStateIDs.;@Test_	public void testQueryUnknownKvStateID() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		long requestId = Integer.MAX_VALUE + 182828L___		KvStateInternalRequest request = new KvStateInternalRequest(new KvStateID(), new byte[0])___		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertEquals(requestId, response.getRequestId())___		assertTrue("Did not respond with expected failure cause", response.getCause() instanceof UnknownKvStateIdException)___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,with,link,unknown,kv,state,id,exception,as,cause,on,queries,for,unregistered,kv,state,ids;test,public,void,test,query,unknown,kv,state,id,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,long,request,id,integer,182828l,kv,state,internal,request,request,new,kv,state,internal,request,new,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,request,id,response,get,request,id,assert,true,did,not,respond,with,expected,failure,cause,response,get,cause,instanceof,unknown,kv,state,id,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testQueryUnknownKvStateID() throws Exception;1539939663;Tests the failure response with {@link UnknownKvStateIdException} as cause on_queries for unregistered KvStateIDs.;@Test_	public void testQueryUnknownKvStateID() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		long requestId = Integer.MAX_VALUE + 182828L___		KvStateInternalRequest request = new KvStateInternalRequest(new KvStateID(), new byte[0])___		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertEquals(requestId, response.getRequestId())___		assertTrue("Did not respond with expected failure cause", response.getCause() instanceof UnknownKvStateIdException)___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,with,link,unknown,kv,state,id,exception,as,cause,on,queries,for,unregistered,kv,state,ids;test,public,void,test,query,unknown,kv,state,id,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,long,request,id,integer,182828l,kv,state,internal,request,request,new,kv,state,internal,request,new,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,request,id,response,get,request,id,assert,true,did,not,respond,with,expected,failure,cause,response,get,cause,instanceof,unknown,kv,state,id,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testQueryUnknownKvStateID() throws Exception;1548755874;Tests the failure response with {@link UnknownKvStateIdException} as cause on_queries for unregistered KvStateIDs.;@Test_	public void testQueryUnknownKvStateID() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		long requestId = Integer.MAX_VALUE + 182828L___		KvStateInternalRequest request = new KvStateInternalRequest(new KvStateID(), new byte[0])___		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertEquals(requestId, response.getRequestId())___		assertTrue("Did not respond with expected failure cause", response.getCause() instanceof UnknownKvStateIdException)___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,with,link,unknown,kv,state,id,exception,as,cause,on,queries,for,unregistered,kv,state,ids;test,public,void,test,query,unknown,kv,state,id,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,long,request,id,integer,182828l,kv,state,internal,request,request,new,kv,state,internal,request,new,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,request,id,response,get,request,id,assert,true,did,not,respond,with,expected,failure,cause,response,get,cause,instanceof,unknown,kv,state,id,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testQueryUnknownKvStateID() throws Exception;1550863001;Tests the failure response with {@link UnknownKvStateIdException} as cause on_queries for unregistered KvStateIDs.;@Test_	public void testQueryUnknownKvStateID() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		long requestId = Integer.MAX_VALUE + 182828L___		KvStateInternalRequest request = new KvStateInternalRequest(new KvStateID(), new byte[0])___		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertEquals(requestId, response.getRequestId())___		assertTrue("Did not respond with expected failure cause", response.getCause() instanceof UnknownKvStateIdException)___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,with,link,unknown,kv,state,id,exception,as,cause,on,queries,for,unregistered,kv,state,ids;test,public,void,test,query,unknown,kv,state,id,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,long,request,id,integer,182828l,kv,state,internal,request,request,new,kv,state,internal,request,new,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,request,id,response,get,request,id,assert,true,did,not,respond,with,expected,failure,cause,response,get,cause,instanceof,unknown,kv,state,id,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testQueryExecutorShutDown() throws Throwable;1509037054;Tests the failure response on a rejected execution, because the query executor has been closed.;@Test_	public void testQueryExecutorShutDown() throws Throwable {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		KvStateServerImpl localTestServer = new KvStateServerImpl(_				InetAddress.getLocalHost(),_				Collections.singletonList(0).iterator(),_				1,_				1,_				new KvStateRegistry(),_				new DisabledKvStateRequestStats())___		localTestServer.start()__		localTestServer.shutdown()__		assertTrue(localTestServer.isExecutorShutdown())___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(localTestServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		KeyedStateBackend<Integer> backend = abstractBackend.createKeyedStateBackend(_				dummyEnv,_				new JobID(),_				"test_op",_				IntSerializer.INSTANCE,_				numKeyGroups,_				new KeyGroupRange(0, 0),_				registry.createTaskRegistry(dummyEnv.getJobID(), dummyEnv.getJobVertexId()))___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		backend.getPartitionedState(VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, desc)___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertTrue(response.getCause().getMessage().contains("RejectedExecutionException"))___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())___		localTestServer.shutdown()__	};tests,the,failure,response,on,a,rejected,execution,because,the,query,executor,has,been,closed;test,public,void,test,query,executor,shut,down,throws,throwable,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,kv,state,server,impl,local,test,server,new,kv,state,server,impl,inet,address,get,local,host,collections,singleton,list,0,iterator,1,1,new,kv,state,registry,new,disabled,kv,state,request,stats,local,test,server,start,local,test,server,shutdown,assert,true,local,test,server,is,executor,shutdown,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,local,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,keyed,state,backend,integer,backend,abstract,backend,create,keyed,state,backend,dummy,env,new,job,id,int,serializer,instance,num,key,groups,new,key,group,range,0,0,registry,create,task,registry,dummy,env,get,job,id,dummy,env,get,job,vertex,id,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,true,response,get,cause,get,message,contains,rejected,execution,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed,local,test,server,shutdown
KvStateServerHandlerTest -> @Test 	public void testQueryExecutorShutDown() throws Throwable;1510911969;Tests the failure response on a rejected execution, because the query executor has been closed.;@Test_	public void testQueryExecutorShutDown() throws Throwable {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		KvStateServerImpl localTestServer = new KvStateServerImpl(_				InetAddress.getLocalHost(),_				Collections.singletonList(0).iterator(),_				1,_				1,_				new KvStateRegistry(),_				new DisabledKvStateRequestStats())___		localTestServer.start()__		localTestServer.shutdown()__		assertTrue(localTestServer.getQueryExecutor().isTerminated())___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(localTestServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		KeyedStateBackend<Integer> backend = abstractBackend.createKeyedStateBackend(_				dummyEnv,_				new JobID(),_				"test_op",_				IntSerializer.INSTANCE,_				numKeyGroups,_				new KeyGroupRange(0, 0),_				registry.createTaskRegistry(dummyEnv.getJobID(), dummyEnv.getJobVertexId()))___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		backend.getPartitionedState(VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, desc)___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertTrue(response.getCause().getMessage().contains("RejectedExecutionException"))___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())___		localTestServer.shutdown()__	};tests,the,failure,response,on,a,rejected,execution,because,the,query,executor,has,been,closed;test,public,void,test,query,executor,shut,down,throws,throwable,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,kv,state,server,impl,local,test,server,new,kv,state,server,impl,inet,address,get,local,host,collections,singleton,list,0,iterator,1,1,new,kv,state,registry,new,disabled,kv,state,request,stats,local,test,server,start,local,test,server,shutdown,assert,true,local,test,server,get,query,executor,is,terminated,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,local,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,keyed,state,backend,integer,backend,abstract,backend,create,keyed,state,backend,dummy,env,new,job,id,int,serializer,instance,num,key,groups,new,key,group,range,0,0,registry,create,task,registry,dummy,env,get,job,id,dummy,env,get,job,vertex,id,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,true,response,get,cause,get,message,contains,rejected,execution,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed,local,test,server,shutdown
KvStateServerHandlerTest -> @Test 	public void testQueryExecutorShutDown() throws Throwable;1517914184;Tests the failure response on a rejected execution, because the query executor has been closed.;@Test_	public void testQueryExecutorShutDown() throws Throwable {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		KvStateServerImpl localTestServer = new KvStateServerImpl(_				InetAddress.getLocalHost(),_				Collections.singletonList(0).iterator(),_				1,_				1,_				new KvStateRegistry(),_				new DisabledKvStateRequestStats())___		localTestServer.start()__		localTestServer.shutdown()__		assertTrue(localTestServer.getQueryExecutor().isTerminated())___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(localTestServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		KeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		backend.getPartitionedState(VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, desc)___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertTrue(response.getCause().getMessage().contains("RejectedExecutionException"))___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())___		localTestServer.shutdown()__	};tests,the,failure,response,on,a,rejected,execution,because,the,query,executor,has,been,closed;test,public,void,test,query,executor,shut,down,throws,throwable,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,kv,state,server,impl,local,test,server,new,kv,state,server,impl,inet,address,get,local,host,collections,singleton,list,0,iterator,1,1,new,kv,state,registry,new,disabled,kv,state,request,stats,local,test,server,start,local,test,server,shutdown,assert,true,local,test,server,get,query,executor,is,terminated,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,local,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,true,response,get,cause,get,message,contains,rejected,execution,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed,local,test,server,shutdown
KvStateServerHandlerTest -> @Test 	public void testQueryExecutorShutDown() throws Throwable;1522337739;Tests the failure response on a rejected execution, because the query executor has been closed.;@Test_	public void testQueryExecutorShutDown() throws Throwable {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		KvStateServerImpl localTestServer = new KvStateServerImpl(_				InetAddress.getLocalHost(),_				Collections.singletonList(0).iterator(),_				1,_				1,_				new KvStateRegistry(),_				new DisabledKvStateRequestStats())___		localTestServer.start()__		localTestServer.shutdown()__		assertTrue(localTestServer.getQueryExecutor().isTerminated())___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(localTestServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		KeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		backend.getPartitionedState(VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, desc)___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertTrue(response.getCause().getMessage().contains("RejectedExecutionException"))___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())___		localTestServer.shutdown()__	};tests,the,failure,response,on,a,rejected,execution,because,the,query,executor,has,been,closed;test,public,void,test,query,executor,shut,down,throws,throwable,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,kv,state,server,impl,local,test,server,new,kv,state,server,impl,inet,address,get,local,host,collections,singleton,list,0,iterator,1,1,new,kv,state,registry,new,disabled,kv,state,request,stats,local,test,server,start,local,test,server,shutdown,assert,true,local,test,server,get,query,executor,is,terminated,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,local,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,true,response,get,cause,get,message,contains,rejected,execution,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed,local,test,server,shutdown
KvStateServerHandlerTest -> @Test 	public void testQueryExecutorShutDown() throws Throwable;1531419503;Tests the failure response on a rejected execution, because the query executor has been closed.;@Test_	public void testQueryExecutorShutDown() throws Throwable {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		KvStateServerImpl localTestServer = new KvStateServerImpl(_				InetAddress.getLocalHost(),_				Collections.singletonList(0).iterator(),_				1,_				1,_				new KvStateRegistry(),_				new DisabledKvStateRequestStats())___		localTestServer.start()__		localTestServer.shutdown()__		assertTrue(localTestServer.getQueryExecutor().isTerminated())___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(localTestServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		KeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		backend.getPartitionedState(VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, desc)___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertTrue(response.getCause().getMessage().contains("RejectedExecutionException"))___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())___		localTestServer.shutdown()__	};tests,the,failure,response,on,a,rejected,execution,because,the,query,executor,has,been,closed;test,public,void,test,query,executor,shut,down,throws,throwable,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,kv,state,server,impl,local,test,server,new,kv,state,server,impl,inet,address,get,local,host,collections,singleton,list,0,iterator,1,1,new,kv,state,registry,new,disabled,kv,state,request,stats,local,test,server,start,local,test,server,shutdown,assert,true,local,test,server,get,query,executor,is,terminated,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,local,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,true,response,get,cause,get,message,contains,rejected,execution,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed,local,test,server,shutdown
KvStateServerHandlerTest -> @Test 	public void testQueryExecutorShutDown() throws Throwable;1539939663;Tests the failure response on a rejected execution, because the query executor has been closed.;@Test_	public void testQueryExecutorShutDown() throws Throwable {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		KvStateServerImpl localTestServer = new KvStateServerImpl(_				InetAddress.getLocalHost(),_				Collections.singletonList(0).iterator(),_				1,_				1,_				new KvStateRegistry(),_				new DisabledKvStateRequestStats())___		localTestServer.start()__		localTestServer.shutdown()__		assertTrue(localTestServer.getQueryExecutor().isTerminated())___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(localTestServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		KeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		backend.getPartitionedState(VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, desc)___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertTrue(response.getCause().getMessage().contains("RejectedExecutionException"))___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())___		localTestServer.shutdown()__	};tests,the,failure,response,on,a,rejected,execution,because,the,query,executor,has,been,closed;test,public,void,test,query,executor,shut,down,throws,throwable,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,kv,state,server,impl,local,test,server,new,kv,state,server,impl,inet,address,get,local,host,collections,singleton,list,0,iterator,1,1,new,kv,state,registry,new,disabled,kv,state,request,stats,local,test,server,start,local,test,server,shutdown,assert,true,local,test,server,get,query,executor,is,terminated,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,local,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,true,response,get,cause,get,message,contains,rejected,execution,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed,local,test,server,shutdown
KvStateServerHandlerTest -> @Test 	public void testQueryExecutorShutDown() throws Throwable;1548755874;Tests the failure response on a rejected execution, because the query executor has been closed.;@Test_	public void testQueryExecutorShutDown() throws Throwable {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		KvStateServerImpl localTestServer = new KvStateServerImpl(_				InetAddress.getLocalHost(),_				Collections.singletonList(0).iterator(),_				1,_				1,_				new KvStateRegistry(),_				new DisabledKvStateRequestStats())___		localTestServer.start()__		localTestServer.shutdown()__		assertTrue(localTestServer.getQueryExecutor().isTerminated())___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(localTestServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		KeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		backend.getPartitionedState(VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, desc)___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertTrue(response.getCause().getMessage().contains("RejectedExecutionException"))___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())___		localTestServer.shutdown()__	};tests,the,failure,response,on,a,rejected,execution,because,the,query,executor,has,been,closed;test,public,void,test,query,executor,shut,down,throws,throwable,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,kv,state,server,impl,local,test,server,new,kv,state,server,impl,inet,address,get,local,host,collections,singleton,list,0,iterator,1,1,new,kv,state,registry,new,disabled,kv,state,request,stats,local,test,server,start,local,test,server,shutdown,assert,true,local,test,server,get,query,executor,is,terminated,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,local,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,true,response,get,cause,get,message,contains,rejected,execution,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed,local,test,server,shutdown
KvStateServerHandlerTest -> @Test 	public void testQueryExecutorShutDown() throws Throwable;1550863001;Tests the failure response on a rejected execution, because the query executor has been closed.;@Test_	public void testQueryExecutorShutDown() throws Throwable {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		KvStateServerImpl localTestServer = new KvStateServerImpl(_				InetAddress.getLocalHost(),_				Collections.singletonList(0).iterator(),_				1,_				1,_				new KvStateRegistry(),_				new DisabledKvStateRequestStats())___		localTestServer.start()__		localTestServer.shutdown()__		assertTrue(localTestServer.getQueryExecutor().isTerminated())___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(localTestServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		KeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		backend.getPartitionedState(VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, desc)___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertTrue(response.getCause().getMessage().contains("RejectedExecutionException"))___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())___		localTestServer.shutdown()__	};tests,the,failure,response,on,a,rejected,execution,because,the,query,executor,has,been,closed;test,public,void,test,query,executor,shut,down,throws,throwable,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,kv,state,server,impl,local,test,server,new,kv,state,server,impl,inet,address,get,local,host,collections,singleton,list,0,iterator,1,1,new,kv,state,registry,new,disabled,kv,state,request,stats,local,test,server,start,local,test,server,shutdown,assert,true,local,test,server,get,query,executor,is,terminated,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,local,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,true,response,get,cause,get,message,contains,rejected,execution,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed,local,test,server,shutdown
KvStateServerHandlerTest -> @Test 	public void testSerializerMismatch() throws Exception;1509037054;Tests the failure response if the serializers don't match.;@Test_	public void testSerializerMismatch() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = abstractBackend.createKeyedStateBackend(_				dummyEnv,_				new JobID(),_				"test_op",_				IntSerializer.INSTANCE,_				numKeyGroups,_				new KeyGroupRange(0, 0),_				registry.createTaskRegistry(dummyEnv.getJobID(), dummyEnv.getJobVertexId()))___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		ValueState<Integer> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		int key = 99812822___		_		backend.setCurrentKey(key)__		state.update(712828289)___		byte[] wrongKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				"wrong-key-type",_				StringSerializer.INSTANCE,_				"wrong-namespace-type",_				StringSerializer.INSTANCE)___		byte[] wrongNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				"wrong-namespace-type",_				StringSerializer.INSTANCE)___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, wrongKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 182828L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)__		assertEquals(182828L, response.getRequestId())__		assertTrue(response.getCause().getMessage().contains("IOException"))___		_		request = new KvStateInternalRequest(registryListener.kvStateId, wrongNamespace)__		serRequest = MessageSerializer.serializeRequest(channel.alloc(), 182829L, request)___		_		channel.writeInbound(serRequest)___		buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		response = MessageSerializer.deserializeRequestFailure(buf)__		assertEquals(182829L, response.getRequestId())__		assertTrue(response.getCause().getMessage().contains("IOException"))___		assertEquals(2L, stats.getNumRequests())__		assertEquals(2L, stats.getNumFailed())__	};tests,the,failure,response,if,the,serializers,don,t,match;test,public,void,test,serializer,mismatch,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,abstract,backend,create,keyed,state,backend,dummy,env,new,job,id,int,serializer,instance,num,key,groups,new,key,group,range,0,0,registry,create,task,registry,dummy,env,get,job,id,dummy,env,get,job,vertex,id,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,value,state,integer,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,int,key,99812822,backend,set,current,key,key,state,update,712828289,byte,wrong,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,wrong,key,type,string,serializer,instance,wrong,namespace,type,string,serializer,instance,byte,wrong,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,wrong,namespace,type,string,serializer,instance,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,wrong,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,182828l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,182828l,response,get,request,id,assert,true,response,get,cause,get,message,contains,ioexception,request,new,kv,state,internal,request,registry,listener,kv,state,id,wrong,namespace,ser,request,message,serializer,serialize,request,channel,alloc,182829l,request,channel,write,inbound,ser,request,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,response,message,serializer,deserialize,request,failure,buf,assert,equals,182829l,response,get,request,id,assert,true,response,get,cause,get,message,contains,ioexception,assert,equals,2l,stats,get,num,requests,assert,equals,2l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testSerializerMismatch() throws Exception;1510911969;Tests the failure response if the serializers don't match.;@Test_	public void testSerializerMismatch() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = abstractBackend.createKeyedStateBackend(_				dummyEnv,_				new JobID(),_				"test_op",_				IntSerializer.INSTANCE,_				numKeyGroups,_				new KeyGroupRange(0, 0),_				registry.createTaskRegistry(dummyEnv.getJobID(), dummyEnv.getJobVertexId()))___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		ValueState<Integer> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		int key = 99812822___		_		backend.setCurrentKey(key)__		state.update(712828289)___		byte[] wrongKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				"wrong-key-type",_				StringSerializer.INSTANCE,_				"wrong-namespace-type",_				StringSerializer.INSTANCE)___		byte[] wrongNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				"wrong-namespace-type",_				StringSerializer.INSTANCE)___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, wrongKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 182828L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)__		assertEquals(182828L, response.getRequestId())__		assertTrue(response.getCause().getMessage().contains("IOException"))___		_		request = new KvStateInternalRequest(registryListener.kvStateId, wrongNamespace)__		serRequest = MessageSerializer.serializeRequest(channel.alloc(), 182829L, request)___		_		channel.writeInbound(serRequest)___		buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		response = MessageSerializer.deserializeRequestFailure(buf)__		assertEquals(182829L, response.getRequestId())__		assertTrue(response.getCause().getMessage().contains("IOException"))___		assertEquals(2L, stats.getNumRequests())__		assertEquals(2L, stats.getNumFailed())__	};tests,the,failure,response,if,the,serializers,don,t,match;test,public,void,test,serializer,mismatch,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,abstract,backend,create,keyed,state,backend,dummy,env,new,job,id,int,serializer,instance,num,key,groups,new,key,group,range,0,0,registry,create,task,registry,dummy,env,get,job,id,dummy,env,get,job,vertex,id,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,value,state,integer,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,int,key,99812822,backend,set,current,key,key,state,update,712828289,byte,wrong,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,wrong,key,type,string,serializer,instance,wrong,namespace,type,string,serializer,instance,byte,wrong,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,wrong,namespace,type,string,serializer,instance,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,wrong,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,182828l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,182828l,response,get,request,id,assert,true,response,get,cause,get,message,contains,ioexception,request,new,kv,state,internal,request,registry,listener,kv,state,id,wrong,namespace,ser,request,message,serializer,serialize,request,channel,alloc,182829l,request,channel,write,inbound,ser,request,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,response,message,serializer,deserialize,request,failure,buf,assert,equals,182829l,response,get,request,id,assert,true,response,get,cause,get,message,contains,ioexception,assert,equals,2l,stats,get,num,requests,assert,equals,2l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testSerializerMismatch() throws Exception;1517914184;Tests the failure response if the serializers don't match.;@Test_	public void testSerializerMismatch() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		ValueState<Integer> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		int key = 99812822___		_		backend.setCurrentKey(key)__		state.update(712828289)___		byte[] wrongKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				"wrong-key-type",_				StringSerializer.INSTANCE,_				"wrong-namespace-type",_				StringSerializer.INSTANCE)___		byte[] wrongNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				"wrong-namespace-type",_				StringSerializer.INSTANCE)___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, wrongKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 182828L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)__		assertEquals(182828L, response.getRequestId())__		assertTrue(response.getCause().getMessage().contains("IOException"))___		_		request = new KvStateInternalRequest(registryListener.kvStateId, wrongNamespace)__		serRequest = MessageSerializer.serializeRequest(channel.alloc(), 182829L, request)___		_		channel.writeInbound(serRequest)___		buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		response = MessageSerializer.deserializeRequestFailure(buf)__		assertEquals(182829L, response.getRequestId())__		assertTrue(response.getCause().getMessage().contains("IOException"))___		assertEquals(2L, stats.getNumRequests())__		assertEquals(2L, stats.getNumFailed())__	};tests,the,failure,response,if,the,serializers,don,t,match;test,public,void,test,serializer,mismatch,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,value,state,integer,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,int,key,99812822,backend,set,current,key,key,state,update,712828289,byte,wrong,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,wrong,key,type,string,serializer,instance,wrong,namespace,type,string,serializer,instance,byte,wrong,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,wrong,namespace,type,string,serializer,instance,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,wrong,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,182828l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,182828l,response,get,request,id,assert,true,response,get,cause,get,message,contains,ioexception,request,new,kv,state,internal,request,registry,listener,kv,state,id,wrong,namespace,ser,request,message,serializer,serialize,request,channel,alloc,182829l,request,channel,write,inbound,ser,request,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,response,message,serializer,deserialize,request,failure,buf,assert,equals,182829l,response,get,request,id,assert,true,response,get,cause,get,message,contains,ioexception,assert,equals,2l,stats,get,num,requests,assert,equals,2l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testSerializerMismatch() throws Exception;1522337739;Tests the failure response if the serializers don't match.;@Test_	public void testSerializerMismatch() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		ValueState<Integer> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		int key = 99812822___		_		backend.setCurrentKey(key)__		state.update(712828289)___		byte[] wrongKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				"wrong-key-type",_				StringSerializer.INSTANCE,_				"wrong-namespace-type",_				StringSerializer.INSTANCE)___		byte[] wrongNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				"wrong-namespace-type",_				StringSerializer.INSTANCE)___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, wrongKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 182828L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)__		assertEquals(182828L, response.getRequestId())__		assertTrue(response.getCause().getMessage().contains("IOException"))___		_		request = new KvStateInternalRequest(registryListener.kvStateId, wrongNamespace)__		serRequest = MessageSerializer.serializeRequest(channel.alloc(), 182829L, request)___		_		channel.writeInbound(serRequest)___		buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		response = MessageSerializer.deserializeRequestFailure(buf)__		assertEquals(182829L, response.getRequestId())__		assertTrue(response.getCause().getMessage().contains("IOException"))___		assertEquals(2L, stats.getNumRequests())__		assertEquals(2L, stats.getNumFailed())__	};tests,the,failure,response,if,the,serializers,don,t,match;test,public,void,test,serializer,mismatch,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,value,state,integer,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,int,key,99812822,backend,set,current,key,key,state,update,712828289,byte,wrong,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,wrong,key,type,string,serializer,instance,wrong,namespace,type,string,serializer,instance,byte,wrong,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,wrong,namespace,type,string,serializer,instance,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,wrong,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,182828l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,182828l,response,get,request,id,assert,true,response,get,cause,get,message,contains,ioexception,request,new,kv,state,internal,request,registry,listener,kv,state,id,wrong,namespace,ser,request,message,serializer,serialize,request,channel,alloc,182829l,request,channel,write,inbound,ser,request,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,response,message,serializer,deserialize,request,failure,buf,assert,equals,182829l,response,get,request,id,assert,true,response,get,cause,get,message,contains,ioexception,assert,equals,2l,stats,get,num,requests,assert,equals,2l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testSerializerMismatch() throws Exception;1531419503;Tests the failure response if the serializers don't match.;@Test_	public void testSerializerMismatch() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		ValueState<Integer> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		int key = 99812822___		_		backend.setCurrentKey(key)__		state.update(712828289)___		byte[] wrongKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				"wrong-key-type",_				StringSerializer.INSTANCE,_				"wrong-namespace-type",_				StringSerializer.INSTANCE)___		byte[] wrongNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				"wrong-namespace-type",_				StringSerializer.INSTANCE)___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, wrongKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 182828L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)__		assertEquals(182828L, response.getRequestId())__		assertTrue(response.getCause().getMessage().contains("IOException"))___		_		request = new KvStateInternalRequest(registryListener.kvStateId, wrongNamespace)__		serRequest = MessageSerializer.serializeRequest(channel.alloc(), 182829L, request)___		_		channel.writeInbound(serRequest)___		buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		response = MessageSerializer.deserializeRequestFailure(buf)__		assertEquals(182829L, response.getRequestId())__		assertTrue(response.getCause().getMessage().contains("IOException"))___		assertEquals(2L, stats.getNumRequests())__		assertEquals(2L, stats.getNumFailed())__	};tests,the,failure,response,if,the,serializers,don,t,match;test,public,void,test,serializer,mismatch,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,value,state,integer,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,int,key,99812822,backend,set,current,key,key,state,update,712828289,byte,wrong,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,wrong,key,type,string,serializer,instance,wrong,namespace,type,string,serializer,instance,byte,wrong,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,wrong,namespace,type,string,serializer,instance,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,wrong,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,182828l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,182828l,response,get,request,id,assert,true,response,get,cause,get,message,contains,ioexception,request,new,kv,state,internal,request,registry,listener,kv,state,id,wrong,namespace,ser,request,message,serializer,serialize,request,channel,alloc,182829l,request,channel,write,inbound,ser,request,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,response,message,serializer,deserialize,request,failure,buf,assert,equals,182829l,response,get,request,id,assert,true,response,get,cause,get,message,contains,ioexception,assert,equals,2l,stats,get,num,requests,assert,equals,2l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testSerializerMismatch() throws Exception;1539939663;Tests the failure response if the serializers don't match.;@Test_	public void testSerializerMismatch() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		ValueState<Integer> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		int key = 99812822___		_		backend.setCurrentKey(key)__		state.update(712828289)___		byte[] wrongKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				"wrong-key-type",_				StringSerializer.INSTANCE,_				"wrong-namespace-type",_				StringSerializer.INSTANCE)___		byte[] wrongNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				"wrong-namespace-type",_				StringSerializer.INSTANCE)___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, wrongKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 182828L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)__		assertEquals(182828L, response.getRequestId())__		assertTrue(response.getCause().getMessage().contains("IOException"))___		_		request = new KvStateInternalRequest(registryListener.kvStateId, wrongNamespace)__		serRequest = MessageSerializer.serializeRequest(channel.alloc(), 182829L, request)___		_		channel.writeInbound(serRequest)___		buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		response = MessageSerializer.deserializeRequestFailure(buf)__		assertEquals(182829L, response.getRequestId())__		assertTrue(response.getCause().getMessage().contains("IOException"))___		assertEquals(2L, stats.getNumRequests())__		assertEquals(2L, stats.getNumFailed())__	};tests,the,failure,response,if,the,serializers,don,t,match;test,public,void,test,serializer,mismatch,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,value,state,integer,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,int,key,99812822,backend,set,current,key,key,state,update,712828289,byte,wrong,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,wrong,key,type,string,serializer,instance,wrong,namespace,type,string,serializer,instance,byte,wrong,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,wrong,namespace,type,string,serializer,instance,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,wrong,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,182828l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,182828l,response,get,request,id,assert,true,response,get,cause,get,message,contains,ioexception,request,new,kv,state,internal,request,registry,listener,kv,state,id,wrong,namespace,ser,request,message,serializer,serialize,request,channel,alloc,182829l,request,channel,write,inbound,ser,request,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,response,message,serializer,deserialize,request,failure,buf,assert,equals,182829l,response,get,request,id,assert,true,response,get,cause,get,message,contains,ioexception,assert,equals,2l,stats,get,num,requests,assert,equals,2l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testSerializerMismatch() throws Exception;1548755874;Tests the failure response if the serializers don't match.;@Test_	public void testSerializerMismatch() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		ValueState<Integer> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		int key = 99812822___		_		backend.setCurrentKey(key)__		state.update(712828289)___		byte[] wrongKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				"wrong-key-type",_				StringSerializer.INSTANCE,_				"wrong-namespace-type",_				StringSerializer.INSTANCE)___		byte[] wrongNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				"wrong-namespace-type",_				StringSerializer.INSTANCE)___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, wrongKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 182828L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)__		assertEquals(182828L, response.getRequestId())__		assertTrue(response.getCause().getMessage().contains("IOException"))___		_		request = new KvStateInternalRequest(registryListener.kvStateId, wrongNamespace)__		serRequest = MessageSerializer.serializeRequest(channel.alloc(), 182829L, request)___		_		channel.writeInbound(serRequest)___		buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		response = MessageSerializer.deserializeRequestFailure(buf)__		assertEquals(182829L, response.getRequestId())__		assertTrue(response.getCause().getMessage().contains("IOException"))___		assertEquals(2L, stats.getNumRequests())__		assertEquals(2L, stats.getNumFailed())__	};tests,the,failure,response,if,the,serializers,don,t,match;test,public,void,test,serializer,mismatch,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,value,state,integer,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,int,key,99812822,backend,set,current,key,key,state,update,712828289,byte,wrong,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,wrong,key,type,string,serializer,instance,wrong,namespace,type,string,serializer,instance,byte,wrong,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,wrong,namespace,type,string,serializer,instance,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,wrong,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,182828l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,182828l,response,get,request,id,assert,true,response,get,cause,get,message,contains,ioexception,request,new,kv,state,internal,request,registry,listener,kv,state,id,wrong,namespace,ser,request,message,serializer,serialize,request,channel,alloc,182829l,request,channel,write,inbound,ser,request,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,response,message,serializer,deserialize,request,failure,buf,assert,equals,182829l,response,get,request,id,assert,true,response,get,cause,get,message,contains,ioexception,assert,equals,2l,stats,get,num,requests,assert,equals,2l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testSerializerMismatch() throws Exception;1550863001;Tests the failure response if the serializers don't match.;@Test_	public void testSerializerMismatch() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		ValueState<Integer> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		int key = 99812822___		_		backend.setCurrentKey(key)__		state.update(712828289)___		byte[] wrongKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				"wrong-key-type",_				StringSerializer.INSTANCE,_				"wrong-namespace-type",_				StringSerializer.INSTANCE)___		byte[] wrongNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				"wrong-namespace-type",_				StringSerializer.INSTANCE)___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, wrongKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 182828L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)__		assertEquals(182828L, response.getRequestId())__		assertTrue(response.getCause().getMessage().contains("IOException"))___		_		request = new KvStateInternalRequest(registryListener.kvStateId, wrongNamespace)__		serRequest = MessageSerializer.serializeRequest(channel.alloc(), 182829L, request)___		_		channel.writeInbound(serRequest)___		buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		response = MessageSerializer.deserializeRequestFailure(buf)__		assertEquals(182829L, response.getRequestId())__		assertTrue(response.getCause().getMessage().contains("IOException"))___		assertEquals(2L, stats.getNumRequests())__		assertEquals(2L, stats.getNumFailed())__	};tests,the,failure,response,if,the,serializers,don,t,match;test,public,void,test,serializer,mismatch,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,value,state,integer,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,int,key,99812822,backend,set,current,key,key,state,update,712828289,byte,wrong,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,wrong,key,type,string,serializer,instance,wrong,namespace,type,string,serializer,instance,byte,wrong,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,wrong,namespace,type,string,serializer,instance,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,wrong,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,182828l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,182828l,response,get,request,id,assert,true,response,get,cause,get,message,contains,ioexception,request,new,kv,state,internal,request,registry,listener,kv,state,id,wrong,namespace,ser,request,message,serializer,serialize,request,channel,alloc,182829l,request,channel,write,inbound,ser,request,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,response,message,serializer,deserialize,request,failure,buf,assert,equals,182829l,response,get,request,id,assert,true,response,get,cause,get,message,contains,ioexception,assert,equals,2l,stats,get,num,requests,assert,equals,2l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testSimpleQuery() throws Exception;1509037054;Tests a simple successful query via an EmbeddedChannel.;@Test_	public void testSimpleQuery() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = abstractBackend.createKeyedStateBackend(_				dummyEnv,_				new JobID(),_				"test_op",_				IntSerializer.INSTANCE,_				numKeyGroups,_				new KeyGroupRange(0, 0),_				registry.createTaskRegistry(dummyEnv.getJobID(), dummyEnv.getJobVertexId()))___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(registryListener)___		_		int expectedValue = 712828289___		int key = 99812822__		backend.setCurrentKey(key)__		ValueState<Integer> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		state.update(expectedValue)___		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 182828L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(_				registryListener.kvStateId, serializedKeyAndNamespace)___		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_RESULT, MessageSerializer.deserializeHeader(buf))__		long deserRequestId = MessageSerializer.getRequestId(buf)__		KvStateResponse response = serializer.deserializeResponse(buf)___		assertEquals(requestId, deserRequestId)___		int actualValue = KvStateSerializer.deserializeValue(response.getContent(), IntSerializer.INSTANCE)__		assertEquals(expectedValue, actualValue)___		assertEquals(stats.toString(), 1, stats.getNumRequests())___		_		long deadline = System.nanoTime() + TimeUnit.NANOSECONDS.convert(30, TimeUnit.SECONDS)__		while (stats.getNumSuccessful() != 1L && System.nanoTime() <= deadline) {_			Thread.sleep(10L)__		}__		assertEquals(stats.toString(), 1L, stats.getNumSuccessful())__	};tests,a,simple,successful,query,via,an,embedded,channel;test,public,void,test,simple,query,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,abstract,backend,create,keyed,state,backend,dummy,env,new,job,id,int,serializer,instance,num,key,groups,new,key,group,range,0,0,registry,create,task,registry,dummy,env,get,job,id,dummy,env,get,job,vertex,id,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,registry,listener,int,expected,value,712828289,int,key,99812822,backend,set,current,key,key,value,state,integer,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,state,update,expected,value,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,182828l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,long,deser,request,id,message,serializer,get,request,id,buf,kv,state,response,response,serializer,deserialize,response,buf,assert,equals,request,id,deser,request,id,int,actual,value,kv,state,serializer,deserialize,value,response,get,content,int,serializer,instance,assert,equals,expected,value,actual,value,assert,equals,stats,to,string,1,stats,get,num,requests,long,deadline,system,nano,time,time,unit,nanoseconds,convert,30,time,unit,seconds,while,stats,get,num,successful,1l,system,nano,time,deadline,thread,sleep,10l,assert,equals,stats,to,string,1l,stats,get,num,successful
KvStateServerHandlerTest -> @Test 	public void testSimpleQuery() throws Exception;1510911969;Tests a simple successful query via an EmbeddedChannel.;@Test_	public void testSimpleQuery() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = abstractBackend.createKeyedStateBackend(_				dummyEnv,_				new JobID(),_				"test_op",_				IntSerializer.INSTANCE,_				numKeyGroups,_				new KeyGroupRange(0, 0),_				registry.createTaskRegistry(dummyEnv.getJobID(), dummyEnv.getJobVertexId()))___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(registryListener)___		_		int expectedValue = 712828289___		int key = 99812822__		backend.setCurrentKey(key)__		ValueState<Integer> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		state.update(expectedValue)___		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 182828L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(_				registryListener.kvStateId, serializedKeyAndNamespace)___		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_RESULT, MessageSerializer.deserializeHeader(buf))__		long deserRequestId = MessageSerializer.getRequestId(buf)__		KvStateResponse response = serializer.deserializeResponse(buf)___		assertEquals(requestId, deserRequestId)___		int actualValue = KvStateSerializer.deserializeValue(response.getContent(), IntSerializer.INSTANCE)__		assertEquals(expectedValue, actualValue)___		assertEquals(stats.toString(), 1, stats.getNumRequests())___		_		long deadline = System.nanoTime() + TimeUnit.NANOSECONDS.convert(30, TimeUnit.SECONDS)__		while (stats.getNumSuccessful() != 1L && System.nanoTime() <= deadline) {_			Thread.sleep(10L)__		}__		assertEquals(stats.toString(), 1L, stats.getNumSuccessful())__	};tests,a,simple,successful,query,via,an,embedded,channel;test,public,void,test,simple,query,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,abstract,backend,create,keyed,state,backend,dummy,env,new,job,id,int,serializer,instance,num,key,groups,new,key,group,range,0,0,registry,create,task,registry,dummy,env,get,job,id,dummy,env,get,job,vertex,id,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,registry,listener,int,expected,value,712828289,int,key,99812822,backend,set,current,key,key,value,state,integer,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,state,update,expected,value,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,182828l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,long,deser,request,id,message,serializer,get,request,id,buf,kv,state,response,response,serializer,deserialize,response,buf,assert,equals,request,id,deser,request,id,int,actual,value,kv,state,serializer,deserialize,value,response,get,content,int,serializer,instance,assert,equals,expected,value,actual,value,assert,equals,stats,to,string,1,stats,get,num,requests,long,deadline,system,nano,time,time,unit,nanoseconds,convert,30,time,unit,seconds,while,stats,get,num,successful,1l,system,nano,time,deadline,thread,sleep,10l,assert,equals,stats,to,string,1l,stats,get,num,successful
KvStateServerHandlerTest -> @Test 	public void testSimpleQuery() throws Exception;1517914184;Tests a simple successful query via an EmbeddedChannel.;@Test_	public void testSimpleQuery() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		int expectedValue = 712828289___		int key = 99812822__		backend.setCurrentKey(key)__		ValueState<Integer> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		state.update(expectedValue)___		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 182828L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(_				registryListener.kvStateId, serializedKeyAndNamespace)___		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_RESULT, MessageSerializer.deserializeHeader(buf))__		long deserRequestId = MessageSerializer.getRequestId(buf)__		KvStateResponse response = serializer.deserializeResponse(buf)___		assertEquals(requestId, deserRequestId)___		int actualValue = KvStateSerializer.deserializeValue(response.getContent(), IntSerializer.INSTANCE)__		assertEquals(expectedValue, actualValue)___		assertEquals(stats.toString(), 1, stats.getNumRequests())___		_		long deadline = System.nanoTime() + TimeUnit.NANOSECONDS.convert(30, TimeUnit.SECONDS)__		while (stats.getNumSuccessful() != 1L && System.nanoTime() <= deadline) {_			Thread.sleep(10L)__		}__		assertEquals(stats.toString(), 1L, stats.getNumSuccessful())__	};tests,a,simple,successful,query,via,an,embedded,channel;test,public,void,test,simple,query,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,int,expected,value,712828289,int,key,99812822,backend,set,current,key,key,value,state,integer,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,state,update,expected,value,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,182828l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,long,deser,request,id,message,serializer,get,request,id,buf,kv,state,response,response,serializer,deserialize,response,buf,assert,equals,request,id,deser,request,id,int,actual,value,kv,state,serializer,deserialize,value,response,get,content,int,serializer,instance,assert,equals,expected,value,actual,value,assert,equals,stats,to,string,1,stats,get,num,requests,long,deadline,system,nano,time,time,unit,nanoseconds,convert,30,time,unit,seconds,while,stats,get,num,successful,1l,system,nano,time,deadline,thread,sleep,10l,assert,equals,stats,to,string,1l,stats,get,num,successful
KvStateServerHandlerTest -> @Test 	public void testSimpleQuery() throws Exception;1522337739;Tests a simple successful query via an EmbeddedChannel.;@Test_	public void testSimpleQuery() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		int expectedValue = 712828289___		int key = 99812822__		backend.setCurrentKey(key)__		ValueState<Integer> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		state.update(expectedValue)___		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 182828L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(_				registryListener.kvStateId, serializedKeyAndNamespace)___		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_RESULT, MessageSerializer.deserializeHeader(buf))__		long deserRequestId = MessageSerializer.getRequestId(buf)__		KvStateResponse response = serializer.deserializeResponse(buf)___		assertEquals(requestId, deserRequestId)___		int actualValue = KvStateSerializer.deserializeValue(response.getContent(), IntSerializer.INSTANCE)__		assertEquals(expectedValue, actualValue)___		assertEquals(stats.toString(), 1, stats.getNumRequests())___		_		long deadline = System.nanoTime() + TimeUnit.NANOSECONDS.convert(30, TimeUnit.SECONDS)__		while (stats.getNumSuccessful() != 1L && System.nanoTime() <= deadline) {_			Thread.sleep(10L)__		}__		assertEquals(stats.toString(), 1L, stats.getNumSuccessful())__	};tests,a,simple,successful,query,via,an,embedded,channel;test,public,void,test,simple,query,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,int,expected,value,712828289,int,key,99812822,backend,set,current,key,key,value,state,integer,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,state,update,expected,value,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,182828l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,long,deser,request,id,message,serializer,get,request,id,buf,kv,state,response,response,serializer,deserialize,response,buf,assert,equals,request,id,deser,request,id,int,actual,value,kv,state,serializer,deserialize,value,response,get,content,int,serializer,instance,assert,equals,expected,value,actual,value,assert,equals,stats,to,string,1,stats,get,num,requests,long,deadline,system,nano,time,time,unit,nanoseconds,convert,30,time,unit,seconds,while,stats,get,num,successful,1l,system,nano,time,deadline,thread,sleep,10l,assert,equals,stats,to,string,1l,stats,get,num,successful
KvStateServerHandlerTest -> @Test 	public void testSimpleQuery() throws Exception;1531419503;Tests a simple successful query via an EmbeddedChannel.;@Test_	public void testSimpleQuery() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		int expectedValue = 712828289___		int key = 99812822__		backend.setCurrentKey(key)__		ValueState<Integer> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		state.update(expectedValue)___		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 182828L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(_				registryListener.kvStateId, serializedKeyAndNamespace)___		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_RESULT, MessageSerializer.deserializeHeader(buf))__		long deserRequestId = MessageSerializer.getRequestId(buf)__		KvStateResponse response = serializer.deserializeResponse(buf)___		assertEquals(requestId, deserRequestId)___		int actualValue = KvStateSerializer.deserializeValue(response.getContent(), IntSerializer.INSTANCE)__		assertEquals(expectedValue, actualValue)___		assertEquals(stats.toString(), 1, stats.getNumRequests())___		_		long deadline = System.nanoTime() + TimeUnit.NANOSECONDS.convert(30, TimeUnit.SECONDS)__		while (stats.getNumSuccessful() != 1L && System.nanoTime() <= deadline) {_			Thread.sleep(10L)__		}__		assertEquals(stats.toString(), 1L, stats.getNumSuccessful())__	};tests,a,simple,successful,query,via,an,embedded,channel;test,public,void,test,simple,query,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,int,expected,value,712828289,int,key,99812822,backend,set,current,key,key,value,state,integer,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,state,update,expected,value,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,182828l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,long,deser,request,id,message,serializer,get,request,id,buf,kv,state,response,response,serializer,deserialize,response,buf,assert,equals,request,id,deser,request,id,int,actual,value,kv,state,serializer,deserialize,value,response,get,content,int,serializer,instance,assert,equals,expected,value,actual,value,assert,equals,stats,to,string,1,stats,get,num,requests,long,deadline,system,nano,time,time,unit,nanoseconds,convert,30,time,unit,seconds,while,stats,get,num,successful,1l,system,nano,time,deadline,thread,sleep,10l,assert,equals,stats,to,string,1l,stats,get,num,successful
KvStateServerHandlerTest -> @Test 	public void testSimpleQuery() throws Exception;1539939663;Tests a simple successful query via an EmbeddedChannel.;@Test_	public void testSimpleQuery() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		int expectedValue = 712828289___		int key = 99812822__		backend.setCurrentKey(key)__		ValueState<Integer> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		state.update(expectedValue)___		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 182828L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(_				registryListener.kvStateId, serializedKeyAndNamespace)___		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_RESULT, MessageSerializer.deserializeHeader(buf))__		long deserRequestId = MessageSerializer.getRequestId(buf)__		KvStateResponse response = serializer.deserializeResponse(buf)___		assertEquals(requestId, deserRequestId)___		int actualValue = KvStateSerializer.deserializeValue(response.getContent(), IntSerializer.INSTANCE)__		assertEquals(expectedValue, actualValue)___		assertEquals(stats.toString(), 1, stats.getNumRequests())___		_		long deadline = System.nanoTime() + TimeUnit.NANOSECONDS.convert(30, TimeUnit.SECONDS)__		while (stats.getNumSuccessful() != 1L && System.nanoTime() <= deadline) {_			Thread.sleep(10L)__		}__		assertEquals(stats.toString(), 1L, stats.getNumSuccessful())__	};tests,a,simple,successful,query,via,an,embedded,channel;test,public,void,test,simple,query,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,int,expected,value,712828289,int,key,99812822,backend,set,current,key,key,value,state,integer,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,state,update,expected,value,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,182828l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,long,deser,request,id,message,serializer,get,request,id,buf,kv,state,response,response,serializer,deserialize,response,buf,assert,equals,request,id,deser,request,id,int,actual,value,kv,state,serializer,deserialize,value,response,get,content,int,serializer,instance,assert,equals,expected,value,actual,value,assert,equals,stats,to,string,1,stats,get,num,requests,long,deadline,system,nano,time,time,unit,nanoseconds,convert,30,time,unit,seconds,while,stats,get,num,successful,1l,system,nano,time,deadline,thread,sleep,10l,assert,equals,stats,to,string,1l,stats,get,num,successful
KvStateServerHandlerTest -> @Test 	public void testSimpleQuery() throws Exception;1548755874;Tests a simple successful query via an EmbeddedChannel.;@Test_	public void testSimpleQuery() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		int expectedValue = 712828289___		int key = 99812822__		backend.setCurrentKey(key)__		ValueState<Integer> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		state.update(expectedValue)___		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 182828L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(_				registryListener.kvStateId, serializedKeyAndNamespace)___		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_RESULT, MessageSerializer.deserializeHeader(buf))__		long deserRequestId = MessageSerializer.getRequestId(buf)__		KvStateResponse response = serializer.deserializeResponse(buf)___		assertEquals(requestId, deserRequestId)___		int actualValue = KvStateSerializer.deserializeValue(response.getContent(), IntSerializer.INSTANCE)__		assertEquals(expectedValue, actualValue)___		assertEquals(stats.toString(), 1, stats.getNumRequests())___		_		long deadline = System.nanoTime() + TimeUnit.NANOSECONDS.convert(30, TimeUnit.SECONDS)__		while (stats.getNumSuccessful() != 1L && System.nanoTime() <= deadline) {_			Thread.sleep(10L)__		}__		assertEquals(stats.toString(), 1L, stats.getNumSuccessful())__	};tests,a,simple,successful,query,via,an,embedded,channel;test,public,void,test,simple,query,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,int,expected,value,712828289,int,key,99812822,backend,set,current,key,key,value,state,integer,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,state,update,expected,value,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,182828l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,long,deser,request,id,message,serializer,get,request,id,buf,kv,state,response,response,serializer,deserialize,response,buf,assert,equals,request,id,deser,request,id,int,actual,value,kv,state,serializer,deserialize,value,response,get,content,int,serializer,instance,assert,equals,expected,value,actual,value,assert,equals,stats,to,string,1,stats,get,num,requests,long,deadline,system,nano,time,time,unit,nanoseconds,convert,30,time,unit,seconds,while,stats,get,num,successful,1l,system,nano,time,deadline,thread,sleep,10l,assert,equals,stats,to,string,1l,stats,get,num,successful
KvStateServerHandlerTest -> @Test 	public void testSimpleQuery() throws Exception;1550863001;Tests a simple successful query via an EmbeddedChannel.;@Test_	public void testSimpleQuery() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		AbstractKeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		int expectedValue = 712828289___		int key = 99812822__		backend.setCurrentKey(key)__		ValueState<Integer> state = backend.getPartitionedState(_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE,_				desc)___		state.update(expectedValue)___		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				key,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 182828L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(_				registryListener.kvStateId, serializedKeyAndNamespace)___		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_RESULT, MessageSerializer.deserializeHeader(buf))__		long deserRequestId = MessageSerializer.getRequestId(buf)__		KvStateResponse response = serializer.deserializeResponse(buf)___		assertEquals(requestId, deserRequestId)___		int actualValue = KvStateSerializer.deserializeValue(response.getContent(), IntSerializer.INSTANCE)__		assertEquals(expectedValue, actualValue)___		assertEquals(stats.toString(), 1, stats.getNumRequests())___		_		long deadline = System.nanoTime() + TimeUnit.NANOSECONDS.convert(30, TimeUnit.SECONDS)__		while (stats.getNumSuccessful() != 1L && System.nanoTime() <= deadline) {_			Thread.sleep(10L)__		}__		assertEquals(stats.toString(), 1L, stats.getNumSuccessful())__	};tests,a,simple,successful,query,via,an,embedded,channel;test,public,void,test,simple,query,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,abstract,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,int,expected,value,712828289,int,key,99812822,backend,set,current,key,key,value,state,integer,state,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,state,update,expected,value,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,key,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,182828l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,long,deser,request,id,message,serializer,get,request,id,buf,kv,state,response,response,serializer,deserialize,response,buf,assert,equals,request,id,deser,request,id,int,actual,value,kv,state,serializer,deserialize,value,response,get,content,int,serializer,instance,assert,equals,expected,value,actual,value,assert,equals,stats,to,string,1,stats,get,num,requests,long,deadline,system,nano,time,time,unit,nanoseconds,convert,30,time,unit,seconds,while,stats,get,num,successful,1l,system,nano,time,deadline,thread,sleep,10l,assert,equals,stats,to,string,1l,stats,get,num,successful
KvStateServerHandlerTest -> @Test 	public void testFailureOnGetSerializedValue() throws Exception;1509037054;Tests the failure response on a failure on the {@link InternalKvState#getSerializedValue(byte[])} call.;@Test_	public void testFailureOnGetSerializedValue() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		InternalKvState<?> kvState = mock(InternalKvState.class)__		when(kvState.getSerializedValue(any(byte[].class)))_				.thenThrow(new RuntimeException("Expected test Exception"))___		KvStateID kvStateId = registry.registerKvState(_				new JobID(),_				new JobVertexID(),_				new KeyGroupRange(0, 0),_				"vanilla",_				kvState)___		KvStateInternalRequest request = new KvStateInternalRequest(kvStateId, new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertTrue(response.getCause().getMessage().contains("Expected test Exception"))___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,on,a,failure,on,the,link,internal,kv,state,get,serialized,value,byte,call;test,public,void,test,failure,on,get,serialized,value,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,internal,kv,state,kv,state,mock,internal,kv,state,class,when,kv,state,get,serialized,value,any,byte,class,then,throw,new,runtime,exception,expected,test,exception,kv,state,id,kv,state,id,registry,register,kv,state,new,job,id,new,job,vertex,id,new,key,group,range,0,0,vanilla,kv,state,kv,state,internal,request,request,new,kv,state,internal,request,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,true,response,get,cause,get,message,contains,expected,test,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testFailureOnGetSerializedValue() throws Exception;1510911969;Tests the failure response on a failure on the {@link InternalKvState#getSerializedValue(byte[])} call.;@Test_	public void testFailureOnGetSerializedValue() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		InternalKvState<?> kvState = mock(InternalKvState.class)__		when(kvState.getSerializedValue(any(byte[].class)))_				.thenThrow(new RuntimeException("Expected test Exception"))___		KvStateID kvStateId = registry.registerKvState(_				new JobID(),_				new JobVertexID(),_				new KeyGroupRange(0, 0),_				"vanilla",_				kvState)___		KvStateInternalRequest request = new KvStateInternalRequest(kvStateId, new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertTrue(response.getCause().getMessage().contains("Expected test Exception"))___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,on,a,failure,on,the,link,internal,kv,state,get,serialized,value,byte,call;test,public,void,test,failure,on,get,serialized,value,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,internal,kv,state,kv,state,mock,internal,kv,state,class,when,kv,state,get,serialized,value,any,byte,class,then,throw,new,runtime,exception,expected,test,exception,kv,state,id,kv,state,id,registry,register,kv,state,new,job,id,new,job,vertex,id,new,key,group,range,0,0,vanilla,kv,state,kv,state,internal,request,request,new,kv,state,internal,request,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,true,response,get,cause,get,message,contains,expected,test,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testFailureOnGetSerializedValue() throws Exception;1517914184;Tests the failure response on a failure on the {@link InternalKvState#getSerializedValue(byte[])} call.;@Test_	public void testFailureOnGetSerializedValue() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		InternalKvState<?> kvState = mock(InternalKvState.class)__		when(kvState.getSerializedValue(any(byte[].class)))_				.thenThrow(new RuntimeException("Expected test Exception"))___		KvStateID kvStateId = registry.registerKvState(_				new JobID(),_				new JobVertexID(),_				new KeyGroupRange(0, 0),_				"vanilla",_				kvState)___		KvStateInternalRequest request = new KvStateInternalRequest(kvStateId, new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertTrue(response.getCause().getMessage().contains("Expected test Exception"))___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,on,a,failure,on,the,link,internal,kv,state,get,serialized,value,byte,call;test,public,void,test,failure,on,get,serialized,value,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,internal,kv,state,kv,state,mock,internal,kv,state,class,when,kv,state,get,serialized,value,any,byte,class,then,throw,new,runtime,exception,expected,test,exception,kv,state,id,kv,state,id,registry,register,kv,state,new,job,id,new,job,vertex,id,new,key,group,range,0,0,vanilla,kv,state,kv,state,internal,request,request,new,kv,state,internal,request,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,true,response,get,cause,get,message,contains,expected,test,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testFailureOnGetSerializedValue() throws Exception;1522337739;Tests the failure response on a failure on the {@link InternalKvState#getSerializedValue(byte[], TypeSerializer, TypeSerializer, TypeSerializer)} call.;@Test_	public void testFailureOnGetSerializedValue() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		InternalKvState<Integer, VoidNamespace, Long> kvState =_				new InternalKvState<Integer, VoidNamespace, Long>() {_					@Override_					public TypeSerializer<Integer> getKeySerializer() {_						return IntSerializer.INSTANCE__					}__					@Override_					public TypeSerializer<VoidNamespace> getNamespaceSerializer() {_						return VoidNamespaceSerializer.INSTANCE__					}__					@Override_					public TypeSerializer<Long> getValueSerializer() {_						return LongSerializer.INSTANCE__					}__					@Override_					public void setCurrentNamespace(VoidNamespace namespace) {_						_					}__					@Override_					public byte[] getSerializedValue(_							final byte[] serializedKeyAndNamespace,_							final TypeSerializer<Integer> safeKeySerializer,_							final TypeSerializer<VoidNamespace> safeNamespaceSerializer,_							final TypeSerializer<Long> safeValueSerializer) throws Exception {_						throw new RuntimeException("Expected test Exception")__					}__					@Override_					public void clear() {__					}_				}___		KvStateID kvStateId = registry.registerKvState(_				new JobID(),_				new JobVertexID(),_				new KeyGroupRange(0, 0),_				"vanilla",_				kvState)___		KvStateInternalRequest request = new KvStateInternalRequest(kvStateId, new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertTrue(response.getCause().getMessage().contains("Expected test Exception"))___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,on,a,failure,on,the,link,internal,kv,state,get,serialized,value,byte,type,serializer,type,serializer,type,serializer,call;test,public,void,test,failure,on,get,serialized,value,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,internal,kv,state,integer,void,namespace,long,kv,state,new,internal,kv,state,integer,void,namespace,long,override,public,type,serializer,integer,get,key,serializer,return,int,serializer,instance,override,public,type,serializer,void,namespace,get,namespace,serializer,return,void,namespace,serializer,instance,override,public,type,serializer,long,get,value,serializer,return,long,serializer,instance,override,public,void,set,current,namespace,void,namespace,namespace,override,public,byte,get,serialized,value,final,byte,serialized,key,and,namespace,final,type,serializer,integer,safe,key,serializer,final,type,serializer,void,namespace,safe,namespace,serializer,final,type,serializer,long,safe,value,serializer,throws,exception,throw,new,runtime,exception,expected,test,exception,override,public,void,clear,kv,state,id,kv,state,id,registry,register,kv,state,new,job,id,new,job,vertex,id,new,key,group,range,0,0,vanilla,kv,state,kv,state,internal,request,request,new,kv,state,internal,request,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,true,response,get,cause,get,message,contains,expected,test,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testFailureOnGetSerializedValue() throws Exception;1531419503;Tests the failure response on a failure on the {@link InternalKvState#getSerializedValue(byte[], TypeSerializer, TypeSerializer, TypeSerializer)} call.;@Test_	public void testFailureOnGetSerializedValue() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		InternalKvState<Integer, VoidNamespace, Long> kvState =_				new InternalKvState<Integer, VoidNamespace, Long>() {_					@Override_					public TypeSerializer<Integer> getKeySerializer() {_						return IntSerializer.INSTANCE__					}__					@Override_					public TypeSerializer<VoidNamespace> getNamespaceSerializer() {_						return VoidNamespaceSerializer.INSTANCE__					}__					@Override_					public TypeSerializer<Long> getValueSerializer() {_						return LongSerializer.INSTANCE__					}__					@Override_					public void setCurrentNamespace(VoidNamespace namespace) {_						_					}__					@Override_					public byte[] getSerializedValue(_							final byte[] serializedKeyAndNamespace,_							final TypeSerializer<Integer> safeKeySerializer,_							final TypeSerializer<VoidNamespace> safeNamespaceSerializer,_							final TypeSerializer<Long> safeValueSerializer) throws Exception {_						throw new RuntimeException("Expected test Exception")__					}__					@Override_					public void clear() {__					}_				}___		KvStateID kvStateId = registry.registerKvState(_				new JobID(),_				new JobVertexID(),_				new KeyGroupRange(0, 0),_				"vanilla",_				kvState)___		KvStateInternalRequest request = new KvStateInternalRequest(kvStateId, new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertTrue(response.getCause().getMessage().contains("Expected test Exception"))___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,on,a,failure,on,the,link,internal,kv,state,get,serialized,value,byte,type,serializer,type,serializer,type,serializer,call;test,public,void,test,failure,on,get,serialized,value,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,internal,kv,state,integer,void,namespace,long,kv,state,new,internal,kv,state,integer,void,namespace,long,override,public,type,serializer,integer,get,key,serializer,return,int,serializer,instance,override,public,type,serializer,void,namespace,get,namespace,serializer,return,void,namespace,serializer,instance,override,public,type,serializer,long,get,value,serializer,return,long,serializer,instance,override,public,void,set,current,namespace,void,namespace,namespace,override,public,byte,get,serialized,value,final,byte,serialized,key,and,namespace,final,type,serializer,integer,safe,key,serializer,final,type,serializer,void,namespace,safe,namespace,serializer,final,type,serializer,long,safe,value,serializer,throws,exception,throw,new,runtime,exception,expected,test,exception,override,public,void,clear,kv,state,id,kv,state,id,registry,register,kv,state,new,job,id,new,job,vertex,id,new,key,group,range,0,0,vanilla,kv,state,kv,state,internal,request,request,new,kv,state,internal,request,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,true,response,get,cause,get,message,contains,expected,test,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testFailureOnGetSerializedValue() throws Exception;1539939663;Tests the failure response on a failure on the {@link InternalKvState#getSerializedValue(byte[], TypeSerializer, TypeSerializer, TypeSerializer)} call.;@Test_	public void testFailureOnGetSerializedValue() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		InternalKvState<Integer, VoidNamespace, Long> kvState =_				new InternalKvState<Integer, VoidNamespace, Long>() {_					@Override_					public TypeSerializer<Integer> getKeySerializer() {_						return IntSerializer.INSTANCE__					}__					@Override_					public TypeSerializer<VoidNamespace> getNamespaceSerializer() {_						return VoidNamespaceSerializer.INSTANCE__					}__					@Override_					public TypeSerializer<Long> getValueSerializer() {_						return LongSerializer.INSTANCE__					}__					@Override_					public void setCurrentNamespace(VoidNamespace namespace) {_						_					}__					@Override_					public byte[] getSerializedValue(_							final byte[] serializedKeyAndNamespace,_							final TypeSerializer<Integer> safeKeySerializer,_							final TypeSerializer<VoidNamespace> safeNamespaceSerializer,_							final TypeSerializer<Long> safeValueSerializer) throws Exception {_						throw new RuntimeException("Expected test Exception")__					}__					@Override_					public void clear() {__					}_				}___		KvStateID kvStateId = registry.registerKvState(_				new JobID(),_				new JobVertexID(),_				new KeyGroupRange(0, 0),_				"vanilla",_				kvState)___		KvStateInternalRequest request = new KvStateInternalRequest(kvStateId, new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertTrue(response.getCause().getMessage().contains("Expected test Exception"))___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,on,a,failure,on,the,link,internal,kv,state,get,serialized,value,byte,type,serializer,type,serializer,type,serializer,call;test,public,void,test,failure,on,get,serialized,value,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,internal,kv,state,integer,void,namespace,long,kv,state,new,internal,kv,state,integer,void,namespace,long,override,public,type,serializer,integer,get,key,serializer,return,int,serializer,instance,override,public,type,serializer,void,namespace,get,namespace,serializer,return,void,namespace,serializer,instance,override,public,type,serializer,long,get,value,serializer,return,long,serializer,instance,override,public,void,set,current,namespace,void,namespace,namespace,override,public,byte,get,serialized,value,final,byte,serialized,key,and,namespace,final,type,serializer,integer,safe,key,serializer,final,type,serializer,void,namespace,safe,namespace,serializer,final,type,serializer,long,safe,value,serializer,throws,exception,throw,new,runtime,exception,expected,test,exception,override,public,void,clear,kv,state,id,kv,state,id,registry,register,kv,state,new,job,id,new,job,vertex,id,new,key,group,range,0,0,vanilla,kv,state,kv,state,internal,request,request,new,kv,state,internal,request,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,true,response,get,cause,get,message,contains,expected,test,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testFailureOnGetSerializedValue() throws Exception;1548755874;Tests the failure response on a failure on the {@link InternalKvState#getSerializedValue(byte[], TypeSerializer, TypeSerializer, TypeSerializer)} call.;@Test_	public void testFailureOnGetSerializedValue() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		InternalKvState<Integer, VoidNamespace, Long> kvState =_				new InternalKvState<Integer, VoidNamespace, Long>() {_					@Override_					public TypeSerializer<Integer> getKeySerializer() {_						return IntSerializer.INSTANCE__					}__					@Override_					public TypeSerializer<VoidNamespace> getNamespaceSerializer() {_						return VoidNamespaceSerializer.INSTANCE__					}__					@Override_					public TypeSerializer<Long> getValueSerializer() {_						return LongSerializer.INSTANCE__					}__					@Override_					public void setCurrentNamespace(VoidNamespace namespace) {_						_					}__					@Override_					public byte[] getSerializedValue(_							final byte[] serializedKeyAndNamespace,_							final TypeSerializer<Integer> safeKeySerializer,_							final TypeSerializer<VoidNamespace> safeNamespaceSerializer,_							final TypeSerializer<Long> safeValueSerializer) throws Exception {_						throw new RuntimeException("Expected test Exception")__					}__					@Override_					public StateIncrementalVisitor<Integer, VoidNamespace, Long> getStateIncrementalVisitor(int recommendedMaxNumberOfReturnedRecords) {_						throw new UnsupportedOperationException()__					}__					@Override_					public void clear() {__					}_				}___		KvStateID kvStateId = registry.registerKvState(_				new JobID(),_				new JobVertexID(),_				new KeyGroupRange(0, 0),_				"vanilla",_				kvState)___		KvStateInternalRequest request = new KvStateInternalRequest(kvStateId, new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertTrue(response.getCause().getMessage().contains("Expected test Exception"))___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,on,a,failure,on,the,link,internal,kv,state,get,serialized,value,byte,type,serializer,type,serializer,type,serializer,call;test,public,void,test,failure,on,get,serialized,value,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,internal,kv,state,integer,void,namespace,long,kv,state,new,internal,kv,state,integer,void,namespace,long,override,public,type,serializer,integer,get,key,serializer,return,int,serializer,instance,override,public,type,serializer,void,namespace,get,namespace,serializer,return,void,namespace,serializer,instance,override,public,type,serializer,long,get,value,serializer,return,long,serializer,instance,override,public,void,set,current,namespace,void,namespace,namespace,override,public,byte,get,serialized,value,final,byte,serialized,key,and,namespace,final,type,serializer,integer,safe,key,serializer,final,type,serializer,void,namespace,safe,namespace,serializer,final,type,serializer,long,safe,value,serializer,throws,exception,throw,new,runtime,exception,expected,test,exception,override,public,state,incremental,visitor,integer,void,namespace,long,get,state,incremental,visitor,int,recommended,max,number,of,returned,records,throw,new,unsupported,operation,exception,override,public,void,clear,kv,state,id,kv,state,id,registry,register,kv,state,new,job,id,new,job,vertex,id,new,key,group,range,0,0,vanilla,kv,state,kv,state,internal,request,request,new,kv,state,internal,request,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,true,response,get,cause,get,message,contains,expected,test,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testFailureOnGetSerializedValue() throws Exception;1550863001;Tests the failure response on a failure on the {@link InternalKvState#getSerializedValue(byte[], TypeSerializer, TypeSerializer, TypeSerializer)} call.;@Test_	public void testFailureOnGetSerializedValue() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		InternalKvState<Integer, VoidNamespace, Long> kvState =_				new InternalKvState<Integer, VoidNamespace, Long>() {_					@Override_					public TypeSerializer<Integer> getKeySerializer() {_						return IntSerializer.INSTANCE__					}__					@Override_					public TypeSerializer<VoidNamespace> getNamespaceSerializer() {_						return VoidNamespaceSerializer.INSTANCE__					}__					@Override_					public TypeSerializer<Long> getValueSerializer() {_						return LongSerializer.INSTANCE__					}__					@Override_					public void setCurrentNamespace(VoidNamespace namespace) {_						_					}__					@Override_					public byte[] getSerializedValue(_							final byte[] serializedKeyAndNamespace,_							final TypeSerializer<Integer> safeKeySerializer,_							final TypeSerializer<VoidNamespace> safeNamespaceSerializer,_							final TypeSerializer<Long> safeValueSerializer) throws Exception {_						throw new RuntimeException("Expected test Exception")__					}__					@Override_					public StateIncrementalVisitor<Integer, VoidNamespace, Long> getStateIncrementalVisitor(int recommendedMaxNumberOfReturnedRecords) {_						throw new UnsupportedOperationException()__					}__					@Override_					public void clear() {__					}_				}___		KvStateID kvStateId = registry.registerKvState(_				new JobID(),_				new JobVertexID(),_				new KeyGroupRange(0, 0),_				"vanilla",_				kvState)___		KvStateInternalRequest request = new KvStateInternalRequest(kvStateId, new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertTrue(response.getCause().getMessage().contains("Expected test Exception"))___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,on,a,failure,on,the,link,internal,kv,state,get,serialized,value,byte,type,serializer,type,serializer,type,serializer,call;test,public,void,test,failure,on,get,serialized,value,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,internal,kv,state,integer,void,namespace,long,kv,state,new,internal,kv,state,integer,void,namespace,long,override,public,type,serializer,integer,get,key,serializer,return,int,serializer,instance,override,public,type,serializer,void,namespace,get,namespace,serializer,return,void,namespace,serializer,instance,override,public,type,serializer,long,get,value,serializer,return,long,serializer,instance,override,public,void,set,current,namespace,void,namespace,namespace,override,public,byte,get,serialized,value,final,byte,serialized,key,and,namespace,final,type,serializer,integer,safe,key,serializer,final,type,serializer,void,namespace,safe,namespace,serializer,final,type,serializer,long,safe,value,serializer,throws,exception,throw,new,runtime,exception,expected,test,exception,override,public,state,incremental,visitor,integer,void,namespace,long,get,state,incremental,visitor,int,recommended,max,number,of,returned,records,throw,new,unsupported,operation,exception,override,public,void,clear,kv,state,id,kv,state,id,registry,register,kv,state,new,job,id,new,job,vertex,id,new,key,group,range,0,0,vanilla,kv,state,kv,state,internal,request,request,new,kv,state,internal,request,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,true,response,get,cause,get,message,contains,expected,test,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testIncomingBufferIsRecycled() throws Exception;1509037054;Tests that incoming buffer instances are recycled.;@Test_	public void testIncomingBufferIsRecycled() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		KvStateInternalRequest request = new KvStateInternalRequest(new KvStateID(), new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		assertEquals(1L, serRequest.refCnt())___		_		channel.writeInbound(serRequest)__		assertEquals("Buffer not recycled", 0L, serRequest.refCnt())___		_		ByteBuf unexpected = channel.alloc().buffer(8)__		unexpected.writeInt(4)__		unexpected.writeInt(4)___		assertEquals(1L, unexpected.refCnt())___		channel.writeInbound(unexpected)__		assertEquals("Buffer not recycled", 0L, unexpected.refCnt())__	};tests,that,incoming,buffer,instances,are,recycled;test,public,void,test,incoming,buffer,is,recycled,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,kv,state,internal,request,request,new,kv,state,internal,request,new,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,assert,equals,1l,ser,request,ref,cnt,channel,write,inbound,ser,request,assert,equals,buffer,not,recycled,0l,ser,request,ref,cnt,byte,buf,unexpected,channel,alloc,buffer,8,unexpected,write,int,4,unexpected,write,int,4,assert,equals,1l,unexpected,ref,cnt,channel,write,inbound,unexpected,assert,equals,buffer,not,recycled,0l,unexpected,ref,cnt
KvStateServerHandlerTest -> @Test 	public void testIncomingBufferIsRecycled() throws Exception;1510911969;Tests that incoming buffer instances are recycled.;@Test_	public void testIncomingBufferIsRecycled() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		KvStateInternalRequest request = new KvStateInternalRequest(new KvStateID(), new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		assertEquals(1L, serRequest.refCnt())___		_		channel.writeInbound(serRequest)__		assertEquals("Buffer not recycled", 0L, serRequest.refCnt())___		_		ByteBuf unexpected = channel.alloc().buffer(8)__		unexpected.writeInt(4)__		unexpected.writeInt(4)___		assertEquals(1L, unexpected.refCnt())___		channel.writeInbound(unexpected)__		assertEquals("Buffer not recycled", 0L, unexpected.refCnt())__	};tests,that,incoming,buffer,instances,are,recycled;test,public,void,test,incoming,buffer,is,recycled,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,kv,state,internal,request,request,new,kv,state,internal,request,new,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,assert,equals,1l,ser,request,ref,cnt,channel,write,inbound,ser,request,assert,equals,buffer,not,recycled,0l,ser,request,ref,cnt,byte,buf,unexpected,channel,alloc,buffer,8,unexpected,write,int,4,unexpected,write,int,4,assert,equals,1l,unexpected,ref,cnt,channel,write,inbound,unexpected,assert,equals,buffer,not,recycled,0l,unexpected,ref,cnt
KvStateServerHandlerTest -> @Test 	public void testIncomingBufferIsRecycled() throws Exception;1517914184;Tests that incoming buffer instances are recycled.;@Test_	public void testIncomingBufferIsRecycled() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		KvStateInternalRequest request = new KvStateInternalRequest(new KvStateID(), new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		assertEquals(1L, serRequest.refCnt())___		_		channel.writeInbound(serRequest)__		assertEquals("Buffer not recycled", 0L, serRequest.refCnt())___		_		ByteBuf unexpected = channel.alloc().buffer(8)__		unexpected.writeInt(4)__		unexpected.writeInt(4)___		assertEquals(1L, unexpected.refCnt())___		channel.writeInbound(unexpected)__		assertEquals("Buffer not recycled", 0L, unexpected.refCnt())__	};tests,that,incoming,buffer,instances,are,recycled;test,public,void,test,incoming,buffer,is,recycled,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,kv,state,internal,request,request,new,kv,state,internal,request,new,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,assert,equals,1l,ser,request,ref,cnt,channel,write,inbound,ser,request,assert,equals,buffer,not,recycled,0l,ser,request,ref,cnt,byte,buf,unexpected,channel,alloc,buffer,8,unexpected,write,int,4,unexpected,write,int,4,assert,equals,1l,unexpected,ref,cnt,channel,write,inbound,unexpected,assert,equals,buffer,not,recycled,0l,unexpected,ref,cnt
KvStateServerHandlerTest -> @Test 	public void testIncomingBufferIsRecycled() throws Exception;1522337739;Tests that incoming buffer instances are recycled.;@Test_	public void testIncomingBufferIsRecycled() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		KvStateInternalRequest request = new KvStateInternalRequest(new KvStateID(), new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		assertEquals(1L, serRequest.refCnt())___		_		channel.writeInbound(serRequest)__		assertEquals("Buffer not recycled", 0L, serRequest.refCnt())___		_		ByteBuf unexpected = channel.alloc().buffer(8)__		unexpected.writeInt(4)__		unexpected.writeInt(4)___		assertEquals(1L, unexpected.refCnt())___		channel.writeInbound(unexpected)__		assertEquals("Buffer not recycled", 0L, unexpected.refCnt())__	};tests,that,incoming,buffer,instances,are,recycled;test,public,void,test,incoming,buffer,is,recycled,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,kv,state,internal,request,request,new,kv,state,internal,request,new,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,assert,equals,1l,ser,request,ref,cnt,channel,write,inbound,ser,request,assert,equals,buffer,not,recycled,0l,ser,request,ref,cnt,byte,buf,unexpected,channel,alloc,buffer,8,unexpected,write,int,4,unexpected,write,int,4,assert,equals,1l,unexpected,ref,cnt,channel,write,inbound,unexpected,assert,equals,buffer,not,recycled,0l,unexpected,ref,cnt
KvStateServerHandlerTest -> @Test 	public void testIncomingBufferIsRecycled() throws Exception;1531419503;Tests that incoming buffer instances are recycled.;@Test_	public void testIncomingBufferIsRecycled() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		KvStateInternalRequest request = new KvStateInternalRequest(new KvStateID(), new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		assertEquals(1L, serRequest.refCnt())___		_		channel.writeInbound(serRequest)__		assertEquals("Buffer not recycled", 0L, serRequest.refCnt())___		_		ByteBuf unexpected = channel.alloc().buffer(8)__		unexpected.writeInt(4)__		unexpected.writeInt(4)___		assertEquals(1L, unexpected.refCnt())___		channel.writeInbound(unexpected)__		assertEquals("Buffer not recycled", 0L, unexpected.refCnt())__	};tests,that,incoming,buffer,instances,are,recycled;test,public,void,test,incoming,buffer,is,recycled,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,kv,state,internal,request,request,new,kv,state,internal,request,new,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,assert,equals,1l,ser,request,ref,cnt,channel,write,inbound,ser,request,assert,equals,buffer,not,recycled,0l,ser,request,ref,cnt,byte,buf,unexpected,channel,alloc,buffer,8,unexpected,write,int,4,unexpected,write,int,4,assert,equals,1l,unexpected,ref,cnt,channel,write,inbound,unexpected,assert,equals,buffer,not,recycled,0l,unexpected,ref,cnt
KvStateServerHandlerTest -> @Test 	public void testIncomingBufferIsRecycled() throws Exception;1539939663;Tests that incoming buffer instances are recycled.;@Test_	public void testIncomingBufferIsRecycled() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		KvStateInternalRequest request = new KvStateInternalRequest(new KvStateID(), new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		assertEquals(1L, serRequest.refCnt())___		_		channel.writeInbound(serRequest)__		assertEquals("Buffer not recycled", 0L, serRequest.refCnt())___		_		ByteBuf unexpected = channel.alloc().buffer(8)__		unexpected.writeInt(4)__		unexpected.writeInt(4)___		assertEquals(1L, unexpected.refCnt())___		channel.writeInbound(unexpected)__		assertEquals("Buffer not recycled", 0L, unexpected.refCnt())__	};tests,that,incoming,buffer,instances,are,recycled;test,public,void,test,incoming,buffer,is,recycled,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,kv,state,internal,request,request,new,kv,state,internal,request,new,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,assert,equals,1l,ser,request,ref,cnt,channel,write,inbound,ser,request,assert,equals,buffer,not,recycled,0l,ser,request,ref,cnt,byte,buf,unexpected,channel,alloc,buffer,8,unexpected,write,int,4,unexpected,write,int,4,assert,equals,1l,unexpected,ref,cnt,channel,write,inbound,unexpected,assert,equals,buffer,not,recycled,0l,unexpected,ref,cnt
KvStateServerHandlerTest -> @Test 	public void testIncomingBufferIsRecycled() throws Exception;1548755874;Tests that incoming buffer instances are recycled.;@Test_	public void testIncomingBufferIsRecycled() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		KvStateInternalRequest request = new KvStateInternalRequest(new KvStateID(), new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		assertEquals(1L, serRequest.refCnt())___		_		channel.writeInbound(serRequest)__		assertEquals("Buffer not recycled", 0L, serRequest.refCnt())___		_		ByteBuf unexpected = channel.alloc().buffer(8)__		unexpected.writeInt(4)__		unexpected.writeInt(4)___		assertEquals(1L, unexpected.refCnt())___		channel.writeInbound(unexpected)__		assertEquals("Buffer not recycled", 0L, unexpected.refCnt())__	};tests,that,incoming,buffer,instances,are,recycled;test,public,void,test,incoming,buffer,is,recycled,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,kv,state,internal,request,request,new,kv,state,internal,request,new,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,assert,equals,1l,ser,request,ref,cnt,channel,write,inbound,ser,request,assert,equals,buffer,not,recycled,0l,ser,request,ref,cnt,byte,buf,unexpected,channel,alloc,buffer,8,unexpected,write,int,4,unexpected,write,int,4,assert,equals,1l,unexpected,ref,cnt,channel,write,inbound,unexpected,assert,equals,buffer,not,recycled,0l,unexpected,ref,cnt
KvStateServerHandlerTest -> @Test 	public void testIncomingBufferIsRecycled() throws Exception;1550863001;Tests that incoming buffer instances are recycled.;@Test_	public void testIncomingBufferIsRecycled() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		KvStateInternalRequest request = new KvStateInternalRequest(new KvStateID(), new byte[0])__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), 282872L, request)___		assertEquals(1L, serRequest.refCnt())___		_		channel.writeInbound(serRequest)__		assertEquals("Buffer not recycled", 0L, serRequest.refCnt())___		_		ByteBuf unexpected = channel.alloc().buffer(8)__		unexpected.writeInt(4)__		unexpected.writeInt(4)___		assertEquals(1L, unexpected.refCnt())___		channel.writeInbound(unexpected)__		assertEquals("Buffer not recycled", 0L, unexpected.refCnt())__	};tests,that,incoming,buffer,instances,are,recycled;test,public,void,test,incoming,buffer,is,recycled,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,kv,state,internal,request,request,new,kv,state,internal,request,new,kv,state,id,new,byte,0,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,282872l,request,assert,equals,1l,ser,request,ref,cnt,channel,write,inbound,ser,request,assert,equals,buffer,not,recycled,0l,ser,request,ref,cnt,byte,buf,unexpected,channel,alloc,buffer,8,unexpected,write,int,4,unexpected,write,int,4,assert,equals,1l,unexpected,ref,cnt,channel,write,inbound,unexpected,assert,equals,buffer,not,recycled,0l,unexpected,ref,cnt
KvStateServerHandlerTest -> private ChannelHandler getFrameDecoder();1509037054;Frame length decoder (expected by the serialized messages).;private ChannelHandler getFrameDecoder() {_		return new LengthFieldBasedFrameDecoder(Integer.MAX_VALUE, 0, 4, 0, 4)__	};frame,length,decoder,expected,by,the,serialized,messages;private,channel,handler,get,frame,decoder,return,new,length,field,based,frame,decoder,integer,0,4,0,4
KvStateServerHandlerTest -> private ChannelHandler getFrameDecoder();1510911969;Frame length decoder (expected by the serialized messages).;private ChannelHandler getFrameDecoder() {_		return new LengthFieldBasedFrameDecoder(Integer.MAX_VALUE, 0, 4, 0, 4)__	};frame,length,decoder,expected,by,the,serialized,messages;private,channel,handler,get,frame,decoder,return,new,length,field,based,frame,decoder,integer,0,4,0,4
KvStateServerHandlerTest -> private ChannelHandler getFrameDecoder();1517914184;Frame length decoder (expected by the serialized messages).;private ChannelHandler getFrameDecoder() {_		return new LengthFieldBasedFrameDecoder(Integer.MAX_VALUE, 0, 4, 0, 4)__	};frame,length,decoder,expected,by,the,serialized,messages;private,channel,handler,get,frame,decoder,return,new,length,field,based,frame,decoder,integer,0,4,0,4
KvStateServerHandlerTest -> private ChannelHandler getFrameDecoder();1522337739;Frame length decoder (expected by the serialized messages).;private ChannelHandler getFrameDecoder() {_		return new LengthFieldBasedFrameDecoder(Integer.MAX_VALUE, 0, 4, 0, 4)__	};frame,length,decoder,expected,by,the,serialized,messages;private,channel,handler,get,frame,decoder,return,new,length,field,based,frame,decoder,integer,0,4,0,4
KvStateServerHandlerTest -> private ChannelHandler getFrameDecoder();1531419503;Frame length decoder (expected by the serialized messages).;private ChannelHandler getFrameDecoder() {_		return new LengthFieldBasedFrameDecoder(Integer.MAX_VALUE, 0, 4, 0, 4)__	};frame,length,decoder,expected,by,the,serialized,messages;private,channel,handler,get,frame,decoder,return,new,length,field,based,frame,decoder,integer,0,4,0,4
KvStateServerHandlerTest -> private ChannelHandler getFrameDecoder();1539939663;Frame length decoder (expected by the serialized messages).;private ChannelHandler getFrameDecoder() {_		return new LengthFieldBasedFrameDecoder(Integer.MAX_VALUE, 0, 4, 0, 4)__	};frame,length,decoder,expected,by,the,serialized,messages;private,channel,handler,get,frame,decoder,return,new,length,field,based,frame,decoder,integer,0,4,0,4
KvStateServerHandlerTest -> private ChannelHandler getFrameDecoder();1548755874;Frame length decoder (expected by the serialized messages).;private ChannelHandler getFrameDecoder() {_		return new LengthFieldBasedFrameDecoder(Integer.MAX_VALUE, 0, 4, 0, 4)__	};frame,length,decoder,expected,by,the,serialized,messages;private,channel,handler,get,frame,decoder,return,new,length,field,based,frame,decoder,integer,0,4,0,4
KvStateServerHandlerTest -> private ChannelHandler getFrameDecoder();1550863001;Frame length decoder (expected by the serialized messages).;private ChannelHandler getFrameDecoder() {_		return new LengthFieldBasedFrameDecoder(Integer.MAX_VALUE, 0, 4, 0, 4)__	};frame,length,decoder,expected,by,the,serialized,messages;private,channel,handler,get,frame,decoder,return,new,length,field,based,frame,decoder,integer,0,4,0,4
KvStateServerHandlerTest -> @Test 	public void testUnexpectedMessage() throws Exception;1509037054;Tests response on unexpected messages.;@Test_	public void testUnexpectedMessage() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		ByteBuf unexpectedMessage = Unpooled.buffer(8)__		unexpectedMessage.writeInt(4)__		unexpectedMessage.writeInt(123238213)___		channel.writeInbound(unexpectedMessage)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		Throwable response = MessageSerializer.deserializeServerFailure(buf)___		assertEquals(0L, stats.getNumRequests())__		assertEquals(0L, stats.getNumFailed())___		KvStateResponse stateResponse = new KvStateResponse(new byte[0])__		unexpectedMessage = MessageSerializer.serializeResponse(channel.alloc(), 192L, stateResponse)___		channel.writeInbound(unexpectedMessage)___		buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		response = MessageSerializer.deserializeServerFailure(buf)___		assertTrue("Unexpected failure cause " + response.getClass().getName(), response instanceof IllegalArgumentException)___		assertEquals(0L, stats.getNumRequests())__		assertEquals(0L, stats.getNumFailed())__	};tests,response,on,unexpected,messages;test,public,void,test,unexpected,message,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,byte,buf,unexpected,message,unpooled,buffer,8,unexpected,message,write,int,4,unexpected,message,write,int,123238213,channel,write,inbound,unexpected,message,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,throwable,response,message,serializer,deserialize,server,failure,buf,assert,equals,0l,stats,get,num,requests,assert,equals,0l,stats,get,num,failed,kv,state,response,state,response,new,kv,state,response,new,byte,0,unexpected,message,message,serializer,serialize,response,channel,alloc,192l,state,response,channel,write,inbound,unexpected,message,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,response,message,serializer,deserialize,server,failure,buf,assert,true,unexpected,failure,cause,response,get,class,get,name,response,instanceof,illegal,argument,exception,assert,equals,0l,stats,get,num,requests,assert,equals,0l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testUnexpectedMessage() throws Exception;1510911969;Tests response on unexpected messages.;@Test_	public void testUnexpectedMessage() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		ByteBuf unexpectedMessage = Unpooled.buffer(8)__		unexpectedMessage.writeInt(4)__		unexpectedMessage.writeInt(123238213)___		channel.writeInbound(unexpectedMessage)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		Throwable response = MessageSerializer.deserializeServerFailure(buf)___		assertEquals(0L, stats.getNumRequests())__		assertEquals(0L, stats.getNumFailed())___		KvStateResponse stateResponse = new KvStateResponse(new byte[0])__		unexpectedMessage = MessageSerializer.serializeResponse(channel.alloc(), 192L, stateResponse)___		channel.writeInbound(unexpectedMessage)___		buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		response = MessageSerializer.deserializeServerFailure(buf)___		assertTrue("Unexpected failure cause " + response.getClass().getName(), response instanceof IllegalArgumentException)___		assertEquals(0L, stats.getNumRequests())__		assertEquals(0L, stats.getNumFailed())__	};tests,response,on,unexpected,messages;test,public,void,test,unexpected,message,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,byte,buf,unexpected,message,unpooled,buffer,8,unexpected,message,write,int,4,unexpected,message,write,int,123238213,channel,write,inbound,unexpected,message,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,throwable,response,message,serializer,deserialize,server,failure,buf,assert,equals,0l,stats,get,num,requests,assert,equals,0l,stats,get,num,failed,kv,state,response,state,response,new,kv,state,response,new,byte,0,unexpected,message,message,serializer,serialize,response,channel,alloc,192l,state,response,channel,write,inbound,unexpected,message,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,response,message,serializer,deserialize,server,failure,buf,assert,true,unexpected,failure,cause,response,get,class,get,name,response,instanceof,illegal,argument,exception,assert,equals,0l,stats,get,num,requests,assert,equals,0l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testUnexpectedMessage() throws Exception;1517914184;Tests response on unexpected messages.;@Test_	public void testUnexpectedMessage() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		ByteBuf unexpectedMessage = Unpooled.buffer(8)__		unexpectedMessage.writeInt(4)__		unexpectedMessage.writeInt(123238213)___		channel.writeInbound(unexpectedMessage)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		Throwable response = MessageSerializer.deserializeServerFailure(buf)___		assertEquals(0L, stats.getNumRequests())__		assertEquals(0L, stats.getNumFailed())___		KvStateResponse stateResponse = new KvStateResponse(new byte[0])__		unexpectedMessage = MessageSerializer.serializeResponse(channel.alloc(), 192L, stateResponse)___		channel.writeInbound(unexpectedMessage)___		buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		response = MessageSerializer.deserializeServerFailure(buf)___		assertTrue("Unexpected failure cause " + response.getClass().getName(), response instanceof IllegalArgumentException)___		assertEquals(0L, stats.getNumRequests())__		assertEquals(0L, stats.getNumFailed())__	};tests,response,on,unexpected,messages;test,public,void,test,unexpected,message,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,byte,buf,unexpected,message,unpooled,buffer,8,unexpected,message,write,int,4,unexpected,message,write,int,123238213,channel,write,inbound,unexpected,message,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,throwable,response,message,serializer,deserialize,server,failure,buf,assert,equals,0l,stats,get,num,requests,assert,equals,0l,stats,get,num,failed,kv,state,response,state,response,new,kv,state,response,new,byte,0,unexpected,message,message,serializer,serialize,response,channel,alloc,192l,state,response,channel,write,inbound,unexpected,message,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,response,message,serializer,deserialize,server,failure,buf,assert,true,unexpected,failure,cause,response,get,class,get,name,response,instanceof,illegal,argument,exception,assert,equals,0l,stats,get,num,requests,assert,equals,0l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testUnexpectedMessage() throws Exception;1522337739;Tests response on unexpected messages.;@Test_	public void testUnexpectedMessage() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		ByteBuf unexpectedMessage = Unpooled.buffer(8)__		unexpectedMessage.writeInt(4)__		unexpectedMessage.writeInt(123238213)___		channel.writeInbound(unexpectedMessage)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		Throwable response = MessageSerializer.deserializeServerFailure(buf)___		assertEquals(0L, stats.getNumRequests())__		assertEquals(0L, stats.getNumFailed())___		KvStateResponse stateResponse = new KvStateResponse(new byte[0])__		unexpectedMessage = MessageSerializer.serializeResponse(channel.alloc(), 192L, stateResponse)___		channel.writeInbound(unexpectedMessage)___		buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		response = MessageSerializer.deserializeServerFailure(buf)___		assertTrue("Unexpected failure cause " + response.getClass().getName(), response instanceof IllegalArgumentException)___		assertEquals(0L, stats.getNumRequests())__		assertEquals(0L, stats.getNumFailed())__	};tests,response,on,unexpected,messages;test,public,void,test,unexpected,message,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,byte,buf,unexpected,message,unpooled,buffer,8,unexpected,message,write,int,4,unexpected,message,write,int,123238213,channel,write,inbound,unexpected,message,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,throwable,response,message,serializer,deserialize,server,failure,buf,assert,equals,0l,stats,get,num,requests,assert,equals,0l,stats,get,num,failed,kv,state,response,state,response,new,kv,state,response,new,byte,0,unexpected,message,message,serializer,serialize,response,channel,alloc,192l,state,response,channel,write,inbound,unexpected,message,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,response,message,serializer,deserialize,server,failure,buf,assert,true,unexpected,failure,cause,response,get,class,get,name,response,instanceof,illegal,argument,exception,assert,equals,0l,stats,get,num,requests,assert,equals,0l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testUnexpectedMessage() throws Exception;1531419503;Tests response on unexpected messages.;@Test_	public void testUnexpectedMessage() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		ByteBuf unexpectedMessage = Unpooled.buffer(8)__		unexpectedMessage.writeInt(4)__		unexpectedMessage.writeInt(123238213)___		channel.writeInbound(unexpectedMessage)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		Throwable response = MessageSerializer.deserializeServerFailure(buf)___		assertEquals(0L, stats.getNumRequests())__		assertEquals(0L, stats.getNumFailed())___		KvStateResponse stateResponse = new KvStateResponse(new byte[0])__		unexpectedMessage = MessageSerializer.serializeResponse(channel.alloc(), 192L, stateResponse)___		channel.writeInbound(unexpectedMessage)___		buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		response = MessageSerializer.deserializeServerFailure(buf)___		assertTrue("Unexpected failure cause " + response.getClass().getName(), response instanceof IllegalArgumentException)___		assertEquals(0L, stats.getNumRequests())__		assertEquals(0L, stats.getNumFailed())__	};tests,response,on,unexpected,messages;test,public,void,test,unexpected,message,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,byte,buf,unexpected,message,unpooled,buffer,8,unexpected,message,write,int,4,unexpected,message,write,int,123238213,channel,write,inbound,unexpected,message,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,throwable,response,message,serializer,deserialize,server,failure,buf,assert,equals,0l,stats,get,num,requests,assert,equals,0l,stats,get,num,failed,kv,state,response,state,response,new,kv,state,response,new,byte,0,unexpected,message,message,serializer,serialize,response,channel,alloc,192l,state,response,channel,write,inbound,unexpected,message,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,response,message,serializer,deserialize,server,failure,buf,assert,true,unexpected,failure,cause,response,get,class,get,name,response,instanceof,illegal,argument,exception,assert,equals,0l,stats,get,num,requests,assert,equals,0l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testUnexpectedMessage() throws Exception;1539939663;Tests response on unexpected messages.;@Test_	public void testUnexpectedMessage() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		ByteBuf unexpectedMessage = Unpooled.buffer(8)__		unexpectedMessage.writeInt(4)__		unexpectedMessage.writeInt(123238213)___		channel.writeInbound(unexpectedMessage)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		Throwable response = MessageSerializer.deserializeServerFailure(buf)___		assertEquals(0L, stats.getNumRequests())__		assertEquals(0L, stats.getNumFailed())___		KvStateResponse stateResponse = new KvStateResponse(new byte[0])__		unexpectedMessage = MessageSerializer.serializeResponse(channel.alloc(), 192L, stateResponse)___		channel.writeInbound(unexpectedMessage)___		buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		response = MessageSerializer.deserializeServerFailure(buf)___		assertTrue("Unexpected failure cause " + response.getClass().getName(), response instanceof IllegalArgumentException)___		assertEquals(0L, stats.getNumRequests())__		assertEquals(0L, stats.getNumFailed())__	};tests,response,on,unexpected,messages;test,public,void,test,unexpected,message,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,byte,buf,unexpected,message,unpooled,buffer,8,unexpected,message,write,int,4,unexpected,message,write,int,123238213,channel,write,inbound,unexpected,message,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,throwable,response,message,serializer,deserialize,server,failure,buf,assert,equals,0l,stats,get,num,requests,assert,equals,0l,stats,get,num,failed,kv,state,response,state,response,new,kv,state,response,new,byte,0,unexpected,message,message,serializer,serialize,response,channel,alloc,192l,state,response,channel,write,inbound,unexpected,message,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,response,message,serializer,deserialize,server,failure,buf,assert,true,unexpected,failure,cause,response,get,class,get,name,response,instanceof,illegal,argument,exception,assert,equals,0l,stats,get,num,requests,assert,equals,0l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testUnexpectedMessage() throws Exception;1548755874;Tests response on unexpected messages.;@Test_	public void testUnexpectedMessage() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		ByteBuf unexpectedMessage = Unpooled.buffer(8)__		unexpectedMessage.writeInt(4)__		unexpectedMessage.writeInt(123238213)___		channel.writeInbound(unexpectedMessage)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		Throwable response = MessageSerializer.deserializeServerFailure(buf)___		assertEquals(0L, stats.getNumRequests())__		assertEquals(0L, stats.getNumFailed())___		KvStateResponse stateResponse = new KvStateResponse(new byte[0])__		unexpectedMessage = MessageSerializer.serializeResponse(channel.alloc(), 192L, stateResponse)___		channel.writeInbound(unexpectedMessage)___		buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		response = MessageSerializer.deserializeServerFailure(buf)___		assertTrue("Unexpected failure cause " + response.getClass().getName(), response instanceof IllegalArgumentException)___		assertEquals(0L, stats.getNumRequests())__		assertEquals(0L, stats.getNumFailed())__	};tests,response,on,unexpected,messages;test,public,void,test,unexpected,message,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,byte,buf,unexpected,message,unpooled,buffer,8,unexpected,message,write,int,4,unexpected,message,write,int,123238213,channel,write,inbound,unexpected,message,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,throwable,response,message,serializer,deserialize,server,failure,buf,assert,equals,0l,stats,get,num,requests,assert,equals,0l,stats,get,num,failed,kv,state,response,state,response,new,kv,state,response,new,byte,0,unexpected,message,message,serializer,serialize,response,channel,alloc,192l,state,response,channel,write,inbound,unexpected,message,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,response,message,serializer,deserialize,server,failure,buf,assert,true,unexpected,failure,cause,response,get,class,get,name,response,instanceof,illegal,argument,exception,assert,equals,0l,stats,get,num,requests,assert,equals,0l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testUnexpectedMessage() throws Exception;1550863001;Tests response on unexpected messages.;@Test_	public void testUnexpectedMessage() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		_		ByteBuf unexpectedMessage = Unpooled.buffer(8)__		unexpectedMessage.writeInt(4)__		unexpectedMessage.writeInt(123238213)___		channel.writeInbound(unexpectedMessage)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		Throwable response = MessageSerializer.deserializeServerFailure(buf)___		assertEquals(0L, stats.getNumRequests())__		assertEquals(0L, stats.getNumFailed())___		KvStateResponse stateResponse = new KvStateResponse(new byte[0])__		unexpectedMessage = MessageSerializer.serializeResponse(channel.alloc(), 192L, stateResponse)___		channel.writeInbound(unexpectedMessage)___		buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.SERVER_FAILURE, MessageSerializer.deserializeHeader(buf))__		response = MessageSerializer.deserializeServerFailure(buf)___		assertTrue("Unexpected failure cause " + response.getClass().getName(), response instanceof IllegalArgumentException)___		assertEquals(0L, stats.getNumRequests())__		assertEquals(0L, stats.getNumFailed())__	};tests,response,on,unexpected,messages;test,public,void,test,unexpected,message,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,byte,buf,unexpected,message,unpooled,buffer,8,unexpected,message,write,int,4,unexpected,message,write,int,123238213,channel,write,inbound,unexpected,message,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,throwable,response,message,serializer,deserialize,server,failure,buf,assert,equals,0l,stats,get,num,requests,assert,equals,0l,stats,get,num,failed,kv,state,response,state,response,new,kv,state,response,new,byte,0,unexpected,message,message,serializer,serialize,response,channel,alloc,192l,state,response,channel,write,inbound,unexpected,message,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,response,message,serializer,deserialize,server,failure,buf,assert,true,unexpected,failure,cause,response,get,class,get,name,response,instanceof,illegal,argument,exception,assert,equals,0l,stats,get,num,requests,assert,equals,0l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testQueryUnknownKey() throws Exception;1509037054;Tests the failure response with {@link UnknownKeyOrNamespaceException} as cause_on queries for non-existing keys.;@Test_	public void testQueryUnknownKey() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		KeyedStateBackend<Integer> backend = abstractBackend.createKeyedStateBackend(_				dummyEnv,_				new JobID(),_				"test_op",_				IntSerializer.INSTANCE,_				numKeyGroups,_				new KeyGroupRange(0, 0),_				registry.createTaskRegistry(dummyEnv.getJobID(), dummyEnv.getJobVertexId()))___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		backend.getPartitionedState(VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, desc)___		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				1238283,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 22982L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, serializedKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertEquals(requestId, response.getRequestId())___		assertTrue("Did not respond with expected failure cause", response.getCause() instanceof UnknownKeyOrNamespaceException)___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,with,link,unknown,key,or,namespace,exception,as,cause,on,queries,for,non,existing,keys;test,public,void,test,query,unknown,key,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,keyed,state,backend,integer,backend,abstract,backend,create,keyed,state,backend,dummy,env,new,job,id,int,serializer,instance,num,key,groups,new,key,group,range,0,0,registry,create,task,registry,dummy,env,get,job,id,dummy,env,get,job,vertex,id,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,1238283,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,22982l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,request,id,response,get,request,id,assert,true,did,not,respond,with,expected,failure,cause,response,get,cause,instanceof,unknown,key,or,namespace,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testQueryUnknownKey() throws Exception;1510911969;Tests the failure response with {@link UnknownKeyOrNamespaceException} as cause_on queries for non-existing keys.;@Test_	public void testQueryUnknownKey() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		KeyedStateBackend<Integer> backend = abstractBackend.createKeyedStateBackend(_				dummyEnv,_				new JobID(),_				"test_op",_				IntSerializer.INSTANCE,_				numKeyGroups,_				new KeyGroupRange(0, 0),_				registry.createTaskRegistry(dummyEnv.getJobID(), dummyEnv.getJobVertexId()))___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		backend.getPartitionedState(VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, desc)___		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				1238283,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 22982L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, serializedKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertEquals(requestId, response.getRequestId())___		assertTrue("Did not respond with expected failure cause", response.getCause() instanceof UnknownKeyOrNamespaceException)___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,with,link,unknown,key,or,namespace,exception,as,cause,on,queries,for,non,existing,keys;test,public,void,test,query,unknown,key,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,keyed,state,backend,integer,backend,abstract,backend,create,keyed,state,backend,dummy,env,new,job,id,int,serializer,instance,num,key,groups,new,key,group,range,0,0,registry,create,task,registry,dummy,env,get,job,id,dummy,env,get,job,vertex,id,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,1238283,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,22982l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,request,id,response,get,request,id,assert,true,did,not,respond,with,expected,failure,cause,response,get,cause,instanceof,unknown,key,or,namespace,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testQueryUnknownKey() throws Exception;1517914184;Tests the failure response with {@link UnknownKeyOrNamespaceException} as cause_on queries for non-existing keys.;@Test_	public void testQueryUnknownKey() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		KeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		backend.getPartitionedState(VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, desc)___		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				1238283,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 22982L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, serializedKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertEquals(requestId, response.getRequestId())___		assertTrue("Did not respond with expected failure cause", response.getCause() instanceof UnknownKeyOrNamespaceException)___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,with,link,unknown,key,or,namespace,exception,as,cause,on,queries,for,non,existing,keys;test,public,void,test,query,unknown,key,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,1238283,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,22982l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,request,id,response,get,request,id,assert,true,did,not,respond,with,expected,failure,cause,response,get,cause,instanceof,unknown,key,or,namespace,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testQueryUnknownKey() throws Exception;1522337739;Tests the failure response with {@link UnknownKeyOrNamespaceException} as cause_on queries for non-existing keys.;@Test_	public void testQueryUnknownKey() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		KeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		backend.getPartitionedState(VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, desc)___		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				1238283,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 22982L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, serializedKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertEquals(requestId, response.getRequestId())___		assertTrue("Did not respond with expected failure cause", response.getCause() instanceof UnknownKeyOrNamespaceException)___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,with,link,unknown,key,or,namespace,exception,as,cause,on,queries,for,non,existing,keys;test,public,void,test,query,unknown,key,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,1238283,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,22982l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,request,id,response,get,request,id,assert,true,did,not,respond,with,expected,failure,cause,response,get,cause,instanceof,unknown,key,or,namespace,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testQueryUnknownKey() throws Exception;1531419503;Tests the failure response with {@link UnknownKeyOrNamespaceException} as cause_on queries for non-existing keys.;@Test_	public void testQueryUnknownKey() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		KeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		backend.getPartitionedState(VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, desc)___		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				1238283,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 22982L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, serializedKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertEquals(requestId, response.getRequestId())___		assertTrue("Did not respond with expected failure cause", response.getCause() instanceof UnknownKeyOrNamespaceException)___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,with,link,unknown,key,or,namespace,exception,as,cause,on,queries,for,non,existing,keys;test,public,void,test,query,unknown,key,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,1238283,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,22982l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,request,id,response,get,request,id,assert,true,did,not,respond,with,expected,failure,cause,response,get,cause,instanceof,unknown,key,or,namespace,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testQueryUnknownKey() throws Exception;1539939663;Tests the failure response with {@link UnknownKeyOrNamespaceException} as cause_on queries for non-existing keys.;@Test_	public void testQueryUnknownKey() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		KeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		backend.getPartitionedState(VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, desc)___		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				1238283,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 22982L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, serializedKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertEquals(requestId, response.getRequestId())___		assertTrue("Did not respond with expected failure cause", response.getCause() instanceof UnknownKeyOrNamespaceException)___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,with,link,unknown,key,or,namespace,exception,as,cause,on,queries,for,non,existing,keys;test,public,void,test,query,unknown,key,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,1238283,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,22982l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,request,id,response,get,request,id,assert,true,did,not,respond,with,expected,failure,cause,response,get,cause,instanceof,unknown,key,or,namespace,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testQueryUnknownKey() throws Exception;1548755874;Tests the failure response with {@link UnknownKeyOrNamespaceException} as cause_on queries for non-existing keys.;@Test_	public void testQueryUnknownKey() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		KeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		backend.getPartitionedState(VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, desc)___		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				1238283,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 22982L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, serializedKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertEquals(requestId, response.getRequestId())___		assertTrue("Did not respond with expected failure cause", response.getCause() instanceof UnknownKeyOrNamespaceException)___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,with,link,unknown,key,or,namespace,exception,as,cause,on,queries,for,non,existing,keys;test,public,void,test,query,unknown,key,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,1238283,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,22982l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,request,id,response,get,request,id,assert,true,did,not,respond,with,expected,failure,cause,response,get,cause,instanceof,unknown,key,or,namespace,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> @Test 	public void testQueryUnknownKey() throws Exception;1550863001;Tests the failure response with {@link UnknownKeyOrNamespaceException} as cause_on queries for non-existing keys.;@Test_	public void testQueryUnknownKey() throws Exception {_		KvStateRegistry registry = new KvStateRegistry()__		AtomicKvStateRequestStats stats = new AtomicKvStateRequestStats()___		MessageSerializer<KvStateInternalRequest, KvStateResponse> serializer =_				new MessageSerializer<>(new KvStateInternalRequest.KvStateInternalRequestDeserializer(), new KvStateResponse.KvStateResponseDeserializer())___		KvStateServerHandler handler = new KvStateServerHandler(testServer, registry, serializer, stats)__		EmbeddedChannel channel = new EmbeddedChannel(getFrameDecoder(), handler)___		int numKeyGroups = 1__		AbstractStateBackend abstractBackend = new MemoryStateBackend()__		DummyEnvironment dummyEnv = new DummyEnvironment("test", 1, 0)__		dummyEnv.setKvStateRegistry(registry)__		KeyedStateBackend<Integer> backend = createKeyedStateBackend(registry, numKeyGroups, abstractBackend, dummyEnv)___		final TestRegistryListener registryListener = new TestRegistryListener()__		registry.registerListener(dummyEnv.getJobID(), registryListener)___		_		ValueStateDescriptor<Integer> desc = new ValueStateDescriptor<>("any", IntSerializer.INSTANCE)__		desc.setQueryable("vanilla")___		backend.getPartitionedState(VoidNamespace.INSTANCE, VoidNamespaceSerializer.INSTANCE, desc)___		byte[] serializedKeyAndNamespace = KvStateSerializer.serializeKeyAndNamespace(_				1238283,_				IntSerializer.INSTANCE,_				VoidNamespace.INSTANCE,_				VoidNamespaceSerializer.INSTANCE)___		long requestId = Integer.MAX_VALUE + 22982L___		assertTrue(registryListener.registrationName.equals("vanilla"))___		KvStateInternalRequest request = new KvStateInternalRequest(registryListener.kvStateId, serializedKeyAndNamespace)__		ByteBuf serRequest = MessageSerializer.serializeRequest(channel.alloc(), requestId, request)___		_		channel.writeInbound(serRequest)___		ByteBuf buf = (ByteBuf) readInboundBlocking(channel)__		buf.skipBytes(4)_ __		_		assertEquals(MessageType.REQUEST_FAILURE, MessageSerializer.deserializeHeader(buf))__		RequestFailure response = MessageSerializer.deserializeRequestFailure(buf)___		assertEquals(requestId, response.getRequestId())___		assertTrue("Did not respond with expected failure cause", response.getCause() instanceof UnknownKeyOrNamespaceException)___		assertEquals(1L, stats.getNumRequests())__		assertEquals(1L, stats.getNumFailed())__	};tests,the,failure,response,with,link,unknown,key,or,namespace,exception,as,cause,on,queries,for,non,existing,keys;test,public,void,test,query,unknown,key,throws,exception,kv,state,registry,registry,new,kv,state,registry,atomic,kv,state,request,stats,stats,new,atomic,kv,state,request,stats,message,serializer,kv,state,internal,request,kv,state,response,serializer,new,message,serializer,new,kv,state,internal,request,kv,state,internal,request,deserializer,new,kv,state,response,kv,state,response,deserializer,kv,state,server,handler,handler,new,kv,state,server,handler,test,server,registry,serializer,stats,embedded,channel,channel,new,embedded,channel,get,frame,decoder,handler,int,num,key,groups,1,abstract,state,backend,abstract,backend,new,memory,state,backend,dummy,environment,dummy,env,new,dummy,environment,test,1,0,dummy,env,set,kv,state,registry,registry,keyed,state,backend,integer,backend,create,keyed,state,backend,registry,num,key,groups,abstract,backend,dummy,env,final,test,registry,listener,registry,listener,new,test,registry,listener,registry,register,listener,dummy,env,get,job,id,registry,listener,value,state,descriptor,integer,desc,new,value,state,descriptor,any,int,serializer,instance,desc,set,queryable,vanilla,backend,get,partitioned,state,void,namespace,instance,void,namespace,serializer,instance,desc,byte,serialized,key,and,namespace,kv,state,serializer,serialize,key,and,namespace,1238283,int,serializer,instance,void,namespace,instance,void,namespace,serializer,instance,long,request,id,integer,22982l,assert,true,registry,listener,registration,name,equals,vanilla,kv,state,internal,request,request,new,kv,state,internal,request,registry,listener,kv,state,id,serialized,key,and,namespace,byte,buf,ser,request,message,serializer,serialize,request,channel,alloc,request,id,request,channel,write,inbound,ser,request,byte,buf,buf,byte,buf,read,inbound,blocking,channel,buf,skip,bytes,4,assert,equals,message,type,message,serializer,deserialize,header,buf,request,failure,response,message,serializer,deserialize,request,failure,buf,assert,equals,request,id,response,get,request,id,assert,true,did,not,respond,with,expected,failure,cause,response,get,cause,instanceof,unknown,key,or,namespace,exception,assert,equals,1l,stats,get,num,requests,assert,equals,1l,stats,get,num,failed
KvStateServerHandlerTest -> private Object readInboundBlocking(EmbeddedChannel channel) throws InterruptedException, TimeoutException;1509037054;Queries the embedded channel for data.;private Object readInboundBlocking(EmbeddedChannel channel) throws InterruptedException, TimeoutException {_		final long sleepMillis = 50L___		long sleptMillis = 0L___		Object msg = null__		while (sleptMillis < READ_TIMEOUT_MILLIS &&_				(msg = channel.readOutbound()) == null) {__			Thread.sleep(sleepMillis)__			sleptMillis += sleepMillis__		}__		if (msg == null) {_			throw new TimeoutException()__		} else {_			return msg__		}_	};queries,the,embedded,channel,for,data;private,object,read,inbound,blocking,embedded,channel,channel,throws,interrupted,exception,timeout,exception,final,long,sleep,millis,50l,long,slept,millis,0l,object,msg,null,while,slept,millis,msg,channel,read,outbound,null,thread,sleep,sleep,millis,slept,millis,sleep,millis,if,msg,null,throw,new,timeout,exception,else,return,msg
KvStateServerHandlerTest -> private Object readInboundBlocking(EmbeddedChannel channel) throws InterruptedException, TimeoutException;1510911969;Queries the embedded channel for data.;private Object readInboundBlocking(EmbeddedChannel channel) throws InterruptedException, TimeoutException {_		final long sleepMillis = 50L___		long sleptMillis = 0L___		Object msg = null__		while (sleptMillis < READ_TIMEOUT_MILLIS &&_				(msg = channel.readOutbound()) == null) {__			Thread.sleep(sleepMillis)__			sleptMillis += sleepMillis__		}__		if (msg == null) {_			throw new TimeoutException()__		} else {_			return msg__		}_	};queries,the,embedded,channel,for,data;private,object,read,inbound,blocking,embedded,channel,channel,throws,interrupted,exception,timeout,exception,final,long,sleep,millis,50l,long,slept,millis,0l,object,msg,null,while,slept,millis,msg,channel,read,outbound,null,thread,sleep,sleep,millis,slept,millis,sleep,millis,if,msg,null,throw,new,timeout,exception,else,return,msg
KvStateServerHandlerTest -> private Object readInboundBlocking(EmbeddedChannel channel) throws InterruptedException, TimeoutException;1517914184;Queries the embedded channel for data.;private Object readInboundBlocking(EmbeddedChannel channel) throws InterruptedException, TimeoutException {_		final long sleepMillis = 50L___		long sleptMillis = 0L___		Object msg = null__		while (sleptMillis < READ_TIMEOUT_MILLIS &&_				(msg = channel.readOutbound()) == null) {__			Thread.sleep(sleepMillis)__			sleptMillis += sleepMillis__		}__		if (msg == null) {_			throw new TimeoutException()__		} else {_			return msg__		}_	};queries,the,embedded,channel,for,data;private,object,read,inbound,blocking,embedded,channel,channel,throws,interrupted,exception,timeout,exception,final,long,sleep,millis,50l,long,slept,millis,0l,object,msg,null,while,slept,millis,msg,channel,read,outbound,null,thread,sleep,sleep,millis,slept,millis,sleep,millis,if,msg,null,throw,new,timeout,exception,else,return,msg
KvStateServerHandlerTest -> private Object readInboundBlocking(EmbeddedChannel channel) throws InterruptedException, TimeoutException;1522337739;Queries the embedded channel for data.;private Object readInboundBlocking(EmbeddedChannel channel) throws InterruptedException, TimeoutException {_		final long sleepMillis = 50L___		long sleptMillis = 0L___		Object msg = null__		while (sleptMillis < READ_TIMEOUT_MILLIS &&_				(msg = channel.readOutbound()) == null) {__			Thread.sleep(sleepMillis)__			sleptMillis += sleepMillis__		}__		if (msg == null) {_			throw new TimeoutException()__		} else {_			return msg__		}_	};queries,the,embedded,channel,for,data;private,object,read,inbound,blocking,embedded,channel,channel,throws,interrupted,exception,timeout,exception,final,long,sleep,millis,50l,long,slept,millis,0l,object,msg,null,while,slept,millis,msg,channel,read,outbound,null,thread,sleep,sleep,millis,slept,millis,sleep,millis,if,msg,null,throw,new,timeout,exception,else,return,msg
KvStateServerHandlerTest -> private Object readInboundBlocking(EmbeddedChannel channel) throws InterruptedException, TimeoutException;1531419503;Queries the embedded channel for data.;private Object readInboundBlocking(EmbeddedChannel channel) throws InterruptedException, TimeoutException {_		final long sleepMillis = 50L___		long sleptMillis = 0L___		Object msg = null__		while (sleptMillis < READ_TIMEOUT_MILLIS &&_				(msg = channel.readOutbound()) == null) {__			Thread.sleep(sleepMillis)__			sleptMillis += sleepMillis__		}__		if (msg == null) {_			throw new TimeoutException()__		} else {_			return msg__		}_	};queries,the,embedded,channel,for,data;private,object,read,inbound,blocking,embedded,channel,channel,throws,interrupted,exception,timeout,exception,final,long,sleep,millis,50l,long,slept,millis,0l,object,msg,null,while,slept,millis,msg,channel,read,outbound,null,thread,sleep,sleep,millis,slept,millis,sleep,millis,if,msg,null,throw,new,timeout,exception,else,return,msg
KvStateServerHandlerTest -> private Object readInboundBlocking(EmbeddedChannel channel) throws InterruptedException, TimeoutException;1539939663;Queries the embedded channel for data.;private Object readInboundBlocking(EmbeddedChannel channel) throws InterruptedException, TimeoutException {_		final long sleepMillis = 50L___		long sleptMillis = 0L___		Object msg = null__		while (sleptMillis < READ_TIMEOUT_MILLIS &&_				(msg = channel.readOutbound()) == null) {__			Thread.sleep(sleepMillis)__			sleptMillis += sleepMillis__		}__		if (msg == null) {_			throw new TimeoutException()__		} else {_			return msg__		}_	};queries,the,embedded,channel,for,data;private,object,read,inbound,blocking,embedded,channel,channel,throws,interrupted,exception,timeout,exception,final,long,sleep,millis,50l,long,slept,millis,0l,object,msg,null,while,slept,millis,msg,channel,read,outbound,null,thread,sleep,sleep,millis,slept,millis,sleep,millis,if,msg,null,throw,new,timeout,exception,else,return,msg
KvStateServerHandlerTest -> private Object readInboundBlocking(EmbeddedChannel channel) throws InterruptedException, TimeoutException;1548755874;Queries the embedded channel for data.;private Object readInboundBlocking(EmbeddedChannel channel) throws InterruptedException, TimeoutException {_		final long sleepMillis = 50L___		long sleptMillis = 0L___		Object msg = null__		while (sleptMillis < READ_TIMEOUT_MILLIS &&_				(msg = channel.readOutbound()) == null) {__			Thread.sleep(sleepMillis)__			sleptMillis += sleepMillis__		}__		if (msg == null) {_			throw new TimeoutException()__		} else {_			return msg__		}_	};queries,the,embedded,channel,for,data;private,object,read,inbound,blocking,embedded,channel,channel,throws,interrupted,exception,timeout,exception,final,long,sleep,millis,50l,long,slept,millis,0l,object,msg,null,while,slept,millis,msg,channel,read,outbound,null,thread,sleep,sleep,millis,slept,millis,sleep,millis,if,msg,null,throw,new,timeout,exception,else,return,msg
KvStateServerHandlerTest -> private Object readInboundBlocking(EmbeddedChannel channel) throws InterruptedException, TimeoutException;1550863001;Queries the embedded channel for data.;private Object readInboundBlocking(EmbeddedChannel channel) throws InterruptedException, TimeoutException {_		final long sleepMillis = 50L___		long sleptMillis = 0L___		Object msg = null__		while (sleptMillis < READ_TIMEOUT_MILLIS &&_				(msg = channel.readOutbound()) == null) {__			Thread.sleep(sleepMillis)__			sleptMillis += sleepMillis__		}__		if (msg == null) {_			throw new TimeoutException()__		} else {_			return msg__		}_	};queries,the,embedded,channel,for,data;private,object,read,inbound,blocking,embedded,channel,channel,throws,interrupted,exception,timeout,exception,final,long,sleep,millis,50l,long,slept,millis,0l,object,msg,null,while,slept,millis,msg,channel,read,outbound,null,thread,sleep,sleep,millis,slept,millis,sleep,millis,if,msg,null,throw,new,timeout,exception,else,return,msg
