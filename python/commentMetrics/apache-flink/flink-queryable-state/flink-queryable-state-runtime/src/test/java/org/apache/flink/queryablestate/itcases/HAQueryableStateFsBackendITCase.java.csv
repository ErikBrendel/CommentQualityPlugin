commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected StateBackend createStateBackend() throws Exception {     return new FsStateBackend(temporaryFolder.newFolder().toURI().toString()). }
false;public,static;0;19;;@BeforeClass public static void setup() throws Exception {     zkServer = new TestingServer().     // we have to manage this manually because we have to create the ZooKeeper server     // ahead of this     miniClusterResource = new MiniClusterWithClientResource(new MiniClusterResourceConfiguration.Builder().setConfiguration(getConfig()).setNumberTaskManagers(NUM_TMS).setNumberSlotsPerTaskManager(NUM_SLOTS_PER_TM).build()).     miniClusterResource.before().     client = new QueryableStateClient("localhost", QS_PROXY_PORT_RANGE_START).     clusterClient = miniClusterResource.getClusterClient(). }
false;public,static;0;9;;@AfterClass public static void tearDown() throws Exception {     miniClusterResource.after().     client.shutdownAndWait().     zkServer.stop().     zkServer.close(). }
false;private,static;0;26;;private static Configuration getConfig() throws Exception {     Configuration config = new Configuration().     config.setBoolean(QueryableStateOptions.ENABLE_QUERYABLE_STATE_PROXY_SERVER, true).     config.setString(TaskManagerOptions.MANAGED_MEMORY_SIZE, "4m").     config.setInteger(ConfigConstants.LOCAL_NUMBER_JOB_MANAGER, NUM_JMS).     config.setInteger(ConfigConstants.LOCAL_NUMBER_TASK_MANAGER, NUM_TMS).     config.setInteger(TaskManagerOptions.NUM_TASK_SLOTS, NUM_SLOTS_PER_TM).     config.setInteger(QueryableStateOptions.CLIENT_NETWORK_THREADS, 2).     config.setInteger(QueryableStateOptions.PROXY_NETWORK_THREADS, 2).     config.setInteger(QueryableStateOptions.SERVER_NETWORK_THREADS, 2).     config.setString(QueryableStateOptions.PROXY_PORT_RANGE, QS_PROXY_PORT_RANGE_START + "-" + (QS_PROXY_PORT_RANGE_START + NUM_TMS)).     config.setString(QueryableStateOptions.SERVER_PORT_RANGE, QS_SERVER_PORT_RANGE_START + "-" + (QS_SERVER_PORT_RANGE_START + NUM_TMS)).     config.setBoolean(WebOptions.SUBMIT_ENABLE, false).     config.setString(HighAvailabilityOptions.HA_STORAGE_PATH, temporaryFolder.newFolder().toString()).     config.setString(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM, zkServer.getConnectString()).     config.setString(HighAvailabilityOptions.HA_MODE, "zookeeper").     return config. }
