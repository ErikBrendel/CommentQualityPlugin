commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Before public void setup() {     kvStateClientProxy = new KvStateClientProxyImpl(InetAddress.getLoopbackAddress(), Collections.singleton(0).iterator(), 1, 1, new DisabledKvStateRequestStats()). }
false;public;0;4;;@After public void shutdown() {     kvStateClientProxy.shutdown(). }
true;public;0;17;/**  * Tests that we can set and retrieve the {@link KvStateLocationOracle}.  */ ;/**  * Tests that we can set and retrieve the {@link KvStateLocationOracle}.  */ @Test public void testKvStateLocationOracle() {     final JobID jobId1 = new JobID().     final TestingKvStateLocationOracle kvStateLocationOracle1 = new TestingKvStateLocationOracle().     kvStateClientProxy.updateKvStateLocationOracle(jobId1, kvStateLocationOracle1).     final JobID jobId2 = new JobID().     final TestingKvStateLocationOracle kvStateLocationOracle2 = new TestingKvStateLocationOracle().     kvStateClientProxy.updateKvStateLocationOracle(jobId2, kvStateLocationOracle2).     assertThat(kvStateClientProxy.getKvStateLocationOracle(new JobID()), nullValue()).     assertThat(kvStateClientProxy.getKvStateLocationOracle(jobId1), equalTo(kvStateLocationOracle1)).     assertThat(kvStateClientProxy.getKvStateLocationOracle(jobId2), equalTo(kvStateLocationOracle2)).     kvStateClientProxy.updateKvStateLocationOracle(jobId1, null).     assertThat(kvStateClientProxy.getKvStateLocationOracle(jobId1), nullValue()). }
true;public;0;9;/**  * Tests that {@link KvStateLocationOracle} registered under {@link HighAvailabilityServices#DEFAULT_JOB_ID}  * will be used for all requests.  */ ;/**  * Tests that {@link KvStateLocationOracle} registered under {@link HighAvailabilityServices#DEFAULT_JOB_ID}  * will be used for all requests.  */ @Test public void testLegacyCodePathPreference() {     final TestingKvStateLocationOracle kvStateLocationOracle = new TestingKvStateLocationOracle().     kvStateClientProxy.updateKvStateLocationOracle(HighAvailabilityServices.DEFAULT_JOB_ID, kvStateLocationOracle).     final JobID jobId = new JobID().     kvStateClientProxy.updateKvStateLocationOracle(jobId, new TestingKvStateLocationOracle()).     assertThat(kvStateClientProxy.getKvStateLocationOracle(jobId), equalTo(kvStateLocationOracle)). }
false;public;2;4;;@Override public CompletableFuture<KvStateLocation> requestKvStateLocation(JobID jobId, String registrationName) {     return null. }
