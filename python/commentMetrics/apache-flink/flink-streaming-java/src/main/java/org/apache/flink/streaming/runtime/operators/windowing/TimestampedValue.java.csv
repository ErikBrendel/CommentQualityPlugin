commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * @return The value wrapped in this {@link TimestampedValue}.  */ ;/**  * @return The value wrapped in this {@link TimestampedValue}.  */ public T getValue() {     return value. }
true;public;0;9;/**  * @return The timestamp associated with this stream value in milliseconds.  */ ;/**  * @return The timestamp associated with this stream value in milliseconds.  */ public long getTimestamp() {     if (hasTimestamp) {         return timestamp.     } else {         throw new IllegalStateException("Record has no timestamp. Is the time characteristic set to 'ProcessingTime', or " + "did you forget to call 'DataStream.assignTimestampsAndWatermarks(...)'?").     } }
true;public;0;3;/**  * Checks whether this record has a timestamp.  *  * @return True if the record has a timestamp, false if not.  */ ;/**  * Checks whether this record has a timestamp.  *  * @return True if the record has a timestamp, false if not.  */ public boolean hasTimestamp() {     return hasTimestamp. }
true;public;0;7;/**  * Creates a {@link StreamRecord} from this TimestampedValue.  */ ;/**  * Creates a {@link StreamRecord} from this TimestampedValue.  */ public StreamRecord<T> getStreamRecord() {     StreamRecord<T> streamRecord = new StreamRecord<>(value).     if (hasTimestamp) {         streamRecord.setTimestamp(timestamp).     }     return streamRecord. }
true;public,static;1;7;/**  * Creates a TimestampedValue from given {@link StreamRecord}.  *  * @param streamRecord The StreamRecord object from which TimestampedValue is to be created.  */ ;/**  * Creates a TimestampedValue from given {@link StreamRecord}.  *  * @param streamRecord The StreamRecord object from which TimestampedValue is to be created.  */ public static <T> TimestampedValue<T> from(StreamRecord<T> streamRecord) {     if (streamRecord.hasTimestamp()) {         return new TimestampedValue<>(streamRecord.getValue(), streamRecord.getTimestamp()).     } else {         return new TimestampedValue<>(streamRecord.getValue()).     } }
