commented;modifiers;parameterAmount;loc;comment;code
true;;2;2;/**  * Asks this implementation if it wants to emit a watermark. This method is called right after  * the {@link #extractTimestamp(Object, long)} method.  *  * <p>The returned watermark will be emitted only if it is non-null and its timestamp  * is larger than that of the previously emitted watermark (to preserve the contract of  * ascending watermarks). If a null value is returned, or the timestamp of the returned  * watermark is smaller than that of the last emitted one, then no new watermark will  * be generated.  *  * <p>For an example how to use this method, see the documentation of  * {@link AssignerWithPunctuatedWatermarks this class}.  *  * @return {@code Null}, if no watermark should be emitted, or the next watermark to emit.  */ ;/**  * Asks this implementation if it wants to emit a watermark. This method is called right after  * the {@link #extractTimestamp(Object, long)} method.  *  * <p>The returned watermark will be emitted only if it is non-null and its timestamp  * is larger than that of the previously emitted watermark (to preserve the contract of  * ascending watermarks). If a null value is returned, or the timestamp of the returned  * watermark is smaller than that of the last emitted one, then no new watermark will  * be generated.  *  * <p>For an example how to use this method, see the documentation of  * {@link AssignerWithPunctuatedWatermarks this class}.  *  * @return {@code Null}, if no watermark should be emitted, or the next watermark to emit.  */ @Nullable Watermark checkAndGetNextWatermark(T lastElement, long extractedTimestamp).
