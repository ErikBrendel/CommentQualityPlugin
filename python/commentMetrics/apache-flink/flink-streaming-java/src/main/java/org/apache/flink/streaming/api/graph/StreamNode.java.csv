commented;modifiers;parameterAmount;loc;comment;code
false;public;1;7;;public void addInEdge(StreamEdge inEdge) {     if (inEdge.getTargetId() != getId()) {         throw new IllegalArgumentException("Destination id doesn't match the StreamNode id").     } else {         inEdges.add(inEdge).     } }
false;public;1;7;;public void addOutEdge(StreamEdge outEdge) {     if (outEdge.getSourceId() != getId()) {         throw new IllegalArgumentException("Source id doesn't match the StreamNode id").     } else {         outEdges.add(outEdge).     } }
false;public;0;3;;public List<StreamEdge> getOutEdges() {     return outEdges. }
false;public;0;3;;public List<StreamEdge> getInEdges() {     return inEdges. }
false;public;0;9;;public List<Integer> getOutEdgeIndices() {     List<Integer> outEdgeIndices = new ArrayList<Integer>().     for (StreamEdge edge : outEdges) {         outEdgeIndices.add(edge.getTargetId()).     }     return outEdgeIndices. }
false;public;0;9;;public List<Integer> getInEdgeIndices() {     List<Integer> inEdgeIndices = new ArrayList<Integer>().     for (StreamEdge edge : inEdges) {         inEdgeIndices.add(edge.getSourceId()).     }     return inEdgeIndices. }
false;public;0;3;;public int getId() {     return id. }
false;public;0;7;;public int getParallelism() {     if (parallelism == ExecutionConfig.PARALLELISM_DEFAULT) {         return env.getParallelism().     } else {         return parallelism.     } }
false;public;1;3;;public void setParallelism(Integer parallelism) {     this.parallelism = parallelism. }
true;;0;3;/**  * Get the maximum parallelism for this stream node.  *  * @return Maximum parallelism  */ ;/**  * Get the maximum parallelism for this stream node.  *  * @return Maximum parallelism  */ int getMaxParallelism() {     return maxParallelism. }
true;;1;3;/**  * Set the maximum parallelism for this stream node.  *  * @param maxParallelism Maximum parallelism to be set  */ ;/**  * Set the maximum parallelism for this stream node.  *  * @param maxParallelism Maximum parallelism to be set  */ void setMaxParallelism(int maxParallelism) {     this.maxParallelism = maxParallelism. }
false;public;0;3;;public ResourceSpec getMinResources() {     return minResources. }
false;public;0;3;;public ResourceSpec getPreferredResources() {     return preferredResources. }
false;public;2;4;;public void setResources(ResourceSpec minResources, ResourceSpec preferredResources) {     this.minResources = minResources.     this.preferredResources = preferredResources. }
false;public;0;3;;public Long getBufferTimeout() {     return bufferTimeout != null ? bufferTimeout : env.getBufferTimeout(). }
false;public;1;3;;public void setBufferTimeout(Long bufferTimeout) {     this.bufferTimeout = bufferTimeout. }
false;public;0;3;;public StreamOperator<?> getOperator() {     return operator. }
false;public;1;3;;public void setOperator(StreamOperator<?> operator) {     this.operator = operator. }
false;public;0;3;;public String getOperatorName() {     return operatorName. }
false;public;0;3;;public List<OutputSelector<?>> getOutputSelectors() {     return outputSelectors. }
false;public;1;3;;public void addOutputSelector(OutputSelector<?> outputSelector) {     this.outputSelectors.add(outputSelector). }
false;public;0;3;;public TypeSerializer<?> getTypeSerializerIn1() {     return typeSerializerIn1. }
false;public;1;3;;public void setSerializerIn1(TypeSerializer<?> typeSerializerIn1) {     this.typeSerializerIn1 = typeSerializerIn1. }
false;public;0;3;;public TypeSerializer<?> getTypeSerializerIn2() {     return typeSerializerIn2. }
false;public;1;3;;public void setSerializerIn2(TypeSerializer<?> typeSerializerIn2) {     this.typeSerializerIn2 = typeSerializerIn2. }
false;public;0;3;;public TypeSerializer<?> getTypeSerializerOut() {     return typeSerializerOut. }
false;public;1;3;;public void setSerializerOut(TypeSerializer<?> typeSerializerOut) {     this.typeSerializerOut = typeSerializerOut. }
false;public;0;3;;public Class<? extends AbstractInvokable> getJobVertexClass() {     return jobVertexClass. }
false;public;0;3;;public InputFormat<?, ?> getInputFormat() {     return inputFormat. }
false;public;1;3;;public void setInputFormat(InputFormat<?, ?> inputFormat) {     this.inputFormat = inputFormat. }
false;public;1;3;;public void setSlotSharingGroup(String slotSharingGroup) {     this.slotSharingGroup = slotSharingGroup. }
false;public;0;3;;public String getSlotSharingGroup() {     return slotSharingGroup. }
false;public;1;3;;public void setCoLocationGroup(@Nullable String coLocationGroup) {     this.coLocationGroup = coLocationGroup. }
false;public;0;3;;@Nullable public String getCoLocationGroup() {     return coLocationGroup. }
false;public;1;4;;public boolean isSameSlotSharingGroup(StreamNode downstreamVertex) {     return (slotSharingGroup == null && downstreamVertex.slotSharingGroup == null) || (slotSharingGroup != null && slotSharingGroup.equals(downstreamVertex.slotSharingGroup)). }
false;public;0;4;;@Override public String toString() {     return operatorName + "-" + id. }
false;public;0;3;;public KeySelector<?, ?> getStatePartitioner1() {     return statePartitioner1. }
false;public;0;3;;public KeySelector<?, ?> getStatePartitioner2() {     return statePartitioner2. }
false;public;1;3;;public void setStatePartitioner1(KeySelector<?, ?> statePartitioner) {     this.statePartitioner1 = statePartitioner. }
false;public;1;3;;public void setStatePartitioner2(KeySelector<?, ?> statePartitioner) {     this.statePartitioner2 = statePartitioner. }
false;public;0;3;;public TypeSerializer<?> getStateKeySerializer() {     return stateKeySerializer. }
false;public;1;3;;public void setStateKeySerializer(TypeSerializer<?> stateKeySerializer) {     this.stateKeySerializer = stateKeySerializer. }
false;public;0;3;;public String getTransformationUID() {     return transformationUID. }
false;;1;3;;void setTransformationUID(String transformationId) {     this.transformationUID = transformationId. }
false;public;0;3;;public String getUserHash() {     return userHash. }
false;public;1;3;;public void setUserHash(String userHash) {     this.userHash = userHash. }
false;public;1;12;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     StreamNode that = (StreamNode) o.     return id == that.id. }
false;public;0;4;;@Override public int hashCode() {     return id. }
