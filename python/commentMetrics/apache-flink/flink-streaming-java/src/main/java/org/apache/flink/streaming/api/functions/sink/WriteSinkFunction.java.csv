# id;timestamp;commentText;codeText;commentWords;codeWords
WriteSinkFunction -> @Override 	public void invoke(IN tuple);1445418103;Implementation of the invoke method of the SinkFunction class. Collects_the incoming tuples in tupleList and appends the list to the end of the_target file if updateCondition() is true or the current tuple is the_endTuple.;@Override_	public void invoke(IN tuple) {__		tupleList.add(tuple)__		if (updateCondition()) {_			format.write(path, tupleList)__			resetParameters()__		}__	};implementation,of,the,invoke,method,of,the,sink,function,class,collects,the,incoming,tuples,in,tuple,list,and,appends,the,list,to,the,end,of,the,target,file,if,update,condition,is,true,or,the,current,tuple,is,the,end,tuple;override,public,void,invoke,in,tuple,tuple,list,add,tuple,if,update,condition,format,write,path,tuple,list,reset,parameters
WriteSinkFunction -> @Override 	public void invoke(IN tuple);1455486690;Implementation of the invoke method of the SinkFunction class. Collects_the incoming tuples in tupleList and appends the list to the end of the_target file if updateCondition() is true or the current tuple is the_endTuple.;@Override_	public void invoke(IN tuple) {__		tupleList.add(tuple)__		if (updateCondition()) {_			format.write(path, tupleList)__			resetParameters()__		}__	};implementation,of,the,invoke,method,of,the,sink,function,class,collects,the,incoming,tuples,in,tuple,list,and,appends,the,list,to,the,end,of,the,target,file,if,update,condition,is,true,or,the,current,tuple,is,the,end,tuple;override,public,void,invoke,in,tuple,tuple,list,add,tuple,if,update,condition,format,write,path,tuple,list,reset,parameters
WriteSinkFunction -> @Override 	public void invoke(IN tuple);1493195810;Implementation of the invoke method of the SinkFunction class. Collects_the incoming tuples in tupleList and appends the list to the end of the_target file if updateCondition() is true or the current tuple is the_endTuple.;@Override_	public void invoke(IN tuple) {__		tupleList.add(tuple)__		if (updateCondition()) {_			format.write(path, tupleList)__			resetParameters()__		}__	};implementation,of,the,invoke,method,of,the,sink,function,class,collects,the,incoming,tuples,in,tuple,list,and,appends,the,list,to,the,end,of,the,target,file,if,update,condition,is,true,or,the,current,tuple,is,the,end,tuple;override,public,void,invoke,in,tuple,tuple,list,add,tuple,if,update,condition,format,write,path,tuple,list,reset,parameters
WriteSinkFunction -> @Override 	public void invoke(IN tuple);1493195810;Implementation of the invoke method of the SinkFunction class. Collects_the incoming tuples in tupleList and appends the list to the end of the_target file if updateCondition() is true or the current tuple is the_endTuple.;@Override_	public void invoke(IN tuple) {__		tupleList.add(tuple)__		if (updateCondition()) {_			format.write(path, tupleList)__			resetParameters()__		}__	};implementation,of,the,invoke,method,of,the,sink,function,class,collects,the,incoming,tuples,in,tuple,list,and,appends,the,list,to,the,end,of,the,target,file,if,update,condition,is,true,or,the,current,tuple,is,the,end,tuple;override,public,void,invoke,in,tuple,tuple,list,add,tuple,if,update,condition,format,write,path,tuple,list,reset,parameters
WriteSinkFunction -> @Override 	public void invoke(IN tuple);1495484544;Implementation of the invoke method of the SinkFunction class. Collects_the incoming tuples in tupleList and appends the list to the end of the_target file if updateCondition() is true or the current tuple is the_endTuple.;@Override_	public void invoke(IN tuple) {__		tupleList.add(tuple)__		if (updateCondition()) {_			format.write(path, tupleList)__			resetParameters()__		}__	};implementation,of,the,invoke,method,of,the,sink,function,class,collects,the,incoming,tuples,in,tuple,list,and,appends,the,list,to,the,end,of,the,target,file,if,update,condition,is,true,or,the,current,tuple,is,the,end,tuple;override,public,void,invoke,in,tuple,tuple,list,add,tuple,if,update,condition,format,write,path,tuple,list,reset,parameters
WriteSinkFunction -> @Override 	public void invoke(IN tuple);1524054991;Implementation of the invoke method of the SinkFunction class. Collects_the incoming tuples in tupleList and appends the list to the end of the_target file if updateCondition() is true or the current tuple is the_endTuple.;@Override_	public void invoke(IN tuple) {__		tupleList.add(tuple)__		if (updateCondition()) {_			format.write(path, tupleList)__			resetParameters()__		}__	};implementation,of,the,invoke,method,of,the,sink,function,class,collects,the,incoming,tuples,in,tuple,list,and,appends,the,list,to,the,end,of,the,target,file,if,update,condition,is,true,or,the,current,tuple,is,the,end,tuple;override,public,void,invoke,in,tuple,tuple,list,add,tuple,if,update,condition,format,write,path,tuple,list,reset,parameters
WriteSinkFunction -> protected void cleanFile(String path);1445418103;Creates target file if it does not exist, cleans it if it exists.__@param path_is the path to the location where the tuples are written;protected void cleanFile(String path) {_		try {_			PrintWriter writer__			writer = new PrintWriter(path)__			writer.print("")__			writer.close()__		} catch (FileNotFoundException e) {_			throw new RuntimeException("An error occurred while cleaning the file: " + e.getMessage(), e)__		}_	};creates,target,file,if,it,does,not,exist,cleans,it,if,it,exists,param,path,is,the,path,to,the,location,where,the,tuples,are,written;protected,void,clean,file,string,path,try,print,writer,writer,writer,new,print,writer,path,writer,print,writer,close,catch,file,not,found,exception,e,throw,new,runtime,exception,an,error,occurred,while,cleaning,the,file,e,get,message,e
WriteSinkFunction -> protected void cleanFile(String path);1455486690;Creates target file if it does not exist, cleans it if it exists.__@param path_is the path to the location where the tuples are written;protected void cleanFile(String path) {_		try {_			PrintWriter writer__			writer = new PrintWriter(path)__			writer.print("")__			writer.close()__		} catch (FileNotFoundException e) {_			throw new RuntimeException("An error occurred while cleaning the file: " + e.getMessage(), e)__		}_	};creates,target,file,if,it,does,not,exist,cleans,it,if,it,exists,param,path,is,the,path,to,the,location,where,the,tuples,are,written;protected,void,clean,file,string,path,try,print,writer,writer,writer,new,print,writer,path,writer,print,writer,close,catch,file,not,found,exception,e,throw,new,runtime,exception,an,error,occurred,while,cleaning,the,file,e,get,message,e
WriteSinkFunction -> protected void cleanFile(String path);1493195810;Creates target file if it does not exist, cleans it if it exists.__@param path_is the path to the location where the tuples are written;protected void cleanFile(String path) {_		try {_			PrintWriter writer__			writer = new PrintWriter(path)__			writer.print("")__			writer.close()__		} catch (FileNotFoundException e) {_			throw new RuntimeException("An error occurred while cleaning the file: " + e.getMessage(), e)__		}_	};creates,target,file,if,it,does,not,exist,cleans,it,if,it,exists,param,path,is,the,path,to,the,location,where,the,tuples,are,written;protected,void,clean,file,string,path,try,print,writer,writer,writer,new,print,writer,path,writer,print,writer,close,catch,file,not,found,exception,e,throw,new,runtime,exception,an,error,occurred,while,cleaning,the,file,e,get,message,e
WriteSinkFunction -> protected void cleanFile(String path);1493195810;Creates target file if it does not exist, cleans it if it exists.__@param path_is the path to the location where the tuples are written;protected void cleanFile(String path) {_		try {_			PrintWriter writer__			writer = new PrintWriter(path)__			writer.print("")__			writer.close()__		} catch (FileNotFoundException e) {_			throw new RuntimeException("An error occurred while cleaning the file: " + e.getMessage(), e)__		}_	};creates,target,file,if,it,does,not,exist,cleans,it,if,it,exists,param,path,is,the,path,to,the,location,where,the,tuples,are,written;protected,void,clean,file,string,path,try,print,writer,writer,writer,new,print,writer,path,writer,print,writer,close,catch,file,not,found,exception,e,throw,new,runtime,exception,an,error,occurred,while,cleaning,the,file,e,get,message,e
WriteSinkFunction -> protected void cleanFile(String path);1495484544;Creates target file if it does not exist, cleans it if it exists.__@param path_is the path to the location where the tuples are written;protected void cleanFile(String path) {_		try {_			PrintWriter writer__			writer = new PrintWriter(path)__			writer.print("")__			writer.close()__		} catch (FileNotFoundException e) {_			throw new RuntimeException("An error occurred while cleaning the file: " + e.getMessage(), e)__		}_	};creates,target,file,if,it,does,not,exist,cleans,it,if,it,exists,param,path,is,the,path,to,the,location,where,the,tuples,are,written;protected,void,clean,file,string,path,try,print,writer,writer,writer,new,print,writer,path,writer,print,writer,close,catch,file,not,found,exception,e,throw,new,runtime,exception,an,error,occurred,while,cleaning,the,file,e,get,message,e
WriteSinkFunction -> protected void cleanFile(String path);1524054991;Creates target file if it does not exist, cleans it if it exists.__@param path_is the path to the location where the tuples are written;protected void cleanFile(String path) {_		try {_			PrintWriter writer__			writer = new PrintWriter(path)__			writer.print("")__			writer.close()__		} catch (FileNotFoundException e) {_			throw new RuntimeException("An error occurred while cleaning the file: " + e.getMessage(), e)__		}_	};creates,target,file,if,it,does,not,exist,cleans,it,if,it,exists,param,path,is,the,path,to,the,location,where,the,tuples,are,written;protected,void,clean,file,string,path,try,print,writer,writer,writer,new,print,writer,path,writer,print,writer,close,catch,file,not,found,exception,e,throw,new,runtime,exception,an,error,occurred,while,cleaning,the,file,e,get,message,e
WriteSinkFunction -> protected abstract boolean updateCondition()_;1445418103;Condition for writing the contents of tupleList and clearing it.__@return value of the updating condition;protected abstract boolean updateCondition()_;condition,for,writing,the,contents,of,tuple,list,and,clearing,it,return,value,of,the,updating,condition;protected,abstract,boolean,update,condition
WriteSinkFunction -> protected abstract boolean updateCondition()_;1455486690;Condition for writing the contents of tupleList and clearing it.__@return value of the updating condition;protected abstract boolean updateCondition()_;condition,for,writing,the,contents,of,tuple,list,and,clearing,it,return,value,of,the,updating,condition;protected,abstract,boolean,update,condition
WriteSinkFunction -> protected abstract boolean updateCondition()_;1493195810;Condition for writing the contents of tupleList and clearing it.__@return value of the updating condition;protected abstract boolean updateCondition()_;condition,for,writing,the,contents,of,tuple,list,and,clearing,it,return,value,of,the,updating,condition;protected,abstract,boolean,update,condition
WriteSinkFunction -> protected abstract boolean updateCondition()_;1493195810;Condition for writing the contents of tupleList and clearing it.__@return value of the updating condition;protected abstract boolean updateCondition()_;condition,for,writing,the,contents,of,tuple,list,and,clearing,it,return,value,of,the,updating,condition;protected,abstract,boolean,update,condition
WriteSinkFunction -> protected abstract boolean updateCondition()_;1495484544;Condition for writing the contents of tupleList and clearing it.__@return value of the updating condition;protected abstract boolean updateCondition()_;condition,for,writing,the,contents,of,tuple,list,and,clearing,it,return,value,of,the,updating,condition;protected,abstract,boolean,update,condition
WriteSinkFunction -> protected abstract boolean updateCondition()_;1524054991;Condition for writing the contents of tupleList and clearing it.__@return value of the updating condition;protected abstract boolean updateCondition()_;condition,for,writing,the,contents,of,tuple,list,and,clearing,it,return,value,of,the,updating,condition;protected,abstract,boolean,update,condition
WriteSinkFunction -> protected abstract void resetParameters()_;1445418103;Statements to be executed after writing a batch goes here.;protected abstract void resetParameters()_;statements,to,be,executed,after,writing,a,batch,goes,here;protected,abstract,void,reset,parameters
WriteSinkFunction -> protected abstract void resetParameters()_;1455486690;Statements to be executed after writing a batch goes here.;protected abstract void resetParameters()_;statements,to,be,executed,after,writing,a,batch,goes,here;protected,abstract,void,reset,parameters
WriteSinkFunction -> protected abstract void resetParameters()_;1493195810;Statements to be executed after writing a batch goes here.;protected abstract void resetParameters()_;statements,to,be,executed,after,writing,a,batch,goes,here;protected,abstract,void,reset,parameters
WriteSinkFunction -> protected abstract void resetParameters()_;1493195810;Statements to be executed after writing a batch goes here.;protected abstract void resetParameters()_;statements,to,be,executed,after,writing,a,batch,goes,here;protected,abstract,void,reset,parameters
WriteSinkFunction -> protected abstract void resetParameters()_;1495484544;Statements to be executed after writing a batch goes here.;protected abstract void resetParameters()_;statements,to,be,executed,after,writing,a,batch,goes,here;protected,abstract,void,reset,parameters
WriteSinkFunction -> protected abstract void resetParameters()_;1524054991;Statements to be executed after writing a batch goes here.;protected abstract void resetParameters()_;statements,to,be,executed,after,writing,a,batch,goes,here;protected,abstract,void,reset,parameters
