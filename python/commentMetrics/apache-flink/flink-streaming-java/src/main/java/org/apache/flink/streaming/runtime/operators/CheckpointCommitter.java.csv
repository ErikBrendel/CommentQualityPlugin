# id;timestamp;commentText;codeText;commentWords;codeWords
CheckpointCommitter -> public abstract boolean isCheckpointCommitted(long checkpointID) throws Exception_;1466089084;Checked the resource whether the given checkpoint was committed completely.__@param checkpointID_@return true if the checkpoint was committed completely, false otherwise_@throws Exception;public abstract boolean isCheckpointCommitted(long checkpointID) throws Exception_;checked,the,resource,whether,the,given,checkpoint,was,committed,completely,param,checkpoint,id,return,true,if,the,checkpoint,was,committed,completely,false,otherwise,throws,exception;public,abstract,boolean,is,checkpoint,committed,long,checkpoint,id,throws,exception
CheckpointCommitter -> public abstract boolean isCheckpointCommitted(long checkpointID) throws Exception_;1471362858;Checked the resource whether the given checkpoint was committed completely.__@param checkpointID_@return true if the checkpoint was committed completely, false otherwise_@throws Exception;public abstract boolean isCheckpointCommitted(long checkpointID) throws Exception_;checked,the,resource,whether,the,given,checkpoint,was,committed,completely,param,checkpoint,id,return,true,if,the,checkpoint,was,committed,completely,false,otherwise,throws,exception;public,abstract,boolean,is,checkpoint,committed,long,checkpoint,id,throws,exception
CheckpointCommitter -> public void setOperatorSubtaskId(int id) throws Exception;1466089084;Internally used to set the operator subtask ID after instantiation.__@param id_@throws Exception;public void setOperatorSubtaskId(int id) throws Exception {_		this.subtaskId = id__	};internally,used,to,set,the,operator,subtask,id,after,instantiation,param,id,throws,exception;public,void,set,operator,subtask,id,int,id,throws,exception,this,subtask,id,id
CheckpointCommitter -> public void setOperatorSubtaskId(int id) throws Exception;1471362858;Internally used to set the operator subtask ID after instantiation.__@param id_@throws Exception;public void setOperatorSubtaskId(int id) throws Exception {_		this.subtaskId = id__	};internally,used,to,set,the,operator,subtask,id,after,instantiation,param,id,throws,exception;public,void,set,operator,subtask,id,int,id,throws,exception,this,subtask,id,id
CheckpointCommitter -> public void setOperatorId(String id) throws Exception;1466089084;Internally used to set the operator ID after instantiation.__@param id_@throws Exception;public void setOperatorId(String id) throws Exception {_		this.operatorId = id__	};internally,used,to,set,the,operator,id,after,instantiation,param,id,throws,exception;public,void,set,operator,id,string,id,throws,exception,this,operator,id,id
CheckpointCommitter -> public void setOperatorId(String id) throws Exception;1471362858;Internally used to set the operator ID after instantiation.__@param id_@throws Exception;public void setOperatorId(String id) throws Exception {_		this.operatorId = id__	};internally,used,to,set,the,operator,id,after,instantiation,param,id,throws,exception;public,void,set,operator,id,string,id,throws,exception,this,operator,id,id
CheckpointCommitter -> public void setOperatorId(String id) throws Exception;1479127284;Internally used to set the operator ID after instantiation.__@param id_@throws Exception;public void setOperatorId(String id) throws Exception {_		this.operatorId = id__	};internally,used,to,set,the,operator,id,after,instantiation,param,id,throws,exception;public,void,set,operator,id,string,id,throws,exception,this,operator,id,id
CheckpointCommitter -> public void setOperatorId(String id) throws Exception;1481196434;Internally used to set the operator ID after instantiation.__@param id_@throws Exception;public void setOperatorId(String id) throws Exception {_		this.operatorId = id__	};internally,used,to,set,the,operator,id,after,instantiation,param,id,throws,exception;public,void,set,operator,id,string,id,throws,exception,this,operator,id,id
CheckpointCommitter -> public void setOperatorId(String id) throws Exception;1493195810;Internally used to set the operator ID after instantiation.__@param id_@throws Exception;public void setOperatorId(String id) throws Exception {_		this.operatorId = id__	};internally,used,to,set,the,operator,id,after,instantiation,param,id,throws,exception;public,void,set,operator,id,string,id,throws,exception,this,operator,id,id
CheckpointCommitter -> public void setOperatorId(String id) throws Exception;1495484544;Internally used to set the operator ID after instantiation.__@param id_@throws Exception;public void setOperatorId(String id) throws Exception {_		this.operatorId = id__	};internally,used,to,set,the,operator,id,after,instantiation,param,id,throws,exception;public,void,set,operator,id,string,id,throws,exception,this,operator,id,id
CheckpointCommitter -> public abstract void commitCheckpoint(long checkpointID) throws Exception_;1466089084;Mark the given checkpoint as completed in the resource.__@param checkpointID_@throws Exception;public abstract void commitCheckpoint(long checkpointID) throws Exception_;mark,the,given,checkpoint,as,completed,in,the,resource,param,checkpoint,id,throws,exception;public,abstract,void,commit,checkpoint,long,checkpoint,id,throws,exception
CheckpointCommitter -> public abstract void commitCheckpoint(long checkpointID) throws Exception_;1471362858;Mark the given checkpoint as completed in the resource.__@param checkpointID_@throws Exception;public abstract void commitCheckpoint(long checkpointID) throws Exception_;mark,the,given,checkpoint,as,completed,in,the,resource,param,checkpoint,id,throws,exception;public,abstract,void,commit,checkpoint,long,checkpoint,id,throws,exception
CheckpointCommitter -> public abstract void open() throws Exception_;1466089084;Opens/connects to the resource, and possibly creates it beforehand.__@throws Exception;public abstract void open() throws Exception_;opens,connects,to,the,resource,and,possibly,creates,it,beforehand,throws,exception;public,abstract,void,open,throws,exception
CheckpointCommitter -> public abstract void open() throws Exception_;1471362858;Opens/connects to the resource, and possibly creates it beforehand.__@throws Exception;public abstract void open() throws Exception_;opens,connects,to,the,resource,and,possibly,creates,it,beforehand,throws,exception;public,abstract,void,open,throws,exception
CheckpointCommitter -> public abstract void open() throws Exception_;1479127284;Opens/connects to the resource, and possibly creates it beforehand.__@throws Exception;public abstract void open() throws Exception_;opens,connects,to,the,resource,and,possibly,creates,it,beforehand,throws,exception;public,abstract,void,open,throws,exception
CheckpointCommitter -> public abstract void open() throws Exception_;1481196434;Opens/connects to the resource, and possibly creates it beforehand.__@throws Exception;public abstract void open() throws Exception_;opens,connects,to,the,resource,and,possibly,creates,it,beforehand,throws,exception;public,abstract,void,open,throws,exception
CheckpointCommitter -> public abstract void open() throws Exception_;1493195810;Opens/connects to the resource, and possibly creates it beforehand.__@throws Exception;public abstract void open() throws Exception_;opens,connects,to,the,resource,and,possibly,creates,it,beforehand,throws,exception;public,abstract,void,open,throws,exception
CheckpointCommitter -> public abstract void open() throws Exception_;1495484544;Opens/connects to the resource, and possibly creates it beforehand.__@throws Exception;public abstract void open() throws Exception_;opens,connects,to,the,resource,and,possibly,creates,it,beforehand,throws,exception;public,abstract,void,open,throws,exception
CheckpointCommitter -> public abstract boolean isCheckpointCommitted(int subtaskIdx, long checkpointID) throws Exception_;1479127284;Checked the resource whether the given checkpoint was committed completely.__@param subtaskIdx the index of the subtask responsible for committing the checkpoint._@param checkpointID the id of the checkpoint we are interested in._@return true if the checkpoint was committed completely, false otherwise_@throws Exception;public abstract boolean isCheckpointCommitted(int subtaskIdx, long checkpointID) throws Exception_;checked,the,resource,whether,the,given,checkpoint,was,committed,completely,param,subtask,idx,the,index,of,the,subtask,responsible,for,committing,the,checkpoint,param,checkpoint,id,the,id,of,the,checkpoint,we,are,interested,in,return,true,if,the,checkpoint,was,committed,completely,false,otherwise,throws,exception;public,abstract,boolean,is,checkpoint,committed,int,subtask,idx,long,checkpoint,id,throws,exception
CheckpointCommitter -> public abstract boolean isCheckpointCommitted(int subtaskIdx, long checkpointID) throws Exception_;1481196434;Checked the resource whether the given checkpoint was committed completely.__@param subtaskIdx the index of the subtask responsible for committing the checkpoint._@param checkpointID the id of the checkpoint we are interested in._@return true if the checkpoint was committed completely, false otherwise_@throws Exception;public abstract boolean isCheckpointCommitted(int subtaskIdx, long checkpointID) throws Exception_;checked,the,resource,whether,the,given,checkpoint,was,committed,completely,param,subtask,idx,the,index,of,the,subtask,responsible,for,committing,the,checkpoint,param,checkpoint,id,the,id,of,the,checkpoint,we,are,interested,in,return,true,if,the,checkpoint,was,committed,completely,false,otherwise,throws,exception;public,abstract,boolean,is,checkpoint,committed,int,subtask,idx,long,checkpoint,id,throws,exception
CheckpointCommitter -> public abstract boolean isCheckpointCommitted(int subtaskIdx, long checkpointID) throws Exception_;1493195810;Checked the resource whether the given checkpoint was committed completely.__@param subtaskIdx the index of the subtask responsible for committing the checkpoint._@param checkpointID the id of the checkpoint we are interested in._@return true if the checkpoint was committed completely, false otherwise_@throws Exception;public abstract boolean isCheckpointCommitted(int subtaskIdx, long checkpointID) throws Exception_;checked,the,resource,whether,the,given,checkpoint,was,committed,completely,param,subtask,idx,the,index,of,the,subtask,responsible,for,committing,the,checkpoint,param,checkpoint,id,the,id,of,the,checkpoint,we,are,interested,in,return,true,if,the,checkpoint,was,committed,completely,false,otherwise,throws,exception;public,abstract,boolean,is,checkpoint,committed,int,subtask,idx,long,checkpoint,id,throws,exception
CheckpointCommitter -> public abstract boolean isCheckpointCommitted(int subtaskIdx, long checkpointID) throws Exception_;1495484544;Checked the resource whether the given checkpoint was committed completely.__@param subtaskIdx the index of the subtask responsible for committing the checkpoint._@param checkpointID the id of the checkpoint we are interested in._@return true if the checkpoint was committed completely, false otherwise_@throws Exception;public abstract boolean isCheckpointCommitted(int subtaskIdx, long checkpointID) throws Exception_;checked,the,resource,whether,the,given,checkpoint,was,committed,completely,param,subtask,idx,the,index,of,the,subtask,responsible,for,committing,the,checkpoint,param,checkpoint,id,the,id,of,the,checkpoint,we,are,interested,in,return,true,if,the,checkpoint,was,committed,completely,false,otherwise,throws,exception;public,abstract,boolean,is,checkpoint,committed,int,subtask,idx,long,checkpoint,id,throws,exception
CheckpointCommitter -> public abstract void close() throws Exception_;1466089084;Closes the resource/connection to it. The resource should generally still exist after this call.__@throws Exception;public abstract void close() throws Exception_;closes,the,resource,connection,to,it,the,resource,should,generally,still,exist,after,this,call,throws,exception;public,abstract,void,close,throws,exception
CheckpointCommitter -> public abstract void close() throws Exception_;1471362858;Closes the resource/connection to it. The resource should generally still exist after this call.__@throws Exception;public abstract void close() throws Exception_;closes,the,resource,connection,to,it,the,resource,should,generally,still,exist,after,this,call,throws,exception;public,abstract,void,close,throws,exception
CheckpointCommitter -> public abstract void close() throws Exception_;1479127284;Closes the resource/connection to it. The resource should generally still exist after this call.__@throws Exception;public abstract void close() throws Exception_;closes,the,resource,connection,to,it,the,resource,should,generally,still,exist,after,this,call,throws,exception;public,abstract,void,close,throws,exception
CheckpointCommitter -> public abstract void close() throws Exception_;1481196434;Closes the resource/connection to it. The resource should generally still exist after this call.__@throws Exception;public abstract void close() throws Exception_;closes,the,resource,connection,to,it,the,resource,should,generally,still,exist,after,this,call,throws,exception;public,abstract,void,close,throws,exception
CheckpointCommitter -> public abstract void close() throws Exception_;1493195810;Closes the resource/connection to it. The resource should generally still exist after this call.__@throws Exception;public abstract void close() throws Exception_;closes,the,resource,connection,to,it,the,resource,should,generally,still,exist,after,this,call,throws,exception;public,abstract,void,close,throws,exception
CheckpointCommitter -> public abstract void close() throws Exception_;1495484544;Closes the resource/connection to it. The resource should generally still exist after this call.__@throws Exception;public abstract void close() throws Exception_;closes,the,resource,connection,to,it,the,resource,should,generally,still,exist,after,this,call,throws,exception;public,abstract,void,close,throws,exception
CheckpointCommitter -> public abstract void commitCheckpoint(int subtaskIdx, long checkpointID) throws Exception_;1479127284;Mark the given checkpoint as completed in the resource.__@param subtaskIdx the index of the subtask responsible for committing the checkpoint._@param checkpointID the id of the checkpoint to be committed._@throws Exception;public abstract void commitCheckpoint(int subtaskIdx, long checkpointID) throws Exception_;mark,the,given,checkpoint,as,completed,in,the,resource,param,subtask,idx,the,index,of,the,subtask,responsible,for,committing,the,checkpoint,param,checkpoint,id,the,id,of,the,checkpoint,to,be,committed,throws,exception;public,abstract,void,commit,checkpoint,int,subtask,idx,long,checkpoint,id,throws,exception
CheckpointCommitter -> public abstract void commitCheckpoint(int subtaskIdx, long checkpointID) throws Exception_;1481196434;Mark the given checkpoint as completed in the resource.__@param subtaskIdx the index of the subtask responsible for committing the checkpoint._@param checkpointID the id of the checkpoint to be committed._@throws Exception;public abstract void commitCheckpoint(int subtaskIdx, long checkpointID) throws Exception_;mark,the,given,checkpoint,as,completed,in,the,resource,param,subtask,idx,the,index,of,the,subtask,responsible,for,committing,the,checkpoint,param,checkpoint,id,the,id,of,the,checkpoint,to,be,committed,throws,exception;public,abstract,void,commit,checkpoint,int,subtask,idx,long,checkpoint,id,throws,exception
CheckpointCommitter -> public abstract void commitCheckpoint(int subtaskIdx, long checkpointID) throws Exception_;1493195810;Mark the given checkpoint as completed in the resource.__@param subtaskIdx the index of the subtask responsible for committing the checkpoint._@param checkpointID the id of the checkpoint to be committed._@throws Exception;public abstract void commitCheckpoint(int subtaskIdx, long checkpointID) throws Exception_;mark,the,given,checkpoint,as,completed,in,the,resource,param,subtask,idx,the,index,of,the,subtask,responsible,for,committing,the,checkpoint,param,checkpoint,id,the,id,of,the,checkpoint,to,be,committed,throws,exception;public,abstract,void,commit,checkpoint,int,subtask,idx,long,checkpoint,id,throws,exception
CheckpointCommitter -> public abstract void commitCheckpoint(int subtaskIdx, long checkpointID) throws Exception_;1495484544;Mark the given checkpoint as completed in the resource.__@param subtaskIdx the index of the subtask responsible for committing the checkpoint._@param checkpointID the id of the checkpoint to be committed._@throws Exception;public abstract void commitCheckpoint(int subtaskIdx, long checkpointID) throws Exception_;mark,the,given,checkpoint,as,completed,in,the,resource,param,subtask,idx,the,index,of,the,subtask,responsible,for,committing,the,checkpoint,param,checkpoint,id,the,id,of,the,checkpoint,to,be,committed,throws,exception;public,abstract,void,commit,checkpoint,int,subtask,idx,long,checkpoint,id,throws,exception
CheckpointCommitter -> public void setJobId(String id) throws Exception;1466089084;Internally used to set the job ID after instantiation.__@param id_@throws Exception;public void setJobId(String id) throws Exception {_		this.jobId = id__	};internally,used,to,set,the,job,id,after,instantiation,param,id,throws,exception;public,void,set,job,id,string,id,throws,exception,this,job,id,id
CheckpointCommitter -> public void setJobId(String id) throws Exception;1471362858;Internally used to set the job ID after instantiation.__@param id_@throws Exception;public void setJobId(String id) throws Exception {_		this.jobId = id__	};internally,used,to,set,the,job,id,after,instantiation,param,id,throws,exception;public,void,set,job,id,string,id,throws,exception,this,job,id,id
CheckpointCommitter -> public void setJobId(String id) throws Exception;1479127284;Internally used to set the job ID after instantiation.__@param id_@throws Exception;public void setJobId(String id) throws Exception {_		this.jobId = id__	};internally,used,to,set,the,job,id,after,instantiation,param,id,throws,exception;public,void,set,job,id,string,id,throws,exception,this,job,id,id
CheckpointCommitter -> public void setJobId(String id) throws Exception;1481196434;Internally used to set the job ID after instantiation.__@param id_@throws Exception;public void setJobId(String id) throws Exception {_		this.jobId = id__	};internally,used,to,set,the,job,id,after,instantiation,param,id,throws,exception;public,void,set,job,id,string,id,throws,exception,this,job,id,id
CheckpointCommitter -> public void setJobId(String id) throws Exception;1493195810;Internally used to set the job ID after instantiation.__@param id_@throws Exception;public void setJobId(String id) throws Exception {_		this.jobId = id__	};internally,used,to,set,the,job,id,after,instantiation,param,id,throws,exception;public,void,set,job,id,string,id,throws,exception,this,job,id,id
CheckpointCommitter -> public void setJobId(String id) throws Exception;1495484544;Internally used to set the job ID after instantiation.__@param id_@throws Exception;public void setJobId(String id) throws Exception {_		this.jobId = id__	};internally,used,to,set,the,job,id,after,instantiation,param,id,throws,exception;public,void,set,job,id,string,id,throws,exception,this,job,id,id
CheckpointCommitter -> public abstract void createResource() throws Exception_;1466089084;Creates/opens/connects to the resource that is used to store information. Called once directly after instantiation._@throws Exception;public abstract void createResource() throws Exception_;creates,opens,connects,to,the,resource,that,is,used,to,store,information,called,once,directly,after,instantiation,throws,exception;public,abstract,void,create,resource,throws,exception
CheckpointCommitter -> public abstract void createResource() throws Exception_;1471362858;Creates/opens/connects to the resource that is used to store information. Called once directly after instantiation._@throws Exception;public abstract void createResource() throws Exception_;creates,opens,connects,to,the,resource,that,is,used,to,store,information,called,once,directly,after,instantiation,throws,exception;public,abstract,void,create,resource,throws,exception
CheckpointCommitter -> public abstract void createResource() throws Exception_;1479127284;Creates/opens/connects to the resource that is used to store information. Called once directly after instantiation._@throws Exception;public abstract void createResource() throws Exception_;creates,opens,connects,to,the,resource,that,is,used,to,store,information,called,once,directly,after,instantiation,throws,exception;public,abstract,void,create,resource,throws,exception
CheckpointCommitter -> public abstract void createResource() throws Exception_;1481196434;Creates/opens/connects to the resource that is used to store information. Called once directly after instantiation._@throws Exception;public abstract void createResource() throws Exception_;creates,opens,connects,to,the,resource,that,is,used,to,store,information,called,once,directly,after,instantiation,throws,exception;public,abstract,void,create,resource,throws,exception
CheckpointCommitter -> public abstract void createResource() throws Exception_;1493195810;Creates/opens/connects to the resource that is used to store information. Called once directly after instantiation._@throws Exception;public abstract void createResource() throws Exception_;creates,opens,connects,to,the,resource,that,is,used,to,store,information,called,once,directly,after,instantiation,throws,exception;public,abstract,void,create,resource,throws,exception
CheckpointCommitter -> public abstract void createResource() throws Exception_;1495484544;Creates/opens/connects to the resource that is used to store information. Called once directly after instantiation._@throws Exception;public abstract void createResource() throws Exception_;creates,opens,connects,to,the,resource,that,is,used,to,store,information,called,once,directly,after,instantiation,throws,exception;public,abstract,void,create,resource,throws,exception
