# id;timestamp;commentText;codeText;commentWords;codeWords
StreamIterationHead -> public static String createBrokerIdString(JobID jid, String iterationID, int subtaskIndex);1445418103;Creates the identification string with which head and tail task find the shared blocking_queue for the back channel. The identification string is unique per parallel head/tail pair_per iteration per job.__@param jid The job ID._@param iterationID The id of the iteration in the job._@param subtaskIndex The parallel subtask number_@return The identification string.;public static String createBrokerIdString(JobID jid, String iterationID, int subtaskIndex) {_		return jid + "-" + iterationID + "-" + subtaskIndex__	};creates,the,identification,string,with,which,head,and,tail,task,find,the,shared,blocking,queue,for,the,back,channel,the,identification,string,is,unique,per,parallel,head,tail,pair,per,iteration,per,job,param,jid,the,job,id,param,iteration,id,the,id,of,the,iteration,in,the,job,param,subtask,index,the,parallel,subtask,number,return,the,identification,string;public,static,string,create,broker,id,string,job,id,jid,string,iteration,id,int,subtask,index,return,jid,iteration,id,subtask,index
StreamIterationHead -> public static String createBrokerIdString(JobID jid, String iterationID, int subtaskIndex);1449496469;Creates the identification string with which head and tail task find the shared blocking_queue for the back channel. The identification string is unique per parallel head/tail pair_per iteration per job.__@param jid The job ID._@param iterationID The id of the iteration in the job._@param subtaskIndex The parallel subtask number_@return The identification string.;public static String createBrokerIdString(JobID jid, String iterationID, int subtaskIndex) {_		return jid + "-" + iterationID + "-" + subtaskIndex__	};creates,the,identification,string,with,which,head,and,tail,task,find,the,shared,blocking,queue,for,the,back,channel,the,identification,string,is,unique,per,parallel,head,tail,pair,per,iteration,per,job,param,jid,the,job,id,param,iteration,id,the,id,of,the,iteration,in,the,job,param,subtask,index,the,parallel,subtask,number,return,the,identification,string;public,static,string,create,broker,id,string,job,id,jid,string,iteration,id,int,subtask,index,return,jid,iteration,id,subtask,index
StreamIterationHead -> public static String createBrokerIdString(JobID jid, String iterationID, int subtaskIndex);1455486690;Creates the identification string with which head and tail task find the shared blocking_queue for the back channel. The identification string is unique per parallel head/tail pair_per iteration per job.__@param jid The job ID._@param iterationID The id of the iteration in the job._@param subtaskIndex The parallel subtask number_@return The identification string.;public static String createBrokerIdString(JobID jid, String iterationID, int subtaskIndex) {_		return jid + "-" + iterationID + "-" + subtaskIndex__	};creates,the,identification,string,with,which,head,and,tail,task,find,the,shared,blocking,queue,for,the,back,channel,the,identification,string,is,unique,per,parallel,head,tail,pair,per,iteration,per,job,param,jid,the,job,id,param,iteration,id,the,id,of,the,iteration,in,the,job,param,subtask,index,the,parallel,subtask,number,return,the,identification,string;public,static,string,create,broker,id,string,job,id,jid,string,iteration,id,int,subtask,index,return,jid,iteration,id,subtask,index
StreamIterationHead -> public static String createBrokerIdString(JobID jid, String iterationID, int subtaskIndex);1456347641;Creates the identification string with which head and tail task find the shared blocking_queue for the back channel. The identification string is unique per parallel head/tail pair_per iteration per job.__@param jid The job ID._@param iterationID The id of the iteration in the job._@param subtaskIndex The parallel subtask number_@return The identification string.;public static String createBrokerIdString(JobID jid, String iterationID, int subtaskIndex) {_		return jid + "-" + iterationID + "-" + subtaskIndex__	};creates,the,identification,string,with,which,head,and,tail,task,find,the,shared,blocking,queue,for,the,back,channel,the,identification,string,is,unique,per,parallel,head,tail,pair,per,iteration,per,job,param,jid,the,job,id,param,iteration,id,the,id,of,the,iteration,in,the,job,param,subtask,index,the,parallel,subtask,number,return,the,identification,string;public,static,string,create,broker,id,string,job,id,jid,string,iteration,id,int,subtask,index,return,jid,iteration,id,subtask,index
StreamIterationHead -> public static String createBrokerIdString(JobID jid, String iterationID, int subtaskIndex);1493195810;Creates the identification string with which head and tail task find the shared blocking_queue for the back channel. The identification string is unique per parallel head/tail pair_per iteration per job.__@param jid The job ID._@param iterationID The id of the iteration in the job._@param subtaskIndex The parallel subtask number_@return The identification string.;public static String createBrokerIdString(JobID jid, String iterationID, int subtaskIndex) {_		return jid + "-" + iterationID + "-" + subtaskIndex__	};creates,the,identification,string,with,which,head,and,tail,task,find,the,shared,blocking,queue,for,the,back,channel,the,identification,string,is,unique,per,parallel,head,tail,pair,per,iteration,per,job,param,jid,the,job,id,param,iteration,id,the,id,of,the,iteration,in,the,job,param,subtask,index,the,parallel,subtask,number,return,the,identification,string;public,static,string,create,broker,id,string,job,id,jid,string,iteration,id,int,subtask,index,return,jid,iteration,id,subtask,index
StreamIterationHead -> public static String createBrokerIdString(JobID jid, String iterationID, int subtaskIndex);1493195810;Creates the identification string with which head and tail task find the shared blocking_queue for the back channel. The identification string is unique per parallel head/tail pair_per iteration per job.__@param jid The job ID._@param iterationID The id of the iteration in the job._@param subtaskIndex The parallel subtask number_@return The identification string.;public static String createBrokerIdString(JobID jid, String iterationID, int subtaskIndex) {_		return jid + "-" + iterationID + "-" + subtaskIndex__	};creates,the,identification,string,with,which,head,and,tail,task,find,the,shared,blocking,queue,for,the,back,channel,the,identification,string,is,unique,per,parallel,head,tail,pair,per,iteration,per,job,param,jid,the,job,id,param,iteration,id,the,id,of,the,iteration,in,the,job,param,subtask,index,the,parallel,subtask,number,return,the,identification,string;public,static,string,create,broker,id,string,job,id,jid,string,iteration,id,int,subtask,index,return,jid,iteration,id,subtask,index
StreamIterationHead -> public static String createBrokerIdString(JobID jid, String iterationID, int subtaskIndex);1493195810;Creates the identification string with which head and tail task find the shared blocking_queue for the back channel. The identification string is unique per parallel head/tail pair_per iteration per job.__@param jid The job ID._@param iterationID The id of the iteration in the job._@param subtaskIndex The parallel subtask number_@return The identification string.;public static String createBrokerIdString(JobID jid, String iterationID, int subtaskIndex) {_		return jid + "-" + iterationID + "-" + subtaskIndex__	};creates,the,identification,string,with,which,head,and,tail,task,find,the,shared,blocking,queue,for,the,back,channel,the,identification,string,is,unique,per,parallel,head,tail,pair,per,iteration,per,job,param,jid,the,job,id,param,iteration,id,the,id,of,the,iteration,in,the,job,param,subtask,index,the,parallel,subtask,number,return,the,identification,string;public,static,string,create,broker,id,string,job,id,jid,string,iteration,id,int,subtask,index,return,jid,iteration,id,subtask,index
StreamIterationHead -> public static String createBrokerIdString(JobID jid, String iterationID, int subtaskIndex);1495484544;Creates the identification string with which head and tail task find the shared blocking_queue for the back channel. The identification string is unique per parallel head/tail pair_per iteration per job.__@param jid The job ID._@param iterationID The id of the iteration in the job._@param subtaskIndex The parallel subtask number_@return The identification string.;public static String createBrokerIdString(JobID jid, String iterationID, int subtaskIndex) {_		return jid + "-" + iterationID + "-" + subtaskIndex__	};creates,the,identification,string,with,which,head,and,tail,task,find,the,shared,blocking,queue,for,the,back,channel,the,identification,string,is,unique,per,parallel,head,tail,pair,per,iteration,per,job,param,jid,the,job,id,param,iteration,id,the,id,of,the,iteration,in,the,job,param,subtask,index,the,parallel,subtask,number,return,the,identification,string;public,static,string,create,broker,id,string,job,id,jid,string,iteration,id,int,subtask,index,return,jid,iteration,id,subtask,index
StreamIterationHead -> public static String createBrokerIdString(JobID jid, String iterationID, int subtaskIndex);1515519059;Creates the identification string with which head and tail task find the shared blocking_queue for the back channel. The identification string is unique per parallel head/tail pair_per iteration per job.__@param jid The job ID._@param iterationID The id of the iteration in the job._@param subtaskIndex The parallel subtask number_@return The identification string.;public static String createBrokerIdString(JobID jid, String iterationID, int subtaskIndex) {_		return jid + "-" + iterationID + "-" + subtaskIndex__	};creates,the,identification,string,with,which,head,and,tail,task,find,the,shared,blocking,queue,for,the,back,channel,the,identification,string,is,unique,per,parallel,head,tail,pair,per,iteration,per,job,param,jid,the,job,id,param,iteration,id,the,id,of,the,iteration,in,the,job,param,subtask,index,the,parallel,subtask,number,return,the,identification,string;public,static,string,create,broker,id,string,job,id,jid,string,iteration,id,int,subtask,index,return,jid,iteration,id,subtask,index
StreamIterationHead -> public static String createBrokerIdString(JobID jid, String iterationID, int subtaskIndex);1516626397;Creates the identification string with which head and tail task find the shared blocking_queue for the back channel. The identification string is unique per parallel head/tail pair_per iteration per job.__@param jid The job ID._@param iterationID The id of the iteration in the job._@param subtaskIndex The parallel subtask number_@return The identification string.;public static String createBrokerIdString(JobID jid, String iterationID, int subtaskIndex) {_		return jid + "-" + iterationID + "-" + subtaskIndex__	};creates,the,identification,string,with,which,head,and,tail,task,find,the,shared,blocking,queue,for,the,back,channel,the,identification,string,is,unique,per,parallel,head,tail,pair,per,iteration,per,job,param,jid,the,job,id,param,iteration,id,the,id,of,the,iteration,in,the,job,param,subtask,index,the,parallel,subtask,number,return,the,identification,string;public,static,string,create,broker,id,string,job,id,jid,string,iteration,id,int,subtask,index,return,jid,iteration,id,subtask,index
StreamIterationHead -> public static String createBrokerIdString(JobID jid, String iterationID, int subtaskIndex);1544454143;Creates the identification string with which head and tail task find the shared blocking_queue for the back channel. The identification string is unique per parallel head/tail pair_per iteration per job.__@param jid The job ID._@param iterationID The id of the iteration in the job._@param subtaskIndex The parallel subtask number_@return The identification string.;public static String createBrokerIdString(JobID jid, String iterationID, int subtaskIndex) {_		return jid + "-" + iterationID + "-" + subtaskIndex__	};creates,the,identification,string,with,which,head,and,tail,task,find,the,shared,blocking,queue,for,the,back,channel,the,identification,string,is,unique,per,parallel,head,tail,pair,per,iteration,per,job,param,jid,the,job,id,param,iteration,id,the,id,of,the,iteration,in,the,job,param,subtask,index,the,parallel,subtask,number,return,the,identification,string;public,static,string,create,broker,id,string,job,id,jid,string,iteration,id,int,subtask,index,return,jid,iteration,id,subtask,index
