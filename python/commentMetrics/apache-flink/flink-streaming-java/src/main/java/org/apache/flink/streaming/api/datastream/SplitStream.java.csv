commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * Sets the output names for which the next operator will receive values.  *  * @param outputNames  *            The output names for which the operator will receive the  *            input.  * @return Returns the selected DataStream  */ ;/**  * Sets the output names for which the next operator will receive values.  *  * @param outputNames  *            The output names for which the operator will receive the  *            input.  * @return Returns the selected DataStream  */ public DataStream<OUT> select(String... outputNames) {     return selectOutput(outputNames). }
false;private;1;10;;private DataStream<OUT> selectOutput(String[] outputNames) {     for (String outName : outputNames) {         if (outName == null) {             throw new RuntimeException("Selected names must not be null").         }     }     SelectTransformation<OUT> selectTransform = new SelectTransformation<OUT>(this.getTransformation(), Lists.newArrayList(outputNames)).     return new DataStream<OUT>(this.getExecutionEnvironment(), selectTransform). }
