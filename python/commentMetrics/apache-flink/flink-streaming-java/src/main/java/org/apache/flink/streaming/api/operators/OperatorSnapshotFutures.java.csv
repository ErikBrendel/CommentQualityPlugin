commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Nonnull public RunnableFuture<SnapshotResult<KeyedStateHandle>> getKeyedStateManagedFuture() {     return keyedStateManagedFuture. }
false;public;1;4;;public void setKeyedStateManagedFuture(@Nonnull RunnableFuture<SnapshotResult<KeyedStateHandle>> keyedStateManagedFuture) {     this.keyedStateManagedFuture = keyedStateManagedFuture. }
false;public;0;4;;@Nonnull public RunnableFuture<SnapshotResult<KeyedStateHandle>> getKeyedStateRawFuture() {     return keyedStateRawFuture. }
false;public;1;4;;public void setKeyedStateRawFuture(@Nonnull RunnableFuture<SnapshotResult<KeyedStateHandle>> keyedStateRawFuture) {     this.keyedStateRawFuture = keyedStateRawFuture. }
false;public;0;4;;@Nonnull public RunnableFuture<SnapshotResult<OperatorStateHandle>> getOperatorStateManagedFuture() {     return operatorStateManagedFuture. }
false;public;1;4;;public void setOperatorStateManagedFuture(@Nonnull RunnableFuture<SnapshotResult<OperatorStateHandle>> operatorStateManagedFuture) {     this.operatorStateManagedFuture = operatorStateManagedFuture. }
false;public;0;4;;@Nonnull public RunnableFuture<SnapshotResult<OperatorStateHandle>> getOperatorStateRawFuture() {     return operatorStateRawFuture. }
false;public;1;4;;public void setOperatorStateRawFuture(@Nonnull RunnableFuture<SnapshotResult<OperatorStateHandle>> operatorStateRawFuture) {     this.operatorStateRawFuture = operatorStateRawFuture. }
false;public;0;37;;public void cancel() throws Exception {     Exception exception = null.     try {         StateUtil.discardStateFuture(getKeyedStateManagedFuture()).     } catch (Exception e) {         exception = new Exception("Could not properly cancel managed keyed state future.", e).     }     try {         StateUtil.discardStateFuture(getOperatorStateManagedFuture()).     } catch (Exception e) {         exception = ExceptionUtils.firstOrSuppressed(new Exception("Could not properly cancel managed operator state future.", e), exception).     }     try {         StateUtil.discardStateFuture(getKeyedStateRawFuture()).     } catch (Exception e) {         exception = ExceptionUtils.firstOrSuppressed(new Exception("Could not properly cancel raw keyed state future.", e), exception).     }     try {         StateUtil.discardStateFuture(getOperatorStateRawFuture()).     } catch (Exception e) {         exception = ExceptionUtils.firstOrSuppressed(new Exception("Could not properly cancel raw operator state future.", e), exception).     }     if (exception != null) {         throw exception.     } }
