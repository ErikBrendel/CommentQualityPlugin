commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Processes one element that arrived on the first input of this two-input operator.  * This method is guaranteed to not be called concurrently with other methods of the operator.  */ ;/**  * Processes one element that arrived on the first input of this two-input operator.  * This method is guaranteed to not be called concurrently with other methods of the operator.  */ void processElement1(StreamRecord<IN1> element) throws Exception.
true;;1;1;/**  * Processes one element that arrived on the second input of this two-input operator.  * This method is guaranteed to not be called concurrently with other methods of the operator.  */ ;/**  * Processes one element that arrived on the second input of this two-input operator.  * This method is guaranteed to not be called concurrently with other methods of the operator.  */ void processElement2(StreamRecord<IN2> element) throws Exception.
true;;1;1;/**  * Processes a {@link Watermark} that arrived on the first input of this two-input operator.  * This method is guaranteed to not be called concurrently with other methods of the operator.  *  * @see org.apache.flink.streaming.api.watermark.Watermark  */ ;/**  * Processes a {@link Watermark} that arrived on the first input of this two-input operator.  * This method is guaranteed to not be called concurrently with other methods of the operator.  *  * @see org.apache.flink.streaming.api.watermark.Watermark  */ void processWatermark1(Watermark mark) throws Exception.
true;;1;1;/**  * Processes a {@link Watermark} that arrived on the second input of this two-input operator.  * This method is guaranteed to not be called concurrently with other methods of the operator.  *  * @see org.apache.flink.streaming.api.watermark.Watermark  */ ;/**  * Processes a {@link Watermark} that arrived on the second input of this two-input operator.  * This method is guaranteed to not be called concurrently with other methods of the operator.  *  * @see org.apache.flink.streaming.api.watermark.Watermark  */ void processWatermark2(Watermark mark) throws Exception.
true;;1;1;/**  * Processes a {@link LatencyMarker} that arrived on the first input of this two-input operator.  * This method is guaranteed to not be called concurrently with other methods of the operator.  *  * @see org.apache.flink.streaming.runtime.streamrecord.LatencyMarker  */ ;/**  * Processes a {@link LatencyMarker} that arrived on the first input of this two-input operator.  * This method is guaranteed to not be called concurrently with other methods of the operator.  *  * @see org.apache.flink.streaming.runtime.streamrecord.LatencyMarker  */ void processLatencyMarker1(LatencyMarker latencyMarker) throws Exception.
true;;1;1;/**  * Processes a {@link LatencyMarker} that arrived on the second input of this two-input operator.  * This method is guaranteed to not be called concurrently with other methods of the operator.  *  * @see org.apache.flink.streaming.runtime.streamrecord.LatencyMarker  */ ;/**  * Processes a {@link LatencyMarker} that arrived on the second input of this two-input operator.  * This method is guaranteed to not be called concurrently with other methods of the operator.  *  * @see org.apache.flink.streaming.runtime.streamrecord.LatencyMarker  */ void processLatencyMarker2(LatencyMarker latencyMarker) throws Exception.
