commented;modifiers;parameterAmount;loc;comment;code
true;;2;1;/**  * Returns the identifier of the bucket the provided element should be put into.  * @param element The current element being processed.  * @param context The {@link SinkFunction.Context context} used by the {@link StreamingFileSink sink}.  *  * @return A string representing the identifier of the bucket the element should be put into.  * The actual path to the bucket will result from the concatenation of the returned string  * and the {@code base path} provided during the initialization of the {@link StreamingFileSink sink}.  */ ;/**  * Returns the identifier of the bucket the provided element should be put into.  * @param element The current element being processed.  * @param context The {@link SinkFunction.Context context} used by the {@link StreamingFileSink sink}.  *  * @return A string representing the identifier of the bucket the element should be put into.  * The actual path to the bucket will result from the concatenation of the returned string  * and the {@code base path} provided during the initialization of the {@link StreamingFileSink sink}.  */ BucketID getBucketId(IN element, BucketAssigner.Context context).
true;;0;1;/**  * @return A {@link SimpleVersionedSerializer} capable of serializing/deserializing the elements  * of type {@code BucketID}. That is the type of the objects returned by the  * {@link #getBucketId(Object, BucketAssigner.Context)}.  */ ;/**  * @return A {@link SimpleVersionedSerializer} capable of serializing/deserializing the elements  * of type {@code BucketID}. That is the type of the objects returned by the  * {@link #getBucketId(Object, BucketAssigner.Context)}.  */ SimpleVersionedSerializer<BucketID> getSerializer().
true;;0;1;/**  * Returns the current processing time.  */ ;/**  * Returns the current processing time.  */ long currentProcessingTime().
true;;0;1;/**  * Returns the current event-time watermark.  */ ;/**  * Returns the current event-time watermark.  */ long currentWatermark().
true;;0;2;/**  * Returns the timestamp of the current input record or  * {@code null} if the element does not have an assigned timestamp.  */ ;/**  * Returns the timestamp of the current input record or  * {@code null} if the element does not have an assigned timestamp.  */ @Nullable Long timestamp().
