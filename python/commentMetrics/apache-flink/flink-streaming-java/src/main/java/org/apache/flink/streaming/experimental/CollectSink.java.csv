# id;timestamp;commentText;codeText;commentWords;codeWords
CollectSink -> @Override 	public void close() throws Exception;1516090404;Closes the connection with the Socket server.;@Override_	public void close() throws Exception {_		try {_			if (outputStream != null) {_				outputStream.flush()__				outputStream.close()__			}__			_			if (client != null) {_				client.close()__			}_		}_		catch (Exception e) {_			throw new IOException("Error while closing connection that streams data back to client at "_					+ hostIp.toString() + ":" + port, e)__		}_		finally {_			_			if (client != null) {_				try {_					client.close()__				}_				catch (Throwable t) {_					_				}_			}_		}_	};closes,the,connection,with,the,socket,server;override,public,void,close,throws,exception,try,if,output,stream,null,output,stream,flush,output,stream,close,if,client,null,client,close,catch,exception,e,throw,new,ioexception,error,while,closing,connection,that,streams,data,back,to,client,at,host,ip,to,string,port,e,finally,if,client,null,try,client,close,catch,throwable,t
CollectSink -> @Override 	public void close() throws Exception;1518197017;Closes the connection with the Socket server.;@Override_	public void close() throws Exception {_		try {_			if (outputStream != null) {_				outputStream.flush()__				outputStream.close()__			}__			_			if (client != null) {_				client.close()__			}_		}_		catch (Exception e) {_			throw new IOException("Error while closing connection that streams data back to client at "_					+ hostIp.toString() + ":" + port, e)__		}_		finally {_			_			if (client != null) {_				try {_					client.close()__				}_				catch (Throwable t) {_					_				}_			}_		}_	};closes,the,connection,with,the,socket,server;override,public,void,close,throws,exception,try,if,output,stream,null,output,stream,flush,output,stream,close,if,client,null,client,close,catch,exception,e,throw,new,ioexception,error,while,closing,connection,that,streams,data,back,to,client,at,host,ip,to,string,port,e,finally,if,client,null,try,client,close,catch,throwable,t
CollectSink -> @Override 	public void close() throws Exception;1518855442;Closes the connection with the Socket server.;@Override_	public void close() throws Exception {_		try {_			if (outputStream != null) {_				outputStream.flush()__				outputStream.close()__			}__			_			if (client != null) {_				client.close()__			}_		}_		catch (Exception e) {_			throw new IOException("Error while closing connection that streams data back to client at "_					+ hostIp.toString() + ":" + port, e)__		}_		finally {_			_			if (client != null) {_				try {_					client.close()__				}_				catch (Throwable t) {_					_				}_			}_		}_	};closes,the,connection,with,the,socket,server;override,public,void,close,throws,exception,try,if,output,stream,null,output,stream,flush,output,stream,close,if,client,null,client,close,catch,exception,e,throw,new,ioexception,error,while,closing,connection,that,streams,data,back,to,client,at,host,ip,to,string,port,e,finally,if,client,null,try,client,close,catch,throwable,t
CollectSink -> @Override 	public void close() throws Exception;1523020981;Closes the connection with the Socket server.;@Override_	public void close() throws Exception {_		try {_			if (outputStream != null) {_				outputStream.flush()__				outputStream.close()__			}__			_			if (client != null) {_				client.close()__			}_		}_		catch (Exception e) {_			throw new IOException("Error while closing connection that streams data back to client at "_					+ hostIp.toString() + ":" + port, e)__		}_		finally {_			_			if (client != null) {_				try {_					client.close()__				}_				catch (Throwable t) {_					_				}_			}_		}_	};closes,the,connection,with,the,socket,server;override,public,void,close,throws,exception,try,if,output,stream,null,output,stream,flush,output,stream,close,if,client,null,client,close,catch,exception,e,throw,new,ioexception,error,while,closing,connection,that,streams,data,back,to,client,at,host,ip,to,string,port,e,finally,if,client,null,try,client,close,catch,throwable,t
CollectSink -> public CollectSink(InetAddress hostIp, int port, TypeSerializer<IN> serializer);1516090404;Creates a CollectSink that will send the data to the specified host.__@param hostIp IP address of the Socket server._@param port Port of the Socket server._@param serializer A serializer for the data.;public CollectSink(InetAddress hostIp, int port, TypeSerializer<IN> serializer) {_		this.hostIp = hostIp__		this.port = port__		this.serializer = serializer__	};creates,a,collect,sink,that,will,send,the,data,to,the,specified,host,param,host,ip,ip,address,of,the,socket,server,param,port,port,of,the,socket,server,param,serializer,a,serializer,for,the,data;public,collect,sink,inet,address,host,ip,int,port,type,serializer,in,serializer,this,host,ip,host,ip,this,port,port,this,serializer,serializer
CollectSink -> public CollectSink(InetAddress hostIp, int port, TypeSerializer<IN> serializer);1518197017;Creates a CollectSink that will send the data to the specified host.__@param hostIp IP address of the Socket server._@param port Port of the Socket server._@param serializer A serializer for the data.;public CollectSink(InetAddress hostIp, int port, TypeSerializer<IN> serializer) {_		this.hostIp = hostIp__		this.port = port__		this.serializer = serializer__	};creates,a,collect,sink,that,will,send,the,data,to,the,specified,host,param,host,ip,ip,address,of,the,socket,server,param,port,port,of,the,socket,server,param,serializer,a,serializer,for,the,data;public,collect,sink,inet,address,host,ip,int,port,type,serializer,in,serializer,this,host,ip,host,ip,this,port,port,this,serializer,serializer
CollectSink -> public CollectSink(InetAddress hostIp, int port, TypeSerializer<IN> serializer);1518855442;Creates a CollectSink that will send the data to the specified host.__@param hostIp IP address of the Socket server._@param port Port of the Socket server._@param serializer A serializer for the data.;public CollectSink(InetAddress hostIp, int port, TypeSerializer<IN> serializer) {_		this.hostIp = hostIp__		this.port = port__		this.serializer = serializer__	};creates,a,collect,sink,that,will,send,the,data,to,the,specified,host,param,host,ip,ip,address,of,the,socket,server,param,port,port,of,the,socket,server,param,serializer,a,serializer,for,the,data;public,collect,sink,inet,address,host,ip,int,port,type,serializer,in,serializer,this,host,ip,host,ip,this,port,port,this,serializer,serializer
CollectSink -> public CollectSink(InetAddress hostIp, int port, TypeSerializer<IN> serializer);1523020981;Creates a CollectSink that will send the data to the specified host.__@param hostIp IP address of the Socket server._@param port Port of the Socket server._@param serializer A serializer for the data.;public CollectSink(InetAddress hostIp, int port, TypeSerializer<IN> serializer) {_		this.hostIp = hostIp__		this.port = port__		this.serializer = serializer__	};creates,a,collect,sink,that,will,send,the,data,to,the,specified,host,param,host,ip,ip,address,of,the,socket,server,param,port,port,of,the,socket,server,param,serializer,a,serializer,for,the,data;public,collect,sink,inet,address,host,ip,int,port,type,serializer,in,serializer,this,host,ip,host,ip,this,port,port,this,serializer,serializer
CollectSink -> @Override 	public void open(Configuration parameters) throws Exception;1516090404;Initialize the connection with the Socket in the server._@param parameters Configuration.;@Override_	public void open(Configuration parameters) throws Exception {_		try {_			client = new Socket(hostIp, port)__			outputStream = client.getOutputStream()__			streamWriter = new DataOutputViewStreamWrapper(outputStream)__		}_		catch (IOException e) {_			throw new IOException("Cannot connect to the client to send back the stream", e)__		}_	};initialize,the,connection,with,the,socket,in,the,server,param,parameters,configuration;override,public,void,open,configuration,parameters,throws,exception,try,client,new,socket,host,ip,port,output,stream,client,get,output,stream,stream,writer,new,data,output,view,stream,wrapper,output,stream,catch,ioexception,e,throw,new,ioexception,cannot,connect,to,the,client,to,send,back,the,stream,e
CollectSink -> @Override 	public void open(Configuration parameters) throws Exception;1518197017;Initialize the connection with the Socket in the server._@param parameters Configuration.;@Override_	public void open(Configuration parameters) throws Exception {_		try {_			client = new Socket(hostIp, port)__			outputStream = client.getOutputStream()__			streamWriter = new DataOutputViewStreamWrapper(outputStream)__		}_		catch (IOException e) {_			throw new IOException("Cannot connect to the client to send back the stream", e)__		}_	};initialize,the,connection,with,the,socket,in,the,server,param,parameters,configuration;override,public,void,open,configuration,parameters,throws,exception,try,client,new,socket,host,ip,port,output,stream,client,get,output,stream,stream,writer,new,data,output,view,stream,wrapper,output,stream,catch,ioexception,e,throw,new,ioexception,cannot,connect,to,the,client,to,send,back,the,stream,e
CollectSink -> @Override 	public void open(Configuration parameters) throws Exception;1518855442;Initialize the connection with the Socket in the server._@param parameters Configuration.;@Override_	public void open(Configuration parameters) throws Exception {_		try {_			client = new Socket(hostIp, port)__			outputStream = client.getOutputStream()__			streamWriter = new DataOutputViewStreamWrapper(outputStream)__		}_		catch (IOException e) {_			throw new IOException("Cannot connect to the client to send back the stream", e)__		}_	};initialize,the,connection,with,the,socket,in,the,server,param,parameters,configuration;override,public,void,open,configuration,parameters,throws,exception,try,client,new,socket,host,ip,port,output,stream,client,get,output,stream,stream,writer,new,data,output,view,stream,wrapper,output,stream,catch,ioexception,e,throw,new,ioexception,cannot,connect,to,the,client,to,send,back,the,stream,e
CollectSink -> @Override 	public void open(Configuration parameters) throws Exception;1523020981;Initialize the connection with the Socket in the server._@param parameters Configuration.;@Override_	public void open(Configuration parameters) throws Exception {_		try {_			client = new Socket(hostIp, port)__			outputStream = client.getOutputStream()__			streamWriter = new DataOutputViewStreamWrapper(outputStream)__		}_		catch (IOException e) {_			throw new IOException("Cannot connect to the client to send back the stream", e)__		}_	};initialize,the,connection,with,the,socket,in,the,server,param,parameters,configuration;override,public,void,open,configuration,parameters,throws,exception,try,client,new,socket,host,ip,port,output,stream,client,get,output,stream,stream,writer,new,data,output,view,stream,wrapper,output,stream,catch,ioexception,e,throw,new,ioexception,cannot,connect,to,the,client,to,send,back,the,stream,e
