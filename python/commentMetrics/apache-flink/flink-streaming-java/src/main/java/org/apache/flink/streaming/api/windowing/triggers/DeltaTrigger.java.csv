commented;modifiers;parameterAmount;loc;comment;code
false;public;4;13;;@Override public TriggerResult onElement(T element, long timestamp, W window, TriggerContext ctx) throws Exception {     ValueState<T> lastElementState = ctx.getPartitionedState(stateDesc).     if (lastElementState.value() == null) {         lastElementState.update(element).         return TriggerResult.CONTINUE.     }     if (deltaFunction.getDelta(lastElementState.value(), element) > this.threshold) {         lastElementState.update(element).         return TriggerResult.FIRE.     }     return TriggerResult.CONTINUE. }
false;public;3;4;;@Override public TriggerResult onEventTime(long time, W window, TriggerContext ctx) {     return TriggerResult.CONTINUE. }
false;public;3;4;;@Override public TriggerResult onProcessingTime(long time, W window, TriggerContext ctx) throws Exception {     return TriggerResult.CONTINUE. }
false;public;2;4;;@Override public void clear(W window, TriggerContext ctx) throws Exception {     ctx.getPartitionedState(stateDesc).clear(). }
false;public;0;4;;@Override public String toString() {     return "DeltaTrigger(" + deltaFunction + ", " + threshold + ")". }
true;public,static;3;3;/**  * Creates a delta trigger from the given threshold and {@code DeltaFunction}.  *  * @param threshold The threshold at which to trigger.  * @param deltaFunction The delta function to use  * @param stateSerializer TypeSerializer for the data elements.  *  * @param <T> The type of elements on which this trigger can operate.  * @param <W> The type of {@link Window Windows} on which this trigger can operate.  */ ;/**  * Creates a delta trigger from the given threshold and {@code DeltaFunction}.  *  * @param threshold The threshold at which to trigger.  * @param deltaFunction The delta function to use  * @param stateSerializer TypeSerializer for the data elements.  *  * @param <T> The type of elements on which this trigger can operate.  * @param <W> The type of {@link Window Windows} on which this trigger can operate.  */ public static <T, W extends Window> DeltaTrigger<T, W> of(double threshold, DeltaFunction<T> deltaFunction, TypeSerializer<T> stateSerializer) {     return new DeltaTrigger<>(threshold, deltaFunction, stateSerializer). }
