# id;timestamp;commentText;codeText;commentWords;codeWords
KeyedBroadcastProcessFunction -> public abstract void processBroadcastElement(final IN2 value, final Context ctx, final Collector<OUT> out) throws Exception_;1518008865;This method is called for each element in the_{@link org.apache.flink.streaming.api.datastream.BroadcastStream broadcast stream}.__<p>It can output zero or more elements using the {@link Collector} parameter,_query the current processing/event time, and also query and update the internal_{@link org.apache.flink.api.common.state.BroadcastState broadcast state}. These can_be done through the provided {@link Context}._The context is only valid during the invocation of this method, do not store it.__@param value The stream element._@param ctx A {@link Context} that allows querying the timestamp of the element,_querying the current processing/event time and updating the broadcast state._The context is only valid during the invocation of this method, do not store it._@param out The collector to emit resulting elements to_@throws Exception The function may throw exceptions which cause the streaming program_to fail and go into recovery.;public abstract void processBroadcastElement(final IN2 value, final Context ctx, final Collector<OUT> out) throws Exception_;this,method,is,called,for,each,element,in,the,link,org,apache,flink,streaming,api,datastream,broadcast,stream,broadcast,stream,p,it,can,output,zero,or,more,elements,using,the,link,collector,parameter,query,the,current,processing,event,time,and,also,query,and,update,the,internal,link,org,apache,flink,api,common,state,broadcast,state,broadcast,state,these,can,be,done,through,the,provided,link,context,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,value,the,stream,element,param,ctx,a,link,context,that,allows,querying,the,timestamp,of,the,element,querying,the,current,processing,event,time,and,updating,the,broadcast,state,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,to,emit,resulting,elements,to,throws,exception,the,function,may,throw,exceptions,which,cause,the,streaming,program,to,fail,and,go,into,recovery;public,abstract,void,process,broadcast,element,final,in2,value,final,context,ctx,final,collector,out,out,throws,exception
KeyedBroadcastProcessFunction -> public abstract void processBroadcastElement(final IN2 value, final Context ctx, final Collector<OUT> out) throws Exception_;1523545470;This method is called for each element in the_{@link org.apache.flink.streaming.api.datastream.BroadcastStream broadcast stream}.__<p>It can output zero or more elements using the {@link Collector} parameter,_query the current processing/event time, and also query and update the internal_{@link org.apache.flink.api.common.state.BroadcastState broadcast state}. In addition, it_can register a {@link KeyedStateFunction function} to be applied to all keyed states on_the local partition. These can be done through the provided {@link Context}._The context is only valid during the invocation of this method, do not store it.__@param value The stream element._@param ctx A {@link Context} that allows querying the timestamp of the element,_querying the current processing/event time and updating the broadcast state._In addition, it allows the registration of a {@link KeyedStateFunction function}_to be applied to all keyed state with a given {@link StateDescriptor} on the local partition._The context is only valid during the invocation of this method, do not store it._@param out The collector to emit resulting elements to_@throws Exception The function may throw exceptions which cause the streaming program_to fail and go into recovery.;public abstract void processBroadcastElement(final IN2 value, final Context ctx, final Collector<OUT> out) throws Exception_;this,method,is,called,for,each,element,in,the,link,org,apache,flink,streaming,api,datastream,broadcast,stream,broadcast,stream,p,it,can,output,zero,or,more,elements,using,the,link,collector,parameter,query,the,current,processing,event,time,and,also,query,and,update,the,internal,link,org,apache,flink,api,common,state,broadcast,state,broadcast,state,in,addition,it,can,register,a,link,keyed,state,function,function,to,be,applied,to,all,keyed,states,on,the,local,partition,these,can,be,done,through,the,provided,link,context,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,value,the,stream,element,param,ctx,a,link,context,that,allows,querying,the,timestamp,of,the,element,querying,the,current,processing,event,time,and,updating,the,broadcast,state,in,addition,it,allows,the,registration,of,a,link,keyed,state,function,function,to,be,applied,to,all,keyed,state,with,a,given,link,state,descriptor,on,the,local,partition,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,to,emit,resulting,elements,to,throws,exception,the,function,may,throw,exceptions,which,cause,the,streaming,program,to,fail,and,go,into,recovery;public,abstract,void,process,broadcast,element,final,in2,value,final,context,ctx,final,collector,out,out,throws,exception
KeyedBroadcastProcessFunction -> public abstract void processBroadcastElement(final IN2 value, final Context ctx, final Collector<OUT> out) throws Exception_;1531296542;This method is called for each element in the_{@link org.apache.flink.streaming.api.datastream.BroadcastStream broadcast stream}.__<p>It can output zero or more elements using the {@link Collector} parameter,_query the current processing/event time, and also query and update the internal_{@link org.apache.flink.api.common.state.BroadcastState broadcast state}. In addition, it_can register a {@link KeyedStateFunction function} to be applied to all keyed states on_the local partition. These can be done through the provided {@link Context}._The context is only valid during the invocation of this method, do not store it.__@param value The stream element._@param ctx A {@link Context} that allows querying the timestamp of the element,_querying the current processing/event time and updating the broadcast state._In addition, it allows the registration of a {@link KeyedStateFunction function}_to be applied to all keyed state with a given {@link StateDescriptor} on the local partition._The context is only valid during the invocation of this method, do not store it._@param out The collector to emit resulting elements to_@throws Exception The function may throw exceptions which cause the streaming program_to fail and go into recovery.;public abstract void processBroadcastElement(final IN2 value, final Context ctx, final Collector<OUT> out) throws Exception_;this,method,is,called,for,each,element,in,the,link,org,apache,flink,streaming,api,datastream,broadcast,stream,broadcast,stream,p,it,can,output,zero,or,more,elements,using,the,link,collector,parameter,query,the,current,processing,event,time,and,also,query,and,update,the,internal,link,org,apache,flink,api,common,state,broadcast,state,broadcast,state,in,addition,it,can,register,a,link,keyed,state,function,function,to,be,applied,to,all,keyed,states,on,the,local,partition,these,can,be,done,through,the,provided,link,context,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,value,the,stream,element,param,ctx,a,link,context,that,allows,querying,the,timestamp,of,the,element,querying,the,current,processing,event,time,and,updating,the,broadcast,state,in,addition,it,allows,the,registration,of,a,link,keyed,state,function,function,to,be,applied,to,all,keyed,state,with,a,given,link,state,descriptor,on,the,local,partition,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,to,emit,resulting,elements,to,throws,exception,the,function,may,throw,exceptions,which,cause,the,streaming,program,to,fail,and,go,into,recovery;public,abstract,void,process,broadcast,element,final,in2,value,final,context,ctx,final,collector,out,out,throws,exception
KeyedBroadcastProcessFunction -> OnTimerContext -> public abstract TimeDomain timeDomain()_;1518008865;The {@link TimeDomain} of the firing timer, i.e. if it is_event or processing time timer.;public abstract TimeDomain timeDomain()_;the,link,time,domain,of,the,firing,timer,i,e,if,it,is,event,or,processing,time,timer;public,abstract,time,domain,time,domain
KeyedBroadcastProcessFunction -> OnTimerContext -> public abstract TimeDomain timeDomain()_;1518008896;The {@link TimeDomain} of the firing timer, i.e. if it is_event or processing time timer.;public abstract TimeDomain timeDomain()_;the,link,time,domain,of,the,firing,timer,i,e,if,it,is,event,or,processing,time,timer;public,abstract,time,domain,time,domain
KeyedBroadcastProcessFunction -> OnTimerContext -> public abstract TimeDomain timeDomain()_;1518008932;The {@link TimeDomain} of the firing timer, i.e. if it is_event or processing time timer.;public abstract TimeDomain timeDomain()_;the,link,time,domain,of,the,firing,timer,i,e,if,it,is,event,or,processing,time,timer;public,abstract,time,domain,time,domain
KeyedBroadcastProcessFunction -> OnTimerContext -> public abstract TimeDomain timeDomain()_;1520354103;The {@link TimeDomain} of the firing timer, i.e. if it is_event or processing time timer.;public abstract TimeDomain timeDomain()_;the,link,time,domain,of,the,firing,timer,i,e,if,it,is,event,or,processing,time,timer;public,abstract,time,domain,time,domain
KeyedBroadcastProcessFunction -> OnTimerContext -> public abstract TimeDomain timeDomain()_;1523545470;The {@link TimeDomain} of the firing timer, i.e. if it is_event or processing time timer.;public abstract TimeDomain timeDomain()_;the,link,time,domain,of,the,firing,timer,i,e,if,it,is,event,or,processing,time,timer;public,abstract,time,domain,time,domain
KeyedBroadcastProcessFunction -> OnTimerContext -> public abstract TimeDomain timeDomain()_;1531296542;The {@link TimeDomain} of the firing timer, i.e. if it is_event or processing time timer.;public abstract TimeDomain timeDomain()_;the,link,time,domain,of,the,firing,timer,i,e,if,it,is,event,or,processing,time,timer;public,abstract,time,domain,time,domain
KeyedBroadcastProcessFunction -> public abstract void processElement(final IN1 value, final KeyedReadOnlyContext ctx, final Collector<OUT> out) throws Exception_;1518008865;This method is called for each element in the (non-broadcast)_{@link org.apache.flink.streaming.api.datastream.KeyedStream keyed stream}.__<p>It can output zero or more elements using the {@link Collector} parameter,_query the current processing/event time, and also query and update the local keyed state._In addition, it can get a {@link TimerService} for registering timers and querying the time._Finally, it has <b>read-only</b> access to the broadcast state._The context is only valid during the invocation of this method, do not store it.__@param value The stream element._@param ctx A {@link KeyedReadOnlyContext} that allows querying the timestamp of the element,_querying the current processing/event time and iterating the broadcast state_with <b>read-only</b> access._The context is only valid during the invocation of this method, do not store it._@param out The collector to emit resulting elements to_@throws Exception The function may throw exceptions which cause the streaming program_to fail and go into recovery.;public abstract void processElement(final IN1 value, final KeyedReadOnlyContext ctx, final Collector<OUT> out) throws Exception_;this,method,is,called,for,each,element,in,the,non,broadcast,link,org,apache,flink,streaming,api,datastream,keyed,stream,keyed,stream,p,it,can,output,zero,or,more,elements,using,the,link,collector,parameter,query,the,current,processing,event,time,and,also,query,and,update,the,local,keyed,state,in,addition,it,can,get,a,link,timer,service,for,registering,timers,and,querying,the,time,finally,it,has,b,read,only,b,access,to,the,broadcast,state,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,value,the,stream,element,param,ctx,a,link,keyed,read,only,context,that,allows,querying,the,timestamp,of,the,element,querying,the,current,processing,event,time,and,iterating,the,broadcast,state,with,b,read,only,b,access,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,to,emit,resulting,elements,to,throws,exception,the,function,may,throw,exceptions,which,cause,the,streaming,program,to,fail,and,go,into,recovery;public,abstract,void,process,element,final,in1,value,final,keyed,read,only,context,ctx,final,collector,out,out,throws,exception
KeyedBroadcastProcessFunction -> public abstract void processElement(final IN1 value, final KeyedReadOnlyContext ctx, final Collector<OUT> out) throws Exception_;1518008896;This method is called for each element in the (non-broadcast)_{@link org.apache.flink.streaming.api.datastream.KeyedStream keyed stream}.__<p>It can output zero or more elements using the {@link Collector} parameter,_query the current processing/event time, and also query and update the local keyed state._In addition, it can get a {@link TimerService} for registering timers and querying the time._Finally, it has <b>read-only</b> access to the broadcast state._The context is only valid during the invocation of this method, do not store it.__@param value The stream element._@param ctx A {@link KeyedReadOnlyContext} that allows querying the timestamp of the element,_querying the current processing/event time and iterating the broadcast state_with <b>read-only</b> access._The context is only valid during the invocation of this method, do not store it._@param out The collector to emit resulting elements to_@throws Exception The function may throw exceptions which cause the streaming program_to fail and go into recovery.;public abstract void processElement(final IN1 value, final KeyedReadOnlyContext ctx, final Collector<OUT> out) throws Exception_;this,method,is,called,for,each,element,in,the,non,broadcast,link,org,apache,flink,streaming,api,datastream,keyed,stream,keyed,stream,p,it,can,output,zero,or,more,elements,using,the,link,collector,parameter,query,the,current,processing,event,time,and,also,query,and,update,the,local,keyed,state,in,addition,it,can,get,a,link,timer,service,for,registering,timers,and,querying,the,time,finally,it,has,b,read,only,b,access,to,the,broadcast,state,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,value,the,stream,element,param,ctx,a,link,keyed,read,only,context,that,allows,querying,the,timestamp,of,the,element,querying,the,current,processing,event,time,and,iterating,the,broadcast,state,with,b,read,only,b,access,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,to,emit,resulting,elements,to,throws,exception,the,function,may,throw,exceptions,which,cause,the,streaming,program,to,fail,and,go,into,recovery;public,abstract,void,process,element,final,in1,value,final,keyed,read,only,context,ctx,final,collector,out,out,throws,exception
KeyedBroadcastProcessFunction -> public abstract void processElement(final IN1 value, final KeyedReadOnlyContext ctx, final Collector<OUT> out) throws Exception_;1518008932;This method is called for each element in the (non-broadcast)_{@link org.apache.flink.streaming.api.datastream.KeyedStream keyed stream}.__<p>It can output zero or more elements using the {@link Collector} parameter,_query the current processing/event time, and also query and update the local keyed state._In addition, it can get a {@link TimerService} for registering timers and querying the time._Finally, it has <b>read-only</b> access to the broadcast state._The context is only valid during the invocation of this method, do not store it.__@param value The stream element._@param ctx A {@link KeyedReadOnlyContext} that allows querying the timestamp of the element,_querying the current processing/event time and iterating the broadcast state_with <b>read-only</b> access._The context is only valid during the invocation of this method, do not store it._@param out The collector to emit resulting elements to_@throws Exception The function may throw exceptions which cause the streaming program_to fail and go into recovery.;public abstract void processElement(final IN1 value, final KeyedReadOnlyContext ctx, final Collector<OUT> out) throws Exception_;this,method,is,called,for,each,element,in,the,non,broadcast,link,org,apache,flink,streaming,api,datastream,keyed,stream,keyed,stream,p,it,can,output,zero,or,more,elements,using,the,link,collector,parameter,query,the,current,processing,event,time,and,also,query,and,update,the,local,keyed,state,in,addition,it,can,get,a,link,timer,service,for,registering,timers,and,querying,the,time,finally,it,has,b,read,only,b,access,to,the,broadcast,state,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,value,the,stream,element,param,ctx,a,link,keyed,read,only,context,that,allows,querying,the,timestamp,of,the,element,querying,the,current,processing,event,time,and,iterating,the,broadcast,state,with,b,read,only,b,access,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,to,emit,resulting,elements,to,throws,exception,the,function,may,throw,exceptions,which,cause,the,streaming,program,to,fail,and,go,into,recovery;public,abstract,void,process,element,final,in1,value,final,keyed,read,only,context,ctx,final,collector,out,out,throws,exception
KeyedBroadcastProcessFunction -> public abstract void processElement(final IN1 value, final KeyedReadOnlyContext ctx, final Collector<OUT> out) throws Exception_;1520354103;This method is called for each element in the (non-broadcast)_{@link org.apache.flink.streaming.api.datastream.KeyedStream keyed stream}.__<p>It can output zero or more elements using the {@link Collector} parameter,_query the current processing/event time, and also query and update the local keyed state._In addition, it can get a {@link TimerService} for registering timers and querying the time._Finally, it has <b>read-only</b> access to the broadcast state._The context is only valid during the invocation of this method, do not store it.__@param value The stream element._@param ctx A {@link KeyedReadOnlyContext} that allows querying the timestamp of the element,_querying the current processing/event time and iterating the broadcast state_with <b>read-only</b> access._The context is only valid during the invocation of this method, do not store it._@param out The collector to emit resulting elements to_@throws Exception The function may throw exceptions which cause the streaming program_to fail and go into recovery.;public abstract void processElement(final IN1 value, final KeyedReadOnlyContext ctx, final Collector<OUT> out) throws Exception_;this,method,is,called,for,each,element,in,the,non,broadcast,link,org,apache,flink,streaming,api,datastream,keyed,stream,keyed,stream,p,it,can,output,zero,or,more,elements,using,the,link,collector,parameter,query,the,current,processing,event,time,and,also,query,and,update,the,local,keyed,state,in,addition,it,can,get,a,link,timer,service,for,registering,timers,and,querying,the,time,finally,it,has,b,read,only,b,access,to,the,broadcast,state,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,value,the,stream,element,param,ctx,a,link,keyed,read,only,context,that,allows,querying,the,timestamp,of,the,element,querying,the,current,processing,event,time,and,iterating,the,broadcast,state,with,b,read,only,b,access,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,to,emit,resulting,elements,to,throws,exception,the,function,may,throw,exceptions,which,cause,the,streaming,program,to,fail,and,go,into,recovery;public,abstract,void,process,element,final,in1,value,final,keyed,read,only,context,ctx,final,collector,out,out,throws,exception
KeyedBroadcastProcessFunction -> ReadOnlyContext -> public abstract TimerService timerService()_;1523545470;A {@link TimerService} for querying time and registering timers.;public abstract TimerService timerService()_;a,link,timer,service,for,querying,time,and,registering,timers;public,abstract,timer,service,timer,service
KeyedBroadcastProcessFunction -> ReadOnlyContext -> public abstract TimerService timerService()_;1531296542;A {@link TimerService} for querying time and registering timers.;public abstract TimerService timerService()_;a,link,timer,service,for,querying,time,and,registering,timers;public,abstract,timer,service,timer,service
KeyedBroadcastProcessFunction -> public void onTimer(final long timestamp, final OnTimerContext ctx, final Collector<OUT> out) throws Exception;1518008865;Called when a timer set using {@link TimerService} fires.__@param timestamp The timestamp of the firing timer._@param ctx An {@link OnTimerContext} that allows querying the timestamp of the firing timer,_querying the current processing/event time, iterating the broadcast state_with <b>read-only</b> access, querying the {@link TimeDomain} of the firing timer_and getting a {@link TimerService} for registering timers and querying the time._The context is only valid during the invocation of this method, do not store it._@param out The collector for returning result values.__@throws Exception This method may throw exceptions. Throwing an exception will cause the operation_to fail and may trigger recovery.;public void onTimer(final long timestamp, final OnTimerContext ctx, final Collector<OUT> out) throws Exception {_		_	};called,when,a,timer,set,using,link,timer,service,fires,param,timestamp,the,timestamp,of,the,firing,timer,param,ctx,an,link,on,timer,context,that,allows,querying,the,timestamp,of,the,firing,timer,querying,the,current,processing,event,time,iterating,the,broadcast,state,with,b,read,only,b,access,querying,the,link,time,domain,of,the,firing,timer,and,getting,a,link,timer,service,for,registering,timers,and,querying,the,time,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,for,returning,result,values,throws,exception,this,method,may,throw,exceptions,throwing,an,exception,will,cause,the,operation,to,fail,and,may,trigger,recovery;public,void,on,timer,final,long,timestamp,final,on,timer,context,ctx,final,collector,out,out,throws,exception
KeyedBroadcastProcessFunction -> public void onTimer(final long timestamp, final OnTimerContext ctx, final Collector<OUT> out) throws Exception;1518008896;Called when a timer set using {@link TimerService} fires.__@param timestamp The timestamp of the firing timer._@param ctx An {@link OnTimerContext} that allows querying the timestamp of the firing timer,_querying the current processing/event time, iterating the broadcast state_with <b>read-only</b> access, querying the {@link TimeDomain} of the firing timer_and getting a {@link TimerService} for registering timers and querying the time._The context is only valid during the invocation of this method, do not store it._@param out The collector for returning result values.__@throws Exception This method may throw exceptions. Throwing an exception will cause the operation_to fail and may trigger recovery.;public void onTimer(final long timestamp, final OnTimerContext ctx, final Collector<OUT> out) throws Exception {_		_	};called,when,a,timer,set,using,link,timer,service,fires,param,timestamp,the,timestamp,of,the,firing,timer,param,ctx,an,link,on,timer,context,that,allows,querying,the,timestamp,of,the,firing,timer,querying,the,current,processing,event,time,iterating,the,broadcast,state,with,b,read,only,b,access,querying,the,link,time,domain,of,the,firing,timer,and,getting,a,link,timer,service,for,registering,timers,and,querying,the,time,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,for,returning,result,values,throws,exception,this,method,may,throw,exceptions,throwing,an,exception,will,cause,the,operation,to,fail,and,may,trigger,recovery;public,void,on,timer,final,long,timestamp,final,on,timer,context,ctx,final,collector,out,out,throws,exception
KeyedBroadcastProcessFunction -> public void onTimer(final long timestamp, final OnTimerContext ctx, final Collector<OUT> out) throws Exception;1518008932;Called when a timer set using {@link TimerService} fires.__@param timestamp The timestamp of the firing timer._@param ctx An {@link OnTimerContext} that allows querying the timestamp of the firing timer,_querying the current processing/event time, iterating the broadcast state_with <b>read-only</b> access, querying the {@link TimeDomain} of the firing timer_and getting a {@link TimerService} for registering timers and querying the time._The context is only valid during the invocation of this method, do not store it._@param out The collector for returning result values.__@throws Exception This method may throw exceptions. Throwing an exception will cause the operation_to fail and may trigger recovery.;public void onTimer(final long timestamp, final OnTimerContext ctx, final Collector<OUT> out) throws Exception {_		_	};called,when,a,timer,set,using,link,timer,service,fires,param,timestamp,the,timestamp,of,the,firing,timer,param,ctx,an,link,on,timer,context,that,allows,querying,the,timestamp,of,the,firing,timer,querying,the,current,processing,event,time,iterating,the,broadcast,state,with,b,read,only,b,access,querying,the,link,time,domain,of,the,firing,timer,and,getting,a,link,timer,service,for,registering,timers,and,querying,the,time,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,for,returning,result,values,throws,exception,this,method,may,throw,exceptions,throwing,an,exception,will,cause,the,operation,to,fail,and,may,trigger,recovery;public,void,on,timer,final,long,timestamp,final,on,timer,context,ctx,final,collector,out,out,throws,exception
KeyedBroadcastProcessFunction -> public void onTimer(final long timestamp, final OnTimerContext ctx, final Collector<OUT> out) throws Exception;1520354103;Called when a timer set using {@link TimerService} fires.__@param timestamp The timestamp of the firing timer._@param ctx An {@link OnTimerContext} that allows querying the timestamp of the firing timer,_querying the current processing/event time, iterating the broadcast state_with <b>read-only</b> access, querying the {@link TimeDomain} of the firing timer_and getting a {@link TimerService} for registering timers and querying the time._The context is only valid during the invocation of this method, do not store it._@param out The collector for returning result values.__@throws Exception This method may throw exceptions. Throwing an exception will cause the operation_to fail and may trigger recovery.;public void onTimer(final long timestamp, final OnTimerContext ctx, final Collector<OUT> out) throws Exception {_		_	};called,when,a,timer,set,using,link,timer,service,fires,param,timestamp,the,timestamp,of,the,firing,timer,param,ctx,an,link,on,timer,context,that,allows,querying,the,timestamp,of,the,firing,timer,querying,the,current,processing,event,time,iterating,the,broadcast,state,with,b,read,only,b,access,querying,the,link,time,domain,of,the,firing,timer,and,getting,a,link,timer,service,for,registering,timers,and,querying,the,time,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,for,returning,result,values,throws,exception,this,method,may,throw,exceptions,throwing,an,exception,will,cause,the,operation,to,fail,and,may,trigger,recovery;public,void,on,timer,final,long,timestamp,final,on,timer,context,ctx,final,collector,out,out,throws,exception
KeyedBroadcastProcessFunction -> public void onTimer(final long timestamp, final OnTimerContext ctx, final Collector<OUT> out) throws Exception;1523545470;Called when a timer set using {@link TimerService} fires.__@param timestamp The timestamp of the firing timer._@param ctx An {@link OnTimerContext} that allows querying the timestamp of the firing timer,_querying the current processing/event time, iterating the broadcast state_with <b>read-only</b> access, querying the {@link TimeDomain} of the firing timer_and getting a {@link TimerService} for registering timers and querying the time._The context is only valid during the invocation of this method, do not store it._@param out The collector for returning result values.__@throws Exception This method may throw exceptions. Throwing an exception will cause the operation_to fail and may trigger recovery.;public void onTimer(final long timestamp, final OnTimerContext ctx, final Collector<OUT> out) throws Exception {_		_	};called,when,a,timer,set,using,link,timer,service,fires,param,timestamp,the,timestamp,of,the,firing,timer,param,ctx,an,link,on,timer,context,that,allows,querying,the,timestamp,of,the,firing,timer,querying,the,current,processing,event,time,iterating,the,broadcast,state,with,b,read,only,b,access,querying,the,link,time,domain,of,the,firing,timer,and,getting,a,link,timer,service,for,registering,timers,and,querying,the,time,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,for,returning,result,values,throws,exception,this,method,may,throw,exceptions,throwing,an,exception,will,cause,the,operation,to,fail,and,may,trigger,recovery;public,void,on,timer,final,long,timestamp,final,on,timer,context,ctx,final,collector,out,out,throws,exception
KeyedBroadcastProcessFunction -> public void onTimer(final long timestamp, final OnTimerContext ctx, final Collector<OUT> out) throws Exception;1531296542;Called when a timer set using {@link TimerService} fires.__@param timestamp The timestamp of the firing timer._@param ctx An {@link OnTimerContext} that allows querying the timestamp of the firing timer,_querying the current processing/event time, iterating the broadcast state_with <b>read-only</b> access, querying the {@link TimeDomain} of the firing timer_and getting a {@link TimerService} for registering timers and querying the time._The context is only valid during the invocation of this method, do not store it._@param out The collector for returning result values.__@throws Exception This method may throw exceptions. Throwing an exception will cause the operation_to fail and may trigger recovery.;public void onTimer(final long timestamp, final OnTimerContext ctx, final Collector<OUT> out) throws Exception {_		_	};called,when,a,timer,set,using,link,timer,service,fires,param,timestamp,the,timestamp,of,the,firing,timer,param,ctx,an,link,on,timer,context,that,allows,querying,the,timestamp,of,the,firing,timer,querying,the,current,processing,event,time,iterating,the,broadcast,state,with,b,read,only,b,access,querying,the,link,time,domain,of,the,firing,timer,and,getting,a,link,timer,service,for,registering,timers,and,querying,the,time,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,for,returning,result,values,throws,exception,this,method,may,throw,exceptions,throwing,an,exception,will,cause,the,operation,to,fail,and,may,trigger,recovery;public,void,on,timer,final,long,timestamp,final,on,timer,context,ctx,final,collector,out,out,throws,exception
KeyedBroadcastProcessFunction -> public abstract void processBroadcastElement(final IN2 value, final KeyedContext ctx, final Collector<OUT> out) throws Exception_;1518008896;This method is called for each element in the_{@link org.apache.flink.streaming.api.datastream.BroadcastStream broadcast stream}.__<p>It can output zero or more elements using the {@link Collector} parameter,_query the current processing/event time, and also query and update the internal_{@link org.apache.flink.api.common.state.BroadcastState broadcast state}. In addition, it_can register a {@link KeyedStateFunction function} to be applied to all keyed states on_the local partition. These can be done through the provided {@link Context}._The context is only valid during the invocation of this method, do not store it.__@param value The stream element._@param ctx A {@link Context} that allows querying the timestamp of the element,_querying the current processing/event time and updating the broadcast state._In addition, it allows the registration of a {@link KeyedStateFunction function}_to be applied to all keyed state with a given {@link StateDescriptor} on the local partition._The context is only valid during the invocation of this method, do not store it._@param out The collector to emit resulting elements to_@throws Exception The function may throw exceptions which cause the streaming program_to fail and go into recovery.;public abstract void processBroadcastElement(final IN2 value, final KeyedContext ctx, final Collector<OUT> out) throws Exception_;this,method,is,called,for,each,element,in,the,link,org,apache,flink,streaming,api,datastream,broadcast,stream,broadcast,stream,p,it,can,output,zero,or,more,elements,using,the,link,collector,parameter,query,the,current,processing,event,time,and,also,query,and,update,the,internal,link,org,apache,flink,api,common,state,broadcast,state,broadcast,state,in,addition,it,can,register,a,link,keyed,state,function,function,to,be,applied,to,all,keyed,states,on,the,local,partition,these,can,be,done,through,the,provided,link,context,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,value,the,stream,element,param,ctx,a,link,context,that,allows,querying,the,timestamp,of,the,element,querying,the,current,processing,event,time,and,updating,the,broadcast,state,in,addition,it,allows,the,registration,of,a,link,keyed,state,function,function,to,be,applied,to,all,keyed,state,with,a,given,link,state,descriptor,on,the,local,partition,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,to,emit,resulting,elements,to,throws,exception,the,function,may,throw,exceptions,which,cause,the,streaming,program,to,fail,and,go,into,recovery;public,abstract,void,process,broadcast,element,final,in2,value,final,keyed,context,ctx,final,collector,out,out,throws,exception
KeyedBroadcastProcessFunction -> public abstract void processBroadcastElement(final IN2 value, final KeyedContext ctx, final Collector<OUT> out) throws Exception_;1518008932;This method is called for each element in the_{@link org.apache.flink.streaming.api.datastream.BroadcastStream broadcast stream}.__<p>It can output zero or more elements using the {@link Collector} parameter,_query the current processing/event time, and also query and update the internal_{@link org.apache.flink.api.common.state.BroadcastState broadcast state}. In addition, it_can register a {@link KeyedStateFunction function} to be applied to all keyed states on_the local partition. These can be done through the provided {@link Context}._The context is only valid during the invocation of this method, do not store it.__@param value The stream element._@param ctx A {@link Context} that allows querying the timestamp of the element,_querying the current processing/event time and updating the broadcast state._In addition, it allows the registration of a {@link KeyedStateFunction function}_to be applied to all keyed state with a given {@link StateDescriptor} on the local partition._The context is only valid during the invocation of this method, do not store it._@param out The collector to emit resulting elements to_@throws Exception The function may throw exceptions which cause the streaming program_to fail and go into recovery.;public abstract void processBroadcastElement(final IN2 value, final KeyedContext ctx, final Collector<OUT> out) throws Exception_;this,method,is,called,for,each,element,in,the,link,org,apache,flink,streaming,api,datastream,broadcast,stream,broadcast,stream,p,it,can,output,zero,or,more,elements,using,the,link,collector,parameter,query,the,current,processing,event,time,and,also,query,and,update,the,internal,link,org,apache,flink,api,common,state,broadcast,state,broadcast,state,in,addition,it,can,register,a,link,keyed,state,function,function,to,be,applied,to,all,keyed,states,on,the,local,partition,these,can,be,done,through,the,provided,link,context,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,value,the,stream,element,param,ctx,a,link,context,that,allows,querying,the,timestamp,of,the,element,querying,the,current,processing,event,time,and,updating,the,broadcast,state,in,addition,it,allows,the,registration,of,a,link,keyed,state,function,function,to,be,applied,to,all,keyed,state,with,a,given,link,state,descriptor,on,the,local,partition,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,to,emit,resulting,elements,to,throws,exception,the,function,may,throw,exceptions,which,cause,the,streaming,program,to,fail,and,go,into,recovery;public,abstract,void,process,broadcast,element,final,in2,value,final,keyed,context,ctx,final,collector,out,out,throws,exception
KeyedBroadcastProcessFunction -> public abstract void processBroadcastElement(final IN2 value, final KeyedContext ctx, final Collector<OUT> out) throws Exception_;1520354103;This method is called for each element in the_{@link org.apache.flink.streaming.api.datastream.BroadcastStream broadcast stream}.__<p>It can output zero or more elements using the {@link Collector} parameter,_query the current processing/event time, and also query and update the internal_{@link org.apache.flink.api.common.state.BroadcastState broadcast state}. In addition, it_can register a {@link KeyedStateFunction function} to be applied to all keyed states on_the local partition. These can be done through the provided {@link Context}._The context is only valid during the invocation of this method, do not store it.__@param value The stream element._@param ctx A {@link Context} that allows querying the timestamp of the element,_querying the current processing/event time and updating the broadcast state._In addition, it allows the registration of a {@link KeyedStateFunction function}_to be applied to all keyed state with a given {@link StateDescriptor} on the local partition._The context is only valid during the invocation of this method, do not store it._@param out The collector to emit resulting elements to_@throws Exception The function may throw exceptions which cause the streaming program_to fail and go into recovery.;public abstract void processBroadcastElement(final IN2 value, final KeyedContext ctx, final Collector<OUT> out) throws Exception_;this,method,is,called,for,each,element,in,the,link,org,apache,flink,streaming,api,datastream,broadcast,stream,broadcast,stream,p,it,can,output,zero,or,more,elements,using,the,link,collector,parameter,query,the,current,processing,event,time,and,also,query,and,update,the,internal,link,org,apache,flink,api,common,state,broadcast,state,broadcast,state,in,addition,it,can,register,a,link,keyed,state,function,function,to,be,applied,to,all,keyed,states,on,the,local,partition,these,can,be,done,through,the,provided,link,context,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,value,the,stream,element,param,ctx,a,link,context,that,allows,querying,the,timestamp,of,the,element,querying,the,current,processing,event,time,and,updating,the,broadcast,state,in,addition,it,allows,the,registration,of,a,link,keyed,state,function,function,to,be,applied,to,all,keyed,state,with,a,given,link,state,descriptor,on,the,local,partition,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,to,emit,resulting,elements,to,throws,exception,the,function,may,throw,exceptions,which,cause,the,streaming,program,to,fail,and,go,into,recovery;public,abstract,void,process,broadcast,element,final,in2,value,final,keyed,context,ctx,final,collector,out,out,throws,exception
KeyedBroadcastProcessFunction -> KeyedContext -> public abstract <VS, S extends State> void applyToKeyedState( 				final StateDescriptor<S, VS> stateDescriptor, 				final KeyedStateFunction<KS, S> function) throws Exception_;1518008896;Applies the provided {@code function} to the state_associated with the provided {@code state descriptor}.__@param stateDescriptor the descriptor of the state to be processed._@param function the function to be applied.;public abstract <VS, S extends State> void applyToKeyedState(_				final StateDescriptor<S, VS> stateDescriptor,_				final KeyedStateFunction<KS, S> function) throws Exception_;applies,the,provided,code,function,to,the,state,associated,with,the,provided,code,state,descriptor,param,state,descriptor,the,descriptor,of,the,state,to,be,processed,param,function,the,function,to,be,applied;public,abstract,vs,s,extends,state,void,apply,to,keyed,state,final,state,descriptor,s,vs,state,descriptor,final,keyed,state,function,ks,s,function,throws,exception
KeyedBroadcastProcessFunction -> KeyedContext -> public abstract <VS, S extends State> void applyToKeyedState( 				final StateDescriptor<S, VS> stateDescriptor, 				final KeyedStateFunction<KS, S> function) throws Exception_;1518008932;Applies the provided {@code function} to the state_associated with the provided {@code state descriptor}.__@param stateDescriptor the descriptor of the state to be processed._@param function the function to be applied.;public abstract <VS, S extends State> void applyToKeyedState(_				final StateDescriptor<S, VS> stateDescriptor,_				final KeyedStateFunction<KS, S> function) throws Exception_;applies,the,provided,code,function,to,the,state,associated,with,the,provided,code,state,descriptor,param,state,descriptor,the,descriptor,of,the,state,to,be,processed,param,function,the,function,to,be,applied;public,abstract,vs,s,extends,state,void,apply,to,keyed,state,final,state,descriptor,s,vs,state,descriptor,final,keyed,state,function,ks,s,function,throws,exception
KeyedBroadcastProcessFunction -> KeyedContext -> public abstract <VS, S extends State> void applyToKeyedState( 				final StateDescriptor<S, VS> stateDescriptor, 				final KeyedStateFunction<KS, S> function) throws Exception_;1520354103;Applies the provided {@code function} to the state_associated with the provided {@code state descriptor}.__@param stateDescriptor the descriptor of the state to be processed._@param function the function to be applied.;public abstract <VS, S extends State> void applyToKeyedState(_				final StateDescriptor<S, VS> stateDescriptor,_				final KeyedStateFunction<KS, S> function) throws Exception_;applies,the,provided,code,function,to,the,state,associated,with,the,provided,code,state,descriptor,param,state,descriptor,the,descriptor,of,the,state,to,be,processed,param,function,the,function,to,be,applied;public,abstract,vs,s,extends,state,void,apply,to,keyed,state,final,state,descriptor,s,vs,state,descriptor,final,keyed,state,function,ks,s,function,throws,exception
KeyedBroadcastProcessFunction -> OnTimerContext -> public abstract KS getCurrentKey()_;1520354103;Get the key of the firing timer.;public abstract KS getCurrentKey()_;get,the,key,of,the,firing,timer;public,abstract,ks,get,current,key
KeyedBroadcastProcessFunction -> OnTimerContext -> public abstract KS getCurrentKey()_;1523545470;Get the key of the firing timer.;public abstract KS getCurrentKey()_;get,the,key,of,the,firing,timer;public,abstract,ks,get,current,key
KeyedBroadcastProcessFunction -> Context -> public abstract <VS, S extends State> void applyToKeyedState( 				final StateDescriptor<S, VS> stateDescriptor, 				final KeyedStateFunction<KS, S> function) throws Exception_;1523545470;Applies the provided {@code function} to the state_associated with the provided {@code state descriptor}.__@param stateDescriptor the descriptor of the state to be processed._@param function the function to be applied.;public abstract <VS, S extends State> void applyToKeyedState(_				final StateDescriptor<S, VS> stateDescriptor,_				final KeyedStateFunction<KS, S> function) throws Exception_;applies,the,provided,code,function,to,the,state,associated,with,the,provided,code,state,descriptor,param,state,descriptor,the,descriptor,of,the,state,to,be,processed,param,function,the,function,to,be,applied;public,abstract,vs,s,extends,state,void,apply,to,keyed,state,final,state,descriptor,s,vs,state,descriptor,final,keyed,state,function,ks,s,function,throws,exception
KeyedBroadcastProcessFunction -> Context -> public abstract <VS, S extends State> void applyToKeyedState( 				final StateDescriptor<S, VS> stateDescriptor, 				final KeyedStateFunction<KS, S> function) throws Exception_;1531296542;Applies the provided {@code function} to the state_associated with the provided {@code state descriptor}.__@param stateDescriptor the descriptor of the state to be processed._@param function the function to be applied.;public abstract <VS, S extends State> void applyToKeyedState(_				final StateDescriptor<S, VS> stateDescriptor,_				final KeyedStateFunction<KS, S> function) throws Exception_;applies,the,provided,code,function,to,the,state,associated,with,the,provided,code,state,descriptor,param,state,descriptor,the,descriptor,of,the,state,to,be,processed,param,function,the,function,to,be,applied;public,abstract,vs,s,extends,state,void,apply,to,keyed,state,final,state,descriptor,s,vs,state,descriptor,final,keyed,state,function,ks,s,function,throws,exception
KeyedBroadcastProcessFunction -> public abstract void processElement(final IN1 value, final ReadOnlyContext ctx, final Collector<OUT> out) throws Exception_;1523545470;This method is called for each element in the (non-broadcast)_{@link org.apache.flink.streaming.api.datastream.KeyedStream keyed stream}.__<p>It can output zero or more elements using the {@link Collector} parameter,_query the current processing/event time, and also query and update the local keyed state._In addition, it can get a {@link TimerService} for registering timers and querying the time._Finally, it has <b>read-only</b> access to the broadcast state._The context is only valid during the invocation of this method, do not store it.__@param value The stream element._@param ctx A {@link ReadOnlyContext} that allows querying the timestamp of the element,_querying the current processing/event time and iterating the broadcast state_with <b>read-only</b> access._The context is only valid during the invocation of this method, do not store it._@param out The collector to emit resulting elements to_@throws Exception The function may throw exceptions which cause the streaming program_to fail and go into recovery.;public abstract void processElement(final IN1 value, final ReadOnlyContext ctx, final Collector<OUT> out) throws Exception_;this,method,is,called,for,each,element,in,the,non,broadcast,link,org,apache,flink,streaming,api,datastream,keyed,stream,keyed,stream,p,it,can,output,zero,or,more,elements,using,the,link,collector,parameter,query,the,current,processing,event,time,and,also,query,and,update,the,local,keyed,state,in,addition,it,can,get,a,link,timer,service,for,registering,timers,and,querying,the,time,finally,it,has,b,read,only,b,access,to,the,broadcast,state,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,value,the,stream,element,param,ctx,a,link,read,only,context,that,allows,querying,the,timestamp,of,the,element,querying,the,current,processing,event,time,and,iterating,the,broadcast,state,with,b,read,only,b,access,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,to,emit,resulting,elements,to,throws,exception,the,function,may,throw,exceptions,which,cause,the,streaming,program,to,fail,and,go,into,recovery;public,abstract,void,process,element,final,in1,value,final,read,only,context,ctx,final,collector,out,out,throws,exception
KeyedBroadcastProcessFunction -> public abstract void processElement(final IN1 value, final ReadOnlyContext ctx, final Collector<OUT> out) throws Exception_;1531296542;This method is called for each element in the (non-broadcast)_{@link org.apache.flink.streaming.api.datastream.KeyedStream keyed stream}.__<p>It can output zero or more elements using the {@link Collector} parameter,_query the current processing/event time, and also query and update the local keyed state._In addition, it can get a {@link TimerService} for registering timers and querying the time._Finally, it has <b>read-only</b> access to the broadcast state._The context is only valid during the invocation of this method, do not store it.__@param value The stream element._@param ctx A {@link ReadOnlyContext} that allows querying the timestamp of the element,_querying the current processing/event time and iterating the broadcast state_with <b>read-only</b> access._The context is only valid during the invocation of this method, do not store it._@param out The collector to emit resulting elements to_@throws Exception The function may throw exceptions which cause the streaming program_to fail and go into recovery.;public abstract void processElement(final IN1 value, final ReadOnlyContext ctx, final Collector<OUT> out) throws Exception_;this,method,is,called,for,each,element,in,the,non,broadcast,link,org,apache,flink,streaming,api,datastream,keyed,stream,keyed,stream,p,it,can,output,zero,or,more,elements,using,the,link,collector,parameter,query,the,current,processing,event,time,and,also,query,and,update,the,local,keyed,state,in,addition,it,can,get,a,link,timer,service,for,registering,timers,and,querying,the,time,finally,it,has,b,read,only,b,access,to,the,broadcast,state,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,value,the,stream,element,param,ctx,a,link,read,only,context,that,allows,querying,the,timestamp,of,the,element,querying,the,current,processing,event,time,and,iterating,the,broadcast,state,with,b,read,only,b,access,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,to,emit,resulting,elements,to,throws,exception,the,function,may,throw,exceptions,which,cause,the,streaming,program,to,fail,and,go,into,recovery;public,abstract,void,process,element,final,in1,value,final,read,only,context,ctx,final,collector,out,out,throws,exception
KeyedBroadcastProcessFunction -> KeyedReadOnlyContext -> public abstract TimerService timerService()_;1518008865;A {@link TimerService} for querying time and registering timers.;public abstract TimerService timerService()_;a,link,timer,service,for,querying,time,and,registering,timers;public,abstract,timer,service,timer,service
KeyedBroadcastProcessFunction -> KeyedReadOnlyContext -> public abstract TimerService timerService()_;1518008896;A {@link TimerService} for querying time and registering timers.;public abstract TimerService timerService()_;a,link,timer,service,for,querying,time,and,registering,timers;public,abstract,timer,service,timer,service
KeyedBroadcastProcessFunction -> KeyedReadOnlyContext -> public abstract TimerService timerService()_;1518008932;A {@link TimerService} for querying time and registering timers.;public abstract TimerService timerService()_;a,link,timer,service,for,querying,time,and,registering,timers;public,abstract,timer,service,timer,service
KeyedBroadcastProcessFunction -> KeyedReadOnlyContext -> public abstract TimerService timerService()_;1520354103;A {@link TimerService} for querying time and registering timers.;public abstract TimerService timerService()_;a,link,timer,service,for,querying,time,and,registering,timers;public,abstract,timer,service,timer,service
