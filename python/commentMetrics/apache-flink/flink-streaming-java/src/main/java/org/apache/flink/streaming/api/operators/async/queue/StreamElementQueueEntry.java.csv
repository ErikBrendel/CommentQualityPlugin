# id;timestamp;commentText;codeText;commentWords;codeWords
StreamElementQueueEntry -> public void onComplete( 			final AcceptFunction<StreamElementQueueEntry<T>> completeFunction, 			Executor executor);1482206691;Register the given complete function to be called once this queue entry has been completed.__@param completeFunction to call when the queue entry has been completed_@param executor to run the complete function;public void onComplete(_			final AcceptFunction<StreamElementQueueEntry<T>> completeFunction,_			Executor executor) {_		final StreamElementQueueEntry<T> thisReference = this___		getFuture().thenAcceptAsync(new AcceptFunction<T>() {_			@Override_			public void accept(T value) {_				completeFunction.accept(thisReference)__			}_		}, executor)__	};register,the,given,complete,function,to,be,called,once,this,queue,entry,has,been,completed,param,complete,function,to,call,when,the,queue,entry,has,been,completed,param,executor,to,run,the,complete,function;public,void,on,complete,final,accept,function,stream,element,queue,entry,t,complete,function,executor,executor,final,stream,element,queue,entry,t,this,reference,this,get,future,then,accept,async,new,accept,function,t,override,public,void,accept,t,value,complete,function,accept,this,reference,executor
StreamElementQueueEntry -> public void onComplete( 			final AcceptFunction<StreamElementQueueEntry<T>> completeFunction, 			Executor executor);1482206691;Register the given complete function to be called once this queue entry has been completed.__@param completeFunction to call when the queue entry has been completed_@param executor to run the complete function;public void onComplete(_			final AcceptFunction<StreamElementQueueEntry<T>> completeFunction,_			Executor executor) {_		final StreamElementQueueEntry<T> thisReference = this___		getFuture().thenAcceptAsync(new AcceptFunction<T>() {_			@Override_			public void accept(T value) {_				completeFunction.accept(thisReference)__			}_		}, executor)__	};register,the,given,complete,function,to,be,called,once,this,queue,entry,has,been,completed,param,complete,function,to,call,when,the,queue,entry,has,been,completed,param,executor,to,run,the,complete,function;public,void,on,complete,final,accept,function,stream,element,queue,entry,t,complete,function,executor,executor,final,stream,element,queue,entry,t,this,reference,this,get,future,then,accept,async,new,accept,function,t,override,public,void,accept,t,value,complete,function,accept,this,reference,executor
StreamElementQueueEntry -> public void onComplete( 			final AcceptFunction<StreamElementQueueEntry<T>> completeFunction, 			Executor executor);1493195810;Register the given complete function to be called once this queue entry has been completed.__@param completeFunction to call when the queue entry has been completed_@param executor to run the complete function;public void onComplete(_			final AcceptFunction<StreamElementQueueEntry<T>> completeFunction,_			Executor executor) {_		final StreamElementQueueEntry<T> thisReference = this___		getFuture().thenAcceptAsync(new AcceptFunction<T>() {_			@Override_			public void accept(T value) {_				completeFunction.accept(thisReference)__			}_		}, executor)__	};register,the,given,complete,function,to,be,called,once,this,queue,entry,has,been,completed,param,complete,function,to,call,when,the,queue,entry,has,been,completed,param,executor,to,run,the,complete,function;public,void,on,complete,final,accept,function,stream,element,queue,entry,t,complete,function,executor,executor,final,stream,element,queue,entry,t,this,reference,this,get,future,then,accept,async,new,accept,function,t,override,public,void,accept,t,value,complete,function,accept,this,reference,executor
StreamElementQueueEntry -> public void onComplete( 			final AcceptFunction<StreamElementQueueEntry<T>> completeFunction, 			Executor executor);1493195810;Register the given complete function to be called once this queue entry has been completed.__@param completeFunction to call when the queue entry has been completed_@param executor to run the complete function;public void onComplete(_			final AcceptFunction<StreamElementQueueEntry<T>> completeFunction,_			Executor executor) {_		final StreamElementQueueEntry<T> thisReference = this___		getFuture().thenAcceptAsync(new AcceptFunction<T>() {_			@Override_			public void accept(T value) {_				completeFunction.accept(thisReference)__			}_		}, executor)__	};register,the,given,complete,function,to,be,called,once,this,queue,entry,has,been,completed,param,complete,function,to,call,when,the,queue,entry,has,been,completed,param,executor,to,run,the,complete,function;public,void,on,complete,final,accept,function,stream,element,queue,entry,t,complete,function,executor,executor,final,stream,element,queue,entry,t,this,reference,this,get,future,then,accept,async,new,accept,function,t,override,public,void,accept,t,value,complete,function,accept,this,reference,executor
StreamElementQueueEntry -> public void onComplete( 			final AcceptFunction<StreamElementQueueEntry<T>> completeFunction, 			Executor executor);1493975289;Register the given complete function to be called once this queue entry has been completed.__@param completeFunction to call when the queue entry has been completed_@param executor to run the complete function;public void onComplete(_			final AcceptFunction<StreamElementQueueEntry<T>> completeFunction,_			Executor executor) {_		final StreamElementQueueEntry<T> thisReference = this___		getFuture().handleAsync(new BiFunction<T, Throwable, Void>() {_			@Override_			public Void apply(T t, Throwable throwable) {_				_				_				completeFunction.accept(thisReference)___				return null__			}_		}, executor)__	};register,the,given,complete,function,to,be,called,once,this,queue,entry,has,been,completed,param,complete,function,to,call,when,the,queue,entry,has,been,completed,param,executor,to,run,the,complete,function;public,void,on,complete,final,accept,function,stream,element,queue,entry,t,complete,function,executor,executor,final,stream,element,queue,entry,t,this,reference,this,get,future,handle,async,new,bi,function,t,throwable,void,override,public,void,apply,t,t,throwable,throwable,complete,function,accept,this,reference,return,null,executor
StreamElementQueueEntry -> public void onComplete( 			final AcceptFunction<StreamElementQueueEntry<T>> completeFunction, 			Executor executor);1495484544;Register the given complete function to be called once this queue entry has been completed.__@param completeFunction to call when the queue entry has been completed_@param executor to run the complete function;public void onComplete(_			final AcceptFunction<StreamElementQueueEntry<T>> completeFunction,_			Executor executor) {_		final StreamElementQueueEntry<T> thisReference = this___		getFuture().handleAsync(new BiFunction<T, Throwable, Void>() {_			@Override_			public Void apply(T t, Throwable throwable) {_				_				_				completeFunction.accept(thisReference)___				return null__			}_		}, executor)__	};register,the,given,complete,function,to,be,called,once,this,queue,entry,has,been,completed,param,complete,function,to,call,when,the,queue,entry,has,been,completed,param,executor,to,run,the,complete,function;public,void,on,complete,final,accept,function,stream,element,queue,entry,t,complete,function,executor,executor,final,stream,element,queue,entry,t,this,reference,this,get,future,handle,async,new,bi,function,t,throwable,void,override,public,void,apply,t,t,throwable,throwable,complete,function,accept,this,reference,return,null,executor
StreamElementQueueEntry -> public boolean isDone();1482206691;True if the stream element queue entry has been completed_ otherwise false.__@return True if the stream element queue entry has been completed_ otherwise false.;public boolean isDone() {_		return getFuture().isDone()__	};true,if,the,stream,element,queue,entry,has,been,completed,otherwise,false,return,true,if,the,stream,element,queue,entry,has,been,completed,otherwise,false;public,boolean,is,done,return,get,future,is,done
StreamElementQueueEntry -> public boolean isDone();1482206691;True if the stream element queue entry has been completed_ otherwise false.__@return True if the stream element queue entry has been completed_ otherwise false.;public boolean isDone() {_		return getFuture().isDone()__	};true,if,the,stream,element,queue,entry,has,been,completed,otherwise,false,return,true,if,the,stream,element,queue,entry,has,been,completed,otherwise,false;public,boolean,is,done,return,get,future,is,done
StreamElementQueueEntry -> public boolean isDone();1493195810;True if the stream element queue entry has been completed_ otherwise false.__@return True if the stream element queue entry has been completed_ otherwise false.;public boolean isDone() {_		return getFuture().isDone()__	};true,if,the,stream,element,queue,entry,has,been,completed,otherwise,false,return,true,if,the,stream,element,queue,entry,has,been,completed,otherwise,false;public,boolean,is,done,return,get,future,is,done
StreamElementQueueEntry -> public boolean isDone();1493195810;True if the stream element queue entry has been completed_ otherwise false.__@return True if the stream element queue entry has been completed_ otherwise false.;public boolean isDone() {_		return getFuture().isDone()__	};true,if,the,stream,element,queue,entry,has,been,completed,otherwise,false,return,true,if,the,stream,element,queue,entry,has,been,completed,otherwise,false;public,boolean,is,done,return,get,future,is,done
StreamElementQueueEntry -> public boolean isDone();1493975289;True if the stream element queue entry has been completed_ otherwise false.__@return True if the stream element queue entry has been completed_ otherwise false.;public boolean isDone() {_		return getFuture().isDone()__	};true,if,the,stream,element,queue,entry,has,been,completed,otherwise,false,return,true,if,the,stream,element,queue,entry,has,been,completed,otherwise,false;public,boolean,is,done,return,get,future,is,done
StreamElementQueueEntry -> public boolean isDone();1495484544;True if the stream element queue entry has been completed_ otherwise false.__@return True if the stream element queue entry has been completed_ otherwise false.;public boolean isDone() {_		return getFuture().isDone()__	};true,if,the,stream,element,queue,entry,has,been,completed,otherwise,false,return,true,if,the,stream,element,queue,entry,has,been,completed,otherwise,false;public,boolean,is,done,return,get,future,is,done
StreamElementQueueEntry -> public boolean isDone();1501589083;True if the stream element queue entry has been completed_ otherwise false.__@return True if the stream element queue entry has been completed_ otherwise false.;public boolean isDone() {_		return getFuture().isDone()__	};true,if,the,stream,element,queue,entry,has,been,completed,otherwise,false,return,true,if,the,stream,element,queue,entry,has,been,completed,otherwise,false;public,boolean,is,done,return,get,future,is,done
