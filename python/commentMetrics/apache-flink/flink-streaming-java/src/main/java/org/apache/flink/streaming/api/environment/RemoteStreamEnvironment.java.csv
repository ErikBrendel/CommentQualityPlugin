# id;timestamp;commentText;codeText;commentWords;codeWords
RemoteStreamEnvironment -> public int getPort();1445418103;Gets the port of the master (JobManager), where the_program will be executed.__@return The port of the master;public int getPort() {_		return port__	};gets,the,port,of,the,master,job,manager,where,the,program,will,be,executed,return,the,port,of,the,master;public,int,get,port,return,port
RemoteStreamEnvironment -> public int getPort();1446400804;Gets the port of the master (JobManager), where the_program will be executed.__@return The port of the master;public int getPort() {_		return port__	};gets,the,port,of,the,master,job,manager,where,the,program,will,be,executed,return,the,port,of,the,master;public,int,get,port,return,port
RemoteStreamEnvironment -> public int getPort();1454679829;Gets the port of the master (JobManager), where the_program will be executed.__@return The port of the master;public int getPort() {_		return port__	};gets,the,port,of,the,master,job,manager,where,the,program,will,be,executed,return,the,port,of,the,master;public,int,get,port,return,port
RemoteStreamEnvironment -> public int getPort();1459946352;Gets the port of the master (JobManager), where the_program will be executed.__@return The port of the master;public int getPort() {_		return port__	};gets,the,port,of,the,master,job,manager,where,the,program,will,be,executed,return,the,port,of,the,master;public,int,get,port,return,port
RemoteStreamEnvironment -> public int getPort();1461599432;Gets the port of the master (JobManager), where the_program will be executed.__@return The port of the master;public int getPort() {_		return port__	};gets,the,port,of,the,master,job,manager,where,the,program,will,be,executed,return,the,port,of,the,master;public,int,get,port,return,port
RemoteStreamEnvironment -> public int getPort();1466152678;Gets the port of the master (JobManager), where the_program will be executed.__@return The port of the master;public int getPort() {_		return port__	};gets,the,port,of,the,master,job,manager,where,the,program,will,be,executed,return,the,port,of,the,master;public,int,get,port,return,port
RemoteStreamEnvironment -> public int getPort();1489782894;Gets the port of the master (JobManager), where the_program will be executed.__@return The port of the master;public int getPort() {_		return port__	};gets,the,port,of,the,master,job,manager,where,the,program,will,be,executed,return,the,port,of,the,master;public,int,get,port,return,port
RemoteStreamEnvironment -> public int getPort();1492530130;Gets the port of the master (JobManager), where the_program will be executed.__@return The port of the master;public int getPort() {_		return port__	};gets,the,port,of,the,master,job,manager,where,the,program,will,be,executed,return,the,port,of,the,master;public,int,get,port,return,port
RemoteStreamEnvironment -> public int getPort();1493195810;Gets the port of the master (JobManager), where the_program will be executed.__@return The port of the master;public int getPort() {_		return port__	};gets,the,port,of,the,master,job,manager,where,the,program,will,be,executed,return,the,port,of,the,master;public,int,get,port,return,port
RemoteStreamEnvironment -> public int getPort();1493195810;Gets the port of the master (JobManager), where the_program will be executed.__@return The port of the master;public int getPort() {_		return port__	};gets,the,port,of,the,master,job,manager,where,the,program,will,be,executed,return,the,port,of,the,master;public,int,get,port,return,port
RemoteStreamEnvironment -> public int getPort();1493975167;Gets the port of the master (JobManager), where the_program will be executed.__@return The port of the master;public int getPort() {_		return port__	};gets,the,port,of,the,master,job,manager,where,the,program,will,be,executed,return,the,port,of,the,master;public,int,get,port,return,port
RemoteStreamEnvironment -> public int getPort();1495484544;Gets the port of the master (JobManager), where the_program will be executed.__@return The port of the master;public int getPort() {_		return port__	};gets,the,port,of,the,master,job,manager,where,the,program,will,be,executed,return,the,port,of,the,master;public,int,get,port,return,port
RemoteStreamEnvironment -> public int getPort();1499683297;Gets the port of the master (JobManager), where the_program will be executed.__@return The port of the master;public int getPort() {_		return port__	};gets,the,port,of,the,master,job,manager,where,the,program,will,be,executed,return,the,port,of,the,master;public,int,get,port,return,port
RemoteStreamEnvironment -> public int getPort();1515770044;Gets the port of the master (JobManager), where the_program will be executed.__@return The port of the master;public int getPort() {_		return port__	};gets,the,port,of,the,master,job,manager,where,the,program,will,be,executed,return,the,port,of,the,master;public,int,get,port,return,port
RemoteStreamEnvironment -> public int getPort();1519249744;Gets the port of the master (JobManager), where the_program will be executed.__@return The port of the master;public int getPort() {_		return port__	};gets,the,port,of,the,master,job,manager,where,the,program,will,be,executed,return,the,port,of,the,master;public,int,get,port,return,port
RemoteStreamEnvironment -> public int getPort();1522681180;Gets the port of the master (JobManager), where the_program will be executed.__@return The port of the master;public int getPort() {_		return port__	};gets,the,port,of,the,master,job,manager,where,the,program,will,be,executed,return,the,port,of,the,master;public,int,get,port,return,port
RemoteStreamEnvironment -> public int getPort();1529046538;Gets the port of the master (JobManager), where the_program will be executed.__@return The port of the master;public int getPort() {_		return port__	};gets,the,port,of,the,master,job,manager,where,the,program,will,be,executed,return,the,port,of,the,master;public,int,get,port,return,port
RemoteStreamEnvironment -> public int getPort();1536322889;Gets the port of the master (JobManager), where the_program will be executed.__@return The port of the master;public int getPort() {_		return port__	};gets,the,port,of,the,master,job,manager,where,the,program,will,be,executed,return,the,port,of,the,master;public,int,get,port,return,port
RemoteStreamEnvironment -> public int getPort();1538135826;Gets the port of the master (JobManager), where the_program will be executed.__@return The port of the master;public int getPort() {_		return port__	};gets,the,port,of,the,master,job,manager,where,the,program,will,be,executed,return,the,port,of,the,master;public,int,get,port,return,port
RemoteStreamEnvironment -> public int getPort();1545345745;Gets the port of the master (JobManager), where the_program will be executed.__@return The port of the master;public int getPort() {_		return port__	};gets,the,port,of,the,master,job,manager,where,the,program,will,be,executed,return,the,port,of,the,master;public,int,get,port,return,port
RemoteStreamEnvironment -> public int getPort();1548267223;Gets the port of the master (JobManager), where the_program will be executed.__@return The port of the master;public int getPort() {_		return port__	};gets,the,port,of,the,master,job,manager,where,the,program,will,be,executed,return,the,port,of,the,master;public,int,get,port,return,port
RemoteStreamEnvironment -> protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException;1461599432;Executes the remote job.__@param streamGraph_Stream Graph to execute_@param jarFiles_List of jar file URLs to ship to the cluster_@return The result of the job execution, containing elapsed time and accumulators.;protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException {_		if (LOG.isInfoEnabled()) {_			LOG.info("Running remotely at {}:{}", host, port)__		}__		ClassLoader usercodeClassLoader = JobWithJars.buildUserCodeClassLoader(jarFiles, globalClasspaths,_			getClass().getClassLoader())__		_		Configuration configuration = new Configuration()__		configuration.addAll(this.clientConfiguration)__		_		configuration.setString(ConfigConstants.JOB_MANAGER_IPC_ADDRESS_KEY, host)__		configuration.setInteger(ConfigConstants.JOB_MANAGER_IPC_PORT_KEY, port)___		Client client__		try {_			client = new Client(configuration)__			client.setPrintStatusDuringExecution(getConfig().isSysoutLoggingEnabled())__		}_		catch (Exception e) {_			throw new ProgramInvocationException("Cannot establish connection to JobManager: " + e.getMessage(), e)__		}__		try {_			return client.runBlocking(streamGraph, jarFiles, globalClasspaths, usercodeClassLoader)__		}_		catch (ProgramInvocationException e) {_			throw e__		}_		catch (Exception e) {_			String term = e.getMessage() == null ? "." : (": " + e.getMessage())__			throw new ProgramInvocationException("The program execution failed" + term, e)__		}_		finally {_			client.shutdown()__		}_	};executes,the,remote,job,param,stream,graph,stream,graph,to,execute,param,jar,files,list,of,jar,file,urls,to,ship,to,the,cluster,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;protected,job,execution,result,execute,remotely,stream,graph,stream,graph,list,url,jar,files,throws,program,invocation,exception,if,log,is,info,enabled,log,info,running,remotely,at,host,port,class,loader,usercode,class,loader,job,with,jars,build,user,code,class,loader,jar,files,global,classpaths,get,class,get,class,loader,configuration,configuration,new,configuration,configuration,add,all,this,client,configuration,configuration,set,string,config,constants,host,configuration,set,integer,config,constants,port,client,client,try,client,new,client,configuration,client,set,print,status,during,execution,get,config,is,sysout,logging,enabled,catch,exception,e,throw,new,program,invocation,exception,cannot,establish,connection,to,job,manager,e,get,message,e,try,return,client,run,blocking,stream,graph,jar,files,global,classpaths,usercode,class,loader,catch,program,invocation,exception,e,throw,e,catch,exception,e,string,term,e,get,message,null,e,get,message,throw,new,program,invocation,exception,the,program,execution,failed,term,e,finally,client,shutdown
RemoteStreamEnvironment -> protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException;1466152678;Executes the remote job.__@param streamGraph_Stream Graph to execute_@param jarFiles_List of jar file URLs to ship to the cluster_@return The result of the job execution, containing elapsed time and accumulators.;protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException {_		if (LOG.isInfoEnabled()) {_			LOG.info("Running remotely at {}:{}", host, port)__		}__		ClassLoader usercodeClassLoader = JobWithJars.buildUserCodeClassLoader(jarFiles, globalClasspaths,_			getClass().getClassLoader())__		_		Configuration configuration = new Configuration()__		configuration.addAll(this.clientConfiguration)__		_		configuration.setString(ConfigConstants.JOB_MANAGER_IPC_ADDRESS_KEY, host)__		configuration.setInteger(ConfigConstants.JOB_MANAGER_IPC_PORT_KEY, port)___		ClusterClient client__		try {_			client = new StandaloneClusterClient(configuration)__			client.setPrintStatusDuringExecution(getConfig().isSysoutLoggingEnabled())__		}_		catch (Exception e) {_			throw new ProgramInvocationException("Cannot establish connection to JobManager: " + e.getMessage(), e)__		}__		try {_			return client.run(streamGraph, jarFiles, globalClasspaths, usercodeClassLoader).getJobExecutionResult()__		}_		catch (ProgramInvocationException e) {_			throw e__		}_		catch (Exception e) {_			String term = e.getMessage() == null ? "." : (": " + e.getMessage())__			throw new ProgramInvocationException("The program execution failed" + term, e)__		}_		finally {_			client.shutdown()__		}_	};executes,the,remote,job,param,stream,graph,stream,graph,to,execute,param,jar,files,list,of,jar,file,urls,to,ship,to,the,cluster,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;protected,job,execution,result,execute,remotely,stream,graph,stream,graph,list,url,jar,files,throws,program,invocation,exception,if,log,is,info,enabled,log,info,running,remotely,at,host,port,class,loader,usercode,class,loader,job,with,jars,build,user,code,class,loader,jar,files,global,classpaths,get,class,get,class,loader,configuration,configuration,new,configuration,configuration,add,all,this,client,configuration,configuration,set,string,config,constants,host,configuration,set,integer,config,constants,port,cluster,client,client,try,client,new,standalone,cluster,client,configuration,client,set,print,status,during,execution,get,config,is,sysout,logging,enabled,catch,exception,e,throw,new,program,invocation,exception,cannot,establish,connection,to,job,manager,e,get,message,e,try,return,client,run,stream,graph,jar,files,global,classpaths,usercode,class,loader,get,job,execution,result,catch,program,invocation,exception,e,throw,e,catch,exception,e,string,term,e,get,message,null,e,get,message,throw,new,program,invocation,exception,the,program,execution,failed,term,e,finally,client,shutdown
RemoteStreamEnvironment -> protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException;1489782894;Executes the remote job.__@param streamGraph_Stream Graph to execute_@param jarFiles_List of jar file URLs to ship to the cluster_@return The result of the job execution, containing elapsed time and accumulators.;protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException {_		if (LOG.isInfoEnabled()) {_			LOG.info("Running remotely at {}:{}", host, port)__		}__		ClassLoader usercodeClassLoader = JobWithJars.buildUserCodeClassLoader(jarFiles, globalClasspaths,_			getClass().getClassLoader())__		_		Configuration configuration = new Configuration()__		configuration.addAll(this.clientConfiguration)__		_		configuration.setString(ConfigConstants.JOB_MANAGER_IPC_ADDRESS_KEY, host)__		configuration.setInteger(ConfigConstants.JOB_MANAGER_IPC_PORT_KEY, port)___		ClusterClient client__		try {_			client = new StandaloneClusterClient(configuration)__			client.setPrintStatusDuringExecution(getConfig().isSysoutLoggingEnabled())__		}_		catch (Exception e) {_			throw new ProgramInvocationException("Cannot establish connection to JobManager: " + e.getMessage(), e)__		}__		try {_			return client.run(streamGraph, jarFiles, globalClasspaths, usercodeClassLoader).getJobExecutionResult()__		}_		catch (ProgramInvocationException e) {_			throw e__		}_		catch (Exception e) {_			String term = e.getMessage() == null ? "." : (": " + e.getMessage())__			throw new ProgramInvocationException("The program execution failed" + term, e)__		}_		finally {_			client.shutdown()__		}_	};executes,the,remote,job,param,stream,graph,stream,graph,to,execute,param,jar,files,list,of,jar,file,urls,to,ship,to,the,cluster,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;protected,job,execution,result,execute,remotely,stream,graph,stream,graph,list,url,jar,files,throws,program,invocation,exception,if,log,is,info,enabled,log,info,running,remotely,at,host,port,class,loader,usercode,class,loader,job,with,jars,build,user,code,class,loader,jar,files,global,classpaths,get,class,get,class,loader,configuration,configuration,new,configuration,configuration,add,all,this,client,configuration,configuration,set,string,config,constants,host,configuration,set,integer,config,constants,port,cluster,client,client,try,client,new,standalone,cluster,client,configuration,client,set,print,status,during,execution,get,config,is,sysout,logging,enabled,catch,exception,e,throw,new,program,invocation,exception,cannot,establish,connection,to,job,manager,e,get,message,e,try,return,client,run,stream,graph,jar,files,global,classpaths,usercode,class,loader,get,job,execution,result,catch,program,invocation,exception,e,throw,e,catch,exception,e,string,term,e,get,message,null,e,get,message,throw,new,program,invocation,exception,the,program,execution,failed,term,e,finally,client,shutdown
RemoteStreamEnvironment -> protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException;1492530130;Executes the remote job.__@param streamGraph_Stream Graph to execute_@param jarFiles_List of jar file URLs to ship to the cluster_@return The result of the job execution, containing elapsed time and accumulators.;protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException {_		if (LOG.isInfoEnabled()) {_			LOG.info("Running remotely at {}:{}", host, port)__		}__		ClassLoader usercodeClassLoader = JobWithJars.buildUserCodeClassLoader(jarFiles, globalClasspaths,_			getClass().getClassLoader())__		_		Configuration configuration = new Configuration()__		configuration.addAll(this.clientConfiguration)__		_		configuration.setString(ConfigConstants.JOB_MANAGER_IPC_ADDRESS_KEY, host)__		configuration.setInteger(ConfigConstants.JOB_MANAGER_IPC_PORT_KEY, port)___		ClusterClient client__		try {_			client = new StandaloneClusterClient(configuration)__			client.setPrintStatusDuringExecution(getConfig().isSysoutLoggingEnabled())__		}_		catch (Exception e) {_			throw new ProgramInvocationException("Cannot establish connection to JobManager: " + e.getMessage(), e)__		}__		try {_			return client.run(streamGraph, jarFiles, globalClasspaths, usercodeClassLoader).getJobExecutionResult()__		}_		catch (ProgramInvocationException e) {_			throw e__		}_		catch (Exception e) {_			String term = e.getMessage() == null ? "." : (": " + e.getMessage())__			throw new ProgramInvocationException("The program execution failed" + term, e)__		}_		finally {_			client.shutdown()__		}_	};executes,the,remote,job,param,stream,graph,stream,graph,to,execute,param,jar,files,list,of,jar,file,urls,to,ship,to,the,cluster,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;protected,job,execution,result,execute,remotely,stream,graph,stream,graph,list,url,jar,files,throws,program,invocation,exception,if,log,is,info,enabled,log,info,running,remotely,at,host,port,class,loader,usercode,class,loader,job,with,jars,build,user,code,class,loader,jar,files,global,classpaths,get,class,get,class,loader,configuration,configuration,new,configuration,configuration,add,all,this,client,configuration,configuration,set,string,config,constants,host,configuration,set,integer,config,constants,port,cluster,client,client,try,client,new,standalone,cluster,client,configuration,client,set,print,status,during,execution,get,config,is,sysout,logging,enabled,catch,exception,e,throw,new,program,invocation,exception,cannot,establish,connection,to,job,manager,e,get,message,e,try,return,client,run,stream,graph,jar,files,global,classpaths,usercode,class,loader,get,job,execution,result,catch,program,invocation,exception,e,throw,e,catch,exception,e,string,term,e,get,message,null,e,get,message,throw,new,program,invocation,exception,the,program,execution,failed,term,e,finally,client,shutdown
RemoteStreamEnvironment -> protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException;1493195810;Executes the remote job.__@param streamGraph_Stream Graph to execute_@param jarFiles_List of jar file URLs to ship to the cluster_@return The result of the job execution, containing elapsed time and accumulators.;protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException {_		if (LOG.isInfoEnabled()) {_			LOG.info("Running remotely at {}:{}", host, port)__		}__		ClassLoader usercodeClassLoader = JobWithJars.buildUserCodeClassLoader(jarFiles, globalClasspaths,_			getClass().getClassLoader())__		_		Configuration configuration = new Configuration()__		configuration.addAll(this.clientConfiguration)__		_		configuration.setString(ConfigConstants.JOB_MANAGER_IPC_ADDRESS_KEY, host)__		configuration.setInteger(ConfigConstants.JOB_MANAGER_IPC_PORT_KEY, port)___		ClusterClient client__		try {_			client = new StandaloneClusterClient(configuration)__			client.setPrintStatusDuringExecution(getConfig().isSysoutLoggingEnabled())__		}_		catch (Exception e) {_			throw new ProgramInvocationException("Cannot establish connection to JobManager: " + e.getMessage(), e)__		}__		try {_			return client.run(streamGraph, jarFiles, globalClasspaths, usercodeClassLoader).getJobExecutionResult()__		}_		catch (ProgramInvocationException e) {_			throw e__		}_		catch (Exception e) {_			String term = e.getMessage() == null ? "." : (": " + e.getMessage())__			throw new ProgramInvocationException("The program execution failed" + term, e)__		}_		finally {_			client.shutdown()__		}_	};executes,the,remote,job,param,stream,graph,stream,graph,to,execute,param,jar,files,list,of,jar,file,urls,to,ship,to,the,cluster,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;protected,job,execution,result,execute,remotely,stream,graph,stream,graph,list,url,jar,files,throws,program,invocation,exception,if,log,is,info,enabled,log,info,running,remotely,at,host,port,class,loader,usercode,class,loader,job,with,jars,build,user,code,class,loader,jar,files,global,classpaths,get,class,get,class,loader,configuration,configuration,new,configuration,configuration,add,all,this,client,configuration,configuration,set,string,config,constants,host,configuration,set,integer,config,constants,port,cluster,client,client,try,client,new,standalone,cluster,client,configuration,client,set,print,status,during,execution,get,config,is,sysout,logging,enabled,catch,exception,e,throw,new,program,invocation,exception,cannot,establish,connection,to,job,manager,e,get,message,e,try,return,client,run,stream,graph,jar,files,global,classpaths,usercode,class,loader,get,job,execution,result,catch,program,invocation,exception,e,throw,e,catch,exception,e,string,term,e,get,message,null,e,get,message,throw,new,program,invocation,exception,the,program,execution,failed,term,e,finally,client,shutdown
RemoteStreamEnvironment -> protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException;1493195810;Executes the remote job.__@param streamGraph_Stream Graph to execute_@param jarFiles_List of jar file URLs to ship to the cluster_@return The result of the job execution, containing elapsed time and accumulators.;protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException {_		if (LOG.isInfoEnabled()) {_			LOG.info("Running remotely at {}:{}", host, port)__		}__		ClassLoader usercodeClassLoader = JobWithJars.buildUserCodeClassLoader(jarFiles, globalClasspaths,_			getClass().getClassLoader())___		Configuration configuration = new Configuration()__		configuration.addAll(this.clientConfiguration)___		configuration.setString(ConfigConstants.JOB_MANAGER_IPC_ADDRESS_KEY, host)__		configuration.setInteger(ConfigConstants.JOB_MANAGER_IPC_PORT_KEY, port)___		ClusterClient client__		try {_			client = new StandaloneClusterClient(configuration)__			client.setPrintStatusDuringExecution(getConfig().isSysoutLoggingEnabled())__		}_		catch (Exception e) {_			throw new ProgramInvocationException("Cannot establish connection to JobManager: " + e.getMessage(), e)__		}__		try {_			return client.run(streamGraph, jarFiles, globalClasspaths, usercodeClassLoader).getJobExecutionResult()__		}_		catch (ProgramInvocationException e) {_			throw e__		}_		catch (Exception e) {_			String term = e.getMessage() == null ? "." : (": " + e.getMessage())__			throw new ProgramInvocationException("The program execution failed" + term, e)__		}_		finally {_			client.shutdown()__		}_	};executes,the,remote,job,param,stream,graph,stream,graph,to,execute,param,jar,files,list,of,jar,file,urls,to,ship,to,the,cluster,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;protected,job,execution,result,execute,remotely,stream,graph,stream,graph,list,url,jar,files,throws,program,invocation,exception,if,log,is,info,enabled,log,info,running,remotely,at,host,port,class,loader,usercode,class,loader,job,with,jars,build,user,code,class,loader,jar,files,global,classpaths,get,class,get,class,loader,configuration,configuration,new,configuration,configuration,add,all,this,client,configuration,configuration,set,string,config,constants,host,configuration,set,integer,config,constants,port,cluster,client,client,try,client,new,standalone,cluster,client,configuration,client,set,print,status,during,execution,get,config,is,sysout,logging,enabled,catch,exception,e,throw,new,program,invocation,exception,cannot,establish,connection,to,job,manager,e,get,message,e,try,return,client,run,stream,graph,jar,files,global,classpaths,usercode,class,loader,get,job,execution,result,catch,program,invocation,exception,e,throw,e,catch,exception,e,string,term,e,get,message,null,e,get,message,throw,new,program,invocation,exception,the,program,execution,failed,term,e,finally,client,shutdown
RemoteStreamEnvironment -> protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException;1493975167;Executes the remote job.__@param streamGraph_Stream Graph to execute_@param jarFiles_List of jar file URLs to ship to the cluster_@return The result of the job execution, containing elapsed time and accumulators.;protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException {_		if (LOG.isInfoEnabled()) {_			LOG.info("Running remotely at {}:{}", host, port)__		}__		ClassLoader usercodeClassLoader = JobWithJars.buildUserCodeClassLoader(jarFiles, globalClasspaths,_			getClass().getClassLoader())___		Configuration configuration = new Configuration()__		configuration.addAll(this.clientConfiguration)___		configuration.setString(ConfigConstants.JOB_MANAGER_IPC_ADDRESS_KEY, host)__		configuration.setInteger(ConfigConstants.JOB_MANAGER_IPC_PORT_KEY, port)___		ClusterClient client__		try {_			client = new StandaloneClusterClient(configuration)__			client.setPrintStatusDuringExecution(getConfig().isSysoutLoggingEnabled())__		}_		catch (Exception e) {_			throw new ProgramInvocationException("Cannot establish connection to JobManager: " + e.getMessage(), e)__		}__		try {_			return client.run(streamGraph, jarFiles, globalClasspaths, usercodeClassLoader).getJobExecutionResult()__		}_		catch (ProgramInvocationException e) {_			throw e__		}_		catch (Exception e) {_			String term = e.getMessage() == null ? "." : (": " + e.getMessage())__			throw new ProgramInvocationException("The program execution failed" + term, e)__		}_		finally {_			try {_				client.shutdown()__			} catch (Exception e) {_				LOG.warn("Could not properly shut down the cluster client.", e)__			}_		}_	};executes,the,remote,job,param,stream,graph,stream,graph,to,execute,param,jar,files,list,of,jar,file,urls,to,ship,to,the,cluster,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;protected,job,execution,result,execute,remotely,stream,graph,stream,graph,list,url,jar,files,throws,program,invocation,exception,if,log,is,info,enabled,log,info,running,remotely,at,host,port,class,loader,usercode,class,loader,job,with,jars,build,user,code,class,loader,jar,files,global,classpaths,get,class,get,class,loader,configuration,configuration,new,configuration,configuration,add,all,this,client,configuration,configuration,set,string,config,constants,host,configuration,set,integer,config,constants,port,cluster,client,client,try,client,new,standalone,cluster,client,configuration,client,set,print,status,during,execution,get,config,is,sysout,logging,enabled,catch,exception,e,throw,new,program,invocation,exception,cannot,establish,connection,to,job,manager,e,get,message,e,try,return,client,run,stream,graph,jar,files,global,classpaths,usercode,class,loader,get,job,execution,result,catch,program,invocation,exception,e,throw,e,catch,exception,e,string,term,e,get,message,null,e,get,message,throw,new,program,invocation,exception,the,program,execution,failed,term,e,finally,try,client,shutdown,catch,exception,e,log,warn,could,not,properly,shut,down,the,cluster,client,e
RemoteStreamEnvironment -> protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException;1495484544;Executes the remote job.__@param streamGraph_Stream Graph to execute_@param jarFiles_List of jar file URLs to ship to the cluster_@return The result of the job execution, containing elapsed time and accumulators.;protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException {_		if (LOG.isInfoEnabled()) {_			LOG.info("Running remotely at {}:{}", host, port)__		}__		ClassLoader usercodeClassLoader = JobWithJars.buildUserCodeClassLoader(jarFiles, globalClasspaths,_			getClass().getClassLoader())___		Configuration configuration = new Configuration()__		configuration.addAll(this.clientConfiguration)___		configuration.setString(ConfigConstants.JOB_MANAGER_IPC_ADDRESS_KEY, host)__		configuration.setInteger(ConfigConstants.JOB_MANAGER_IPC_PORT_KEY, port)___		ClusterClient client__		try {_			client = new StandaloneClusterClient(configuration)__			client.setPrintStatusDuringExecution(getConfig().isSysoutLoggingEnabled())__		}_		catch (Exception e) {_			throw new ProgramInvocationException("Cannot establish connection to JobManager: " + e.getMessage(), e)__		}__		try {_			return client.run(streamGraph, jarFiles, globalClasspaths, usercodeClassLoader).getJobExecutionResult()__		}_		catch (ProgramInvocationException e) {_			throw e__		}_		catch (Exception e) {_			String term = e.getMessage() == null ? "." : (": " + e.getMessage())__			throw new ProgramInvocationException("The program execution failed" + term, e)__		}_		finally {_			try {_				client.shutdown()__			} catch (Exception e) {_				LOG.warn("Could not properly shut down the cluster client.", e)__			}_		}_	};executes,the,remote,job,param,stream,graph,stream,graph,to,execute,param,jar,files,list,of,jar,file,urls,to,ship,to,the,cluster,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;protected,job,execution,result,execute,remotely,stream,graph,stream,graph,list,url,jar,files,throws,program,invocation,exception,if,log,is,info,enabled,log,info,running,remotely,at,host,port,class,loader,usercode,class,loader,job,with,jars,build,user,code,class,loader,jar,files,global,classpaths,get,class,get,class,loader,configuration,configuration,new,configuration,configuration,add,all,this,client,configuration,configuration,set,string,config,constants,host,configuration,set,integer,config,constants,port,cluster,client,client,try,client,new,standalone,cluster,client,configuration,client,set,print,status,during,execution,get,config,is,sysout,logging,enabled,catch,exception,e,throw,new,program,invocation,exception,cannot,establish,connection,to,job,manager,e,get,message,e,try,return,client,run,stream,graph,jar,files,global,classpaths,usercode,class,loader,get,job,execution,result,catch,program,invocation,exception,e,throw,e,catch,exception,e,string,term,e,get,message,null,e,get,message,throw,new,program,invocation,exception,the,program,execution,failed,term,e,finally,try,client,shutdown,catch,exception,e,log,warn,could,not,properly,shut,down,the,cluster,client,e
RemoteStreamEnvironment -> protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException;1499683297;Executes the remote job.__@param streamGraph_Stream Graph to execute_@param jarFiles_List of jar file URLs to ship to the cluster_@return The result of the job execution, containing elapsed time and accumulators.;protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException {_		if (LOG.isInfoEnabled()) {_			LOG.info("Running remotely at {}:{}", host, port)__		}__		ClassLoader usercodeClassLoader = JobWithJars.buildUserCodeClassLoader(jarFiles, globalClasspaths,_			getClass().getClassLoader())___		Configuration configuration = new Configuration()__		configuration.addAll(this.clientConfiguration)___		configuration.setString(JobManagerOptions.ADDRESS, host)__		configuration.setInteger(JobManagerOptions.PORT, port)___		ClusterClient client__		try {_			client = new StandaloneClusterClient(configuration)__			client.setPrintStatusDuringExecution(getConfig().isSysoutLoggingEnabled())__		}_		catch (Exception e) {_			throw new ProgramInvocationException("Cannot establish connection to JobManager: " + e.getMessage(), e)__		}__		try {_			return client.run(streamGraph, jarFiles, globalClasspaths, usercodeClassLoader).getJobExecutionResult()__		}_		catch (ProgramInvocationException e) {_			throw e__		}_		catch (Exception e) {_			String term = e.getMessage() == null ? "." : (": " + e.getMessage())__			throw new ProgramInvocationException("The program execution failed" + term, e)__		}_		finally {_			try {_				client.shutdown()__			} catch (Exception e) {_				LOG.warn("Could not properly shut down the cluster client.", e)__			}_		}_	};executes,the,remote,job,param,stream,graph,stream,graph,to,execute,param,jar,files,list,of,jar,file,urls,to,ship,to,the,cluster,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;protected,job,execution,result,execute,remotely,stream,graph,stream,graph,list,url,jar,files,throws,program,invocation,exception,if,log,is,info,enabled,log,info,running,remotely,at,host,port,class,loader,usercode,class,loader,job,with,jars,build,user,code,class,loader,jar,files,global,classpaths,get,class,get,class,loader,configuration,configuration,new,configuration,configuration,add,all,this,client,configuration,configuration,set,string,job,manager,options,address,host,configuration,set,integer,job,manager,options,port,port,cluster,client,client,try,client,new,standalone,cluster,client,configuration,client,set,print,status,during,execution,get,config,is,sysout,logging,enabled,catch,exception,e,throw,new,program,invocation,exception,cannot,establish,connection,to,job,manager,e,get,message,e,try,return,client,run,stream,graph,jar,files,global,classpaths,usercode,class,loader,get,job,execution,result,catch,program,invocation,exception,e,throw,e,catch,exception,e,string,term,e,get,message,null,e,get,message,throw,new,program,invocation,exception,the,program,execution,failed,term,e,finally,try,client,shutdown,catch,exception,e,log,warn,could,not,properly,shut,down,the,cluster,client,e
RemoteStreamEnvironment -> protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException;1515770044;Executes the remote job.__@param streamGraph_Stream Graph to execute_@param jarFiles_List of jar file URLs to ship to the cluster_@return The result of the job execution, containing elapsed time and accumulators.;protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException {_		if (LOG.isInfoEnabled()) {_			LOG.info("Running remotely at {}:{}", host, port)__		}__		ClassLoader usercodeClassLoader = JobWithJars.buildUserCodeClassLoader(jarFiles, globalClasspaths,_			getClass().getClassLoader())___		Configuration configuration = new Configuration()__		configuration.addAll(this.clientConfiguration)___		configuration.setString(JobManagerOptions.ADDRESS, host)__		configuration.setInteger(JobManagerOptions.PORT, port)___		StandaloneClusterClient client__		try {_			client = new StandaloneClusterClient(configuration)__			client.setPrintStatusDuringExecution(getConfig().isSysoutLoggingEnabled())__		}_		catch (Exception e) {_			throw new ProgramInvocationException("Cannot establish connection to JobManager: " + e.getMessage(), e)__		}__		try {_			return client.run(streamGraph, jarFiles, globalClasspaths, usercodeClassLoader).getJobExecutionResult()__		}_		catch (ProgramInvocationException e) {_			throw e__		}_		catch (Exception e) {_			String term = e.getMessage() == null ? "." : (": " + e.getMessage())__			throw new ProgramInvocationException("The program execution failed" + term, e)__		}_		finally {_			try {_				client.shutdown()__			} catch (Exception e) {_				LOG.warn("Could not properly shut down the cluster client.", e)__			}_		}_	};executes,the,remote,job,param,stream,graph,stream,graph,to,execute,param,jar,files,list,of,jar,file,urls,to,ship,to,the,cluster,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;protected,job,execution,result,execute,remotely,stream,graph,stream,graph,list,url,jar,files,throws,program,invocation,exception,if,log,is,info,enabled,log,info,running,remotely,at,host,port,class,loader,usercode,class,loader,job,with,jars,build,user,code,class,loader,jar,files,global,classpaths,get,class,get,class,loader,configuration,configuration,new,configuration,configuration,add,all,this,client,configuration,configuration,set,string,job,manager,options,address,host,configuration,set,integer,job,manager,options,port,port,standalone,cluster,client,client,try,client,new,standalone,cluster,client,configuration,client,set,print,status,during,execution,get,config,is,sysout,logging,enabled,catch,exception,e,throw,new,program,invocation,exception,cannot,establish,connection,to,job,manager,e,get,message,e,try,return,client,run,stream,graph,jar,files,global,classpaths,usercode,class,loader,get,job,execution,result,catch,program,invocation,exception,e,throw,e,catch,exception,e,string,term,e,get,message,null,e,get,message,throw,new,program,invocation,exception,the,program,execution,failed,term,e,finally,try,client,shutdown,catch,exception,e,log,warn,could,not,properly,shut,down,the,cluster,client,e
RemoteStreamEnvironment -> protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException;1519249744;Executes the remote job.__@param streamGraph_Stream Graph to execute_@param jarFiles_List of jar file URLs to ship to the cluster_@return The result of the job execution, containing elapsed time and accumulators.;protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException {_		if (LOG.isInfoEnabled()) {_			LOG.info("Running remotely at {}:{}", host, port)__		}__		ClassLoader usercodeClassLoader = JobWithJars.buildUserCodeClassLoader(jarFiles, globalClasspaths,_			getClass().getClassLoader())___		Configuration configuration = new Configuration()__		configuration.addAll(this.clientConfiguration)___		configuration.setString(JobManagerOptions.ADDRESS, host)__		configuration.setInteger(JobManagerOptions.PORT, port)___		final ClusterClient<?> client__		try {_			if (CoreOptions.OLD_MODE.equals(configuration.getString(CoreOptions.MODE))) {_				client = new StandaloneClusterClient(configuration)__			} else {_				client = new RestClusterClient<>(configuration, "RemoteStreamEnvironment")__			}_		}_		catch (Exception e) {_			throw new ProgramInvocationException("Cannot establish connection to JobManager: " + e.getMessage(), e)__		}__		client.setPrintStatusDuringExecution(getConfig().isSysoutLoggingEnabled())___		try {_			return client.run(streamGraph, jarFiles, globalClasspaths, usercodeClassLoader).getJobExecutionResult()__		}_		catch (ProgramInvocationException e) {_			throw e__		}_		catch (Exception e) {_			String term = e.getMessage() == null ? "." : (": " + e.getMessage())__			throw new ProgramInvocationException("The program execution failed" + term, e)__		}_		finally {_			try {_				client.shutdown()__			} catch (Exception e) {_				LOG.warn("Could not properly shut down the cluster client.", e)__			}_		}_	};executes,the,remote,job,param,stream,graph,stream,graph,to,execute,param,jar,files,list,of,jar,file,urls,to,ship,to,the,cluster,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;protected,job,execution,result,execute,remotely,stream,graph,stream,graph,list,url,jar,files,throws,program,invocation,exception,if,log,is,info,enabled,log,info,running,remotely,at,host,port,class,loader,usercode,class,loader,job,with,jars,build,user,code,class,loader,jar,files,global,classpaths,get,class,get,class,loader,configuration,configuration,new,configuration,configuration,add,all,this,client,configuration,configuration,set,string,job,manager,options,address,host,configuration,set,integer,job,manager,options,port,port,final,cluster,client,client,try,if,core,options,equals,configuration,get,string,core,options,mode,client,new,standalone,cluster,client,configuration,else,client,new,rest,cluster,client,configuration,remote,stream,environment,catch,exception,e,throw,new,program,invocation,exception,cannot,establish,connection,to,job,manager,e,get,message,e,client,set,print,status,during,execution,get,config,is,sysout,logging,enabled,try,return,client,run,stream,graph,jar,files,global,classpaths,usercode,class,loader,get,job,execution,result,catch,program,invocation,exception,e,throw,e,catch,exception,e,string,term,e,get,message,null,e,get,message,throw,new,program,invocation,exception,the,program,execution,failed,term,e,finally,try,client,shutdown,catch,exception,e,log,warn,could,not,properly,shut,down,the,cluster,client,e
RemoteStreamEnvironment -> protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException;1522681180;Executes the remote job.__@param streamGraph_Stream Graph to execute_@param jarFiles_List of jar file URLs to ship to the cluster_@return The result of the job execution, containing elapsed time and accumulators.;protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException {_		if (LOG.isInfoEnabled()) {_			LOG.info("Running remotely at {}:{}", host, port)__		}__		ClassLoader usercodeClassLoader = JobWithJars.buildUserCodeClassLoader(jarFiles, globalClasspaths,_			getClass().getClassLoader())___		Configuration configuration = new Configuration()__		configuration.addAll(this.clientConfiguration)___		configuration.setString(JobManagerOptions.ADDRESS, host)__		configuration.setInteger(JobManagerOptions.PORT, port)___		final ClusterClient<?> client__		try {_			if (CoreOptions.LEGACY_MODE.equals(configuration.getString(CoreOptions.MODE))) {_				client = new StandaloneClusterClient(configuration)__			} else {_				client = new RestClusterClient<>(configuration, "RemoteStreamEnvironment")__			}_		}_		catch (Exception e) {_			throw new ProgramInvocationException("Cannot establish connection to JobManager: " + e.getMessage(), e)__		}__		client.setPrintStatusDuringExecution(getConfig().isSysoutLoggingEnabled())___		try {_			return client.run(streamGraph, jarFiles, globalClasspaths, usercodeClassLoader).getJobExecutionResult()__		}_		catch (ProgramInvocationException e) {_			throw e__		}_		catch (Exception e) {_			String term = e.getMessage() == null ? "." : (": " + e.getMessage())__			throw new ProgramInvocationException("The program execution failed" + term, e)__		}_		finally {_			try {_				client.shutdown()__			} catch (Exception e) {_				LOG.warn("Could not properly shut down the cluster client.", e)__			}_		}_	};executes,the,remote,job,param,stream,graph,stream,graph,to,execute,param,jar,files,list,of,jar,file,urls,to,ship,to,the,cluster,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;protected,job,execution,result,execute,remotely,stream,graph,stream,graph,list,url,jar,files,throws,program,invocation,exception,if,log,is,info,enabled,log,info,running,remotely,at,host,port,class,loader,usercode,class,loader,job,with,jars,build,user,code,class,loader,jar,files,global,classpaths,get,class,get,class,loader,configuration,configuration,new,configuration,configuration,add,all,this,client,configuration,configuration,set,string,job,manager,options,address,host,configuration,set,integer,job,manager,options,port,port,final,cluster,client,client,try,if,core,options,equals,configuration,get,string,core,options,mode,client,new,standalone,cluster,client,configuration,else,client,new,rest,cluster,client,configuration,remote,stream,environment,catch,exception,e,throw,new,program,invocation,exception,cannot,establish,connection,to,job,manager,e,get,message,e,client,set,print,status,during,execution,get,config,is,sysout,logging,enabled,try,return,client,run,stream,graph,jar,files,global,classpaths,usercode,class,loader,get,job,execution,result,catch,program,invocation,exception,e,throw,e,catch,exception,e,string,term,e,get,message,null,e,get,message,throw,new,program,invocation,exception,the,program,execution,failed,term,e,finally,try,client,shutdown,catch,exception,e,log,warn,could,not,properly,shut,down,the,cluster,client,e
RemoteStreamEnvironment -> protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException;1529046538;Executes the remote job.__@param streamGraph_Stream Graph to execute_@param jarFiles_List of jar file URLs to ship to the cluster_@return The result of the job execution, containing elapsed time and accumulators.;protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException {_		if (LOG.isInfoEnabled()) {_			LOG.info("Running remotely at {}:{}", host, port)__		}__		ClassLoader usercodeClassLoader = JobWithJars.buildUserCodeClassLoader(jarFiles, globalClasspaths,_			getClass().getClassLoader())___		Configuration configuration = new Configuration()__		configuration.addAll(this.clientConfiguration)___		configuration.setString(JobManagerOptions.ADDRESS, host)__		configuration.setInteger(JobManagerOptions.PORT, port)___		final ClusterClient<?> client__		try {_			if (CoreOptions.LEGACY_MODE.equals(configuration.getString(CoreOptions.MODE))) {_				client = new StandaloneClusterClient(configuration)__			} else {_				client = new RestClusterClient<>(configuration, "RemoteStreamEnvironment")__			}_		}_		catch (Exception e) {_			throw new ProgramInvocationException("Cannot establish connection to JobManager: " + e.getMessage(),_				streamGraph.getJobGraph().getJobID(), e)__		}__		client.setPrintStatusDuringExecution(getConfig().isSysoutLoggingEnabled())___		try {_			return client.run(streamGraph, jarFiles, globalClasspaths, usercodeClassLoader).getJobExecutionResult()__		}_		catch (ProgramInvocationException e) {_			throw e__		}_		catch (Exception e) {_			String term = e.getMessage() == null ? "." : (": " + e.getMessage())__			throw new ProgramInvocationException("The program execution failed" + term,_				streamGraph.getJobGraph().getJobID(), e)__		}_		finally {_			try {_				client.shutdown()__			} catch (Exception e) {_				LOG.warn("Could not properly shut down the cluster client.", e)__			}_		}_	};executes,the,remote,job,param,stream,graph,stream,graph,to,execute,param,jar,files,list,of,jar,file,urls,to,ship,to,the,cluster,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;protected,job,execution,result,execute,remotely,stream,graph,stream,graph,list,url,jar,files,throws,program,invocation,exception,if,log,is,info,enabled,log,info,running,remotely,at,host,port,class,loader,usercode,class,loader,job,with,jars,build,user,code,class,loader,jar,files,global,classpaths,get,class,get,class,loader,configuration,configuration,new,configuration,configuration,add,all,this,client,configuration,configuration,set,string,job,manager,options,address,host,configuration,set,integer,job,manager,options,port,port,final,cluster,client,client,try,if,core,options,equals,configuration,get,string,core,options,mode,client,new,standalone,cluster,client,configuration,else,client,new,rest,cluster,client,configuration,remote,stream,environment,catch,exception,e,throw,new,program,invocation,exception,cannot,establish,connection,to,job,manager,e,get,message,stream,graph,get,job,graph,get,job,id,e,client,set,print,status,during,execution,get,config,is,sysout,logging,enabled,try,return,client,run,stream,graph,jar,files,global,classpaths,usercode,class,loader,get,job,execution,result,catch,program,invocation,exception,e,throw,e,catch,exception,e,string,term,e,get,message,null,e,get,message,throw,new,program,invocation,exception,the,program,execution,failed,term,stream,graph,get,job,graph,get,job,id,e,finally,try,client,shutdown,catch,exception,e,log,warn,could,not,properly,shut,down,the,cluster,client,e
RemoteStreamEnvironment -> protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException;1536322889;Executes the remote job.__@param streamGraph_Stream Graph to execute_@param jarFiles_List of jar file URLs to ship to the cluster_@return The result of the job execution, containing elapsed time and accumulators.;protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException {_		if (LOG.isInfoEnabled()) {_			LOG.info("Running remotely at {}:{}", host, port)__		}__		ClassLoader usercodeClassLoader = JobWithJars.buildUserCodeClassLoader(jarFiles, globalClasspaths,_			getClass().getClassLoader())___		Configuration configuration = new Configuration()__		configuration.addAll(this.clientConfiguration)___		configuration.setString(JobManagerOptions.ADDRESS, host)__		configuration.setInteger(JobManagerOptions.PORT, port)___		configuration.setInteger(RestOptions.PORT, port)___		final ClusterClient<?> client__		try {_			if (CoreOptions.LEGACY_MODE.equals(configuration.getString(CoreOptions.MODE))) {_				client = new StandaloneClusterClient(configuration)__			} else {_				client = new RestClusterClient<>(configuration, "RemoteStreamEnvironment")__			}_		}_		catch (Exception e) {_			throw new ProgramInvocationException("Cannot establish connection to JobManager: " + e.getMessage(),_				streamGraph.getJobGraph().getJobID(), e)__		}__		client.setPrintStatusDuringExecution(getConfig().isSysoutLoggingEnabled())___		try {_			return client.run(streamGraph, jarFiles, globalClasspaths, usercodeClassLoader).getJobExecutionResult()__		}_		catch (ProgramInvocationException e) {_			throw e__		}_		catch (Exception e) {_			String term = e.getMessage() == null ? "." : (": " + e.getMessage())__			throw new ProgramInvocationException("The program execution failed" + term,_				streamGraph.getJobGraph().getJobID(), e)__		}_		finally {_			try {_				client.shutdown()__			} catch (Exception e) {_				LOG.warn("Could not properly shut down the cluster client.", e)__			}_		}_	};executes,the,remote,job,param,stream,graph,stream,graph,to,execute,param,jar,files,list,of,jar,file,urls,to,ship,to,the,cluster,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;protected,job,execution,result,execute,remotely,stream,graph,stream,graph,list,url,jar,files,throws,program,invocation,exception,if,log,is,info,enabled,log,info,running,remotely,at,host,port,class,loader,usercode,class,loader,job,with,jars,build,user,code,class,loader,jar,files,global,classpaths,get,class,get,class,loader,configuration,configuration,new,configuration,configuration,add,all,this,client,configuration,configuration,set,string,job,manager,options,address,host,configuration,set,integer,job,manager,options,port,port,configuration,set,integer,rest,options,port,port,final,cluster,client,client,try,if,core,options,equals,configuration,get,string,core,options,mode,client,new,standalone,cluster,client,configuration,else,client,new,rest,cluster,client,configuration,remote,stream,environment,catch,exception,e,throw,new,program,invocation,exception,cannot,establish,connection,to,job,manager,e,get,message,stream,graph,get,job,graph,get,job,id,e,client,set,print,status,during,execution,get,config,is,sysout,logging,enabled,try,return,client,run,stream,graph,jar,files,global,classpaths,usercode,class,loader,get,job,execution,result,catch,program,invocation,exception,e,throw,e,catch,exception,e,string,term,e,get,message,null,e,get,message,throw,new,program,invocation,exception,the,program,execution,failed,term,stream,graph,get,job,graph,get,job,id,e,finally,try,client,shutdown,catch,exception,e,log,warn,could,not,properly,shut,down,the,cluster,client,e
RemoteStreamEnvironment -> protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException;1538135826;Executes the remote job.__@param streamGraph_Stream Graph to execute_@param jarFiles_List of jar file URLs to ship to the cluster_@return The result of the job execution, containing elapsed time and accumulators.;protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException {_		if (LOG.isInfoEnabled()) {_			LOG.info("Running remotely at {}:{}", host, port)__		}__		ClassLoader usercodeClassLoader = JobWithJars.buildUserCodeClassLoader(jarFiles, globalClasspaths,_			getClass().getClassLoader())___		Configuration configuration = new Configuration()__		configuration.addAll(this.clientConfiguration)___		configuration.setString(JobManagerOptions.ADDRESS, host)__		configuration.setInteger(JobManagerOptions.PORT, port)___		configuration.setInteger(RestOptions.PORT, port)___		final ClusterClient<?> client__		try {_			client = new RestClusterClient<>(configuration, "RemoteStreamEnvironment")__		}_		catch (Exception e) {_			throw new ProgramInvocationException("Cannot establish connection to JobManager: " + e.getMessage(),_				streamGraph.getJobGraph().getJobID(), e)__		}__		client.setPrintStatusDuringExecution(getConfig().isSysoutLoggingEnabled())___		try {_			return client.run(streamGraph, jarFiles, globalClasspaths, usercodeClassLoader).getJobExecutionResult()__		}_		catch (ProgramInvocationException e) {_			throw e__		}_		catch (Exception e) {_			String term = e.getMessage() == null ? "." : (": " + e.getMessage())__			throw new ProgramInvocationException("The program execution failed" + term,_				streamGraph.getJobGraph().getJobID(), e)__		}_		finally {_			try {_				client.shutdown()__			} catch (Exception e) {_				LOG.warn("Could not properly shut down the cluster client.", e)__			}_		}_	};executes,the,remote,job,param,stream,graph,stream,graph,to,execute,param,jar,files,list,of,jar,file,urls,to,ship,to,the,cluster,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;protected,job,execution,result,execute,remotely,stream,graph,stream,graph,list,url,jar,files,throws,program,invocation,exception,if,log,is,info,enabled,log,info,running,remotely,at,host,port,class,loader,usercode,class,loader,job,with,jars,build,user,code,class,loader,jar,files,global,classpaths,get,class,get,class,loader,configuration,configuration,new,configuration,configuration,add,all,this,client,configuration,configuration,set,string,job,manager,options,address,host,configuration,set,integer,job,manager,options,port,port,configuration,set,integer,rest,options,port,port,final,cluster,client,client,try,client,new,rest,cluster,client,configuration,remote,stream,environment,catch,exception,e,throw,new,program,invocation,exception,cannot,establish,connection,to,job,manager,e,get,message,stream,graph,get,job,graph,get,job,id,e,client,set,print,status,during,execution,get,config,is,sysout,logging,enabled,try,return,client,run,stream,graph,jar,files,global,classpaths,usercode,class,loader,get,job,execution,result,catch,program,invocation,exception,e,throw,e,catch,exception,e,string,term,e,get,message,null,e,get,message,throw,new,program,invocation,exception,the,program,execution,failed,term,stream,graph,get,job,graph,get,job,id,e,finally,try,client,shutdown,catch,exception,e,log,warn,could,not,properly,shut,down,the,cluster,client,e
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, String... jarFiles);1445418103;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, String... jarFiles);1446400804;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, String... jarFiles);1454679829;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, String... jarFiles);1459946352;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, String... jarFiles);1461599432;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, String... jarFiles);1466152678;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, String... jarFiles);1489782894;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, String... jarFiles);1492530130;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, String... jarFiles);1493195810;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, String... jarFiles);1493195810;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, String... jarFiles);1493975167;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, String... jarFiles);1495484544;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, String... jarFiles);1499683297;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, String... jarFiles);1515770044;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, String... jarFiles);1519249744;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, String... jarFiles);1522681180;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, String... jarFiles);1529046538;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, String... jarFiles);1536322889;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, String... jarFiles);1538135826;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, String... jarFiles);1545345745;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, String... jarFiles);1548267223;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, String... jarFiles) {_		this(host, port, null, jarFiles)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,string,jar,files,this,host,port,null,jar,files
RemoteStreamEnvironment -> @PublicEvolving 	public static JobExecutionResult executeRemotely(StreamExecutionEnvironment streamExecutionEnvironment, 		List<URL> jarFiles, 		String host, 		int port, 		Configuration clientConfiguration, 		List<URL> globalClasspaths, 		String jobName, 		SavepointRestoreSettings savepointRestoreSettings 	) throws ProgramInvocationException;1545345745;Executes the job remotely.__<p>This method can be used independent of the {@link StreamExecutionEnvironment} type._@return The result of the job execution, containing elapsed time and accumulators.;@PublicEvolving_	public static JobExecutionResult executeRemotely(StreamExecutionEnvironment streamExecutionEnvironment,_		List<URL> jarFiles,_		String host,_		int port,_		Configuration clientConfiguration,_		List<URL> globalClasspaths,_		String jobName,_		SavepointRestoreSettings savepointRestoreSettings_	) throws ProgramInvocationException {_		StreamGraph streamGraph = streamExecutionEnvironment.getStreamGraph()__		streamGraph.setJobName(jobName)__		return executeRemotely(streamGraph,_			streamExecutionEnvironment.getClass().getClassLoader(),_			streamExecutionEnvironment.getConfig(),_			jarFiles,_			host,_			port,_			clientConfiguration,_			globalClasspaths,_			savepointRestoreSettings)__	};executes,the,job,remotely,p,this,method,can,be,used,independent,of,the,link,stream,execution,environment,type,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;public,evolving,public,static,job,execution,result,execute,remotely,stream,execution,environment,stream,execution,environment,list,url,jar,files,string,host,int,port,configuration,client,configuration,list,url,global,classpaths,string,job,name,savepoint,restore,settings,savepoint,restore,settings,throws,program,invocation,exception,stream,graph,stream,graph,stream,execution,environment,get,stream,graph,stream,graph,set,job,name,job,name,return,execute,remotely,stream,graph,stream,execution,environment,get,class,get,class,loader,stream,execution,environment,get,config,jar,files,host,port,client,configuration,global,classpaths,savepoint,restore,settings
RemoteStreamEnvironment -> @PublicEvolving 	public static JobExecutionResult executeRemotely(StreamExecutionEnvironment streamExecutionEnvironment, 		List<URL> jarFiles, 		String host, 		int port, 		Configuration clientConfiguration, 		List<URL> globalClasspaths, 		String jobName, 		SavepointRestoreSettings savepointRestoreSettings 	) throws ProgramInvocationException;1548267223;Executes the job remotely.__<p>This method can be used independent of the {@link StreamExecutionEnvironment} type._@return The result of the job execution, containing elapsed time and accumulators.;@PublicEvolving_	public static JobExecutionResult executeRemotely(StreamExecutionEnvironment streamExecutionEnvironment,_		List<URL> jarFiles,_		String host,_		int port,_		Configuration clientConfiguration,_		List<URL> globalClasspaths,_		String jobName,_		SavepointRestoreSettings savepointRestoreSettings_	) throws ProgramInvocationException {_		StreamGraph streamGraph = streamExecutionEnvironment.getStreamGraph()__		streamGraph.setJobName(jobName)__		return executeRemotely(streamGraph,_			streamExecutionEnvironment.getClass().getClassLoader(),_			streamExecutionEnvironment.getConfig(),_			jarFiles,_			host,_			port,_			clientConfiguration,_			globalClasspaths,_			savepointRestoreSettings)__	};executes,the,job,remotely,p,this,method,can,be,used,independent,of,the,link,stream,execution,environment,type,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;public,evolving,public,static,job,execution,result,execute,remotely,stream,execution,environment,stream,execution,environment,list,url,jar,files,string,host,int,port,configuration,client,configuration,list,url,global,classpaths,string,job,name,savepoint,restore,settings,savepoint,restore,settings,throws,program,invocation,exception,stream,graph,stream,graph,stream,execution,environment,get,stream,graph,stream,graph,set,job,name,job,name,return,execute,remotely,stream,graph,stream,execution,environment,get,class,get,class,loader,stream,execution,environment,get,config,jar,files,host,port,client,configuration,global,classpaths,savepoint,restore,settings
RemoteStreamEnvironment -> private JobExecutionResult executeRemotely(StreamGraph streamGraph) throws ProgramInvocationException;1446400804;Executes the remote job.__@param streamGraph_Stream Graph to execute_@return The result of the job execution, containing elapsed time and accumulators.;private JobExecutionResult executeRemotely(StreamGraph streamGraph) throws ProgramInvocationException {_		if (LOG.isInfoEnabled()) {_			LOG.info("Running remotely at {}:{}", host, port)__		}__		ClassLoader usercodeClassLoader = JobWithJars.buildUserCodeClassLoader(jarFiles, globalClasspaths,_			getClass().getClassLoader())__		_		Configuration configuration = new Configuration()__		configuration.addAll(this.config)__		_		configuration.setString(ConfigConstants.JOB_MANAGER_IPC_ADDRESS_KEY, host)__		configuration.setInteger(ConfigConstants.JOB_MANAGER_IPC_PORT_KEY, port)___		Client client__		try {_			client = new Client(configuration)__			client.setPrintStatusDuringExecution(getConfig().isSysoutLoggingEnabled())__		}_		catch (Exception e) {_			throw new ProgramInvocationException("Cannot establish connection to JobManager: " + e.getMessage(), e)__		}__		try {_			return client.runBlocking(streamGraph, jarFiles, globalClasspaths, usercodeClassLoader)__		}_		catch (ProgramInvocationException e) {_			throw e__		}_		catch (Exception e) {_			String term = e.getMessage() == null ? "." : (": " + e.getMessage())__			throw new ProgramInvocationException("The program execution failed" + term, e)__		}_		finally {_			client.shutdown()__		}_	};executes,the,remote,job,param,stream,graph,stream,graph,to,execute,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;private,job,execution,result,execute,remotely,stream,graph,stream,graph,throws,program,invocation,exception,if,log,is,info,enabled,log,info,running,remotely,at,host,port,class,loader,usercode,class,loader,job,with,jars,build,user,code,class,loader,jar,files,global,classpaths,get,class,get,class,loader,configuration,configuration,new,configuration,configuration,add,all,this,config,configuration,set,string,config,constants,host,configuration,set,integer,config,constants,port,client,client,try,client,new,client,configuration,client,set,print,status,during,execution,get,config,is,sysout,logging,enabled,catch,exception,e,throw,new,program,invocation,exception,cannot,establish,connection,to,job,manager,e,get,message,e,try,return,client,run,blocking,stream,graph,jar,files,global,classpaths,usercode,class,loader,catch,program,invocation,exception,e,throw,e,catch,exception,e,string,term,e,get,message,null,e,get,message,throw,new,program,invocation,exception,the,program,execution,failed,term,e,finally,client,shutdown
RemoteStreamEnvironment -> private JobExecutionResult executeRemotely(StreamGraph streamGraph) throws ProgramInvocationException;1454679829;Executes the remote job.__@param streamGraph_Stream Graph to execute_@return The result of the job execution, containing elapsed time and accumulators.;private JobExecutionResult executeRemotely(StreamGraph streamGraph) throws ProgramInvocationException {_		if (LOG.isInfoEnabled()) {_			LOG.info("Running remotely at {}:{}", host, port)__		}__		ClassLoader usercodeClassLoader = JobWithJars.buildUserCodeClassLoader(jarFiles, globalClasspaths,_			getClass().getClassLoader())__		_		Configuration configuration = new Configuration()__		configuration.addAll(this.config)__		_		configuration.setString(ConfigConstants.JOB_MANAGER_IPC_ADDRESS_KEY, host)__		configuration.setInteger(ConfigConstants.JOB_MANAGER_IPC_PORT_KEY, port)___		Client client__		try {_			client = new Client(configuration)__			client.setPrintStatusDuringExecution(getConfig().isSysoutLoggingEnabled())__		}_		catch (Exception e) {_			throw new ProgramInvocationException("Cannot establish connection to JobManager: " + e.getMessage(), e)__		}__		try {_			return client.runBlocking(streamGraph, jarFiles, globalClasspaths, usercodeClassLoader)__		}_		catch (ProgramInvocationException e) {_			throw e__		}_		catch (Exception e) {_			String term = e.getMessage() == null ? "." : (": " + e.getMessage())__			throw new ProgramInvocationException("The program execution failed" + term, e)__		}_		finally {_			client.shutdown()__		}_	};executes,the,remote,job,param,stream,graph,stream,graph,to,execute,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;private,job,execution,result,execute,remotely,stream,graph,stream,graph,throws,program,invocation,exception,if,log,is,info,enabled,log,info,running,remotely,at,host,port,class,loader,usercode,class,loader,job,with,jars,build,user,code,class,loader,jar,files,global,classpaths,get,class,get,class,loader,configuration,configuration,new,configuration,configuration,add,all,this,config,configuration,set,string,config,constants,host,configuration,set,integer,config,constants,port,client,client,try,client,new,client,configuration,client,set,print,status,during,execution,get,config,is,sysout,logging,enabled,catch,exception,e,throw,new,program,invocation,exception,cannot,establish,connection,to,job,manager,e,get,message,e,try,return,client,run,blocking,stream,graph,jar,files,global,classpaths,usercode,class,loader,catch,program,invocation,exception,e,throw,e,catch,exception,e,string,term,e,get,message,null,e,get,message,throw,new,program,invocation,exception,the,program,execution,failed,term,e,finally,client,shutdown
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles);1461599432;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles) {_		this(host, port, clientConfiguration, jarFiles, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,this,host,port,client,configuration,jar,files,null
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles);1466152678;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles) {_		this(host, port, clientConfiguration, jarFiles, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,this,host,port,client,configuration,jar,files,null
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles);1489782894;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles) {_		this(host, port, clientConfiguration, jarFiles, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,this,host,port,client,configuration,jar,files,null
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles);1492530130;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles) {_		this(host, port, clientConfiguration, jarFiles, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,this,host,port,client,configuration,jar,files,null
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles);1493195810;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles) {_		this(host, port, clientConfiguration, jarFiles, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,this,host,port,client,configuration,jar,files,null
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles);1493195810;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles) {_		this(host, port, clientConfiguration, jarFiles, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,this,host,port,client,configuration,jar,files,null
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles);1493975167;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles) {_		this(host, port, clientConfiguration, jarFiles, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,this,host,port,client,configuration,jar,files,null
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles);1495484544;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles) {_		this(host, port, clientConfiguration, jarFiles, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,this,host,port,client,configuration,jar,files,null
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles);1499683297;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles) {_		this(host, port, clientConfiguration, jarFiles, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,this,host,port,client,configuration,jar,files,null
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles);1515770044;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles) {_		this(host, port, clientConfiguration, jarFiles, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,this,host,port,client,configuration,jar,files,null
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles);1519249744;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles) {_		this(host, port, clientConfiguration, jarFiles, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,this,host,port,client,configuration,jar,files,null
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles);1522681180;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles) {_		this(host, port, clientConfiguration, jarFiles, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,this,host,port,client,configuration,jar,files,null
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles);1529046538;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles) {_		this(host, port, clientConfiguration, jarFiles, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,this,host,port,client,configuration,jar,files,null
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles);1536322889;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles) {_		this(host, port, clientConfiguration, jarFiles, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,this,host,port,client,configuration,jar,files,null
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles);1538135826;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles) {_		this(host, port, clientConfiguration, jarFiles, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,this,host,port,client,configuration,jar,files,null
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles);1545345745;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles) {_		this(host, port, clientConfiguration, jarFiles, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,this,host,port,client,configuration,jar,files,null
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles);1548267223;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String... jarFiles) {_		this(host, port, clientConfiguration, jarFiles, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,this,host,port,client,configuration,jar,files,null
RemoteStreamEnvironment -> @Deprecated 	protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException;1545345745;Executes the remote job.__<p>Note: This method exposes stream graph internal in the public API, but cannot be removed for backward compatibility._@param streamGraph_Stream Graph to execute_@param jarFiles_List of jar file URLs to ship to the cluster_@return The result of the job execution, containing elapsed time and accumulators.;@Deprecated_	protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException {_		return executeRemotely(streamGraph,_			this.getClass().getClassLoader(),_			getConfig(),_			jarFiles,_			host,_			port,_			clientConfiguration,_			globalClasspaths,_			savepointRestoreSettings)__	};executes,the,remote,job,p,note,this,method,exposes,stream,graph,internal,in,the,public,api,but,cannot,be,removed,for,backward,compatibility,param,stream,graph,stream,graph,to,execute,param,jar,files,list,of,jar,file,urls,to,ship,to,the,cluster,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;deprecated,protected,job,execution,result,execute,remotely,stream,graph,stream,graph,list,url,jar,files,throws,program,invocation,exception,return,execute,remotely,stream,graph,this,get,class,get,class,loader,get,config,jar,files,host,port,client,configuration,global,classpaths,savepoint,restore,settings
RemoteStreamEnvironment -> @Deprecated 	protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException;1548267223;Executes the remote job.__<p>Note: This method exposes stream graph internal in the public API, but cannot be removed for backward compatibility._@param streamGraph_Stream Graph to execute_@param jarFiles_List of jar file URLs to ship to the cluster_@return The result of the job execution, containing elapsed time and accumulators.;@Deprecated_	protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles) throws ProgramInvocationException {_		return executeRemotely(streamGraph,_			this.getClass().getClassLoader(),_			getConfig(),_			jarFiles,_			host,_			port,_			clientConfiguration,_			globalClasspaths,_			savepointRestoreSettings)__	};executes,the,remote,job,p,note,this,method,exposes,stream,graph,internal,in,the,public,api,but,cannot,be,removed,for,backward,compatibility,param,stream,graph,stream,graph,to,execute,param,jar,files,list,of,jar,file,urls,to,ship,to,the,cluster,return,the,result,of,the,job,execution,containing,elapsed,time,and,accumulators;deprecated,protected,job,execution,result,execute,remotely,stream,graph,stream,graph,list,url,jar,files,throws,program,invocation,exception,return,execute,remotely,stream,graph,this,get,class,get,class,loader,get,config,jar,files,host,port,client,configuration,global,classpaths,savepoint,restore,settings
RemoteStreamEnvironment -> public String getHost();1445418103;Gets the hostname of the master (JobManager), where the_program will be executed.__@return The hostname of the master;public String getHost() {_		return host__	};gets,the,hostname,of,the,master,job,manager,where,the,program,will,be,executed,return,the,hostname,of,the,master;public,string,get,host,return,host
RemoteStreamEnvironment -> public String getHost();1446400804;Gets the hostname of the master (JobManager), where the_program will be executed.__@return The hostname of the master;public String getHost() {_		return host__	};gets,the,hostname,of,the,master,job,manager,where,the,program,will,be,executed,return,the,hostname,of,the,master;public,string,get,host,return,host
RemoteStreamEnvironment -> public String getHost();1454679829;Gets the hostname of the master (JobManager), where the_program will be executed.__@return The hostname of the master;public String getHost() {_		return host__	};gets,the,hostname,of,the,master,job,manager,where,the,program,will,be,executed,return,the,hostname,of,the,master;public,string,get,host,return,host
RemoteStreamEnvironment -> public String getHost();1459946352;Gets the hostname of the master (JobManager), where the_program will be executed.__@return The hostname of the master;public String getHost() {_		return host__	};gets,the,hostname,of,the,master,job,manager,where,the,program,will,be,executed,return,the,hostname,of,the,master;public,string,get,host,return,host
RemoteStreamEnvironment -> public String getHost();1461599432;Gets the hostname of the master (JobManager), where the_program will be executed.__@return The hostname of the master;public String getHost() {_		return host__	};gets,the,hostname,of,the,master,job,manager,where,the,program,will,be,executed,return,the,hostname,of,the,master;public,string,get,host,return,host
RemoteStreamEnvironment -> public String getHost();1466152678;Gets the hostname of the master (JobManager), where the_program will be executed.__@return The hostname of the master;public String getHost() {_		return host__	};gets,the,hostname,of,the,master,job,manager,where,the,program,will,be,executed,return,the,hostname,of,the,master;public,string,get,host,return,host
RemoteStreamEnvironment -> public String getHost();1489782894;Gets the hostname of the master (JobManager), where the_program will be executed.__@return The hostname of the master;public String getHost() {_		return host__	};gets,the,hostname,of,the,master,job,manager,where,the,program,will,be,executed,return,the,hostname,of,the,master;public,string,get,host,return,host
RemoteStreamEnvironment -> public String getHost();1492530130;Gets the hostname of the master (JobManager), where the_program will be executed.__@return The hostname of the master;public String getHost() {_		return host__	};gets,the,hostname,of,the,master,job,manager,where,the,program,will,be,executed,return,the,hostname,of,the,master;public,string,get,host,return,host
RemoteStreamEnvironment -> public String getHost();1493195810;Gets the hostname of the master (JobManager), where the_program will be executed.__@return The hostname of the master;public String getHost() {_		return host__	};gets,the,hostname,of,the,master,job,manager,where,the,program,will,be,executed,return,the,hostname,of,the,master;public,string,get,host,return,host
RemoteStreamEnvironment -> public String getHost();1493195810;Gets the hostname of the master (JobManager), where the_program will be executed.__@return The hostname of the master;public String getHost() {_		return host__	};gets,the,hostname,of,the,master,job,manager,where,the,program,will,be,executed,return,the,hostname,of,the,master;public,string,get,host,return,host
RemoteStreamEnvironment -> public String getHost();1493975167;Gets the hostname of the master (JobManager), where the_program will be executed.__@return The hostname of the master;public String getHost() {_		return host__	};gets,the,hostname,of,the,master,job,manager,where,the,program,will,be,executed,return,the,hostname,of,the,master;public,string,get,host,return,host
RemoteStreamEnvironment -> public String getHost();1495484544;Gets the hostname of the master (JobManager), where the_program will be executed.__@return The hostname of the master;public String getHost() {_		return host__	};gets,the,hostname,of,the,master,job,manager,where,the,program,will,be,executed,return,the,hostname,of,the,master;public,string,get,host,return,host
RemoteStreamEnvironment -> public String getHost();1499683297;Gets the hostname of the master (JobManager), where the_program will be executed.__@return The hostname of the master;public String getHost() {_		return host__	};gets,the,hostname,of,the,master,job,manager,where,the,program,will,be,executed,return,the,hostname,of,the,master;public,string,get,host,return,host
RemoteStreamEnvironment -> public String getHost();1515770044;Gets the hostname of the master (JobManager), where the_program will be executed.__@return The hostname of the master;public String getHost() {_		return host__	};gets,the,hostname,of,the,master,job,manager,where,the,program,will,be,executed,return,the,hostname,of,the,master;public,string,get,host,return,host
RemoteStreamEnvironment -> public String getHost();1519249744;Gets the hostname of the master (JobManager), where the_program will be executed.__@return The hostname of the master;public String getHost() {_		return host__	};gets,the,hostname,of,the,master,job,manager,where,the,program,will,be,executed,return,the,hostname,of,the,master;public,string,get,host,return,host
RemoteStreamEnvironment -> public String getHost();1522681180;Gets the hostname of the master (JobManager), where the_program will be executed.__@return The hostname of the master;public String getHost() {_		return host__	};gets,the,hostname,of,the,master,job,manager,where,the,program,will,be,executed,return,the,hostname,of,the,master;public,string,get,host,return,host
RemoteStreamEnvironment -> public String getHost();1529046538;Gets the hostname of the master (JobManager), where the_program will be executed.__@return The hostname of the master;public String getHost() {_		return host__	};gets,the,hostname,of,the,master,job,manager,where,the,program,will,be,executed,return,the,hostname,of,the,master;public,string,get,host,return,host
RemoteStreamEnvironment -> public String getHost();1536322889;Gets the hostname of the master (JobManager), where the_program will be executed.__@return The hostname of the master;public String getHost() {_		return host__	};gets,the,hostname,of,the,master,job,manager,where,the,program,will,be,executed,return,the,hostname,of,the,master;public,string,get,host,return,host
RemoteStreamEnvironment -> public String getHost();1538135826;Gets the hostname of the master (JobManager), where the_program will be executed.__@return The hostname of the master;public String getHost() {_		return host__	};gets,the,hostname,of,the,master,job,manager,where,the,program,will,be,executed,return,the,hostname,of,the,master;public,string,get,host,return,host
RemoteStreamEnvironment -> public String getHost();1545345745;Gets the hostname of the master (JobManager), where the_program will be executed.__@return The hostname of the master;public String getHost() {_		return host__	};gets,the,hostname,of,the,master,job,manager,where,the,program,will,be,executed,return,the,hostname,of,the,master;public,string,get,host,return,host
RemoteStreamEnvironment -> public String getHost();1548267223;Gets the hostname of the master (JobManager), where the_program will be executed.__@return The hostname of the master;public String getHost() {_		return host__	};gets,the,hostname,of,the,master,job,manager,where,the,program,will,be,executed,return,the,hostname,of,the,master;public,string,get,host,return,host
RemoteStreamEnvironment -> private static JobExecutionResult executeRemotely(StreamGraph streamGraph, 		ClassLoader envClassLoader, 		ExecutionConfig executionConfig, 		List<URL> jarFiles, 		String host, 		int port, 		Configuration clientConfiguration, 		List<URL> globalClasspaths, 		SavepointRestoreSettings savepointRestoreSettings 	) throws ProgramInvocationException;1545345745;Execute the given stream graph remotely.__<p>Method for internal use since it exposes stream graph and other implementation details that are subject to change._@throws ProgramInvocationException;private static JobExecutionResult executeRemotely(StreamGraph streamGraph,_		ClassLoader envClassLoader,_		ExecutionConfig executionConfig,_		List<URL> jarFiles,_		String host,_		int port,_		Configuration clientConfiguration,_		List<URL> globalClasspaths,_		SavepointRestoreSettings savepointRestoreSettings_	) throws ProgramInvocationException {_		if (LOG.isInfoEnabled()) {_			LOG.info("Running remotely at {}:{}", host, port)__		}__		ClassLoader userCodeClassLoader = JobWithJars.buildUserCodeClassLoader(jarFiles, globalClasspaths, envClassLoader)___		Configuration configuration = new Configuration()__		configuration.addAll(clientConfiguration)___		configuration.setString(JobManagerOptions.ADDRESS, host)__		configuration.setInteger(JobManagerOptions.PORT, port)___		configuration.setInteger(RestOptions.PORT, port)___		final ClusterClient<?> client__		try {_			client = new RestClusterClient<>(configuration, "RemoteStreamEnvironment")__		}_		catch (Exception e) {_			throw new ProgramInvocationException("Cannot establish connection to JobManager: " + e.getMessage(),_				streamGraph.getJobGraph().getJobID(), e)__		}__		client.setPrintStatusDuringExecution(executionConfig.isSysoutLoggingEnabled())___		if (savepointRestoreSettings == null) {_			savepointRestoreSettings = SavepointRestoreSettings.none()__		}__		try {_			return client.run(streamGraph, jarFiles, globalClasspaths, userCodeClassLoader, savepointRestoreSettings)_				.getJobExecutionResult()__		}_		catch (ProgramInvocationException e) {_			throw e__		}_		catch (Exception e) {_			String term = e.getMessage() == null ? "." : (": " + e.getMessage())__			throw new ProgramInvocationException("The program execution failed" + term,_				streamGraph.getJobGraph().getJobID(), e)__		}_		finally {_			try {_				client.shutdown()__			} catch (Exception e) {_				LOG.warn("Could not properly shut down the cluster client.", e)__			}_		}_	};execute,the,given,stream,graph,remotely,p,method,for,internal,use,since,it,exposes,stream,graph,and,other,implementation,details,that,are,subject,to,change,throws,program,invocation,exception;private,static,job,execution,result,execute,remotely,stream,graph,stream,graph,class,loader,env,class,loader,execution,config,execution,config,list,url,jar,files,string,host,int,port,configuration,client,configuration,list,url,global,classpaths,savepoint,restore,settings,savepoint,restore,settings,throws,program,invocation,exception,if,log,is,info,enabled,log,info,running,remotely,at,host,port,class,loader,user,code,class,loader,job,with,jars,build,user,code,class,loader,jar,files,global,classpaths,env,class,loader,configuration,configuration,new,configuration,configuration,add,all,client,configuration,configuration,set,string,job,manager,options,address,host,configuration,set,integer,job,manager,options,port,port,configuration,set,integer,rest,options,port,port,final,cluster,client,client,try,client,new,rest,cluster,client,configuration,remote,stream,environment,catch,exception,e,throw,new,program,invocation,exception,cannot,establish,connection,to,job,manager,e,get,message,stream,graph,get,job,graph,get,job,id,e,client,set,print,status,during,execution,execution,config,is,sysout,logging,enabled,if,savepoint,restore,settings,null,savepoint,restore,settings,savepoint,restore,settings,none,try,return,client,run,stream,graph,jar,files,global,classpaths,user,code,class,loader,savepoint,restore,settings,get,job,execution,result,catch,program,invocation,exception,e,throw,e,catch,exception,e,string,term,e,get,message,null,e,get,message,throw,new,program,invocation,exception,the,program,execution,failed,term,stream,graph,get,job,graph,get,job,id,e,finally,try,client,shutdown,catch,exception,e,log,warn,could,not,properly,shut,down,the,cluster,client,e
RemoteStreamEnvironment -> private static JobExecutionResult executeRemotely(StreamGraph streamGraph, 		ClassLoader envClassLoader, 		ExecutionConfig executionConfig, 		List<URL> jarFiles, 		String host, 		int port, 		Configuration clientConfiguration, 		List<URL> globalClasspaths, 		SavepointRestoreSettings savepointRestoreSettings 	) throws ProgramInvocationException;1548267223;Execute the given stream graph remotely.__<p>Method for internal use since it exposes stream graph and other implementation details that are subject to change._@throws ProgramInvocationException;private static JobExecutionResult executeRemotely(StreamGraph streamGraph,_		ClassLoader envClassLoader,_		ExecutionConfig executionConfig,_		List<URL> jarFiles,_		String host,_		int port,_		Configuration clientConfiguration,_		List<URL> globalClasspaths,_		SavepointRestoreSettings savepointRestoreSettings_	) throws ProgramInvocationException {_		if (LOG.isInfoEnabled()) {_			LOG.info("Running remotely at {}:{}", host, port)__		}__		ClassLoader userCodeClassLoader = JobWithJars.buildUserCodeClassLoader(jarFiles, globalClasspaths, envClassLoader)___		Configuration configuration = new Configuration()__		configuration.addAll(clientConfiguration)___		configuration.setString(JobManagerOptions.ADDRESS, host)__		configuration.setInteger(JobManagerOptions.PORT, port)___		configuration.setInteger(RestOptions.PORT, port)___		final ClusterClient<?> client__		try {_			client = new RestClusterClient<>(configuration, "RemoteStreamEnvironment")__		}_		catch (Exception e) {_			throw new ProgramInvocationException("Cannot establish connection to JobManager: " + e.getMessage(),_				streamGraph.getJobGraph().getJobID(), e)__		}__		client.setPrintStatusDuringExecution(executionConfig.isSysoutLoggingEnabled())___		if (savepointRestoreSettings == null) {_			savepointRestoreSettings = SavepointRestoreSettings.none()__		}__		try {_			return client.run(streamGraph, jarFiles, globalClasspaths, userCodeClassLoader, savepointRestoreSettings)_				.getJobExecutionResult()__		}_		catch (ProgramInvocationException e) {_			throw e__		}_		catch (Exception e) {_			String term = e.getMessage() == null ? "." : (": " + e.getMessage())__			throw new ProgramInvocationException("The program execution failed" + term,_				streamGraph.getJobGraph().getJobID(), e)__		}_		finally {_			try {_				client.shutdown()__			} catch (Exception e) {_				LOG.warn("Could not properly shut down the cluster client.", e)__			}_		}_	};execute,the,given,stream,graph,remotely,p,method,for,internal,use,since,it,exposes,stream,graph,and,other,implementation,details,that,are,subject,to,change,throws,program,invocation,exception;private,static,job,execution,result,execute,remotely,stream,graph,stream,graph,class,loader,env,class,loader,execution,config,execution,config,list,url,jar,files,string,host,int,port,configuration,client,configuration,list,url,global,classpaths,savepoint,restore,settings,savepoint,restore,settings,throws,program,invocation,exception,if,log,is,info,enabled,log,info,running,remotely,at,host,port,class,loader,user,code,class,loader,job,with,jars,build,user,code,class,loader,jar,files,global,classpaths,env,class,loader,configuration,configuration,new,configuration,configuration,add,all,client,configuration,configuration,set,string,job,manager,options,address,host,configuration,set,integer,job,manager,options,port,port,configuration,set,integer,rest,options,port,port,final,cluster,client,client,try,client,new,rest,cluster,client,configuration,remote,stream,environment,catch,exception,e,throw,new,program,invocation,exception,cannot,establish,connection,to,job,manager,e,get,message,stream,graph,get,job,graph,get,job,id,e,client,set,print,status,during,execution,execution,config,is,sysout,logging,enabled,if,savepoint,restore,settings,null,savepoint,restore,settings,savepoint,restore,settings,none,try,return,client,run,stream,graph,jar,files,global,classpaths,user,code,class,loader,savepoint,restore,settings,get,job,execution,result,catch,program,invocation,exception,e,throw,e,catch,exception,e,string,term,e,get,message,null,e,get,message,throw,new,program,invocation,exception,the,program,execution,failed,term,stream,graph,get,job,graph,get,job,id,e,finally,try,client,shutdown,catch,exception,e,log,warn,could,not,properly,shut,down,the,cluster,client,e
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration config, String... jarFiles);1445418103;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param config_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, Configuration config, String... jarFiles) {_		this(host, port, config, jarFiles, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,config,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,configuration,config,string,jar,files,this,host,port,config,jar,files,null
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration config, String... jarFiles);1446400804;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param config_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, Configuration config, String... jarFiles) {_		this(host, port, config, jarFiles, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,config,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,configuration,config,string,jar,files,this,host,port,config,jar,files,null
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration config, String... jarFiles);1454679829;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param config_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, Configuration config, String... jarFiles) {_		this(host, port, config, jarFiles, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,config,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,configuration,config,string,jar,files,this,host,port,config,jar,files,null
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration config, String... jarFiles);1459946352;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param config_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files.;public RemoteStreamEnvironment(String host, int port, Configuration config, String... jarFiles) {_		this(host, port, config, jarFiles, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,config,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,remote,stream,environment,string,host,int,port,configuration,config,string,jar,files,this,host,port,config,jar,files,null
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration config, String[] jarFiles, URL[] globalClasspaths);1445418103;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param config_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths_The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteStreamEnvironment(String host, int port, Configuration config, String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}_		_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.config = config == null ? new Configuration() : config__		this.jarFiles = new ArrayList<>(jarFiles.length)__		for (String jarFile : jarFiles) {_			try {_				URL jarFileUrl = new File(jarFile).getAbsoluteFile().toURI().toURL()__				this.jarFiles.add(jarFileUrl)__				JobWithJars.checkJarFile(jarFileUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("JAR file path is invalid '" + jarFile + "'", e)__			} catch (IOException e) {_				throw new RuntimeException("Problem with jar file " + jarFile, e)__			}_		}_		if (globalClasspaths == null) {_			this.globalClasspaths = Collections.emptyList()__		}_		else {_			this.globalClasspaths = Arrays.asList(globalClasspaths)__		}_	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,config,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,stream,environment,string,host,int,port,configuration,config,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,config,config,null,new,configuration,config,this,jar,files,new,array,list,jar,files,length,for,string,jar,file,jar,files,try,url,jar,file,url,new,file,jar,file,get,absolute,file,to,uri,to,url,this,jar,files,add,jar,file,url,job,with,jars,check,jar,file,jar,file,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,is,invalid,jar,file,e,catch,ioexception,e,throw,new,runtime,exception,problem,with,jar,file,jar,file,e,if,global,classpaths,null,this,global,classpaths,collections,empty,list,else,this,global,classpaths,arrays,as,list,global,classpaths
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration config, String[] jarFiles, URL[] globalClasspaths);1446400804;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param config_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths_The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteStreamEnvironment(String host, int port, Configuration config, String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}_		_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.config = config == null ? new Configuration() : config__		this.jarFiles = new ArrayList<>(jarFiles.length)__		for (String jarFile : jarFiles) {_			try {_				URL jarFileUrl = new File(jarFile).getAbsoluteFile().toURI().toURL()__				this.jarFiles.add(jarFileUrl)__				JobWithJars.checkJarFile(jarFileUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("JAR file path is invalid '" + jarFile + "'", e)__			} catch (IOException e) {_				throw new RuntimeException("Problem with jar file " + jarFile, e)__			}_		}_		if (globalClasspaths == null) {_			this.globalClasspaths = Collections.emptyList()__		}_		else {_			this.globalClasspaths = Arrays.asList(globalClasspaths)__		}_	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,config,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,stream,environment,string,host,int,port,configuration,config,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,config,config,null,new,configuration,config,this,jar,files,new,array,list,jar,files,length,for,string,jar,file,jar,files,try,url,jar,file,url,new,file,jar,file,get,absolute,file,to,uri,to,url,this,jar,files,add,jar,file,url,job,with,jars,check,jar,file,jar,file,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,is,invalid,jar,file,e,catch,ioexception,e,throw,new,runtime,exception,problem,with,jar,file,jar,file,e,if,global,classpaths,null,this,global,classpaths,collections,empty,list,else,this,global,classpaths,arrays,as,list,global,classpaths
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration config, String[] jarFiles, URL[] globalClasspaths);1454679829;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param config_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths_The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteStreamEnvironment(String host, int port, Configuration config, String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}_		_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.config = config == null ? new Configuration() : config__		this.jarFiles = new ArrayList<>(jarFiles.length)__		for (String jarFile : jarFiles) {_			try {_				URL jarFileUrl = new File(jarFile).getAbsoluteFile().toURI().toURL()__				this.jarFiles.add(jarFileUrl)__				JobWithJars.checkJarFile(jarFileUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("JAR file path is invalid '" + jarFile + "'", e)__			} catch (IOException e) {_				throw new RuntimeException("Problem with jar file " + jarFile, e)__			}_		}_		if (globalClasspaths == null) {_			this.globalClasspaths = Collections.emptyList()__		}_		else {_			this.globalClasspaths = Arrays.asList(globalClasspaths)__		}_	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,config,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,stream,environment,string,host,int,port,configuration,config,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,config,config,null,new,configuration,config,this,jar,files,new,array,list,jar,files,length,for,string,jar,file,jar,files,try,url,jar,file,url,new,file,jar,file,get,absolute,file,to,uri,to,url,this,jar,files,add,jar,file,url,job,with,jars,check,jar,file,jar,file,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,is,invalid,jar,file,e,catch,ioexception,e,throw,new,runtime,exception,problem,with,jar,file,jar,file,e,if,global,classpaths,null,this,global,classpaths,collections,empty,list,else,this,global,classpaths,arrays,as,list,global,classpaths
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration config, String[] jarFiles, URL[] globalClasspaths);1459946352;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param config_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths_The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteStreamEnvironment(String host, int port, Configuration config, String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}_		_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.config = config == null ? new Configuration() : config__		this.jarFiles = new ArrayList<>(jarFiles.length)__		for (String jarFile : jarFiles) {_			try {_				URL jarFileUrl = new File(jarFile).getAbsoluteFile().toURI().toURL()__				this.jarFiles.add(jarFileUrl)__				JobWithJars.checkJarFile(jarFileUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("JAR file path is invalid '" + jarFile + "'", e)__			} catch (IOException e) {_				throw new RuntimeException("Problem with jar file " + jarFile, e)__			}_		}_		if (globalClasspaths == null) {_			this.globalClasspaths = Collections.emptyList()__		}_		else {_			this.globalClasspaths = Arrays.asList(globalClasspaths)__		}_	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,config,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,stream,environment,string,host,int,port,configuration,config,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,config,config,null,new,configuration,config,this,jar,files,new,array,list,jar,files,length,for,string,jar,file,jar,files,try,url,jar,file,url,new,file,jar,file,get,absolute,file,to,uri,to,url,this,jar,files,add,jar,file,url,job,with,jars,check,jar,file,jar,file,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,is,invalid,jar,file,e,catch,ioexception,e,throw,new,runtime,exception,problem,with,jar,file,jar,file,e,if,global,classpaths,null,this,global,classpaths,collections,empty,list,else,this,global,classpaths,arrays,as,list,global,classpaths
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths);1461599432;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths_The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}_		_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.clientConfiguration = clientConfiguration == null ? new Configuration() : clientConfiguration__		this.jarFiles = new ArrayList<>(jarFiles.length)__		for (String jarFile : jarFiles) {_			try {_				URL jarFileUrl = new File(jarFile).getAbsoluteFile().toURI().toURL()__				this.jarFiles.add(jarFileUrl)__				JobWithJars.checkJarFile(jarFileUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("JAR file path is invalid '" + jarFile + "'", e)__			} catch (IOException e) {_				throw new RuntimeException("Problem with jar file " + jarFile, e)__			}_		}_		if (globalClasspaths == null) {_			this.globalClasspaths = Collections.emptyList()__		}_		else {_			this.globalClasspaths = Arrays.asList(globalClasspaths)__		}_	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,client,configuration,client,configuration,null,new,configuration,client,configuration,this,jar,files,new,array,list,jar,files,length,for,string,jar,file,jar,files,try,url,jar,file,url,new,file,jar,file,get,absolute,file,to,uri,to,url,this,jar,files,add,jar,file,url,job,with,jars,check,jar,file,jar,file,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,is,invalid,jar,file,e,catch,ioexception,e,throw,new,runtime,exception,problem,with,jar,file,jar,file,e,if,global,classpaths,null,this,global,classpaths,collections,empty,list,else,this,global,classpaths,arrays,as,list,global,classpaths
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths);1466152678;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths_The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}_		_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.clientConfiguration = clientConfiguration == null ? new Configuration() : clientConfiguration__		this.jarFiles = new ArrayList<>(jarFiles.length)__		for (String jarFile : jarFiles) {_			try {_				URL jarFileUrl = new File(jarFile).getAbsoluteFile().toURI().toURL()__				this.jarFiles.add(jarFileUrl)__				JobWithJars.checkJarFile(jarFileUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("JAR file path is invalid '" + jarFile + "'", e)__			} catch (IOException e) {_				throw new RuntimeException("Problem with jar file " + jarFile, e)__			}_		}_		if (globalClasspaths == null) {_			this.globalClasspaths = Collections.emptyList()__		}_		else {_			this.globalClasspaths = Arrays.asList(globalClasspaths)__		}_	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,client,configuration,client,configuration,null,new,configuration,client,configuration,this,jar,files,new,array,list,jar,files,length,for,string,jar,file,jar,files,try,url,jar,file,url,new,file,jar,file,get,absolute,file,to,uri,to,url,this,jar,files,add,jar,file,url,job,with,jars,check,jar,file,jar,file,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,is,invalid,jar,file,e,catch,ioexception,e,throw,new,runtime,exception,problem,with,jar,file,jar,file,e,if,global,classpaths,null,this,global,classpaths,collections,empty,list,else,this,global,classpaths,arrays,as,list,global,classpaths
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths);1489782894;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths_The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths) {_		super(GlobalConfiguration.loadConfiguration().getInteger(_				ConfigConstants.DEFAULT_PARALLELISM_KEY,_				ConfigConstants.DEFAULT_PARALLELISM))__		_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}_		_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.clientConfiguration = clientConfiguration == null ? new Configuration() : clientConfiguration__		this.jarFiles = new ArrayList<>(jarFiles.length)__		for (String jarFile : jarFiles) {_			try {_				URL jarFileUrl = new File(jarFile).getAbsoluteFile().toURI().toURL()__				this.jarFiles.add(jarFileUrl)__				JobWithJars.checkJarFile(jarFileUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("JAR file path is invalid '" + jarFile + "'", e)__			} catch (IOException e) {_				throw new RuntimeException("Problem with jar file " + jarFile, e)__			}_		}_		if (globalClasspaths == null) {_			this.globalClasspaths = Collections.emptyList()__		}_		else {_			this.globalClasspaths = Arrays.asList(globalClasspaths)__		}_	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,url,global,classpaths,super,global,configuration,load,configuration,get,integer,config,constants,config,constants,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,client,configuration,client,configuration,null,new,configuration,client,configuration,this,jar,files,new,array,list,jar,files,length,for,string,jar,file,jar,files,try,url,jar,file,url,new,file,jar,file,get,absolute,file,to,uri,to,url,this,jar,files,add,jar,file,url,job,with,jars,check,jar,file,jar,file,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,is,invalid,jar,file,e,catch,ioexception,e,throw,new,runtime,exception,problem,with,jar,file,jar,file,e,if,global,classpaths,null,this,global,classpaths,collections,empty,list,else,this,global,classpaths,arrays,as,list,global,classpaths
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths);1492530130;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths_The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}_		_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.clientConfiguration = clientConfiguration == null ? new Configuration() : clientConfiguration__		this.jarFiles = new ArrayList<>(jarFiles.length)__		for (String jarFile : jarFiles) {_			try {_				URL jarFileUrl = new File(jarFile).getAbsoluteFile().toURI().toURL()__				this.jarFiles.add(jarFileUrl)__				JobWithJars.checkJarFile(jarFileUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("JAR file path is invalid '" + jarFile + "'", e)__			} catch (IOException e) {_				throw new RuntimeException("Problem with jar file " + jarFile, e)__			}_		}_		if (globalClasspaths == null) {_			this.globalClasspaths = Collections.emptyList()__		}_		else {_			this.globalClasspaths = Arrays.asList(globalClasspaths)__		}_	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,client,configuration,client,configuration,null,new,configuration,client,configuration,this,jar,files,new,array,list,jar,files,length,for,string,jar,file,jar,files,try,url,jar,file,url,new,file,jar,file,get,absolute,file,to,uri,to,url,this,jar,files,add,jar,file,url,job,with,jars,check,jar,file,jar,file,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,is,invalid,jar,file,e,catch,ioexception,e,throw,new,runtime,exception,problem,with,jar,file,jar,file,e,if,global,classpaths,null,this,global,classpaths,collections,empty,list,else,this,global,classpaths,arrays,as,list,global,classpaths
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths);1493195810;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths_The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}_		_		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.clientConfiguration = clientConfiguration == null ? new Configuration() : clientConfiguration__		this.jarFiles = new ArrayList<>(jarFiles.length)__		for (String jarFile : jarFiles) {_			try {_				URL jarFileUrl = new File(jarFile).getAbsoluteFile().toURI().toURL()__				this.jarFiles.add(jarFileUrl)__				JobWithJars.checkJarFile(jarFileUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("JAR file path is invalid '" + jarFile + "'", e)__			} catch (IOException e) {_				throw new RuntimeException("Problem with jar file " + jarFile, e)__			}_		}_		if (globalClasspaths == null) {_			this.globalClasspaths = Collections.emptyList()__		}_		else {_			this.globalClasspaths = Arrays.asList(globalClasspaths)__		}_	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,client,configuration,client,configuration,null,new,configuration,client,configuration,this,jar,files,new,array,list,jar,files,length,for,string,jar,file,jar,files,try,url,jar,file,url,new,file,jar,file,get,absolute,file,to,uri,to,url,this,jar,files,add,jar,file,url,job,with,jars,check,jar,file,jar,file,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,is,invalid,jar,file,e,catch,ioexception,e,throw,new,runtime,exception,problem,with,jar,file,jar,file,e,if,global,classpaths,null,this,global,classpaths,collections,empty,list,else,this,global,classpaths,arrays,as,list,global,classpaths
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths);1493195810;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths_The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}__		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.clientConfiguration = clientConfiguration == null ? new Configuration() : clientConfiguration__		this.jarFiles = new ArrayList<>(jarFiles.length)__		for (String jarFile : jarFiles) {_			try {_				URL jarFileUrl = new File(jarFile).getAbsoluteFile().toURI().toURL()__				this.jarFiles.add(jarFileUrl)__				JobWithJars.checkJarFile(jarFileUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("JAR file path is invalid '" + jarFile + "'", e)__			} catch (IOException e) {_				throw new RuntimeException("Problem with jar file " + jarFile, e)__			}_		}_		if (globalClasspaths == null) {_			this.globalClasspaths = Collections.emptyList()__		}_		else {_			this.globalClasspaths = Arrays.asList(globalClasspaths)__		}_	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,client,configuration,client,configuration,null,new,configuration,client,configuration,this,jar,files,new,array,list,jar,files,length,for,string,jar,file,jar,files,try,url,jar,file,url,new,file,jar,file,get,absolute,file,to,uri,to,url,this,jar,files,add,jar,file,url,job,with,jars,check,jar,file,jar,file,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,is,invalid,jar,file,e,catch,ioexception,e,throw,new,runtime,exception,problem,with,jar,file,jar,file,e,if,global,classpaths,null,this,global,classpaths,collections,empty,list,else,this,global,classpaths,arrays,as,list,global,classpaths
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths);1493975167;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths_The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}__		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.clientConfiguration = clientConfiguration == null ? new Configuration() : clientConfiguration__		this.jarFiles = new ArrayList<>(jarFiles.length)__		for (String jarFile : jarFiles) {_			try {_				URL jarFileUrl = new File(jarFile).getAbsoluteFile().toURI().toURL()__				this.jarFiles.add(jarFileUrl)__				JobWithJars.checkJarFile(jarFileUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("JAR file path is invalid '" + jarFile + "'", e)__			} catch (IOException e) {_				throw new RuntimeException("Problem with jar file " + jarFile, e)__			}_		}_		if (globalClasspaths == null) {_			this.globalClasspaths = Collections.emptyList()__		}_		else {_			this.globalClasspaths = Arrays.asList(globalClasspaths)__		}_	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,client,configuration,client,configuration,null,new,configuration,client,configuration,this,jar,files,new,array,list,jar,files,length,for,string,jar,file,jar,files,try,url,jar,file,url,new,file,jar,file,get,absolute,file,to,uri,to,url,this,jar,files,add,jar,file,url,job,with,jars,check,jar,file,jar,file,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,is,invalid,jar,file,e,catch,ioexception,e,throw,new,runtime,exception,problem,with,jar,file,jar,file,e,if,global,classpaths,null,this,global,classpaths,collections,empty,list,else,this,global,classpaths,arrays,as,list,global,classpaths
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths);1495484544;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths_The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}__		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.clientConfiguration = clientConfiguration == null ? new Configuration() : clientConfiguration__		this.jarFiles = new ArrayList<>(jarFiles.length)__		for (String jarFile : jarFiles) {_			try {_				URL jarFileUrl = new File(jarFile).getAbsoluteFile().toURI().toURL()__				this.jarFiles.add(jarFileUrl)__				JobWithJars.checkJarFile(jarFileUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("JAR file path is invalid '" + jarFile + "'", e)__			} catch (IOException e) {_				throw new RuntimeException("Problem with jar file " + jarFile, e)__			}_		}_		if (globalClasspaths == null) {_			this.globalClasspaths = Collections.emptyList()__		}_		else {_			this.globalClasspaths = Arrays.asList(globalClasspaths)__		}_	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,client,configuration,client,configuration,null,new,configuration,client,configuration,this,jar,files,new,array,list,jar,files,length,for,string,jar,file,jar,files,try,url,jar,file,url,new,file,jar,file,get,absolute,file,to,uri,to,url,this,jar,files,add,jar,file,url,job,with,jars,check,jar,file,jar,file,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,is,invalid,jar,file,e,catch,ioexception,e,throw,new,runtime,exception,problem,with,jar,file,jar,file,e,if,global,classpaths,null,this,global,classpaths,collections,empty,list,else,this,global,classpaths,arrays,as,list,global,classpaths
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths);1499683297;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths_The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}__		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.clientConfiguration = clientConfiguration == null ? new Configuration() : clientConfiguration__		this.jarFiles = new ArrayList<>(jarFiles.length)__		for (String jarFile : jarFiles) {_			try {_				URL jarFileUrl = new File(jarFile).getAbsoluteFile().toURI().toURL()__				this.jarFiles.add(jarFileUrl)__				JobWithJars.checkJarFile(jarFileUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("JAR file path is invalid '" + jarFile + "'", e)__			} catch (IOException e) {_				throw new RuntimeException("Problem with jar file " + jarFile, e)__			}_		}_		if (globalClasspaths == null) {_			this.globalClasspaths = Collections.emptyList()__		}_		else {_			this.globalClasspaths = Arrays.asList(globalClasspaths)__		}_	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,client,configuration,client,configuration,null,new,configuration,client,configuration,this,jar,files,new,array,list,jar,files,length,for,string,jar,file,jar,files,try,url,jar,file,url,new,file,jar,file,get,absolute,file,to,uri,to,url,this,jar,files,add,jar,file,url,job,with,jars,check,jar,file,jar,file,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,is,invalid,jar,file,e,catch,ioexception,e,throw,new,runtime,exception,problem,with,jar,file,jar,file,e,if,global,classpaths,null,this,global,classpaths,collections,empty,list,else,this,global,classpaths,arrays,as,list,global,classpaths
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths);1515770044;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths_The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}__		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.clientConfiguration = clientConfiguration == null ? new Configuration() : clientConfiguration__		this.jarFiles = new ArrayList<>(jarFiles.length)__		for (String jarFile : jarFiles) {_			try {_				URL jarFileUrl = new File(jarFile).getAbsoluteFile().toURI().toURL()__				this.jarFiles.add(jarFileUrl)__				JobWithJars.checkJarFile(jarFileUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("JAR file path is invalid '" + jarFile + "'", e)__			} catch (IOException e) {_				throw new RuntimeException("Problem with jar file " + jarFile, e)__			}_		}_		if (globalClasspaths == null) {_			this.globalClasspaths = Collections.emptyList()__		}_		else {_			this.globalClasspaths = Arrays.asList(globalClasspaths)__		}_	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,client,configuration,client,configuration,null,new,configuration,client,configuration,this,jar,files,new,array,list,jar,files,length,for,string,jar,file,jar,files,try,url,jar,file,url,new,file,jar,file,get,absolute,file,to,uri,to,url,this,jar,files,add,jar,file,url,job,with,jars,check,jar,file,jar,file,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,is,invalid,jar,file,e,catch,ioexception,e,throw,new,runtime,exception,problem,with,jar,file,jar,file,e,if,global,classpaths,null,this,global,classpaths,collections,empty,list,else,this,global,classpaths,arrays,as,list,global,classpaths
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths);1519249744;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths_The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}__		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.clientConfiguration = clientConfiguration == null ? new Configuration() : clientConfiguration__		this.jarFiles = new ArrayList<>(jarFiles.length)__		for (String jarFile : jarFiles) {_			try {_				URL jarFileUrl = new File(jarFile).getAbsoluteFile().toURI().toURL()__				this.jarFiles.add(jarFileUrl)__				JobWithJars.checkJarFile(jarFileUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("JAR file path is invalid '" + jarFile + "'", e)__			} catch (IOException e) {_				throw new RuntimeException("Problem with jar file " + jarFile, e)__			}_		}_		if (globalClasspaths == null) {_			this.globalClasspaths = Collections.emptyList()__		}_		else {_			this.globalClasspaths = Arrays.asList(globalClasspaths)__		}_	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,client,configuration,client,configuration,null,new,configuration,client,configuration,this,jar,files,new,array,list,jar,files,length,for,string,jar,file,jar,files,try,url,jar,file,url,new,file,jar,file,get,absolute,file,to,uri,to,url,this,jar,files,add,jar,file,url,job,with,jars,check,jar,file,jar,file,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,is,invalid,jar,file,e,catch,ioexception,e,throw,new,runtime,exception,problem,with,jar,file,jar,file,e,if,global,classpaths,null,this,global,classpaths,collections,empty,list,else,this,global,classpaths,arrays,as,list,global,classpaths
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths);1522681180;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths_The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}__		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.clientConfiguration = clientConfiguration == null ? new Configuration() : clientConfiguration__		this.jarFiles = new ArrayList<>(jarFiles.length)__		for (String jarFile : jarFiles) {_			try {_				URL jarFileUrl = new File(jarFile).getAbsoluteFile().toURI().toURL()__				this.jarFiles.add(jarFileUrl)__				JobWithJars.checkJarFile(jarFileUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("JAR file path is invalid '" + jarFile + "'", e)__			} catch (IOException e) {_				throw new RuntimeException("Problem with jar file " + jarFile, e)__			}_		}_		if (globalClasspaths == null) {_			this.globalClasspaths = Collections.emptyList()__		}_		else {_			this.globalClasspaths = Arrays.asList(globalClasspaths)__		}_	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,client,configuration,client,configuration,null,new,configuration,client,configuration,this,jar,files,new,array,list,jar,files,length,for,string,jar,file,jar,files,try,url,jar,file,url,new,file,jar,file,get,absolute,file,to,uri,to,url,this,jar,files,add,jar,file,url,job,with,jars,check,jar,file,jar,file,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,is,invalid,jar,file,e,catch,ioexception,e,throw,new,runtime,exception,problem,with,jar,file,jar,file,e,if,global,classpaths,null,this,global,classpaths,collections,empty,list,else,this,global,classpaths,arrays,as,list,global,classpaths
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths);1529046538;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths_The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}__		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.clientConfiguration = clientConfiguration == null ? new Configuration() : clientConfiguration__		this.jarFiles = new ArrayList<>(jarFiles.length)__		for (String jarFile : jarFiles) {_			try {_				URL jarFileUrl = new File(jarFile).getAbsoluteFile().toURI().toURL()__				this.jarFiles.add(jarFileUrl)__				JobWithJars.checkJarFile(jarFileUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("JAR file path is invalid '" + jarFile + "'", e)__			} catch (IOException e) {_				throw new RuntimeException("Problem with jar file " + jarFile, e)__			}_		}_		if (globalClasspaths == null) {_			this.globalClasspaths = Collections.emptyList()__		}_		else {_			this.globalClasspaths = Arrays.asList(globalClasspaths)__		}_	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,client,configuration,client,configuration,null,new,configuration,client,configuration,this,jar,files,new,array,list,jar,files,length,for,string,jar,file,jar,files,try,url,jar,file,url,new,file,jar,file,get,absolute,file,to,uri,to,url,this,jar,files,add,jar,file,url,job,with,jars,check,jar,file,jar,file,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,is,invalid,jar,file,e,catch,ioexception,e,throw,new,runtime,exception,problem,with,jar,file,jar,file,e,if,global,classpaths,null,this,global,classpaths,collections,empty,list,else,this,global,classpaths,arrays,as,list,global,classpaths
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths);1536322889;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths_The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}__		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.clientConfiguration = clientConfiguration == null ? new Configuration() : clientConfiguration__		this.jarFiles = new ArrayList<>(jarFiles.length)__		for (String jarFile : jarFiles) {_			try {_				URL jarFileUrl = new File(jarFile).getAbsoluteFile().toURI().toURL()__				this.jarFiles.add(jarFileUrl)__				JobWithJars.checkJarFile(jarFileUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("JAR file path is invalid '" + jarFile + "'", e)__			} catch (IOException e) {_				throw new RuntimeException("Problem with jar file " + jarFile, e)__			}_		}_		if (globalClasspaths == null) {_			this.globalClasspaths = Collections.emptyList()__		}_		else {_			this.globalClasspaths = Arrays.asList(globalClasspaths)__		}_	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,client,configuration,client,configuration,null,new,configuration,client,configuration,this,jar,files,new,array,list,jar,files,length,for,string,jar,file,jar,files,try,url,jar,file,url,new,file,jar,file,get,absolute,file,to,uri,to,url,this,jar,files,add,jar,file,url,job,with,jars,check,jar,file,jar,file,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,is,invalid,jar,file,e,catch,ioexception,e,throw,new,runtime,exception,problem,with,jar,file,jar,file,e,if,global,classpaths,null,this,global,classpaths,collections,empty,list,else,this,global,classpaths,arrays,as,list,global,classpaths
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths);1538135826;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths_The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths) {_		if (!ExecutionEnvironment.areExplicitEnvironmentsAllowed()) {_			throw new InvalidProgramException(_					"The RemoteEnvironment cannot be used when submitting a program through a client, " +_							"or running in a TestEnvironment context.")__		}__		if (host == null) {_			throw new NullPointerException("Host must not be null.")__		}_		if (port < 1 || port >= 0xffff) {_			throw new IllegalArgumentException("Port out of range")__		}__		this.host = host__		this.port = port__		this.clientConfiguration = clientConfiguration == null ? new Configuration() : clientConfiguration__		this.jarFiles = new ArrayList<>(jarFiles.length)__		for (String jarFile : jarFiles) {_			try {_				URL jarFileUrl = new File(jarFile).getAbsoluteFile().toURI().toURL()__				this.jarFiles.add(jarFileUrl)__				JobWithJars.checkJarFile(jarFileUrl)__			} catch (MalformedURLException e) {_				throw new IllegalArgumentException("JAR file path is invalid '" + jarFile + "'", e)__			} catch (IOException e) {_				throw new RuntimeException("Problem with jar file " + jarFile, e)__			}_		}_		if (globalClasspaths == null) {_			this.globalClasspaths = Collections.emptyList()__		}_		else {_			this.globalClasspaths = Arrays.asList(globalClasspaths)__		}_	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,url,global,classpaths,if,execution,environment,are,explicit,environments,allowed,throw,new,invalid,program,exception,the,remote,environment,cannot,be,used,when,submitting,a,program,through,a,client,or,running,in,a,test,environment,context,if,host,null,throw,new,null,pointer,exception,host,must,not,be,null,if,port,1,port,0xffff,throw,new,illegal,argument,exception,port,out,of,range,this,host,host,this,port,port,this,client,configuration,client,configuration,null,new,configuration,client,configuration,this,jar,files,new,array,list,jar,files,length,for,string,jar,file,jar,files,try,url,jar,file,url,new,file,jar,file,get,absolute,file,to,uri,to,url,this,jar,files,add,jar,file,url,job,with,jars,check,jar,file,jar,file,url,catch,malformed,urlexception,e,throw,new,illegal,argument,exception,jar,file,path,is,invalid,jar,file,e,catch,ioexception,e,throw,new,runtime,exception,problem,with,jar,file,jar,file,e,if,global,classpaths,null,this,global,classpaths,collections,empty,list,else,this,global,classpaths,arrays,as,list,global,classpaths
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths);1545345745;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths_The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths) {_		this(host, port, clientConfiguration, jarFiles, null, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,url,global,classpaths,this,host,port,client,configuration,jar,files,null,null
RemoteStreamEnvironment -> public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths);1548267223;Creates a new RemoteStreamEnvironment that points to the master_(JobManager) described by the given host name and port.__@param host_The host name or address of the master (JobManager), where the_program should be executed._@param port_The port of the master (JobManager), where the program should_be executed._@param clientConfiguration_The configuration used to parametrize the client that connects to the_remote cluster._@param jarFiles_The JAR files with code that needs to be shipped to the_cluster. If the program uses user-defined functions,_user-defined input formats, or any libraries, those must be_provided in the JAR files._@param globalClasspaths_The paths of directories and JAR files that are added to each user code_classloader on all nodes in the cluster. Note that the paths must specify a_protocol (e.g. file://) and be accessible on all nodes (e.g. by means of a NFS share)._The protocol must be supported by the {@link java.net.URLClassLoader}.;public RemoteStreamEnvironment(String host, int port, Configuration clientConfiguration, String[] jarFiles, URL[] globalClasspaths) {_		this(host, port, clientConfiguration, jarFiles, null, null)__	};creates,a,new,remote,stream,environment,that,points,to,the,master,job,manager,described,by,the,given,host,name,and,port,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,client,configuration,the,configuration,used,to,parametrize,the,client,that,connects,to,the,remote,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files,param,global,classpaths,the,paths,of,directories,and,jar,files,that,are,added,to,each,user,code,classloader,on,all,nodes,in,the,cluster,note,that,the,paths,must,specify,a,protocol,e,g,file,and,be,accessible,on,all,nodes,e,g,by,means,of,a,nfs,share,the,protocol,must,be,supported,by,the,link,java,net,urlclass,loader;public,remote,stream,environment,string,host,int,port,configuration,client,configuration,string,jar,files,url,global,classpaths,this,host,port,client,configuration,jar,files,null,null
