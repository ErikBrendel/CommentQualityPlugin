commented;modifiers;parameterAmount;loc;comment;code
false;public;0;17;;@Override public void open() throws Exception {     super.open().     if (serializedInitialValue == null) {         throw new RuntimeException("No initial value was serialized for the fold " + "operator. Probably the setOutputType method was not called.").     }     try (ByteArrayInputStream bais = new ByteArrayInputStream(serializedInitialValue).         DataInputViewStreamWrapper in = new DataInputViewStreamWrapper(bais)) {         initialValue = outTypeSerializer.deserialize(in).     }     ValueStateDescriptor<OUT> stateId = new ValueStateDescriptor<>(STATE_NAME, outTypeSerializer).     values = getPartitionedState(stateId). }
false;public;1;14;;@Override public void processElement(StreamRecord<IN> element) throws Exception {     OUT value = values.value().     if (value != null) {         OUT folded = userFunction.fold(outTypeSerializer.copy(value), element.getValue()).         values.update(folded).         output.collect(element.replace(folded)).     } else {         OUT first = userFunction.fold(outTypeSerializer.copy(initialValue), element.getValue()).         values.update(first).         output.collect(element.replace(first)).     } }
false;public;2;16;;@Override public void setOutputType(TypeInformation<OUT> outTypeInfo, ExecutionConfig executionConfig) {     outTypeSerializer = outTypeInfo.createSerializer(executionConfig).     ByteArrayOutputStream baos = new ByteArrayOutputStream().     DataOutputViewStreamWrapper out = new DataOutputViewStreamWrapper(baos).     try {         outTypeSerializer.serialize(initialValue, out).     } catch (IOException ioe) {         throw new RuntimeException("Unable to serialize initial value of type " + initialValue.getClass().getSimpleName() + " of fold operator.", ioe).     }     serializedInitialValue = baos.toByteArray(). }
