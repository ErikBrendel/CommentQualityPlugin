# id;timestamp;commentText;codeText;commentWords;codeWords
ProcessFunction -> Context -> public abstract TimerService timerService()_;1488799576;A {@link TimerService} for querying time and registering timers.;public abstract TimerService timerService()_;a,link,timer,service,for,querying,time,and,registering,timers;public,abstract,timer,service,timer,service
ProcessFunction -> Context -> public abstract TimerService timerService()_;1489819457;A {@link TimerService} for querying time and registering timers.;public abstract TimerService timerService()_;a,link,timer,service,for,querying,time,and,registering,timers;public,abstract,timer,service,timer,service
ProcessFunction -> Context -> public abstract TimerService timerService()_;1493195810;A {@link TimerService} for querying time and registering timers.;public abstract TimerService timerService()_;a,link,timer,service,for,querying,time,and,registering,timers;public,abstract,timer,service,timer,service
ProcessFunction -> public abstract void processElement(I value, Context ctx, Collector<O> out) throws Exception_;1488799576;Process one element from the input stream.__<p>This function can output zero or more elements using the {@link Collector} parameter_and also update internal state or set timers using the {@link Context} parameter.__@param value The input value._@param ctx A {@link Context} that allows querying the timestamp of the element and getting_a {@link TimerService} for registering timers and querying the time. The_context is only valid during the invocation of this method, do not store it._@param out The collector for returning result values.__@throws Exception This method may throw exceptions. Throwing an exception will cause the operation_to fail and may trigger recovery.;public abstract void processElement(I value, Context ctx, Collector<O> out) throws Exception_;process,one,element,from,the,input,stream,p,this,function,can,output,zero,or,more,elements,using,the,link,collector,parameter,and,also,update,internal,state,or,set,timers,using,the,link,context,parameter,param,value,the,input,value,param,ctx,a,link,context,that,allows,querying,the,timestamp,of,the,element,and,getting,a,link,timer,service,for,registering,timers,and,querying,the,time,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,for,returning,result,values,throws,exception,this,method,may,throw,exceptions,throwing,an,exception,will,cause,the,operation,to,fail,and,may,trigger,recovery;public,abstract,void,process,element,i,value,context,ctx,collector,o,out,throws,exception
ProcessFunction -> public abstract void processElement(I value, Context ctx, Collector<O> out) throws Exception_;1489819457;Process one element from the input stream.__<p>This function can output zero or more elements using the {@link Collector} parameter_and also update internal state or set timers using the {@link Context} parameter.__@param value The input value._@param ctx A {@link Context} that allows querying the timestamp of the element and getting_a {@link TimerService} for registering timers and querying the time. The_context is only valid during the invocation of this method, do not store it._@param out The collector for returning result values.__@throws Exception This method may throw exceptions. Throwing an exception will cause the operation_to fail and may trigger recovery.;public abstract void processElement(I value, Context ctx, Collector<O> out) throws Exception_;process,one,element,from,the,input,stream,p,this,function,can,output,zero,or,more,elements,using,the,link,collector,parameter,and,also,update,internal,state,or,set,timers,using,the,link,context,parameter,param,value,the,input,value,param,ctx,a,link,context,that,allows,querying,the,timestamp,of,the,element,and,getting,a,link,timer,service,for,registering,timers,and,querying,the,time,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,for,returning,result,values,throws,exception,this,method,may,throw,exceptions,throwing,an,exception,will,cause,the,operation,to,fail,and,may,trigger,recovery;public,abstract,void,process,element,i,value,context,ctx,collector,o,out,throws,exception
ProcessFunction -> public abstract void processElement(I value, Context ctx, Collector<O> out) throws Exception_;1493195810;Process one element from the input stream.__<p>This function can output zero or more elements using the {@link Collector} parameter_and also update internal state or set timers using the {@link Context} parameter.__@param value The input value._@param ctx A {@link Context} that allows querying the timestamp of the element and getting_a {@link TimerService} for registering timers and querying the time. The_context is only valid during the invocation of this method, do not store it._@param out The collector for returning result values.__@throws Exception This method may throw exceptions. Throwing an exception will cause the operation_to fail and may trigger recovery.;public abstract void processElement(I value, Context ctx, Collector<O> out) throws Exception_;process,one,element,from,the,input,stream,p,this,function,can,output,zero,or,more,elements,using,the,link,collector,parameter,and,also,update,internal,state,or,set,timers,using,the,link,context,parameter,param,value,the,input,value,param,ctx,a,link,context,that,allows,querying,the,timestamp,of,the,element,and,getting,a,link,timer,service,for,registering,timers,and,querying,the,time,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,for,returning,result,values,throws,exception,this,method,may,throw,exceptions,throwing,an,exception,will,cause,the,operation,to,fail,and,may,trigger,recovery;public,abstract,void,process,element,i,value,context,ctx,collector,o,out,throws,exception
ProcessFunction -> public void onTimer(long timestamp, OnTimerContext ctx, Collector<O> out) throws Exception;1488799576;Called when a timer set using {@link TimerService} fires.__@param timestamp The timestamp of the firing timer._@param ctx An {@link OnTimerContext} that allows querying the timestamp of the firing timer,_querying the {@link TimeDomain} of the firing timer and getting a_{@link TimerService} for registering timers and querying the time._The context is only valid during the invocation of this method, do not store it._@param out The collector for returning result values.__@throws Exception This method may throw exceptions. Throwing an exception will cause the operation_to fail and may trigger recovery.;public void onTimer(long timestamp, OnTimerContext ctx, Collector<O> out) throws Exception {};called,when,a,timer,set,using,link,timer,service,fires,param,timestamp,the,timestamp,of,the,firing,timer,param,ctx,an,link,on,timer,context,that,allows,querying,the,timestamp,of,the,firing,timer,querying,the,link,time,domain,of,the,firing,timer,and,getting,a,link,timer,service,for,registering,timers,and,querying,the,time,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,for,returning,result,values,throws,exception,this,method,may,throw,exceptions,throwing,an,exception,will,cause,the,operation,to,fail,and,may,trigger,recovery;public,void,on,timer,long,timestamp,on,timer,context,ctx,collector,o,out,throws,exception
ProcessFunction -> public void onTimer(long timestamp, OnTimerContext ctx, Collector<O> out) throws Exception;1489819457;Called when a timer set using {@link TimerService} fires.__@param timestamp The timestamp of the firing timer._@param ctx An {@link OnTimerContext} that allows querying the timestamp of the firing timer,_querying the {@link TimeDomain} of the firing timer and getting a_{@link TimerService} for registering timers and querying the time._The context is only valid during the invocation of this method, do not store it._@param out The collector for returning result values.__@throws Exception This method may throw exceptions. Throwing an exception will cause the operation_to fail and may trigger recovery.;public void onTimer(long timestamp, OnTimerContext ctx, Collector<O> out) throws Exception {};called,when,a,timer,set,using,link,timer,service,fires,param,timestamp,the,timestamp,of,the,firing,timer,param,ctx,an,link,on,timer,context,that,allows,querying,the,timestamp,of,the,firing,timer,querying,the,link,time,domain,of,the,firing,timer,and,getting,a,link,timer,service,for,registering,timers,and,querying,the,time,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,for,returning,result,values,throws,exception,this,method,may,throw,exceptions,throwing,an,exception,will,cause,the,operation,to,fail,and,may,trigger,recovery;public,void,on,timer,long,timestamp,on,timer,context,ctx,collector,o,out,throws,exception
ProcessFunction -> public void onTimer(long timestamp, OnTimerContext ctx, Collector<O> out) throws Exception;1493195810;Called when a timer set using {@link TimerService} fires.__@param timestamp The timestamp of the firing timer._@param ctx An {@link OnTimerContext} that allows querying the timestamp of the firing timer,_querying the {@link TimeDomain} of the firing timer and getting a_{@link TimerService} for registering timers and querying the time._The context is only valid during the invocation of this method, do not store it._@param out The collector for returning result values.__@throws Exception This method may throw exceptions. Throwing an exception will cause the operation_to fail and may trigger recovery.;public void onTimer(long timestamp, OnTimerContext ctx, Collector<O> out) throws Exception {};called,when,a,timer,set,using,link,timer,service,fires,param,timestamp,the,timestamp,of,the,firing,timer,param,ctx,an,link,on,timer,context,that,allows,querying,the,timestamp,of,the,firing,timer,querying,the,link,time,domain,of,the,firing,timer,and,getting,a,link,timer,service,for,registering,timers,and,querying,the,time,the,context,is,only,valid,during,the,invocation,of,this,method,do,not,store,it,param,out,the,collector,for,returning,result,values,throws,exception,this,method,may,throw,exceptions,throwing,an,exception,will,cause,the,operation,to,fail,and,may,trigger,recovery;public,void,on,timer,long,timestamp,on,timer,context,ctx,collector,o,out,throws,exception
ProcessFunction -> Context -> public abstract Long timestamp()_;1488799576;Timestamp of the element currently being processed or timestamp of a firing timer.__<p>This might be {@code null}, for example if the time characteristic of your program_is set to {@link org.apache.flink.streaming.api.TimeCharacteristic#ProcessingTime}.;public abstract Long timestamp()_;timestamp,of,the,element,currently,being,processed,or,timestamp,of,a,firing,timer,p,this,might,be,code,null,for,example,if,the,time,characteristic,of,your,program,is,set,to,link,org,apache,flink,streaming,api,time,characteristic,processing,time;public,abstract,long,timestamp
ProcessFunction -> Context -> public abstract Long timestamp()_;1489819457;Timestamp of the element currently being processed or timestamp of a firing timer.__<p>This might be {@code null}, for example if the time characteristic of your program_is set to {@link org.apache.flink.streaming.api.TimeCharacteristic#ProcessingTime}.;public abstract Long timestamp()_;timestamp,of,the,element,currently,being,processed,or,timestamp,of,a,firing,timer,p,this,might,be,code,null,for,example,if,the,time,characteristic,of,your,program,is,set,to,link,org,apache,flink,streaming,api,time,characteristic,processing,time;public,abstract,long,timestamp
ProcessFunction -> Context -> public abstract Long timestamp()_;1493195810;Timestamp of the element currently being processed or timestamp of a firing timer.__<p>This might be {@code null}, for example if the time characteristic of your program_is set to {@link org.apache.flink.streaming.api.TimeCharacteristic#ProcessingTime}.;public abstract Long timestamp()_;timestamp,of,the,element,currently,being,processed,or,timestamp,of,a,firing,timer,p,this,might,be,code,null,for,example,if,the,time,characteristic,of,your,program,is,set,to,link,org,apache,flink,streaming,api,time,characteristic,processing,time;public,abstract,long,timestamp
ProcessFunction -> OnTimerContext -> public abstract TimeDomain timeDomain()_;1488799576;The {@link TimeDomain} of the firing timer.;public abstract TimeDomain timeDomain()_;the,link,time,domain,of,the,firing,timer;public,abstract,time,domain,time,domain
ProcessFunction -> OnTimerContext -> public abstract TimeDomain timeDomain()_;1489819457;The {@link TimeDomain} of the firing timer.;public abstract TimeDomain timeDomain()_;the,link,time,domain,of,the,firing,timer;public,abstract,time,domain,time,domain
ProcessFunction -> OnTimerContext -> public abstract TimeDomain timeDomain()_;1493195810;The {@link TimeDomain} of the firing timer.;public abstract TimeDomain timeDomain()_;the,link,time,domain,of,the,firing,timer;public,abstract,time,domain,time,domain
ProcessFunction -> Context -> public abstract <X> void output(OutputTag<X> outputTag, X value)_;1489819457;Emits a record to the side output identified by the {@link OutputTag}.__@param outputTag the {@code OutputTag} that identifies the side output to emit to._@param value The record to emit.;public abstract <X> void output(OutputTag<X> outputTag, X value)_;emits,a,record,to,the,side,output,identified,by,the,link,output,tag,param,output,tag,the,code,output,tag,that,identifies,the,side,output,to,emit,to,param,value,the,record,to,emit;public,abstract,x,void,output,output,tag,x,output,tag,x,value
ProcessFunction -> Context -> public abstract <X> void output(OutputTag<X> outputTag, X value)_;1493195810;Emits a record to the side output identified by the {@link OutputTag}.__@param outputTag the {@code OutputTag} that identifies the side output to emit to._@param value The record to emit.;public abstract <X> void output(OutputTag<X> outputTag, X value)_;emits,a,record,to,the,side,output,identified,by,the,link,output,tag,param,output,tag,the,code,output,tag,that,identifies,the,side,output,to,emit,to,param,value,the,record,to,emit;public,abstract,x,void,output,output,tag,x,output,tag,x,value
