commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Returns the input {@code StreamTransformation}.  */ ;/**  * Returns the input {@code StreamTransformation}.  */ public StreamTransformation<T> getInput() {     return input. }
true;public;0;3;/**  * Returns the names of the split streams that this {@code SelectTransformation} selects.  */ ;/**  * Returns the names of the split streams that this {@code SelectTransformation} selects.  */ public List<String> getSelectedNames() {     return selectedNames. }
false;public;0;7;;@Override public Collection<StreamTransformation<?>> getTransitivePredecessors() {     List<StreamTransformation<?>> result = Lists.newArrayList().     result.add(this).     result.addAll(input.getTransitivePredecessors()).     return result. }
false;public,final;1;4;;@Override public final void setChainingStrategy(ChainingStrategy strategy) {     throw new UnsupportedOperationException("Cannot set chaining strategy on Select Transformation."). }
