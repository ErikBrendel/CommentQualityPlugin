commented;modifiers;parameterAmount;loc;comment;code
true;public,abstract;3;1;/**  * This method is called for each element in the (non-broadcast)  * {@link org.apache.flink.streaming.api.datastream.DataStream data stream}.  *  * <p>This function can output zero or more elements using the {@link Collector} parameter,  * query the current processing/event time, and also query and update the local keyed state.  * Finally, it has <b>read-only</b> access to the broadcast state.  * The context is only valid during the invocation of this method, do not store it.  *  * @param value The stream element.  * @param ctx A {@link ReadOnlyContext} that allows querying the timestamp of the element,  *            querying the current processing/event time and updating the broadcast state.  *            The context is only valid during the invocation of this method, do not store it.  * @param out The collector to emit resulting elements to  * @throws Exception The function may throw exceptions which cause the streaming program  *                   to fail and go into recovery.  */ ;/**  * This method is called for each element in the (non-broadcast)  * {@link org.apache.flink.streaming.api.datastream.DataStream data stream}.  *  * <p>This function can output zero or more elements using the {@link Collector} parameter,  * query the current processing/event time, and also query and update the local keyed state.  * Finally, it has <b>read-only</b> access to the broadcast state.  * The context is only valid during the invocation of this method, do not store it.  *  * @param value The stream element.  * @param ctx A {@link ReadOnlyContext} that allows querying the timestamp of the element,  *            querying the current processing/event time and updating the broadcast state.  *            The context is only valid during the invocation of this method, do not store it.  * @param out The collector to emit resulting elements to  * @throws Exception The function may throw exceptions which cause the streaming program  *                   to fail and go into recovery.  */ public abstract void processElement(final IN1 value, final ReadOnlyContext ctx, final Collector<OUT> out) throws Exception.
true;public,abstract;3;1;/**  * This method is called for each element in the  * {@link org.apache.flink.streaming.api.datastream.BroadcastStream broadcast stream}.  *  * <p>This function can output zero or more elements using the {@link Collector} parameter,  * query the current processing/event time, and also query and update the internal  * {@link org.apache.flink.api.common.state.BroadcastState broadcast state}. These can be done  * through the provided {@link Context}.  * The context is only valid during the invocation of this method, do not store it.  *  * @param value The stream element.  * @param ctx A {@link Context} that allows querying the timestamp of the element,  *            querying the current processing/event time and updating the broadcast state.  *            The context is only valid during the invocation of this method, do not store it.  * @param out The collector to emit resulting elements to  * @throws Exception The function may throw exceptions which cause the streaming program  *                   to fail and go into recovery.  */ ;/**  * This method is called for each element in the  * {@link org.apache.flink.streaming.api.datastream.BroadcastStream broadcast stream}.  *  * <p>This function can output zero or more elements using the {@link Collector} parameter,  * query the current processing/event time, and also query and update the internal  * {@link org.apache.flink.api.common.state.BroadcastState broadcast state}. These can be done  * through the provided {@link Context}.  * The context is only valid during the invocation of this method, do not store it.  *  * @param value The stream element.  * @param ctx A {@link Context} that allows querying the timestamp of the element,  *            querying the current processing/event time and updating the broadcast state.  *            The context is only valid during the invocation of this method, do not store it.  * @param out The collector to emit resulting elements to  * @throws Exception The function may throw exceptions which cause the streaming program  *                   to fail and go into recovery.  */ public abstract void processBroadcastElement(final IN2 value, final Context ctx, final Collector<OUT> out) throws Exception.
