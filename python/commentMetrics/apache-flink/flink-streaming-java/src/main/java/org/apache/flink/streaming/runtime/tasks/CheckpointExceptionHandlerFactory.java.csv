commented;modifiers;parameterAmount;loc;comment;code
true;public;2;10;/**  * Returns a {@link CheckpointExceptionHandler} that either causes a task to fail completely or to just declines  * checkpoint on exception, depending on the parameter flag.  */ ;/**  * Returns a {@link CheckpointExceptionHandler} that either causes a task to fail completely or to just declines  * checkpoint on exception, depending on the parameter flag.  */ public CheckpointExceptionHandler createCheckpointExceptionHandler(boolean failTaskOnCheckpointException, Environment environment) {     if (failTaskOnCheckpointException) {         return new FailingCheckpointExceptionHandler().     } else {         return new DecliningCheckpointExceptionHandler(environment).     } }
false;public;2;7;;@Override public void tryHandleCheckpointException(CheckpointMetaData checkpointMetaData, Exception exception) throws Exception {     throw exception. }
false;public;2;7;;@Override public void tryHandleCheckpointException(CheckpointMetaData checkpointMetaData, Exception exception) throws Exception {     environment.declineCheckpoint(checkpointMetaData.getCheckpointId(), exception). }
