# id;timestamp;commentText;codeText;commentWords;codeWords
EventTimeSessionWindows -> public static EventTimeSessionWindows withGap(Time size);1459869538;Creates a new {@code SessionWindows} {@link WindowAssigner} that assigns_elements to sessions based on the element timestamp.__@param size The session timeout, i.e. the time gap between sessions_@return The policy.;public static EventTimeSessionWindows withGap(Time size) {_		return new EventTimeSessionWindows(size.toMilliseconds())__	};creates,a,new,code,session,windows,link,window,assigner,that,assigns,elements,to,sessions,based,on,the,element,timestamp,param,size,the,session,timeout,i,e,the,time,gap,between,sessions,return,the,policy;public,static,event,time,session,windows,with,gap,time,size,return,new,event,time,session,windows,size,to,milliseconds
EventTimeSessionWindows -> public static EventTimeSessionWindows withGap(Time size);1466504046;Creates a new {@code SessionWindows} {@link WindowAssigner} that assigns_elements to sessions based on the element timestamp.__@param size The session timeout, i.e. the time gap between sessions_@return The policy.;public static EventTimeSessionWindows withGap(Time size) {_		return new EventTimeSessionWindows(size.toMilliseconds())__	};creates,a,new,code,session,windows,link,window,assigner,that,assigns,elements,to,sessions,based,on,the,element,timestamp,param,size,the,session,timeout,i,e,the,time,gap,between,sessions,return,the,policy;public,static,event,time,session,windows,with,gap,time,size,return,new,event,time,session,windows,size,to,milliseconds
EventTimeSessionWindows -> public static EventTimeSessionWindows withGap(Time size);1467040572;Creates a new {@code SessionWindows} {@link WindowAssigner} that assigns_elements to sessions based on the element timestamp.__@param size The session timeout, i.e. the time gap between sessions_@return The policy.;public static EventTimeSessionWindows withGap(Time size) {_		return new EventTimeSessionWindows(size.toMilliseconds())__	};creates,a,new,code,session,windows,link,window,assigner,that,assigns,elements,to,sessions,based,on,the,element,timestamp,param,size,the,session,timeout,i,e,the,time,gap,between,sessions,return,the,policy;public,static,event,time,session,windows,with,gap,time,size,return,new,event,time,session,windows,size,to,milliseconds
EventTimeSessionWindows -> public static EventTimeSessionWindows withGap(Time size);1485250954;Creates a new {@code SessionWindows} {@link WindowAssigner} that assigns_elements to sessions based on the element timestamp.__@param size The session timeout, i.e. the time gap between sessions_@return The policy.;public static EventTimeSessionWindows withGap(Time size) {_		return new EventTimeSessionWindows(size.toMilliseconds())__	};creates,a,new,code,session,windows,link,window,assigner,that,assigns,elements,to,sessions,based,on,the,element,timestamp,param,size,the,session,timeout,i,e,the,time,gap,between,sessions,return,the,policy;public,static,event,time,session,windows,with,gap,time,size,return,new,event,time,session,windows,size,to,milliseconds
EventTimeSessionWindows -> public static EventTimeSessionWindows withGap(Time size);1493195810;Creates a new {@code SessionWindows} {@link WindowAssigner} that assigns_elements to sessions based on the element timestamp.__@param size The session timeout, i.e. the time gap between sessions_@return The policy.;public static EventTimeSessionWindows withGap(Time size) {_		return new EventTimeSessionWindows(size.toMilliseconds())__	};creates,a,new,code,session,windows,link,window,assigner,that,assigns,elements,to,sessions,based,on,the,element,timestamp,param,size,the,session,timeout,i,e,the,time,gap,between,sessions,return,the,policy;public,static,event,time,session,windows,with,gap,time,size,return,new,event,time,session,windows,size,to,milliseconds
EventTimeSessionWindows -> public static EventTimeSessionWindows withGap(Time size);1493195810;Creates a new {@code SessionWindows} {@link WindowAssigner} that assigns_elements to sessions based on the element timestamp.__@param size The session timeout, i.e. the time gap between sessions_@return The policy.;public static EventTimeSessionWindows withGap(Time size) {_		return new EventTimeSessionWindows(size.toMilliseconds())__	};creates,a,new,code,session,windows,link,window,assigner,that,assigns,elements,to,sessions,based,on,the,element,timestamp,param,size,the,session,timeout,i,e,the,time,gap,between,sessions,return,the,policy;public,static,event,time,session,windows,with,gap,time,size,return,new,event,time,session,windows,size,to,milliseconds
EventTimeSessionWindows -> public static EventTimeSessionWindows withGap(Time size);1495484544;Creates a new {@code SessionWindows} {@link WindowAssigner} that assigns_elements to sessions based on the element timestamp.__@param size The session timeout, i.e. the time gap between sessions_@return The policy.;public static EventTimeSessionWindows withGap(Time size) {_		return new EventTimeSessionWindows(size.toMilliseconds())__	};creates,a,new,code,session,windows,link,window,assigner,that,assigns,elements,to,sessions,based,on,the,element,timestamp,param,size,the,session,timeout,i,e,the,time,gap,between,sessions,return,the,policy;public,static,event,time,session,windows,with,gap,time,size,return,new,event,time,session,windows,size,to,milliseconds
EventTimeSessionWindows -> public static EventTimeSessionWindows withGap(Time size);1517842482;Creates a new {@code SessionWindows} {@link WindowAssigner} that assigns_elements to sessions based on the element timestamp.__@param size The session timeout, i.e. the time gap between sessions_@return The policy.;public static EventTimeSessionWindows withGap(Time size) {_		return new EventTimeSessionWindows(size.toMilliseconds())__	};creates,a,new,code,session,windows,link,window,assigner,that,assigns,elements,to,sessions,based,on,the,element,timestamp,param,size,the,session,timeout,i,e,the,time,gap,between,sessions,return,the,policy;public,static,event,time,session,windows,with,gap,time,size,return,new,event,time,session,windows,size,to,milliseconds
EventTimeSessionWindows -> public static EventTimeSessionWindows withGap(Time size);1547737168;Creates a new {@code SessionWindows} {@link WindowAssigner} that assigns_elements to sessions based on the element timestamp.__@param size The session timeout, i.e. the time gap between sessions_@return The policy.;public static EventTimeSessionWindows withGap(Time size) {_		return new EventTimeSessionWindows(size.toMilliseconds())__	};creates,a,new,code,session,windows,link,window,assigner,that,assigns,elements,to,sessions,based,on,the,element,timestamp,param,size,the,session,timeout,i,e,the,time,gap,between,sessions,return,the,policy;public,static,event,time,session,windows,with,gap,time,size,return,new,event,time,session,windows,size,to,milliseconds
EventTimeSessionWindows -> @PublicEvolving 	public static <T> DynamicEventTimeSessionWindows<T> withDynamicGap(SessionWindowTimeGapExtractor<T> sessionWindowTimeGapExtractor);1517842482;Creates a new {@code SessionWindows} {@link WindowAssigner} that assigns_elements to sessions based on the element timestamp.__@param sessionWindowTimeGapExtractor The extractor to use to extract the time gap from the input elements_@return The policy.;@PublicEvolving_	public static <T> DynamicEventTimeSessionWindows<T> withDynamicGap(SessionWindowTimeGapExtractor<T> sessionWindowTimeGapExtractor) {_		return new DynamicEventTimeSessionWindows<>(sessionWindowTimeGapExtractor)__	};creates,a,new,code,session,windows,link,window,assigner,that,assigns,elements,to,sessions,based,on,the,element,timestamp,param,session,window,time,gap,extractor,the,extractor,to,use,to,extract,the,time,gap,from,the,input,elements,return,the,policy;public,evolving,public,static,t,dynamic,event,time,session,windows,t,with,dynamic,gap,session,window,time,gap,extractor,t,session,window,time,gap,extractor,return,new,dynamic,event,time,session,windows,session,window,time,gap,extractor
EventTimeSessionWindows -> @PublicEvolving 	public static <T> DynamicEventTimeSessionWindows<T> withDynamicGap(SessionWindowTimeGapExtractor<T> sessionWindowTimeGapExtractor);1547737168;Creates a new {@code SessionWindows} {@link WindowAssigner} that assigns_elements to sessions based on the element timestamp.__@param sessionWindowTimeGapExtractor The extractor to use to extract the time gap from the input elements_@return The policy.;@PublicEvolving_	public static <T> DynamicEventTimeSessionWindows<T> withDynamicGap(SessionWindowTimeGapExtractor<T> sessionWindowTimeGapExtractor) {_		return new DynamicEventTimeSessionWindows<>(sessionWindowTimeGapExtractor)__	};creates,a,new,code,session,windows,link,window,assigner,that,assigns,elements,to,sessions,based,on,the,element,timestamp,param,session,window,time,gap,extractor,the,extractor,to,use,to,extract,the,time,gap,from,the,input,elements,return,the,policy;public,evolving,public,static,t,dynamic,event,time,session,windows,t,with,dynamic,gap,session,window,time,gap,extractor,t,session,window,time,gap,extractor,return,new,dynamic,event,time,session,windows,session,window,time,gap,extractor
EventTimeSessionWindows -> public void mergeWindows(Collection<TimeWindow> windows, MergingWindowAssigner.MergeCallback<TimeWindow> c);1459869538;Merge overlapping {@link TimeWindow}s.;public void mergeWindows(Collection<TimeWindow> windows, MergingWindowAssigner.MergeCallback<TimeWindow> c) {_		TimeWindow.mergeWindows(windows, c)__	};merge,overlapping,link,time,window,s;public,void,merge,windows,collection,time,window,windows,merging,window,assigner,merge,callback,time,window,c,time,window,merge,windows,windows,c
EventTimeSessionWindows -> public void mergeWindows(Collection<TimeWindow> windows, MergingWindowAssigner.MergeCallback<TimeWindow> c);1466504046;Merge overlapping {@link TimeWindow}s.;public void mergeWindows(Collection<TimeWindow> windows, MergingWindowAssigner.MergeCallback<TimeWindow> c) {_		TimeWindow.mergeWindows(windows, c)__	};merge,overlapping,link,time,window,s;public,void,merge,windows,collection,time,window,windows,merging,window,assigner,merge,callback,time,window,c,time,window,merge,windows,windows,c
EventTimeSessionWindows -> public void mergeWindows(Collection<TimeWindow> windows, MergingWindowAssigner.MergeCallback<TimeWindow> c);1467040572;Merge overlapping {@link TimeWindow}s.;public void mergeWindows(Collection<TimeWindow> windows, MergingWindowAssigner.MergeCallback<TimeWindow> c) {_		TimeWindow.mergeWindows(windows, c)__	};merge,overlapping,link,time,window,s;public,void,merge,windows,collection,time,window,windows,merging,window,assigner,merge,callback,time,window,c,time,window,merge,windows,windows,c
EventTimeSessionWindows -> public void mergeWindows(Collection<TimeWindow> windows, MergingWindowAssigner.MergeCallback<TimeWindow> c);1485250954;Merge overlapping {@link TimeWindow}s.;public void mergeWindows(Collection<TimeWindow> windows, MergingWindowAssigner.MergeCallback<TimeWindow> c) {_		TimeWindow.mergeWindows(windows, c)__	};merge,overlapping,link,time,window,s;public,void,merge,windows,collection,time,window,windows,merging,window,assigner,merge,callback,time,window,c,time,window,merge,windows,windows,c
EventTimeSessionWindows -> public void mergeWindows(Collection<TimeWindow> windows, MergingWindowAssigner.MergeCallback<TimeWindow> c);1493195810;Merge overlapping {@link TimeWindow}s.;public void mergeWindows(Collection<TimeWindow> windows, MergingWindowAssigner.MergeCallback<TimeWindow> c) {_		TimeWindow.mergeWindows(windows, c)__	};merge,overlapping,link,time,window,s;public,void,merge,windows,collection,time,window,windows,merging,window,assigner,merge,callback,time,window,c,time,window,merge,windows,windows,c
EventTimeSessionWindows -> public void mergeWindows(Collection<TimeWindow> windows, MergingWindowAssigner.MergeCallback<TimeWindow> c);1493195810;Merge overlapping {@link TimeWindow}s.;public void mergeWindows(Collection<TimeWindow> windows, MergingWindowAssigner.MergeCallback<TimeWindow> c) {_		TimeWindow.mergeWindows(windows, c)__	};merge,overlapping,link,time,window,s;public,void,merge,windows,collection,time,window,windows,merging,window,assigner,merge,callback,time,window,c,time,window,merge,windows,windows,c
EventTimeSessionWindows -> public void mergeWindows(Collection<TimeWindow> windows, MergingWindowAssigner.MergeCallback<TimeWindow> c);1495484544;Merge overlapping {@link TimeWindow}s.;public void mergeWindows(Collection<TimeWindow> windows, MergingWindowAssigner.MergeCallback<TimeWindow> c) {_		TimeWindow.mergeWindows(windows, c)__	};merge,overlapping,link,time,window,s;public,void,merge,windows,collection,time,window,windows,merging,window,assigner,merge,callback,time,window,c,time,window,merge,windows,windows,c
EventTimeSessionWindows -> public void mergeWindows(Collection<TimeWindow> windows, MergingWindowAssigner.MergeCallback<TimeWindow> c);1517842482;Merge overlapping {@link TimeWindow}s.;public void mergeWindows(Collection<TimeWindow> windows, MergingWindowAssigner.MergeCallback<TimeWindow> c) {_		TimeWindow.mergeWindows(windows, c)__	};merge,overlapping,link,time,window,s;public,void,merge,windows,collection,time,window,windows,merging,window,assigner,merge,callback,time,window,c,time,window,merge,windows,windows,c
