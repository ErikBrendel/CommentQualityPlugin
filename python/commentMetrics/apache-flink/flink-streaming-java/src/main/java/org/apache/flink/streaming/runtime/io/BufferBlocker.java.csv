commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Adds a buffer or event to the blocker.  *  * @param boe The buffer or event to be added into the blocker.  */ ;/**  * Adds a buffer or event to the blocker.  *  * @param boe The buffer or event to be added into the blocker.  */ void add(BufferOrEvent boe) throws IOException.
true;;0;1;/**  * Starts a new sequence of buffers and event without reusing the same resources and  * returns the current sequence of buffers for reading.  *  * @return The readable sequence of buffers and events, or 'null', if nothing was added.  */ ;/**  * Starts a new sequence of buffers and event without reusing the same resources and  * returns the current sequence of buffers for reading.  *  * @return The readable sequence of buffers and events, or 'null', if nothing was added.  */ BufferOrEventSequence rollOverWithoutReusingResources() throws IOException.
true;;0;1;/**  * Starts a new sequence of buffers and event reusing the same resources and  * returns the current sequence of buffers for reading.  *  * @return The readable sequence of buffers and events, or 'null', if nothing was added.  */ ;/**  * Starts a new sequence of buffers and event reusing the same resources and  * returns the current sequence of buffers for reading.  *  * @return The readable sequence of buffers and events, or 'null', if nothing was added.  */ BufferOrEventSequence rollOverReusingResources() throws IOException.
true;;0;1;/**  * Cleans up all the resources in the current sequence.  */ ;/**  * Cleans up all the resources in the current sequence.  */ void close() throws IOException.
true;;0;1;/**  * Gets the number of bytes blocked in the current sequence.  *  * @return the number of bytes blocked in the current sequence.  */ ;/**  * Gets the number of bytes blocked in the current sequence.  *  * @return the number of bytes blocked in the current sequence.  */ long getBytesBlocked().
