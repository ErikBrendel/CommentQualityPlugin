# id;timestamp;commentText;codeText;commentWords;codeWords
SerializedCheckpointData -> public byte[] getSerializedData();1509118642;Gets the binary data for the serialized elements._@return The binary data for the serialized elements.;public byte[] getSerializedData() {_		return serializedData__	};gets,the,binary,data,for,the,serialized,elements,return,the,binary,data,for,the,serialized,elements;public,byte,get,serialized,data,return,serialized,data
SerializedCheckpointData -> public byte[] getSerializedData();1509646806;Gets the binary data for the serialized elements._@return The binary data for the serialized elements.;public byte[] getSerializedData() {_		return serializedData__	};gets,the,binary,data,for,the,serialized,elements,return,the,binary,data,for,the,serialized,elements;public,byte,get,serialized,data,return,serialized,data
SerializedCheckpointData -> public byte[] getSerializedData();1534937605;Gets the binary data for the serialized elements._@return The binary data for the serialized elements.;public byte[] getSerializedData() {_		return serializedData__	};gets,the,binary,data,for,the,serialized,elements,return,the,binary,data,for,the,serialized,elements;public,byte,get,serialized,data,return,serialized,data
SerializedCheckpointData -> public static <T> ArrayDeque<Tuple2<Long, Set<T>>> toDeque( 			SerializedCheckpointData[] data, 			TypeSerializer<T> serializer) throws IOException;1509118642;De-serializes an array of SerializedCheckpointData back into an ArrayDeque of element checkpoints.__@param data The data to be deserialized._@param serializer The serializer used to deserialize the data._@param <T> The type of the elements._@return An ArrayDeque of element checkpoints.__@throws IOException Thrown, if the serialization fails.;public static <T> ArrayDeque<Tuple2<Long, Set<T>>> toDeque(_			SerializedCheckpointData[] data,_			TypeSerializer<T> serializer) throws IOException {__		ArrayDeque<Tuple2<Long, Set<T>>> deque = new ArrayDeque<>(data.length)__		DataInputDeserializer deser = null___		for (SerializedCheckpointData checkpoint : data) {_			byte[] serializedData = checkpoint.getSerializedData()__			if (deser == null) {_				deser = new DataInputDeserializer(serializedData, 0, serializedData.length)__			}_			else {_				deser.setBuffer(serializedData, 0, serializedData.length)__			}__			final Set<T> ids = new HashSet<>(checkpoint.getNumIds())__			final int numIds = checkpoint.getNumIds()___			for (int i = 0_ i < numIds_ i++) {_				ids.add(serializer.deserialize(deser))__			}__			deque.addLast(new Tuple2<Long, Set<T>>(checkpoint.checkpointId, ids))__		}__		return deque__	};de,serializes,an,array,of,serialized,checkpoint,data,back,into,an,array,deque,of,element,checkpoints,param,data,the,data,to,be,deserialized,param,serializer,the,serializer,used,to,deserialize,the,data,param,t,the,type,of,the,elements,return,an,array,deque,of,element,checkpoints,throws,ioexception,thrown,if,the,serialization,fails;public,static,t,array,deque,tuple2,long,set,t,to,deque,serialized,checkpoint,data,data,type,serializer,t,serializer,throws,ioexception,array,deque,tuple2,long,set,t,deque,new,array,deque,data,length,data,input,deserializer,deser,null,for,serialized,checkpoint,data,checkpoint,data,byte,serialized,data,checkpoint,get,serialized,data,if,deser,null,deser,new,data,input,deserializer,serialized,data,0,serialized,data,length,else,deser,set,buffer,serialized,data,0,serialized,data,length,final,set,t,ids,new,hash,set,checkpoint,get,num,ids,final,int,num,ids,checkpoint,get,num,ids,for,int,i,0,i,num,ids,i,ids,add,serializer,deserialize,deser,deque,add,last,new,tuple2,long,set,t,checkpoint,checkpoint,id,ids,return,deque
SerializedCheckpointData -> public static <T> ArrayDeque<Tuple2<Long, Set<T>>> toDeque( 			SerializedCheckpointData[] data, 			TypeSerializer<T> serializer) throws IOException;1509646806;De-serializes an array of SerializedCheckpointData back into an ArrayDeque of element checkpoints.__@param data The data to be deserialized._@param serializer The serializer used to deserialize the data._@param <T> The type of the elements._@return An ArrayDeque of element checkpoints.__@throws IOException Thrown, if the serialization fails.;public static <T> ArrayDeque<Tuple2<Long, Set<T>>> toDeque(_			SerializedCheckpointData[] data,_			TypeSerializer<T> serializer) throws IOException {__		ArrayDeque<Tuple2<Long, Set<T>>> deque = new ArrayDeque<>(data.length)__		DataInputDeserializer deser = null___		for (SerializedCheckpointData checkpoint : data) {_			byte[] serializedData = checkpoint.getSerializedData()__			if (deser == null) {_				deser = new DataInputDeserializer(serializedData, 0, serializedData.length)__			}_			else {_				deser.setBuffer(serializedData, 0, serializedData.length)__			}__			final Set<T> ids = new HashSet<>(checkpoint.getNumIds())__			final int numIds = checkpoint.getNumIds()___			for (int i = 0_ i < numIds_ i++) {_				ids.add(serializer.deserialize(deser))__			}__			deque.addLast(new Tuple2<Long, Set<T>>(checkpoint.checkpointId, ids))__		}__		return deque__	};de,serializes,an,array,of,serialized,checkpoint,data,back,into,an,array,deque,of,element,checkpoints,param,data,the,data,to,be,deserialized,param,serializer,the,serializer,used,to,deserialize,the,data,param,t,the,type,of,the,elements,return,an,array,deque,of,element,checkpoints,throws,ioexception,thrown,if,the,serialization,fails;public,static,t,array,deque,tuple2,long,set,t,to,deque,serialized,checkpoint,data,data,type,serializer,t,serializer,throws,ioexception,array,deque,tuple2,long,set,t,deque,new,array,deque,data,length,data,input,deserializer,deser,null,for,serialized,checkpoint,data,checkpoint,data,byte,serialized,data,checkpoint,get,serialized,data,if,deser,null,deser,new,data,input,deserializer,serialized,data,0,serialized,data,length,else,deser,set,buffer,serialized,data,0,serialized,data,length,final,set,t,ids,new,hash,set,checkpoint,get,num,ids,final,int,num,ids,checkpoint,get,num,ids,for,int,i,0,i,num,ids,i,ids,add,serializer,deserialize,deser,deque,add,last,new,tuple2,long,set,t,checkpoint,checkpoint,id,ids,return,deque
SerializedCheckpointData -> public static <T> ArrayDeque<Tuple2<Long, Set<T>>> toDeque( 			SerializedCheckpointData[] data, 			TypeSerializer<T> serializer) throws IOException;1534937605;De-serializes an array of SerializedCheckpointData back into an ArrayDeque of element checkpoints.__@param data The data to be deserialized._@param serializer The serializer used to deserialize the data._@param <T> The type of the elements._@return An ArrayDeque of element checkpoints.__@throws IOException Thrown, if the serialization fails.;public static <T> ArrayDeque<Tuple2<Long, Set<T>>> toDeque(_			SerializedCheckpointData[] data,_			TypeSerializer<T> serializer) throws IOException {__		ArrayDeque<Tuple2<Long, Set<T>>> deque = new ArrayDeque<>(data.length)__		DataInputDeserializer deser = null___		for (SerializedCheckpointData checkpoint : data) {_			byte[] serializedData = checkpoint.getSerializedData()__			if (deser == null) {_				deser = new DataInputDeserializer(serializedData, 0, serializedData.length)__			}_			else {_				deser.setBuffer(serializedData)__			}__			final Set<T> ids = new HashSet<>(checkpoint.getNumIds())__			final int numIds = checkpoint.getNumIds()___			for (int i = 0_ i < numIds_ i++) {_				ids.add(serializer.deserialize(deser))__			}__			deque.addLast(new Tuple2<Long, Set<T>>(checkpoint.checkpointId, ids))__		}__		return deque__	};de,serializes,an,array,of,serialized,checkpoint,data,back,into,an,array,deque,of,element,checkpoints,param,data,the,data,to,be,deserialized,param,serializer,the,serializer,used,to,deserialize,the,data,param,t,the,type,of,the,elements,return,an,array,deque,of,element,checkpoints,throws,ioexception,thrown,if,the,serialization,fails;public,static,t,array,deque,tuple2,long,set,t,to,deque,serialized,checkpoint,data,data,type,serializer,t,serializer,throws,ioexception,array,deque,tuple2,long,set,t,deque,new,array,deque,data,length,data,input,deserializer,deser,null,for,serialized,checkpoint,data,checkpoint,data,byte,serialized,data,checkpoint,get,serialized,data,if,deser,null,deser,new,data,input,deserializer,serialized,data,0,serialized,data,length,else,deser,set,buffer,serialized,data,final,set,t,ids,new,hash,set,checkpoint,get,num,ids,final,int,num,ids,checkpoint,get,num,ids,for,int,i,0,i,num,ids,i,ids,add,serializer,deserialize,deser,deque,add,last,new,tuple2,long,set,t,checkpoint,checkpoint,id,ids,return,deque
SerializedCheckpointData -> public SerializedCheckpointData(long checkpointId, byte[] serializedData, int numIds);1509118642;Creates a SerializedCheckpointData object for the given serialized data.__@param checkpointId The checkpointId of the checkpoint._@param serializedData The serialized IDs in this checkpoint._@param numIds The number of IDs in the checkpoint.;public SerializedCheckpointData(long checkpointId, byte[] serializedData, int numIds) {_		this.checkpointId = checkpointId__		this.serializedData = serializedData__		this.numIds = numIds__	};creates,a,serialized,checkpoint,data,object,for,the,given,serialized,data,param,checkpoint,id,the,checkpoint,id,of,the,checkpoint,param,serialized,data,the,serialized,ids,in,this,checkpoint,param,num,ids,the,number,of,ids,in,the,checkpoint;public,serialized,checkpoint,data,long,checkpoint,id,byte,serialized,data,int,num,ids,this,checkpoint,id,checkpoint,id,this,serialized,data,serialized,data,this,num,ids,num,ids
SerializedCheckpointData -> public SerializedCheckpointData(long checkpointId, byte[] serializedData, int numIds);1509646806;Creates a SerializedCheckpointData object for the given serialized data.__@param checkpointId The checkpointId of the checkpoint._@param serializedData The serialized IDs in this checkpoint._@param numIds The number of IDs in the checkpoint.;public SerializedCheckpointData(long checkpointId, byte[] serializedData, int numIds) {_		this.checkpointId = checkpointId__		this.serializedData = serializedData__		this.numIds = numIds__	};creates,a,serialized,checkpoint,data,object,for,the,given,serialized,data,param,checkpoint,id,the,checkpoint,id,of,the,checkpoint,param,serialized,data,the,serialized,ids,in,this,checkpoint,param,num,ids,the,number,of,ids,in,the,checkpoint;public,serialized,checkpoint,data,long,checkpoint,id,byte,serialized,data,int,num,ids,this,checkpoint,id,checkpoint,id,this,serialized,data,serialized,data,this,num,ids,num,ids
SerializedCheckpointData -> public SerializedCheckpointData(long checkpointId, byte[] serializedData, int numIds);1534937605;Creates a SerializedCheckpointData object for the given serialized data.__@param checkpointId The checkpointId of the checkpoint._@param serializedData The serialized IDs in this checkpoint._@param numIds The number of IDs in the checkpoint.;public SerializedCheckpointData(long checkpointId, byte[] serializedData, int numIds) {_		this.checkpointId = checkpointId__		this.serializedData = serializedData__		this.numIds = numIds__	};creates,a,serialized,checkpoint,data,object,for,the,given,serialized,data,param,checkpoint,id,the,checkpoint,id,of,the,checkpoint,param,serialized,data,the,serialized,ids,in,this,checkpoint,param,num,ids,the,number,of,ids,in,the,checkpoint;public,serialized,checkpoint,data,long,checkpoint,id,byte,serialized,data,int,num,ids,this,checkpoint,id,checkpoint,id,this,serialized,data,serialized,data,this,num,ids,num,ids
SerializedCheckpointData -> public long getCheckpointId();1509118642;Gets the checkpointId of the checkpoint._@return The checkpointId of the checkpoint.;public long getCheckpointId() {_		return checkpointId__	};gets,the,checkpoint,id,of,the,checkpoint,return,the,checkpoint,id,of,the,checkpoint;public,long,get,checkpoint,id,return,checkpoint,id
SerializedCheckpointData -> public long getCheckpointId();1509646806;Gets the checkpointId of the checkpoint._@return The checkpointId of the checkpoint.;public long getCheckpointId() {_		return checkpointId__	};gets,the,checkpoint,id,of,the,checkpoint,return,the,checkpoint,id,of,the,checkpoint;public,long,get,checkpoint,id,return,checkpoint,id
SerializedCheckpointData -> public long getCheckpointId();1534937605;Gets the checkpointId of the checkpoint._@return The checkpointId of the checkpoint.;public long getCheckpointId() {_		return checkpointId__	};gets,the,checkpoint,id,of,the,checkpoint,return,the,checkpoint,id,of,the,checkpoint;public,long,get,checkpoint,id,return,checkpoint,id
SerializedCheckpointData -> public int getNumIds();1509118642;Gets the number of IDs in the checkpoint._@return The number of IDs in the checkpoint.;public int getNumIds() {_		return numIds__	};gets,the,number,of,ids,in,the,checkpoint,return,the,number,of,ids,in,the,checkpoint;public,int,get,num,ids,return,num,ids
SerializedCheckpointData -> public int getNumIds();1509646806;Gets the number of IDs in the checkpoint._@return The number of IDs in the checkpoint.;public int getNumIds() {_		return numIds__	};gets,the,number,of,ids,in,the,checkpoint,return,the,number,of,ids,in,the,checkpoint;public,int,get,num,ids,return,num,ids
SerializedCheckpointData -> public int getNumIds();1534937605;Gets the number of IDs in the checkpoint._@return The number of IDs in the checkpoint.;public int getNumIds() {_		return numIds__	};gets,the,number,of,ids,in,the,checkpoint,return,the,number,of,ids,in,the,checkpoint;public,int,get,num,ids,return,num,ids
SerializedCheckpointData -> public static <T> SerializedCheckpointData[] fromDeque( 			ArrayDeque<Tuple2<Long, Set<T>>> checkpoints, 			TypeSerializer<T> serializer) throws IOException;1509118642;Converts a list of checkpoints with elements into an array of SerializedCheckpointData.__@param checkpoints The checkpoints to be converted into IdsCheckpointData._@param serializer The serializer to serialize the IDs._@param <T> The type of the ID._@return An array of serializable SerializedCheckpointData, one per entry in the queue.__@throws IOException Thrown, if the serialization fails.;public static <T> SerializedCheckpointData[] fromDeque(_			ArrayDeque<Tuple2<Long, Set<T>>> checkpoints,_			TypeSerializer<T> serializer) throws IOException {_		return fromDeque(checkpoints, serializer, new DataOutputSerializer(128))__	};converts,a,list,of,checkpoints,with,elements,into,an,array,of,serialized,checkpoint,data,param,checkpoints,the,checkpoints,to,be,converted,into,ids,checkpoint,data,param,serializer,the,serializer,to,serialize,the,ids,param,t,the,type,of,the,id,return,an,array,of,serializable,serialized,checkpoint,data,one,per,entry,in,the,queue,throws,ioexception,thrown,if,the,serialization,fails;public,static,t,serialized,checkpoint,data,from,deque,array,deque,tuple2,long,set,t,checkpoints,type,serializer,t,serializer,throws,ioexception,return,from,deque,checkpoints,serializer,new,data,output,serializer,128
SerializedCheckpointData -> public static <T> SerializedCheckpointData[] fromDeque( 			ArrayDeque<Tuple2<Long, Set<T>>> checkpoints, 			TypeSerializer<T> serializer) throws IOException;1509646806;Converts a list of checkpoints with elements into an array of SerializedCheckpointData.__@param checkpoints The checkpoints to be converted into IdsCheckpointData._@param serializer The serializer to serialize the IDs._@param <T> The type of the ID._@return An array of serializable SerializedCheckpointData, one per entry in the queue.__@throws IOException Thrown, if the serialization fails.;public static <T> SerializedCheckpointData[] fromDeque(_			ArrayDeque<Tuple2<Long, Set<T>>> checkpoints,_			TypeSerializer<T> serializer) throws IOException {_		return fromDeque(checkpoints, serializer, new DataOutputSerializer(128))__	};converts,a,list,of,checkpoints,with,elements,into,an,array,of,serialized,checkpoint,data,param,checkpoints,the,checkpoints,to,be,converted,into,ids,checkpoint,data,param,serializer,the,serializer,to,serialize,the,ids,param,t,the,type,of,the,id,return,an,array,of,serializable,serialized,checkpoint,data,one,per,entry,in,the,queue,throws,ioexception,thrown,if,the,serialization,fails;public,static,t,serialized,checkpoint,data,from,deque,array,deque,tuple2,long,set,t,checkpoints,type,serializer,t,serializer,throws,ioexception,return,from,deque,checkpoints,serializer,new,data,output,serializer,128
SerializedCheckpointData -> public static <T> SerializedCheckpointData[] fromDeque( 			ArrayDeque<Tuple2<Long, Set<T>>> checkpoints, 			TypeSerializer<T> serializer) throws IOException;1534937605;Converts a list of checkpoints with elements into an array of SerializedCheckpointData.__@param checkpoints The checkpoints to be converted into IdsCheckpointData._@param serializer The serializer to serialize the IDs._@param <T> The type of the ID._@return An array of serializable SerializedCheckpointData, one per entry in the queue.__@throws IOException Thrown, if the serialization fails.;public static <T> SerializedCheckpointData[] fromDeque(_			ArrayDeque<Tuple2<Long, Set<T>>> checkpoints,_			TypeSerializer<T> serializer) throws IOException {_		return fromDeque(checkpoints, serializer, new DataOutputSerializer(128))__	};converts,a,list,of,checkpoints,with,elements,into,an,array,of,serialized,checkpoint,data,param,checkpoints,the,checkpoints,to,be,converted,into,ids,checkpoint,data,param,serializer,the,serializer,to,serialize,the,ids,param,t,the,type,of,the,id,return,an,array,of,serializable,serialized,checkpoint,data,one,per,entry,in,the,queue,throws,ioexception,thrown,if,the,serialization,fails;public,static,t,serialized,checkpoint,data,from,deque,array,deque,tuple2,long,set,t,checkpoints,type,serializer,t,serializer,throws,ioexception,return,from,deque,checkpoints,serializer,new,data,output,serializer,128
SerializedCheckpointData -> public static <T> SerializedCheckpointData[] fromDeque( 			ArrayDeque<Tuple2<Long, Set<T>>> checkpoints, 			TypeSerializer<T> serializer, 			DataOutputSerializer outputBuffer) throws IOException;1509118642;Converts a list of checkpoints into an array of SerializedCheckpointData.__@param checkpoints The checkpoints to be converted into IdsCheckpointData._@param serializer The serializer to serialize the IDs._@param outputBuffer The reusable serialization buffer._@param <T> The type of the ID._@return An array of serializable SerializedCheckpointData, one per entry in the queue.__@throws IOException Thrown, if the serialization fails.;public static <T> SerializedCheckpointData[] fromDeque(_			ArrayDeque<Tuple2<Long, Set<T>>> checkpoints,_			TypeSerializer<T> serializer,_			DataOutputSerializer outputBuffer) throws IOException {__		SerializedCheckpointData[] serializedCheckpoints = new SerializedCheckpointData[checkpoints.size()]___		int pos = 0__		for (Tuple2<Long, Set<T>> checkpoint : checkpoints) {_			outputBuffer.clear()__			Set<T> checkpointIds = checkpoint.f1___			for (T id : checkpointIds) {_				serializer.serialize(id, outputBuffer)__			}__			serializedCheckpoints[pos++] = new SerializedCheckpointData(_					checkpoint.f0, outputBuffer.getCopyOfBuffer(), checkpointIds.size())__		}__		return serializedCheckpoints__	};converts,a,list,of,checkpoints,into,an,array,of,serialized,checkpoint,data,param,checkpoints,the,checkpoints,to,be,converted,into,ids,checkpoint,data,param,serializer,the,serializer,to,serialize,the,ids,param,output,buffer,the,reusable,serialization,buffer,param,t,the,type,of,the,id,return,an,array,of,serializable,serialized,checkpoint,data,one,per,entry,in,the,queue,throws,ioexception,thrown,if,the,serialization,fails;public,static,t,serialized,checkpoint,data,from,deque,array,deque,tuple2,long,set,t,checkpoints,type,serializer,t,serializer,data,output,serializer,output,buffer,throws,ioexception,serialized,checkpoint,data,serialized,checkpoints,new,serialized,checkpoint,data,checkpoints,size,int,pos,0,for,tuple2,long,set,t,checkpoint,checkpoints,output,buffer,clear,set,t,checkpoint,ids,checkpoint,f1,for,t,id,checkpoint,ids,serializer,serialize,id,output,buffer,serialized,checkpoints,pos,new,serialized,checkpoint,data,checkpoint,f0,output,buffer,get,copy,of,buffer,checkpoint,ids,size,return,serialized,checkpoints
SerializedCheckpointData -> public static <T> SerializedCheckpointData[] fromDeque( 			ArrayDeque<Tuple2<Long, Set<T>>> checkpoints, 			TypeSerializer<T> serializer, 			DataOutputSerializer outputBuffer) throws IOException;1509646806;Converts a list of checkpoints into an array of SerializedCheckpointData.__@param checkpoints The checkpoints to be converted into IdsCheckpointData._@param serializer The serializer to serialize the IDs._@param outputBuffer The reusable serialization buffer._@param <T> The type of the ID._@return An array of serializable SerializedCheckpointData, one per entry in the queue.__@throws IOException Thrown, if the serialization fails.;public static <T> SerializedCheckpointData[] fromDeque(_			ArrayDeque<Tuple2<Long, Set<T>>> checkpoints,_			TypeSerializer<T> serializer,_			DataOutputSerializer outputBuffer) throws IOException {__		SerializedCheckpointData[] serializedCheckpoints = new SerializedCheckpointData[checkpoints.size()]___		int pos = 0__		for (Tuple2<Long, Set<T>> checkpoint : checkpoints) {_			outputBuffer.clear()__			Set<T> checkpointIds = checkpoint.f1___			for (T id : checkpointIds) {_				serializer.serialize(id, outputBuffer)__			}__			serializedCheckpoints[pos++] = new SerializedCheckpointData(_					checkpoint.f0, outputBuffer.getCopyOfBuffer(), checkpointIds.size())__		}__		return serializedCheckpoints__	};converts,a,list,of,checkpoints,into,an,array,of,serialized,checkpoint,data,param,checkpoints,the,checkpoints,to,be,converted,into,ids,checkpoint,data,param,serializer,the,serializer,to,serialize,the,ids,param,output,buffer,the,reusable,serialization,buffer,param,t,the,type,of,the,id,return,an,array,of,serializable,serialized,checkpoint,data,one,per,entry,in,the,queue,throws,ioexception,thrown,if,the,serialization,fails;public,static,t,serialized,checkpoint,data,from,deque,array,deque,tuple2,long,set,t,checkpoints,type,serializer,t,serializer,data,output,serializer,output,buffer,throws,ioexception,serialized,checkpoint,data,serialized,checkpoints,new,serialized,checkpoint,data,checkpoints,size,int,pos,0,for,tuple2,long,set,t,checkpoint,checkpoints,output,buffer,clear,set,t,checkpoint,ids,checkpoint,f1,for,t,id,checkpoint,ids,serializer,serialize,id,output,buffer,serialized,checkpoints,pos,new,serialized,checkpoint,data,checkpoint,f0,output,buffer,get,copy,of,buffer,checkpoint,ids,size,return,serialized,checkpoints
SerializedCheckpointData -> public static <T> SerializedCheckpointData[] fromDeque( 			ArrayDeque<Tuple2<Long, Set<T>>> checkpoints, 			TypeSerializer<T> serializer, 			DataOutputSerializer outputBuffer) throws IOException;1534937605;Converts a list of checkpoints into an array of SerializedCheckpointData.__@param checkpoints The checkpoints to be converted into IdsCheckpointData._@param serializer The serializer to serialize the IDs._@param outputBuffer The reusable serialization buffer._@param <T> The type of the ID._@return An array of serializable SerializedCheckpointData, one per entry in the queue.__@throws IOException Thrown, if the serialization fails.;public static <T> SerializedCheckpointData[] fromDeque(_			ArrayDeque<Tuple2<Long, Set<T>>> checkpoints,_			TypeSerializer<T> serializer,_			DataOutputSerializer outputBuffer) throws IOException {__		SerializedCheckpointData[] serializedCheckpoints = new SerializedCheckpointData[checkpoints.size()]___		int pos = 0__		for (Tuple2<Long, Set<T>> checkpoint : checkpoints) {_			outputBuffer.clear()__			Set<T> checkpointIds = checkpoint.f1___			for (T id : checkpointIds) {_				serializer.serialize(id, outputBuffer)__			}__			serializedCheckpoints[pos++] = new SerializedCheckpointData(_					checkpoint.f0, outputBuffer.getCopyOfBuffer(), checkpointIds.size())__		}__		return serializedCheckpoints__	};converts,a,list,of,checkpoints,into,an,array,of,serialized,checkpoint,data,param,checkpoints,the,checkpoints,to,be,converted,into,ids,checkpoint,data,param,serializer,the,serializer,to,serialize,the,ids,param,output,buffer,the,reusable,serialization,buffer,param,t,the,type,of,the,id,return,an,array,of,serializable,serialized,checkpoint,data,one,per,entry,in,the,queue,throws,ioexception,thrown,if,the,serialization,fails;public,static,t,serialized,checkpoint,data,from,deque,array,deque,tuple2,long,set,t,checkpoints,type,serializer,t,serializer,data,output,serializer,output,buffer,throws,ioexception,serialized,checkpoint,data,serialized,checkpoints,new,serialized,checkpoint,data,checkpoints,size,int,pos,0,for,tuple2,long,set,t,checkpoint,checkpoints,output,buffer,clear,set,t,checkpoint,ids,checkpoint,f1,for,t,id,checkpoint,ids,serializer,serialize,id,output,buffer,serialized,checkpoints,pos,new,serialized,checkpoint,data,checkpoint,f0,output,buffer,get,copy,of,buffer,checkpoint,ids,size,return,serialized,checkpoints
