commented;modifiers;parameterAmount;loc;comment;code
true;;4;1;/**  * Optionally evicts elements. Called before windowing function.  *  * @param elements The elements currently in the pane.  * @param size The current number of elements in the pane.  * @param window The {@link Window}  * @param evictorContext The context for the Evictor  */ ;/**  * Optionally evicts elements. Called before windowing function.  *  * @param elements The elements currently in the pane.  * @param size The current number of elements in the pane.  * @param window The {@link Window}  * @param evictorContext The context for the Evictor  */ void evictBefore(Iterable<TimestampedValue<T>> elements, int size, W window, EvictorContext evictorContext).
true;;4;1;/**  * Optionally evicts elements. Called after windowing function.  *  * @param elements The elements currently in the pane.  * @param size The current number of elements in the pane.  * @param window The {@link Window}  * @param evictorContext The context for the Evictor  */ ;/**  * Optionally evicts elements. Called after windowing function.  *  * @param elements The elements currently in the pane.  * @param size The current number of elements in the pane.  * @param window The {@link Window}  * @param evictorContext The context for the Evictor  */ void evictAfter(Iterable<TimestampedValue<T>> elements, int size, W window, EvictorContext evictorContext).
true;;0;1;/**  * Returns the current processing time.  */ ;/**  * Returns the current processing time.  */ long getCurrentProcessingTime().
true;;0;1;/**  * Returns the metric group for this {@link Evictor}. This is the same metric  * group that would be returned from {@link RuntimeContext#getMetricGroup()} in a user  * function.  *  * <p>You must not call methods that create metric objects  * (such as {@link MetricGroup#counter(int)} multiple times but instead call once  * and store the metric object in a field.  */ ;/**  * Returns the metric group for this {@link Evictor}. This is the same metric  * group that would be returned from {@link RuntimeContext#getMetricGroup()} in a user  * function.  *  * <p>You must not call methods that create metric objects  * (such as {@link MetricGroup#counter(int)} multiple times but instead call once  * and store the metric object in a field.  */ MetricGroup getMetricGroup().
true;;0;1;/**  * Returns the current watermark time.  */ ;/**  * Returns the current watermark time.  */ long getCurrentWatermark().
