commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Returns the current processing time.  */ ;/**  * Returns the current processing time.  */ long currentProcessingTime().
true;;0;1;/**  * Returns the current event-time watermark.  */ ;/**  * Returns the current event-time watermark.  */ long currentWatermark().
true;;2;1;/**  * Registers a timer to be fired when processing time passes the given time. The namespace  * you pass here will be provided when the timer fires.  */ ;/**  * Registers a timer to be fired when processing time passes the given time. The namespace  * you pass here will be provided when the timer fires.  */ void registerProcessingTimeTimer(N namespace, long time).
true;;2;1;/**  * Deletes the timer for the given key and namespace.  */ ;/**  * Deletes the timer for the given key and namespace.  */ void deleteProcessingTimeTimer(N namespace, long time).
true;;2;1;/**  * Registers a timer to be fired when event time watermark passes the given time. The namespace  * you pass here will be provided when the timer fires.  */ ;/**  * Registers a timer to be fired when event time watermark passes the given time. The namespace  * you pass here will be provided when the timer fires.  */ void registerEventTimeTimer(N namespace, long time).
true;;2;1;/**  * Deletes the timer for the given key and namespace.  */ ;/**  * Deletes the timer for the given key and namespace.  */ void deleteEventTimeTimer(N namespace, long time).
