commented;modifiers;parameterAmount;loc;comment;code
true;public,static;2;4;/**  * Creates a new {@code SlidingTimeWindows} {@link WindowAssigner} that assigns  * elements to sliding time windows based on the element timestamp.  *  * @deprecated Please use {@link SlidingEventTimeWindows#of(Time, Time)}.  *  * @param size The size of the generated windows.  * @param slide The slide interval of the generated windows.  * @return The time policy.  */ ;/**  * Creates a new {@code SlidingTimeWindows} {@link WindowAssigner} that assigns  * elements to sliding time windows based on the element timestamp.  *  * @deprecated Please use {@link SlidingEventTimeWindows#of(Time, Time)}.  *  * @param size The size of the generated windows.  * @param slide The slide interval of the generated windows.  * @return The time policy.  */ @Deprecated() public static SlidingTimeWindows of(Time size, Time slide) {     return new SlidingTimeWindows(size.toMilliseconds(), slide.toMilliseconds()). }
