commented;modifiers;parameterAmount;loc;comment;code
true;;0;2;/**  * Returns the current watermark. This method is periodically called by the  * system to retrieve the current watermark. The method may return {@code null} to  * indicate that no new Watermark is available.  *  * <p>The returned watermark will be emitted only if it is non-null and its timestamp  * is larger than that of the previously emitted watermark (to preserve the contract of  * ascending watermarks). If the current watermark is still  * identical to the previous one, no progress in event time has happened since  * the previous call to this method. If a null value is returned, or the timestamp  * of the returned watermark is smaller than that of the last emitted one, then no  * new watermark will be generated.  *  * <p>The interval in which this method is called and Watermarks are generated  * depends on {@link ExecutionConfig#getAutoWatermarkInterval()}.  *  * @see org.apache.flink.streaming.api.watermark.Watermark  * @see ExecutionConfig#getAutoWatermarkInterval()  *  * @return {@code Null}, if no watermark should be emitted, or the next watermark to emit.  */ ;/**  * Returns the current watermark. This method is periodically called by the  * system to retrieve the current watermark. The method may return {@code null} to  * indicate that no new Watermark is available.  *  * <p>The returned watermark will be emitted only if it is non-null and its timestamp  * is larger than that of the previously emitted watermark (to preserve the contract of  * ascending watermarks). If the current watermark is still  * identical to the previous one, no progress in event time has happened since  * the previous call to this method. If a null value is returned, or the timestamp  * of the returned watermark is smaller than that of the last emitted one, then no  * new watermark will be generated.  *  * <p>The interval in which this method is called and Watermarks are generated  * depends on {@link ExecutionConfig#getAutoWatermarkInterval()}.  *  * @see org.apache.flink.streaming.api.watermark.Watermark  * @see ExecutionConfig#getAutoWatermarkInterval()  *  * @return {@code Null}, if no watermark should be emitted, or the next watermark to emit.  */ @Nullable Watermark getCurrentWatermark().
