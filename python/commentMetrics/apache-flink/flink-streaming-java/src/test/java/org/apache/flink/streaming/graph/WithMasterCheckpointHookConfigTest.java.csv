# id;timestamp;commentText;codeText;commentWords;codeWords
WithMasterCheckpointHookConfigTest -> @Test 	public void testHookConfiguration() throws Exception;1493236605;This test creates a program with 4 sources (2 with master hooks, 2 without)._The resulting job graph must have 2 configured master hooks.;@Test_	public void testHookConfiguration() throws Exception {_		_		final TestSource source1 = new TestSource()__		final TestSourceWithHook source2 = new TestSourceWithHook("foo")__		final TestSource source3 = new TestSource()__		final TestSourceWithHook source4 = new TestSourceWithHook("bar")___		final MapFunction<String, String> identity = new Identity<>()__		final IdentityWithHook<String> identityWithHook1 = new IdentityWithHook<>("apple")__		final IdentityWithHook<String> identityWithHook2 = new IdentityWithHook<>("orange")___		final Set<MasterTriggerRestoreHook<?>> hooks = new HashSet<MasterTriggerRestoreHook<?>>(asList(_				source2.createMasterTriggerRestoreHook(),_				source4.createMasterTriggerRestoreHook(),_				identityWithHook1.createMasterTriggerRestoreHook(),_				identityWithHook2.createMasterTriggerRestoreHook()))___		_		final StreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment()__		env.enableCheckpointing(500)___		env_			.addSource(source1).map(identity)_			.union(env.addSource(source2).map(identity))_			.union(env.addSource(source3).map(identityWithHook1))_			.union(env.addSource(source4).map(identityWithHook2))_			.addSink(new DiscardingSink<String>())___		final JobGraph jg = env.getStreamGraph().getJobGraph()__		assertEquals(hooks.size(), jg.getCheckpointingSettings().getMasterHooks().length)___		_		for (Factory f : jg.getCheckpointingSettings().getMasterHooks()) {_			MasterTriggerRestoreHook<?> hook = f.create()__			assertTrue(hooks.remove(hook))__		}_		assertTrue(hooks.isEmpty())__	};this,test,creates,a,program,with,4,sources,2,with,master,hooks,2,without,the,resulting,job,graph,must,have,2,configured,master,hooks;test,public,void,test,hook,configuration,throws,exception,final,test,source,source1,new,test,source,final,test,source,with,hook,source2,new,test,source,with,hook,foo,final,test,source,source3,new,test,source,final,test,source,with,hook,source4,new,test,source,with,hook,bar,final,map,function,string,string,identity,new,identity,final,identity,with,hook,string,identity,with,hook1,new,identity,with,hook,apple,final,identity,with,hook,string,identity,with,hook2,new,identity,with,hook,orange,final,set,master,trigger,restore,hook,hooks,new,hash,set,master,trigger,restore,hook,as,list,source2,create,master,trigger,restore,hook,source4,create,master,trigger,restore,hook,identity,with,hook1,create,master,trigger,restore,hook,identity,with,hook2,create,master,trigger,restore,hook,final,stream,execution,environment,env,stream,execution,environment,create,local,environment,env,enable,checkpointing,500,env,add,source,source1,map,identity,union,env,add,source,source2,map,identity,union,env,add,source,source3,map,identity,with,hook1,union,env,add,source,source4,map,identity,with,hook2,add,sink,new,discarding,sink,string,final,job,graph,jg,env,get,stream,graph,get,job,graph,assert,equals,hooks,size,jg,get,checkpointing,settings,get,master,hooks,length,for,factory,f,jg,get,checkpointing,settings,get,master,hooks,master,trigger,restore,hook,hook,f,create,assert,true,hooks,remove,hook,assert,true,hooks,is,empty
WithMasterCheckpointHookConfigTest -> @Test 	public void testHookConfiguration() throws Exception;1494504667;This test creates a program with 4 sources (2 with master hooks, 2 without)._The resulting job graph must have 2 configured master hooks.;@Test_	public void testHookConfiguration() throws Exception {_		_		final TestSource source1 = new TestSource()__		final TestSourceWithHook source2 = new TestSourceWithHook("foo")__		final TestSource source3 = new TestSource()__		final TestSourceWithHook source4 = new TestSourceWithHook("bar")___		final MapFunction<String, String> identity = new Identity<>()__		final IdentityWithHook<String> identityWithHook1 = new IdentityWithHook<>("apple")__		final IdentityWithHook<String> identityWithHook2 = new IdentityWithHook<>("orange")___		final Set<MasterTriggerRestoreHook<?>> hooks = new HashSet<MasterTriggerRestoreHook<?>>(asList(_				source2.createMasterTriggerRestoreHook(),_				source4.createMasterTriggerRestoreHook(),_				identityWithHook1.createMasterTriggerRestoreHook(),_				identityWithHook2.createMasterTriggerRestoreHook()))___		_		final StreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment()__		env.enableCheckpointing(500)___		env_			.addSource(source1).map(identity)_			.union(env.addSource(source2).map(identity))_			.union(env.addSource(source3).map(identityWithHook1))_			.union(env.addSource(source4).map(identityWithHook2))_			.addSink(new DiscardingSink<String>())___		final JobGraph jg = env.getStreamGraph().getJobGraph()___		SerializedValue<Factory[]> serializedConfiguredHooks = jg.getCheckpointingSettings().getMasterHooks()__		assertNotNull(serializedConfiguredHooks)___		Factory[] configuredHooks = serializedConfiguredHooks.deserializeValue(getClass().getClassLoader())__		assertEquals(hooks.size(), configuredHooks.length)___		_		for (Factory f : configuredHooks) {_			MasterTriggerRestoreHook<?> hook = f.create()__			assertTrue(hooks.remove(hook))__		}_		assertTrue(hooks.isEmpty())__	};this,test,creates,a,program,with,4,sources,2,with,master,hooks,2,without,the,resulting,job,graph,must,have,2,configured,master,hooks;test,public,void,test,hook,configuration,throws,exception,final,test,source,source1,new,test,source,final,test,source,with,hook,source2,new,test,source,with,hook,foo,final,test,source,source3,new,test,source,final,test,source,with,hook,source4,new,test,source,with,hook,bar,final,map,function,string,string,identity,new,identity,final,identity,with,hook,string,identity,with,hook1,new,identity,with,hook,apple,final,identity,with,hook,string,identity,with,hook2,new,identity,with,hook,orange,final,set,master,trigger,restore,hook,hooks,new,hash,set,master,trigger,restore,hook,as,list,source2,create,master,trigger,restore,hook,source4,create,master,trigger,restore,hook,identity,with,hook1,create,master,trigger,restore,hook,identity,with,hook2,create,master,trigger,restore,hook,final,stream,execution,environment,env,stream,execution,environment,create,local,environment,env,enable,checkpointing,500,env,add,source,source1,map,identity,union,env,add,source,source2,map,identity,union,env,add,source,source3,map,identity,with,hook1,union,env,add,source,source4,map,identity,with,hook2,add,sink,new,discarding,sink,string,final,job,graph,jg,env,get,stream,graph,get,job,graph,serialized,value,factory,serialized,configured,hooks,jg,get,checkpointing,settings,get,master,hooks,assert,not,null,serialized,configured,hooks,factory,configured,hooks,serialized,configured,hooks,deserialize,value,get,class,get,class,loader,assert,equals,hooks,size,configured,hooks,length,for,factory,f,configured,hooks,master,trigger,restore,hook,hook,f,create,assert,true,hooks,remove,hook,assert,true,hooks,is,empty
WithMasterCheckpointHookConfigTest -> @Test 	public void testHookConfiguration() throws Exception;1495484544;This test creates a program with 4 sources (2 with master hooks, 2 without)._The resulting job graph must have 2 configured master hooks.;@Test_	public void testHookConfiguration() throws Exception {_		_		final TestSource source1 = new TestSource()__		final TestSourceWithHook source2 = new TestSourceWithHook("foo")__		final TestSource source3 = new TestSource()__		final TestSourceWithHook source4 = new TestSourceWithHook("bar")___		final MapFunction<String, String> identity = new Identity<>()__		final IdentityWithHook<String> identityWithHook1 = new IdentityWithHook<>("apple")__		final IdentityWithHook<String> identityWithHook2 = new IdentityWithHook<>("orange")___		final Set<MasterTriggerRestoreHook<?>> hooks = new HashSet<MasterTriggerRestoreHook<?>>(asList(_				source2.createMasterTriggerRestoreHook(),_				source4.createMasterTriggerRestoreHook(),_				identityWithHook1.createMasterTriggerRestoreHook(),_				identityWithHook2.createMasterTriggerRestoreHook()))___		_		final StreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment()__		env.enableCheckpointing(500)___		env_			.addSource(source1).map(identity)_			.union(env.addSource(source2).map(identity))_			.union(env.addSource(source3).map(identityWithHook1))_			.union(env.addSource(source4).map(identityWithHook2))_			.addSink(new DiscardingSink<String>())___		final JobGraph jg = env.getStreamGraph().getJobGraph()___		SerializedValue<Factory[]> serializedConfiguredHooks = jg.getCheckpointingSettings().getMasterHooks()__		assertNotNull(serializedConfiguredHooks)___		Factory[] configuredHooks = serializedConfiguredHooks.deserializeValue(getClass().getClassLoader())__		assertEquals(hooks.size(), configuredHooks.length)___		_		for (Factory f : configuredHooks) {_			MasterTriggerRestoreHook<?> hook = f.create()__			assertTrue(hooks.remove(hook))__		}_		assertTrue(hooks.isEmpty())__	};this,test,creates,a,program,with,4,sources,2,with,master,hooks,2,without,the,resulting,job,graph,must,have,2,configured,master,hooks;test,public,void,test,hook,configuration,throws,exception,final,test,source,source1,new,test,source,final,test,source,with,hook,source2,new,test,source,with,hook,foo,final,test,source,source3,new,test,source,final,test,source,with,hook,source4,new,test,source,with,hook,bar,final,map,function,string,string,identity,new,identity,final,identity,with,hook,string,identity,with,hook1,new,identity,with,hook,apple,final,identity,with,hook,string,identity,with,hook2,new,identity,with,hook,orange,final,set,master,trigger,restore,hook,hooks,new,hash,set,master,trigger,restore,hook,as,list,source2,create,master,trigger,restore,hook,source4,create,master,trigger,restore,hook,identity,with,hook1,create,master,trigger,restore,hook,identity,with,hook2,create,master,trigger,restore,hook,final,stream,execution,environment,env,stream,execution,environment,create,local,environment,env,enable,checkpointing,500,env,add,source,source1,map,identity,union,env,add,source,source2,map,identity,union,env,add,source,source3,map,identity,with,hook1,union,env,add,source,source4,map,identity,with,hook2,add,sink,new,discarding,sink,string,final,job,graph,jg,env,get,stream,graph,get,job,graph,serialized,value,factory,serialized,configured,hooks,jg,get,checkpointing,settings,get,master,hooks,assert,not,null,serialized,configured,hooks,factory,configured,hooks,serialized,configured,hooks,deserialize,value,get,class,get,class,loader,assert,equals,hooks,size,configured,hooks,length,for,factory,f,configured,hooks,master,trigger,restore,hook,hook,f,create,assert,true,hooks,remove,hook,assert,true,hooks,is,empty
WithMasterCheckpointHookConfigTest -> @Test 	public void testHookConfiguration() throws Exception;1501664690;This test creates a program with 4 sources (2 with master hooks, 2 without)._The resulting job graph must have 2 configured master hooks.;@Test_	public void testHookConfiguration() throws Exception {_		_		final TestSource source1 = new TestSource()__		final TestSourceWithHook source2 = new TestSourceWithHook("foo")__		final TestSource source3 = new TestSource()__		final TestSourceWithHook source4 = new TestSourceWithHook("bar")___		final MapFunction<String, String> identity = new Identity<>()__		final IdentityWithHook<String> identityWithHook1 = new IdentityWithHook<>("apple")__		final IdentityWithHook<String> identityWithHook2 = new IdentityWithHook<>("orange")___		final Set<MasterTriggerRestoreHook<?>> hooks = new HashSet<MasterTriggerRestoreHook<?>>(asList(_				source2.createMasterTriggerRestoreHook(),_				source4.createMasterTriggerRestoreHook(),_				identityWithHook1.createMasterTriggerRestoreHook(),_				identityWithHook2.createMasterTriggerRestoreHook()))___		_		final StreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment()__		env.enableCheckpointing(500)___		env_			.addSource(source1).map(identity)_			.union(env.addSource(source2).map(identity))_			.union(env.addSource(source3).map(identityWithHook1))_			.union(env.addSource(source4).map(identityWithHook2))_			.addSink(new DiscardingSink<String>())___		final JobGraph jg = env.getStreamGraph().getJobGraph()___		SerializedValue<Factory[]> serializedConfiguredHooks = jg.getCheckpointingSettings().getMasterHooks()__		assertNotNull(serializedConfiguredHooks)___		Factory[] configuredHooks = serializedConfiguredHooks.deserializeValue(getClass().getClassLoader())__		assertEquals(hooks.size(), configuredHooks.length)___		_		for (Factory f : configuredHooks) {_			MasterTriggerRestoreHook<?> hook = f.create()__			assertTrue(hooks.remove(hook))__		}_		assertTrue(hooks.isEmpty())__	};this,test,creates,a,program,with,4,sources,2,with,master,hooks,2,without,the,resulting,job,graph,must,have,2,configured,master,hooks;test,public,void,test,hook,configuration,throws,exception,final,test,source,source1,new,test,source,final,test,source,with,hook,source2,new,test,source,with,hook,foo,final,test,source,source3,new,test,source,final,test,source,with,hook,source4,new,test,source,with,hook,bar,final,map,function,string,string,identity,new,identity,final,identity,with,hook,string,identity,with,hook1,new,identity,with,hook,apple,final,identity,with,hook,string,identity,with,hook2,new,identity,with,hook,orange,final,set,master,trigger,restore,hook,hooks,new,hash,set,master,trigger,restore,hook,as,list,source2,create,master,trigger,restore,hook,source4,create,master,trigger,restore,hook,identity,with,hook1,create,master,trigger,restore,hook,identity,with,hook2,create,master,trigger,restore,hook,final,stream,execution,environment,env,stream,execution,environment,create,local,environment,env,enable,checkpointing,500,env,add,source,source1,map,identity,union,env,add,source,source2,map,identity,union,env,add,source,source3,map,identity,with,hook1,union,env,add,source,source4,map,identity,with,hook2,add,sink,new,discarding,sink,string,final,job,graph,jg,env,get,stream,graph,get,job,graph,serialized,value,factory,serialized,configured,hooks,jg,get,checkpointing,settings,get,master,hooks,assert,not,null,serialized,configured,hooks,factory,configured,hooks,serialized,configured,hooks,deserialize,value,get,class,get,class,loader,assert,equals,hooks,size,configured,hooks,length,for,factory,f,configured,hooks,master,trigger,restore,hook,hook,f,create,assert,true,hooks,remove,hook,assert,true,hooks,is,empty
WithMasterCheckpointHookConfigTest -> @Test 	public void testHookConfiguration() throws Exception;1525852381;This test creates a program with 4 sources (2 with master hooks, 2 without)._The resulting job graph must have 2 configured master hooks.;@Test_	public void testHookConfiguration() throws Exception {_		_		final TestSource source1 = new TestSource()__		final TestSourceWithHook source2 = new TestSourceWithHook("foo")__		final TestSource source3 = new TestSource()__		final TestSourceWithHook source4 = new TestSourceWithHook("bar")___		final MapFunction<String, String> identity = new Identity<>()__		final IdentityWithHook<String> identityWithHook1 = new IdentityWithHook<>("apple")__		final IdentityWithHook<String> identityWithHook2 = new IdentityWithHook<>("orange")___		final Set<MasterTriggerRestoreHook<?>> hooks = new HashSet<MasterTriggerRestoreHook<?>>(asList(_				source2.createMasterTriggerRestoreHook(),_				source4.createMasterTriggerRestoreHook(),_				identityWithHook1.createMasterTriggerRestoreHook(),_				identityWithHook2.createMasterTriggerRestoreHook()))___		_		final StreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment()__		env.enableCheckpointing(500)___		env_			.addSource(source1).map(identity)_			.union(env.addSource(source2).map(identity))_			.union(env.addSource(source3).map(identityWithHook1))_			.union(env.addSource(source4).map(identityWithHook2))_			.addSink(new DiscardingSink<String>())___		final JobGraph jg = env.getStreamGraph().getJobGraph()___		SerializedValue<Factory[]> serializedConfiguredHooks = jg.getCheckpointingSettings().getMasterHooks()__		assertNotNull(serializedConfiguredHooks)___		Factory[] configuredHooks = serializedConfiguredHooks.deserializeValue(getClass().getClassLoader())__		assertEquals(hooks.size(), configuredHooks.length)___		_		for (Factory f : configuredHooks) {_			MasterTriggerRestoreHook<?> hook = f.create()__			assertTrue(hooks.remove(hook))__		}_		assertTrue(hooks.isEmpty())__	};this,test,creates,a,program,with,4,sources,2,with,master,hooks,2,without,the,resulting,job,graph,must,have,2,configured,master,hooks;test,public,void,test,hook,configuration,throws,exception,final,test,source,source1,new,test,source,final,test,source,with,hook,source2,new,test,source,with,hook,foo,final,test,source,source3,new,test,source,final,test,source,with,hook,source4,new,test,source,with,hook,bar,final,map,function,string,string,identity,new,identity,final,identity,with,hook,string,identity,with,hook1,new,identity,with,hook,apple,final,identity,with,hook,string,identity,with,hook2,new,identity,with,hook,orange,final,set,master,trigger,restore,hook,hooks,new,hash,set,master,trigger,restore,hook,as,list,source2,create,master,trigger,restore,hook,source4,create,master,trigger,restore,hook,identity,with,hook1,create,master,trigger,restore,hook,identity,with,hook2,create,master,trigger,restore,hook,final,stream,execution,environment,env,stream,execution,environment,create,local,environment,env,enable,checkpointing,500,env,add,source,source1,map,identity,union,env,add,source,source2,map,identity,union,env,add,source,source3,map,identity,with,hook1,union,env,add,source,source4,map,identity,with,hook2,add,sink,new,discarding,sink,string,final,job,graph,jg,env,get,stream,graph,get,job,graph,serialized,value,factory,serialized,configured,hooks,jg,get,checkpointing,settings,get,master,hooks,assert,not,null,serialized,configured,hooks,factory,configured,hooks,serialized,configured,hooks,deserialize,value,get,class,get,class,loader,assert,equals,hooks,size,configured,hooks,length,for,factory,f,configured,hooks,master,trigger,restore,hook,hook,f,create,assert,true,hooks,remove,hook,assert,true,hooks,is,empty
