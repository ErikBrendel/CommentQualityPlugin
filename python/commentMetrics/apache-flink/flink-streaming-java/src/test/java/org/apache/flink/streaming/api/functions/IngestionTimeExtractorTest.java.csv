commented;modifiers;parameterAmount;loc;comment;code
false;public;0;37;;@Test public void testMonotonousTimestamps() {     AssignerWithPeriodicWatermarks<String> assigner = new IngestionTimeExtractor<>().     long maxRecordSoFar = 0L.     long maxWatermarkSoFar = 0L.     for (int i = 0. i < 1343. i++) {         if (i % 7 == 1) {             Watermark mark = assigner.getCurrentWatermark().             assertNotNull(mark).             // increasing watermarks             assertTrue(mark.getTimestamp() >= maxWatermarkSoFar).             maxWatermarkSoFar = mark.getTimestamp().             // tight watermarks             assertTrue(mark.getTimestamp() >= maxRecordSoFar - 1).         } else {             long next = assigner.extractTimestamp("a", Long.MIN_VALUE).             // increasing timestamps             assertTrue(next >= maxRecordSoFar).             // timestamps are never below or at the watermark             assertTrue(next > maxWatermarkSoFar).             maxRecordSoFar = next.         }         if (i % 9 == 0) {             try {                 Thread.sleep(1).             } catch (InterruptedException ignored) {             }         }     } }
