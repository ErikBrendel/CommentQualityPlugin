# id;timestamp;commentText;codeText;commentWords;codeWords
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1497342642;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final AbstractStateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.<BlobKey>emptyList(),_			Collections.<URL>emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			null,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			new FallbackLibraryCacheManager(),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			new UnregisteredTaskMetricsGroup(),_			mock(ResultPartitionConsumableNotifier.class),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		Future<Void> taskRun = FlinkCompletableFuture.supplyAsync(new Callable<Void>() {_			@Override_			public Void call() throws Exception {_				task.run()___				return null__			}_		}, TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forFullCheckpoint())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,abstract,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,blob,key,empty,list,collections,url,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,null,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,new,fallback,library,cache,manager,mock,file,cache,class,task,manager,runtime,info,new,unregistered,task,metrics,group,mock,result,partition,consumable,notifier,class,mock,partition,producer,state,checker,class,executors,direct,executor,future,void,task,run,flink,completable,future,supply,async,new,callable,void,override,public,void,call,throws,exception,task,run,return,null,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,full,checkpoint,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1501760738;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final AbstractStateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.<BlobKey>emptyList(),_			Collections.<URL>emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			null,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			new FallbackLibraryCacheManager(),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			new UnregisteredTaskMetricsGroup(),_			mock(ResultPartitionConsumableNotifier.class),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forFullCheckpoint())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,abstract,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,blob,key,empty,list,collections,url,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,null,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,new,fallback,library,cache,manager,mock,file,cache,class,task,manager,runtime,info,new,unregistered,task,metrics,group,mock,result,partition,consumable,notifier,class,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,full,checkpoint,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1502801814;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final AbstractStateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.<BlobKey>emptyList(),_			Collections.<URL>emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			null,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			new FallbackLibraryCacheManager(),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			new UnregisteredTaskMetricsGroup(),_			mock(ResultPartitionConsumableNotifier.class),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forFullCheckpoint())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,abstract,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,blob,key,empty,list,collections,url,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,null,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,new,fallback,library,cache,manager,mock,file,cache,class,task,manager,runtime,info,new,unregistered,task,metrics,group,mock,result,partition,consumable,notifier,class,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,full,checkpoint,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1503041372;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final AbstractStateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.<BlobKey>emptyList(),_			Collections.<URL>emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			null,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			mock(BlobCache.class),_			new FallbackLibraryCacheManager(),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			new UnregisteredTaskMetricsGroup(),_			mock(ResultPartitionConsumableNotifier.class),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forFullCheckpoint())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,abstract,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,blob,key,empty,list,collections,url,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,null,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,mock,blob,cache,class,new,fallback,library,cache,manager,mock,file,cache,class,task,manager,runtime,info,new,unregistered,task,metrics,group,mock,result,partition,consumable,notifier,class,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,full,checkpoint,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1507212387;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final AbstractStateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.<BlobKey>emptyList(),_			Collections.<URL>emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))___		BlobCache blobCache = mock(BlobCache.class)__		PermanentBlobCache permanentBlobCache = mock(PermanentBlobCache.class)__		TransientBlobCache transientBlobCache = mock(TransientBlobCache.class)___		when(blobCache.getPermanentBlobStore()).thenReturn(permanentBlobCache)__		when(blobCache.getTransientBlobStore()).thenReturn(transientBlobCache)___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			null,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			blobCache,_			new FallbackLibraryCacheManager(),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			new UnregisteredTaskMetricsGroup(),_			mock(ResultPartitionConsumableNotifier.class),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forFullCheckpoint())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,abstract,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,blob,key,empty,list,collections,url,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,blob,cache,blob,cache,mock,blob,cache,class,permanent,blob,cache,permanent,blob,cache,mock,permanent,blob,cache,class,transient,blob,cache,transient,blob,cache,mock,transient,blob,cache,class,when,blob,cache,get,permanent,blob,store,then,return,permanent,blob,cache,when,blob,cache,get,transient,blob,store,then,return,transient,blob,cache,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,null,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,blob,cache,new,fallback,library,cache,manager,mock,file,cache,class,task,manager,runtime,info,new,unregistered,task,metrics,group,mock,result,partition,consumable,notifier,class,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,full,checkpoint,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1507212387;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final AbstractStateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.emptyList(),_			Collections.emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))___		BlobCacheService blobService =_			new BlobCacheService(mock(PermanentBlobCache.class), mock(TransientBlobCache.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			null,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			blobService,_			new FallbackLibraryCacheManager(),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			new UnregisteredTaskMetricsGroup(),_			mock(ResultPartitionConsumableNotifier.class),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forFullCheckpoint())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,abstract,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,empty,list,collections,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,blob,cache,service,blob,service,new,blob,cache,service,mock,permanent,blob,cache,class,mock,transient,blob,cache,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,null,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,blob,service,new,fallback,library,cache,manager,mock,file,cache,class,task,manager,runtime,info,new,unregistered,task,metrics,group,mock,result,partition,consumable,notifier,class,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,full,checkpoint,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1508579049;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final AbstractStateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.emptyList(),_			Collections.emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))___		BlobCacheService blobService =_			new BlobCacheService(mock(PermanentBlobCache.class), mock(TransientBlobCache.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			null,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			blobService,_			new BlobLibraryCacheManager(_				blobService.getPermanentBlobService(),_				FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			new UnregisteredTaskMetricsGroup(),_			mock(ResultPartitionConsumableNotifier.class),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forFullCheckpoint())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,abstract,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,empty,list,collections,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,blob,cache,service,blob,service,new,blob,cache,service,mock,permanent,blob,cache,class,mock,transient,blob,cache,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,null,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,blob,service,new,blob,library,cache,manager,blob,service,get,permanent,blob,service,flink,user,code,class,loaders,resolve,order,mock,file,cache,class,task,manager,runtime,info,new,unregistered,task,metrics,group,mock,result,partition,consumable,notifier,class,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,full,checkpoint,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1508939746;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final AbstractStateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.emptyList(),_			Collections.emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))___		BlobCacheService blobService =_			new BlobCacheService(mock(PermanentBlobCache.class), mock(TransientBlobCache.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			null,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			blobService,_			new BlobLibraryCacheManager(_				blobService.getPermanentBlobService(),_				FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,_				new String[0]),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			new UnregisteredTaskMetricsGroup(),_			mock(ResultPartitionConsumableNotifier.class),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forFullCheckpoint())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,abstract,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,empty,list,collections,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,blob,cache,service,blob,service,new,blob,cache,service,mock,permanent,blob,cache,class,mock,transient,blob,cache,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,null,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,blob,service,new,blob,library,cache,manager,blob,service,get,permanent,blob,service,flink,user,code,class,loaders,resolve,order,new,string,0,mock,file,cache,class,task,manager,runtime,info,new,unregistered,task,metrics,group,mock,result,partition,consumable,notifier,class,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,full,checkpoint,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1509118643;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final AbstractStateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.emptyList(),_			Collections.emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))___		BlobCacheService blobService =_			new BlobCacheService(mock(PermanentBlobCache.class), mock(TransientBlobCache.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			null,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			blobService,_			new BlobLibraryCacheManager(_				blobService.getPermanentBlobService(),_				FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,_				new String[0]),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			new UnregisteredTaskMetricsGroup(),_			mock(ResultPartitionConsumableNotifier.class),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forCheckpoint())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,abstract,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,empty,list,collections,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,blob,cache,service,blob,service,new,blob,cache,service,mock,permanent,blob,cache,class,mock,transient,blob,cache,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,null,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,blob,service,new,blob,library,cache,manager,blob,service,get,permanent,blob,service,flink,user,code,class,loaders,resolve,order,new,string,0,mock,file,cache,class,task,manager,runtime,info,new,unregistered,task,metrics,group,mock,result,partition,consumable,notifier,class,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,checkpoint,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1513094474;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final AbstractStateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.emptyList(),_			Collections.emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()__		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))__		when(networkEnv.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)___		BlobCacheService blobService =_			new BlobCacheService(mock(PermanentBlobCache.class), mock(TransientBlobCache.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			null,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			blobService,_			new BlobLibraryCacheManager(_				blobService.getPermanentBlobService(),_				FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,_				new String[0]),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			new UnregisteredTaskMetricsGroup(),_			mock(ResultPartitionConsumableNotifier.class),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forCheckpoint())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,abstract,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,empty,list,collections,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,task,event,dispatcher,task,event,dispatcher,new,task,event,dispatcher,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,when,network,env,get,task,event,dispatcher,then,return,task,event,dispatcher,blob,cache,service,blob,service,new,blob,cache,service,mock,permanent,blob,cache,class,mock,transient,blob,cache,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,null,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,blob,service,new,blob,library,cache,manager,blob,service,get,permanent,blob,service,flink,user,code,class,loaders,resolve,order,new,string,0,mock,file,cache,class,task,manager,runtime,info,new,unregistered,task,metrics,group,mock,result,partition,consumable,notifier,class,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,checkpoint,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1513102156;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final AbstractStateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.emptyList(),_			Collections.emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()__		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))__		when(networkEnv.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)___		BlobCacheService blobService =_			new BlobCacheService(mock(PermanentBlobCache.class), mock(TransientBlobCache.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			null,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			blobService,_			new BlobLibraryCacheManager(_				blobService.getPermanentBlobService(),_				FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,_				new String[0]),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),_			mock(ResultPartitionConsumableNotifier.class),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forCheckpoint())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,abstract,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,empty,list,collections,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,task,event,dispatcher,task,event,dispatcher,new,task,event,dispatcher,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,when,network,env,get,task,event,dispatcher,then,return,task,event,dispatcher,blob,cache,service,blob,service,new,blob,cache,service,mock,permanent,blob,cache,class,mock,transient,blob,cache,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,null,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,blob,service,new,blob,library,cache,manager,blob,service,get,permanent,blob,service,flink,user,code,class,loaders,resolve,order,new,string,0,mock,file,cache,class,task,manager,runtime,info,unregistered,metric,groups,create,unregistered,task,metric,group,mock,result,partition,consumable,notifier,class,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,checkpoint,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1515177485;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final AbstractStateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.emptyList(),_			Collections.emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()__		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))__		when(networkEnv.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)___		BlobCacheService blobService =_			new BlobCacheService(mock(PermanentBlobCache.class), mock(TransientBlobCache.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			null,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			blobService,_			new BlobLibraryCacheManager(_				blobService.getPermanentBlobService(),_				FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,_				new String[0]),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),_			mock(ResultPartitionConsumableNotifier.class),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forCheckpoint())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,abstract,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,empty,list,collections,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,task,event,dispatcher,task,event,dispatcher,new,task,event,dispatcher,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,when,network,env,get,task,event,dispatcher,then,return,task,event,dispatcher,blob,cache,service,blob,service,new,blob,cache,service,mock,permanent,blob,cache,class,mock,transient,blob,cache,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,null,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,blob,service,new,blob,library,cache,manager,blob,service,get,permanent,blob,service,flink,user,code,class,loaders,resolve,order,new,string,0,mock,file,cache,class,task,manager,runtime,info,unregistered,metric,groups,create,unregistered,task,metric,group,mock,result,partition,consumable,notifier,class,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,checkpoint,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1515519059;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final AbstractStateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.emptyList(),_			Collections.emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()__		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))__		when(networkEnv.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)___		BlobCacheService blobService =_			new BlobCacheService(mock(PermanentBlobCache.class), mock(TransientBlobCache.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			null,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			blobService,_			new BlobLibraryCacheManager(_				blobService.getPermanentBlobService(),_				FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,_				new String[0]),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),_			mock(ResultPartitionConsumableNotifier.class),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forCheckpoint())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,abstract,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,empty,list,collections,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,task,event,dispatcher,task,event,dispatcher,new,task,event,dispatcher,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,when,network,env,get,task,event,dispatcher,then,return,task,event,dispatcher,blob,cache,service,blob,service,new,blob,cache,service,mock,permanent,blob,cache,class,mock,transient,blob,cache,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,null,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,blob,service,new,blob,library,cache,manager,blob,service,get,permanent,blob,service,flink,user,code,class,loaders,resolve,order,new,string,0,mock,file,cache,class,task,manager,runtime,info,unregistered,metric,groups,create,unregistered,task,metric,group,mock,result,partition,consumable,notifier,class,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,checkpoint,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1516295283;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final StateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.emptyList(),_			Collections.emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()__		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))__		when(networkEnv.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)___		BlobCacheService blobService =_			new BlobCacheService(mock(PermanentBlobCache.class), mock(TransientBlobCache.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			null,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			blobService,_			new BlobLibraryCacheManager(_				blobService.getPermanentBlobService(),_				FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,_				new String[0]),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),_			mock(ResultPartitionConsumableNotifier.class),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forCheckpoint())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,empty,list,collections,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,task,event,dispatcher,task,event,dispatcher,new,task,event,dispatcher,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,when,network,env,get,task,event,dispatcher,then,return,task,event,dispatcher,blob,cache,service,blob,service,new,blob,cache,service,mock,permanent,blob,cache,class,mock,transient,blob,cache,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,null,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,blob,service,new,blob,library,cache,manager,blob,service,get,permanent,blob,service,flink,user,code,class,loaders,resolve,order,new,string,0,mock,file,cache,class,task,manager,runtime,info,unregistered,metric,groups,create,unregistered,task,metric,group,mock,result,partition,consumable,notifier,class,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,checkpoint,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1516626397;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final StateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.emptyList(),_			Collections.emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()__		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))__		when(networkEnv.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)___		BlobCacheService blobService =_			new BlobCacheService(mock(PermanentBlobCache.class), mock(TransientBlobCache.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			new TestTaskStateManager(),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			blobService,_			new BlobLibraryCacheManager(_				blobService.getPermanentBlobService(),_				FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,_				new String[0]),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),_			mock(ResultPartitionConsumableNotifier.class),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forCheckpoint())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,empty,list,collections,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,task,event,dispatcher,task,event,dispatcher,new,task,event,dispatcher,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,when,network,env,get,task,event,dispatcher,then,return,task,event,dispatcher,blob,cache,service,blob,service,new,blob,cache,service,mock,permanent,blob,cache,class,mock,transient,blob,cache,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,new,test,task,state,manager,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,blob,service,new,blob,library,cache,manager,blob,service,get,permanent,blob,service,flink,user,code,class,loaders,resolve,order,new,string,0,mock,file,cache,class,task,manager,runtime,info,unregistered,metric,groups,create,unregistered,task,metric,group,mock,result,partition,consumable,notifier,class,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,checkpoint,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1517489695;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final StateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.emptyList(),_			Collections.emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()__		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))__		when(networkEnv.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)___		BlobCacheService blobService =_			new BlobCacheService(mock(PermanentBlobCache.class), mock(TransientBlobCache.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			new TestTaskStateManager(),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			blobService,_			new BlobLibraryCacheManager(_				blobService.getPermanentBlobService(),_				FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,_				new String[0]),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),_			mock(ResultPartitionConsumableNotifier.class),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forCheckpointWithDefaultLocation())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,empty,list,collections,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,task,event,dispatcher,task,event,dispatcher,new,task,event,dispatcher,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,when,network,env,get,task,event,dispatcher,then,return,task,event,dispatcher,blob,cache,service,blob,service,new,blob,cache,service,mock,permanent,blob,cache,class,mock,transient,blob,cache,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,new,test,task,state,manager,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,blob,service,new,blob,library,cache,manager,blob,service,get,permanent,blob,service,flink,user,code,class,loaders,resolve,order,new,string,0,mock,file,cache,class,task,manager,runtime,info,unregistered,metric,groups,create,unregistered,task,metric,group,mock,result,partition,consumable,notifier,class,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,checkpoint,with,default,location,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1517489695;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final StateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.emptyList(),_			Collections.emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()__		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))__		when(networkEnv.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)___		BlobCacheService blobService =_			new BlobCacheService(mock(PermanentBlobCache.class), mock(TransientBlobCache.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			new TestTaskStateManager(),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			blobService,_			new BlobLibraryCacheManager(_				blobService.getPermanentBlobService(),_				FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,_				new String[0]),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),_			mock(ResultPartitionConsumableNotifier.class),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forCheckpointWithDefaultLocation())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,empty,list,collections,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,task,event,dispatcher,task,event,dispatcher,new,task,event,dispatcher,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,when,network,env,get,task,event,dispatcher,then,return,task,event,dispatcher,blob,cache,service,blob,service,new,blob,cache,service,mock,permanent,blob,cache,class,mock,transient,blob,cache,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,new,test,task,state,manager,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,blob,service,new,blob,library,cache,manager,blob,service,get,permanent,blob,service,flink,user,code,class,loaders,resolve,order,new,string,0,mock,file,cache,class,task,manager,runtime,info,unregistered,metric,groups,create,unregistered,task,metric,group,mock,result,partition,consumable,notifier,class,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,checkpoint,with,default,location,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1517489696;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final StateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.emptyList(),_			Collections.emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()__		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))__		when(networkEnv.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)___		BlobCacheService blobService =_			new BlobCacheService(mock(PermanentBlobCache.class), mock(TransientBlobCache.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			new TestTaskStateManager(),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			blobService,_			new BlobLibraryCacheManager(_				blobService.getPermanentBlobService(),_				FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,_				new String[0]),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),_			mock(ResultPartitionConsumableNotifier.class),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forCheckpointWithDefaultLocation())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,empty,list,collections,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,task,event,dispatcher,task,event,dispatcher,new,task,event,dispatcher,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,when,network,env,get,task,event,dispatcher,then,return,task,event,dispatcher,blob,cache,service,blob,service,new,blob,cache,service,mock,permanent,blob,cache,class,mock,transient,blob,cache,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,new,test,task,state,manager,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,blob,service,new,blob,library,cache,manager,blob,service,get,permanent,blob,service,flink,user,code,class,loaders,resolve,order,new,string,0,mock,file,cache,class,task,manager,runtime,info,unregistered,metric,groups,create,unregistered,task,metric,group,mock,result,partition,consumable,notifier,class,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,checkpoint,with,default,location,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1519568061;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final StateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.emptyList(),_			Collections.emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()__		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))__		when(networkEnv.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)___		BlobCacheService blobService =_			new BlobCacheService(mock(PermanentBlobCache.class), mock(TransientBlobCache.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			new TestTaskStateManager(),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			blobService,_			new BlobLibraryCacheManager(_				blobService.getPermanentBlobService(),_				FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,_				new String[0]),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),_			mock(ResultPartitionConsumableNotifier.class),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forCheckpointWithDefaultLocation())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,empty,list,collections,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,task,event,dispatcher,task,event,dispatcher,new,task,event,dispatcher,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,when,network,env,get,task,event,dispatcher,then,return,task,event,dispatcher,blob,cache,service,blob,service,new,blob,cache,service,mock,permanent,blob,cache,class,mock,transient,blob,cache,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,new,test,task,state,manager,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,blob,service,new,blob,library,cache,manager,blob,service,get,permanent,blob,service,flink,user,code,class,loaders,resolve,order,new,string,0,mock,file,cache,class,task,manager,runtime,info,unregistered,metric,groups,create,unregistered,task,metric,group,mock,result,partition,consumable,notifier,class,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,checkpoint,with,default,location,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1519570794;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final StateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.emptyList(),_			Collections.emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()__		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))__		when(networkEnv.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)___		BlobCacheService blobService =_			new BlobCacheService(mock(PermanentBlobCache.class), mock(TransientBlobCache.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			new TestTaskStateManager(),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			blobService,_			new BlobLibraryCacheManager(_				blobService.getPermanentBlobService(),_				FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,_				new String[0]),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),_			mock(ResultPartitionConsumableNotifier.class),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forCheckpointWithDefaultLocation())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,empty,list,collections,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,task,event,dispatcher,task,event,dispatcher,new,task,event,dispatcher,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,when,network,env,get,task,event,dispatcher,then,return,task,event,dispatcher,blob,cache,service,blob,service,new,blob,cache,service,mock,permanent,blob,cache,class,mock,transient,blob,cache,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,new,test,task,state,manager,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,blob,service,new,blob,library,cache,manager,blob,service,get,permanent,blob,service,flink,user,code,class,loaders,resolve,order,new,string,0,mock,file,cache,class,task,manager,runtime,info,unregistered,metric,groups,create,unregistered,task,metric,group,mock,result,partition,consumable,notifier,class,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,checkpoint,with,default,location,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1531419503;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final StateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.emptyList(),_			Collections.emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()__		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))__		when(networkEnv.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)___		BlobCacheService blobService =_			new BlobCacheService(mock(PermanentBlobCache.class), mock(TransientBlobCache.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			new TestTaskStateManager(),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			blobService,_			new BlobLibraryCacheManager(_				blobService.getPermanentBlobService(),_				FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,_				new String[0]),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),_			mock(ResultPartitionConsumableNotifier.class),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forCheckpointWithDefaultLocation())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,empty,list,collections,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,task,event,dispatcher,task,event,dispatcher,new,task,event,dispatcher,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,when,network,env,get,task,event,dispatcher,then,return,task,event,dispatcher,blob,cache,service,blob,service,new,blob,cache,service,mock,permanent,blob,cache,class,mock,transient,blob,cache,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,new,test,task,state,manager,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,blob,service,new,blob,library,cache,manager,blob,service,get,permanent,blob,service,flink,user,code,class,loaders,resolve,order,new,string,0,mock,file,cache,class,task,manager,runtime,info,unregistered,metric,groups,create,unregistered,task,metric,group,mock,result,partition,consumable,notifier,class,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,checkpoint,with,default,location,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1539939663;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final StateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.emptyList(),_			Collections.emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()__		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))__		when(networkEnv.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)___		BlobCacheService blobService =_			new BlobCacheService(mock(PermanentBlobCache.class), mock(TransientBlobCache.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			new TestTaskStateManager(),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			blobService,_			new BlobLibraryCacheManager(_				blobService.getPermanentBlobService(),_				FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,_				new String[0]),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),_			mock(ResultPartitionConsumableNotifier.class),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forCheckpointWithDefaultLocation())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,empty,list,collections,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,task,event,dispatcher,task,event,dispatcher,new,task,event,dispatcher,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,when,network,env,get,task,event,dispatcher,then,return,task,event,dispatcher,blob,cache,service,blob,service,new,blob,cache,service,mock,permanent,blob,cache,class,mock,transient,blob,cache,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,new,test,task,state,manager,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,blob,service,new,blob,library,cache,manager,blob,service,get,permanent,blob,service,flink,user,code,class,loaders,resolve,order,new,string,0,mock,file,cache,class,task,manager,runtime,info,unregistered,metric,groups,create,unregistered,task,metric,group,mock,result,partition,consumable,notifier,class,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,checkpoint,with,default,location,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1540207709;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final StateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.emptyList(),_			Collections.emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()__		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))__		when(networkEnv.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)___		BlobCacheService blobService =_			new BlobCacheService(mock(PermanentBlobCache.class), mock(TransientBlobCache.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			new TestTaskStateManager(),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			blobService,_			new BlobLibraryCacheManager(_				blobService.getPermanentBlobService(),_				FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,_				new String[0]),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),_			new NoOpResultPartitionConsumableNotifier(),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forCheckpointWithDefaultLocation())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,empty,list,collections,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,task,event,dispatcher,task,event,dispatcher,new,task,event,dispatcher,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,when,network,env,get,task,event,dispatcher,then,return,task,event,dispatcher,blob,cache,service,blob,service,new,blob,cache,service,mock,permanent,blob,cache,class,mock,transient,blob,cache,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,new,test,task,state,manager,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,blob,service,new,blob,library,cache,manager,blob,service,get,permanent,blob,service,flink,user,code,class,loaders,resolve,order,new,string,0,mock,file,cache,class,task,manager,runtime,info,unregistered,metric,groups,create,unregistered,task,metric,group,new,no,op,result,partition,consumable,notifier,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,checkpoint,with,default,location,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1550366933;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final StateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.emptyList(),_			Collections.emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()__		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))__		when(networkEnv.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)___		BlobCacheService blobService =_			new BlobCacheService(mock(PermanentBlobCache.class), mock(TransientBlobCache.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			new TestTaskStateManager(),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			new TestGlobalAggregateManager(),_			blobService,_			new BlobLibraryCacheManager(_				blobService.getPermanentBlobService(),_				FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,_				new String[0]),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),_			new NoOpResultPartitionConsumableNotifier(),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forCheckpointWithDefaultLocation())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,empty,list,collections,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,task,event,dispatcher,task,event,dispatcher,new,task,event,dispatcher,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,when,network,env,get,task,event,dispatcher,then,return,task,event,dispatcher,blob,cache,service,blob,service,new,blob,cache,service,mock,permanent,blob,cache,class,mock,transient,blob,cache,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,new,test,task,state,manager,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,new,test,global,aggregate,manager,blob,service,new,blob,library,cache,manager,blob,service,get,permanent,blob,service,flink,user,code,class,loaders,resolve,order,new,string,0,mock,file,cache,class,task,manager,runtime,info,unregistered,metric,groups,create,unregistered,task,metric,group,new,no,op,result,partition,consumable,notifier,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,checkpoint,with,default,location,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
StreamTaskTerminationTest -> @Test 	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception;1550863001;FLINK-6833__<p>Tests that a finished stream task cannot be failed by an asynchronous checkpointing operation after_the stream task has stopped running.;@Test_	public void testConcurrentAsyncCheckpointCannotFailFinishedStreamTask() throws Exception {_		final Configuration taskConfiguration = new Configuration()__		final StreamConfig streamConfig = new StreamConfig(taskConfiguration)__		final NoOpStreamOperator<Long> noOpStreamOperator = new NoOpStreamOperator<>()___		final StateBackend blockingStateBackend = new BlockingStateBackend()___		streamConfig.setStreamOperator(noOpStreamOperator)__		streamConfig.setOperatorID(new OperatorID())__		streamConfig.setStateBackend(blockingStateBackend)___		final long checkpointId = 0L__		final long checkpointTimestamp = 0L___		final JobInformation jobInformation = new JobInformation(_			new JobID(),_			"Test Job",_			new SerializedValue<>(new ExecutionConfig()),_			new Configuration(),_			Collections.emptyList(),_			Collections.emptyList())___		final TaskInformation taskInformation = new TaskInformation(_			new JobVertexID(),_			"Test Task",_			1,_			1,_			BlockingStreamTask.class.getName(),_			taskConfiguration)___		final TaskManagerRuntimeInfo taskManagerRuntimeInfo = new TestingTaskManagerRuntimeInfo()___		TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()__		final NetworkEnvironment networkEnv = mock(NetworkEnvironment.class)__		when(networkEnv.createKvStateTaskRegistry(any(JobID.class), any(JobVertexID.class))).thenReturn(mock(TaskKvStateRegistry.class))__		when(networkEnv.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)___		BlobCacheService blobService =_			new BlobCacheService(mock(PermanentBlobCache.class), mock(TransientBlobCache.class))___		final Task task = new Task(_			jobInformation,_			taskInformation,_			new ExecutionAttemptID(),_			new AllocationID(),_			0,_			0,_			Collections.<ResultPartitionDeploymentDescriptor>emptyList(),_			Collections.<InputGateDeploymentDescriptor>emptyList(),_			0,_			new MemoryManager(32L * 1024L, 1),_			new IOManagerAsync(),_			networkEnv,_			mock(BroadcastVariableManager.class),_			new TestTaskStateManager(),_			mock(TaskManagerActions.class),_			mock(InputSplitProvider.class),_			mock(CheckpointResponder.class),_			new TestGlobalAggregateManager(),_			blobService,_			new BlobLibraryCacheManager(_				blobService.getPermanentBlobService(),_				FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,_				new String[0]),_			mock(FileCache.class),_			taskManagerRuntimeInfo,_			UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),_			new NoOpResultPartitionConsumableNotifier(),_			mock(PartitionProducerStateChecker.class),_			Executors.directExecutor())___		CompletableFuture<Void> taskRun = CompletableFuture.runAsync(_			() -> task.run(),_			TestingUtils.defaultExecutor())___		_		RUN_LATCH.await()___		_		task.triggerCheckpointBarrier(checkpointId, checkpointTimestamp, CheckpointOptions.forCheckpointWithDefaultLocation())___		_		taskRun.get()___		_		if (task.getFailureCause() != null) {_			throw new Exception("Task failed", task.getFailureCause())__		}__		_		assertEquals(ExecutionState.FINISHED, task.getExecutionState())__	};flink,6833,p,tests,that,a,finished,stream,task,cannot,be,failed,by,an,asynchronous,checkpointing,operation,after,the,stream,task,has,stopped,running;test,public,void,test,concurrent,async,checkpoint,cannot,fail,finished,stream,task,throws,exception,final,configuration,task,configuration,new,configuration,final,stream,config,stream,config,new,stream,config,task,configuration,final,no,op,stream,operator,long,no,op,stream,operator,new,no,op,stream,operator,final,state,backend,blocking,state,backend,new,blocking,state,backend,stream,config,set,stream,operator,no,op,stream,operator,stream,config,set,operator,id,new,operator,id,stream,config,set,state,backend,blocking,state,backend,final,long,checkpoint,id,0l,final,long,checkpoint,timestamp,0l,final,job,information,job,information,new,job,information,new,job,id,test,job,new,serialized,value,new,execution,config,new,configuration,collections,empty,list,collections,empty,list,final,task,information,task,information,new,task,information,new,job,vertex,id,test,task,1,1,blocking,stream,task,class,get,name,task,configuration,final,task,manager,runtime,info,task,manager,runtime,info,new,testing,task,manager,runtime,info,task,event,dispatcher,task,event,dispatcher,new,task,event,dispatcher,final,network,environment,network,env,mock,network,environment,class,when,network,env,create,kv,state,task,registry,any,job,id,class,any,job,vertex,id,class,then,return,mock,task,kv,state,registry,class,when,network,env,get,task,event,dispatcher,then,return,task,event,dispatcher,blob,cache,service,blob,service,new,blob,cache,service,mock,permanent,blob,cache,class,mock,transient,blob,cache,class,final,task,task,new,task,job,information,task,information,new,execution,attempt,id,new,allocation,id,0,0,collections,result,partition,deployment,descriptor,empty,list,collections,input,gate,deployment,descriptor,empty,list,0,new,memory,manager,32l,1024l,1,new,iomanager,async,network,env,mock,broadcast,variable,manager,class,new,test,task,state,manager,mock,task,manager,actions,class,mock,input,split,provider,class,mock,checkpoint,responder,class,new,test,global,aggregate,manager,blob,service,new,blob,library,cache,manager,blob,service,get,permanent,blob,service,flink,user,code,class,loaders,resolve,order,new,string,0,mock,file,cache,class,task,manager,runtime,info,unregistered,metric,groups,create,unregistered,task,metric,group,new,no,op,result,partition,consumable,notifier,mock,partition,producer,state,checker,class,executors,direct,executor,completable,future,void,task,run,completable,future,run,async,task,run,testing,utils,default,executor,await,task,trigger,checkpoint,barrier,checkpoint,id,checkpoint,timestamp,checkpoint,options,for,checkpoint,with,default,location,task,run,get,if,task,get,failure,cause,null,throw,new,exception,task,failed,task,get,failure,cause,assert,equals,execution,state,finished,task,get,execution,state
