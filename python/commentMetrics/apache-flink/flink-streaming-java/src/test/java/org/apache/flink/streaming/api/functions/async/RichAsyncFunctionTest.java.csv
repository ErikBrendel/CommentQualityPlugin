# id;timestamp;commentText;codeText;commentWords;codeWords
RichAsyncFunctionTest -> @Test 	public void testIterationRuntimeContext() throws Exception;1482206691;Test the set of iteration runtime context methods in the context of a_{@link RichAsyncFunction}.;@Test_	public void testIterationRuntimeContext() throws Exception {_		RichAsyncFunction<Integer, Integer> function = new RichAsyncFunction<Integer, Integer>() {_			private static final long serialVersionUID = -2023923961609455894L___			@Override_			public void asyncInvoke(Integer input, AsyncCollector<Integer> collector) throws Exception {_				_			}_		}___		int superstepNumber = 42___		IterationRuntimeContext mockedIterationRuntimeContext = mock(IterationRuntimeContext.class)__		when(mockedIterationRuntimeContext.getSuperstepNumber()).thenReturn(superstepNumber)__		function.setRuntimeContext(mockedIterationRuntimeContext)___		IterationRuntimeContext iterationRuntimeContext = function.getIterationRuntimeContext()___		assertEquals(superstepNumber, iterationRuntimeContext.getSuperstepNumber())___		try {_			iterationRuntimeContext.getIterationAggregator("foobar")__			fail("Expected getIterationAggregator to fail with unsupported operation exception")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			iterationRuntimeContext.getPreviousIterationAggregate("foobar")__			fail("Expected getPreviousIterationAggregator to fail with unsupported operation exception")__		} catch (UnsupportedOperationException e) {_			_		}_	};test,the,set,of,iteration,runtime,context,methods,in,the,context,of,a,link,rich,async,function;test,public,void,test,iteration,runtime,context,throws,exception,rich,async,function,integer,integer,function,new,rich,async,function,integer,integer,private,static,final,long,serial,version,uid,2023923961609455894l,override,public,void,async,invoke,integer,input,async,collector,integer,collector,throws,exception,int,superstep,number,42,iteration,runtime,context,mocked,iteration,runtime,context,mock,iteration,runtime,context,class,when,mocked,iteration,runtime,context,get,superstep,number,then,return,superstep,number,function,set,runtime,context,mocked,iteration,runtime,context,iteration,runtime,context,iteration,runtime,context,function,get,iteration,runtime,context,assert,equals,superstep,number,iteration,runtime,context,get,superstep,number,try,iteration,runtime,context,get,iteration,aggregator,foobar,fail,expected,get,iteration,aggregator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,iteration,runtime,context,get,previous,iteration,aggregate,foobar,fail,expected,get,previous,iteration,aggregator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e
RichAsyncFunctionTest -> @Test 	public void testIterationRuntimeContext() throws Exception;1483645612;Test the set of iteration runtime context methods in the context of a_{@link RichAsyncFunction}.;@Test_	public void testIterationRuntimeContext() throws Exception {_		RichAsyncFunction<Integer, Integer> function = new RichAsyncFunction<Integer, Integer>() {_			private static final long serialVersionUID = -2023923961609455894L___			@Override_			public void asyncInvoke(Integer input, AsyncCollector<Integer> collector) throws Exception {_				_			}_		}___		int superstepNumber = 42___		IterationRuntimeContext mockedIterationRuntimeContext = mock(IterationRuntimeContext.class)__		when(mockedIterationRuntimeContext.getSuperstepNumber()).thenReturn(superstepNumber)__		function.setRuntimeContext(mockedIterationRuntimeContext)___		IterationRuntimeContext iterationRuntimeContext = function.getIterationRuntimeContext()___		assertEquals(superstepNumber, iterationRuntimeContext.getSuperstepNumber())___		try {_			iterationRuntimeContext.getIterationAggregator("foobar")__			fail("Expected getIterationAggregator to fail with unsupported operation exception")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			iterationRuntimeContext.getPreviousIterationAggregate("foobar")__			fail("Expected getPreviousIterationAggregator to fail with unsupported operation exception")__		} catch (UnsupportedOperationException e) {_			_		}_	};test,the,set,of,iteration,runtime,context,methods,in,the,context,of,a,link,rich,async,function;test,public,void,test,iteration,runtime,context,throws,exception,rich,async,function,integer,integer,function,new,rich,async,function,integer,integer,private,static,final,long,serial,version,uid,2023923961609455894l,override,public,void,async,invoke,integer,input,async,collector,integer,collector,throws,exception,int,superstep,number,42,iteration,runtime,context,mocked,iteration,runtime,context,mock,iteration,runtime,context,class,when,mocked,iteration,runtime,context,get,superstep,number,then,return,superstep,number,function,set,runtime,context,mocked,iteration,runtime,context,iteration,runtime,context,iteration,runtime,context,function,get,iteration,runtime,context,assert,equals,superstep,number,iteration,runtime,context,get,superstep,number,try,iteration,runtime,context,get,iteration,aggregator,foobar,fail,expected,get,iteration,aggregator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,iteration,runtime,context,get,previous,iteration,aggregate,foobar,fail,expected,get,previous,iteration,aggregator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e
RichAsyncFunctionTest -> @Test 	public void testIterationRuntimeContext() throws Exception;1487865389;Test the set of iteration runtime context methods in the context of a_{@link RichAsyncFunction}.;@Test_	public void testIterationRuntimeContext() throws Exception {_		RichAsyncFunction<Integer, Integer> function = new RichAsyncFunction<Integer, Integer>() {_			private static final long serialVersionUID = -2023923961609455894L___			@Override_			public void asyncInvoke(Integer input, AsyncCollector<Integer> collector) throws Exception {_				_			}_		}___		int superstepNumber = 42___		IterationRuntimeContext mockedIterationRuntimeContext = mock(IterationRuntimeContext.class)__		when(mockedIterationRuntimeContext.getSuperstepNumber()).thenReturn(superstepNumber)__		function.setRuntimeContext(mockedIterationRuntimeContext)___		IterationRuntimeContext iterationRuntimeContext = function.getIterationRuntimeContext()___		assertEquals(superstepNumber, iterationRuntimeContext.getSuperstepNumber())___		try {_			iterationRuntimeContext.getIterationAggregator("foobar")__			fail("Expected getIterationAggregator to fail with unsupported operation exception")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			iterationRuntimeContext.getPreviousIterationAggregate("foobar")__			fail("Expected getPreviousIterationAggregator to fail with unsupported operation exception")__		} catch (UnsupportedOperationException e) {_			_		}_	};test,the,set,of,iteration,runtime,context,methods,in,the,context,of,a,link,rich,async,function;test,public,void,test,iteration,runtime,context,throws,exception,rich,async,function,integer,integer,function,new,rich,async,function,integer,integer,private,static,final,long,serial,version,uid,2023923961609455894l,override,public,void,async,invoke,integer,input,async,collector,integer,collector,throws,exception,int,superstep,number,42,iteration,runtime,context,mocked,iteration,runtime,context,mock,iteration,runtime,context,class,when,mocked,iteration,runtime,context,get,superstep,number,then,return,superstep,number,function,set,runtime,context,mocked,iteration,runtime,context,iteration,runtime,context,iteration,runtime,context,function,get,iteration,runtime,context,assert,equals,superstep,number,iteration,runtime,context,get,superstep,number,try,iteration,runtime,context,get,iteration,aggregator,foobar,fail,expected,get,iteration,aggregator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,iteration,runtime,context,get,previous,iteration,aggregate,foobar,fail,expected,get,previous,iteration,aggregator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e
RichAsyncFunctionTest -> @Test 	public void testIterationRuntimeContext() throws Exception;1495484544;Test the set of iteration runtime context methods in the context of a_{@link RichAsyncFunction}.;@Test_	public void testIterationRuntimeContext() throws Exception {_		RichAsyncFunction<Integer, Integer> function = new RichAsyncFunction<Integer, Integer>() {_			private static final long serialVersionUID = -2023923961609455894L___			@Override_			public void asyncInvoke(Integer input, AsyncCollector<Integer> collector) throws Exception {_				_			}_		}___		int superstepNumber = 42___		IterationRuntimeContext mockedIterationRuntimeContext = mock(IterationRuntimeContext.class)__		when(mockedIterationRuntimeContext.getSuperstepNumber()).thenReturn(superstepNumber)__		function.setRuntimeContext(mockedIterationRuntimeContext)___		IterationRuntimeContext iterationRuntimeContext = function.getIterationRuntimeContext()___		assertEquals(superstepNumber, iterationRuntimeContext.getSuperstepNumber())___		try {_			iterationRuntimeContext.getIterationAggregator("foobar")__			fail("Expected getIterationAggregator to fail with unsupported operation exception")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			iterationRuntimeContext.getPreviousIterationAggregate("foobar")__			fail("Expected getPreviousIterationAggregator to fail with unsupported operation exception")__		} catch (UnsupportedOperationException e) {_			_		}_	};test,the,set,of,iteration,runtime,context,methods,in,the,context,of,a,link,rich,async,function;test,public,void,test,iteration,runtime,context,throws,exception,rich,async,function,integer,integer,function,new,rich,async,function,integer,integer,private,static,final,long,serial,version,uid,2023923961609455894l,override,public,void,async,invoke,integer,input,async,collector,integer,collector,throws,exception,int,superstep,number,42,iteration,runtime,context,mocked,iteration,runtime,context,mock,iteration,runtime,context,class,when,mocked,iteration,runtime,context,get,superstep,number,then,return,superstep,number,function,set,runtime,context,mocked,iteration,runtime,context,iteration,runtime,context,iteration,runtime,context,function,get,iteration,runtime,context,assert,equals,superstep,number,iteration,runtime,context,get,superstep,number,try,iteration,runtime,context,get,iteration,aggregator,foobar,fail,expected,get,iteration,aggregator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,iteration,runtime,context,get,previous,iteration,aggregate,foobar,fail,expected,get,previous,iteration,aggregator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e
RichAsyncFunctionTest -> @Test 	public void testIterationRuntimeContext() throws Exception;1503407113;Test the set of iteration runtime context methods in the context of a_{@link RichAsyncFunction}.;@Test_	public void testIterationRuntimeContext() throws Exception {_		RichAsyncFunction<Integer, Integer> function = new RichAsyncFunction<Integer, Integer>() {_			private static final long serialVersionUID = -2023923961609455894L___			@Override_			public void asyncInvoke(Integer input, ResultFuture<Integer> resultFuture) throws Exception {_				_			}_		}___		int superstepNumber = 42___		IterationRuntimeContext mockedIterationRuntimeContext = mock(IterationRuntimeContext.class)__		when(mockedIterationRuntimeContext.getSuperstepNumber()).thenReturn(superstepNumber)__		function.setRuntimeContext(mockedIterationRuntimeContext)___		IterationRuntimeContext iterationRuntimeContext = function.getIterationRuntimeContext()___		assertEquals(superstepNumber, iterationRuntimeContext.getSuperstepNumber())___		try {_			iterationRuntimeContext.getIterationAggregator("foobar")__			fail("Expected getIterationAggregator to fail with unsupported operation exception")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			iterationRuntimeContext.getPreviousIterationAggregate("foobar")__			fail("Expected getPreviousIterationAggregator to fail with unsupported operation exception")__		} catch (UnsupportedOperationException e) {_			_		}_	};test,the,set,of,iteration,runtime,context,methods,in,the,context,of,a,link,rich,async,function;test,public,void,test,iteration,runtime,context,throws,exception,rich,async,function,integer,integer,function,new,rich,async,function,integer,integer,private,static,final,long,serial,version,uid,2023923961609455894l,override,public,void,async,invoke,integer,input,result,future,integer,result,future,throws,exception,int,superstep,number,42,iteration,runtime,context,mocked,iteration,runtime,context,mock,iteration,runtime,context,class,when,mocked,iteration,runtime,context,get,superstep,number,then,return,superstep,number,function,set,runtime,context,mocked,iteration,runtime,context,iteration,runtime,context,iteration,runtime,context,function,get,iteration,runtime,context,assert,equals,superstep,number,iteration,runtime,context,get,superstep,number,try,iteration,runtime,context,get,iteration,aggregator,foobar,fail,expected,get,iteration,aggregator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,iteration,runtime,context,get,previous,iteration,aggregate,foobar,fail,expected,get,previous,iteration,aggregator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e
RichAsyncFunctionTest -> @Test 	public void testIterationRuntimeContext() throws Exception;1509016418;Test the set of iteration runtime context methods in the context of a_{@link RichAsyncFunction}.;@Test_	public void testIterationRuntimeContext() throws Exception {_		RichAsyncFunction<Integer, Integer> function = new RichAsyncFunction<Integer, Integer>() {_			private static final long serialVersionUID = -2023923961609455894L___			@Override_			public void asyncInvoke(Integer input, ResultFuture<Integer> resultFuture) throws Exception {_				_			}_		}___		int superstepNumber = 42___		IterationRuntimeContext mockedIterationRuntimeContext = mock(IterationRuntimeContext.class)__		when(mockedIterationRuntimeContext.getSuperstepNumber()).thenReturn(superstepNumber)__		function.setRuntimeContext(mockedIterationRuntimeContext)___		IterationRuntimeContext iterationRuntimeContext = function.getIterationRuntimeContext()___		assertEquals(superstepNumber, iterationRuntimeContext.getSuperstepNumber())___		try {_			iterationRuntimeContext.getIterationAggregator("foobar")__			fail("Expected getIterationAggregator to fail with unsupported operation exception")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			iterationRuntimeContext.getPreviousIterationAggregate("foobar")__			fail("Expected getPreviousIterationAggregator to fail with unsupported operation exception")__		} catch (UnsupportedOperationException e) {_			_		}_	};test,the,set,of,iteration,runtime,context,methods,in,the,context,of,a,link,rich,async,function;test,public,void,test,iteration,runtime,context,throws,exception,rich,async,function,integer,integer,function,new,rich,async,function,integer,integer,private,static,final,long,serial,version,uid,2023923961609455894l,override,public,void,async,invoke,integer,input,result,future,integer,result,future,throws,exception,int,superstep,number,42,iteration,runtime,context,mocked,iteration,runtime,context,mock,iteration,runtime,context,class,when,mocked,iteration,runtime,context,get,superstep,number,then,return,superstep,number,function,set,runtime,context,mocked,iteration,runtime,context,iteration,runtime,context,iteration,runtime,context,function,get,iteration,runtime,context,assert,equals,superstep,number,iteration,runtime,context,get,superstep,number,try,iteration,runtime,context,get,iteration,aggregator,foobar,fail,expected,get,iteration,aggregator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,iteration,runtime,context,get,previous,iteration,aggregate,foobar,fail,expected,get,previous,iteration,aggregator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e
RichAsyncFunctionTest -> @Test 	public void testIterationRuntimeContext() throws Exception;1513102156;Test the set of iteration runtime context methods in the context of a_{@link RichAsyncFunction}.;@Test_	public void testIterationRuntimeContext() throws Exception {_		RichAsyncFunction<Integer, Integer> function = new RichAsyncFunction<Integer, Integer>() {_			private static final long serialVersionUID = -2023923961609455894L___			@Override_			public void asyncInvoke(Integer input, ResultFuture<Integer> resultFuture) throws Exception {_				_			}_		}___		int superstepNumber = 42___		IterationRuntimeContext mockedIterationRuntimeContext = mock(IterationRuntimeContext.class)__		when(mockedIterationRuntimeContext.getSuperstepNumber()).thenReturn(superstepNumber)__		function.setRuntimeContext(mockedIterationRuntimeContext)___		IterationRuntimeContext iterationRuntimeContext = function.getIterationRuntimeContext()___		assertEquals(superstepNumber, iterationRuntimeContext.getSuperstepNumber())___		try {_			iterationRuntimeContext.getIterationAggregator("foobar")__			fail("Expected getIterationAggregator to fail with unsupported operation exception")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			iterationRuntimeContext.getPreviousIterationAggregate("foobar")__			fail("Expected getPreviousIterationAggregator to fail with unsupported operation exception")__		} catch (UnsupportedOperationException e) {_			_		}_	};test,the,set,of,iteration,runtime,context,methods,in,the,context,of,a,link,rich,async,function;test,public,void,test,iteration,runtime,context,throws,exception,rich,async,function,integer,integer,function,new,rich,async,function,integer,integer,private,static,final,long,serial,version,uid,2023923961609455894l,override,public,void,async,invoke,integer,input,result,future,integer,result,future,throws,exception,int,superstep,number,42,iteration,runtime,context,mocked,iteration,runtime,context,mock,iteration,runtime,context,class,when,mocked,iteration,runtime,context,get,superstep,number,then,return,superstep,number,function,set,runtime,context,mocked,iteration,runtime,context,iteration,runtime,context,iteration,runtime,context,function,get,iteration,runtime,context,assert,equals,superstep,number,iteration,runtime,context,get,superstep,number,try,iteration,runtime,context,get,iteration,aggregator,foobar,fail,expected,get,iteration,aggregator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,iteration,runtime,context,get,previous,iteration,aggregate,foobar,fail,expected,get,previous,iteration,aggregator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e
RichAsyncFunctionTest -> @Test 	public void testRuntimeContext() throws Exception;1482206691;Test the set of runtime context methods in the context of a {@link RichAsyncFunction}.;@Test_	public void testRuntimeContext() throws Exception {_		RichAsyncFunction<Integer, Integer> function = new RichAsyncFunction<Integer, Integer>() {_			private static final long serialVersionUID = 1707630162838967972L___			@Override_			public void asyncInvoke(Integer input, AsyncCollector<Integer> collector) throws Exception {_				_			}_		}___		final String taskName = "foobarTask"__		final MetricGroup metricGroup = mock(MetricGroup.class)__		final int numberOfParallelSubtasks = 42__		final int indexOfSubtask = 43__		final int attemptNumber = 1337__		final String taskNameWithSubtask = "barfoo"__		final ExecutionConfig executionConfig = mock(ExecutionConfig.class)__		final ClassLoader userCodeClassLoader = mock(ClassLoader.class)___		RuntimeContext mockedRuntimeContext = mock(RuntimeContext.class)___		when(mockedRuntimeContext.getTaskName()).thenReturn(taskName)__		when(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup)__		when(mockedRuntimeContext.getNumberOfParallelSubtasks()).thenReturn(numberOfParallelSubtasks)__		when(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask)__		when(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber)__		when(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask)__		when(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig)__		when(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader)___		function.setRuntimeContext(mockedRuntimeContext)___		RuntimeContext runtimeContext = function.getRuntimeContext()___		assertEquals(taskName, runtimeContext.getTaskName())__		assertEquals(metricGroup, runtimeContext.getMetricGroup())__		assertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks())__		assertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask())__		assertEquals(attemptNumber, runtimeContext.getAttemptNumber())__		assertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks())__		assertEquals(executionConfig, runtimeContext.getExecutionConfig())__		assertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader())___		try {_			runtimeContext.getDistributedCache()__			fail("Expected getDistributedCached to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getState(new ValueStateDescriptor<>("foobar", Integer.class, 42))__			fail("Expected getState to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getListState(new ListStateDescriptor<>("foobar", Integer.class))__			fail("Expected getListState to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getReducingState(new ReducingStateDescriptor<>("foobar", new ReduceFunction<Integer>() {_				private static final long serialVersionUID = 2136425961884441050L___				@Override_				public Integer reduce(Integer value1, Integer value2) throws Exception {_					return value1__				}_			}, Integer.class))__			fail("Expected getReducingState to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.addAccumulator("foobar", new Accumulator<Integer, Integer>() {_				private static final long serialVersionUID = -4673320336846482358L___				@Override_				public void add(Integer value) {_					_				}__				@Override_				public Integer getLocalValue() {_					return null__				}__				@Override_				public void resetLocal() {__				}__				@Override_				public void merge(Accumulator<Integer, Integer> other) {__				}__				@Override_				public Accumulator<Integer, Integer> clone() {_					return null__				}_			})__			fail("Expected addAccumulator to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getAccumulator("foobar")__			fail("Expected getAccumulator to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getAllAccumulators()__			fail("Expected getAllAccumulators to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getIntCounter("foobar")__			fail("Expected getIntCounter to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getLongCounter("foobar")__			fail("Expected getLongCounter to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getDoubleCounter("foobar")__			fail("Expected getDoubleCounter to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getHistogram("foobar")__			fail("Expected getHistogram to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.hasBroadcastVariable("foobar")__			fail("Expected hasBroadcastVariable to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getBroadcastVariable("foobar")__			fail("Expected getBroadcastVariable to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getBroadcastVariableWithInitializer("foobar", new BroadcastVariableInitializer<Object, Object>() {_				@Override_				public Object initializeBroadcastVariable(Iterable<Object> data) {_					return null__				}_			})__			fail("Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}_	};test,the,set,of,runtime,context,methods,in,the,context,of,a,link,rich,async,function;test,public,void,test,runtime,context,throws,exception,rich,async,function,integer,integer,function,new,rich,async,function,integer,integer,private,static,final,long,serial,version,uid,1707630162838967972l,override,public,void,async,invoke,integer,input,async,collector,integer,collector,throws,exception,final,string,task,name,foobar,task,final,metric,group,metric,group,mock,metric,group,class,final,int,number,of,parallel,subtasks,42,final,int,index,of,subtask,43,final,int,attempt,number,1337,final,string,task,name,with,subtask,barfoo,final,execution,config,execution,config,mock,execution,config,class,final,class,loader,user,code,class,loader,mock,class,loader,class,runtime,context,mocked,runtime,context,mock,runtime,context,class,when,mocked,runtime,context,get,task,name,then,return,task,name,when,mocked,runtime,context,get,metric,group,then,return,metric,group,when,mocked,runtime,context,get,number,of,parallel,subtasks,then,return,number,of,parallel,subtasks,when,mocked,runtime,context,get,index,of,this,subtask,then,return,index,of,subtask,when,mocked,runtime,context,get,attempt,number,then,return,attempt,number,when,mocked,runtime,context,get,task,name,with,subtasks,then,return,task,name,with,subtask,when,mocked,runtime,context,get,execution,config,then,return,execution,config,when,mocked,runtime,context,get,user,code,class,loader,then,return,user,code,class,loader,function,set,runtime,context,mocked,runtime,context,runtime,context,runtime,context,function,get,runtime,context,assert,equals,task,name,runtime,context,get,task,name,assert,equals,metric,group,runtime,context,get,metric,group,assert,equals,number,of,parallel,subtasks,runtime,context,get,number,of,parallel,subtasks,assert,equals,index,of,subtask,runtime,context,get,index,of,this,subtask,assert,equals,attempt,number,runtime,context,get,attempt,number,assert,equals,task,name,with,subtask,runtime,context,get,task,name,with,subtasks,assert,equals,execution,config,runtime,context,get,execution,config,assert,equals,user,code,class,loader,runtime,context,get,user,code,class,loader,try,runtime,context,get,distributed,cache,fail,expected,get,distributed,cached,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,state,new,value,state,descriptor,foobar,integer,class,42,fail,expected,get,state,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,list,state,new,list,state,descriptor,foobar,integer,class,fail,expected,get,list,state,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,reducing,state,new,reducing,state,descriptor,foobar,new,reduce,function,integer,private,static,final,long,serial,version,uid,2136425961884441050l,override,public,integer,reduce,integer,value1,integer,value2,throws,exception,return,value1,integer,class,fail,expected,get,reducing,state,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,add,accumulator,foobar,new,accumulator,integer,integer,private,static,final,long,serial,version,uid,4673320336846482358l,override,public,void,add,integer,value,override,public,integer,get,local,value,return,null,override,public,void,reset,local,override,public,void,merge,accumulator,integer,integer,other,override,public,accumulator,integer,integer,clone,return,null,fail,expected,add,accumulator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,accumulator,foobar,fail,expected,get,accumulator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,all,accumulators,fail,expected,get,all,accumulators,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,int,counter,foobar,fail,expected,get,int,counter,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,long,counter,foobar,fail,expected,get,long,counter,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,double,counter,foobar,fail,expected,get,double,counter,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,histogram,foobar,fail,expected,get,histogram,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,has,broadcast,variable,foobar,fail,expected,has,broadcast,variable,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,broadcast,variable,foobar,fail,expected,get,broadcast,variable,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,broadcast,variable,with,initializer,foobar,new,broadcast,variable,initializer,object,object,override,public,object,initialize,broadcast,variable,iterable,object,data,return,null,fail,expected,get,broadcast,variable,with,initializer,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e
RichAsyncFunctionTest -> @Test 	public void testRuntimeContext() throws Exception;1483645612;Test the set of runtime context methods in the context of a {@link RichAsyncFunction}.;@Test_	public void testRuntimeContext() throws Exception {_		RichAsyncFunction<Integer, Integer> function = new RichAsyncFunction<Integer, Integer>() {_			private static final long serialVersionUID = 1707630162838967972L___			@Override_			public void asyncInvoke(Integer input, AsyncCollector<Integer> collector) throws Exception {_				_			}_		}___		final String taskName = "foobarTask"__		final MetricGroup metricGroup = mock(MetricGroup.class)__		final int numberOfParallelSubtasks = 42__		final int indexOfSubtask = 43__		final int attemptNumber = 1337__		final String taskNameWithSubtask = "barfoo"__		final ExecutionConfig executionConfig = mock(ExecutionConfig.class)__		final ClassLoader userCodeClassLoader = mock(ClassLoader.class)___		RuntimeContext mockedRuntimeContext = mock(RuntimeContext.class)___		when(mockedRuntimeContext.getTaskName()).thenReturn(taskName)__		when(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup)__		when(mockedRuntimeContext.getNumberOfParallelSubtasks()).thenReturn(numberOfParallelSubtasks)__		when(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask)__		when(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber)__		when(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask)__		when(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig)__		when(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader)___		function.setRuntimeContext(mockedRuntimeContext)___		RuntimeContext runtimeContext = function.getRuntimeContext()___		assertEquals(taskName, runtimeContext.getTaskName())__		assertEquals(metricGroup, runtimeContext.getMetricGroup())__		assertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks())__		assertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask())__		assertEquals(attemptNumber, runtimeContext.getAttemptNumber())__		assertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks())__		assertEquals(executionConfig, runtimeContext.getExecutionConfig())__		assertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader())___		try {_			runtimeContext.getDistributedCache()__			fail("Expected getDistributedCached to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getState(new ValueStateDescriptor<>("foobar", Integer.class, 42))__			fail("Expected getState to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getListState(new ListStateDescriptor<>("foobar", Integer.class))__			fail("Expected getListState to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getReducingState(new ReducingStateDescriptor<>("foobar", new ReduceFunction<Integer>() {_				private static final long serialVersionUID = 2136425961884441050L___				@Override_				public Integer reduce(Integer value1, Integer value2) throws Exception {_					return value1__				}_			}, Integer.class))__			fail("Expected getReducingState to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getFoldingState(new FoldingStateDescriptor<>("foobar", 0, new FoldFunction<Integer, Integer>() {_				@Override_				public Integer fold(Integer accumulator, Integer value) throws Exception {_					return accumulator__				}_			}, Integer.class))__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.addAccumulator("foobar", new Accumulator<Integer, Integer>() {_				private static final long serialVersionUID = -4673320336846482358L___				@Override_				public void add(Integer value) {_					_				}__				@Override_				public Integer getLocalValue() {_					return null__				}__				@Override_				public void resetLocal() {__				}__				@Override_				public void merge(Accumulator<Integer, Integer> other) {__				}__				@Override_				public Accumulator<Integer, Integer> clone() {_					return null__				}_			})__			fail("Expected addAccumulator to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getAccumulator("foobar")__			fail("Expected getAccumulator to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getAllAccumulators()__			fail("Expected getAllAccumulators to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getIntCounter("foobar")__			fail("Expected getIntCounter to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getLongCounter("foobar")__			fail("Expected getLongCounter to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getDoubleCounter("foobar")__			fail("Expected getDoubleCounter to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getHistogram("foobar")__			fail("Expected getHistogram to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.hasBroadcastVariable("foobar")__			fail("Expected hasBroadcastVariable to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getBroadcastVariable("foobar")__			fail("Expected getBroadcastVariable to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getBroadcastVariableWithInitializer("foobar", new BroadcastVariableInitializer<Object, Object>() {_				@Override_				public Object initializeBroadcastVariable(Iterable<Object> data) {_					return null__				}_			})__			fail("Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}_	};test,the,set,of,runtime,context,methods,in,the,context,of,a,link,rich,async,function;test,public,void,test,runtime,context,throws,exception,rich,async,function,integer,integer,function,new,rich,async,function,integer,integer,private,static,final,long,serial,version,uid,1707630162838967972l,override,public,void,async,invoke,integer,input,async,collector,integer,collector,throws,exception,final,string,task,name,foobar,task,final,metric,group,metric,group,mock,metric,group,class,final,int,number,of,parallel,subtasks,42,final,int,index,of,subtask,43,final,int,attempt,number,1337,final,string,task,name,with,subtask,barfoo,final,execution,config,execution,config,mock,execution,config,class,final,class,loader,user,code,class,loader,mock,class,loader,class,runtime,context,mocked,runtime,context,mock,runtime,context,class,when,mocked,runtime,context,get,task,name,then,return,task,name,when,mocked,runtime,context,get,metric,group,then,return,metric,group,when,mocked,runtime,context,get,number,of,parallel,subtasks,then,return,number,of,parallel,subtasks,when,mocked,runtime,context,get,index,of,this,subtask,then,return,index,of,subtask,when,mocked,runtime,context,get,attempt,number,then,return,attempt,number,when,mocked,runtime,context,get,task,name,with,subtasks,then,return,task,name,with,subtask,when,mocked,runtime,context,get,execution,config,then,return,execution,config,when,mocked,runtime,context,get,user,code,class,loader,then,return,user,code,class,loader,function,set,runtime,context,mocked,runtime,context,runtime,context,runtime,context,function,get,runtime,context,assert,equals,task,name,runtime,context,get,task,name,assert,equals,metric,group,runtime,context,get,metric,group,assert,equals,number,of,parallel,subtasks,runtime,context,get,number,of,parallel,subtasks,assert,equals,index,of,subtask,runtime,context,get,index,of,this,subtask,assert,equals,attempt,number,runtime,context,get,attempt,number,assert,equals,task,name,with,subtask,runtime,context,get,task,name,with,subtasks,assert,equals,execution,config,runtime,context,get,execution,config,assert,equals,user,code,class,loader,runtime,context,get,user,code,class,loader,try,runtime,context,get,distributed,cache,fail,expected,get,distributed,cached,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,state,new,value,state,descriptor,foobar,integer,class,42,fail,expected,get,state,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,list,state,new,list,state,descriptor,foobar,integer,class,fail,expected,get,list,state,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,reducing,state,new,reducing,state,descriptor,foobar,new,reduce,function,integer,private,static,final,long,serial,version,uid,2136425961884441050l,override,public,integer,reduce,integer,value1,integer,value2,throws,exception,return,value1,integer,class,fail,expected,get,reducing,state,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,folding,state,new,folding,state,descriptor,foobar,0,new,fold,function,integer,integer,override,public,integer,fold,integer,accumulator,integer,value,throws,exception,return,accumulator,integer,class,catch,unsupported,operation,exception,e,try,runtime,context,add,accumulator,foobar,new,accumulator,integer,integer,private,static,final,long,serial,version,uid,4673320336846482358l,override,public,void,add,integer,value,override,public,integer,get,local,value,return,null,override,public,void,reset,local,override,public,void,merge,accumulator,integer,integer,other,override,public,accumulator,integer,integer,clone,return,null,fail,expected,add,accumulator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,accumulator,foobar,fail,expected,get,accumulator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,all,accumulators,fail,expected,get,all,accumulators,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,int,counter,foobar,fail,expected,get,int,counter,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,long,counter,foobar,fail,expected,get,long,counter,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,double,counter,foobar,fail,expected,get,double,counter,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,histogram,foobar,fail,expected,get,histogram,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,has,broadcast,variable,foobar,fail,expected,has,broadcast,variable,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,broadcast,variable,foobar,fail,expected,get,broadcast,variable,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,broadcast,variable,with,initializer,foobar,new,broadcast,variable,initializer,object,object,override,public,object,initialize,broadcast,variable,iterable,object,data,return,null,fail,expected,get,broadcast,variable,with,initializer,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e
RichAsyncFunctionTest -> @Test 	public void testRuntimeContext() throws Exception;1487865389;Test the set of runtime context methods in the context of a {@link RichAsyncFunction}.;@Test_	public void testRuntimeContext() throws Exception {_		RichAsyncFunction<Integer, Integer> function = new RichAsyncFunction<Integer, Integer>() {_			private static final long serialVersionUID = 1707630162838967972L___			@Override_			public void asyncInvoke(Integer input, AsyncCollector<Integer> collector) throws Exception {_				_			}_		}___		final String taskName = "foobarTask"__		final MetricGroup metricGroup = mock(MetricGroup.class)__		final int numberOfParallelSubtasks = 42__		final int indexOfSubtask = 43__		final int attemptNumber = 1337__		final String taskNameWithSubtask = "barfoo"__		final ExecutionConfig executionConfig = mock(ExecutionConfig.class)__		final ClassLoader userCodeClassLoader = mock(ClassLoader.class)___		RuntimeContext mockedRuntimeContext = mock(RuntimeContext.class)___		when(mockedRuntimeContext.getTaskName()).thenReturn(taskName)__		when(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup)__		when(mockedRuntimeContext.getNumberOfParallelSubtasks()).thenReturn(numberOfParallelSubtasks)__		when(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask)__		when(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber)__		when(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask)__		when(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig)__		when(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader)___		function.setRuntimeContext(mockedRuntimeContext)___		RuntimeContext runtimeContext = function.getRuntimeContext()___		assertEquals(taskName, runtimeContext.getTaskName())__		assertEquals(metricGroup, runtimeContext.getMetricGroup())__		assertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks())__		assertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask())__		assertEquals(attemptNumber, runtimeContext.getAttemptNumber())__		assertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks())__		assertEquals(executionConfig, runtimeContext.getExecutionConfig())__		assertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader())___		try {_			runtimeContext.getDistributedCache()__			fail("Expected getDistributedCached to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getState(new ValueStateDescriptor<>("foobar", Integer.class, 42))__			fail("Expected getState to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getListState(new ListStateDescriptor<>("foobar", Integer.class))__			fail("Expected getListState to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getReducingState(new ReducingStateDescriptor<>("foobar", new ReduceFunction<Integer>() {_				private static final long serialVersionUID = 2136425961884441050L___				@Override_				public Integer reduce(Integer value1, Integer value2) throws Exception {_					return value1__				}_			}, Integer.class))__			fail("Expected getReducingState to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}_		try {_			runtimeContext.getFoldingState(new FoldingStateDescriptor<>("foobar", 0, new FoldFunction<Integer, Integer>() {_				@Override_				public Integer fold(Integer accumulator, Integer value) throws Exception {_					return accumulator__				}_			}, Integer.class))__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getMapState(new MapStateDescriptor<>("foobar", Integer.class, String.class))__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.addAccumulator("foobar", new Accumulator<Integer, Integer>() {_				private static final long serialVersionUID = -4673320336846482358L___				@Override_				public void add(Integer value) {_					_				}__				@Override_				public Integer getLocalValue() {_					return null__				}__				@Override_				public void resetLocal() {__				}__				@Override_				public void merge(Accumulator<Integer, Integer> other) {__				}__				@Override_				public Accumulator<Integer, Integer> clone() {_					return null__				}_			})__			fail("Expected addAccumulator to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getAccumulator("foobar")__			fail("Expected getAccumulator to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getAllAccumulators()__			fail("Expected getAllAccumulators to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getIntCounter("foobar")__			fail("Expected getIntCounter to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getLongCounter("foobar")__			fail("Expected getLongCounter to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getDoubleCounter("foobar")__			fail("Expected getDoubleCounter to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getHistogram("foobar")__			fail("Expected getHistogram to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.hasBroadcastVariable("foobar")__			fail("Expected hasBroadcastVariable to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getBroadcastVariable("foobar")__			fail("Expected getBroadcastVariable to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getBroadcastVariableWithInitializer("foobar", new BroadcastVariableInitializer<Object, Object>() {_				@Override_				public Object initializeBroadcastVariable(Iterable<Object> data) {_					return null__				}_			})__			fail("Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}_	};test,the,set,of,runtime,context,methods,in,the,context,of,a,link,rich,async,function;test,public,void,test,runtime,context,throws,exception,rich,async,function,integer,integer,function,new,rich,async,function,integer,integer,private,static,final,long,serial,version,uid,1707630162838967972l,override,public,void,async,invoke,integer,input,async,collector,integer,collector,throws,exception,final,string,task,name,foobar,task,final,metric,group,metric,group,mock,metric,group,class,final,int,number,of,parallel,subtasks,42,final,int,index,of,subtask,43,final,int,attempt,number,1337,final,string,task,name,with,subtask,barfoo,final,execution,config,execution,config,mock,execution,config,class,final,class,loader,user,code,class,loader,mock,class,loader,class,runtime,context,mocked,runtime,context,mock,runtime,context,class,when,mocked,runtime,context,get,task,name,then,return,task,name,when,mocked,runtime,context,get,metric,group,then,return,metric,group,when,mocked,runtime,context,get,number,of,parallel,subtasks,then,return,number,of,parallel,subtasks,when,mocked,runtime,context,get,index,of,this,subtask,then,return,index,of,subtask,when,mocked,runtime,context,get,attempt,number,then,return,attempt,number,when,mocked,runtime,context,get,task,name,with,subtasks,then,return,task,name,with,subtask,when,mocked,runtime,context,get,execution,config,then,return,execution,config,when,mocked,runtime,context,get,user,code,class,loader,then,return,user,code,class,loader,function,set,runtime,context,mocked,runtime,context,runtime,context,runtime,context,function,get,runtime,context,assert,equals,task,name,runtime,context,get,task,name,assert,equals,metric,group,runtime,context,get,metric,group,assert,equals,number,of,parallel,subtasks,runtime,context,get,number,of,parallel,subtasks,assert,equals,index,of,subtask,runtime,context,get,index,of,this,subtask,assert,equals,attempt,number,runtime,context,get,attempt,number,assert,equals,task,name,with,subtask,runtime,context,get,task,name,with,subtasks,assert,equals,execution,config,runtime,context,get,execution,config,assert,equals,user,code,class,loader,runtime,context,get,user,code,class,loader,try,runtime,context,get,distributed,cache,fail,expected,get,distributed,cached,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,state,new,value,state,descriptor,foobar,integer,class,42,fail,expected,get,state,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,list,state,new,list,state,descriptor,foobar,integer,class,fail,expected,get,list,state,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,reducing,state,new,reducing,state,descriptor,foobar,new,reduce,function,integer,private,static,final,long,serial,version,uid,2136425961884441050l,override,public,integer,reduce,integer,value1,integer,value2,throws,exception,return,value1,integer,class,fail,expected,get,reducing,state,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,folding,state,new,folding,state,descriptor,foobar,0,new,fold,function,integer,integer,override,public,integer,fold,integer,accumulator,integer,value,throws,exception,return,accumulator,integer,class,catch,unsupported,operation,exception,e,try,runtime,context,get,map,state,new,map,state,descriptor,foobar,integer,class,string,class,catch,unsupported,operation,exception,e,try,runtime,context,add,accumulator,foobar,new,accumulator,integer,integer,private,static,final,long,serial,version,uid,4673320336846482358l,override,public,void,add,integer,value,override,public,integer,get,local,value,return,null,override,public,void,reset,local,override,public,void,merge,accumulator,integer,integer,other,override,public,accumulator,integer,integer,clone,return,null,fail,expected,add,accumulator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,accumulator,foobar,fail,expected,get,accumulator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,all,accumulators,fail,expected,get,all,accumulators,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,int,counter,foobar,fail,expected,get,int,counter,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,long,counter,foobar,fail,expected,get,long,counter,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,double,counter,foobar,fail,expected,get,double,counter,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,histogram,foobar,fail,expected,get,histogram,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,has,broadcast,variable,foobar,fail,expected,has,broadcast,variable,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,broadcast,variable,foobar,fail,expected,get,broadcast,variable,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,broadcast,variable,with,initializer,foobar,new,broadcast,variable,initializer,object,object,override,public,object,initialize,broadcast,variable,iterable,object,data,return,null,fail,expected,get,broadcast,variable,with,initializer,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e
RichAsyncFunctionTest -> @Test 	public void testRuntimeContext() throws Exception;1495484544;Test the set of runtime context methods in the context of a {@link RichAsyncFunction}.;@Test_	public void testRuntimeContext() throws Exception {_		RichAsyncFunction<Integer, Integer> function = new RichAsyncFunction<Integer, Integer>() {_			private static final long serialVersionUID = 1707630162838967972L___			@Override_			public void asyncInvoke(Integer input, AsyncCollector<Integer> collector) throws Exception {_				_			}_		}___		final String taskName = "foobarTask"__		final MetricGroup metricGroup = mock(MetricGroup.class)__		final int numberOfParallelSubtasks = 42__		final int indexOfSubtask = 43__		final int attemptNumber = 1337__		final String taskNameWithSubtask = "barfoo"__		final ExecutionConfig executionConfig = mock(ExecutionConfig.class)__		final ClassLoader userCodeClassLoader = mock(ClassLoader.class)___		RuntimeContext mockedRuntimeContext = mock(RuntimeContext.class)___		when(mockedRuntimeContext.getTaskName()).thenReturn(taskName)__		when(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup)__		when(mockedRuntimeContext.getNumberOfParallelSubtasks()).thenReturn(numberOfParallelSubtasks)__		when(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask)__		when(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber)__		when(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask)__		when(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig)__		when(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader)___		function.setRuntimeContext(mockedRuntimeContext)___		RuntimeContext runtimeContext = function.getRuntimeContext()___		assertEquals(taskName, runtimeContext.getTaskName())__		assertEquals(metricGroup, runtimeContext.getMetricGroup())__		assertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks())__		assertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask())__		assertEquals(attemptNumber, runtimeContext.getAttemptNumber())__		assertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks())__		assertEquals(executionConfig, runtimeContext.getExecutionConfig())__		assertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader())___		try {_			runtimeContext.getDistributedCache()__			fail("Expected getDistributedCached to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getState(new ValueStateDescriptor<>("foobar", Integer.class, 42))__			fail("Expected getState to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getListState(new ListStateDescriptor<>("foobar", Integer.class))__			fail("Expected getListState to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getReducingState(new ReducingStateDescriptor<>("foobar", new ReduceFunction<Integer>() {_				private static final long serialVersionUID = 2136425961884441050L___				@Override_				public Integer reduce(Integer value1, Integer value2) throws Exception {_					return value1__				}_			}, Integer.class))__			fail("Expected getReducingState to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}_		try {_			runtimeContext.getFoldingState(new FoldingStateDescriptor<>("foobar", 0, new FoldFunction<Integer, Integer>() {_				@Override_				public Integer fold(Integer accumulator, Integer value) throws Exception {_					return accumulator__				}_			}, Integer.class))__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getMapState(new MapStateDescriptor<>("foobar", Integer.class, String.class))__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.addAccumulator("foobar", new Accumulator<Integer, Integer>() {_				private static final long serialVersionUID = -4673320336846482358L___				@Override_				public void add(Integer value) {_					_				}__				@Override_				public Integer getLocalValue() {_					return null__				}__				@Override_				public void resetLocal() {__				}__				@Override_				public void merge(Accumulator<Integer, Integer> other) {__				}__				@Override_				public Accumulator<Integer, Integer> clone() {_					return null__				}_			})__			fail("Expected addAccumulator to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getAccumulator("foobar")__			fail("Expected getAccumulator to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getAllAccumulators()__			fail("Expected getAllAccumulators to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getIntCounter("foobar")__			fail("Expected getIntCounter to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getLongCounter("foobar")__			fail("Expected getLongCounter to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getDoubleCounter("foobar")__			fail("Expected getDoubleCounter to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getHistogram("foobar")__			fail("Expected getHistogram to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.hasBroadcastVariable("foobar")__			fail("Expected hasBroadcastVariable to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getBroadcastVariable("foobar")__			fail("Expected getBroadcastVariable to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getBroadcastVariableWithInitializer("foobar", new BroadcastVariableInitializer<Object, Object>() {_				@Override_				public Object initializeBroadcastVariable(Iterable<Object> data) {_					return null__				}_			})__			fail("Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}_	};test,the,set,of,runtime,context,methods,in,the,context,of,a,link,rich,async,function;test,public,void,test,runtime,context,throws,exception,rich,async,function,integer,integer,function,new,rich,async,function,integer,integer,private,static,final,long,serial,version,uid,1707630162838967972l,override,public,void,async,invoke,integer,input,async,collector,integer,collector,throws,exception,final,string,task,name,foobar,task,final,metric,group,metric,group,mock,metric,group,class,final,int,number,of,parallel,subtasks,42,final,int,index,of,subtask,43,final,int,attempt,number,1337,final,string,task,name,with,subtask,barfoo,final,execution,config,execution,config,mock,execution,config,class,final,class,loader,user,code,class,loader,mock,class,loader,class,runtime,context,mocked,runtime,context,mock,runtime,context,class,when,mocked,runtime,context,get,task,name,then,return,task,name,when,mocked,runtime,context,get,metric,group,then,return,metric,group,when,mocked,runtime,context,get,number,of,parallel,subtasks,then,return,number,of,parallel,subtasks,when,mocked,runtime,context,get,index,of,this,subtask,then,return,index,of,subtask,when,mocked,runtime,context,get,attempt,number,then,return,attempt,number,when,mocked,runtime,context,get,task,name,with,subtasks,then,return,task,name,with,subtask,when,mocked,runtime,context,get,execution,config,then,return,execution,config,when,mocked,runtime,context,get,user,code,class,loader,then,return,user,code,class,loader,function,set,runtime,context,mocked,runtime,context,runtime,context,runtime,context,function,get,runtime,context,assert,equals,task,name,runtime,context,get,task,name,assert,equals,metric,group,runtime,context,get,metric,group,assert,equals,number,of,parallel,subtasks,runtime,context,get,number,of,parallel,subtasks,assert,equals,index,of,subtask,runtime,context,get,index,of,this,subtask,assert,equals,attempt,number,runtime,context,get,attempt,number,assert,equals,task,name,with,subtask,runtime,context,get,task,name,with,subtasks,assert,equals,execution,config,runtime,context,get,execution,config,assert,equals,user,code,class,loader,runtime,context,get,user,code,class,loader,try,runtime,context,get,distributed,cache,fail,expected,get,distributed,cached,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,state,new,value,state,descriptor,foobar,integer,class,42,fail,expected,get,state,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,list,state,new,list,state,descriptor,foobar,integer,class,fail,expected,get,list,state,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,reducing,state,new,reducing,state,descriptor,foobar,new,reduce,function,integer,private,static,final,long,serial,version,uid,2136425961884441050l,override,public,integer,reduce,integer,value1,integer,value2,throws,exception,return,value1,integer,class,fail,expected,get,reducing,state,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,folding,state,new,folding,state,descriptor,foobar,0,new,fold,function,integer,integer,override,public,integer,fold,integer,accumulator,integer,value,throws,exception,return,accumulator,integer,class,catch,unsupported,operation,exception,e,try,runtime,context,get,map,state,new,map,state,descriptor,foobar,integer,class,string,class,catch,unsupported,operation,exception,e,try,runtime,context,add,accumulator,foobar,new,accumulator,integer,integer,private,static,final,long,serial,version,uid,4673320336846482358l,override,public,void,add,integer,value,override,public,integer,get,local,value,return,null,override,public,void,reset,local,override,public,void,merge,accumulator,integer,integer,other,override,public,accumulator,integer,integer,clone,return,null,fail,expected,add,accumulator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,accumulator,foobar,fail,expected,get,accumulator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,all,accumulators,fail,expected,get,all,accumulators,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,int,counter,foobar,fail,expected,get,int,counter,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,long,counter,foobar,fail,expected,get,long,counter,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,double,counter,foobar,fail,expected,get,double,counter,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,histogram,foobar,fail,expected,get,histogram,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,has,broadcast,variable,foobar,fail,expected,has,broadcast,variable,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,broadcast,variable,foobar,fail,expected,get,broadcast,variable,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,broadcast,variable,with,initializer,foobar,new,broadcast,variable,initializer,object,object,override,public,object,initialize,broadcast,variable,iterable,object,data,return,null,fail,expected,get,broadcast,variable,with,initializer,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e
RichAsyncFunctionTest -> @Test 	public void testRuntimeContext() throws Exception;1503407113;Test the set of runtime context methods in the context of a {@link RichAsyncFunction}.;@Test_	public void testRuntimeContext() throws Exception {_		RichAsyncFunction<Integer, Integer> function = new RichAsyncFunction<Integer, Integer>() {_			private static final long serialVersionUID = 1707630162838967972L___			@Override_			public void asyncInvoke(Integer input, ResultFuture<Integer> resultFuture) throws Exception {_				_			}_		}___		final String taskName = "foobarTask"__		final MetricGroup metricGroup = mock(MetricGroup.class)__		final int numberOfParallelSubtasks = 42__		final int indexOfSubtask = 43__		final int attemptNumber = 1337__		final String taskNameWithSubtask = "barfoo"__		final ExecutionConfig executionConfig = mock(ExecutionConfig.class)__		final ClassLoader userCodeClassLoader = mock(ClassLoader.class)___		RuntimeContext mockedRuntimeContext = mock(RuntimeContext.class)___		when(mockedRuntimeContext.getTaskName()).thenReturn(taskName)__		when(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup)__		when(mockedRuntimeContext.getNumberOfParallelSubtasks()).thenReturn(numberOfParallelSubtasks)__		when(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask)__		when(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber)__		when(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask)__		when(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig)__		when(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader)___		function.setRuntimeContext(mockedRuntimeContext)___		RuntimeContext runtimeContext = function.getRuntimeContext()___		assertEquals(taskName, runtimeContext.getTaskName())__		assertEquals(metricGroup, runtimeContext.getMetricGroup())__		assertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks())__		assertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask())__		assertEquals(attemptNumber, runtimeContext.getAttemptNumber())__		assertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks())__		assertEquals(executionConfig, runtimeContext.getExecutionConfig())__		assertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader())___		try {_			runtimeContext.getDistributedCache()__			fail("Expected getDistributedCached to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getState(new ValueStateDescriptor<>("foobar", Integer.class, 42))__			fail("Expected getState to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getListState(new ListStateDescriptor<>("foobar", Integer.class))__			fail("Expected getListState to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getReducingState(new ReducingStateDescriptor<>("foobar", new ReduceFunction<Integer>() {_				private static final long serialVersionUID = 2136425961884441050L___				@Override_				public Integer reduce(Integer value1, Integer value2) throws Exception {_					return value1__				}_			}, Integer.class))__			fail("Expected getReducingState to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}_		try {_			runtimeContext.getFoldingState(new FoldingStateDescriptor<>("foobar", 0, new FoldFunction<Integer, Integer>() {_				@Override_				public Integer fold(Integer accumulator, Integer value) throws Exception {_					return accumulator__				}_			}, Integer.class))__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getMapState(new MapStateDescriptor<>("foobar", Integer.class, String.class))__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.addAccumulator("foobar", new Accumulator<Integer, Integer>() {_				private static final long serialVersionUID = -4673320336846482358L___				@Override_				public void add(Integer value) {_					_				}__				@Override_				public Integer getLocalValue() {_					return null__				}__				@Override_				public void resetLocal() {__				}__				@Override_				public void merge(Accumulator<Integer, Integer> other) {__				}__				@Override_				public Accumulator<Integer, Integer> clone() {_					return null__				}_			})__			fail("Expected addAccumulator to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getAccumulator("foobar")__			fail("Expected getAccumulator to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getAllAccumulators()__			fail("Expected getAllAccumulators to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getIntCounter("foobar")__			fail("Expected getIntCounter to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getLongCounter("foobar")__			fail("Expected getLongCounter to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getDoubleCounter("foobar")__			fail("Expected getDoubleCounter to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getHistogram("foobar")__			fail("Expected getHistogram to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.hasBroadcastVariable("foobar")__			fail("Expected hasBroadcastVariable to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getBroadcastVariable("foobar")__			fail("Expected getBroadcastVariable to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getBroadcastVariableWithInitializer("foobar", new BroadcastVariableInitializer<Object, Object>() {_				@Override_				public Object initializeBroadcastVariable(Iterable<Object> data) {_					return null__				}_			})__			fail("Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}_	};test,the,set,of,runtime,context,methods,in,the,context,of,a,link,rich,async,function;test,public,void,test,runtime,context,throws,exception,rich,async,function,integer,integer,function,new,rich,async,function,integer,integer,private,static,final,long,serial,version,uid,1707630162838967972l,override,public,void,async,invoke,integer,input,result,future,integer,result,future,throws,exception,final,string,task,name,foobar,task,final,metric,group,metric,group,mock,metric,group,class,final,int,number,of,parallel,subtasks,42,final,int,index,of,subtask,43,final,int,attempt,number,1337,final,string,task,name,with,subtask,barfoo,final,execution,config,execution,config,mock,execution,config,class,final,class,loader,user,code,class,loader,mock,class,loader,class,runtime,context,mocked,runtime,context,mock,runtime,context,class,when,mocked,runtime,context,get,task,name,then,return,task,name,when,mocked,runtime,context,get,metric,group,then,return,metric,group,when,mocked,runtime,context,get,number,of,parallel,subtasks,then,return,number,of,parallel,subtasks,when,mocked,runtime,context,get,index,of,this,subtask,then,return,index,of,subtask,when,mocked,runtime,context,get,attempt,number,then,return,attempt,number,when,mocked,runtime,context,get,task,name,with,subtasks,then,return,task,name,with,subtask,when,mocked,runtime,context,get,execution,config,then,return,execution,config,when,mocked,runtime,context,get,user,code,class,loader,then,return,user,code,class,loader,function,set,runtime,context,mocked,runtime,context,runtime,context,runtime,context,function,get,runtime,context,assert,equals,task,name,runtime,context,get,task,name,assert,equals,metric,group,runtime,context,get,metric,group,assert,equals,number,of,parallel,subtasks,runtime,context,get,number,of,parallel,subtasks,assert,equals,index,of,subtask,runtime,context,get,index,of,this,subtask,assert,equals,attempt,number,runtime,context,get,attempt,number,assert,equals,task,name,with,subtask,runtime,context,get,task,name,with,subtasks,assert,equals,execution,config,runtime,context,get,execution,config,assert,equals,user,code,class,loader,runtime,context,get,user,code,class,loader,try,runtime,context,get,distributed,cache,fail,expected,get,distributed,cached,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,state,new,value,state,descriptor,foobar,integer,class,42,fail,expected,get,state,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,list,state,new,list,state,descriptor,foobar,integer,class,fail,expected,get,list,state,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,reducing,state,new,reducing,state,descriptor,foobar,new,reduce,function,integer,private,static,final,long,serial,version,uid,2136425961884441050l,override,public,integer,reduce,integer,value1,integer,value2,throws,exception,return,value1,integer,class,fail,expected,get,reducing,state,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,folding,state,new,folding,state,descriptor,foobar,0,new,fold,function,integer,integer,override,public,integer,fold,integer,accumulator,integer,value,throws,exception,return,accumulator,integer,class,catch,unsupported,operation,exception,e,try,runtime,context,get,map,state,new,map,state,descriptor,foobar,integer,class,string,class,catch,unsupported,operation,exception,e,try,runtime,context,add,accumulator,foobar,new,accumulator,integer,integer,private,static,final,long,serial,version,uid,4673320336846482358l,override,public,void,add,integer,value,override,public,integer,get,local,value,return,null,override,public,void,reset,local,override,public,void,merge,accumulator,integer,integer,other,override,public,accumulator,integer,integer,clone,return,null,fail,expected,add,accumulator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,accumulator,foobar,fail,expected,get,accumulator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,all,accumulators,fail,expected,get,all,accumulators,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,int,counter,foobar,fail,expected,get,int,counter,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,long,counter,foobar,fail,expected,get,long,counter,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,double,counter,foobar,fail,expected,get,double,counter,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,histogram,foobar,fail,expected,get,histogram,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,has,broadcast,variable,foobar,fail,expected,has,broadcast,variable,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,broadcast,variable,foobar,fail,expected,get,broadcast,variable,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,broadcast,variable,with,initializer,foobar,new,broadcast,variable,initializer,object,object,override,public,object,initialize,broadcast,variable,iterable,object,data,return,null,fail,expected,get,broadcast,variable,with,initializer,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e
RichAsyncFunctionTest -> @Test 	public void testRuntimeContext() throws Exception;1509016418;Test the set of runtime context methods in the context of a {@link RichAsyncFunction}.;@Test_	public void testRuntimeContext() throws Exception {_		RichAsyncFunction<Integer, Integer> function = new RichAsyncFunction<Integer, Integer>() {_			private static final long serialVersionUID = 1707630162838967972L___			@Override_			public void asyncInvoke(Integer input, ResultFuture<Integer> resultFuture) throws Exception {_				_			}_		}___		final String taskName = "foobarTask"__		final MetricGroup metricGroup = mock(MetricGroup.class)__		final int numberOfParallelSubtasks = 42__		final int indexOfSubtask = 43__		final int attemptNumber = 1337__		final String taskNameWithSubtask = "barfoo"__		final ExecutionConfig executionConfig = mock(ExecutionConfig.class)__		final ClassLoader userCodeClassLoader = mock(ClassLoader.class)___		RuntimeContext mockedRuntimeContext = mock(RuntimeContext.class)___		when(mockedRuntimeContext.getTaskName()).thenReturn(taskName)__		when(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup)__		when(mockedRuntimeContext.getNumberOfParallelSubtasks()).thenReturn(numberOfParallelSubtasks)__		when(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask)__		when(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber)__		when(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask)__		when(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig)__		when(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader)___		function.setRuntimeContext(mockedRuntimeContext)___		RuntimeContext runtimeContext = function.getRuntimeContext()___		assertEquals(taskName, runtimeContext.getTaskName())__		assertEquals(metricGroup, runtimeContext.getMetricGroup())__		assertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks())__		assertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask())__		assertEquals(attemptNumber, runtimeContext.getAttemptNumber())__		assertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks())__		assertEquals(executionConfig, runtimeContext.getExecutionConfig())__		assertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader())___		try {_			runtimeContext.getDistributedCache()__			fail("Expected getDistributedCached to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getState(new ValueStateDescriptor<>("foobar", Integer.class, 42))__			fail("Expected getState to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getListState(new ListStateDescriptor<>("foobar", Integer.class))__			fail("Expected getListState to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getReducingState(new ReducingStateDescriptor<>("foobar", new ReduceFunction<Integer>() {_				private static final long serialVersionUID = 2136425961884441050L___				@Override_				public Integer reduce(Integer value1, Integer value2) throws Exception {_					return value1__				}_			}, Integer.class))__			fail("Expected getReducingState to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getAggregatingState(new AggregatingStateDescriptor<>("foobar", new AggregateFunction<Integer, Integer, Integer>() {__				@Override_				public Integer createAccumulator() {_					return null__				}__				@Override_				public Integer add(Integer value, Integer accumulator) {_					return null__				}__				@Override_				public Integer getResult(Integer accumulator) {_					return null__				}__				@Override_				public Integer merge(Integer a, Integer b) {_					return null__				}_			}, Integer.class))__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getFoldingState(new FoldingStateDescriptor<>("foobar", 0, new FoldFunction<Integer, Integer>() {_				@Override_				public Integer fold(Integer accumulator, Integer value) throws Exception {_					return accumulator__				}_			}, Integer.class))__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getMapState(new MapStateDescriptor<>("foobar", Integer.class, String.class))__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.addAccumulator("foobar", new Accumulator<Integer, Integer>() {_				private static final long serialVersionUID = -4673320336846482358L___				@Override_				public void add(Integer value) {_					_				}__				@Override_				public Integer getLocalValue() {_					return null__				}__				@Override_				public void resetLocal() {__				}__				@Override_				public void merge(Accumulator<Integer, Integer> other) {__				}__				@Override_				public Accumulator<Integer, Integer> clone() {_					return null__				}_			})__			fail("Expected addAccumulator to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getAccumulator("foobar")__			fail("Expected getAccumulator to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getAllAccumulators()__			fail("Expected getAllAccumulators to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getIntCounter("foobar")__			fail("Expected getIntCounter to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getLongCounter("foobar")__			fail("Expected getLongCounter to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getDoubleCounter("foobar")__			fail("Expected getDoubleCounter to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getHistogram("foobar")__			fail("Expected getHistogram to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.hasBroadcastVariable("foobar")__			fail("Expected hasBroadcastVariable to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getBroadcastVariable("foobar")__			fail("Expected getBroadcastVariable to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getBroadcastVariableWithInitializer("foobar", new BroadcastVariableInitializer<Object, Object>() {_				@Override_				public Object initializeBroadcastVariable(Iterable<Object> data) {_					return null__				}_			})__			fail("Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}_	};test,the,set,of,runtime,context,methods,in,the,context,of,a,link,rich,async,function;test,public,void,test,runtime,context,throws,exception,rich,async,function,integer,integer,function,new,rich,async,function,integer,integer,private,static,final,long,serial,version,uid,1707630162838967972l,override,public,void,async,invoke,integer,input,result,future,integer,result,future,throws,exception,final,string,task,name,foobar,task,final,metric,group,metric,group,mock,metric,group,class,final,int,number,of,parallel,subtasks,42,final,int,index,of,subtask,43,final,int,attempt,number,1337,final,string,task,name,with,subtask,barfoo,final,execution,config,execution,config,mock,execution,config,class,final,class,loader,user,code,class,loader,mock,class,loader,class,runtime,context,mocked,runtime,context,mock,runtime,context,class,when,mocked,runtime,context,get,task,name,then,return,task,name,when,mocked,runtime,context,get,metric,group,then,return,metric,group,when,mocked,runtime,context,get,number,of,parallel,subtasks,then,return,number,of,parallel,subtasks,when,mocked,runtime,context,get,index,of,this,subtask,then,return,index,of,subtask,when,mocked,runtime,context,get,attempt,number,then,return,attempt,number,when,mocked,runtime,context,get,task,name,with,subtasks,then,return,task,name,with,subtask,when,mocked,runtime,context,get,execution,config,then,return,execution,config,when,mocked,runtime,context,get,user,code,class,loader,then,return,user,code,class,loader,function,set,runtime,context,mocked,runtime,context,runtime,context,runtime,context,function,get,runtime,context,assert,equals,task,name,runtime,context,get,task,name,assert,equals,metric,group,runtime,context,get,metric,group,assert,equals,number,of,parallel,subtasks,runtime,context,get,number,of,parallel,subtasks,assert,equals,index,of,subtask,runtime,context,get,index,of,this,subtask,assert,equals,attempt,number,runtime,context,get,attempt,number,assert,equals,task,name,with,subtask,runtime,context,get,task,name,with,subtasks,assert,equals,execution,config,runtime,context,get,execution,config,assert,equals,user,code,class,loader,runtime,context,get,user,code,class,loader,try,runtime,context,get,distributed,cache,fail,expected,get,distributed,cached,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,state,new,value,state,descriptor,foobar,integer,class,42,fail,expected,get,state,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,list,state,new,list,state,descriptor,foobar,integer,class,fail,expected,get,list,state,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,reducing,state,new,reducing,state,descriptor,foobar,new,reduce,function,integer,private,static,final,long,serial,version,uid,2136425961884441050l,override,public,integer,reduce,integer,value1,integer,value2,throws,exception,return,value1,integer,class,fail,expected,get,reducing,state,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,aggregating,state,new,aggregating,state,descriptor,foobar,new,aggregate,function,integer,integer,integer,override,public,integer,create,accumulator,return,null,override,public,integer,add,integer,value,integer,accumulator,return,null,override,public,integer,get,result,integer,accumulator,return,null,override,public,integer,merge,integer,a,integer,b,return,null,integer,class,catch,unsupported,operation,exception,e,try,runtime,context,get,folding,state,new,folding,state,descriptor,foobar,0,new,fold,function,integer,integer,override,public,integer,fold,integer,accumulator,integer,value,throws,exception,return,accumulator,integer,class,catch,unsupported,operation,exception,e,try,runtime,context,get,map,state,new,map,state,descriptor,foobar,integer,class,string,class,catch,unsupported,operation,exception,e,try,runtime,context,add,accumulator,foobar,new,accumulator,integer,integer,private,static,final,long,serial,version,uid,4673320336846482358l,override,public,void,add,integer,value,override,public,integer,get,local,value,return,null,override,public,void,reset,local,override,public,void,merge,accumulator,integer,integer,other,override,public,accumulator,integer,integer,clone,return,null,fail,expected,add,accumulator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,accumulator,foobar,fail,expected,get,accumulator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,all,accumulators,fail,expected,get,all,accumulators,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,int,counter,foobar,fail,expected,get,int,counter,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,long,counter,foobar,fail,expected,get,long,counter,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,double,counter,foobar,fail,expected,get,double,counter,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,histogram,foobar,fail,expected,get,histogram,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,has,broadcast,variable,foobar,fail,expected,has,broadcast,variable,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,broadcast,variable,foobar,fail,expected,get,broadcast,variable,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,broadcast,variable,with,initializer,foobar,new,broadcast,variable,initializer,object,object,override,public,object,initialize,broadcast,variable,iterable,object,data,return,null,fail,expected,get,broadcast,variable,with,initializer,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e
RichAsyncFunctionTest -> @Test 	public void testRuntimeContext() throws Exception;1513102156;Test the set of runtime context methods in the context of a {@link RichAsyncFunction}.;@Test_	public void testRuntimeContext() throws Exception {_		RichAsyncFunction<Integer, Integer> function = new RichAsyncFunction<Integer, Integer>() {_			private static final long serialVersionUID = 1707630162838967972L___			@Override_			public void asyncInvoke(Integer input, ResultFuture<Integer> resultFuture) throws Exception {_				_			}_		}___		final String taskName = "foobarTask"__		final MetricGroup metricGroup = new UnregisteredMetricsGroup()__		final int numberOfParallelSubtasks = 42__		final int indexOfSubtask = 43__		final int attemptNumber = 1337__		final String taskNameWithSubtask = "barfoo"__		final ExecutionConfig executionConfig = mock(ExecutionConfig.class)__		final ClassLoader userCodeClassLoader = mock(ClassLoader.class)___		RuntimeContext mockedRuntimeContext = mock(RuntimeContext.class)___		when(mockedRuntimeContext.getTaskName()).thenReturn(taskName)__		when(mockedRuntimeContext.getMetricGroup()).thenReturn(metricGroup)__		when(mockedRuntimeContext.getNumberOfParallelSubtasks()).thenReturn(numberOfParallelSubtasks)__		when(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(indexOfSubtask)__		when(mockedRuntimeContext.getAttemptNumber()).thenReturn(attemptNumber)__		when(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn(taskNameWithSubtask)__		when(mockedRuntimeContext.getExecutionConfig()).thenReturn(executionConfig)__		when(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(userCodeClassLoader)___		function.setRuntimeContext(mockedRuntimeContext)___		RuntimeContext runtimeContext = function.getRuntimeContext()___		assertEquals(taskName, runtimeContext.getTaskName())__		assertEquals(metricGroup, runtimeContext.getMetricGroup())__		assertEquals(numberOfParallelSubtasks, runtimeContext.getNumberOfParallelSubtasks())__		assertEquals(indexOfSubtask, runtimeContext.getIndexOfThisSubtask())__		assertEquals(attemptNumber, runtimeContext.getAttemptNumber())__		assertEquals(taskNameWithSubtask, runtimeContext.getTaskNameWithSubtasks())__		assertEquals(executionConfig, runtimeContext.getExecutionConfig())__		assertEquals(userCodeClassLoader, runtimeContext.getUserCodeClassLoader())___		try {_			runtimeContext.getDistributedCache()__			fail("Expected getDistributedCached to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getState(new ValueStateDescriptor<>("foobar", Integer.class, 42))__			fail("Expected getState to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getListState(new ListStateDescriptor<>("foobar", Integer.class))__			fail("Expected getListState to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getReducingState(new ReducingStateDescriptor<>("foobar", new ReduceFunction<Integer>() {_				private static final long serialVersionUID = 2136425961884441050L___				@Override_				public Integer reduce(Integer value1, Integer value2) throws Exception {_					return value1__				}_			}, Integer.class))__			fail("Expected getReducingState to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getAggregatingState(new AggregatingStateDescriptor<>("foobar", new AggregateFunction<Integer, Integer, Integer>() {__				@Override_				public Integer createAccumulator() {_					return null__				}__				@Override_				public Integer add(Integer value, Integer accumulator) {_					return null__				}__				@Override_				public Integer getResult(Integer accumulator) {_					return null__				}__				@Override_				public Integer merge(Integer a, Integer b) {_					return null__				}_			}, Integer.class))__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getFoldingState(new FoldingStateDescriptor<>("foobar", 0, new FoldFunction<Integer, Integer>() {_				@Override_				public Integer fold(Integer accumulator, Integer value) throws Exception {_					return accumulator__				}_			}, Integer.class))__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getMapState(new MapStateDescriptor<>("foobar", Integer.class, String.class))__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.addAccumulator("foobar", new Accumulator<Integer, Integer>() {_				private static final long serialVersionUID = -4673320336846482358L___				@Override_				public void add(Integer value) {_					_				}__				@Override_				public Integer getLocalValue() {_					return null__				}__				@Override_				public void resetLocal() {__				}__				@Override_				public void merge(Accumulator<Integer, Integer> other) {__				}__				@Override_				public Accumulator<Integer, Integer> clone() {_					return null__				}_			})__			fail("Expected addAccumulator to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getAccumulator("foobar")__			fail("Expected getAccumulator to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getAllAccumulators()__			fail("Expected getAllAccumulators to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getIntCounter("foobar")__			fail("Expected getIntCounter to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getLongCounter("foobar")__			fail("Expected getLongCounter to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getDoubleCounter("foobar")__			fail("Expected getDoubleCounter to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getHistogram("foobar")__			fail("Expected getHistogram to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.hasBroadcastVariable("foobar")__			fail("Expected hasBroadcastVariable to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getBroadcastVariable("foobar")__			fail("Expected getBroadcastVariable to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}__		try {_			runtimeContext.getBroadcastVariableWithInitializer("foobar", new BroadcastVariableInitializer<Object, Object>() {_				@Override_				public Object initializeBroadcastVariable(Iterable<Object> data) {_					return null__				}_			})__			fail("Expected getBroadcastVariableWithInitializer to fail with unsupported operation exception.")__		} catch (UnsupportedOperationException e) {_			_		}_	};test,the,set,of,runtime,context,methods,in,the,context,of,a,link,rich,async,function;test,public,void,test,runtime,context,throws,exception,rich,async,function,integer,integer,function,new,rich,async,function,integer,integer,private,static,final,long,serial,version,uid,1707630162838967972l,override,public,void,async,invoke,integer,input,result,future,integer,result,future,throws,exception,final,string,task,name,foobar,task,final,metric,group,metric,group,new,unregistered,metrics,group,final,int,number,of,parallel,subtasks,42,final,int,index,of,subtask,43,final,int,attempt,number,1337,final,string,task,name,with,subtask,barfoo,final,execution,config,execution,config,mock,execution,config,class,final,class,loader,user,code,class,loader,mock,class,loader,class,runtime,context,mocked,runtime,context,mock,runtime,context,class,when,mocked,runtime,context,get,task,name,then,return,task,name,when,mocked,runtime,context,get,metric,group,then,return,metric,group,when,mocked,runtime,context,get,number,of,parallel,subtasks,then,return,number,of,parallel,subtasks,when,mocked,runtime,context,get,index,of,this,subtask,then,return,index,of,subtask,when,mocked,runtime,context,get,attempt,number,then,return,attempt,number,when,mocked,runtime,context,get,task,name,with,subtasks,then,return,task,name,with,subtask,when,mocked,runtime,context,get,execution,config,then,return,execution,config,when,mocked,runtime,context,get,user,code,class,loader,then,return,user,code,class,loader,function,set,runtime,context,mocked,runtime,context,runtime,context,runtime,context,function,get,runtime,context,assert,equals,task,name,runtime,context,get,task,name,assert,equals,metric,group,runtime,context,get,metric,group,assert,equals,number,of,parallel,subtasks,runtime,context,get,number,of,parallel,subtasks,assert,equals,index,of,subtask,runtime,context,get,index,of,this,subtask,assert,equals,attempt,number,runtime,context,get,attempt,number,assert,equals,task,name,with,subtask,runtime,context,get,task,name,with,subtasks,assert,equals,execution,config,runtime,context,get,execution,config,assert,equals,user,code,class,loader,runtime,context,get,user,code,class,loader,try,runtime,context,get,distributed,cache,fail,expected,get,distributed,cached,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,state,new,value,state,descriptor,foobar,integer,class,42,fail,expected,get,state,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,list,state,new,list,state,descriptor,foobar,integer,class,fail,expected,get,list,state,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,reducing,state,new,reducing,state,descriptor,foobar,new,reduce,function,integer,private,static,final,long,serial,version,uid,2136425961884441050l,override,public,integer,reduce,integer,value1,integer,value2,throws,exception,return,value1,integer,class,fail,expected,get,reducing,state,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,aggregating,state,new,aggregating,state,descriptor,foobar,new,aggregate,function,integer,integer,integer,override,public,integer,create,accumulator,return,null,override,public,integer,add,integer,value,integer,accumulator,return,null,override,public,integer,get,result,integer,accumulator,return,null,override,public,integer,merge,integer,a,integer,b,return,null,integer,class,catch,unsupported,operation,exception,e,try,runtime,context,get,folding,state,new,folding,state,descriptor,foobar,0,new,fold,function,integer,integer,override,public,integer,fold,integer,accumulator,integer,value,throws,exception,return,accumulator,integer,class,catch,unsupported,operation,exception,e,try,runtime,context,get,map,state,new,map,state,descriptor,foobar,integer,class,string,class,catch,unsupported,operation,exception,e,try,runtime,context,add,accumulator,foobar,new,accumulator,integer,integer,private,static,final,long,serial,version,uid,4673320336846482358l,override,public,void,add,integer,value,override,public,integer,get,local,value,return,null,override,public,void,reset,local,override,public,void,merge,accumulator,integer,integer,other,override,public,accumulator,integer,integer,clone,return,null,fail,expected,add,accumulator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,accumulator,foobar,fail,expected,get,accumulator,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,all,accumulators,fail,expected,get,all,accumulators,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,int,counter,foobar,fail,expected,get,int,counter,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,long,counter,foobar,fail,expected,get,long,counter,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,double,counter,foobar,fail,expected,get,double,counter,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,histogram,foobar,fail,expected,get,histogram,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,has,broadcast,variable,foobar,fail,expected,has,broadcast,variable,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,broadcast,variable,foobar,fail,expected,get,broadcast,variable,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e,try,runtime,context,get,broadcast,variable,with,initializer,foobar,new,broadcast,variable,initializer,object,object,override,public,object,initialize,broadcast,variable,iterable,object,data,return,null,fail,expected,get,broadcast,variable,with,initializer,to,fail,with,unsupported,operation,exception,catch,unsupported,operation,exception,e
