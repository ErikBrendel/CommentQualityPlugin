commented;modifiers;parameterAmount;loc;comment;code
false;public;1;13;;@Override public void collect(T element) {     target.add(element).     if (delay > 0) {         try {             Thread.sleep(delay).         } catch (InterruptedException e) {         // ignore         }     } }
false;public;2;4;;@Override public void collectWithTimestamp(T element, long timestamp) {     target.add(element). }
false;public;1;4;;@Override public void emitWatermark(Watermark mark) {     throw new UnsupportedOperationException(). }
false;public;0;4;;@Override public void markAsTemporarilyIdle() {     throw new UnsupportedOperationException(). }
false;public;0;4;;@Override public Object getCheckpointLock() {     return lock. }
false;public;0;4;;@Override public void close() { }
