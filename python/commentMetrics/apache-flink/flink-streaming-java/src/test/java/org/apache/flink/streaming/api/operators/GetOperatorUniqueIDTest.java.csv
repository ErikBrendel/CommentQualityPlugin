commented;modifiers;parameterAmount;loc;comment;code
true;public;0;10;/**  * If expected values ever change double check that the change is not braking the contract of  * {@link StreamingRuntimeContext#getOperatorUniqueID()} being stable between job submissions.  */ ;/**  * If expected values ever change double check that the change is not braking the contract of  * {@link StreamingRuntimeContext#getOperatorUniqueID()} being stable between job submissions.  */ @Test public void testGetOperatorUniqueID() throws Exception {     StreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment().     env.fromElements(1, 2, 3).map(new VerifyOperatorIDMapFunction("6c4f323f22da8fb6e34f80c61be7a689")).uid("42").map(new VerifyOperatorIDMapFunction("3e129e83691e7737fbf876b47452acbc")).uid("44").     env.execute(). }
false;public;1;6;;@Override public void open(Configuration parameters) throws Exception {     super.open(parameters).     assertEquals(expectedOperatorUniqueID, ((StreamingRuntimeContext) getRuntimeContext()).getOperatorUniqueID()). }
false;public;1;4;;@Override public Integer map(Integer value) throws Exception {     return value. }
