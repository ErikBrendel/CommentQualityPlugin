commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;3;;protected StreamNetworkThroughputBenchmark createBenchmark() {     return new StreamNetworkThroughputBenchmark(). }
false;public;0;11;;@Test public void pointToPointBenchmark() throws Exception {     StreamNetworkThroughputBenchmark benchmark = createBenchmark().     benchmark.setUp(1, 1, 100).     try {         benchmark.executeBenchmark(1_000).     } finally {         benchmark.tearDown().     } }
false;public;0;7;;@Test public void largeLocalMode() throws Exception {     StreamNetworkThroughputBenchmark env = new StreamNetworkThroughputBenchmark().     env.setUp(4, 10, 100, true).     env.executeBenchmark(10_000_000).     env.tearDown(). }
false;public;0;7;;@Test public void largeRemoteMode() throws Exception {     StreamNetworkThroughputBenchmark env = new StreamNetworkThroughputBenchmark().     env.setUp(4, 10, 100, false).     env.executeBenchmark(10_000_000).     env.tearDown(). }
false;public;0;7;;@Test public void largeRemoteAlwaysFlush() throws Exception {     StreamNetworkThroughputBenchmark env = new StreamNetworkThroughputBenchmark().     env.setUp(1, 1, 0, false).     env.executeBenchmark(1_000_000).     env.tearDown(). }
false;public;0;11;;@Test public void remoteModeInsufficientBuffersSender() throws Exception {     StreamNetworkThroughputBenchmark env = new StreamNetworkThroughputBenchmark().     int writers = 2.     int channels = 2.     expectedException.expect(IOException.class).     expectedException.expectMessage("Insufficient number of network buffers").     env.setUp(writers, channels, 100, false, writers * channels - 1, writers * channels * TaskManagerOptions.NETWORK_BUFFERS_PER_CHANNEL.defaultValue()). }
false;public;0;11;;@Test public void remoteModeInsufficientBuffersReceiver() throws Exception {     StreamNetworkThroughputBenchmark env = new StreamNetworkThroughputBenchmark().     int writers = 2.     int channels = 2.     expectedException.expect(IOException.class).     expectedException.expectMessage("Insufficient number of network buffers").     env.setUp(writers, channels, 100, false, writers * channels, writers * channels * TaskManagerOptions.NETWORK_BUFFERS_PER_CHANNEL.defaultValue() - 1). }
false;public;0;11;;@Test public void remoteModeMinimumBuffers() throws Exception {     StreamNetworkThroughputBenchmark env = new StreamNetworkThroughputBenchmark().     int writers = 2.     int channels = 2.     env.setUp(writers, channels, 100, false, writers * channels, writers * channels * TaskManagerOptions.NETWORK_BUFFERS_PER_CHANNEL.defaultValue()).     env.executeBenchmark(10_000).     env.tearDown(). }
false;public;0;11;;@Test public void pointToMultiPointBenchmark() throws Exception {     StreamNetworkThroughputBenchmark benchmark = createBenchmark().     benchmark.setUp(1, 100, 100).     try {         benchmark.executeBenchmark(1_000).     } finally {         benchmark.tearDown().     } }
false;public;0;11;;@Test public void multiPointToPointBenchmark() throws Exception {     StreamNetworkThroughputBenchmark benchmark = createBenchmark().     benchmark.setUp(4, 1, 100).     try {         benchmark.executeBenchmark(1_000).     } finally {         benchmark.tearDown().     } }
false;public;0;11;;@Test public void multiPointToMultiPointBenchmark() throws Exception {     StreamNetworkThroughputBenchmark benchmark = createBenchmark().     benchmark.setUp(4, 100, 100).     try {         benchmark.executeBenchmark(1_000).     } finally {         benchmark.tearDown().     } }
