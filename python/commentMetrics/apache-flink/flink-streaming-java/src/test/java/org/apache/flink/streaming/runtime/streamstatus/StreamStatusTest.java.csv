commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Test(expected = IllegalArgumentException.class) public void testIllegalCreationThrowsException() {     new StreamStatus(32). }
false;public;0;13;;@Test public void testEquals() {     StreamStatus idleStatus = new StreamStatus(StreamStatus.IDLE_STATUS).     StreamStatus activeStatus = new StreamStatus(StreamStatus.ACTIVE_STATUS).     assertEquals(StreamStatus.IDLE, idleStatus).     assertTrue(idleStatus.isIdle()).     assertFalse(idleStatus.isActive()).     assertEquals(StreamStatus.ACTIVE, activeStatus).     assertTrue(activeStatus.isActive()).     assertFalse(activeStatus.isIdle()). }
false;public;0;30;;@Test public void testTypeCasting() {     StreamStatus status = StreamStatus.ACTIVE.     assertTrue(status.isStreamStatus()).     assertFalse(status.isRecord()).     assertFalse(status.isWatermark()).     assertFalse(status.isLatencyMarker()).     try {         status.asWatermark().         fail("should throw an exception").     } catch (Exception e) {     // expected     }     try {         status.asRecord().         fail("should throw an exception").     } catch (Exception e) {     // expected     }     try {         status.asLatencyMarker().         fail("should throw an exception").     } catch (Exception e) {     // expected     } }
