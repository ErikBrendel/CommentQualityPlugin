# id;timestamp;commentText;codeText;commentWords;codeWords
StreamSourceContextIdleDetectionTests -> @Test 	public void testAutomaticWatermarkContext() throws Exception;1487783998;Test scenario (idleTimeout = 100, watermarkInterval = 40):_(1) Start from 20 as initial time._(2) As soon as time reaches 120, status should have been toggled to IDLE._(3) After some arbitrary time (until 320), the status should remain IDLE, and no watermarks should have been emitted._(4) Emit a record at 330. Status should become ACTIVE. This should schedule a idleness detection to be fired at 430._(5) Emit another record at 350 (which is before the next check). This should make the idleness check pass._(6) Advance time to 430 and trigger idleness detection. The status should still be ACTIVE due to step (5)._This should schedule a idleness detection to be fired at 530._(7) Advance time to 460, in which a watermark emission task should be fired. Idleness detection_should have been "piggy-backed" in the task, allowing the status to be toggled to IDLE before the next_actual idle detection task at 530.__Inline comments will refer to the corresponding tested steps in the scenario.;@Test_	public void testAutomaticWatermarkContext() throws Exception {_		long watermarkInterval = 40__		long idleTimeout = 100__		long initialTime = 20___		TestProcessingTimeService processingTimeService = new TestProcessingTimeService()__		processingTimeService.setCurrentTime(initialTime)___		MockStreamStatusMaintainer mockStreamStatusMaintainer = new MockStreamStatusMaintainer()___		final List<StreamElement> output = new ArrayList<>()__		final List<StreamElement> expectedOutput = new ArrayList<>()___		SourceFunction.SourceContext<String> context = StreamSourceContexts.getSourceContext(_			TimeCharacteristic.IngestionTime,_			processingTimeService,_			new Object(),_			mockStreamStatusMaintainer,_			new CollectorOutput<String>(output),_			watermarkInterval,_			idleTimeout)___		__		_		processingTimeService.setCurrentTime(initialTime + watermarkInterval)__		expectedOutput.add(new Watermark(processingTimeService.getCurrentProcessingTime() - (processingTimeService.getCurrentProcessingTime() % watermarkInterval)))__		processingTimeService.setCurrentTime(initialTime + 2*watermarkInterval)__		expectedOutput.add(new Watermark(processingTimeService.getCurrentProcessingTime() - (processingTimeService.getCurrentProcessingTime() % watermarkInterval)))__		processingTimeService.setCurrentTime(initialTime + idleTimeout)__		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__		assertEquals(expectedOutput, output)___		_		processingTimeService.setCurrentTime(initialTime + 3*watermarkInterval)__		processingTimeService.setCurrentTime(initialTime + 4*watermarkInterval)__		processingTimeService.setCurrentTime(initialTime + 2*idleTimeout)__		processingTimeService.setCurrentTime(initialTime + 6*watermarkInterval)__		processingTimeService.setCurrentTime(initialTime + 7*watermarkInterval)__		processingTimeService.setCurrentTime(initialTime + 3*idleTimeout)__		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__		assertEquals(expectedOutput, output)___		_		processingTimeService.setCurrentTime(initialTime + 3*idleTimeout + idleTimeout/10)__		switch (testMethod) {_			case COLLECT:_				context.collect("msg")__				expectedOutput.add(new StreamRecord<>("msg", processingTimeService.getCurrentProcessingTime()))__				expectedOutput.add(new Watermark(processingTimeService.getCurrentProcessingTime() - (processingTimeService.getCurrentProcessingTime() % watermarkInterval)))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())__				assertEquals(expectedOutput, output)__				break__			case COLLECT_WITH_TIMESTAMP:_				context.collectWithTimestamp("msg", processingTimeService.getCurrentProcessingTime())__				expectedOutput.add(new StreamRecord<>("msg", processingTimeService.getCurrentProcessingTime()))__				expectedOutput.add(new Watermark(processingTimeService.getCurrentProcessingTime() - (processingTimeService.getCurrentProcessingTime() % watermarkInterval)))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())__				assertEquals(expectedOutput, output)__				break__			case EMIT_WATERMARK:_				_				_				_				context.emitWatermark(new Watermark(processingTimeService.getCurrentProcessingTime()))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__				assertEquals(expectedOutput, output)__		}__		_		processingTimeService.setCurrentTime(initialTime + 8*watermarkInterval)__		processingTimeService.setCurrentTime(initialTime + 3*idleTimeout + 3*idleTimeout/10)__		switch (testMethod) {_			case COLLECT:_				context.collect("msg")__				expectedOutput.add(new StreamRecord<>("msg", processingTimeService.getCurrentProcessingTime()))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())__				assertEquals(expectedOutput, output)__				break__			case COLLECT_WITH_TIMESTAMP:_				context.collectWithTimestamp("msg", processingTimeService.getCurrentProcessingTime())__				expectedOutput.add(new StreamRecord<>("msg", processingTimeService.getCurrentProcessingTime()))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())__				assertEquals(expectedOutput, output)__				break__			case EMIT_WATERMARK:_				context.emitWatermark(new Watermark(processingTimeService.getCurrentProcessingTime()))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__				assertEquals(expectedOutput, output)__		}__		processingTimeService.setCurrentTime(initialTime + 9 * watermarkInterval)__		switch (testMethod) {_			case COLLECT:_			case COLLECT_WITH_TIMESTAMP:_				expectedOutput.add(new Watermark(processingTimeService.getCurrentProcessingTime() - (processingTimeService.getCurrentProcessingTime() % watermarkInterval)))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())__				assertEquals(expectedOutput, output)__				break__			case EMIT_WATERMARK:_				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__				assertEquals(expectedOutput, output)__		}__		processingTimeService.setCurrentTime(initialTime + 10*watermarkInterval)__		switch (testMethod) {_			case COLLECT:_			case COLLECT_WITH_TIMESTAMP:_				expectedOutput.add(new Watermark(processingTimeService.getCurrentProcessingTime() - (processingTimeService.getCurrentProcessingTime() % watermarkInterval)))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())__				assertEquals(expectedOutput, output)__				break__			case EMIT_WATERMARK:_				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__				assertEquals(expectedOutput, output)__		}__		_		processingTimeService.setCurrentTime(initialTime + 4*idleTimeout + idleTimeout/10)__		switch (testMethod) {_			case COLLECT:_			case COLLECT_WITH_TIMESTAMP:_				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())__				assertEquals(expectedOutput, output)__				break__			case EMIT_WATERMARK:_				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__				assertEquals(expectedOutput, output)__		}__		_		processingTimeService.setCurrentTime(initialTime + 11*watermarkInterval)__		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__		assertEquals(expectedOutput, output)__	};test,scenario,idle,timeout,100,watermark,interval,40,1,start,from,20,as,initial,time,2,as,soon,as,time,reaches,120,status,should,have,been,toggled,to,idle,3,after,some,arbitrary,time,until,320,the,status,should,remain,idle,and,no,watermarks,should,have,been,emitted,4,emit,a,record,at,330,status,should,become,active,this,should,schedule,a,idleness,detection,to,be,fired,at,430,5,emit,another,record,at,350,which,is,before,the,next,check,this,should,make,the,idleness,check,pass,6,advance,time,to,430,and,trigger,idleness,detection,the,status,should,still,be,active,due,to,step,5,this,should,schedule,a,idleness,detection,to,be,fired,at,530,7,advance,time,to,460,in,which,a,watermark,emission,task,should,be,fired,idleness,detection,should,have,been,piggy,backed,in,the,task,allowing,the,status,to,be,toggled,to,idle,before,the,next,actual,idle,detection,task,at,530,inline,comments,will,refer,to,the,corresponding,tested,steps,in,the,scenario;test,public,void,test,automatic,watermark,context,throws,exception,long,watermark,interval,40,long,idle,timeout,100,long,initial,time,20,test,processing,time,service,processing,time,service,new,test,processing,time,service,processing,time,service,set,current,time,initial,time,mock,stream,status,maintainer,mock,stream,status,maintainer,new,mock,stream,status,maintainer,final,list,stream,element,output,new,array,list,final,list,stream,element,expected,output,new,array,list,source,function,source,context,string,context,stream,source,contexts,get,source,context,time,characteristic,ingestion,time,processing,time,service,new,object,mock,stream,status,maintainer,new,collector,output,string,output,watermark,interval,idle,timeout,processing,time,service,set,current,time,initial,time,watermark,interval,expected,output,add,new,watermark,processing,time,service,get,current,processing,time,processing,time,service,get,current,processing,time,watermark,interval,processing,time,service,set,current,time,initial,time,2,watermark,interval,expected,output,add,new,watermark,processing,time,service,get,current,processing,time,processing,time,service,get,current,processing,time,watermark,interval,processing,time,service,set,current,time,initial,time,idle,timeout,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output,processing,time,service,set,current,time,initial,time,3,watermark,interval,processing,time,service,set,current,time,initial,time,4,watermark,interval,processing,time,service,set,current,time,initial,time,2,idle,timeout,processing,time,service,set,current,time,initial,time,6,watermark,interval,processing,time,service,set,current,time,initial,time,7,watermark,interval,processing,time,service,set,current,time,initial,time,3,idle,timeout,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output,processing,time,service,set,current,time,initial,time,3,idle,timeout,idle,timeout,10,switch,test,method,case,collect,context,collect,msg,expected,output,add,new,stream,record,msg,processing,time,service,get,current,processing,time,expected,output,add,new,watermark,processing,time,service,get,current,processing,time,processing,time,service,get,current,processing,time,watermark,interval,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,assert,equals,expected,output,output,break,case,context,collect,with,timestamp,msg,processing,time,service,get,current,processing,time,expected,output,add,new,stream,record,msg,processing,time,service,get,current,processing,time,expected,output,add,new,watermark,processing,time,service,get,current,processing,time,processing,time,service,get,current,processing,time,watermark,interval,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,assert,equals,expected,output,output,break,case,context,emit,watermark,new,watermark,processing,time,service,get,current,processing,time,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output,processing,time,service,set,current,time,initial,time,8,watermark,interval,processing,time,service,set,current,time,initial,time,3,idle,timeout,3,idle,timeout,10,switch,test,method,case,collect,context,collect,msg,expected,output,add,new,stream,record,msg,processing,time,service,get,current,processing,time,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,assert,equals,expected,output,output,break,case,context,collect,with,timestamp,msg,processing,time,service,get,current,processing,time,expected,output,add,new,stream,record,msg,processing,time,service,get,current,processing,time,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,assert,equals,expected,output,output,break,case,context,emit,watermark,new,watermark,processing,time,service,get,current,processing,time,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output,processing,time,service,set,current,time,initial,time,9,watermark,interval,switch,test,method,case,collect,case,expected,output,add,new,watermark,processing,time,service,get,current,processing,time,processing,time,service,get,current,processing,time,watermark,interval,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,assert,equals,expected,output,output,break,case,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output,processing,time,service,set,current,time,initial,time,10,watermark,interval,switch,test,method,case,collect,case,expected,output,add,new,watermark,processing,time,service,get,current,processing,time,processing,time,service,get,current,processing,time,watermark,interval,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,assert,equals,expected,output,output,break,case,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output,processing,time,service,set,current,time,initial,time,4,idle,timeout,idle,timeout,10,switch,test,method,case,collect,case,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,assert,equals,expected,output,output,break,case,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output,processing,time,service,set,current,time,initial,time,11,watermark,interval,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output
StreamSourceContextIdleDetectionTests -> @Test 	public void testAutomaticWatermarkContext() throws Exception;1495484544;Test scenario (idleTimeout = 100, watermarkInterval = 40):_(1) Start from 20 as initial time._(2) As soon as time reaches 120, status should have been toggled to IDLE._(3) After some arbitrary time (until 320), the status should remain IDLE, and no watermarks should have been emitted._(4) Emit a record at 330. Status should become ACTIVE. This should schedule a idleness detection to be fired at 430._(5) Emit another record at 350 (which is before the next check). This should make the idleness check pass._(6) Advance time to 430 and trigger idleness detection. The status should still be ACTIVE due to step (5)._This should schedule a idleness detection to be fired at 530._(7) Advance time to 460, in which a watermark emission task should be fired. Idleness detection_should have been "piggy-backed" in the task, allowing the status to be toggled to IDLE before the next_actual idle detection task at 530.__<p>Inline comments will refer to the corresponding tested steps in the scenario.;@Test_	public void testAutomaticWatermarkContext() throws Exception {_		long watermarkInterval = 40__		long idleTimeout = 100__		long initialTime = 20___		TestProcessingTimeService processingTimeService = new TestProcessingTimeService()__		processingTimeService.setCurrentTime(initialTime)___		MockStreamStatusMaintainer mockStreamStatusMaintainer = new MockStreamStatusMaintainer()___		final List<StreamElement> output = new ArrayList<>()__		final List<StreamElement> expectedOutput = new ArrayList<>()___		SourceFunction.SourceContext<String> context = StreamSourceContexts.getSourceContext(_			TimeCharacteristic.IngestionTime,_			processingTimeService,_			new Object(),_			mockStreamStatusMaintainer,_			new CollectorOutput<String>(output),_			watermarkInterval,_			idleTimeout)___		__		_		processingTimeService.setCurrentTime(initialTime + watermarkInterval)__		expectedOutput.add(new Watermark(processingTimeService.getCurrentProcessingTime() - (processingTimeService.getCurrentProcessingTime() % watermarkInterval)))__		processingTimeService.setCurrentTime(initialTime + 2 * watermarkInterval)__		expectedOutput.add(new Watermark(processingTimeService.getCurrentProcessingTime() - (processingTimeService.getCurrentProcessingTime() % watermarkInterval)))__		processingTimeService.setCurrentTime(initialTime + idleTimeout)__		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__		assertEquals(expectedOutput, output)___		_		processingTimeService.setCurrentTime(initialTime + 3 * watermarkInterval)__		processingTimeService.setCurrentTime(initialTime + 4 * watermarkInterval)__		processingTimeService.setCurrentTime(initialTime + 2 * idleTimeout)__		processingTimeService.setCurrentTime(initialTime + 6 * watermarkInterval)__		processingTimeService.setCurrentTime(initialTime + 7 * watermarkInterval)__		processingTimeService.setCurrentTime(initialTime + 3 * idleTimeout)__		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__		assertEquals(expectedOutput, output)___		_		processingTimeService.setCurrentTime(initialTime + 3 * idleTimeout + idleTimeout / 10)__		switch (testMethod) {_			case COLLECT:_				context.collect("msg")__				expectedOutput.add(new StreamRecord<>("msg", processingTimeService.getCurrentProcessingTime()))__				expectedOutput.add(new Watermark(processingTimeService.getCurrentProcessingTime() - (processingTimeService.getCurrentProcessingTime() % watermarkInterval)))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())__				assertEquals(expectedOutput, output)__				break__			case COLLECT_WITH_TIMESTAMP:_				context.collectWithTimestamp("msg", processingTimeService.getCurrentProcessingTime())__				expectedOutput.add(new StreamRecord<>("msg", processingTimeService.getCurrentProcessingTime()))__				expectedOutput.add(new Watermark(processingTimeService.getCurrentProcessingTime() - (processingTimeService.getCurrentProcessingTime() % watermarkInterval)))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())__				assertEquals(expectedOutput, output)__				break__			case EMIT_WATERMARK:_				_				_				_				context.emitWatermark(new Watermark(processingTimeService.getCurrentProcessingTime()))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__				assertEquals(expectedOutput, output)__		}__		_		processingTimeService.setCurrentTime(initialTime + 8 * watermarkInterval)__		processingTimeService.setCurrentTime(initialTime + 3 * idleTimeout + 3 * idleTimeout / 10)__		switch (testMethod) {_			case COLLECT:_				context.collect("msg")__				expectedOutput.add(new StreamRecord<>("msg", processingTimeService.getCurrentProcessingTime()))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())__				assertEquals(expectedOutput, output)__				break__			case COLLECT_WITH_TIMESTAMP:_				context.collectWithTimestamp("msg", processingTimeService.getCurrentProcessingTime())__				expectedOutput.add(new StreamRecord<>("msg", processingTimeService.getCurrentProcessingTime()))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())__				assertEquals(expectedOutput, output)__				break__			case EMIT_WATERMARK:_				context.emitWatermark(new Watermark(processingTimeService.getCurrentProcessingTime()))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__				assertEquals(expectedOutput, output)__		}__		processingTimeService.setCurrentTime(initialTime + 9 * watermarkInterval)__		switch (testMethod) {_			case COLLECT:_			case COLLECT_WITH_TIMESTAMP:_				expectedOutput.add(new Watermark(processingTimeService.getCurrentProcessingTime() - (processingTimeService.getCurrentProcessingTime() % watermarkInterval)))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())__				assertEquals(expectedOutput, output)__				break__			case EMIT_WATERMARK:_				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__				assertEquals(expectedOutput, output)__		}__		processingTimeService.setCurrentTime(initialTime + 10 * watermarkInterval)__		switch (testMethod) {_			case COLLECT:_			case COLLECT_WITH_TIMESTAMP:_				expectedOutput.add(new Watermark(processingTimeService.getCurrentProcessingTime() - (processingTimeService.getCurrentProcessingTime() % watermarkInterval)))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())__				assertEquals(expectedOutput, output)__				break__			case EMIT_WATERMARK:_				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__				assertEquals(expectedOutput, output)__		}__		_		processingTimeService.setCurrentTime(initialTime + 4 * idleTimeout + idleTimeout / 10)__		switch (testMethod) {_			case COLLECT:_			case COLLECT_WITH_TIMESTAMP:_				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())__				assertEquals(expectedOutput, output)__				break__			case EMIT_WATERMARK:_				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__				assertEquals(expectedOutput, output)__		}__		_		processingTimeService.setCurrentTime(initialTime + 11 * watermarkInterval)__		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__		assertEquals(expectedOutput, output)__	};test,scenario,idle,timeout,100,watermark,interval,40,1,start,from,20,as,initial,time,2,as,soon,as,time,reaches,120,status,should,have,been,toggled,to,idle,3,after,some,arbitrary,time,until,320,the,status,should,remain,idle,and,no,watermarks,should,have,been,emitted,4,emit,a,record,at,330,status,should,become,active,this,should,schedule,a,idleness,detection,to,be,fired,at,430,5,emit,another,record,at,350,which,is,before,the,next,check,this,should,make,the,idleness,check,pass,6,advance,time,to,430,and,trigger,idleness,detection,the,status,should,still,be,active,due,to,step,5,this,should,schedule,a,idleness,detection,to,be,fired,at,530,7,advance,time,to,460,in,which,a,watermark,emission,task,should,be,fired,idleness,detection,should,have,been,piggy,backed,in,the,task,allowing,the,status,to,be,toggled,to,idle,before,the,next,actual,idle,detection,task,at,530,p,inline,comments,will,refer,to,the,corresponding,tested,steps,in,the,scenario;test,public,void,test,automatic,watermark,context,throws,exception,long,watermark,interval,40,long,idle,timeout,100,long,initial,time,20,test,processing,time,service,processing,time,service,new,test,processing,time,service,processing,time,service,set,current,time,initial,time,mock,stream,status,maintainer,mock,stream,status,maintainer,new,mock,stream,status,maintainer,final,list,stream,element,output,new,array,list,final,list,stream,element,expected,output,new,array,list,source,function,source,context,string,context,stream,source,contexts,get,source,context,time,characteristic,ingestion,time,processing,time,service,new,object,mock,stream,status,maintainer,new,collector,output,string,output,watermark,interval,idle,timeout,processing,time,service,set,current,time,initial,time,watermark,interval,expected,output,add,new,watermark,processing,time,service,get,current,processing,time,processing,time,service,get,current,processing,time,watermark,interval,processing,time,service,set,current,time,initial,time,2,watermark,interval,expected,output,add,new,watermark,processing,time,service,get,current,processing,time,processing,time,service,get,current,processing,time,watermark,interval,processing,time,service,set,current,time,initial,time,idle,timeout,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output,processing,time,service,set,current,time,initial,time,3,watermark,interval,processing,time,service,set,current,time,initial,time,4,watermark,interval,processing,time,service,set,current,time,initial,time,2,idle,timeout,processing,time,service,set,current,time,initial,time,6,watermark,interval,processing,time,service,set,current,time,initial,time,7,watermark,interval,processing,time,service,set,current,time,initial,time,3,idle,timeout,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output,processing,time,service,set,current,time,initial,time,3,idle,timeout,idle,timeout,10,switch,test,method,case,collect,context,collect,msg,expected,output,add,new,stream,record,msg,processing,time,service,get,current,processing,time,expected,output,add,new,watermark,processing,time,service,get,current,processing,time,processing,time,service,get,current,processing,time,watermark,interval,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,assert,equals,expected,output,output,break,case,context,collect,with,timestamp,msg,processing,time,service,get,current,processing,time,expected,output,add,new,stream,record,msg,processing,time,service,get,current,processing,time,expected,output,add,new,watermark,processing,time,service,get,current,processing,time,processing,time,service,get,current,processing,time,watermark,interval,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,assert,equals,expected,output,output,break,case,context,emit,watermark,new,watermark,processing,time,service,get,current,processing,time,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output,processing,time,service,set,current,time,initial,time,8,watermark,interval,processing,time,service,set,current,time,initial,time,3,idle,timeout,3,idle,timeout,10,switch,test,method,case,collect,context,collect,msg,expected,output,add,new,stream,record,msg,processing,time,service,get,current,processing,time,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,assert,equals,expected,output,output,break,case,context,collect,with,timestamp,msg,processing,time,service,get,current,processing,time,expected,output,add,new,stream,record,msg,processing,time,service,get,current,processing,time,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,assert,equals,expected,output,output,break,case,context,emit,watermark,new,watermark,processing,time,service,get,current,processing,time,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output,processing,time,service,set,current,time,initial,time,9,watermark,interval,switch,test,method,case,collect,case,expected,output,add,new,watermark,processing,time,service,get,current,processing,time,processing,time,service,get,current,processing,time,watermark,interval,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,assert,equals,expected,output,output,break,case,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output,processing,time,service,set,current,time,initial,time,10,watermark,interval,switch,test,method,case,collect,case,expected,output,add,new,watermark,processing,time,service,get,current,processing,time,processing,time,service,get,current,processing,time,watermark,interval,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,assert,equals,expected,output,output,break,case,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output,processing,time,service,set,current,time,initial,time,4,idle,timeout,idle,timeout,10,switch,test,method,case,collect,case,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,assert,equals,expected,output,output,break,case,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output,processing,time,service,set,current,time,initial,time,11,watermark,interval,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output
StreamSourceContextIdleDetectionTests -> @Test 	public void testAutomaticWatermarkContext() throws Exception;1548947531;Test scenario (idleTimeout = 100, watermarkInterval = 40):_(1) Start from 20 as initial time._(2) As soon as time reaches 120, status should have been toggled to IDLE._(3) After some arbitrary time (until 320), the status should remain IDLE, and no watermarks should have been emitted._(4) Emit a record at 330. Status should become ACTIVE. This should schedule a idleness detection to be fired at 430._(5) Emit another record at 350 (which is before the next check). This should make the idleness check pass._(6) Advance time to 430 and trigger idleness detection. The status should still be ACTIVE due to step (5)._This should schedule a idleness detection to be fired at 530._(7) Advance time to 460, in which a watermark emission task should be fired. Idleness detection_should have been "piggy-backed" in the task, allowing the status to be toggled to IDLE before the next_actual idle detection task at 530.__<p>Inline comments will refer to the corresponding tested steps in the scenario.;@Test_	public void testAutomaticWatermarkContext() throws Exception {_		long watermarkInterval = 40__		long idleTimeout = 100__		long initialTime = 20___		TestProcessingTimeService processingTimeService = new TestProcessingTimeService()__		processingTimeService.setCurrentTime(initialTime)___		MockStreamStatusMaintainer mockStreamStatusMaintainer = new MockStreamStatusMaintainer()___		final List<StreamElement> output = new ArrayList<>()__		final List<StreamElement> expectedOutput = new ArrayList<>()___		SourceFunction.SourceContext<String> context = StreamSourceContexts.getSourceContext(_			TimeCharacteristic.IngestionTime,_			processingTimeService,_			new Object(),_			mockStreamStatusMaintainer,_			new CollectorOutput<String>(output),_			watermarkInterval,_			idleTimeout)___		__		_		processingTimeService.setCurrentTime(initialTime + watermarkInterval)__		expectedOutput.add(new Watermark(processingTimeService.getCurrentProcessingTime() - (processingTimeService.getCurrentProcessingTime() % watermarkInterval)))__		processingTimeService.setCurrentTime(initialTime + 2 * watermarkInterval)__		expectedOutput.add(new Watermark(processingTimeService.getCurrentProcessingTime() - (processingTimeService.getCurrentProcessingTime() % watermarkInterval)))__		processingTimeService.setCurrentTime(initialTime + idleTimeout)__		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__		assertEquals(expectedOutput, output)___		_		processingTimeService.setCurrentTime(initialTime + 3 * watermarkInterval)__		processingTimeService.setCurrentTime(initialTime + 4 * watermarkInterval)__		processingTimeService.setCurrentTime(initialTime + 2 * idleTimeout)__		processingTimeService.setCurrentTime(initialTime + 6 * watermarkInterval)__		processingTimeService.setCurrentTime(initialTime + 7 * watermarkInterval)__		processingTimeService.setCurrentTime(initialTime + 3 * idleTimeout)__		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__		assertEquals(expectedOutput, output)___		_		processingTimeService.setCurrentTime(initialTime + 3 * idleTimeout + idleTimeout / 10)__		switch (testMethod) {_			case COLLECT:_				context.collect("msg")__				expectedOutput.add(new StreamRecord<>("msg", processingTimeService.getCurrentProcessingTime()))__				expectedOutput.add(new Watermark(processingTimeService.getCurrentProcessingTime() - (processingTimeService.getCurrentProcessingTime() % watermarkInterval)))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())__				assertEquals(expectedOutput, output)__				break__			case COLLECT_WITH_TIMESTAMP:_				context.collectWithTimestamp("msg", processingTimeService.getCurrentProcessingTime())__				expectedOutput.add(new StreamRecord<>("msg", processingTimeService.getCurrentProcessingTime()))__				expectedOutput.add(new Watermark(processingTimeService.getCurrentProcessingTime() - (processingTimeService.getCurrentProcessingTime() % watermarkInterval)))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())__				assertEquals(expectedOutput, output)__				break__			case EMIT_WATERMARK:_				_				_				_				context.emitWatermark(new Watermark(processingTimeService.getCurrentProcessingTime()))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__				assertEquals(expectedOutput, output)__		}__		_		processingTimeService.setCurrentTime(initialTime + 8 * watermarkInterval)__		processingTimeService.setCurrentTime(initialTime + 3 * idleTimeout + 3 * idleTimeout / 10)__		switch (testMethod) {_			case COLLECT:_				context.collect("msg")__				expectedOutput.add(new StreamRecord<>("msg", processingTimeService.getCurrentProcessingTime()))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())__				assertEquals(expectedOutput, output)__				break__			case COLLECT_WITH_TIMESTAMP:_				context.collectWithTimestamp("msg", processingTimeService.getCurrentProcessingTime())__				expectedOutput.add(new StreamRecord<>("msg", processingTimeService.getCurrentProcessingTime()))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())__				assertEquals(expectedOutput, output)__				break__			case EMIT_WATERMARK:_				context.emitWatermark(new Watermark(processingTimeService.getCurrentProcessingTime()))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__				assertEquals(expectedOutput, output)__		}__		processingTimeService.setCurrentTime(initialTime + 9 * watermarkInterval)__		switch (testMethod) {_			case COLLECT:_			case COLLECT_WITH_TIMESTAMP:_				expectedOutput.add(new Watermark(processingTimeService.getCurrentProcessingTime() - (processingTimeService.getCurrentProcessingTime() % watermarkInterval)))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())__				assertEquals(expectedOutput, output)__				break__			case EMIT_WATERMARK:_				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__				assertEquals(expectedOutput, output)__		}__		processingTimeService.setCurrentTime(initialTime + 10 * watermarkInterval)__		switch (testMethod) {_			case COLLECT:_			case COLLECT_WITH_TIMESTAMP:_				expectedOutput.add(new Watermark(processingTimeService.getCurrentProcessingTime() - (processingTimeService.getCurrentProcessingTime() % watermarkInterval)))__				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())__				assertEquals(expectedOutput, output)__				break__			case EMIT_WATERMARK:_				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__				assertEquals(expectedOutput, output)__		}__		_		processingTimeService.setCurrentTime(initialTime + 4 * idleTimeout + idleTimeout / 10)__		switch (testMethod) {_			case COLLECT:_			case COLLECT_WITH_TIMESTAMP:_				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())__				assertEquals(expectedOutput, output)__				break__			case EMIT_WATERMARK:_				assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__				assertEquals(expectedOutput, output)__		}__		_		processingTimeService.setCurrentTime(initialTime + 11 * watermarkInterval)__		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__		assertEquals(expectedOutput, output)__	};test,scenario,idle,timeout,100,watermark,interval,40,1,start,from,20,as,initial,time,2,as,soon,as,time,reaches,120,status,should,have,been,toggled,to,idle,3,after,some,arbitrary,time,until,320,the,status,should,remain,idle,and,no,watermarks,should,have,been,emitted,4,emit,a,record,at,330,status,should,become,active,this,should,schedule,a,idleness,detection,to,be,fired,at,430,5,emit,another,record,at,350,which,is,before,the,next,check,this,should,make,the,idleness,check,pass,6,advance,time,to,430,and,trigger,idleness,detection,the,status,should,still,be,active,due,to,step,5,this,should,schedule,a,idleness,detection,to,be,fired,at,530,7,advance,time,to,460,in,which,a,watermark,emission,task,should,be,fired,idleness,detection,should,have,been,piggy,backed,in,the,task,allowing,the,status,to,be,toggled,to,idle,before,the,next,actual,idle,detection,task,at,530,p,inline,comments,will,refer,to,the,corresponding,tested,steps,in,the,scenario;test,public,void,test,automatic,watermark,context,throws,exception,long,watermark,interval,40,long,idle,timeout,100,long,initial,time,20,test,processing,time,service,processing,time,service,new,test,processing,time,service,processing,time,service,set,current,time,initial,time,mock,stream,status,maintainer,mock,stream,status,maintainer,new,mock,stream,status,maintainer,final,list,stream,element,output,new,array,list,final,list,stream,element,expected,output,new,array,list,source,function,source,context,string,context,stream,source,contexts,get,source,context,time,characteristic,ingestion,time,processing,time,service,new,object,mock,stream,status,maintainer,new,collector,output,string,output,watermark,interval,idle,timeout,processing,time,service,set,current,time,initial,time,watermark,interval,expected,output,add,new,watermark,processing,time,service,get,current,processing,time,processing,time,service,get,current,processing,time,watermark,interval,processing,time,service,set,current,time,initial,time,2,watermark,interval,expected,output,add,new,watermark,processing,time,service,get,current,processing,time,processing,time,service,get,current,processing,time,watermark,interval,processing,time,service,set,current,time,initial,time,idle,timeout,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output,processing,time,service,set,current,time,initial,time,3,watermark,interval,processing,time,service,set,current,time,initial,time,4,watermark,interval,processing,time,service,set,current,time,initial,time,2,idle,timeout,processing,time,service,set,current,time,initial,time,6,watermark,interval,processing,time,service,set,current,time,initial,time,7,watermark,interval,processing,time,service,set,current,time,initial,time,3,idle,timeout,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output,processing,time,service,set,current,time,initial,time,3,idle,timeout,idle,timeout,10,switch,test,method,case,collect,context,collect,msg,expected,output,add,new,stream,record,msg,processing,time,service,get,current,processing,time,expected,output,add,new,watermark,processing,time,service,get,current,processing,time,processing,time,service,get,current,processing,time,watermark,interval,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,assert,equals,expected,output,output,break,case,context,collect,with,timestamp,msg,processing,time,service,get,current,processing,time,expected,output,add,new,stream,record,msg,processing,time,service,get,current,processing,time,expected,output,add,new,watermark,processing,time,service,get,current,processing,time,processing,time,service,get,current,processing,time,watermark,interval,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,assert,equals,expected,output,output,break,case,context,emit,watermark,new,watermark,processing,time,service,get,current,processing,time,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output,processing,time,service,set,current,time,initial,time,8,watermark,interval,processing,time,service,set,current,time,initial,time,3,idle,timeout,3,idle,timeout,10,switch,test,method,case,collect,context,collect,msg,expected,output,add,new,stream,record,msg,processing,time,service,get,current,processing,time,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,assert,equals,expected,output,output,break,case,context,collect,with,timestamp,msg,processing,time,service,get,current,processing,time,expected,output,add,new,stream,record,msg,processing,time,service,get,current,processing,time,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,assert,equals,expected,output,output,break,case,context,emit,watermark,new,watermark,processing,time,service,get,current,processing,time,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output,processing,time,service,set,current,time,initial,time,9,watermark,interval,switch,test,method,case,collect,case,expected,output,add,new,watermark,processing,time,service,get,current,processing,time,processing,time,service,get,current,processing,time,watermark,interval,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,assert,equals,expected,output,output,break,case,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output,processing,time,service,set,current,time,initial,time,10,watermark,interval,switch,test,method,case,collect,case,expected,output,add,new,watermark,processing,time,service,get,current,processing,time,processing,time,service,get,current,processing,time,watermark,interval,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,assert,equals,expected,output,output,break,case,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output,processing,time,service,set,current,time,initial,time,4,idle,timeout,idle,timeout,10,switch,test,method,case,collect,case,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,assert,equals,expected,output,output,break,case,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output,processing,time,service,set,current,time,initial,time,11,watermark,interval,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,assert,equals,expected,output,output
StreamSourceContextIdleDetectionTests -> @Test 	public void testManualWatermarkContext() throws Exception;1487783998;Test scenario (idleTimeout = 100):_(1) Start from 0 as initial time._(2) As soon as time reaches 100, status should have been toggled to IDLE._(3) After some arbitrary time (until 300), the status should remain IDLE._(4) Emit a record at 310. Status should become ACTIVE. This should fire a idleness detection at 410._(5) Emit another record at 320 (which is before the next check). This should make the idleness check pass._(6) Advance time to 410 and trigger idleness detection._The status should still be ACTIVE due to step (5). Another idleness detection should be fired at 510._(7) Advance time to 510 and trigger idleness detection. Since no records were collected in-between the two_idleness detections, status should have been toggle back to IDLE.__Inline comments will refer to the corresponding tested steps in the scenario.;@Test_	public void testManualWatermarkContext() throws Exception {_		long idleTimeout = 100___		long initialTime = 0__		TestProcessingTimeService processingTimeService = new TestProcessingTimeService()__		processingTimeService.setCurrentTime(initialTime)___		final List<StreamElement> output = new ArrayList<>()___		MockStreamStatusMaintainer mockStreamStatusMaintainer = new MockStreamStatusMaintainer()___		SourceFunction.SourceContext<String> context = StreamSourceContexts.getSourceContext(_			TimeCharacteristic.EventTime,_			processingTimeService,_			new Object(),_			mockStreamStatusMaintainer,_			new CollectorOutput<String>(output),_			0,_			idleTimeout)___		__		_		processingTimeService.setCurrentTime(initialTime + idleTimeout)__		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())___		_		processingTimeService.setCurrentTime(initialTime + 2*idleTimeout)__		processingTimeService.setCurrentTime(initialTime + 3*idleTimeout)__		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())___		_		processingTimeService.setCurrentTime(initialTime + 3*idleTimeout + idleTimeout/10)__		switch (testMethod) {_			case COLLECT:_				context.collect("msg")__				break__			case COLLECT_WITH_TIMESTAMP:_				context.collectWithTimestamp("msg", processingTimeService.getCurrentProcessingTime())__				break__			case EMIT_WATERMARK:_				context.emitWatermark(new Watermark(processingTimeService.getCurrentProcessingTime()))__				break__		}_		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())___		_		processingTimeService.setCurrentTime(initialTime + 3*idleTimeout + 2*idleTimeout/10)__		switch (testMethod) {_			case COLLECT:_				context.collect("msg")__				break__			case COLLECT_WITH_TIMESTAMP:_				context.collectWithTimestamp("msg", processingTimeService.getCurrentProcessingTime())__				break__			case EMIT_WATERMARK:_				context.emitWatermark(new Watermark(processingTimeService.getCurrentProcessingTime()))__				break__		}_		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())___		_		processingTimeService.setCurrentTime(initialTime + 4*idleTimeout + idleTimeout/10)__		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())___		_		processingTimeService.setCurrentTime(initialTime + 5*idleTimeout + idleTimeout/10)__		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__	};test,scenario,idle,timeout,100,1,start,from,0,as,initial,time,2,as,soon,as,time,reaches,100,status,should,have,been,toggled,to,idle,3,after,some,arbitrary,time,until,300,the,status,should,remain,idle,4,emit,a,record,at,310,status,should,become,active,this,should,fire,a,idleness,detection,at,410,5,emit,another,record,at,320,which,is,before,the,next,check,this,should,make,the,idleness,check,pass,6,advance,time,to,410,and,trigger,idleness,detection,the,status,should,still,be,active,due,to,step,5,another,idleness,detection,should,be,fired,at,510,7,advance,time,to,510,and,trigger,idleness,detection,since,no,records,were,collected,in,between,the,two,idleness,detections,status,should,have,been,toggle,back,to,idle,inline,comments,will,refer,to,the,corresponding,tested,steps,in,the,scenario;test,public,void,test,manual,watermark,context,throws,exception,long,idle,timeout,100,long,initial,time,0,test,processing,time,service,processing,time,service,new,test,processing,time,service,processing,time,service,set,current,time,initial,time,final,list,stream,element,output,new,array,list,mock,stream,status,maintainer,mock,stream,status,maintainer,new,mock,stream,status,maintainer,source,function,source,context,string,context,stream,source,contexts,get,source,context,time,characteristic,event,time,processing,time,service,new,object,mock,stream,status,maintainer,new,collector,output,string,output,0,idle,timeout,processing,time,service,set,current,time,initial,time,idle,timeout,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,processing,time,service,set,current,time,initial,time,2,idle,timeout,processing,time,service,set,current,time,initial,time,3,idle,timeout,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,processing,time,service,set,current,time,initial,time,3,idle,timeout,idle,timeout,10,switch,test,method,case,collect,context,collect,msg,break,case,context,collect,with,timestamp,msg,processing,time,service,get,current,processing,time,break,case,context,emit,watermark,new,watermark,processing,time,service,get,current,processing,time,break,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,processing,time,service,set,current,time,initial,time,3,idle,timeout,2,idle,timeout,10,switch,test,method,case,collect,context,collect,msg,break,case,context,collect,with,timestamp,msg,processing,time,service,get,current,processing,time,break,case,context,emit,watermark,new,watermark,processing,time,service,get,current,processing,time,break,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,processing,time,service,set,current,time,initial,time,4,idle,timeout,idle,timeout,10,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,processing,time,service,set,current,time,initial,time,5,idle,timeout,idle,timeout,10,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle
StreamSourceContextIdleDetectionTests -> @Test 	public void testManualWatermarkContext() throws Exception;1495484544;Test scenario (idleTimeout = 100):_(1) Start from 0 as initial time._(2) As soon as time reaches 100, status should have been toggled to IDLE._(3) After some arbitrary time (until 300), the status should remain IDLE._(4) Emit a record at 310. Status should become ACTIVE. This should fire a idleness detection at 410._(5) Emit another record at 320 (which is before the next check). This should make the idleness check pass._(6) Advance time to 410 and trigger idleness detection._The status should still be ACTIVE due to step (5). Another idleness detection should be fired at 510._(7) Advance time to 510 and trigger idleness detection. Since no records were collected in-between the two_idleness detections, status should have been toggle back to IDLE.__<p>Inline comments will refer to the corresponding tested steps in the scenario.;@Test_	public void testManualWatermarkContext() throws Exception {_		long idleTimeout = 100___		long initialTime = 0__		TestProcessingTimeService processingTimeService = new TestProcessingTimeService()__		processingTimeService.setCurrentTime(initialTime)___		final List<StreamElement> output = new ArrayList<>()___		MockStreamStatusMaintainer mockStreamStatusMaintainer = new MockStreamStatusMaintainer()___		SourceFunction.SourceContext<String> context = StreamSourceContexts.getSourceContext(_			TimeCharacteristic.EventTime,_			processingTimeService,_			new Object(),_			mockStreamStatusMaintainer,_			new CollectorOutput<String>(output),_			0,_			idleTimeout)___		__		_		processingTimeService.setCurrentTime(initialTime + idleTimeout)__		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())___		_		processingTimeService.setCurrentTime(initialTime + 2 * idleTimeout)__		processingTimeService.setCurrentTime(initialTime + 3 * idleTimeout)__		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())___		_		processingTimeService.setCurrentTime(initialTime + 3 * idleTimeout + idleTimeout / 10)__		switch (testMethod) {_			case COLLECT:_				context.collect("msg")__				break__			case COLLECT_WITH_TIMESTAMP:_				context.collectWithTimestamp("msg", processingTimeService.getCurrentProcessingTime())__				break__			case EMIT_WATERMARK:_				context.emitWatermark(new Watermark(processingTimeService.getCurrentProcessingTime()))__				break__		}_		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())___		_		processingTimeService.setCurrentTime(initialTime + 3 * idleTimeout + 2 * idleTimeout / 10)__		switch (testMethod) {_			case COLLECT:_				context.collect("msg")__				break__			case COLLECT_WITH_TIMESTAMP:_				context.collectWithTimestamp("msg", processingTimeService.getCurrentProcessingTime())__				break__			case EMIT_WATERMARK:_				context.emitWatermark(new Watermark(processingTimeService.getCurrentProcessingTime()))__				break__		}_		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())___		_		processingTimeService.setCurrentTime(initialTime + 4 * idleTimeout + idleTimeout / 10)__		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())___		_		processingTimeService.setCurrentTime(initialTime + 5 * idleTimeout + idleTimeout / 10)__		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__	};test,scenario,idle,timeout,100,1,start,from,0,as,initial,time,2,as,soon,as,time,reaches,100,status,should,have,been,toggled,to,idle,3,after,some,arbitrary,time,until,300,the,status,should,remain,idle,4,emit,a,record,at,310,status,should,become,active,this,should,fire,a,idleness,detection,at,410,5,emit,another,record,at,320,which,is,before,the,next,check,this,should,make,the,idleness,check,pass,6,advance,time,to,410,and,trigger,idleness,detection,the,status,should,still,be,active,due,to,step,5,another,idleness,detection,should,be,fired,at,510,7,advance,time,to,510,and,trigger,idleness,detection,since,no,records,were,collected,in,between,the,two,idleness,detections,status,should,have,been,toggle,back,to,idle,p,inline,comments,will,refer,to,the,corresponding,tested,steps,in,the,scenario;test,public,void,test,manual,watermark,context,throws,exception,long,idle,timeout,100,long,initial,time,0,test,processing,time,service,processing,time,service,new,test,processing,time,service,processing,time,service,set,current,time,initial,time,final,list,stream,element,output,new,array,list,mock,stream,status,maintainer,mock,stream,status,maintainer,new,mock,stream,status,maintainer,source,function,source,context,string,context,stream,source,contexts,get,source,context,time,characteristic,event,time,processing,time,service,new,object,mock,stream,status,maintainer,new,collector,output,string,output,0,idle,timeout,processing,time,service,set,current,time,initial,time,idle,timeout,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,processing,time,service,set,current,time,initial,time,2,idle,timeout,processing,time,service,set,current,time,initial,time,3,idle,timeout,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,processing,time,service,set,current,time,initial,time,3,idle,timeout,idle,timeout,10,switch,test,method,case,collect,context,collect,msg,break,case,context,collect,with,timestamp,msg,processing,time,service,get,current,processing,time,break,case,context,emit,watermark,new,watermark,processing,time,service,get,current,processing,time,break,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,processing,time,service,set,current,time,initial,time,3,idle,timeout,2,idle,timeout,10,switch,test,method,case,collect,context,collect,msg,break,case,context,collect,with,timestamp,msg,processing,time,service,get,current,processing,time,break,case,context,emit,watermark,new,watermark,processing,time,service,get,current,processing,time,break,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,processing,time,service,set,current,time,initial,time,4,idle,timeout,idle,timeout,10,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,processing,time,service,set,current,time,initial,time,5,idle,timeout,idle,timeout,10,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle
StreamSourceContextIdleDetectionTests -> @Test 	public void testManualWatermarkContext() throws Exception;1548947531;Test scenario (idleTimeout = 100):_(1) Start from 0 as initial time._(2) As soon as time reaches 100, status should have been toggled to IDLE._(3) After some arbitrary time (until 300), the status should remain IDLE._(4) Emit a record at 310. Status should become ACTIVE. This should fire a idleness detection at 410._(5) Emit another record at 320 (which is before the next check). This should make the idleness check pass._(6) Advance time to 410 and trigger idleness detection._The status should still be ACTIVE due to step (5). Another idleness detection should be fired at 510._(7) Advance time to 510 and trigger idleness detection. Since no records were collected in-between the two_idleness detections, status should have been toggle back to IDLE.__<p>Inline comments will refer to the corresponding tested steps in the scenario.;@Test_	public void testManualWatermarkContext() throws Exception {_		long idleTimeout = 100___		long initialTime = 0__		TestProcessingTimeService processingTimeService = new TestProcessingTimeService()__		processingTimeService.setCurrentTime(initialTime)___		final List<StreamElement> output = new ArrayList<>()___		MockStreamStatusMaintainer mockStreamStatusMaintainer = new MockStreamStatusMaintainer()___		SourceFunction.SourceContext<String> context = StreamSourceContexts.getSourceContext(_			TimeCharacteristic.EventTime,_			processingTimeService,_			new Object(),_			mockStreamStatusMaintainer,_			new CollectorOutput<String>(output),_			0,_			idleTimeout)___		__		_		processingTimeService.setCurrentTime(initialTime + idleTimeout)__		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())___		_		processingTimeService.setCurrentTime(initialTime + 2 * idleTimeout)__		processingTimeService.setCurrentTime(initialTime + 3 * idleTimeout)__		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())___		_		processingTimeService.setCurrentTime(initialTime + 3 * idleTimeout + idleTimeout / 10)__		switch (testMethod) {_			case COLLECT:_				context.collect("msg")__				break__			case COLLECT_WITH_TIMESTAMP:_				context.collectWithTimestamp("msg", processingTimeService.getCurrentProcessingTime())__				break__			case EMIT_WATERMARK:_				context.emitWatermark(new Watermark(processingTimeService.getCurrentProcessingTime()))__				break__		}_		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())___		_		processingTimeService.setCurrentTime(initialTime + 3 * idleTimeout + 2 * idleTimeout / 10)__		switch (testMethod) {_			case COLLECT:_				context.collect("msg")__				break__			case COLLECT_WITH_TIMESTAMP:_				context.collectWithTimestamp("msg", processingTimeService.getCurrentProcessingTime())__				break__			case EMIT_WATERMARK:_				context.emitWatermark(new Watermark(processingTimeService.getCurrentProcessingTime()))__				break__		}_		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())___		_		processingTimeService.setCurrentTime(initialTime + 4 * idleTimeout + idleTimeout / 10)__		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isActive())___		_		processingTimeService.setCurrentTime(initialTime + 5 * idleTimeout + idleTimeout / 10)__		assertTrue(mockStreamStatusMaintainer.getStreamStatus().isIdle())__	};test,scenario,idle,timeout,100,1,start,from,0,as,initial,time,2,as,soon,as,time,reaches,100,status,should,have,been,toggled,to,idle,3,after,some,arbitrary,time,until,300,the,status,should,remain,idle,4,emit,a,record,at,310,status,should,become,active,this,should,fire,a,idleness,detection,at,410,5,emit,another,record,at,320,which,is,before,the,next,check,this,should,make,the,idleness,check,pass,6,advance,time,to,410,and,trigger,idleness,detection,the,status,should,still,be,active,due,to,step,5,another,idleness,detection,should,be,fired,at,510,7,advance,time,to,510,and,trigger,idleness,detection,since,no,records,were,collected,in,between,the,two,idleness,detections,status,should,have,been,toggle,back,to,idle,p,inline,comments,will,refer,to,the,corresponding,tested,steps,in,the,scenario;test,public,void,test,manual,watermark,context,throws,exception,long,idle,timeout,100,long,initial,time,0,test,processing,time,service,processing,time,service,new,test,processing,time,service,processing,time,service,set,current,time,initial,time,final,list,stream,element,output,new,array,list,mock,stream,status,maintainer,mock,stream,status,maintainer,new,mock,stream,status,maintainer,source,function,source,context,string,context,stream,source,contexts,get,source,context,time,characteristic,event,time,processing,time,service,new,object,mock,stream,status,maintainer,new,collector,output,string,output,0,idle,timeout,processing,time,service,set,current,time,initial,time,idle,timeout,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,processing,time,service,set,current,time,initial,time,2,idle,timeout,processing,time,service,set,current,time,initial,time,3,idle,timeout,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle,processing,time,service,set,current,time,initial,time,3,idle,timeout,idle,timeout,10,switch,test,method,case,collect,context,collect,msg,break,case,context,collect,with,timestamp,msg,processing,time,service,get,current,processing,time,break,case,context,emit,watermark,new,watermark,processing,time,service,get,current,processing,time,break,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,processing,time,service,set,current,time,initial,time,3,idle,timeout,2,idle,timeout,10,switch,test,method,case,collect,context,collect,msg,break,case,context,collect,with,timestamp,msg,processing,time,service,get,current,processing,time,break,case,context,emit,watermark,new,watermark,processing,time,service,get,current,processing,time,break,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,processing,time,service,set,current,time,initial,time,4,idle,timeout,idle,timeout,10,assert,true,mock,stream,status,maintainer,get,stream,status,is,active,processing,time,service,set,current,time,initial,time,5,idle,timeout,idle,timeout,10,assert,true,mock,stream,status,maintainer,get,stream,status,is,idle
