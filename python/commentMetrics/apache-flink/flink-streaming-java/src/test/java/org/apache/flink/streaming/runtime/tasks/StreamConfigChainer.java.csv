commented;modifiers;parameterAmount;loc;comment;code
false;private;2;6;;private void head(StreamOperator<?> headOperator, OperatorID headOperatorID) {     headConfig.setStreamOperator(headOperator).     headConfig.setOperatorID(headOperatorID).     headConfig.setChainStart().     headConfig.setChainIndex(chainIndex). }
false;public;3;6;;public <T> StreamConfigChainer chain(OperatorID operatorID, OneInputStreamOperator<T, T> operator, TypeSerializer<T> typeSerializer) {     return chain(operatorID, operator, typeSerializer, typeSerializer). }
false;public;4;26;;public <IN, OUT> StreamConfigChainer chain(OperatorID operatorID, OneInputStreamOperator<IN, OUT> operator, TypeSerializer<IN> inputSerializer, TypeSerializer<OUT> outputSerializer) {     chainIndex++.     tailConfig.setChainedOutputs(Collections.singletonList(new StreamEdge(new StreamNode(null, tailConfig.getChainIndex(), null, null, null, null, null, null), new StreamNode(null, chainIndex, null, null, null, null, null, null), 0, Collections.<String>emptyList(), null, null))).     tailConfig = new StreamConfig(new Configuration()).     tailConfig.setStreamOperator(checkNotNull(operator)).     tailConfig.setOperatorID(checkNotNull(operatorID)).     tailConfig.setTypeSerializerIn1(inputSerializer).     tailConfig.setTypeSerializerOut(outputSerializer).     tailConfig.setChainIndex(chainIndex).     chainedConfigs.put(chainIndex, tailConfig).     return this. }
false;public;0;21;;public void finish() {     List<StreamEdge> outEdgesInOrder = new LinkedList<StreamEdge>().     outEdgesInOrder.add(new StreamEdge(new StreamNode(null, chainIndex, null, null, null, null, null, null), new StreamNode(null, chainIndex, null, null, null, null, null, null), 0, Collections.<String>emptyList(), new BroadcastPartitioner<Object>(), null)).     tailConfig.setBufferTimeout(0).     tailConfig.setChainEnd().     tailConfig.setOutputSelectors(Collections.emptyList()).     tailConfig.setNumberOfOutputs(1).     tailConfig.setOutEdgesInOrder(outEdgesInOrder).     tailConfig.setNonChainedOutputs(outEdgesInOrder).     headConfig.setTransitiveChainedTaskConfigs(chainedConfigs).     headConfig.setOutEdgesInOrder(outEdgesInOrder). }
