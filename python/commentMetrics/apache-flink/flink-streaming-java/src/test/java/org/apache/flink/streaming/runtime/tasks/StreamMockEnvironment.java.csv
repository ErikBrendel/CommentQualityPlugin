# id;timestamp;commentText;codeText;commentWords;codeWords
StreamMockEnvironment -> private <T> void addBufferToOutputList( 		RecordDeserializer<DeserializationDelegate<T>> recordDeserializer, 		NonReusingDeserializationDelegate<T> delegate, Buffer buffer, 		final Queue<Object> outputList) throws java.io.IOException;1483975430;Adds the object behind the given <tt>buffer</tt> to the <tt>outputList</tt>.__@param recordDeserializer de-serializer to use for the buffer_@param delegate de-serialization delegate to use for non-event buffers_@param buffer the buffer to add_@param outputList the output list to add the object to_@param <T> type of the objects behind the non-event buffers__@throws java.io.IOException;private <T> void addBufferToOutputList(_		RecordDeserializer<DeserializationDelegate<T>> recordDeserializer,_		NonReusingDeserializationDelegate<T> delegate, Buffer buffer,_		final Queue<Object> outputList) throws java.io.IOException {_		if (buffer.isBuffer()) {_			recordDeserializer.setNextBuffer(buffer)___			while (recordDeserializer.hasUnfinishedData()) {_				RecordDeserializer.DeserializationResult result =_					recordDeserializer.getNextRecord(delegate)___				if (result.isFullRecord()) {_					outputList.add(delegate.getInstance())__				}__				if (result == RecordDeserializer.DeserializationResult.LAST_RECORD_FROM_BUFFER_					|| result == RecordDeserializer.DeserializationResult.PARTIAL_RECORD) {_					break__				}_			}_		} else {_			_			AbstractEvent event = EventSerializer.fromBuffer(buffer, getClass().getClassLoader())__			outputList.add(event)__		}_	};adds,the,object,behind,the,given,tt,buffer,tt,to,the,tt,output,list,tt,param,record,deserializer,de,serializer,to,use,for,the,buffer,param,delegate,de,serialization,delegate,to,use,for,non,event,buffers,param,buffer,the,buffer,to,add,param,output,list,the,output,list,to,add,the,object,to,param,t,type,of,the,objects,behind,the,non,event,buffers,throws,java,io,ioexception;private,t,void,add,buffer,to,output,list,record,deserializer,deserialization,delegate,t,record,deserializer,non,reusing,deserialization,delegate,t,delegate,buffer,buffer,final,queue,object,output,list,throws,java,io,ioexception,if,buffer,is,buffer,record,deserializer,set,next,buffer,buffer,while,record,deserializer,has,unfinished,data,record,deserializer,deserialization,result,result,record,deserializer,get,next,record,delegate,if,result,is,full,record,output,list,add,delegate,get,instance,if,result,record,deserializer,deserialization,result,result,record,deserializer,deserialization,result,break,else,abstract,event,event,event,serializer,from,buffer,buffer,get,class,get,class,loader,output,list,add,event
StreamMockEnvironment -> private <T> void addBufferToOutputList( 		RecordDeserializer<DeserializationDelegate<T>> recordDeserializer, 		NonReusingDeserializationDelegate<T> delegate, Buffer buffer, 		final Queue<Object> outputList) throws java.io.IOException;1487762095;Adds the object behind the given <tt>buffer</tt> to the <tt>outputList</tt>.__@param recordDeserializer de-serializer to use for the buffer_@param delegate de-serialization delegate to use for non-event buffers_@param buffer the buffer to add_@param outputList the output list to add the object to_@param <T> type of the objects behind the non-event buffers__@throws java.io.IOException;private <T> void addBufferToOutputList(_		RecordDeserializer<DeserializationDelegate<T>> recordDeserializer,_		NonReusingDeserializationDelegate<T> delegate, Buffer buffer,_		final Queue<Object> outputList) throws java.io.IOException {_		if (buffer.isBuffer()) {_			recordDeserializer.setNextBuffer(buffer)___			while (recordDeserializer.hasUnfinishedData()) {_				RecordDeserializer.DeserializationResult result =_					recordDeserializer.getNextRecord(delegate)___				if (result.isFullRecord()) {_					outputList.add(delegate.getInstance())__				}__				if (result == RecordDeserializer.DeserializationResult.LAST_RECORD_FROM_BUFFER_					|| result == RecordDeserializer.DeserializationResult.PARTIAL_RECORD) {_					break__				}_			}_		} else {_			_			AbstractEvent event = EventSerializer.fromBuffer(buffer, getClass().getClassLoader())__			outputList.add(event)__		}_	};adds,the,object,behind,the,given,tt,buffer,tt,to,the,tt,output,list,tt,param,record,deserializer,de,serializer,to,use,for,the,buffer,param,delegate,de,serialization,delegate,to,use,for,non,event,buffers,param,buffer,the,buffer,to,add,param,output,list,the,output,list,to,add,the,object,to,param,t,type,of,the,objects,behind,the,non,event,buffers,throws,java,io,ioexception;private,t,void,add,buffer,to,output,list,record,deserializer,deserialization,delegate,t,record,deserializer,non,reusing,deserialization,delegate,t,delegate,buffer,buffer,final,queue,object,output,list,throws,java,io,ioexception,if,buffer,is,buffer,record,deserializer,set,next,buffer,buffer,while,record,deserializer,has,unfinished,data,record,deserializer,deserialization,result,result,record,deserializer,get,next,record,delegate,if,result,is,full,record,output,list,add,delegate,get,instance,if,result,record,deserializer,deserialization,result,result,record,deserializer,deserialization,result,break,else,abstract,event,event,event,serializer,from,buffer,buffer,get,class,get,class,loader,output,list,add,event
StreamMockEnvironment -> private <T> void addBufferToOutputList( 		RecordDeserializer<DeserializationDelegate<T>> recordDeserializer, 		NonReusingDeserializationDelegate<T> delegate, Buffer buffer, 		final Queue<Object> outputList) throws java.io.IOException;1493195810;Adds the object behind the given <tt>buffer</tt> to the <tt>outputList</tt>.__@param recordDeserializer de-serializer to use for the buffer_@param delegate de-serialization delegate to use for non-event buffers_@param buffer the buffer to add_@param outputList the output list to add the object to_@param <T> type of the objects behind the non-event buffers__@throws java.io.IOException;private <T> void addBufferToOutputList(_		RecordDeserializer<DeserializationDelegate<T>> recordDeserializer,_		NonReusingDeserializationDelegate<T> delegate, Buffer buffer,_		final Queue<Object> outputList) throws java.io.IOException {_		if (buffer.isBuffer()) {_			recordDeserializer.setNextBuffer(buffer)___			while (recordDeserializer.hasUnfinishedData()) {_				RecordDeserializer.DeserializationResult result =_					recordDeserializer.getNextRecord(delegate)___				if (result.isFullRecord()) {_					outputList.add(delegate.getInstance())__				}__				if (result == RecordDeserializer.DeserializationResult.LAST_RECORD_FROM_BUFFER_					|| result == RecordDeserializer.DeserializationResult.PARTIAL_RECORD) {_					break__				}_			}_		} else {_			_			AbstractEvent event = EventSerializer.fromBuffer(buffer, getClass().getClassLoader())__			outputList.add(event)__		}_	};adds,the,object,behind,the,given,tt,buffer,tt,to,the,tt,output,list,tt,param,record,deserializer,de,serializer,to,use,for,the,buffer,param,delegate,de,serialization,delegate,to,use,for,non,event,buffers,param,buffer,the,buffer,to,add,param,output,list,the,output,list,to,add,the,object,to,param,t,type,of,the,objects,behind,the,non,event,buffers,throws,java,io,ioexception;private,t,void,add,buffer,to,output,list,record,deserializer,deserialization,delegate,t,record,deserializer,non,reusing,deserialization,delegate,t,delegate,buffer,buffer,final,queue,object,output,list,throws,java,io,ioexception,if,buffer,is,buffer,record,deserializer,set,next,buffer,buffer,while,record,deserializer,has,unfinished,data,record,deserializer,deserialization,result,result,record,deserializer,get,next,record,delegate,if,result,is,full,record,output,list,add,delegate,get,instance,if,result,record,deserializer,deserialization,result,result,record,deserializer,deserialization,result,break,else,abstract,event,event,event,serializer,from,buffer,buffer,get,class,get,class,loader,output,list,add,event
StreamMockEnvironment -> private <T> void addBufferToOutputList( 		RecordDeserializer<DeserializationDelegate<T>> recordDeserializer, 		NonReusingDeserializationDelegate<T> delegate, Buffer buffer, 		final Queue<Object> outputList) throws java.io.IOException;1495484544;Adds the object behind the given <tt>buffer</tt> to the <tt>outputList</tt>.__@param recordDeserializer de-serializer to use for the buffer_@param delegate de-serialization delegate to use for non-event buffers_@param buffer the buffer to add_@param outputList the output list to add the object to_@param <T> type of the objects behind the non-event buffers__@throws java.io.IOException;private <T> void addBufferToOutputList(_		RecordDeserializer<DeserializationDelegate<T>> recordDeserializer,_		NonReusingDeserializationDelegate<T> delegate, Buffer buffer,_		final Queue<Object> outputList) throws java.io.IOException {_		if (buffer.isBuffer()) {_			recordDeserializer.setNextBuffer(buffer)___			while (recordDeserializer.hasUnfinishedData()) {_				RecordDeserializer.DeserializationResult result =_					recordDeserializer.getNextRecord(delegate)___				if (result.isFullRecord()) {_					outputList.add(delegate.getInstance())__				}__				if (result == RecordDeserializer.DeserializationResult.LAST_RECORD_FROM_BUFFER_					|| result == RecordDeserializer.DeserializationResult.PARTIAL_RECORD) {_					break__				}_			}_		} else {_			_			AbstractEvent event = EventSerializer.fromBuffer(buffer, getClass().getClassLoader())__			outputList.add(event)__		}_	};adds,the,object,behind,the,given,tt,buffer,tt,to,the,tt,output,list,tt,param,record,deserializer,de,serializer,to,use,for,the,buffer,param,delegate,de,serialization,delegate,to,use,for,non,event,buffers,param,buffer,the,buffer,to,add,param,output,list,the,output,list,to,add,the,object,to,param,t,type,of,the,objects,behind,the,non,event,buffers,throws,java,io,ioexception;private,t,void,add,buffer,to,output,list,record,deserializer,deserialization,delegate,t,record,deserializer,non,reusing,deserialization,delegate,t,delegate,buffer,buffer,final,queue,object,output,list,throws,java,io,ioexception,if,buffer,is,buffer,record,deserializer,set,next,buffer,buffer,while,record,deserializer,has,unfinished,data,record,deserializer,deserialization,result,result,record,deserializer,get,next,record,delegate,if,result,is,full,record,output,list,add,delegate,get,instance,if,result,record,deserializer,deserialization,result,result,record,deserializer,deserialization,result,break,else,abstract,event,event,event,serializer,from,buffer,buffer,get,class,get,class,loader,output,list,add,event
StreamMockEnvironment -> private <T> void addBufferToOutputList( 		RecordDeserializer<DeserializationDelegate<T>> recordDeserializer, 		NonReusingDeserializationDelegate<T> delegate, Buffer buffer, 		final Queue<Object> outputList) throws java.io.IOException;1502801814;Adds the object behind the given <tt>buffer</tt> to the <tt>outputList</tt>.__@param recordDeserializer de-serializer to use for the buffer_@param delegate de-serialization delegate to use for non-event buffers_@param buffer the buffer to add_@param outputList the output list to add the object to_@param <T> type of the objects behind the non-event buffers__@throws java.io.IOException;private <T> void addBufferToOutputList(_		RecordDeserializer<DeserializationDelegate<T>> recordDeserializer,_		NonReusingDeserializationDelegate<T> delegate, Buffer buffer,_		final Queue<Object> outputList) throws java.io.IOException {_		if (buffer.isBuffer()) {_			recordDeserializer.setNextBuffer(buffer)___			while (recordDeserializer.hasUnfinishedData()) {_				RecordDeserializer.DeserializationResult result =_					recordDeserializer.getNextRecord(delegate)___				if (result.isFullRecord()) {_					outputList.add(delegate.getInstance())__				}__				if (result == RecordDeserializer.DeserializationResult.LAST_RECORD_FROM_BUFFER_					|| result == RecordDeserializer.DeserializationResult.PARTIAL_RECORD) {_					break__				}_			}_		} else {_			_			AbstractEvent event = EventSerializer.fromBuffer(buffer, getClass().getClassLoader())__			outputList.add(event)__		}_	};adds,the,object,behind,the,given,tt,buffer,tt,to,the,tt,output,list,tt,param,record,deserializer,de,serializer,to,use,for,the,buffer,param,delegate,de,serialization,delegate,to,use,for,non,event,buffers,param,buffer,the,buffer,to,add,param,output,list,the,output,list,to,add,the,object,to,param,t,type,of,the,objects,behind,the,non,event,buffers,throws,java,io,ioexception;private,t,void,add,buffer,to,output,list,record,deserializer,deserialization,delegate,t,record,deserializer,non,reusing,deserialization,delegate,t,delegate,buffer,buffer,final,queue,object,output,list,throws,java,io,ioexception,if,buffer,is,buffer,record,deserializer,set,next,buffer,buffer,while,record,deserializer,has,unfinished,data,record,deserializer,deserialization,result,result,record,deserializer,get,next,record,delegate,if,result,is,full,record,output,list,add,delegate,get,instance,if,result,record,deserializer,deserialization,result,result,record,deserializer,deserialization,result,break,else,abstract,event,event,event,serializer,from,buffer,buffer,get,class,get,class,loader,output,list,add,event
StreamMockEnvironment -> private <T> void addBufferToOutputList( 		RecordDeserializer<DeserializationDelegate<T>> recordDeserializer, 		NonReusingDeserializationDelegate<T> delegate, Buffer buffer, 		final Queue<Object> outputList) throws java.io.IOException;1513094474;Adds the object behind the given <tt>buffer</tt> to the <tt>outputList</tt>.__@param recordDeserializer de-serializer to use for the buffer_@param delegate de-serialization delegate to use for non-event buffers_@param buffer the buffer to add_@param outputList the output list to add the object to_@param <T> type of the objects behind the non-event buffers__@throws java.io.IOException;private <T> void addBufferToOutputList(_		RecordDeserializer<DeserializationDelegate<T>> recordDeserializer,_		NonReusingDeserializationDelegate<T> delegate, Buffer buffer,_		final Queue<Object> outputList) throws java.io.IOException {_		if (buffer.isBuffer()) {_			recordDeserializer.setNextBuffer(buffer)___			while (recordDeserializer.hasUnfinishedData()) {_				RecordDeserializer.DeserializationResult result =_					recordDeserializer.getNextRecord(delegate)___				if (result.isFullRecord()) {_					outputList.add(delegate.getInstance())__				}__				if (result == RecordDeserializer.DeserializationResult.LAST_RECORD_FROM_BUFFER_					|| result == RecordDeserializer.DeserializationResult.PARTIAL_RECORD) {_					break__				}_			}_		} else {_			_			AbstractEvent event = EventSerializer.fromBuffer(buffer, getClass().getClassLoader())__			outputList.add(event)__		}_	};adds,the,object,behind,the,given,tt,buffer,tt,to,the,tt,output,list,tt,param,record,deserializer,de,serializer,to,use,for,the,buffer,param,delegate,de,serialization,delegate,to,use,for,non,event,buffers,param,buffer,the,buffer,to,add,param,output,list,the,output,list,to,add,the,object,to,param,t,type,of,the,objects,behind,the,non,event,buffers,throws,java,io,ioexception;private,t,void,add,buffer,to,output,list,record,deserializer,deserialization,delegate,t,record,deserializer,non,reusing,deserialization,delegate,t,delegate,buffer,buffer,final,queue,object,output,list,throws,java,io,ioexception,if,buffer,is,buffer,record,deserializer,set,next,buffer,buffer,while,record,deserializer,has,unfinished,data,record,deserializer,deserialization,result,result,record,deserializer,get,next,record,delegate,if,result,is,full,record,output,list,add,delegate,get,instance,if,result,record,deserializer,deserialization,result,result,record,deserializer,deserialization,result,break,else,abstract,event,event,event,serializer,from,buffer,buffer,get,class,get,class,loader,output,list,add,event
StreamMockEnvironment -> private <T> void addBufferToOutputList( 		RecordDeserializer<DeserializationDelegate<T>> recordDeserializer, 		NonReusingDeserializationDelegate<T> delegate, Buffer buffer, 		final Queue<Object> outputList) throws java.io.IOException;1513102147;Adds the object behind the given <tt>buffer</tt> to the <tt>outputList</tt>.__@param recordDeserializer de-serializer to use for the buffer_@param delegate de-serialization delegate to use for non-event buffers_@param buffer the buffer to add_@param outputList the output list to add the object to_@param <T> type of the objects behind the non-event buffers__@throws java.io.IOException;private <T> void addBufferToOutputList(_		RecordDeserializer<DeserializationDelegate<T>> recordDeserializer,_		NonReusingDeserializationDelegate<T> delegate, Buffer buffer,_		final Queue<Object> outputList) throws java.io.IOException {_		if (buffer.isBuffer()) {_			recordDeserializer.setNextBuffer(buffer)___			while (recordDeserializer.hasUnfinishedData()) {_				RecordDeserializer.DeserializationResult result =_					recordDeserializer.getNextRecord(delegate)___				if (result.isFullRecord()) {_					outputList.add(delegate.getInstance())__				}__				if (result == RecordDeserializer.DeserializationResult.LAST_RECORD_FROM_BUFFER_					|| result == RecordDeserializer.DeserializationResult.PARTIAL_RECORD) {_					break__				}_			}_		} else {_			_			AbstractEvent event = EventSerializer.fromBuffer(buffer, getClass().getClassLoader())__			outputList.add(event)__		}_	};adds,the,object,behind,the,given,tt,buffer,tt,to,the,tt,output,list,tt,param,record,deserializer,de,serializer,to,use,for,the,buffer,param,delegate,de,serialization,delegate,to,use,for,non,event,buffers,param,buffer,the,buffer,to,add,param,output,list,the,output,list,to,add,the,object,to,param,t,type,of,the,objects,behind,the,non,event,buffers,throws,java,io,ioexception;private,t,void,add,buffer,to,output,list,record,deserializer,deserialization,delegate,t,record,deserializer,non,reusing,deserialization,delegate,t,delegate,buffer,buffer,final,queue,object,output,list,throws,java,io,ioexception,if,buffer,is,buffer,record,deserializer,set,next,buffer,buffer,while,record,deserializer,has,unfinished,data,record,deserializer,deserialization,result,result,record,deserializer,get,next,record,delegate,if,result,is,full,record,output,list,add,delegate,get,instance,if,result,record,deserializer,deserialization,result,result,record,deserializer,deserialization,result,break,else,abstract,event,event,event,serializer,from,buffer,buffer,get,class,get,class,loader,output,list,add,event
StreamMockEnvironment -> private <T> void addBufferToOutputList( 		RecordDeserializer<DeserializationDelegate<T>> recordDeserializer, 		NonReusingDeserializationDelegate<T> delegate, Buffer buffer, 		final Queue<Object> outputList) throws java.io.IOException;1513102156;Adds the object behind the given <tt>buffer</tt> to the <tt>outputList</tt>.__@param recordDeserializer de-serializer to use for the buffer_@param delegate de-serialization delegate to use for non-event buffers_@param buffer the buffer to add_@param outputList the output list to add the object to_@param <T> type of the objects behind the non-event buffers__@throws java.io.IOException;private <T> void addBufferToOutputList(_		RecordDeserializer<DeserializationDelegate<T>> recordDeserializer,_		NonReusingDeserializationDelegate<T> delegate, Buffer buffer,_		final Queue<Object> outputList) throws java.io.IOException {_		if (buffer.isBuffer()) {_			recordDeserializer.setNextBuffer(buffer)___			while (recordDeserializer.hasUnfinishedData()) {_				RecordDeserializer.DeserializationResult result =_					recordDeserializer.getNextRecord(delegate)___				if (result.isFullRecord()) {_					outputList.add(delegate.getInstance())__				}__				if (result == RecordDeserializer.DeserializationResult.LAST_RECORD_FROM_BUFFER_					|| result == RecordDeserializer.DeserializationResult.PARTIAL_RECORD) {_					break__				}_			}_		} else {_			_			AbstractEvent event = EventSerializer.fromBuffer(buffer, getClass().getClassLoader())__			outputList.add(event)__		}_	};adds,the,object,behind,the,given,tt,buffer,tt,to,the,tt,output,list,tt,param,record,deserializer,de,serializer,to,use,for,the,buffer,param,delegate,de,serialization,delegate,to,use,for,non,event,buffers,param,buffer,the,buffer,to,add,param,output,list,the,output,list,to,add,the,object,to,param,t,type,of,the,objects,behind,the,non,event,buffers,throws,java,io,ioexception;private,t,void,add,buffer,to,output,list,record,deserializer,deserialization,delegate,t,record,deserializer,non,reusing,deserialization,delegate,t,delegate,buffer,buffer,final,queue,object,output,list,throws,java,io,ioexception,if,buffer,is,buffer,record,deserializer,set,next,buffer,buffer,while,record,deserializer,has,unfinished,data,record,deserializer,deserialization,result,result,record,deserializer,get,next,record,delegate,if,result,is,full,record,output,list,add,delegate,get,instance,if,result,record,deserializer,deserialization,result,result,record,deserializer,deserialization,result,break,else,abstract,event,event,event,serializer,from,buffer,buffer,get,class,get,class,loader,output,list,add,event
