commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public Integer getKey(Integer value) throws Exception {     return value. }
false;protected;5;39;;protected <W extends Window, OUT> KeyedOneInputStreamOperatorTestHarness<Integer, Integer, OUT> createWindowOperator(WindowAssigner<Integer, W> assigner, Trigger<Integer, W> trigger, long allowedLatenss, InternalWindowFunction<Iterable<Integer>, OUT, Integer, W> windowFunction, OutputTag<Integer> lateOutputTag) throws Exception {     KeySelector<Integer, Integer> keySelector = new KeySelector<Integer, Integer>() {          private static final long serialVersionUID = 1L.          @Override         public Integer getKey(Integer value) throws Exception {             return value.         }     }.     ListStateDescriptor<StreamRecord<Integer>> intListDescriptor = new ListStateDescriptor<>("int-list", (TypeSerializer<StreamRecord<Integer>>) new StreamElementSerializer(IntSerializer.INSTANCE)).     @SuppressWarnings("unchecked")     EvictingWindowOperator<Integer, Integer, OUT, W> operator = new EvictingWindowOperator<>(assigner, assigner.getWindowSerializer(new ExecutionConfig()), keySelector, IntSerializer.INSTANCE, intListDescriptor, windowFunction, trigger, CountEvictor.<W>of(100), allowedLatenss, lateOutputTag).     return new KeyedOneInputStreamOperatorTestHarness<>(operator, keySelector, BasicTypeInfo.INT_TYPE_INFO). }
false;protected;4;13;;protected <W extends Window, OUT> KeyedOneInputStreamOperatorTestHarness<Integer, Integer, OUT> createWindowOperator(WindowAssigner<Integer, W> assigner, Trigger<Integer, W> trigger, long allowedLatenss, InternalWindowFunction<Iterable<Integer>, OUT, Integer, W> windowFunction) throws Exception {     return createWindowOperator(assigner, trigger, allowedLatenss, windowFunction, null). }
