# id;timestamp;commentText;codeText;commentWords;codeWords
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task, 			TypeInformation<IN> inputType, 			TypeInformation<OUT> outputType);1445418103;Creates a test harness with one input gate that has one input channel.;public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task,_			TypeInformation<IN> inputType,_			TypeInformation<OUT> outputType) {_		this(task, 1, 1, inputType, outputType)__	};creates,a,test,harness,with,one,input,gate,that,has,one,input,channel;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,type,information,in,input,type,type,information,out,output,type,this,task,1,1,input,type,output,type
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task, 			TypeInformation<IN> inputType, 			TypeInformation<OUT> outputType);1446112342;Creates a test harness with one input gate that has one input channel.;public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task,_			TypeInformation<IN> inputType,_			TypeInformation<OUT> outputType) {_		this(task, 1, 1, inputType, outputType)__	};creates,a,test,harness,with,one,input,gate,that,has,one,input,channel;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,type,information,in,input,type,type,information,out,output,type,this,task,1,1,input,type,output,type
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task, 			TypeInformation<IN> inputType, 			TypeInformation<OUT> outputType);1453902315;Creates a test harness with one input gate that has one input channel.;public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task,_			TypeInformation<IN> inputType,_			TypeInformation<OUT> outputType) {_		this(task, 1, 1, inputType, outputType)__	};creates,a,test,harness,with,one,input,gate,that,has,one,input,channel;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,type,information,in,input,type,type,information,out,output,type,this,task,1,1,input,type,output,type
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task, 			TypeInformation<IN> inputType, 			TypeInformation<OUT> outputType);1455314354;Creates a test harness with one input gate that has one input channel.;public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task,_			TypeInformation<IN> inputType,_			TypeInformation<OUT> outputType) {_		this(task, 1, 1, inputType, outputType)__	};creates,a,test,harness,with,one,input,gate,that,has,one,input,channel;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,type,information,in,input,type,type,information,out,output,type,this,task,1,1,input,type,output,type
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task, 			TypeInformation<IN> inputType, 			TypeInformation<OUT> outputType);1472663071;Creates a test harness with one input gate that has one input channel.;public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task,_			TypeInformation<IN> inputType,_			TypeInformation<OUT> outputType) {_		this(task, 1, 1, inputType, outputType)__	};creates,a,test,harness,with,one,input,gate,that,has,one,input,channel;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,type,information,in,input,type,type,information,out,output,type,this,task,1,1,input,type,output,type
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task, 			TypeInformation<IN> inputType, 			TypeInformation<OUT> outputType);1472663401;Creates a test harness with one input gate that has one input channel.;public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task,_			TypeInformation<IN> inputType,_			TypeInformation<OUT> outputType) {_		this(task, 1, 1, inputType, outputType)__	};creates,a,test,harness,with,one,input,gate,that,has,one,input,channel;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,type,information,in,input,type,type,information,out,output,type,this,task,1,1,input,type,output,type
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task, 			TypeInformation<IN> inputType, 			TypeInformation<OUT> outputType);1477517188;Creates a test harness with one input gate that has one input channel.;public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task,_			TypeInformation<IN> inputType,_			TypeInformation<OUT> outputType) {_		this(task, 1, 1, inputType, outputType)__	};creates,a,test,harness,with,one,input,gate,that,has,one,input,channel;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,type,information,in,input,type,type,information,out,output,type,this,task,1,1,input,type,output,type
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task, 			TypeInformation<IN> inputType, 			TypeInformation<OUT> outputType);1478257462;Creates a test harness with one input gate that has one input channel.;public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task,_			TypeInformation<IN> inputType,_			TypeInformation<OUT> outputType) {_		this(task, 1, 1, inputType, outputType)__	};creates,a,test,harness,with,one,input,gate,that,has,one,input,channel;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,type,information,in,input,type,type,information,out,output,type,this,task,1,1,input,type,output,type
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task, 			int numInputGates, 			int numInputChannelsPerGate, 			TypeInformation<IN> inputType, 			TypeInformation<OUT> outputType);1445418103;Creates a test harness with the specified number of input gates and specified number_of channels per input gate.;public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task,_			int numInputGates,_			int numInputChannelsPerGate,_			TypeInformation<IN> inputType,_			TypeInformation<OUT> outputType) {_		super(task, outputType)___		this.inputType = inputType__		inputSerializer = inputType.createSerializer(executionConfig)___		this.numInputGates = numInputGates__		this.numInputChannelsPerGate = numInputChannelsPerGate__	};creates,a,test,harness,with,the,specified,number,of,input,gates,and,specified,number,of,channels,per,input,gate;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,int,num,input,gates,int,num,input,channels,per,gate,type,information,in,input,type,type,information,out,output,type,super,task,output,type,this,input,type,input,type,input,serializer,input,type,create,serializer,execution,config,this,num,input,gates,num,input,gates,this,num,input,channels,per,gate,num,input,channels,per,gate
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task, 			int numInputGates, 			int numInputChannelsPerGate, 			TypeInformation<IN> inputType, 			TypeInformation<OUT> outputType);1446112342;Creates a test harness with the specified number of input gates and specified number_of channels per input gate.;public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task,_			int numInputGates,_			int numInputChannelsPerGate,_			TypeInformation<IN> inputType,_			TypeInformation<OUT> outputType) {_		super(task, outputType)___		this.inputType = inputType__		inputSerializer = inputType.createSerializer(executionConfig)___		this.numInputGates = numInputGates__		this.numInputChannelsPerGate = numInputChannelsPerGate__	};creates,a,test,harness,with,the,specified,number,of,input,gates,and,specified,number,of,channels,per,input,gate;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,int,num,input,gates,int,num,input,channels,per,gate,type,information,in,input,type,type,information,out,output,type,super,task,output,type,this,input,type,input,type,input,serializer,input,type,create,serializer,execution,config,this,num,input,gates,num,input,gates,this,num,input,channels,per,gate,num,input,channels,per,gate
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task, 			int numInputGates, 			int numInputChannelsPerGate, 			TypeInformation<IN> inputType, 			TypeInformation<OUT> outputType);1453902315;Creates a test harness with the specified number of input gates and specified number_of channels per input gate.;public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task,_			int numInputGates,_			int numInputChannelsPerGate,_			TypeInformation<IN> inputType,_			TypeInformation<OUT> outputType) {_		super(task, outputType)___		this.inputType = inputType__		inputSerializer = inputType.createSerializer(executionConfig)___		this.numInputGates = numInputGates__		this.numInputChannelsPerGate = numInputChannelsPerGate__	};creates,a,test,harness,with,the,specified,number,of,input,gates,and,specified,number,of,channels,per,input,gate;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,int,num,input,gates,int,num,input,channels,per,gate,type,information,in,input,type,type,information,out,output,type,super,task,output,type,this,input,type,input,type,input,serializer,input,type,create,serializer,execution,config,this,num,input,gates,num,input,gates,this,num,input,channels,per,gate,num,input,channels,per,gate
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task, 			int numInputGates, 			int numInputChannelsPerGate, 			TypeInformation<IN> inputType, 			TypeInformation<OUT> outputType);1455314354;Creates a test harness with the specified number of input gates and specified number_of channels per input gate.;public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task,_			int numInputGates,_			int numInputChannelsPerGate,_			TypeInformation<IN> inputType,_			TypeInformation<OUT> outputType) {_		super(task, outputType)___		this.inputType = inputType__		inputSerializer = inputType.createSerializer(executionConfig)___		this.numInputGates = numInputGates__		this.numInputChannelsPerGate = numInputChannelsPerGate__	};creates,a,test,harness,with,the,specified,number,of,input,gates,and,specified,number,of,channels,per,input,gate;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,int,num,input,gates,int,num,input,channels,per,gate,type,information,in,input,type,type,information,out,output,type,super,task,output,type,this,input,type,input,type,input,serializer,input,type,create,serializer,execution,config,this,num,input,gates,num,input,gates,this,num,input,channels,per,gate,num,input,channels,per,gate
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task, 			int numInputGates, 			int numInputChannelsPerGate, 			TypeInformation<IN> inputType, 			TypeInformation<OUT> outputType);1472663071;Creates a test harness with the specified number of input gates and specified number_of channels per input gate.;public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task,_			int numInputGates,_			int numInputChannelsPerGate,_			TypeInformation<IN> inputType,_			TypeInformation<OUT> outputType) {_		super(task, outputType)___		this.inputType = inputType__		inputSerializer = inputType.createSerializer(executionConfig)___		this.numInputGates = numInputGates__		this.numInputChannelsPerGate = numInputChannelsPerGate__	};creates,a,test,harness,with,the,specified,number,of,input,gates,and,specified,number,of,channels,per,input,gate;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,int,num,input,gates,int,num,input,channels,per,gate,type,information,in,input,type,type,information,out,output,type,super,task,output,type,this,input,type,input,type,input,serializer,input,type,create,serializer,execution,config,this,num,input,gates,num,input,gates,this,num,input,channels,per,gate,num,input,channels,per,gate
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task, 			int numInputGates, 			int numInputChannelsPerGate, 			TypeInformation<IN> inputType, 			TypeInformation<OUT> outputType);1472663401;Creates a test harness with the specified number of input gates and specified number_of channels per input gate.;public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task,_			int numInputGates,_			int numInputChannelsPerGate,_			TypeInformation<IN> inputType,_			TypeInformation<OUT> outputType) {_		super(task, outputType)___		this.inputType = inputType__		inputSerializer = inputType.createSerializer(executionConfig)___		this.numInputGates = numInputGates__		this.numInputChannelsPerGate = numInputChannelsPerGate__	};creates,a,test,harness,with,the,specified,number,of,input,gates,and,specified,number,of,channels,per,input,gate;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,int,num,input,gates,int,num,input,channels,per,gate,type,information,in,input,type,type,information,out,output,type,super,task,output,type,this,input,type,input,type,input,serializer,input,type,create,serializer,execution,config,this,num,input,gates,num,input,gates,this,num,input,channels,per,gate,num,input,channels,per,gate
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task, 			int numInputGates, 			int numInputChannelsPerGate, 			TypeInformation<IN> inputType, 			TypeInformation<OUT> outputType);1477517188;Creates a test harness with the specified number of input gates and specified number_of channels per input gate.;public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task,_			int numInputGates,_			int numInputChannelsPerGate,_			TypeInformation<IN> inputType,_			TypeInformation<OUT> outputType) {_		super(task, outputType)___		this.inputType = inputType__		inputSerializer = inputType.createSerializer(executionConfig)___		this.numInputGates = numInputGates__		this.numInputChannelsPerGate = numInputChannelsPerGate__	};creates,a,test,harness,with,the,specified,number,of,input,gates,and,specified,number,of,channels,per,input,gate;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,int,num,input,gates,int,num,input,channels,per,gate,type,information,in,input,type,type,information,out,output,type,super,task,output,type,this,input,type,input,type,input,serializer,input,type,create,serializer,execution,config,this,num,input,gates,num,input,gates,this,num,input,channels,per,gate,num,input,channels,per,gate
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task, 			int numInputGates, 			int numInputChannelsPerGate, 			TypeInformation<IN> inputType, 			TypeInformation<OUT> outputType);1478257462;Creates a test harness with the specified number of input gates and specified number_of channels per input gate.;public OneInputStreamTaskTestHarness(OneInputStreamTask<IN, OUT> task,_			int numInputGates,_			int numInputChannelsPerGate,_			TypeInformation<IN> inputType,_			TypeInformation<OUT> outputType) {_		super(task, outputType)___		this.inputType = inputType__		inputSerializer = inputType.createSerializer(executionConfig)___		this.numInputGates = numInputGates__		this.numInputChannelsPerGate = numInputChannelsPerGate__	};creates,a,test,harness,with,the,specified,number,of,input,gates,and,specified,number,of,channels,per,input,gate;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,int,num,input,gates,int,num,input,channels,per,gate,type,information,in,input,type,type,information,out,output,type,super,task,output,type,this,input,type,input,type,input,serializer,input,type,create,serializer,execution,config,this,num,input,gates,num,input,gates,this,num,input,channels,per,gate,num,input,channels,per,gate
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness( 		OneInputStreamTask<IN, OUT> task, 		int numInputGates, 		int numInputChannelsPerGate, 		TypeInformation<IN> inputType, 		TypeInformation<OUT> outputType);1480624969;Creates a test harness with the specified number of input gates and specified number_of channels per input gate.;public OneInputStreamTaskTestHarness(_		OneInputStreamTask<IN, OUT> task,_		int numInputGates,_		int numInputChannelsPerGate,_		TypeInformation<IN> inputType,_		TypeInformation<OUT> outputType) {_		_		super(task, outputType)___		this.inputType = inputType__		inputSerializer = inputType.createSerializer(executionConfig)___		this.numInputGates = numInputGates__		this.numInputChannelsPerGate = numInputChannelsPerGate__	};creates,a,test,harness,with,the,specified,number,of,input,gates,and,specified,number,of,channels,per,input,gate;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,int,num,input,gates,int,num,input,channels,per,gate,type,information,in,input,type,type,information,out,output,type,super,task,output,type,this,input,type,input,type,input,serializer,input,type,create,serializer,execution,config,this,num,input,gates,num,input,gates,this,num,input,channels,per,gate,num,input,channels,per,gate
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness( 		OneInputStreamTask<IN, OUT> task, 		int numInputGates, 		int numInputChannelsPerGate, 		TypeInformation<IN> inputType, 		TypeInformation<OUT> outputType);1493195810;Creates a test harness with the specified number of input gates and specified number_of channels per input gate.;public OneInputStreamTaskTestHarness(_		OneInputStreamTask<IN, OUT> task,_		int numInputGates,_		int numInputChannelsPerGate,_		TypeInformation<IN> inputType,_		TypeInformation<OUT> outputType) {_		_		super(task, outputType)___		this.inputType = inputType__		inputSerializer = inputType.createSerializer(executionConfig)___		this.numInputGates = numInputGates__		this.numInputChannelsPerGate = numInputChannelsPerGate__	};creates,a,test,harness,with,the,specified,number,of,input,gates,and,specified,number,of,channels,per,input,gate;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,int,num,input,gates,int,num,input,channels,per,gate,type,information,in,input,type,type,information,out,output,type,super,task,output,type,this,input,type,input,type,input,serializer,input,type,create,serializer,execution,config,this,num,input,gates,num,input,gates,this,num,input,channels,per,gate,num,input,channels,per,gate
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness( 		OneInputStreamTask<IN, OUT> task, 		int numInputGates, 		int numInputChannelsPerGate, 		TypeInformation<IN> inputType, 		TypeInformation<OUT> outputType);1493195810;Creates a test harness with the specified number of input gates and specified number_of channels per input gate.;public OneInputStreamTaskTestHarness(_		OneInputStreamTask<IN, OUT> task,_		int numInputGates,_		int numInputChannelsPerGate,_		TypeInformation<IN> inputType,_		TypeInformation<OUT> outputType) {__		super(task, outputType)___		this.inputType = inputType__		inputSerializer = inputType.createSerializer(executionConfig)___		this.numInputGates = numInputGates__		this.numInputChannelsPerGate = numInputChannelsPerGate__	};creates,a,test,harness,with,the,specified,number,of,input,gates,and,specified,number,of,channels,per,input,gate;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,int,num,input,gates,int,num,input,channels,per,gate,type,information,in,input,type,type,information,out,output,type,super,task,output,type,this,input,type,input,type,input,serializer,input,type,create,serializer,execution,config,this,num,input,gates,num,input,gates,this,num,input,channels,per,gate,num,input,channels,per,gate
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness( 		OneInputStreamTask<IN, OUT> task, 		int numInputGates, 		int numInputChannelsPerGate, 		TypeInformation<IN> inputType, 		TypeInformation<OUT> outputType);1495484544;Creates a test harness with the specified number of input gates and specified number_of channels per input gate.;public OneInputStreamTaskTestHarness(_		OneInputStreamTask<IN, OUT> task,_		int numInputGates,_		int numInputChannelsPerGate,_		TypeInformation<IN> inputType,_		TypeInformation<OUT> outputType) {__		super(task, outputType)___		this.inputType = inputType__		inputSerializer = inputType.createSerializer(executionConfig)___		this.numInputGates = numInputGates__		this.numInputChannelsPerGate = numInputChannelsPerGate__	};creates,a,test,harness,with,the,specified,number,of,input,gates,and,specified,number,of,channels,per,input,gate;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,int,num,input,gates,int,num,input,channels,per,gate,type,information,in,input,type,type,information,out,output,type,super,task,output,type,this,input,type,input,type,input,serializer,input,type,create,serializer,execution,config,this,num,input,gates,num,input,gates,this,num,input,channels,per,gate,num,input,channels,per,gate
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness( 		OneInputStreamTask<IN, OUT> task, 		TypeInformation<IN> inputType, 		TypeInformation<OUT> outputType);1480624969;Creates a test harness with one input gate that has one input channel.;public OneInputStreamTaskTestHarness(_		OneInputStreamTask<IN, OUT> task,_		TypeInformation<IN> inputType,_		TypeInformation<OUT> outputType) {_		this(task, 1, 1, inputType, outputType)__	};creates,a,test,harness,with,one,input,gate,that,has,one,input,channel;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,type,information,in,input,type,type,information,out,output,type,this,task,1,1,input,type,output,type
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness( 		OneInputStreamTask<IN, OUT> task, 		TypeInformation<IN> inputType, 		TypeInformation<OUT> outputType);1493195810;Creates a test harness with one input gate that has one input channel.;public OneInputStreamTaskTestHarness(_		OneInputStreamTask<IN, OUT> task,_		TypeInformation<IN> inputType,_		TypeInformation<OUT> outputType) {_		this(task, 1, 1, inputType, outputType)__	};creates,a,test,harness,with,one,input,gate,that,has,one,input,channel;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,type,information,in,input,type,type,information,out,output,type,this,task,1,1,input,type,output,type
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness( 		OneInputStreamTask<IN, OUT> task, 		TypeInformation<IN> inputType, 		TypeInformation<OUT> outputType);1493195810;Creates a test harness with one input gate that has one input channel.;public OneInputStreamTaskTestHarness(_		OneInputStreamTask<IN, OUT> task,_		TypeInformation<IN> inputType,_		TypeInformation<OUT> outputType) {_		this(task, 1, 1, inputType, outputType)__	};creates,a,test,harness,with,one,input,gate,that,has,one,input,channel;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,type,information,in,input,type,type,information,out,output,type,this,task,1,1,input,type,output,type
OneInputStreamTaskTestHarness -> public OneInputStreamTaskTestHarness( 		OneInputStreamTask<IN, OUT> task, 		TypeInformation<IN> inputType, 		TypeInformation<OUT> outputType);1495484544;Creates a test harness with one input gate that has one input channel.;public OneInputStreamTaskTestHarness(_		OneInputStreamTask<IN, OUT> task,_		TypeInformation<IN> inputType,_		TypeInformation<OUT> outputType) {_		this(task, 1, 1, inputType, outputType)__	};creates,a,test,harness,with,one,input,gate,that,has,one,input,channel;public,one,input,stream,task,test,harness,one,input,stream,task,in,out,task,type,information,in,input,type,type,information,out,output,type,this,task,1,1,input,type,output,type
