commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;15;;@Override protected void initializeInputs() throws IOException, InterruptedException {     inputGates = new StreamTestSingleInputGate[numInputGates].     for (int i = 0. i < numInputGates. i++) {         inputGates[i] = new StreamTestSingleInputGate<IN>(numInputChannelsPerGate, bufferSize, inputSerializer).         this.mockEnv.addInputGate(inputGates[i].getInputGate()).     }     streamConfig.setNumberOfInputs(1).     streamConfig.setTypeSerializerIn1(inputSerializer). }
false;public;2;7;;public <K> void configureForKeyedStream(KeySelector<IN, K> keySelector, TypeInformation<K> keyType) {     ClosureCleaner.clean(keySelector, false).     streamConfig.setStatePartitioner(0, keySelector).     streamConfig.setStateKeySerializer(keyType.createSerializer(executionConfig)). }
false;public;0;5;;@Override @SuppressWarnings("unchecked") public OneInputStreamTask<IN, OUT> getTask() {     return (OneInputStreamTask<IN, OUT>) super.getTask(). }
