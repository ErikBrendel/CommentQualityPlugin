# id;timestamp;commentText;codeText;commentWords;codeWords
StreamNetworkThroughputBenchmark -> public void executeBenchmark(long records, long timeout) throws Exception;1519039302;Executes the throughput benchmark with the given number of records.__@param records to pass through the network stack;public void executeBenchmark(long records, long timeout) throws Exception {_		final LongValue value = new LongValue()__		value.setValue(0)___		long lastRecord = records / writerThreads.length__		CompletableFuture<?> recordsReceived = receiver.setExpectedRecord(lastRecord)___		for (LongRecordWriterThread writerThread : writerThreads) {_			writerThread.setRecordsToSend(lastRecord)__		}__		recordsReceived.get(timeout, TimeUnit.MILLISECONDS)__	};executes,the,throughput,benchmark,with,the,given,number,of,records,param,records,to,pass,through,the,network,stack;public,void,execute,benchmark,long,records,long,timeout,throws,exception,final,long,value,value,new,long,value,value,set,value,0,long,last,record,records,writer,threads,length,completable,future,records,received,receiver,set,expected,record,last,record,for,long,record,writer,thread,writer,thread,writer,threads,writer,thread,set,records,to,send,last,record,records,received,get,timeout,time,unit,milliseconds
StreamNetworkThroughputBenchmark -> public void executeBenchmark(long records, long timeout) throws Exception;1524407315;Executes the throughput benchmark with the given number of records.__@param records to pass through the network stack;public void executeBenchmark(long records, long timeout) throws Exception {_		final LongValue value = new LongValue()__		value.setValue(0)___		long lastRecord = records / writerThreads.length__		CompletableFuture<?> recordsReceived = receiver.setExpectedRecord(lastRecord)___		for (LongRecordWriterThread writerThread : writerThreads) {_			writerThread.setRecordsToSend(lastRecord)__		}__		recordsReceived.get(timeout, TimeUnit.MILLISECONDS)__	};executes,the,throughput,benchmark,with,the,given,number,of,records,param,records,to,pass,through,the,network,stack;public,void,execute,benchmark,long,records,long,timeout,throws,exception,final,long,value,value,new,long,value,value,set,value,0,long,last,record,records,writer,threads,length,completable,future,records,received,receiver,set,expected,record,last,record,for,long,record,writer,thread,writer,thread,writer,threads,writer,thread,set,records,to,send,last,record,records,received,get,timeout,time,unit,milliseconds
StreamNetworkThroughputBenchmark -> public void executeBenchmark(long records, long timeout) throws Exception;1536826628;Executes the throughput benchmark with the given number of records.__@param records to pass through the network stack;public void executeBenchmark(long records, long timeout) throws Exception {_		final LongValue value = new LongValue()__		value.setValue(0)___		long lastRecord = records / writerThreads.length__		CompletableFuture<?> recordsReceived = receiver.setExpectedRecord(lastRecord)___		for (LongRecordWriterThread writerThread : writerThreads) {_			writerThread.setRecordsToSend(lastRecord)__		}__		recordsReceived.get(timeout, TimeUnit.MILLISECONDS)__	};executes,the,throughput,benchmark,with,the,given,number,of,records,param,records,to,pass,through,the,network,stack;public,void,execute,benchmark,long,records,long,timeout,throws,exception,final,long,value,value,new,long,value,value,set,value,0,long,last,record,records,writer,threads,length,completable,future,records,received,receiver,set,expected,record,last,record,for,long,record,writer,thread,writer,thread,writer,threads,writer,thread,set,records,to,send,last,record,records,received,get,timeout,time,unit,milliseconds
StreamNetworkThroughputBenchmark -> public void executeBenchmark(long records, long timeout) throws Exception;1536826628;Executes the throughput benchmark with the given number of records.__@param records to pass through the network stack;public void executeBenchmark(long records, long timeout) throws Exception {_		final LongValue value = new LongValue()__		value.setValue(0)___		long lastRecord = records / writerThreads.length__		CompletableFuture<?> recordsReceived = receiver.setExpectedRecord(lastRecord)___		for (LongRecordWriterThread writerThread : writerThreads) {_			writerThread.setRecordsToSend(lastRecord)__		}__		recordsReceived.get(timeout, TimeUnit.MILLISECONDS)__	};executes,the,throughput,benchmark,with,the,given,number,of,records,param,records,to,pass,through,the,network,stack;public,void,execute,benchmark,long,records,long,timeout,throws,exception,final,long,value,value,new,long,value,value,set,value,0,long,last,record,records,writer,threads,length,completable,future,records,received,receiver,set,expected,record,last,record,for,long,record,writer,thread,writer,thread,writer,threads,writer,thread,set,records,to,send,last,record,records,received,get,timeout,time,unit,milliseconds
StreamNetworkThroughputBenchmark -> public void executeBenchmark(long records, long timeout) throws Exception;1537185337;Executes the throughput benchmark with the given number of records.__@param records to pass through the network stack;public void executeBenchmark(long records, long timeout) throws Exception {_		final LongValue value = new LongValue()__		value.setValue(0)___		long lastRecord = records / writerThreads.length__		CompletableFuture<?> recordsReceived = receiver.setExpectedRecord(lastRecord)___		for (LongRecordWriterThread writerThread : writerThreads) {_			writerThread.setRecordsToSend(lastRecord)__		}__		recordsReceived.get(timeout, TimeUnit.MILLISECONDS)__	};executes,the,throughput,benchmark,with,the,given,number,of,records,param,records,to,pass,through,the,network,stack;public,void,execute,benchmark,long,records,long,timeout,throws,exception,final,long,value,value,new,long,value,value,set,value,0,long,last,record,records,writer,threads,length,completable,future,records,received,receiver,set,expected,record,last,record,for,long,record,writer,thread,writer,thread,writer,threads,writer,thread,set,records,to,send,last,record,records,received,get,timeout,time,unit,milliseconds
StreamNetworkThroughputBenchmark -> public void setUp( 			int recordWriters, 			int channels, 			int flushTimeout, 			boolean localMode, 			int senderBufferPoolSize, 			int receiverBufferPoolSize) throws Exception;1524407315;Initializes the throughput benchmark with the given parameters.__@param recordWriters_number of senders, i.e._{@link org.apache.flink.runtime.io.network.api.writer.RecordWriter} instances_@param channels_number of outgoing channels / receivers;public void setUp(_			int recordWriters,_			int channels,_			int flushTimeout,_			boolean localMode,_			int senderBufferPoolSize,_			int receiverBufferPoolSize) throws Exception {_		environment = new StreamNetworkBenchmarkEnvironment<>()__		environment.setUp(recordWriters, channels, localMode, senderBufferPoolSize, receiverBufferPoolSize)__		receiver = environment.createReceiver()__		writerThreads = new LongRecordWriterThread[recordWriters]__		for (int writer = 0_ writer < recordWriters_ writer++) {_			writerThreads[writer] = new LongRecordWriterThread(environment.createRecordWriter(writer, flushTimeout))__			writerThreads[writer].start()__		}_	};initializes,the,throughput,benchmark,with,the,given,parameters,param,record,writers,number,of,senders,i,e,link,org,apache,flink,runtime,io,network,api,writer,record,writer,instances,param,channels,number,of,outgoing,channels,receivers;public,void,set,up,int,record,writers,int,channels,int,flush,timeout,boolean,local,mode,int,sender,buffer,pool,size,int,receiver,buffer,pool,size,throws,exception,environment,new,stream,network,benchmark,environment,environment,set,up,record,writers,channels,local,mode,sender,buffer,pool,size,receiver,buffer,pool,size,receiver,environment,create,receiver,writer,threads,new,long,record,writer,thread,record,writers,for,int,writer,0,writer,record,writers,writer,writer,threads,writer,new,long,record,writer,thread,environment,create,record,writer,writer,flush,timeout,writer,threads,writer,start
StreamNetworkThroughputBenchmark -> public void setUp( 			int recordWriters, 			int channels, 			int flushTimeout, 			boolean localMode, 			int senderBufferPoolSize, 			int receiverBufferPoolSize) throws Exception;1536826628;Initializes the throughput benchmark with the given parameters.__@param recordWriters_number of senders, i.e._{@link org.apache.flink.runtime.io.network.api.writer.RecordWriter} instances_@param channels_number of outgoing channels / receivers;public void setUp(_			int recordWriters,_			int channels,_			int flushTimeout,_			boolean localMode,_			int senderBufferPoolSize,_			int receiverBufferPoolSize) throws Exception {_		environment = new StreamNetworkBenchmarkEnvironment<>()__		environment.setUp(recordWriters, channels, localMode, senderBufferPoolSize, receiverBufferPoolSize)__		receiver = environment.createReceiver()__		writerThreads = new LongRecordWriterThread[recordWriters]__		for (int writer = 0_ writer < recordWriters_ writer++) {_			writerThreads[writer] = new LongRecordWriterThread(environment.createRecordWriter(writer, flushTimeout))__			writerThreads[writer].start()__		}_	};initializes,the,throughput,benchmark,with,the,given,parameters,param,record,writers,number,of,senders,i,e,link,org,apache,flink,runtime,io,network,api,writer,record,writer,instances,param,channels,number,of,outgoing,channels,receivers;public,void,set,up,int,record,writers,int,channels,int,flush,timeout,boolean,local,mode,int,sender,buffer,pool,size,int,receiver,buffer,pool,size,throws,exception,environment,new,stream,network,benchmark,environment,environment,set,up,record,writers,channels,local,mode,sender,buffer,pool,size,receiver,buffer,pool,size,receiver,environment,create,receiver,writer,threads,new,long,record,writer,thread,record,writers,for,int,writer,0,writer,record,writers,writer,writer,threads,writer,new,long,record,writer,thread,environment,create,record,writer,writer,flush,timeout,writer,threads,writer,start
StreamNetworkThroughputBenchmark -> public void tearDown() throws Exception;1515510651;Shuts down a benchmark previously set up via {@link #setUp}.__<p>This will wait for all senders to finish but timeout with an exception after 5 seconds.;public void tearDown() throws Exception {_		for (LongRecordWriterThread writerThread : writerThreads) {_			writerThread.shutdown()__			writerThread.sync(5000)__		}_		environment.tearDown()__		receiver.shutdown()__	};shuts,down,a,benchmark,previously,set,up,via,link,set,up,p,this,will,wait,for,all,senders,to,finish,but,timeout,with,an,exception,after,5,seconds;public,void,tear,down,throws,exception,for,long,record,writer,thread,writer,thread,writer,threads,writer,thread,shutdown,writer,thread,sync,5000,environment,tear,down,receiver,shutdown
StreamNetworkThroughputBenchmark -> public void tearDown() throws Exception;1519039302;Shuts down a benchmark previously set up via {@link #setUp}.__<p>This will wait for all senders to finish but timeout with an exception after 5 seconds.;public void tearDown() throws Exception {_		for (LongRecordWriterThread writerThread : writerThreads) {_			writerThread.shutdown()__			writerThread.sync(5000)__		}_		environment.tearDown()__		receiver.shutdown()__	};shuts,down,a,benchmark,previously,set,up,via,link,set,up,p,this,will,wait,for,all,senders,to,finish,but,timeout,with,an,exception,after,5,seconds;public,void,tear,down,throws,exception,for,long,record,writer,thread,writer,thread,writer,threads,writer,thread,shutdown,writer,thread,sync,5000,environment,tear,down,receiver,shutdown
StreamNetworkThroughputBenchmark -> public void tearDown() throws Exception;1524407315;Shuts down a benchmark previously set up via {@link #setUp}.__<p>This will wait for all senders to finish but timeout with an exception after 5 seconds.;public void tearDown() throws Exception {_		for (LongRecordWriterThread writerThread : writerThreads) {_			writerThread.shutdown()__			writerThread.sync(5000)__		}_		environment.tearDown()__		receiver.shutdown()__	};shuts,down,a,benchmark,previously,set,up,via,link,set,up,p,this,will,wait,for,all,senders,to,finish,but,timeout,with,an,exception,after,5,seconds;public,void,tear,down,throws,exception,for,long,record,writer,thread,writer,thread,writer,threads,writer,thread,shutdown,writer,thread,sync,5000,environment,tear,down,receiver,shutdown
StreamNetworkThroughputBenchmark -> public void tearDown() throws Exception;1536826628;Shuts down a benchmark previously set up via {@link #setUp}.__<p>This will wait for all senders to finish but timeout with an exception after 5 seconds.;public void tearDown() throws Exception {_		for (LongRecordWriterThread writerThread : writerThreads) {_			writerThread.shutdown()__			writerThread.sync(5000)__		}_		environment.tearDown()__		receiver.shutdown()__	};shuts,down,a,benchmark,previously,set,up,via,link,set,up,p,this,will,wait,for,all,senders,to,finish,but,timeout,with,an,exception,after,5,seconds;public,void,tear,down,throws,exception,for,long,record,writer,thread,writer,thread,writer,threads,writer,thread,shutdown,writer,thread,sync,5000,environment,tear,down,receiver,shutdown
StreamNetworkThroughputBenchmark -> public void tearDown() throws Exception;1536826628;Shuts down a benchmark previously set up via {@link #setUp}.__<p>This will wait for all senders to finish but timeout with an exception after 5 seconds.;public void tearDown() throws Exception {_		for (LongRecordWriterThread writerThread : writerThreads) {_			writerThread.shutdown()__			writerThread.sync(5000)__		}_		environment.tearDown()__		receiver.shutdown()__	};shuts,down,a,benchmark,previously,set,up,via,link,set,up,p,this,will,wait,for,all,senders,to,finish,but,timeout,with,an,exception,after,5,seconds;public,void,tear,down,throws,exception,for,long,record,writer,thread,writer,thread,writer,threads,writer,thread,shutdown,writer,thread,sync,5000,environment,tear,down,receiver,shutdown
StreamNetworkThroughputBenchmark -> public void tearDown() throws Exception;1537185337;Shuts down a benchmark previously set up via {@link #setUp}.__<p>This will wait for all senders to finish but timeout with an exception after 5 seconds.;public void tearDown() throws Exception {_		for (LongRecordWriterThread writerThread : writerThreads) {_			writerThread.shutdown()__			writerThread.sync(5000)__		}_		environment.tearDown()__		receiver.shutdown()__	};shuts,down,a,benchmark,previously,set,up,via,link,set,up,p,this,will,wait,for,all,senders,to,finish,but,timeout,with,an,exception,after,5,seconds;public,void,tear,down,throws,exception,for,long,record,writer,thread,writer,thread,writer,threads,writer,thread,shutdown,writer,thread,sync,5000,environment,tear,down,receiver,shutdown
