commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;32;;@Override protected void testProgram() throws Exception {     ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment().     // the test data is constructed such that the merge join zig zag     // has an early out, leaving elements on the static path input unconsumed     DataSet<Path> edges = env.fromElements(new Path(2, 1), new Path(4, 1), new Path(6, 3), new Path(8, 3), new Path(10, 1), new Path(12, 1), new Path(14, 3), new Path(16, 3), new Path(18, 1), new Path(20, 1)).     IterativeDataSet<Path> currentPaths = edges.iterate(10).     DataSet<Path> newPaths = currentPaths.join(edges, JoinHint.REPARTITION_SORT_MERGE).where("to").equalTo("from").with(new PathConnector()).union(currentPaths).distinct("from", "to").     DataSet<Path> result = currentPaths.closeWith(newPaths).     result.output(new DiscardingOutputFormat<Path>()).     env.execute(). }
false;public;2;4;;@Override public Path join(Path path, Path edge) {     return new Path(path.from, edge.to). }
false;public;0;4;;@Override public String toString() {     return "(" + from + "," + to + ")". }
