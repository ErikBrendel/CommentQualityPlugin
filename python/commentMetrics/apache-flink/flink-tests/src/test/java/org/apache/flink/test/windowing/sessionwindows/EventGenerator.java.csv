commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Only call this method if hasMoreEvents() is true and canGenerateEventAtWatermark(...) is true.  *  * @param globalWatermark the current global watermark to consider for event generation  * @return a generated event  */ ;/**  * Only call this method if hasMoreEvents() is true and canGenerateEventAtWatermark(...) is true.  *  * @param globalWatermark the current global watermark to consider for event generation  * @return a generated event  */ E generateEvent(long globalWatermark).
true;;1;1;/**  * @param globalWatermark the current global watermark to consider for event generation  * @return true if, given the current global watermark, the generator can produce events. this might temporarily be  * false, e.g. if a generator wants to produce late events w.r.t. a session, but the global watermark did not yet  * advance to the point that timestamps from the session would be late  */ ;/**  * @param globalWatermark the current global watermark to consider for event generation  * @return true if, given the current global watermark, the generator can produce events. this might temporarily be  * false, e.g. if a generator wants to produce late events w.r.t. a session, but the global watermark did not yet  * advance to the point that timestamps from the session would be late  */ boolean canGenerateEventAtWatermark(long globalWatermark).
true;;0;1;/**  * @return true if, in general and for some global watermark, more events can been produced  */ ;/**  * @return true if, in general and for some global watermark, more events can been produced  */ boolean hasMoreEvents().
true;;0;1;/**  * @return the watermark that tracks this generator's progress  */ ;/**  * @return the watermark that tracks this generator's progress  */ long getLocalWatermark().
true;;1;1;/**  * @param globalWatermark the current global watermark to consider for event generation  * @return a successor for this generator if hasMoreEvents() is false  */ ;/**  * @param globalWatermark the current global watermark to consider for event generation  * @return a successor for this generator if hasMoreEvents() is false  */ EventGenerator<K, E> getNextGenerator(long globalWatermark).
true;;0;1;/**  * @return key for the generated events  */ ;/**  * @return key for the generated events  */ K getKey().
