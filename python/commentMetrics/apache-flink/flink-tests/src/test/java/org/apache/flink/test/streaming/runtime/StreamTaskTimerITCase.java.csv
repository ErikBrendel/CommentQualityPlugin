# id;timestamp;commentText;codeText;commentWords;codeWords
StreamTaskTimerITCase -> @Test 	public void testOperatorChainedToSource() throws Exception;1467726666;Note: this test fails if we don't check for exceptions in the source contexts and do not_synchronize in the source contexts.;@Test_	public void testOperatorChainedToSource() throws Exception {_		_		StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()__		env.setStreamTimeCharacteristic(timeCharacteristic)__		env.setParallelism(1)___		DataStream<String> source = env.addSource(new InfiniteTestSource())___		source.transform("Custom Operator", BasicTypeInfo.STRING_TYPE_INFO, new TimerOperator(ChainingStrategy.ALWAYS))___		boolean testSuccess = false__		try {_			env.execute("Timer test")__		} catch (JobExecutionException e) {_			if (e.getCause() instanceof TimerException) {_				TimerException te = (TimerException) e.getCause()__				if (te.getCause() instanceof RuntimeException) {_					RuntimeException re = (RuntimeException) te.getCause()__					if (re.getMessage().equals("TEST SUCCESS")) {_						testSuccess = true__					} else {_						throw e__					}_				} else {_					throw e__				}_			} else {_				throw e__			}_		}_		Assert.assertTrue(testSuccess)__	};note,this,test,fails,if,we,don,t,check,for,exceptions,in,the,source,contexts,and,do,not,synchronize,in,the,source,contexts;test,public,void,test,operator,chained,to,source,throws,exception,stream,execution,environment,env,stream,execution,environment,get,execution,environment,env,set,stream,time,characteristic,time,characteristic,env,set,parallelism,1,data,stream,string,source,env,add,source,new,infinite,test,source,source,transform,custom,operator,basic,type,info,new,timer,operator,chaining,strategy,always,boolean,test,success,false,try,env,execute,timer,test,catch,job,execution,exception,e,if,e,get,cause,instanceof,timer,exception,timer,exception,te,timer,exception,e,get,cause,if,te,get,cause,instanceof,runtime,exception,runtime,exception,re,runtime,exception,te,get,cause,if,re,get,message,equals,test,success,test,success,true,else,throw,e,else,throw,e,else,throw,e,assert,assert,true,test,success
StreamTaskTimerITCase -> @Test 	public void testOperatorChainedToSource() throws Exception;1474635666;Note: this test fails if we don't check for exceptions in the source contexts and do not_synchronize in the source contexts.;@Test_	public void testOperatorChainedToSource() throws Exception {_		_		StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()__		env.setStreamTimeCharacteristic(timeCharacteristic)__		env.setParallelism(1)___		DataStream<String> source = env.addSource(new InfiniteTestSource())___		source.transform("Custom Operator", BasicTypeInfo.STRING_TYPE_INFO, new TimerOperator(ChainingStrategy.ALWAYS))___		boolean testSuccess = false__		try {_			env.execute("Timer test")__		} catch (JobExecutionException e) {_			if (e.getCause() instanceof TimerException) {_				TimerException te = (TimerException) e.getCause()__				if (te.getCause() instanceof RuntimeException) {_					RuntimeException re = (RuntimeException) te.getCause()__					if (re.getMessage().equals("TEST SUCCESS")) {_						testSuccess = true__					} else {_						throw e__					}_				} else {_					throw e__				}_			} else {_				throw e__			}_		}_		Assert.assertTrue(testSuccess)__	};note,this,test,fails,if,we,don,t,check,for,exceptions,in,the,source,contexts,and,do,not,synchronize,in,the,source,contexts;test,public,void,test,operator,chained,to,source,throws,exception,stream,execution,environment,env,stream,execution,environment,get,execution,environment,env,set,stream,time,characteristic,time,characteristic,env,set,parallelism,1,data,stream,string,source,env,add,source,new,infinite,test,source,source,transform,custom,operator,basic,type,info,new,timer,operator,chaining,strategy,always,boolean,test,success,false,try,env,execute,timer,test,catch,job,execution,exception,e,if,e,get,cause,instanceof,timer,exception,timer,exception,te,timer,exception,e,get,cause,if,te,get,cause,instanceof,runtime,exception,runtime,exception,re,runtime,exception,te,get,cause,if,re,get,message,equals,test,success,test,success,true,else,throw,e,else,throw,e,else,throw,e,assert,assert,true,test,success
StreamTaskTimerITCase -> @Test 	public void testOperatorChainedToSource() throws Exception;1477069384;Note: this test fails if we don't check for exceptions in the source contexts and do not_synchronize in the source contexts.;@Test_	public void testOperatorChainedToSource() throws Exception {_		_		StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()__		env.setStreamTimeCharacteristic(timeCharacteristic)__		env.setParallelism(1)___		DataStream<String> source = env.addSource(new InfiniteTestSource())___		source.transform("Custom Operator", BasicTypeInfo.STRING_TYPE_INFO, new TimerOperator(ChainingStrategy.ALWAYS))___		boolean testSuccess = false__		try {_			env.execute("Timer test")__		} catch (JobExecutionException e) {_			if (e.getCause() instanceof TimerException) {_				TimerException te = (TimerException) e.getCause()__				if (te.getCause() instanceof RuntimeException) {_					RuntimeException re = (RuntimeException) te.getCause()__					if (re.getMessage().equals("TEST SUCCESS")) {_						testSuccess = true__					} else {_						throw e__					}_				} else {_					throw e__				}_			} else {_				throw e__			}_		}_		Assert.assertTrue(testSuccess)__	};note,this,test,fails,if,we,don,t,check,for,exceptions,in,the,source,contexts,and,do,not,synchronize,in,the,source,contexts;test,public,void,test,operator,chained,to,source,throws,exception,stream,execution,environment,env,stream,execution,environment,get,execution,environment,env,set,stream,time,characteristic,time,characteristic,env,set,parallelism,1,data,stream,string,source,env,add,source,new,infinite,test,source,source,transform,custom,operator,basic,type,info,new,timer,operator,chaining,strategy,always,boolean,test,success,false,try,env,execute,timer,test,catch,job,execution,exception,e,if,e,get,cause,instanceof,timer,exception,timer,exception,te,timer,exception,e,get,cause,if,te,get,cause,instanceof,runtime,exception,runtime,exception,re,runtime,exception,te,get,cause,if,re,get,message,equals,test,success,test,success,true,else,throw,e,else,throw,e,else,throw,e,assert,assert,true,test,success
StreamTaskTimerITCase -> @Test 	public void testOperatorChainedToSource() throws Exception;1477069385;Note: this test fails if we don't check for exceptions in the source contexts and do not_synchronize in the source contexts.;@Test_	public void testOperatorChainedToSource() throws Exception {_		_		StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()__		env.setStreamTimeCharacteristic(timeCharacteristic)__		env.setParallelism(1)___		DataStream<String> source = env.addSource(new InfiniteTestSource())___		source.transform("Custom Operator", BasicTypeInfo.STRING_TYPE_INFO, new TimerOperator(ChainingStrategy.ALWAYS))___		boolean testSuccess = false__		try {_			env.execute("Timer test")__		} catch (JobExecutionException e) {_			if (e.getCause() instanceof TimerException) {_				TimerException te = (TimerException) e.getCause()__				if (te.getCause() instanceof RuntimeException) {_					RuntimeException re = (RuntimeException) te.getCause()__					if (re.getMessage().equals("TEST SUCCESS")) {_						testSuccess = true__					} else {_						throw e__					}_				} else {_					throw e__				}_			} else {_				throw e__			}_		}_		Assert.assertTrue(testSuccess)__	};note,this,test,fails,if,we,don,t,check,for,exceptions,in,the,source,contexts,and,do,not,synchronize,in,the,source,contexts;test,public,void,test,operator,chained,to,source,throws,exception,stream,execution,environment,env,stream,execution,environment,get,execution,environment,env,set,stream,time,characteristic,time,characteristic,env,set,parallelism,1,data,stream,string,source,env,add,source,new,infinite,test,source,source,transform,custom,operator,basic,type,info,new,timer,operator,chaining,strategy,always,boolean,test,success,false,try,env,execute,timer,test,catch,job,execution,exception,e,if,e,get,cause,instanceof,timer,exception,timer,exception,te,timer,exception,e,get,cause,if,te,get,cause,instanceof,runtime,exception,runtime,exception,re,runtime,exception,te,get,cause,if,re,get,message,equals,test,success,test,success,true,else,throw,e,else,throw,e,else,throw,e,assert,assert,true,test,success
StreamTaskTimerITCase -> @Test 	public void testOperatorChainedToSource() throws Exception;1477069385;Note: this test fails if we don't check for exceptions in the source contexts and do not_synchronize in the source contexts.;@Test_	public void testOperatorChainedToSource() throws Exception {_		_		StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()__		env.setStreamTimeCharacteristic(timeCharacteristic)__		env.setParallelism(1)___		DataStream<String> source = env.addSource(new InfiniteTestSource())___		source.transform("Custom Operator", BasicTypeInfo.STRING_TYPE_INFO, new TimerOperator(ChainingStrategy.ALWAYS))___		boolean testSuccess = false__		try {_			env.execute("Timer test")__		} catch (JobExecutionException e) {_			if (e.getCause() instanceof TimerException) {_				TimerException te = (TimerException) e.getCause()__				if (te.getCause() instanceof RuntimeException) {_					RuntimeException re = (RuntimeException) te.getCause()__					if (re.getMessage().equals("TEST SUCCESS")) {_						testSuccess = true__					} else {_						throw e__					}_				} else {_					throw e__				}_			} else {_				throw e__			}_		}_		Assert.assertTrue(testSuccess)__	};note,this,test,fails,if,we,don,t,check,for,exceptions,in,the,source,contexts,and,do,not,synchronize,in,the,source,contexts;test,public,void,test,operator,chained,to,source,throws,exception,stream,execution,environment,env,stream,execution,environment,get,execution,environment,env,set,stream,time,characteristic,time,characteristic,env,set,parallelism,1,data,stream,string,source,env,add,source,new,infinite,test,source,source,transform,custom,operator,basic,type,info,new,timer,operator,chaining,strategy,always,boolean,test,success,false,try,env,execute,timer,test,catch,job,execution,exception,e,if,e,get,cause,instanceof,timer,exception,timer,exception,te,timer,exception,e,get,cause,if,te,get,cause,instanceof,runtime,exception,runtime,exception,re,runtime,exception,te,get,cause,if,re,get,message,equals,test,success,test,success,true,else,throw,e,else,throw,e,else,throw,e,assert,assert,true,test,success
StreamTaskTimerITCase -> @Test 	public void testOperatorChainedToSource() throws Exception;1499899067;Note: this test fails if we don't check for exceptions in the source contexts and do not_synchronize in the source contexts.;@Test_	public void testOperatorChainedToSource() throws Exception {__		StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()__		env.setStreamTimeCharacteristic(timeCharacteristic)__		env.setParallelism(1)___		DataStream<String> source = env.addSource(new InfiniteTestSource())___		source.transform("Custom Operator", BasicTypeInfo.STRING_TYPE_INFO, new TimerOperator(ChainingStrategy.ALWAYS))___		boolean testSuccess = false__		try {_			env.execute("Timer test")__		} catch (JobExecutionException e) {_			if (e.getCause() instanceof TimerException) {_				TimerException te = (TimerException) e.getCause()__				if (te.getCause() instanceof RuntimeException) {_					RuntimeException re = (RuntimeException) te.getCause()__					if (re.getMessage().equals("TEST SUCCESS")) {_						testSuccess = true__					} else {_						throw e__					}_				} else {_					throw e__				}_			} else {_				throw e__			}_		}_		Assert.assertTrue(testSuccess)__	};note,this,test,fails,if,we,don,t,check,for,exceptions,in,the,source,contexts,and,do,not,synchronize,in,the,source,contexts;test,public,void,test,operator,chained,to,source,throws,exception,stream,execution,environment,env,stream,execution,environment,get,execution,environment,env,set,stream,time,characteristic,time,characteristic,env,set,parallelism,1,data,stream,string,source,env,add,source,new,infinite,test,source,source,transform,custom,operator,basic,type,info,new,timer,operator,chaining,strategy,always,boolean,test,success,false,try,env,execute,timer,test,catch,job,execution,exception,e,if,e,get,cause,instanceof,timer,exception,timer,exception,te,timer,exception,e,get,cause,if,te,get,cause,instanceof,runtime,exception,runtime,exception,re,runtime,exception,te,get,cause,if,re,get,message,equals,test,success,test,success,true,else,throw,e,else,throw,e,else,throw,e,assert,assert,true,test,success
StreamTaskTimerITCase -> @Test 	public void testOperatorChainedToSource() throws Exception;1515481551;Note: this test fails if we don't check for exceptions in the source contexts and do not_synchronize in the source contexts.;@Test_	public void testOperatorChainedToSource() throws Exception {__		StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()__		env.setStreamTimeCharacteristic(timeCharacteristic)__		env.setParallelism(1)___		DataStream<String> source = env.addSource(new InfiniteTestSource())___		source.transform("Custom Operator", BasicTypeInfo.STRING_TYPE_INFO, new TimerOperator(ChainingStrategy.ALWAYS))___		boolean testSuccess = false__		try {_			env.execute("Timer test")__		} catch (JobExecutionException e) {_			if (e.getCause() instanceof TimerException) {_				TimerException te = (TimerException) e.getCause()__				if (te.getCause() instanceof RuntimeException) {_					RuntimeException re = (RuntimeException) te.getCause()__					if (re.getMessage().equals("TEST SUCCESS")) {_						testSuccess = true__					} else {_						throw e__					}_				} else {_					throw e__				}_			} else {_				throw e__			}_		}_		Assert.assertTrue(testSuccess)__	};note,this,test,fails,if,we,don,t,check,for,exceptions,in,the,source,contexts,and,do,not,synchronize,in,the,source,contexts;test,public,void,test,operator,chained,to,source,throws,exception,stream,execution,environment,env,stream,execution,environment,get,execution,environment,env,set,stream,time,characteristic,time,characteristic,env,set,parallelism,1,data,stream,string,source,env,add,source,new,infinite,test,source,source,transform,custom,operator,basic,type,info,new,timer,operator,chaining,strategy,always,boolean,test,success,false,try,env,execute,timer,test,catch,job,execution,exception,e,if,e,get,cause,instanceof,timer,exception,timer,exception,te,timer,exception,e,get,cause,if,te,get,cause,instanceof,runtime,exception,runtime,exception,re,runtime,exception,te,get,cause,if,re,get,message,equals,test,success,test,success,true,else,throw,e,else,throw,e,else,throw,e,assert,assert,true,test,success
StreamTaskTimerITCase -> @Test 	public void testOneInputOperatorWithoutChaining() throws Exception;1467726666;Note: this test fails if we don't check for exceptions in the source contexts and do not_synchronize in the source contexts.;@Test_	public void testOneInputOperatorWithoutChaining() throws Exception {_		StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()__		env.setStreamTimeCharacteristic(timeCharacteristic)__		env.setParallelism(1)___		DataStream<String> source = env.addSource(new InfiniteTestSource())___		source.transform("Custom Operator", BasicTypeInfo.STRING_TYPE_INFO, new TimerOperator(ChainingStrategy.NEVER))___		boolean testSuccess = false__		try {_			env.execute("Timer test")__		} catch (JobExecutionException e) {_			if (e.getCause() instanceof TimerException) {_				TimerException te = (TimerException) e.getCause()__				if (te.getCause() instanceof RuntimeException) {_					RuntimeException re = (RuntimeException) te.getCause()__					if (re.getMessage().equals("TEST SUCCESS")) {_						testSuccess = true__					} else {_						throw e__					}_				} else {_					throw e__				}_			} else {_				throw e__			}_		}_		Assert.assertTrue(testSuccess)__	};note,this,test,fails,if,we,don,t,check,for,exceptions,in,the,source,contexts,and,do,not,synchronize,in,the,source,contexts;test,public,void,test,one,input,operator,without,chaining,throws,exception,stream,execution,environment,env,stream,execution,environment,get,execution,environment,env,set,stream,time,characteristic,time,characteristic,env,set,parallelism,1,data,stream,string,source,env,add,source,new,infinite,test,source,source,transform,custom,operator,basic,type,info,new,timer,operator,chaining,strategy,never,boolean,test,success,false,try,env,execute,timer,test,catch,job,execution,exception,e,if,e,get,cause,instanceof,timer,exception,timer,exception,te,timer,exception,e,get,cause,if,te,get,cause,instanceof,runtime,exception,runtime,exception,re,runtime,exception,te,get,cause,if,re,get,message,equals,test,success,test,success,true,else,throw,e,else,throw,e,else,throw,e,assert,assert,true,test,success
StreamTaskTimerITCase -> @Test 	public void testOneInputOperatorWithoutChaining() throws Exception;1474635666;Note: this test fails if we don't check for exceptions in the source contexts and do not_synchronize in the source contexts.;@Test_	public void testOneInputOperatorWithoutChaining() throws Exception {_		StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()__		env.setStreamTimeCharacteristic(timeCharacteristic)__		env.setParallelism(1)___		DataStream<String> source = env.addSource(new InfiniteTestSource())___		source.transform("Custom Operator", BasicTypeInfo.STRING_TYPE_INFO, new TimerOperator(ChainingStrategy.NEVER))___		boolean testSuccess = false__		try {_			env.execute("Timer test")__		} catch (JobExecutionException e) {_			if (e.getCause() instanceof TimerException) {_				TimerException te = (TimerException) e.getCause()__				if (te.getCause() instanceof RuntimeException) {_					RuntimeException re = (RuntimeException) te.getCause()__					if (re.getMessage().equals("TEST SUCCESS")) {_						testSuccess = true__					} else {_						throw e__					}_				} else {_					throw e__				}_			} else {_				throw e__			}_		}_		Assert.assertTrue(testSuccess)__	};note,this,test,fails,if,we,don,t,check,for,exceptions,in,the,source,contexts,and,do,not,synchronize,in,the,source,contexts;test,public,void,test,one,input,operator,without,chaining,throws,exception,stream,execution,environment,env,stream,execution,environment,get,execution,environment,env,set,stream,time,characteristic,time,characteristic,env,set,parallelism,1,data,stream,string,source,env,add,source,new,infinite,test,source,source,transform,custom,operator,basic,type,info,new,timer,operator,chaining,strategy,never,boolean,test,success,false,try,env,execute,timer,test,catch,job,execution,exception,e,if,e,get,cause,instanceof,timer,exception,timer,exception,te,timer,exception,e,get,cause,if,te,get,cause,instanceof,runtime,exception,runtime,exception,re,runtime,exception,te,get,cause,if,re,get,message,equals,test,success,test,success,true,else,throw,e,else,throw,e,else,throw,e,assert,assert,true,test,success
StreamTaskTimerITCase -> @Test 	public void testOneInputOperatorWithoutChaining() throws Exception;1477069384;Note: this test fails if we don't check for exceptions in the source contexts and do not_synchronize in the source contexts.;@Test_	public void testOneInputOperatorWithoutChaining() throws Exception {_		StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()__		env.setStreamTimeCharacteristic(timeCharacteristic)__		env.setParallelism(1)___		DataStream<String> source = env.addSource(new InfiniteTestSource())___		source.transform("Custom Operator", BasicTypeInfo.STRING_TYPE_INFO, new TimerOperator(ChainingStrategy.NEVER))___		boolean testSuccess = false__		try {_			env.execute("Timer test")__		} catch (JobExecutionException e) {_			if (e.getCause() instanceof TimerException) {_				TimerException te = (TimerException) e.getCause()__				if (te.getCause() instanceof RuntimeException) {_					RuntimeException re = (RuntimeException) te.getCause()__					if (re.getMessage().equals("TEST SUCCESS")) {_						testSuccess = true__					} else {_						throw e__					}_				} else {_					throw e__				}_			} else {_				throw e__			}_		}_		Assert.assertTrue(testSuccess)__	};note,this,test,fails,if,we,don,t,check,for,exceptions,in,the,source,contexts,and,do,not,synchronize,in,the,source,contexts;test,public,void,test,one,input,operator,without,chaining,throws,exception,stream,execution,environment,env,stream,execution,environment,get,execution,environment,env,set,stream,time,characteristic,time,characteristic,env,set,parallelism,1,data,stream,string,source,env,add,source,new,infinite,test,source,source,transform,custom,operator,basic,type,info,new,timer,operator,chaining,strategy,never,boolean,test,success,false,try,env,execute,timer,test,catch,job,execution,exception,e,if,e,get,cause,instanceof,timer,exception,timer,exception,te,timer,exception,e,get,cause,if,te,get,cause,instanceof,runtime,exception,runtime,exception,re,runtime,exception,te,get,cause,if,re,get,message,equals,test,success,test,success,true,else,throw,e,else,throw,e,else,throw,e,assert,assert,true,test,success
StreamTaskTimerITCase -> @Test 	public void testOneInputOperatorWithoutChaining() throws Exception;1477069385;Note: this test fails if we don't check for exceptions in the source contexts and do not_synchronize in the source contexts.;@Test_	public void testOneInputOperatorWithoutChaining() throws Exception {_		StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()__		env.setStreamTimeCharacteristic(timeCharacteristic)__		env.setParallelism(1)___		DataStream<String> source = env.addSource(new InfiniteTestSource())___		source.transform("Custom Operator", BasicTypeInfo.STRING_TYPE_INFO, new TimerOperator(ChainingStrategy.NEVER))___		boolean testSuccess = false__		try {_			env.execute("Timer test")__		} catch (JobExecutionException e) {_			if (e.getCause() instanceof TimerException) {_				TimerException te = (TimerException) e.getCause()__				if (te.getCause() instanceof RuntimeException) {_					RuntimeException re = (RuntimeException) te.getCause()__					if (re.getMessage().equals("TEST SUCCESS")) {_						testSuccess = true__					} else {_						throw e__					}_				} else {_					throw e__				}_			} else {_				throw e__			}_		}_		Assert.assertTrue(testSuccess)__	};note,this,test,fails,if,we,don,t,check,for,exceptions,in,the,source,contexts,and,do,not,synchronize,in,the,source,contexts;test,public,void,test,one,input,operator,without,chaining,throws,exception,stream,execution,environment,env,stream,execution,environment,get,execution,environment,env,set,stream,time,characteristic,time,characteristic,env,set,parallelism,1,data,stream,string,source,env,add,source,new,infinite,test,source,source,transform,custom,operator,basic,type,info,new,timer,operator,chaining,strategy,never,boolean,test,success,false,try,env,execute,timer,test,catch,job,execution,exception,e,if,e,get,cause,instanceof,timer,exception,timer,exception,te,timer,exception,e,get,cause,if,te,get,cause,instanceof,runtime,exception,runtime,exception,re,runtime,exception,te,get,cause,if,re,get,message,equals,test,success,test,success,true,else,throw,e,else,throw,e,else,throw,e,assert,assert,true,test,success
StreamTaskTimerITCase -> @Test 	public void testOneInputOperatorWithoutChaining() throws Exception;1477069385;Note: this test fails if we don't check for exceptions in the source contexts and do not_synchronize in the source contexts.;@Test_	public void testOneInputOperatorWithoutChaining() throws Exception {_		StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()__		env.setStreamTimeCharacteristic(timeCharacteristic)__		env.setParallelism(1)___		DataStream<String> source = env.addSource(new InfiniteTestSource())___		source.transform("Custom Operator", BasicTypeInfo.STRING_TYPE_INFO, new TimerOperator(ChainingStrategy.NEVER))___		boolean testSuccess = false__		try {_			env.execute("Timer test")__		} catch (JobExecutionException e) {_			if (e.getCause() instanceof TimerException) {_				TimerException te = (TimerException) e.getCause()__				if (te.getCause() instanceof RuntimeException) {_					RuntimeException re = (RuntimeException) te.getCause()__					if (re.getMessage().equals("TEST SUCCESS")) {_						testSuccess = true__					} else {_						throw e__					}_				} else {_					throw e__				}_			} else {_				throw e__			}_		}_		Assert.assertTrue(testSuccess)__	};note,this,test,fails,if,we,don,t,check,for,exceptions,in,the,source,contexts,and,do,not,synchronize,in,the,source,contexts;test,public,void,test,one,input,operator,without,chaining,throws,exception,stream,execution,environment,env,stream,execution,environment,get,execution,environment,env,set,stream,time,characteristic,time,characteristic,env,set,parallelism,1,data,stream,string,source,env,add,source,new,infinite,test,source,source,transform,custom,operator,basic,type,info,new,timer,operator,chaining,strategy,never,boolean,test,success,false,try,env,execute,timer,test,catch,job,execution,exception,e,if,e,get,cause,instanceof,timer,exception,timer,exception,te,timer,exception,e,get,cause,if,te,get,cause,instanceof,runtime,exception,runtime,exception,re,runtime,exception,te,get,cause,if,re,get,message,equals,test,success,test,success,true,else,throw,e,else,throw,e,else,throw,e,assert,assert,true,test,success
StreamTaskTimerITCase -> @Test 	public void testOneInputOperatorWithoutChaining() throws Exception;1499899067;Note: this test fails if we don't check for exceptions in the source contexts and do not_synchronize in the source contexts.;@Test_	public void testOneInputOperatorWithoutChaining() throws Exception {_		StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()__		env.setStreamTimeCharacteristic(timeCharacteristic)__		env.setParallelism(1)___		DataStream<String> source = env.addSource(new InfiniteTestSource())___		source.transform("Custom Operator", BasicTypeInfo.STRING_TYPE_INFO, new TimerOperator(ChainingStrategy.NEVER))___		boolean testSuccess = false__		try {_			env.execute("Timer test")__		} catch (JobExecutionException e) {_			if (e.getCause() instanceof TimerException) {_				TimerException te = (TimerException) e.getCause()__				if (te.getCause() instanceof RuntimeException) {_					RuntimeException re = (RuntimeException) te.getCause()__					if (re.getMessage().equals("TEST SUCCESS")) {_						testSuccess = true__					} else {_						throw e__					}_				} else {_					throw e__				}_			} else {_				throw e__			}_		}_		Assert.assertTrue(testSuccess)__	};note,this,test,fails,if,we,don,t,check,for,exceptions,in,the,source,contexts,and,do,not,synchronize,in,the,source,contexts;test,public,void,test,one,input,operator,without,chaining,throws,exception,stream,execution,environment,env,stream,execution,environment,get,execution,environment,env,set,stream,time,characteristic,time,characteristic,env,set,parallelism,1,data,stream,string,source,env,add,source,new,infinite,test,source,source,transform,custom,operator,basic,type,info,new,timer,operator,chaining,strategy,never,boolean,test,success,false,try,env,execute,timer,test,catch,job,execution,exception,e,if,e,get,cause,instanceof,timer,exception,timer,exception,te,timer,exception,e,get,cause,if,te,get,cause,instanceof,runtime,exception,runtime,exception,re,runtime,exception,te,get,cause,if,re,get,message,equals,test,success,test,success,true,else,throw,e,else,throw,e,else,throw,e,assert,assert,true,test,success
StreamTaskTimerITCase -> @Test 	public void testOneInputOperatorWithoutChaining() throws Exception;1515481551;Note: this test fails if we don't check for exceptions in the source contexts and do not_synchronize in the source contexts.;@Test_	public void testOneInputOperatorWithoutChaining() throws Exception {_		StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()__		env.setStreamTimeCharacteristic(timeCharacteristic)__		env.setParallelism(1)___		DataStream<String> source = env.addSource(new InfiniteTestSource())___		source.transform("Custom Operator", BasicTypeInfo.STRING_TYPE_INFO, new TimerOperator(ChainingStrategy.NEVER))___		boolean testSuccess = false__		try {_			env.execute("Timer test")__		} catch (JobExecutionException e) {_			if (e.getCause() instanceof TimerException) {_				TimerException te = (TimerException) e.getCause()__				if (te.getCause() instanceof RuntimeException) {_					RuntimeException re = (RuntimeException) te.getCause()__					if (re.getMessage().equals("TEST SUCCESS")) {_						testSuccess = true__					} else {_						throw e__					}_				} else {_					throw e__				}_			} else {_				throw e__			}_		}_		Assert.assertTrue(testSuccess)__	};note,this,test,fails,if,we,don,t,check,for,exceptions,in,the,source,contexts,and,do,not,synchronize,in,the,source,contexts;test,public,void,test,one,input,operator,without,chaining,throws,exception,stream,execution,environment,env,stream,execution,environment,get,execution,environment,env,set,stream,time,characteristic,time,characteristic,env,set,parallelism,1,data,stream,string,source,env,add,source,new,infinite,test,source,source,transform,custom,operator,basic,type,info,new,timer,operator,chaining,strategy,never,boolean,test,success,false,try,env,execute,timer,test,catch,job,execution,exception,e,if,e,get,cause,instanceof,timer,exception,timer,exception,te,timer,exception,e,get,cause,if,te,get,cause,instanceof,runtime,exception,runtime,exception,re,runtime,exception,te,get,cause,if,re,get,message,equals,test,success,test,success,true,else,throw,e,else,throw,e,else,throw,e,assert,assert,true,test,success
