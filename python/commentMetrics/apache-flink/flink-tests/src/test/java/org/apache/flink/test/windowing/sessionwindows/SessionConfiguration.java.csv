commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public K getKey() {     return key. }
false;public;0;3;;public GeneratorEventFactory<K, E> getEventFactory() {     return eventFactory. }
false;public;0;3;;public long getGap() {     return gap. }
false;public;0;3;;public long getMinEventTimestamp() {     return minEventTimestamp. }
false;public;0;3;;public int getNumberOfTimelyEvents() {     return numberOfTimelyEvents. }
false;public;0;3;;public int getSessionId() {     return sessionId. }
false;public,static;6;9;;public static <K, E> SessionConfiguration<K, E> of(K key, int sessionId, long timeout, long startTimestamp, int numberOfEvents, GeneratorEventFactory<K, E> eventFactory) {     return new SessionConfiguration<>(key, sessionId, timeout, startTimestamp, numberOfEvents, eventFactory). }
false;public;0;11;;@Override public String toString() {     return "SessionConfiguration{" + "key=" + key + ", sessionId=" + sessionId + ", gap=" + gap + ", minEventTimestamp=" + minEventTimestamp + ", numberOfTimelyEvents=" + numberOfTimelyEvents + ", eventFactory=" + eventFactory + '}'. }
false;public;1;9;;public SessionConfiguration<K, E> getFollowupSessionConfiguration(long startTimestamp) {     return SessionConfiguration.of(getKey(), getSessionId() + 1, getGap(), startTimestamp, getNumberOfTimelyEvents(), getEventFactory()). }
