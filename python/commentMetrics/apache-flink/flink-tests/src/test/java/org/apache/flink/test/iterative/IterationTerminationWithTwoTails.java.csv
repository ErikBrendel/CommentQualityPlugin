commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;17;;@Override protected void testProgram() throws Exception {     ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment().     env.setParallelism(4).     DataSet<String> initialInput = env.fromElements("1", "2", "3", "4", "5").name("input").     IterativeDataSet<String> iteration = initialInput.iterate(5).name("Loop").     DataSet<String> sumReduce = iteration.reduceGroup(new SumReducer()).name("Compute sum (GroupReduce").     DataSet<String> terminationFilter = iteration.filter(new TerminationFilter()).name("Compute termination criterion (Map)").     List<String> result = iteration.closeWith(sumReduce, terminationFilter).collect().     containsResultAsText(result, EXPECTED). }
false;public;2;8;;@Override public void reduce(Iterable<String> values, Collector<String> out) throws Exception {     int sum = 0.     for (String value : values) {         sum += Integer.parseInt(value) + 1.     }     out.collect("" + sum). }
false;public;1;4;;@Override public boolean filter(String value) throws Exception {     return Integer.parseInt(value) < 21. }
