# id;timestamp;commentText;codeText;commentWords;codeWords
JobManagerHAProcessFailureRecoveryITCase -> private void testJobManagerFailure(String zkQuorum, final File coordinateDir, final File zookeeperStoragePath) throws Exception;1539728784;Test program with JobManager failure.__@param zkQuorum ZooKeeper quorum to connect to_@param coordinateDir Coordination directory_@throws Exception;private void testJobManagerFailure(String zkQuorum, final File coordinateDir, final File zookeeperStoragePath) throws Exception {_		Configuration config = new Configuration()__		config.setString(HighAvailabilityOptions.HA_MODE, "ZOOKEEPER")__		config.setString(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM, zkQuorum)__		config.setString(HighAvailabilityOptions.HA_STORAGE_PATH, zookeeperStoragePath.getAbsolutePath())___		ExecutionEnvironment env = ExecutionEnvironment.createRemoteEnvironment(_				"leader", 1, config)__		env.setParallelism(PARALLELISM)__		env.setRestartStrategy(RestartStrategies.fixedDelayRestart(1, 0L))__		env.getConfig().setExecutionMode(executionMode)__		env.getConfig().disableSysoutLogging()___		final long numElements = 100000L__		final DataSet<Long> result = env.generateSequence(1, numElements)_				_				.rebalance()_				_				.map(new RichMapFunction<Long, Long>() {__					private final File proceedFile = new File(coordinateDir, PROCEED_MARKER_FILE)___					private boolean markerCreated = false__					private boolean checkForProceedFile = true___					@Override_					public Long map(Long value) throws Exception {_						if (!markerCreated) {_							int taskIndex = getRuntimeContext().getIndexOfThisSubtask()__							AbstractTaskManagerProcessFailureRecoveryTest.touchFile(_									new File(coordinateDir, READY_MARKER_FILE_PREFIX + taskIndex))__							markerCreated = true__						}__						_						if (checkForProceedFile) {_							if (proceedFile.exists()) {_								checkForProceedFile = false__							}_							else {_								_								Thread.sleep(100)__							}_						}_						return value__					}_				})_				.reduce(new ReduceFunction<Long>() {_					@Override_					public Long reduce(Long value1, Long value2) {_						return value1 + value2__					}_				})_				_				_				.flatMap(new RichFlatMapFunction<Long, Long>() {_					@Override_					public void flatMap(Long value, Collector<Long> out) throws Exception {_						assertEquals(numElements * (numElements + 1L) / 2L, (long) value)___						int taskIndex = getRuntimeContext().getIndexOfThisSubtask()__						AbstractTaskManagerProcessFailureRecoveryTest.touchFile(_								new File(coordinateDir, FINISH_MARKER_FILE_PREFIX + taskIndex))__					}_				})___		result.output(new DiscardingOutputFormat<Long>())___		env.execute()__	};test,program,with,job,manager,failure,param,zk,quorum,zoo,keeper,quorum,to,connect,to,param,coordinate,dir,coordination,directory,throws,exception;private,void,test,job,manager,failure,string,zk,quorum,final,file,coordinate,dir,final,file,zookeeper,storage,path,throws,exception,configuration,config,new,configuration,config,set,string,high,availability,options,zookeeper,config,set,string,high,availability,options,zk,quorum,config,set,string,high,availability,options,zookeeper,storage,path,get,absolute,path,execution,environment,env,execution,environment,create,remote,environment,leader,1,config,env,set,parallelism,parallelism,env,set,restart,strategy,restart,strategies,fixed,delay,restart,1,0l,env,get,config,set,execution,mode,execution,mode,env,get,config,disable,sysout,logging,final,long,num,elements,100000l,final,data,set,long,result,env,generate,sequence,1,num,elements,rebalance,map,new,rich,map,function,long,long,private,final,file,proceed,file,new,file,coordinate,dir,private,boolean,marker,created,false,private,boolean,check,for,proceed,file,true,override,public,long,map,long,value,throws,exception,if,marker,created,int,task,index,get,runtime,context,get,index,of,this,subtask,abstract,task,manager,process,failure,recovery,test,touch,file,new,file,coordinate,dir,task,index,marker,created,true,if,check,for,proceed,file,if,proceed,file,exists,check,for,proceed,file,false,else,thread,sleep,100,return,value,reduce,new,reduce,function,long,override,public,long,reduce,long,value1,long,value2,return,value1,value2,flat,map,new,rich,flat,map,function,long,long,override,public,void,flat,map,long,value,collector,long,out,throws,exception,assert,equals,num,elements,num,elements,1l,2l,long,value,int,task,index,get,runtime,context,get,index,of,this,subtask,abstract,task,manager,process,failure,recovery,test,touch,file,new,file,coordinate,dir,task,index,result,output,new,discarding,output,format,long,env,execute
JobManagerHAProcessFailureRecoveryITCase -> private void testJobManagerFailure(String zkQuorum, final File coordinateDir, final File zookeeperStoragePath) throws Exception;1542282018;Test program with JobManager failure.__@param zkQuorum ZooKeeper quorum to connect to_@param coordinateDir Coordination directory_@throws Exception;private void testJobManagerFailure(String zkQuorum, final File coordinateDir, final File zookeeperStoragePath) throws Exception {_		Configuration config = new Configuration()__		config.setString(HighAvailabilityOptions.HA_MODE, "ZOOKEEPER")__		config.setString(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM, zkQuorum)__		config.setString(HighAvailabilityOptions.HA_STORAGE_PATH, zookeeperStoragePath.getAbsolutePath())___		ExecutionEnvironment env = ExecutionEnvironment.createRemoteEnvironment(_				"leader", 1, config)__		env.setParallelism(PARALLELISM)__		env.setRestartStrategy(RestartStrategies.fixedDelayRestart(1, 0L))__		env.getConfig().setExecutionMode(executionMode)__		env.getConfig().disableSysoutLogging()___		final long numElements = 100000L__		final DataSet<Long> result = env.generateSequence(1, numElements)_				_				.rebalance()_				_				.map(new RichMapFunction<Long, Long>() {__					private final File proceedFile = new File(coordinateDir, PROCEED_MARKER_FILE)___					private boolean markerCreated = false__					private boolean checkForProceedFile = true___					@Override_					public Long map(Long value) throws Exception {_						if (!markerCreated) {_							int taskIndex = getRuntimeContext().getIndexOfThisSubtask()__							AbstractTaskManagerProcessFailureRecoveryTest.touchFile(_									new File(coordinateDir, READY_MARKER_FILE_PREFIX + taskIndex))__							markerCreated = true__						}__						_						if (checkForProceedFile) {_							if (proceedFile.exists()) {_								checkForProceedFile = false__							}_							else {_								_								Thread.sleep(100)__							}_						}_						return value__					}_				})_				.reduce(new ReduceFunction<Long>() {_					@Override_					public Long reduce(Long value1, Long value2) {_						return value1 + value2__					}_				})_				_				_				.flatMap(new RichFlatMapFunction<Long, Long>() {_					@Override_					public void flatMap(Long value, Collector<Long> out) throws Exception {_						assertEquals(numElements * (numElements + 1L) / 2L, (long) value)___						int taskIndex = getRuntimeContext().getIndexOfThisSubtask()__						AbstractTaskManagerProcessFailureRecoveryTest.touchFile(_								new File(coordinateDir, FINISH_MARKER_FILE_PREFIX + taskIndex))__					}_				})___		result.output(new DiscardingOutputFormat<Long>())___		env.execute()__	};test,program,with,job,manager,failure,param,zk,quorum,zoo,keeper,quorum,to,connect,to,param,coordinate,dir,coordination,directory,throws,exception;private,void,test,job,manager,failure,string,zk,quorum,final,file,coordinate,dir,final,file,zookeeper,storage,path,throws,exception,configuration,config,new,configuration,config,set,string,high,availability,options,zookeeper,config,set,string,high,availability,options,zk,quorum,config,set,string,high,availability,options,zookeeper,storage,path,get,absolute,path,execution,environment,env,execution,environment,create,remote,environment,leader,1,config,env,set,parallelism,parallelism,env,set,restart,strategy,restart,strategies,fixed,delay,restart,1,0l,env,get,config,set,execution,mode,execution,mode,env,get,config,disable,sysout,logging,final,long,num,elements,100000l,final,data,set,long,result,env,generate,sequence,1,num,elements,rebalance,map,new,rich,map,function,long,long,private,final,file,proceed,file,new,file,coordinate,dir,private,boolean,marker,created,false,private,boolean,check,for,proceed,file,true,override,public,long,map,long,value,throws,exception,if,marker,created,int,task,index,get,runtime,context,get,index,of,this,subtask,abstract,task,manager,process,failure,recovery,test,touch,file,new,file,coordinate,dir,task,index,marker,created,true,if,check,for,proceed,file,if,proceed,file,exists,check,for,proceed,file,false,else,thread,sleep,100,return,value,reduce,new,reduce,function,long,override,public,long,reduce,long,value1,long,value2,return,value1,value2,flat,map,new,rich,flat,map,function,long,long,override,public,void,flat,map,long,value,collector,long,out,throws,exception,assert,equals,num,elements,num,elements,1l,2l,long,value,int,task,index,get,runtime,context,get,index,of,this,subtask,abstract,task,manager,process,failure,recovery,test,touch,file,new,file,coordinate,dir,task,index,result,output,new,discarding,output,format,long,env,execute
JobManagerHAProcessFailureRecoveryITCase -> private void testJobManagerFailure(String zkQuorum, final File coordinateDir, final File zookeeperStoragePath) throws Exception;1549296629;Test program with JobManager failure.__@param zkQuorum ZooKeeper quorum to connect to_@param coordinateDir Coordination directory_@throws Exception;private void testJobManagerFailure(String zkQuorum, final File coordinateDir, final File zookeeperStoragePath) throws Exception {_		Configuration config = new Configuration()__		config.setString(HighAvailabilityOptions.HA_MODE, "ZOOKEEPER")__		config.setString(HighAvailabilityOptions.HA_ZOOKEEPER_QUORUM, zkQuorum)__		config.setString(HighAvailabilityOptions.HA_STORAGE_PATH, zookeeperStoragePath.getAbsolutePath())___		ExecutionEnvironment env = ExecutionEnvironment.createRemoteEnvironment(_				"leader", 1, config)__		env.setParallelism(PARALLELISM)__		env.setRestartStrategy(RestartStrategies.fixedDelayRestart(1, 0L))__		env.getConfig().setExecutionMode(executionMode)__		env.getConfig().disableSysoutLogging()___		final long numElements = 100000L__		final DataSet<Long> result = env.generateSequence(1, numElements)_				_				.rebalance()_				_				.map(new RichMapFunction<Long, Long>() {__					private final File proceedFile = new File(coordinateDir, PROCEED_MARKER_FILE)___					private boolean markerCreated = false__					private boolean checkForProceedFile = true___					@Override_					public Long map(Long value) throws Exception {_						if (!markerCreated) {_							int taskIndex = getRuntimeContext().getIndexOfThisSubtask()__							AbstractTaskManagerProcessFailureRecoveryTest.touchFile(_									new File(coordinateDir, READY_MARKER_FILE_PREFIX + taskIndex))__							markerCreated = true__						}__						_						if (checkForProceedFile) {_							if (proceedFile.exists()) {_								checkForProceedFile = false__							}_							else {_								_								Thread.sleep(100)__							}_						}_						return value__					}_				})_				.reduce(new ReduceFunction<Long>() {_					@Override_					public Long reduce(Long value1, Long value2) {_						return value1 + value2__					}_				})_				_				_				.flatMap(new RichFlatMapFunction<Long, Long>() {_					@Override_					public void flatMap(Long value, Collector<Long> out) throws Exception {_						assertEquals(numElements * (numElements + 1L) / 2L, (long) value)___						int taskIndex = getRuntimeContext().getIndexOfThisSubtask()__						AbstractTaskManagerProcessFailureRecoveryTest.touchFile(_								new File(coordinateDir, FINISH_MARKER_FILE_PREFIX + taskIndex))__					}_				})___		result.output(new DiscardingOutputFormat<Long>())___		env.execute()__	};test,program,with,job,manager,failure,param,zk,quorum,zoo,keeper,quorum,to,connect,to,param,coordinate,dir,coordination,directory,throws,exception;private,void,test,job,manager,failure,string,zk,quorum,final,file,coordinate,dir,final,file,zookeeper,storage,path,throws,exception,configuration,config,new,configuration,config,set,string,high,availability,options,zookeeper,config,set,string,high,availability,options,zk,quorum,config,set,string,high,availability,options,zookeeper,storage,path,get,absolute,path,execution,environment,env,execution,environment,create,remote,environment,leader,1,config,env,set,parallelism,parallelism,env,set,restart,strategy,restart,strategies,fixed,delay,restart,1,0l,env,get,config,set,execution,mode,execution,mode,env,get,config,disable,sysout,logging,final,long,num,elements,100000l,final,data,set,long,result,env,generate,sequence,1,num,elements,rebalance,map,new,rich,map,function,long,long,private,final,file,proceed,file,new,file,coordinate,dir,private,boolean,marker,created,false,private,boolean,check,for,proceed,file,true,override,public,long,map,long,value,throws,exception,if,marker,created,int,task,index,get,runtime,context,get,index,of,this,subtask,abstract,task,manager,process,failure,recovery,test,touch,file,new,file,coordinate,dir,task,index,marker,created,true,if,check,for,proceed,file,if,proceed,file,exists,check,for,proceed,file,false,else,thread,sleep,100,return,value,reduce,new,reduce,function,long,override,public,long,reduce,long,value1,long,value2,return,value1,value2,flat,map,new,rich,flat,map,function,long,long,override,public,void,flat,map,long,value,collector,long,out,throws,exception,assert,equals,num,elements,num,elements,1l,2l,long,value,int,task,index,get,runtime,context,get,index,of,this,subtask,abstract,task,manager,process,failure,recovery,test,touch,file,new,file,coordinate,dir,task,index,result,output,new,discarding,output,format,long,env,execute
