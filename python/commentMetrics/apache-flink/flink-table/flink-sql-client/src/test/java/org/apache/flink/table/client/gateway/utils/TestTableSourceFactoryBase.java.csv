commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Override public Map<String, String> requiredContext() {     final Map<String, String> context = new HashMap<>().     context.put(UPDATE_MODE(), UPDATE_MODE_VALUE_APPEND()).     context.put(CONNECTOR_TYPE, type).     return context. }
false;public;0;11;;@Override public List<String> supportedProperties() {     final List<String> properties = new ArrayList<>().     properties.add("connector." + testProperty).     properties.add(SCHEMA() + ".#." + SCHEMA_TYPE()).     properties.add(SCHEMA() + ".#." + SCHEMA_NAME()).     properties.add(SCHEMA() + ".#." + ROWTIME_TIMESTAMPS_TYPE()).     properties.add(SCHEMA() + ".#." + ROWTIME_TIMESTAMPS_FROM()).     properties.add(SCHEMA() + ".#." + ROWTIME_WATERMARKS_TYPE()).     return properties. }
false;public;1;12;;@Override public StreamTableSource<Row> createStreamTableSource(Map<String, String> properties) {     final DescriptorProperties params = new DescriptorProperties(true).     params.putProperties(properties).     final Optional<String> proctime = SchemaValidator.deriveProctimeAttribute(params).     final List<RowtimeAttributeDescriptor> rowtime = SchemaValidator.deriveRowtimeAttributes(params).     return new TestTableSource(params.getTableSchema(SCHEMA()), properties.get(testProperty), proctime.orElse(null), rowtime). }
false;public;0;3;;public String getProperty() {     return property. }
false;public;1;4;;@Override public DataStream<Row> getDataStream(StreamExecutionEnvironment execEnv) {     return null. }
false;public;0;4;;@Override public TypeInformation<Row> getReturnType() {     return Types.ROW(schema.getFieldNames(), schema.getFieldTypes()). }
false;public;0;4;;@Override public TableSchema getTableSchema() {     return schema. }
false;public;0;4;;@Override public String explainSource() {     return "TestTableSource". }
false;public;0;4;;@Override public List<RowtimeAttributeDescriptor> getRowtimeAttributeDescriptors() {     return rowtime. }
false;public;0;4;;@Override public String getProctimeAttribute() {     return proctime. }
