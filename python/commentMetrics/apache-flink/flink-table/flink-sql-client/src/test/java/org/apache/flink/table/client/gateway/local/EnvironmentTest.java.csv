commented;modifiers;parameterAmount;loc;comment;code
false;public;0;31;;@Test public void testMerging() throws Exception {     final Map<String, String> replaceVars1 = new HashMap<>().     replaceVars1.put("$VAR_EXECUTION_TYPE", "batch").     replaceVars1.put("$VAR_RESULT_MODE", "table").     replaceVars1.put("$VAR_UPDATE_MODE", "").     replaceVars1.put("$VAR_MAX_ROWS", "100").     final Environment env1 = EnvironmentFileUtil.parseModified(DEFAULTS_ENVIRONMENT_FILE, replaceVars1).     final Map<String, String> replaceVars2 = new HashMap<>(replaceVars1).     replaceVars2.put("TableNumber1", "NewTable").     final Environment env2 = EnvironmentFileUtil.parseModified(FACTORY_ENVIRONMENT_FILE, replaceVars2).     final Environment merged = Environment.merge(env1, env2).     final Set<String> tables = new HashSet<>().     tables.add("TableNumber1").     tables.add("TableNumber2").     tables.add("NewTable").     tables.add("TableSourceSink").     tables.add("TestView1").     tables.add("TestView2").     assertEquals(tables, merged.getTables().keySet()).     assertTrue(merged.getExecution().isStreamingExecution()).     assertEquals(16, merged.getExecution().getMaxParallelism()). }
