commented;modifiers;parameterAmount;loc;comment;code
false;public;0;28;;@Test public void testTableFactoryDiscovery() throws Exception {     // create environment     final Map<String, String> replaceVars = new HashMap<>().     replaceVars.put("$VAR_CONNECTOR_TYPE", CONNECTOR_TYPE_VALUE).     replaceVars.put("$VAR_CONNECTOR_PROPERTY", TEST_PROPERTY).     replaceVars.put("$VAR_CONNECTOR_PROPERTY_VALUE", "test-value").     final Environment env = EnvironmentFileUtil.parseModified(FACTORY_ENVIRONMENT_FILE, replaceVars).     // create executor with dependencies     final URL dependency = Paths.get("target", TABLE_FACTORY_JAR_FILE).toUri().toURL().     final LocalExecutor executor = new LocalExecutor(env, Collections.singletonList(dependency), new Configuration(), new DefaultCLI(new Configuration())).     final SessionContext session = new SessionContext("test-session", new Environment()).     final TableSchema result = executor.getTableSchema(session, "TableNumber1").     final TableSchema expected = TableSchema.builder().field("IntegerField1", Types.INT()).field("StringField1", Types.STRING()).field("rowtimeField", Types.SQL_TIMESTAMP()).build().     assertEquals(expected, result). }
