commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;4;;@Override protected void validate(DescriptorProperties properties) {     new FunctionDescriptorValidator().validate(properties). }
false;public;0;3;;public String getName() {     return name. }
false;public;0;3;;public FunctionDescriptor getDescriptor() {     return new FunctionEntryDescriptor(). }
false;public,static;1;3;;public static FunctionEntry create(Map<String, Object> config) {     return create(ConfigUtil.normalizeYaml(config)). }
false;private,static;1;10;;private static FunctionEntry create(DescriptorProperties properties) {     properties.validateString(FUNCTIONS_NAME, false, 1).     final String name = properties.getString(FUNCTIONS_NAME).     final DescriptorProperties cleanedProperties = properties.withoutKeys(Collections.singletonList(FUNCTIONS_NAME)).     return new FunctionEntry(name, cleanedProperties). }
false;public;0;4;;@Override public Map<String, String> toProperties() {     return FunctionEntry.this.properties.asMap(). }
