commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public TypeInformation<Row> getOutputType() {     return Types.ROW_NAMED(fieldNames, fieldTypes). }
false;public;0;4;;@Override public String[] getFieldNames() {     return fieldNames. }
false;public;0;4;;@Override public TypeInformation<?>[] getFieldTypes() {     return fieldTypes. }
false;public;2;7;;@Override public TableSink<Row> configure(String[] fieldNames, TypeInformation<?>[] fieldTypes) {     final CollectBatchTableSink copy = new CollectBatchTableSink(accumulatorName, serializer).     copy.fieldNames = fieldNames.     copy.fieldTypes = fieldTypes.     return copy. }
false;public;1;6;;@Override public void emitDataSet(DataSet<Row> dataSet) {     dataSet.output(new Utils.CollectHelper<>(accumulatorName, serializer)).name("SQL Client Batch Collect Sink"). }
true;public;0;3;/**  * Returns the serializer for deserializing the collected result.  */ ;/**  * Returns the serializer for deserializing the collected result.  */ public TypeSerializer<Row> getSerializer() {     return serializer. }
