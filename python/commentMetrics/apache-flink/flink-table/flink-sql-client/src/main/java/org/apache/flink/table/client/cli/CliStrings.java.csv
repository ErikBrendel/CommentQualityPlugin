commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;7;;// -------------------------------------------------------------------------------------------- public static AttributedString messageInfo(String message) {     return new AttributedStringBuilder().style(AttributedStyle.DEFAULT.bold().foreground(AttributedStyle.BLUE)).append("[INFO] ").append(message).toAttributedString(). }
false;public,static;2;7;;public static AttributedString messageError(String message, Throwable t) {     while (t.getCause() != null && t.getCause().getMessage() != null && !t.getCause().getMessage().isEmpty()) {         t = t.getCause().     }     return messageError(message, t.getClass().getName() + ": " + t.getMessage()). // return messageError(message, ExceptionUtils.stringifyException(t)). }
false;public,static;1;3;;public static AttributedString messageError(String message) {     return messageError(message, (String) null). }
false;public,static;2;14;;public static AttributedString messageError(String message, String s) {     final AttributedStringBuilder builder = new AttributedStringBuilder().style(AttributedStyle.DEFAULT.bold().foreground(AttributedStyle.RED)).append("[ERROR] ").append(message).     if (s != null) {         builder.append(" Reason:\n").append(s).     }     return builder.toAttributedString(). }
false;private,static;2;10;;private static AttributedString formatCommand(SqlCommand cmd, String description) {     return new AttributedStringBuilder().style(AttributedStyle.DEFAULT.bold()).append(cmd.toString()).append("\t\t").style(AttributedStyle.DEFAULT).append(description).append('\n').toAttributedString(). }
