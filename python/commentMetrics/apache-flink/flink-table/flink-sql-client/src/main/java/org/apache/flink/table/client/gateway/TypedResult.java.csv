commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;public void setType(ResultType type) {     this.type = type. }
false;public;1;3;;public void setPayload(P payload) {     this.payload = payload. }
false;public;0;3;;public ResultType getType() {     return type. }
false;public;0;3;;public P getPayload() {     return payload. }
false;public;0;4;;@Override public String toString() {     return "TypedResult<" + type + ">". }
false;public;1;11;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     TypedResult<?> that = (TypedResult<?>) o.     return type == that.type && Objects.equals(payload, that.payload). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(type, payload). }
false;public,static;0;3;;// -------------------------------------------------------------------------------------------- public static <T> TypedResult<T> empty() {     return new TypedResult<>(ResultType.EMPTY, null). }
false;public,static;1;3;;public static <T> TypedResult<T> payload(T payload) {     return new TypedResult<>(ResultType.PAYLOAD, payload). }
false;public,static;0;3;;public static <T> TypedResult<T> endOfStream() {     return new TypedResult<>(ResultType.EOS, null). }
