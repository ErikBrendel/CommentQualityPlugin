commented;modifiers;parameterAmount;loc;comment;code
true;public,static;1;36;/**  * Create a {@link InternalType} from a {@link TypeInformation}.  *  * <p>Note: Information may be lost. For example, after Pojo is converted to InternalType,  * we no longer know that it is a Pojo and only think it is a Row.  *  * <p>Eg:  * {@link BasicTypeInfo#STRING_TYPE_INFO} => {@link InternalTypes#STRING}.  * {@link BasicTypeInfo#BIG_DEC_TYPE_INFO} => {@link DecimalType}.  * {@link RowTypeInfo} => {@link RowType}.  * {@link PojoTypeInfo} (CompositeType) => {@link RowType}.  * {@link TupleTypeInfo} (CompositeType) => {@link RowType}.  */ ;/**  * Create a {@link InternalType} from a {@link TypeInformation}.  *  * <p>Note: Information may be lost. For example, after Pojo is converted to InternalType,  * we no longer know that it is a Pojo and only think it is a Row.  *  * <p>Eg:  * {@link BasicTypeInfo#STRING_TYPE_INFO} => {@link InternalTypes#STRING}.  * {@link BasicTypeInfo#BIG_DEC_TYPE_INFO} => {@link DecimalType}.  * {@link RowTypeInfo} => {@link RowType}.  * {@link PojoTypeInfo} (CompositeType) => {@link RowType}.  * {@link TupleTypeInfo} (CompositeType) => {@link RowType}.  */ public static InternalType createInternalTypeFromTypeInfo(TypeInformation typeInfo) {     InternalType type = TYPE_INFO_TO_INTERNAL_TYPE.get(typeInfo).     if (type != null) {         return type.     }     if (typeInfo instanceof CompositeType) {         CompositeType compositeType = (CompositeType) typeInfo.         return InternalTypes.createRowType(Stream.iterate(0, x -> x + 1).limit(compositeType.getArity()).map((Function<Integer, TypeInformation>) compositeType::getTypeAt).map(TypeConverters::createInternalTypeFromTypeInfo).toArray(InternalType[]::new), compositeType.getFieldNames()).     } else if (typeInfo instanceof PrimitiveArrayTypeInfo) {         PrimitiveArrayTypeInfo arrayType = (PrimitiveArrayTypeInfo) typeInfo.         return InternalTypes.createArrayType(createInternalTypeFromTypeInfo(arrayType.getComponentType())).     } else if (typeInfo instanceof BasicArrayTypeInfo) {         BasicArrayTypeInfo arrayType = (BasicArrayTypeInfo) typeInfo.         return InternalTypes.createArrayType(createInternalTypeFromTypeInfo(arrayType.getComponentInfo())).     } else if (typeInfo instanceof ObjectArrayTypeInfo) {         ObjectArrayTypeInfo arrayType = (ObjectArrayTypeInfo) typeInfo.         return InternalTypes.createArrayType(createInternalTypeFromTypeInfo(arrayType.getComponentInfo())).     } else if (typeInfo instanceof MapTypeInfo) {         MapTypeInfo mapType = (MapTypeInfo) typeInfo.         return InternalTypes.createMapType(createInternalTypeFromTypeInfo(mapType.getKeyTypeInfo()), createInternalTypeFromTypeInfo(mapType.getValueTypeInfo())).     } else {         return InternalTypes.createGenericType(typeInfo).     } }
