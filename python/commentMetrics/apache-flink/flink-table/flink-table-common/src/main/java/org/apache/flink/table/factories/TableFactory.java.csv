commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Specifies the context that this factory has been implemented for. The framework guarantees to  * only match for this factory if the specified set of properties and values are met.  *  * <p>Typical properties might be:  *   - connector.type  *   - format.type  *  * <p>Specified property versions allow the framework to provide backwards compatible properties  * in case of string format changes:  *   - connector.property-version  *   - format.property-version  *  * <p>An empty context means that the factory matches for all requests.  */ ;/**  * Specifies the context that this factory has been implemented for. The framework guarantees to  * only match for this factory if the specified set of properties and values are met.  *  * <p>Typical properties might be:  *   - connector.type  *   - format.type  *  * <p>Specified property versions allow the framework to provide backwards compatible properties  * in case of string format changes:  *   - connector.property-version  *   - format.property-version  *  * <p>An empty context means that the factory matches for all requests.  */ Map<String, String> requiredContext().
true;;0;1;/**  * List of property keys that this factory can handle. This method will be used for validation.  * If a property is passed that this factory cannot handle, an exception will be thrown. The  * list must not contain the keys that are specified by the context.  *  * <p>Example properties might be:  *   - schema.#.type  *   - schema.#.name  *   - connector.topic  *   - format.line-delimiter  *   - format.ignore-parse-errors  *   - format.fields.#.type  *   - format.fields.#.name  *  * <p>Note: Use "#" to denote an array of values where "#" represents one or more digits. Property  * versions like "format.property-version" must not be part of the supported properties.  *  * <p>In some cases it might be useful to declare wildcards "*". Wildcards can only be declared at  * the end of a property key.  *  * <p>For example, if an arbitrary format should be supported:  *   - format.*  *  * <p>Note: Wildcards should be used with caution as they might swallow unsupported properties  * and thus might lead to undesired behavior.  */ ;/**  * List of property keys that this factory can handle. This method will be used for validation.  * If a property is passed that this factory cannot handle, an exception will be thrown. The  * list must not contain the keys that are specified by the context.  *  * <p>Example properties might be:  *   - schema.#.type  *   - schema.#.name  *   - connector.topic  *   - format.line-delimiter  *   - format.ignore-parse-errors  *   - format.fields.#.type  *   - format.fields.#.name  *  * <p>Note: Use "#" to denote an array of values where "#" represents one or more digits. Property  * versions like "format.property-version" must not be part of the supported properties.  *  * <p>In some cases it might be useful to declare wildcards "*". Wildcards can only be declared at  * the end of a property key.  *  * <p>For example, if an arbitrary format should be supported:  *   - format.*  *  * <p>Note: Wildcards should be used with caution as they might swallow unsupported properties  * and thus might lead to undesired behavior.  */ List<String> supportedProperties().
