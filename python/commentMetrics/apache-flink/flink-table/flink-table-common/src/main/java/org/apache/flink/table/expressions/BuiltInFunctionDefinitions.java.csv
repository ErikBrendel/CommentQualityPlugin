commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;16;;public static List<FunctionDefinition> getDefinitions() {     final Field[] fields = BuiltInFunctionDefinitions.class.getFields().     final List<FunctionDefinition> list = new ArrayList<>(fields.length).     for (Field field : fields) {         if (FunctionDefinition.class.isAssignableFrom(field.getType())) {             try {                 final FunctionDefinition funcDef = (FunctionDefinition) field.get(BuiltInFunctionDefinitions.class).                 list.add(Preconditions.checkNotNull(funcDef)).             } catch (IllegalAccessException e) {                 throw new TableException("The function definition for field " + field.getName() + " is not accessible.", e).             }         }     }     return list. }
