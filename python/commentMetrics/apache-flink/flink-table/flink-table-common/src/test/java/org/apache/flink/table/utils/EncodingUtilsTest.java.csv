commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void testObjectStringEncoding() {     final MyPojo pojo = new MyPojo(33, "Hello").     final String base64 = EncodingUtils.encodeObjectToString(pojo).     assertEquals(pojo, EncodingUtils.decodeStringToObject(base64, Serializable.class)). }
false;public;0;7;;@Test public void testStringBase64Encoding() {     final String string = "Hello, this is apache flink.".     final String base64 = EncodingUtils.encodeStringToBase64(string).     assertEquals("SGVsbG8sIHRoaXMgaXMgYXBhY2hlIGZsaW5rLg==", base64).     assertEquals(string, EncodingUtils.decodeBase64ToString(base64)). }
false;public;0;5;;@Test public void testMd5Hex() {     final String string = "Hello, world! How are you? 高精确".     assertEquals("983abac84e994b4ba73be177e5cc298b", EncodingUtils.hex(EncodingUtils.md5(string))). }
false;public;0;4;;@Test public void testJavaEscaping() {     assertEquals("\\\\hello\\\"world'space/", EncodingUtils.escapeJava("\\hello\"world'space/")). }
false;public;0;4;;@Test public void testRepetition() {     assertEquals("wewewe", EncodingUtils.repeat("we", 3)). }
false;public;1;11;;@Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     MyPojo myPojo = (MyPojo) o.     return number == myPojo.number && Objects.equals(string, myPojo.string). }
false;public;0;4;;@Override public int hashCode() {     return Objects.hash(number, string). }
