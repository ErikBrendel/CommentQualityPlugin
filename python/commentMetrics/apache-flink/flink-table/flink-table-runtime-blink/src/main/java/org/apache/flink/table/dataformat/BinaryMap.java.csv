commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public int numElements() {     return keys.numElements(). }
false;public;3;3;;public void pointTo(MemorySegment segment, int baseOffset, int sizeInBytes) {     pointTo(new MemorySegment[] { segment }, baseOffset, sizeInBytes). }
false;public;3;16;;public void pointTo(MemorySegment[] segments, int offset, int sizeInBytes) {     // Read the numBytes of key array from the first 4 bytes.     final int keyArrayBytes = SegmentsUtil.getInt(segments, offset).     assert keyArrayBytes >= 0 : "keyArraySize (" + keyArrayBytes + ") should >= 0".     final int valueArrayBytes = sizeInBytes - keyArrayBytes - 4.     assert valueArrayBytes >= 0 : "valueArraySize (" + valueArrayBytes + ") should >= 0".     keys.pointTo(segments, offset + 4, keyArrayBytes).     values.pointTo(segments, offset + 4 + keyArrayBytes, valueArrayBytes).     assert keys.numElements() == values.numElements().     this.segments = segments.     this.offset = offset.     this.sizeInBytes = sizeInBytes. }
false;public;0;3;;public BinaryArray keyArray() {     return keys. }
false;public;0;3;;public BinaryArray valueArray() {     return values. }
false;public,static;2;12;;public static BinaryMap valueOf(BinaryArray key, BinaryArray value) {     checkArgument(key.getSegments().length == 1 && value.getSegments().length == 1).     byte[] bytes = new byte[4 + key.getSizeInBytes() + value.getSizeInBytes()].     MemorySegment segment = MemorySegmentFactory.wrap(bytes).     segment.putInt(0, key.getSizeInBytes()).     key.getSegments()[0].copyTo(key.getOffset(), segment, 4, key.getSizeInBytes()).     value.getSegments()[0].copyTo(value.getOffset(), segment, 4 + key.getSizeInBytes(), value.getSizeInBytes()).     BinaryMap map = new BinaryMap().     map.pointTo(segment, 0, bytes.length).     return map. }
false;public,static;3;8;;public static BinaryMap readBinaryMapFieldFromSegments(MemorySegment[] segments, int baseOffset, long offsetAndSize) {     final int size = ((int) offsetAndSize).     int offset = (int) (offsetAndSize >> 32).     BinaryMap map = new BinaryMap().     map.pointTo(segments, offset + baseOffset, size).     return map. }
