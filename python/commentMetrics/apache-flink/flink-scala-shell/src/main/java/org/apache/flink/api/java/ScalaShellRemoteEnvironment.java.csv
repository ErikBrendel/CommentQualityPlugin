# id;timestamp;commentText;codeText;commentWords;codeWords
ScalaShellRemoteEnvironment -> public ScalaShellRemoteEnvironment(String host, int port, FlinkILoop flinkILoop, Configuration clientConfig, String... jarFiles) throws Exception;1461591030;Creates new ScalaShellRemoteEnvironment that has a reference to the FlinkILoop__@param host	   The host name or address of the master (JobManager), where the program should be executed._@param port	   The port of the master (JobManager), where the program should be executed._@param flinkILoop The flink Iloop instance from which the ScalaShellRemoteEnvironment is called._@param clientConfig The configuration used by the client that connects to the cluster._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public ScalaShellRemoteEnvironment(String host, int port, FlinkILoop flinkILoop, Configuration clientConfig, String... jarFiles) throws Exception {_		super(host, port, clientConfig, jarFiles, null)__		this.flinkILoop = flinkILoop__	};creates,new,scala,shell,remote,environment,that,has,a,reference,to,the,flink,iloop,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,flink,iloop,the,flink,iloop,instance,from,which,the,scala,shell,remote,environment,is,called,param,client,config,the,configuration,used,by,the,client,that,connects,to,the,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,scala,shell,remote,environment,string,host,int,port,flink,iloop,flink,iloop,configuration,client,config,string,jar,files,throws,exception,super,host,port,client,config,jar,files,null,this,flink,iloop,flink,iloop
ScalaShellRemoteEnvironment -> public ScalaShellRemoteEnvironment(String host, int port, FlinkILoop flinkILoop, Configuration clientConfig, String... jarFiles) throws Exception;1496260672;Creates new ScalaShellRemoteEnvironment that has a reference to the FlinkILoop.__@param host	   The host name or address of the master (JobManager), where the program should be executed._@param port	   The port of the master (JobManager), where the program should be executed._@param flinkILoop The flink Iloop instance from which the ScalaShellRemoteEnvironment is called._@param clientConfig The configuration used by the client that connects to the cluster._@param jarFiles The JAR files with code that needs to be shipped to the cluster. If the program uses_user-defined functions, user-defined input formats, or any libraries, those must be_provided in the JAR files.;public ScalaShellRemoteEnvironment(String host, int port, FlinkILoop flinkILoop, Configuration clientConfig, String... jarFiles) throws Exception {_		super(host, port, clientConfig, jarFiles, null)__		this.flinkILoop = flinkILoop__	};creates,new,scala,shell,remote,environment,that,has,a,reference,to,the,flink,iloop,param,host,the,host,name,or,address,of,the,master,job,manager,where,the,program,should,be,executed,param,port,the,port,of,the,master,job,manager,where,the,program,should,be,executed,param,flink,iloop,the,flink,iloop,instance,from,which,the,scala,shell,remote,environment,is,called,param,client,config,the,configuration,used,by,the,client,that,connects,to,the,cluster,param,jar,files,the,jar,files,with,code,that,needs,to,be,shipped,to,the,cluster,if,the,program,uses,user,defined,functions,user,defined,input,formats,or,any,libraries,those,must,be,provided,in,the,jar,files;public,scala,shell,remote,environment,string,host,int,port,flink,iloop,flink,iloop,configuration,client,config,string,jar,files,throws,exception,super,host,port,client,config,jar,files,null,this,flink,iloop,flink,iloop
ScalaShellRemoteEnvironment -> @Override 	public JobExecutionResult execute(String jobName) throws Exception;1452779215;compiles jars from files in the shell virtual directory on the fly, sends and executes it in the remote environment__@param jobName name of the job as string_@return Result of the computation_@throws Exception;@Override_	public JobExecutionResult execute(String jobName) throws Exception {_		Plan p = createProgramPlan(jobName)___		URL jarUrl = flinkILoop.writeFilesToDisk().getAbsoluteFile().toURI().toURL()___		_		List<URL> alljars = new ArrayList<>()__		_		String[] extJars = this.flinkILoop.getExternalJars()___		for (String extJar : extJars) {_			URL extJarUrl = new File(extJar).getAbsoluteFile().toURI().toURL()__			alljars.add(extJarUrl)__		}__		_		alljars.add(jarUrl)__		PlanExecutor executor = PlanExecutor.createRemoteExecutor(host, port, new Configuration(),_				alljars.toArray(new URL[alljars.size()]), null)___		executor.setPrintStatusDuringExecution(p.getExecutionConfig().isSysoutLoggingEnabled())__		return executor.executePlan(p)__	};compiles,jars,from,files,in,the,shell,virtual,directory,on,the,fly,sends,and,executes,it,in,the,remote,environment,param,job,name,name,of,the,job,as,string,return,result,of,the,computation,throws,exception;override,public,job,execution,result,execute,string,job,name,throws,exception,plan,p,create,program,plan,job,name,url,jar,url,flink,iloop,write,files,to,disk,get,absolute,file,to,uri,to,url,list,url,alljars,new,array,list,string,ext,jars,this,flink,iloop,get,external,jars,for,string,ext,jar,ext,jars,url,ext,jar,url,new,file,ext,jar,get,absolute,file,to,uri,to,url,alljars,add,ext,jar,url,alljars,add,jar,url,plan,executor,executor,plan,executor,create,remote,executor,host,port,new,configuration,alljars,to,array,new,url,alljars,size,null,executor,set,print,status,during,execution,p,get,execution,config,is,sysout,logging,enabled,return,executor,execute,plan,p
ScalaShellRemoteEnvironment -> @Override 	public JobExecutionResult execute(String jobName) throws Exception;1458823423;compiles jars from files in the shell virtual directory on the fly, sends and executes it in the remote environment__@param jobName name of the job as string_@return Result of the computation_@throws Exception;@Override_	public JobExecutionResult execute(String jobName) throws Exception {_		Plan p = createProgramPlan(jobName)___		URL jarUrl = flinkILoop.writeFilesToDisk().getAbsoluteFile().toURI().toURL()___		_		List<URL> alljars = new ArrayList<>()__		_		String[] extJars = this.flinkILoop.getExternalJars()___		for (String extJar : extJars) {_			URL extJarUrl = new File(extJar).getAbsoluteFile().toURI().toURL()__			alljars.add(extJarUrl)__		}__		_		alljars.add(jarUrl)__		PlanExecutor executor = PlanExecutor.createRemoteExecutor(host, port, new Configuration(),_				alljars.toArray(new URL[alljars.size()]), null)___		executor.setPrintStatusDuringExecution(p.getExecutionConfig().isSysoutLoggingEnabled())__		return executor.executePlan(p)__	};compiles,jars,from,files,in,the,shell,virtual,directory,on,the,fly,sends,and,executes,it,in,the,remote,environment,param,job,name,name,of,the,job,as,string,return,result,of,the,computation,throws,exception;override,public,job,execution,result,execute,string,job,name,throws,exception,plan,p,create,program,plan,job,name,url,jar,url,flink,iloop,write,files,to,disk,get,absolute,file,to,uri,to,url,list,url,alljars,new,array,list,string,ext,jars,this,flink,iloop,get,external,jars,for,string,ext,jar,ext,jars,url,ext,jar,url,new,file,ext,jar,get,absolute,file,to,uri,to,url,alljars,add,ext,jar,url,alljars,add,jar,url,plan,executor,executor,plan,executor,create,remote,executor,host,port,new,configuration,alljars,to,array,new,url,alljars,size,null,executor,set,print,status,during,execution,p,get,execution,config,is,sysout,logging,enabled,return,executor,execute,plan,p
