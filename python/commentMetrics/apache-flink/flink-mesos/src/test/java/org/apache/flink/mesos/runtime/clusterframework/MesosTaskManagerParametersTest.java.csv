commented;modifiers;parameterAmount;loc;comment;code
false;public;0;21;;@Test public void testBuildVolumes() throws Exception {     List<Protos.Volume> vols.     assertEquals(MesosTaskManagerParameters.buildVolumes(Option.<String>apply(null)).size(), 0).     String spec1 = "/host/path:/container/path:RO,/container/path:ro,/host/path:/container/path,/container/path".     vols = MesosTaskManagerParameters.buildVolumes(Option.<String>apply(spec1)).     assertEquals(vols.size(), 4).     assertEquals("/container/path", vols.get(0).getContainerPath()).     assertEquals("/host/path", vols.get(0).getHostPath()).     assertEquals(Protos.Volume.Mode.RO, vols.get(0).getMode()).     assertEquals("/container/path", vols.get(1).getContainerPath()).     assertEquals(Protos.Volume.Mode.RO, vols.get(1).getMode()).     assertEquals("/container/path", vols.get(2).getContainerPath()).     assertEquals("/host/path", vols.get(2).getHostPath()).     assertEquals(Protos.Volume.Mode.RW, vols.get(2).getMode()).     assertEquals("/container/path", vols.get(3).getContainerPath()).     assertEquals(Protos.Volume.Mode.RW, vols.get(3).getMode()).     // should handle empty strings, but not error     assertEquals(0, MesosTaskManagerParameters.buildVolumes(Option.<String>apply("")).size()). }
false;public;0;4;;@Test(expected = IllegalArgumentException.class) public void testBuildVolumesBadMode() throws Exception {     MesosTaskManagerParameters.buildVolumes(Option.<String>apply("/hp:/cp:RF")). }
false;public;0;4;;@Test(expected = IllegalArgumentException.class) public void testBuildVolumesMalformed() throws Exception {     MesosTaskManagerParameters.buildVolumes(Option.<String>apply("/hp:/cp:ro:extra")). }
false;public;0;11;;@Test public void testContainerVolumes() throws Exception {     Configuration config = new Configuration().     config.setString(MesosTaskManagerParameters.MESOS_RM_CONTAINER_VOLUMES, "/host/path:/container/path:ro").     MesosTaskManagerParameters params = MesosTaskManagerParameters.create(config).     assertEquals(1, params.containerVolumes().size()).     assertEquals("/container/path", params.containerVolumes().get(0).getContainerPath()).     assertEquals("/host/path", params.containerVolumes().get(0).getHostPath()).     assertEquals(Protos.Volume.Mode.RO, params.containerVolumes().get(0).getMode()). }
false;public;0;10;;@Test public void testContainerDockerParameter() throws Exception {     Configuration config = new Configuration().     config.setString(MesosTaskManagerParameters.MESOS_RM_CONTAINER_DOCKER_PARAMETERS, "testKey=testValue").     MesosTaskManagerParameters params = MesosTaskManagerParameters.create(config).     assertEquals(params.dockerParameters().size(), 1).     assertEquals(params.dockerParameters().get(0).getKey(), "testKey").     assertEquals(params.dockerParameters().get(0).getValue(), "testValue"). }
false;public;0;17;;@Test public void testContainerDockerParameters() throws Exception {     Configuration config = new Configuration().     config.setString(MesosTaskManagerParameters.MESOS_RM_CONTAINER_DOCKER_PARAMETERS, "testKey1=testValue1,testKey2=testValue2,testParam3=key3=value3,testParam4=\"key4=value4\"").     MesosTaskManagerParameters params = MesosTaskManagerParameters.create(config).     assertEquals(params.dockerParameters().size(), 4).     assertEquals(params.dockerParameters().get(0).getKey(), "testKey1").     assertEquals(params.dockerParameters().get(0).getValue(), "testValue1").     assertEquals(params.dockerParameters().get(1).getKey(), "testKey2").     assertEquals(params.dockerParameters().get(1).getValue(), "testValue2").     assertEquals(params.dockerParameters().get(2).getKey(), "testParam3").     assertEquals(params.dockerParameters().get(2).getValue(), "key3=value3").     assertEquals(params.dockerParameters().get(3).getKey(), "testParam4").     assertEquals(params.dockerParameters().get(3).getValue(), "\"key4=value4\""). }
false;public;0;6;;@Test(expected = IllegalArgumentException.class) public void testContainerDockerParametersMalformed() throws Exception {     Configuration config = new Configuration().     config.setString(MesosTaskManagerParameters.MESOS_RM_CONTAINER_DOCKER_PARAMETERS, "badParam").     MesosTaskManagerParameters params = MesosTaskManagerParameters.create(config). }
false;public;0;12;;@Test public void testUriParameters() throws Exception {     Configuration config = new Configuration().     config.setString(MesosTaskManagerParameters.MESOS_TM_URIS, "file:///dev/null,http://localhost/test,  test_url ").     MesosTaskManagerParameters params = MesosTaskManagerParameters.create(config).     assertEquals(params.uris().size(), 3).     assertEquals(params.uris().get(0), "file:///dev/null").     assertEquals(params.uris().get(1), "http://localhost/test").     assertEquals(params.uris().get(2), "test_url"). }
false;public;0;7;;@Test public void testUriParametersDefault() throws Exception {     Configuration config = new Configuration().     MesosTaskManagerParameters params = MesosTaskManagerParameters.create(config).     assertEquals(params.uris().size(), 0). }
false;public;0;7;;public void testForcePullImageTrue() {     Configuration config = new Configuration().     config.setBoolean(MesosTaskManagerParameters.MESOS_RM_CONTAINER_DOCKER_FORCE_PULL_IMAGE, true).     MesosTaskManagerParameters params = MesosTaskManagerParameters.create(config).     assertEquals(params.dockerForcePullImage(), true). }
false;public;0;8;;@Test public void testForcePullImageFalse() {     Configuration config = new Configuration().     config.setBoolean(MesosTaskManagerParameters.MESOS_RM_CONTAINER_DOCKER_FORCE_PULL_IMAGE, false).     MesosTaskManagerParameters params = MesosTaskManagerParameters.create(config).     assertEquals(params.dockerForcePullImage(), false). }
false;public;0;7;;@Test public void testForcePullImageDefault() {     Configuration config = new Configuration().     MesosTaskManagerParameters params = MesosTaskManagerParameters.create(config).     assertEquals(params.dockerForcePullImage(), false). }
false;public;1;4;;@Override public String call(String s) {     return "foo". }
false;public;1;4;;@Override public String call(String s) {     return "foo". }
false;public;0;21;;@Test public void givenTwoConstraintsInConfigShouldBeParsed() throws Exception {     MesosTaskManagerParameters mesosTaskManagerParameters = MesosTaskManagerParameters.create(withHardHostAttrConstraintConfiguration("cluster:foo,az:eu-west-1")).     assertThat(mesosTaskManagerParameters.constraints().size(), is(2)).     ConstraintEvaluator firstConstraintEvaluator = new HostAttrValueConstraint("cluster", new Func1<String, String>() {          @Override         public String call(String s) {             return "foo".         }     }).     ConstraintEvaluator secondConstraintEvaluator = new HostAttrValueConstraint("az", new Func1<String, String>() {          @Override         public String call(String s) {             return "foo".         }     }).     assertThat(mesosTaskManagerParameters.constraints().get(0).getName(), is(firstConstraintEvaluator.getName())).     assertThat(mesosTaskManagerParameters.constraints().get(1).getName(), is(secondConstraintEvaluator.getName())). }
false;public;1;4;;@Override public String call(String s) {     return "foo". }
false;public;0;13;;@Test public void givenOneConstraintInConfigShouldBeParsed() throws Exception {     MesosTaskManagerParameters mesosTaskManagerParameters = MesosTaskManagerParameters.create(withHardHostAttrConstraintConfiguration("cluster:foo")).     assertThat(mesosTaskManagerParameters.constraints().size(), is(1)).     ConstraintEvaluator firstConstraintEvaluator = new HostAttrValueConstraint("cluster", new Func1<String, String>() {          @Override         public String call(String s) {             return "foo".         }     }).     assertThat(mesosTaskManagerParameters.constraints().get(0).getName(), is(firstConstraintEvaluator.getName())). }
false;public;0;6;;@Test public void givenEmptyConstraintInConfigShouldBeParsed() throws Exception {     MesosTaskManagerParameters mesosTaskManagerParameters = MesosTaskManagerParameters.create(withHardHostAttrConstraintConfiguration("")).     assertThat(mesosTaskManagerParameters.constraints().size(), is(0)). }
false;public;0;6;;@Test public void givenInvalidConstraintInConfigShouldBeParsed() throws Exception {     MesosTaskManagerParameters mesosTaskManagerParameters = MesosTaskManagerParameters.create(withHardHostAttrConstraintConfiguration(",:,")).     assertThat(mesosTaskManagerParameters.constraints().size(), is(0)). }
false;public;0;4;;@Test(expected = IllegalConfigurationException.class) public void testNegativeNumberOfGPUs() throws Exception {     MesosTaskManagerParameters.create(withGPUConfiguration(-1)). }
false;private,static;1;5;;private static Configuration withGPUConfiguration(int gpus) {     Configuration config = new Configuration().     config.setInteger(MesosTaskManagerParameters.MESOS_RM_TASKS_GPUS, gpus).     return config. }
false;private,static;1;9;;private static Configuration withHardHostAttrConstraintConfiguration(final String configuration) {     return new Configuration() {          private static final long serialVersionUID = -3249384117909445760L.          {             setString(MesosTaskManagerParameters.MESOS_CONSTRAINTS_HARD_HOSTATTR, configuration).         }     }. }
