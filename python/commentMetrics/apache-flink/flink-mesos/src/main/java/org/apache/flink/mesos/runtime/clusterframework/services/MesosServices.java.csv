commented;modifiers;parameterAmount;loc;comment;code
true;;2;3;/**  * Creates a {@link MesosWorkerStore} which is used to persist mesos worker in high availability  * mode.  *  * @param configuration to be used  * @param executor to run asynchronous tasks  * @return a mesos worker store  * @throws Exception if the mesos worker store could not be created  */ ;/**  * Creates a {@link MesosWorkerStore} which is used to persist mesos worker in high availability  * mode.  *  * @param configuration to be used  * @param executor to run asynchronous tasks  * @return a mesos worker store  * @throws Exception if the mesos worker store could not be created  */ MesosWorkerStore createMesosWorkerStore(Configuration configuration, Executor executor) throws Exception.
true;;0;1;/**  * Gets a local {@link ActorSystem} which is used for child actors within  * {@link org.apache.flink.mesos.runtime.clusterframework.MesosResourceManager}.  *  * @return a reference to an actor system.  */ ;/**  * Gets a local {@link ActorSystem} which is used for child actors within  * {@link org.apache.flink.mesos.runtime.clusterframework.MesosResourceManager}.  *  * @return a reference to an actor system.  */ ActorSystem getLocalActorSystem().
true;;0;1;/**  * Gets the artifact server with which to serve essential resources to task managers.  * @return a reference to an artifact server.  */ ;/**  * Gets the artifact server with which to serve essential resources to task managers.  * @return a reference to an artifact server.  */ MesosArtifactServer getArtifactServer().
true;;1;1;/**  * Closes all state maintained by the mesos services implementation.  *  * @param cleanup is true if a cleanup shall be performed  * @throws Exception if the closing operation failed  */ ;/**  * Closes all state maintained by the mesos services implementation.  *  * @param cleanup is true if a cleanup shall be performed  * @throws Exception if the closing operation failed  */ void close(boolean cleanup) throws Exception.
