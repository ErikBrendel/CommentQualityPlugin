commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Accept the given offers as advised by the launch coordinator.  *  * <p>Note: This method is a callback for the {@link LaunchCoordinator}.  *  * @param offersToAccept Offers to accept from Mesos  */ ;/**  * Accept the given offers as advised by the launch coordinator.  *  * <p>Note: This method is a callback for the {@link LaunchCoordinator}.  *  * @param offersToAccept Offers to accept from Mesos  */ void acceptOffers(AcceptOffers offersToAccept).
true;;1;1;/**  * Trigger reconciliation with the Mesos master.  *  * <p>Note: This method is a callback for the {@link TaskMonitor}.  *  * @param reconciliationRequest Message containing the tasks which shall be reconciled  */ ;/**  * Trigger reconciliation with the Mesos master.  *  * <p>Note: This method is a callback for the {@link TaskMonitor}.  *  * @param reconciliationRequest Message containing the tasks which shall be reconciled  */ void reconcile(ReconciliationCoordinator.Reconcile reconciliationRequest).
true;;1;1;/**  * Notify that the given Mesos task has been terminated.  *  * <p>Note: This method is a callback for the {@link TaskMonitor}.  *  * @param terminatedTask Message containing the terminated task  */ ;/**  * Notify that the given Mesos task has been terminated.  *  * <p>Note: This method is a callback for the {@link TaskMonitor}.  *  * @param terminatedTask Message containing the terminated task  */ void taskTerminated(TaskMonitor.TaskTerminated terminatedTask).
