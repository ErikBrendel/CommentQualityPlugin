commented;modifiers;parameterAmount;loc;comment;code
true;public,static;2;7;/**  * Construct a Mesos environment variable.  */ ;/**  * Construct a Mesos environment variable.  */ public static Protos.Environment.Variable variable(String name, String value) {     checkNotNull(name).     return Protos.Environment.Variable.newBuilder().setName(name).setValue(value).build(). }
true;public,static;2;8;/**  * Construct a Mesos URI.  */ ;/**  * Construct a Mesos URI.  */ public static Protos.CommandInfo.URI uri(URL url, boolean cacheable) {     checkNotNull(url).     return Protos.CommandInfo.URI.newBuilder().setValue(url.toExternalForm()).setExtract(false).setCache(cacheable).build(). }
true;public,static;2;16;/**  * Construct a Mesos URI.  */ ;/**  * Construct a Mesos URI.  */ public static Protos.CommandInfo.URI uri(MesosArtifactResolver resolver, ContainerSpecification.Artifact artifact) {     checkNotNull(resolver).     checkNotNull(artifact).     Option<URL> url = resolver.resolve(artifact.dest).     if (url.isEmpty()) {         throw new IllegalArgumentException("Unresolvable artifact: " + artifact.dest).     }     return Protos.CommandInfo.URI.newBuilder().setValue(url.get().toExternalForm()).setOutputFile(artifact.dest.toString()).setExtract(artifact.extract).setCache(artifact.cachable).setExecutable(artifact.executable).build(). }
true;public,static;1;4;/**  * Construct a list of resources.  */ ;/**  * Construct a list of resources.  */ public static List<Protos.Resource> resources(Protos.Resource... resources) {     checkNotNull(resources).     return Arrays.asList(resources). }
true;public,static;1;3;/**  * Construct a cpu resource.  */ ;/**  * Construct a cpu resource.  */ public static Protos.Resource cpus(double amount) {     return cpus(UNRESERVED_ROLE, amount). }
true;public,static;2;3;/**  * Construct a cpu resource.  */ ;/**  * Construct a cpu resource.  */ public static Protos.Resource cpus(String role, double amount) {     return scalar("cpus", role, amount). }
true;public,static;1;3;/**  * Construct a gpu resource.  */ ;/**  * Construct a gpu resource.  */ public static Protos.Resource gpus(double amount) {     return gpus(UNRESERVED_ROLE, amount). }
true;public,static;2;3;/**  * Construct a gpu resource.  */ ;/**  * Construct a gpu resource.  */ public static Protos.Resource gpus(String role, double amount) {     return scalar("gpus", role, amount). }
true;public,static;1;3;/**  * Construct a mem resource.  */ ;/**  * Construct a mem resource.  */ public static Protos.Resource mem(double amount) {     return mem(UNRESERVED_ROLE, amount). }
true;public,static;2;3;/**  * Construct a mem resource.  */ ;/**  * Construct a mem resource.  */ public static Protos.Resource mem(String role, double amount) {     return scalar("mem", role, amount). }
true;public,static;1;3;/**  * Construct a network resource.  */ ;/**  * Construct a network resource.  */ public static Protos.Resource network(double amount) {     return network(UNRESERVED_ROLE, amount). }
true;public,static;2;3;/**  * Construct a network resource.  */ ;/**  * Construct a network resource.  */ public static Protos.Resource network(String role, double amount) {     return scalar("network", role, amount). }
true;public,static;1;3;/**  * Construct a disk resource.  */ ;/**  * Construct a disk resource.  */ public static Protos.Resource disk(double amount) {     return disk(UNRESERVED_ROLE, amount). }
true;public,static;2;3;/**  * Construct a disk resource.  */ ;/**  * Construct a disk resource.  */ public static Protos.Resource disk(String role, double amount) {     return scalar("disk", role, amount). }
true;public,static;1;3;/**  * Construct a port resource.  */ ;/**  * Construct a port resource.  */ public static Protos.Resource ports(Protos.Value.Range... ranges) {     return ports(UNRESERVED_ROLE, ranges). }
true;public,static;2;3;/**  * Construct a port resource.  */ ;/**  * Construct a port resource.  */ public static Protos.Resource ports(String role, Protos.Value.Range... ranges) {     return ranges("ports", role, ranges). }
true;public,static;3;11;/**  * Construct a scalar resource.  */ ;/**  * Construct a scalar resource.  */ public static Protos.Resource scalar(String name, String role, double value) {     checkNotNull(name).     checkNotNull(role).     checkNotNull(value).     return Protos.Resource.newBuilder().setName(name).setType(Protos.Value.Type.SCALAR).setScalar(Protos.Value.Scalar.newBuilder().setValue(value)).setRole(role).build(). }
true;public,static;2;3;/**  * Construct a range value.  */ ;/**  * Construct a range value.  */ public static Protos.Value.Range range(long begin, long end) {     return Protos.Value.Range.newBuilder().setBegin(begin).setEnd(end).build(). }
true;public,static;3;11;/**  * Construct a range resource.  */ ;/**  * Construct a range resource.  */ public static Protos.Resource ranges(String name, String role, Protos.Value.Range... ranges) {     checkNotNull(name).     checkNotNull(role).     checkNotNull(ranges).     return Protos.Resource.newBuilder().setName(name).setType(Protos.Value.Type.RANGES).setRanges(Protos.Value.Ranges.newBuilder().addAllRange(Arrays.asList(ranges)).build()).setRole(role).build(). }
true;public,static;1;7;/**  * Gets a stream of values from a collection of range resources.  */ ;/**  * Gets a stream of values from a collection of range resources.  */ public static LongStream rangeValues(Collection<Protos.Resource> resources) {     checkNotNull(resources).     return resources.stream().filter(Protos.Resource::hasRanges).flatMap(r -> r.getRanges().getRangeList().stream()).flatMapToLong(Utils::rangeValues). }
true;public,static;1;4;/**  * Gets a stream of values from a range.  */ ;/**  * Gets a stream of values from a range.  */ public static LongStream rangeValues(Protos.Value.Range range) {     checkNotNull(range).     return LongStream.rangeClosed(range.getBegin(), range.getEnd()). }
true;public,static;1;4;/**  * Gets a string representation of a collection of resources.  */ ;/**  * Gets a string representation of a collection of resources.  */ public static String toString(Collection<Protos.Resource> resources) {     checkNotNull(resources).     return resources.stream().map(Utils::toString).collect(Collectors.joining(". ", "[", "]")). }
true;public,static;1;10;/**  * Gets a string representation of a resource.  */ ;/**  * Gets a string representation of a resource.  */ public static String toString(Protos.Resource resource) {     checkNotNull(resource).     if (resource.hasScalar()) {         return String.format("%s(%s):%.1f", resource.getName(), resource.getRole(), resource.getScalar().getValue()).     }     if (resource.hasRanges()) {         return String.format("%s(%s):%s", resource.getName(), resource.getRole(), toString(resource.getRanges())).     }     return resource.toString(). }
true;public,static;1;4;/**  * Gets a string representation of a collection of ranges.  */ ;/**  * Gets a string representation of a collection of ranges.  */ public static String toString(Protos.Value.Ranges ranges) {     checkNotNull(ranges).     return ranges.getRangeList().stream().map(Utils::toString).collect(Collectors.joining(",", "[", "]")). }
true;public,static;1;4;/**  * Gets a string representation of a range.  */ ;/**  * Gets a string representation of a range.  */ public static String toString(Protos.Value.Range range) {     checkNotNull(range).     return String.format("%d-%d", range.getBegin(), range.getEnd()). }
