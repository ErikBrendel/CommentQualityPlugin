commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public String map(NiFiDataPacket value) throws Exception {     return new String(value.getContent(), Charset.defaultCharset()). }
false;public,static;1;22;;public static void main(String[] args) throws Exception {     StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment().     SiteToSiteClientConfig clientConfig = new SiteToSiteClient.Builder().url("http://localhost:8080/nifi").portName("Data for Flink").requestBatchCount(5).buildConfig().     SourceFunction<NiFiDataPacket> nifiSource = new NiFiSource(clientConfig).     DataStream<NiFiDataPacket> streamSource = env.addSource(nifiSource).setParallelism(2).     DataStream<String> dataStream = streamSource.map(new MapFunction<NiFiDataPacket, String>() {          @Override         public String map(NiFiDataPacket value) throws Exception {             return new String(value.getContent(), Charset.defaultCharset()).         }     }).     dataStream.print().     env.execute(). }
