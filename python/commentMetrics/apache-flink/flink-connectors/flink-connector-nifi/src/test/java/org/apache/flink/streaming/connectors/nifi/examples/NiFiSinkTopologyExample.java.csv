commented;modifiers;parameterAmount;loc;comment;code
false;public;2;5;;@Override public NiFiDataPacket createNiFiDataPacket(String s, RuntimeContext ctx) {     return new StandardNiFiDataPacket(s.getBytes(ConfigConstants.DEFAULT_CHARSET), new HashMap<String, String>()). }
false;public,static;1;19;;public static void main(String[] args) throws Exception {     StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment().     SiteToSiteClientConfig clientConfig = new SiteToSiteClient.Builder().url("http://localhost:8080/nifi").portName("Data from Flink").buildConfig().     DataStreamSink<String> dataStream = env.fromElements("one", "two", "three", "four", "five", "q").addSink(new NiFiSink<>(clientConfig, new NiFiDataPacketBuilder<String>() {          @Override         public NiFiDataPacket createNiFiDataPacket(String s, RuntimeContext ctx) {             return new StandardNiFiDataPacket(s.getBytes(ConfigConstants.DEFAULT_CHARSET), new HashMap<String, String>()).         }     })).     env.execute(). }
