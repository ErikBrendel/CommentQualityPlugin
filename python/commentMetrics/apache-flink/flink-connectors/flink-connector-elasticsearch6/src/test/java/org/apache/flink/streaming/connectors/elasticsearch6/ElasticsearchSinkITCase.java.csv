commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Test public void testElasticsearchSink() throws Exception {     runElasticsearchSinkTest(). }
false;public;0;4;;@Test public void testNullAddresses() throws Exception {     runNullAddressesTest(). }
false;public;0;4;;@Test public void testEmptyAddresses() throws Exception {     runEmptyAddressesTest(). }
false;public;0;4;;@Test public void testInvalidElasticsearchCluster() throws Exception {     runInvalidElasticsearchClusterTest(). }
false;protected;4;12;;@Override protected ElasticsearchSinkBase<Tuple2<Integer, String>, RestHighLevelClient> createElasticsearchSink(int bulkFlushMaxActions, String clusterName, List<HttpHost> httpHosts, ElasticsearchSinkFunction<Tuple2<Integer, String>> elasticsearchSinkFunction) {     ElasticsearchSink.Builder<Tuple2<Integer, String>> builder = new ElasticsearchSink.Builder<>(httpHosts, elasticsearchSinkFunction).     builder.setBulkFlushMaxActions(bulkFlushMaxActions).     return builder.build(). }
false;protected;3;9;;@Override protected ElasticsearchSinkBase<Tuple2<Integer, String>, RestHighLevelClient> createElasticsearchSinkForEmbeddedNode(int bulkFlushMaxActions, String clusterName, ElasticsearchSinkFunction<Tuple2<Integer, String>> elasticsearchSinkFunction) throws Exception {     return createElasticsearchSinkForNode(bulkFlushMaxActions, clusterName, elasticsearchSinkFunction, "127.0.0.1"). }
false;protected;4;15;;@Override protected ElasticsearchSinkBase<Tuple2<Integer, String>, RestHighLevelClient> createElasticsearchSinkForNode(int bulkFlushMaxActions, String clusterName, ElasticsearchSinkFunction<Tuple2<Integer, String>> elasticsearchSinkFunction, String ipAddress) throws Exception {     ArrayList<HttpHost> httpHosts = new ArrayList<>().     httpHosts.add(new HttpHost(ipAddress, 9200, "http")).     ElasticsearchSink.Builder<Tuple2<Integer, String>> builder = new ElasticsearchSink.Builder<>(httpHosts, elasticsearchSinkFunction).     builder.setBulkFlushMaxActions(bulkFlushMaxActions).     return builder.build(). }
