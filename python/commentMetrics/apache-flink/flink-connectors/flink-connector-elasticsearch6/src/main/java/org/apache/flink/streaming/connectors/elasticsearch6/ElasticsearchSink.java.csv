# id;timestamp;commentText;codeText;commentWords;codeWords
ElasticsearchSink -> Builder -> public void setBulkFlushMaxSizeMb(int maxSizeMb);1533129234;Sets the maximum size of buffered actions, in mb, per bulk request.__@param maxSizeMb the maximum size of buffered actions, in mb.;public void setBulkFlushMaxSizeMb(int maxSizeMb) {_			Preconditions.checkArgument(_				maxSizeMb > 0,_				"Max size of buffered actions must be larger than 0.")___			this.bulkRequestsConfig.put(CONFIG_KEY_BULK_FLUSH_MAX_SIZE_MB, String.valueOf(maxSizeMb))__		};sets,the,maximum,size,of,buffered,actions,in,mb,per,bulk,request,param,max,size,mb,the,maximum,size,of,buffered,actions,in,mb;public,void,set,bulk,flush,max,size,mb,int,max,size,mb,preconditions,check,argument,max,size,mb,0,max,size,of,buffered,actions,must,be,larger,than,0,this,bulk,requests,config,put,string,value,of,max,size,mb
ElasticsearchSink -> Builder -> public void setBulkFlushMaxSizeMb(int maxSizeMb);1538385044;Sets the maximum size of buffered actions, in mb, per bulk request.__@param maxSizeMb the maximum size of buffered actions, in mb.;public void setBulkFlushMaxSizeMb(int maxSizeMb) {_			Preconditions.checkArgument(_				maxSizeMb > 0,_				"Max size of buffered actions must be larger than 0.")___			this.bulkRequestsConfig.put(CONFIG_KEY_BULK_FLUSH_MAX_SIZE_MB, String.valueOf(maxSizeMb))__		};sets,the,maximum,size,of,buffered,actions,in,mb,per,bulk,request,param,max,size,mb,the,maximum,size,of,buffered,actions,in,mb;public,void,set,bulk,flush,max,size,mb,int,max,size,mb,preconditions,check,argument,max,size,mb,0,max,size,of,buffered,actions,must,be,larger,than,0,this,bulk,requests,config,put,string,value,of,max,size,mb
ElasticsearchSink -> Builder -> public void setBulkFlushBackoffRetries(int maxRetries);1533129234;Sets the maximum number of retries for a backoff attempt when flushing bulk requests.__@param maxRetries the maximum number of retries for a backoff attempt when flushing bulk requests;public void setBulkFlushBackoffRetries(int maxRetries) {_			Preconditions.checkArgument(_				maxRetries > 0,_				"Max number of backoff attempts must be larger than 0.")___			this.bulkRequestsConfig.put(CONFIG_KEY_BULK_FLUSH_BACKOFF_RETRIES, String.valueOf(maxRetries))__		};sets,the,maximum,number,of,retries,for,a,backoff,attempt,when,flushing,bulk,requests,param,max,retries,the,maximum,number,of,retries,for,a,backoff,attempt,when,flushing,bulk,requests;public,void,set,bulk,flush,backoff,retries,int,max,retries,preconditions,check,argument,max,retries,0,max,number,of,backoff,attempts,must,be,larger,than,0,this,bulk,requests,config,put,string,value,of,max,retries
ElasticsearchSink -> Builder -> public void setBulkFlushBackoffRetries(int maxRetries);1538385044;Sets the maximum number of retries for a backoff attempt when flushing bulk requests.__@param maxRetries the maximum number of retries for a backoff attempt when flushing bulk requests;public void setBulkFlushBackoffRetries(int maxRetries) {_			Preconditions.checkArgument(_				maxRetries > 0,_				"Max number of backoff attempts must be larger than 0.")___			this.bulkRequestsConfig.put(CONFIG_KEY_BULK_FLUSH_BACKOFF_RETRIES, String.valueOf(maxRetries))__		};sets,the,maximum,number,of,retries,for,a,backoff,attempt,when,flushing,bulk,requests,param,max,retries,the,maximum,number,of,retries,for,a,backoff,attempt,when,flushing,bulk,requests;public,void,set,bulk,flush,backoff,retries,int,max,retries,preconditions,check,argument,max,retries,0,max,number,of,backoff,attempts,must,be,larger,than,0,this,bulk,requests,config,put,string,value,of,max,retries
ElasticsearchSink -> Builder -> public void setBulkFlushInterval(long intervalMillis);1533129234;Sets the bulk flush interval, in milliseconds.__@param intervalMillis the bulk flush interval, in milliseconds.;public void setBulkFlushInterval(long intervalMillis) {_			Preconditions.checkArgument(_				intervalMillis >= 0,_				"Interval (in milliseconds) between each flush must be larger than or equal to 0.")___			this.bulkRequestsConfig.put(CONFIG_KEY_BULK_FLUSH_INTERVAL_MS, String.valueOf(intervalMillis))__		};sets,the,bulk,flush,interval,in,milliseconds,param,interval,millis,the,bulk,flush,interval,in,milliseconds;public,void,set,bulk,flush,interval,long,interval,millis,preconditions,check,argument,interval,millis,0,interval,in,milliseconds,between,each,flush,must,be,larger,than,or,equal,to,0,this,bulk,requests,config,put,string,value,of,interval,millis
ElasticsearchSink -> Builder -> public void setBulkFlushInterval(long intervalMillis);1538385044;Sets the bulk flush interval, in milliseconds.__@param intervalMillis the bulk flush interval, in milliseconds.;public void setBulkFlushInterval(long intervalMillis) {_			Preconditions.checkArgument(_				intervalMillis >= 0,_				"Interval (in milliseconds) between each flush must be larger than or equal to 0.")___			this.bulkRequestsConfig.put(CONFIG_KEY_BULK_FLUSH_INTERVAL_MS, String.valueOf(intervalMillis))__		};sets,the,bulk,flush,interval,in,milliseconds,param,interval,millis,the,bulk,flush,interval,in,milliseconds;public,void,set,bulk,flush,interval,long,interval,millis,preconditions,check,argument,interval,millis,0,interval,in,milliseconds,between,each,flush,must,be,larger,than,or,equal,to,0,this,bulk,requests,config,put,string,value,of,interval,millis
ElasticsearchSink -> Builder -> public void setRestClientFactory(RestClientFactory restClientFactory);1533129234;Sets a REST client factory for custom client configuration.__@param restClientFactory the factory that configures the rest client.;public void setRestClientFactory(RestClientFactory restClientFactory) {_			this.restClientFactory = Preconditions.checkNotNull(restClientFactory)__		};sets,a,rest,client,factory,for,custom,client,configuration,param,rest,client,factory,the,factory,that,configures,the,rest,client;public,void,set,rest,client,factory,rest,client,factory,rest,client,factory,this,rest,client,factory,preconditions,check,not,null,rest,client,factory
ElasticsearchSink -> Builder -> public void setRestClientFactory(RestClientFactory restClientFactory);1538385044;Sets a REST client factory for custom client configuration.__@param restClientFactory the factory that configures the rest client.;public void setRestClientFactory(RestClientFactory restClientFactory) {_			this.restClientFactory = Preconditions.checkNotNull(restClientFactory)__		};sets,a,rest,client,factory,for,custom,client,configuration,param,rest,client,factory,the,factory,that,configures,the,rest,client;public,void,set,rest,client,factory,rest,client,factory,rest,client,factory,this,rest,client,factory,preconditions,check,not,null,rest,client,factory
ElasticsearchSink -> Builder -> public ElasticsearchSink<T> build();1533129234;Creates the Elasticsearch sink.__@return the created Elasticsearch sink.;public ElasticsearchSink<T> build() {_			return new ElasticsearchSink<>(bulkRequestsConfig, httpHosts, elasticsearchSinkFunction, failureHandler, restClientFactory)__		};creates,the,elasticsearch,sink,return,the,created,elasticsearch,sink;public,elasticsearch,sink,t,build,return,new,elasticsearch,sink,bulk,requests,config,http,hosts,elasticsearch,sink,function,failure,handler,rest,client,factory
ElasticsearchSink -> Builder -> public ElasticsearchSink<T> build();1538385044;Creates the Elasticsearch sink.__@return the created Elasticsearch sink.;public ElasticsearchSink<T> build() {_			return new ElasticsearchSink<>(bulkRequestsConfig, httpHosts, elasticsearchSinkFunction, failureHandler, restClientFactory)__		};creates,the,elasticsearch,sink,return,the,created,elasticsearch,sink;public,elasticsearch,sink,t,build,return,new,elasticsearch,sink,bulk,requests,config,http,hosts,elasticsearch,sink,function,failure,handler,rest,client,factory
ElasticsearchSink -> Builder -> public Builder(List<HttpHost> httpHosts, ElasticsearchSinkFunction<T> elasticsearchSinkFunction);1533129234;Creates a new {@code ElasticsearchSink} that connects to the cluster using a {@link RestHighLevelClient}.__@param httpHosts The list of {@link HttpHost} to which the {@link RestHighLevelClient} connects to._@param elasticsearchSinkFunction This is used to generate multiple {@link ActionRequest} from the incoming element.;public Builder(List<HttpHost> httpHosts, ElasticsearchSinkFunction<T> elasticsearchSinkFunction) {_			this.httpHosts = Preconditions.checkNotNull(httpHosts)__			this.elasticsearchSinkFunction = Preconditions.checkNotNull(elasticsearchSinkFunction)__		};creates,a,new,code,elasticsearch,sink,that,connects,to,the,cluster,using,a,link,rest,high,level,client,param,http,hosts,the,list,of,link,http,host,to,which,the,link,rest,high,level,client,connects,to,param,elasticsearch,sink,function,this,is,used,to,generate,multiple,link,action,request,from,the,incoming,element;public,builder,list,http,host,http,hosts,elasticsearch,sink,function,t,elasticsearch,sink,function,this,http,hosts,preconditions,check,not,null,http,hosts,this,elasticsearch,sink,function,preconditions,check,not,null,elasticsearch,sink,function
ElasticsearchSink -> Builder -> public Builder(List<HttpHost> httpHosts, ElasticsearchSinkFunction<T> elasticsearchSinkFunction);1538385044;Creates a new {@code ElasticsearchSink} that connects to the cluster using a {@link RestHighLevelClient}.__@param httpHosts The list of {@link HttpHost} to which the {@link RestHighLevelClient} connects to._@param elasticsearchSinkFunction This is used to generate multiple {@link ActionRequest} from the incoming element.;public Builder(List<HttpHost> httpHosts, ElasticsearchSinkFunction<T> elasticsearchSinkFunction) {_			this.httpHosts = Preconditions.checkNotNull(httpHosts)__			this.elasticsearchSinkFunction = Preconditions.checkNotNull(elasticsearchSinkFunction)__		};creates,a,new,code,elasticsearch,sink,that,connects,to,the,cluster,using,a,link,rest,high,level,client,param,http,hosts,the,list,of,link,http,host,to,which,the,link,rest,high,level,client,connects,to,param,elasticsearch,sink,function,this,is,used,to,generate,multiple,link,action,request,from,the,incoming,element;public,builder,list,http,host,http,hosts,elasticsearch,sink,function,t,elasticsearch,sink,function,this,http,hosts,preconditions,check,not,null,http,hosts,this,elasticsearch,sink,function,preconditions,check,not,null,elasticsearch,sink,function
ElasticsearchSink -> Builder -> public void setBulkFlushBackoff(boolean enabled);1533129234;Sets whether or not to enable bulk flush backoff behaviour.__@param enabled whether or not to enable backoffs.;public void setBulkFlushBackoff(boolean enabled) {_			this.bulkRequestsConfig.put(CONFIG_KEY_BULK_FLUSH_BACKOFF_ENABLE, String.valueOf(enabled))__		};sets,whether,or,not,to,enable,bulk,flush,backoff,behaviour,param,enabled,whether,or,not,to,enable,backoffs;public,void,set,bulk,flush,backoff,boolean,enabled,this,bulk,requests,config,put,string,value,of,enabled
ElasticsearchSink -> Builder -> public void setBulkFlushBackoff(boolean enabled);1538385044;Sets whether or not to enable bulk flush backoff behaviour.__@param enabled whether or not to enable backoffs.;public void setBulkFlushBackoff(boolean enabled) {_			this.bulkRequestsConfig.put(CONFIG_KEY_BULK_FLUSH_BACKOFF_ENABLE, String.valueOf(enabled))__		};sets,whether,or,not,to,enable,bulk,flush,backoff,behaviour,param,enabled,whether,or,not,to,enable,backoffs;public,void,set,bulk,flush,backoff,boolean,enabled,this,bulk,requests,config,put,string,value,of,enabled
ElasticsearchSink -> Builder -> public void setBulkFlushMaxActions(int numMaxActions);1533129234;Sets the maximum number of actions to buffer for each bulk request.__@param numMaxActions the maxinum number of actions to buffer per bulk request.;public void setBulkFlushMaxActions(int numMaxActions) {_			Preconditions.checkArgument(_				numMaxActions > 0,_				"Max number of buffered actions must be larger than 0.")___			this.bulkRequestsConfig.put(CONFIG_KEY_BULK_FLUSH_MAX_ACTIONS, String.valueOf(numMaxActions))__		};sets,the,maximum,number,of,actions,to,buffer,for,each,bulk,request,param,num,max,actions,the,maxinum,number,of,actions,to,buffer,per,bulk,request;public,void,set,bulk,flush,max,actions,int,num,max,actions,preconditions,check,argument,num,max,actions,0,max,number,of,buffered,actions,must,be,larger,than,0,this,bulk,requests,config,put,string,value,of,num,max,actions
ElasticsearchSink -> Builder -> public void setBulkFlushMaxActions(int numMaxActions);1538385044;Sets the maximum number of actions to buffer for each bulk request.__@param numMaxActions the maxinum number of actions to buffer per bulk request.;public void setBulkFlushMaxActions(int numMaxActions) {_			Preconditions.checkArgument(_				numMaxActions > 0,_				"Max number of buffered actions must be larger than 0.")___			this.bulkRequestsConfig.put(CONFIG_KEY_BULK_FLUSH_MAX_ACTIONS, String.valueOf(numMaxActions))__		};sets,the,maximum,number,of,actions,to,buffer,for,each,bulk,request,param,num,max,actions,the,maxinum,number,of,actions,to,buffer,per,bulk,request;public,void,set,bulk,flush,max,actions,int,num,max,actions,preconditions,check,argument,num,max,actions,0,max,number,of,buffered,actions,must,be,larger,than,0,this,bulk,requests,config,put,string,value,of,num,max,actions
ElasticsearchSink -> Builder -> public void setBulkFlushBackoffType(FlushBackoffType flushBackoffType);1533129234;Sets the type of back of to use when flushing bulk requests.__@param flushBackoffType the backoff type to use.;public void setBulkFlushBackoffType(FlushBackoffType flushBackoffType) {_			this.bulkRequestsConfig.put(_				CONFIG_KEY_BULK_FLUSH_BACKOFF_TYPE,_				Preconditions.checkNotNull(flushBackoffType).toString())__		};sets,the,type,of,back,of,to,use,when,flushing,bulk,requests,param,flush,backoff,type,the,backoff,type,to,use;public,void,set,bulk,flush,backoff,type,flush,backoff,type,flush,backoff,type,this,bulk,requests,config,put,preconditions,check,not,null,flush,backoff,type,to,string
ElasticsearchSink -> Builder -> public void setBulkFlushBackoffType(FlushBackoffType flushBackoffType);1538385044;Sets the type of back of to use when flushing bulk requests.__@param flushBackoffType the backoff type to use.;public void setBulkFlushBackoffType(FlushBackoffType flushBackoffType) {_			this.bulkRequestsConfig.put(_				CONFIG_KEY_BULK_FLUSH_BACKOFF_TYPE,_				Preconditions.checkNotNull(flushBackoffType).toString())__		};sets,the,type,of,back,of,to,use,when,flushing,bulk,requests,param,flush,backoff,type,the,backoff,type,to,use;public,void,set,bulk,flush,backoff,type,flush,backoff,type,flush,backoff,type,this,bulk,requests,config,put,preconditions,check,not,null,flush,backoff,type,to,string
ElasticsearchSink -> Builder -> public void setFailureHandler(ActionRequestFailureHandler failureHandler);1533129234;Sets a failure handler for action requests.__@param failureHandler This is used to handle failed {@link ActionRequest}.;public void setFailureHandler(ActionRequestFailureHandler failureHandler) {_			this.failureHandler = Preconditions.checkNotNull(failureHandler)__		};sets,a,failure,handler,for,action,requests,param,failure,handler,this,is,used,to,handle,failed,link,action,request;public,void,set,failure,handler,action,request,failure,handler,failure,handler,this,failure,handler,preconditions,check,not,null,failure,handler
ElasticsearchSink -> Builder -> public void setFailureHandler(ActionRequestFailureHandler failureHandler);1538385044;Sets a failure handler for action requests.__@param failureHandler This is used to handle failed {@link ActionRequest}.;public void setFailureHandler(ActionRequestFailureHandler failureHandler) {_			this.failureHandler = Preconditions.checkNotNull(failureHandler)__		};sets,a,failure,handler,for,action,requests,param,failure,handler,this,is,used,to,handle,failed,link,action,request;public,void,set,failure,handler,action,request,failure,handler,failure,handler,this,failure,handler,preconditions,check,not,null,failure,handler
ElasticsearchSink -> Builder -> public void setBulkFlushBackoffDelay(long delayMillis);1533129234;Sets the amount of delay between each backoff attempt when flushing bulk requests, in milliseconds.__@param delayMillis the amount of delay between each backoff attempt when flushing bulk requests, in milliseconds.;public void setBulkFlushBackoffDelay(long delayMillis) {_			Preconditions.checkArgument(_				delayMillis >= 0,_				"Delay (in milliseconds) between each backoff attempt must be larger than or equal to 0.")__			this.bulkRequestsConfig.put(CONFIG_KEY_BULK_FLUSH_BACKOFF_DELAY, String.valueOf(delayMillis))__		};sets,the,amount,of,delay,between,each,backoff,attempt,when,flushing,bulk,requests,in,milliseconds,param,delay,millis,the,amount,of,delay,between,each,backoff,attempt,when,flushing,bulk,requests,in,milliseconds;public,void,set,bulk,flush,backoff,delay,long,delay,millis,preconditions,check,argument,delay,millis,0,delay,in,milliseconds,between,each,backoff,attempt,must,be,larger,than,or,equal,to,0,this,bulk,requests,config,put,string,value,of,delay,millis
ElasticsearchSink -> Builder -> public void setBulkFlushBackoffDelay(long delayMillis);1538385044;Sets the amount of delay between each backoff attempt when flushing bulk requests, in milliseconds.__@param delayMillis the amount of delay between each backoff attempt when flushing bulk requests, in milliseconds.;public void setBulkFlushBackoffDelay(long delayMillis) {_			Preconditions.checkArgument(_				delayMillis >= 0,_				"Delay (in milliseconds) between each backoff attempt must be larger than or equal to 0.")__			this.bulkRequestsConfig.put(CONFIG_KEY_BULK_FLUSH_BACKOFF_DELAY, String.valueOf(delayMillis))__		};sets,the,amount,of,delay,between,each,backoff,attempt,when,flushing,bulk,requests,in,milliseconds,param,delay,millis,the,amount,of,delay,between,each,backoff,attempt,when,flushing,bulk,requests,in,milliseconds;public,void,set,bulk,flush,backoff,delay,long,delay,millis,preconditions,check,argument,delay,millis,0,delay,in,milliseconds,between,each,backoff,attempt,must,be,larger,than,or,equal,to,0,this,bulk,requests,config,put,string,value,of,delay,millis
