commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public StreamShardMetadata getStreamShardMetadata() {     return this.streamShardMetadata. }
false;public;0;3;;public StreamShardHandle getStreamShardHandle() {     return this.streamShardHandle. }
false;public;0;3;;public SequenceNumber getLastProcessedSequenceNum() {     return this.lastProcessedSequenceNum. }
false;public;1;3;;public void setLastProcessedSequenceNum(SequenceNumber update) {     this.lastProcessedSequenceNum = update. }
false;public;0;7;;@Override public String toString() {     return "KinesisStreamShardState{" + "streamShardMetadata='" + streamShardMetadata.toString() + "'" + ", streamShardHandle='" + streamShardHandle.toString() + "'" + ", lastProcessedSequenceNumber='" + lastProcessedSequenceNum.toString() + "'}". }
false;public;1;16;;@Override public boolean equals(Object obj) {     if (!(obj instanceof KinesisStreamShardState)) {         return false.     }     if (obj == this) {         return true.     }     KinesisStreamShardState other = (KinesisStreamShardState) obj.     return streamShardMetadata.equals(other.getStreamShardMetadata()) && streamShardHandle.equals(other.getStreamShardHandle()) && lastProcessedSequenceNum.equals(other.getLastProcessedSequenceNum()). }
false;public;0;4;;@Override public int hashCode() {     return 37 * (streamShardMetadata.hashCode() + streamShardHandle.hashCode() + lastProcessedSequenceNum.hashCode()). }
