commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;10;;@Override protected boolean shouldAdvanceLastDiscoveredShardId(String shardId, String lastSeenShardIdOfStream) {     if (DynamoDBStreamsShardHandle.compareShardIds(shardId, lastSeenShardIdOfStream) <= 0) {         // than the previous last seen shard id of the stream.         return false.     }     return true. }
true;protected;4;15;/**  * Create a new DynamoDB streams shard consumer.  *  * @param subscribedShardStateIndex the state index of the shard this consumer is subscribed to  * @param handle stream handle  * @param lastSeqNum last sequence number  * @param shardMetricsReporter the reporter to report metrics to  * @return  */ ;/**  * Create a new DynamoDB streams shard consumer.  *  * @param subscribedShardStateIndex the state index of the shard this consumer is subscribed to  * @param handle stream handle  * @param lastSeqNum last sequence number  * @param shardMetricsReporter the reporter to report metrics to  * @return  */ @Override protected ShardConsumer createShardConsumer(Integer subscribedShardStateIndex, StreamShardHandle handle, SequenceNumber lastSeqNum, ShardMetricsReporter shardMetricsReporter) {     return new ShardConsumer(this, subscribedShardStateIndex, handle, lastSeqNum, DynamoDBStreamsProxy.create(getConsumerConfiguration()), shardMetricsReporter). }
