commented;modifiers;parameterAmount;loc;comment;code
true;public,abstract;1;1;/**  * Return a partition id based on the input.  * @param element Element to partition  * @return A string representing the partition id  */ ;/**  * Return a partition id based on the input.  * @param element Element to partition  * @return A string representing the partition id  */ public abstract String getPartitionId(T element).
true;public;1;3;/**  * Optional method for setting an explicit hash key.  * @param element Element to get the hash key for  * @return the hash key for the element  */ ;/**  * Optional method for setting an explicit hash key.  * @param element Element to get the hash key for  * @return the hash key for the element  */ public String getExplicitHashKey(T element) {     return null. }
true;public;2;2;/**  * Optional initializer.  *  * @param indexOfThisSubtask Index of this partitioner instance  * @param numberOfParallelSubtasks Total number of parallel instances  */ ;/**  * Optional initializer.  *  * @param indexOfThisSubtask Index of this partitioner instance  * @param numberOfParallelSubtasks Total number of parallel instances  */ public void initialize(int indexOfThisSubtask, int numberOfParallelSubtasks) { }
