# id;timestamp;commentText;codeText;commentWords;codeWords
KinesisPartitioner -> public String getExplicitHashKey(T element);1480685315;Optional method for setting an explicit hash key_@param element Element to get the hash key for_@return the hash key for the element;public String getExplicitHashKey(T element) {_		return null__	};optional,method,for,setting,an,explicit,hash,key,param,element,element,to,get,the,hash,key,for,return,the,hash,key,for,the,element;public,string,get,explicit,hash,key,t,element,return,null
KinesisPartitioner -> public String getExplicitHashKey(T element);1495923079;Optional method for setting an explicit hash key._@param element Element to get the hash key for_@return the hash key for the element;public String getExplicitHashKey(T element) {_		return null__	};optional,method,for,setting,an,explicit,hash,key,param,element,element,to,get,the,hash,key,for,return,the,hash,key,for,the,element;public,string,get,explicit,hash,key,t,element,return,null
KinesisPartitioner -> public String getExplicitHashKey(T element);1515757408;Optional method for setting an explicit hash key._@param element Element to get the hash key for_@return the hash key for the element;public String getExplicitHashKey(T element) {_		return null__	};optional,method,for,setting,an,explicit,hash,key,param,element,element,to,get,the,hash,key,for,return,the,hash,key,for,the,element;public,string,get,explicit,hash,key,t,element,return,null
KinesisPartitioner -> public String getExplicitHashKey(T element);1515757408;Optional method for setting an explicit hash key._@param element Element to get the hash key for_@return the hash key for the element;public String getExplicitHashKey(T element) {_		return null__	};optional,method,for,setting,an,explicit,hash,key,param,element,element,to,get,the,hash,key,for,return,the,hash,key,for,the,element;public,string,get,explicit,hash,key,t,element,return,null
KinesisPartitioner -> public abstract String getPartitionId(T element)_;1480685315;Return a partition id based on the input_@param element Element to partition_@return A string representing the partition id;public abstract String getPartitionId(T element)_;return,a,partition,id,based,on,the,input,param,element,element,to,partition,return,a,string,representing,the,partition,id;public,abstract,string,get,partition,id,t,element
KinesisPartitioner -> public abstract String getPartitionId(T element)_;1495923079;Return a partition id based on the input._@param element Element to partition_@return A string representing the partition id;public abstract String getPartitionId(T element)_;return,a,partition,id,based,on,the,input,param,element,element,to,partition,return,a,string,representing,the,partition,id;public,abstract,string,get,partition,id,t,element
KinesisPartitioner -> public abstract String getPartitionId(T element)_;1515757408;Return a partition id based on the input._@param element Element to partition_@return A string representing the partition id;public abstract String getPartitionId(T element)_;return,a,partition,id,based,on,the,input,param,element,element,to,partition,return,a,string,representing,the,partition,id;public,abstract,string,get,partition,id,t,element
KinesisPartitioner -> public abstract String getPartitionId(T element)_;1515757408;Return a partition id based on the input._@param element Element to partition_@return A string representing the partition id;public abstract String getPartitionId(T element)_;return,a,partition,id,based,on,the,input,param,element,element,to,partition,return,a,string,representing,the,partition,id;public,abstract,string,get,partition,id,t,element
KinesisPartitioner -> public void initialize(int indexOfThisSubtask, int numberOfParallelSubtasks);1480685315;Optional initializer.__@param indexOfThisSubtask Index of this partitioner instance_@param numberOfParallelSubtasks Total number of parallel instances;public void initialize(int indexOfThisSubtask, int numberOfParallelSubtasks) {_		_	};optional,initializer,param,index,of,this,subtask,index,of,this,partitioner,instance,param,number,of,parallel,subtasks,total,number,of,parallel,instances;public,void,initialize,int,index,of,this,subtask,int,number,of,parallel,subtasks
KinesisPartitioner -> public void initialize(int indexOfThisSubtask, int numberOfParallelSubtasks);1495923079;Optional initializer.__@param indexOfThisSubtask Index of this partitioner instance_@param numberOfParallelSubtasks Total number of parallel instances;public void initialize(int indexOfThisSubtask, int numberOfParallelSubtasks) {_		_	};optional,initializer,param,index,of,this,subtask,index,of,this,partitioner,instance,param,number,of,parallel,subtasks,total,number,of,parallel,instances;public,void,initialize,int,index,of,this,subtask,int,number,of,parallel,subtasks
KinesisPartitioner -> public void initialize(int indexOfThisSubtask, int numberOfParallelSubtasks);1515757408;Optional initializer.__@param indexOfThisSubtask Index of this partitioner instance_@param numberOfParallelSubtasks Total number of parallel instances;public void initialize(int indexOfThisSubtask, int numberOfParallelSubtasks) {_	};optional,initializer,param,index,of,this,subtask,index,of,this,partitioner,instance,param,number,of,parallel,subtasks,total,number,of,parallel,instances;public,void,initialize,int,index,of,this,subtask,int,number,of,parallel,subtasks
KinesisPartitioner -> public void initialize(int indexOfThisSubtask, int numberOfParallelSubtasks);1515757408;Optional initializer.__@param indexOfThisSubtask Index of this partitioner instance_@param numberOfParallelSubtasks Total number of parallel instances;public void initialize(int indexOfThisSubtask, int numberOfParallelSubtasks) {_	};optional,initializer,param,index,of,this,subtask,index,of,this,partitioner,instance,param,number,of,parallel,subtasks,total,number,of,parallel,instances;public,void,initialize,int,index,of,this,subtask,int,number,of,parallel,subtasks
