# id;timestamp;commentText;codeText;commentWords;codeWords
FlinkKinesisConsumer -> public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps);1480685315;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param streams_The AWS Kinesis streams to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		checkNotNull(streams, "streams can not be null")__		checkArgument(streams.size() != 0, "must be consuming at least 1 stream")__		checkArgument(!streams.contains(""), "stream names cannot be empty Strings")__		this.streams = streams___		this.configProps = checkNotNull(configProps, "configProps can not be null")___		_		KinesisConfigUtil.validateConsumerConfiguration(this.configProps)___		this.deserializer = checkNotNull(deserializer, "deserializer can not be null")___		if (LOG.isInfoEnabled()) {_			StringBuilder sb = new StringBuilder()__			for (String stream : streams) {_				sb.append(stream).append(", ")__			}_			LOG.info("Flink Kinesis Consumer is going to read the following streams: {}", sb.toString())__		}_	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,streams,the,aws,kinesis,streams,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,list,string,streams,kinesis,deserialization,schema,t,deserializer,properties,config,props,check,not,null,streams,streams,can,not,be,null,check,argument,streams,size,0,must,be,consuming,at,least,1,stream,check,argument,streams,contains,stream,names,cannot,be,empty,strings,this,streams,streams,this,config,props,check,not,null,config,props,config,props,can,not,be,null,kinesis,config,util,validate,consumer,configuration,this,config,props,this,deserializer,check,not,null,deserializer,deserializer,can,not,be,null,if,log,is,info,enabled,string,builder,sb,new,string,builder,for,string,stream,streams,sb,append,stream,append,log,info,flink,kinesis,consumer,is,going,to,read,the,following,streams,sb,to,string
FlinkKinesisConsumer -> public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps);1494145732;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param streams_The AWS Kinesis streams to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		checkNotNull(streams, "streams can not be null")__		checkArgument(streams.size() != 0, "must be consuming at least 1 stream")__		checkArgument(!streams.contains(""), "stream names cannot be empty Strings")__		this.streams = streams___		this.configProps = checkNotNull(configProps, "configProps can not be null")___		_		KinesisConfigUtil.validateConsumerConfiguration(this.configProps)___		this.deserializer = checkNotNull(deserializer, "deserializer can not be null")___		if (LOG.isInfoEnabled()) {_			StringBuilder sb = new StringBuilder()__			for (String stream : streams) {_				sb.append(stream).append(", ")__			}_			LOG.info("Flink Kinesis Consumer is going to read the following streams: {}", sb.toString())__		}_	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,streams,the,aws,kinesis,streams,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,list,string,streams,kinesis,deserialization,schema,t,deserializer,properties,config,props,check,not,null,streams,streams,can,not,be,null,check,argument,streams,size,0,must,be,consuming,at,least,1,stream,check,argument,streams,contains,stream,names,cannot,be,empty,strings,this,streams,streams,this,config,props,check,not,null,config,props,config,props,can,not,be,null,kinesis,config,util,validate,consumer,configuration,this,config,props,this,deserializer,check,not,null,deserializer,deserializer,can,not,be,null,if,log,is,info,enabled,string,builder,sb,new,string,builder,for,string,stream,streams,sb,append,stream,append,log,info,flink,kinesis,consumer,is,going,to,read,the,following,streams,sb,to,string
FlinkKinesisConsumer -> public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps);1494149584;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param streams_The AWS Kinesis streams to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		checkNotNull(streams, "streams can not be null")__		checkArgument(streams.size() != 0, "must be consuming at least 1 stream")__		checkArgument(!streams.contains(""), "stream names cannot be empty Strings")__		this.streams = streams___		this.configProps = checkNotNull(configProps, "configProps can not be null")___		_		KinesisConfigUtil.validateConsumerConfiguration(this.configProps)___		this.deserializer = checkNotNull(deserializer, "deserializer can not be null")___		if (LOG.isInfoEnabled()) {_			StringBuilder sb = new StringBuilder()__			for (String stream : streams) {_				sb.append(stream).append(", ")__			}_			LOG.info("Flink Kinesis Consumer is going to read the following streams: {}", sb.toString())__		}_	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,streams,the,aws,kinesis,streams,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,list,string,streams,kinesis,deserialization,schema,t,deserializer,properties,config,props,check,not,null,streams,streams,can,not,be,null,check,argument,streams,size,0,must,be,consuming,at,least,1,stream,check,argument,streams,contains,stream,names,cannot,be,empty,strings,this,streams,streams,this,config,props,check,not,null,config,props,config,props,can,not,be,null,kinesis,config,util,validate,consumer,configuration,this,config,props,this,deserializer,check,not,null,deserializer,deserializer,can,not,be,null,if,log,is,info,enabled,string,builder,sb,new,string,builder,for,string,stream,streams,sb,append,stream,append,log,info,flink,kinesis,consumer,is,going,to,read,the,following,streams,sb,to,string
FlinkKinesisConsumer -> public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps);1495787238;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param streams_The AWS Kinesis streams to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		checkNotNull(streams, "streams can not be null")__		checkArgument(streams.size() != 0, "must be consuming at least 1 stream")__		checkArgument(!streams.contains(""), "stream names cannot be empty Strings")__		this.streams = streams___		this.configProps = checkNotNull(configProps, "configProps can not be null")___		_		KinesisConfigUtil.validateConsumerConfiguration(this.configProps)___		this.deserializer = checkNotNull(deserializer, "deserializer can not be null")___		if (LOG.isInfoEnabled()) {_			StringBuilder sb = new StringBuilder()__			for (String stream : streams) {_				sb.append(stream).append(", ")__			}_			LOG.info("Flink Kinesis Consumer is going to read the following streams: {}", sb.toString())__		}_	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,streams,the,aws,kinesis,streams,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,list,string,streams,kinesis,deserialization,schema,t,deserializer,properties,config,props,check,not,null,streams,streams,can,not,be,null,check,argument,streams,size,0,must,be,consuming,at,least,1,stream,check,argument,streams,contains,stream,names,cannot,be,empty,strings,this,streams,streams,this,config,props,check,not,null,config,props,config,props,can,not,be,null,kinesis,config,util,validate,consumer,configuration,this,config,props,this,deserializer,check,not,null,deserializer,deserializer,can,not,be,null,if,log,is,info,enabled,string,builder,sb,new,string,builder,for,string,stream,streams,sb,append,stream,append,log,info,flink,kinesis,consumer,is,going,to,read,the,following,streams,sb,to,string
FlinkKinesisConsumer -> public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps);1495787239;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param streams_The AWS Kinesis streams to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		checkNotNull(streams, "streams can not be null")__		checkArgument(streams.size() != 0, "must be consuming at least 1 stream")__		checkArgument(!streams.contains(""), "stream names cannot be empty Strings")__		this.streams = streams___		this.configProps = checkNotNull(configProps, "configProps can not be null")___		_		KinesisConfigUtil.validateConsumerConfiguration(this.configProps)___		this.deserializer = checkNotNull(deserializer, "deserializer can not be null")___		if (LOG.isInfoEnabled()) {_			StringBuilder sb = new StringBuilder()__			for (String stream : streams) {_				sb.append(stream).append(", ")__			}_			LOG.info("Flink Kinesis Consumer is going to read the following streams: {}", sb.toString())__		}_	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,streams,the,aws,kinesis,streams,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,list,string,streams,kinesis,deserialization,schema,t,deserializer,properties,config,props,check,not,null,streams,streams,can,not,be,null,check,argument,streams,size,0,must,be,consuming,at,least,1,stream,check,argument,streams,contains,stream,names,cannot,be,empty,strings,this,streams,streams,this,config,props,check,not,null,config,props,config,props,can,not,be,null,kinesis,config,util,validate,consumer,configuration,this,config,props,this,deserializer,check,not,null,deserializer,deserializer,can,not,be,null,if,log,is,info,enabled,string,builder,sb,new,string,builder,for,string,stream,streams,sb,append,stream,append,log,info,flink,kinesis,consumer,is,going,to,read,the,following,streams,sb,to,string
FlinkKinesisConsumer -> public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps);1495923079;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param streams_The AWS Kinesis streams to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		checkNotNull(streams, "streams can not be null")__		checkArgument(streams.size() != 0, "must be consuming at least 1 stream")__		checkArgument(!streams.contains(""), "stream names cannot be empty Strings")__		this.streams = streams___		this.configProps = checkNotNull(configProps, "configProps can not be null")___		_		KinesisConfigUtil.validateConsumerConfiguration(this.configProps)___		this.deserializer = checkNotNull(deserializer, "deserializer can not be null")___		if (LOG.isInfoEnabled()) {_			StringBuilder sb = new StringBuilder()__			for (String stream : streams) {_				sb.append(stream).append(", ")__			}_			LOG.info("Flink Kinesis Consumer is going to read the following streams: {}", sb.toString())__		}_	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,streams,the,aws,kinesis,streams,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,list,string,streams,kinesis,deserialization,schema,t,deserializer,properties,config,props,check,not,null,streams,streams,can,not,be,null,check,argument,streams,size,0,must,be,consuming,at,least,1,stream,check,argument,streams,contains,stream,names,cannot,be,empty,strings,this,streams,streams,this,config,props,check,not,null,config,props,config,props,can,not,be,null,kinesis,config,util,validate,consumer,configuration,this,config,props,this,deserializer,check,not,null,deserializer,deserializer,can,not,be,null,if,log,is,info,enabled,string,builder,sb,new,string,builder,for,string,stream,streams,sb,append,stream,append,log,info,flink,kinesis,consumer,is,going,to,read,the,following,streams,sb,to,string
FlinkKinesisConsumer -> public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps);1503598628;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param streams_The AWS Kinesis streams to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		checkNotNull(streams, "streams can not be null")__		checkArgument(streams.size() != 0, "must be consuming at least 1 stream")__		checkArgument(!streams.contains(""), "stream names cannot be empty Strings")__		this.streams = streams___		this.configProps = checkNotNull(configProps, "configProps can not be null")___		_		KinesisConfigUtil.validateConsumerConfiguration(this.configProps)___		this.deserializer = checkNotNull(deserializer, "deserializer can not be null")___		if (LOG.isInfoEnabled()) {_			StringBuilder sb = new StringBuilder()__			for (String stream : streams) {_				sb.append(stream).append(", ")__			}_			LOG.info("Flink Kinesis Consumer is going to read the following streams: {}", sb.toString())__		}_	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,streams,the,aws,kinesis,streams,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,list,string,streams,kinesis,deserialization,schema,t,deserializer,properties,config,props,check,not,null,streams,streams,can,not,be,null,check,argument,streams,size,0,must,be,consuming,at,least,1,stream,check,argument,streams,contains,stream,names,cannot,be,empty,strings,this,streams,streams,this,config,props,check,not,null,config,props,config,props,can,not,be,null,kinesis,config,util,validate,consumer,configuration,this,config,props,this,deserializer,check,not,null,deserializer,deserializer,can,not,be,null,if,log,is,info,enabled,string,builder,sb,new,string,builder,for,string,stream,streams,sb,append,stream,append,log,info,flink,kinesis,consumer,is,going,to,read,the,following,streams,sb,to,string
FlinkKinesisConsumer -> public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps);1504760052;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param streams_The AWS Kinesis streams to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		checkNotNull(streams, "streams can not be null")__		checkArgument(streams.size() != 0, "must be consuming at least 1 stream")__		checkArgument(!streams.contains(""), "stream names cannot be empty Strings")__		this.streams = streams___		this.configProps = checkNotNull(configProps, "configProps can not be null")___		_		KinesisConfigUtil.validateConsumerConfiguration(this.configProps)___		checkNotNull(deserializer, "deserializer can not be null")__		checkArgument(_			InstantiationUtil.isSerializable(deserializer),_			"The provided deserialization schema is not serializable: " + deserializer.getClass().getName() + ". " +_				"Please check that it does not contain references to non-serializable instances.")__		this.deserializer = deserializer___		if (LOG.isInfoEnabled()) {_			StringBuilder sb = new StringBuilder()__			for (String stream : streams) {_				sb.append(stream).append(", ")__			}_			LOG.info("Flink Kinesis Consumer is going to read the following streams: {}", sb.toString())__		}_	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,streams,the,aws,kinesis,streams,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,list,string,streams,kinesis,deserialization,schema,t,deserializer,properties,config,props,check,not,null,streams,streams,can,not,be,null,check,argument,streams,size,0,must,be,consuming,at,least,1,stream,check,argument,streams,contains,stream,names,cannot,be,empty,strings,this,streams,streams,this,config,props,check,not,null,config,props,config,props,can,not,be,null,kinesis,config,util,validate,consumer,configuration,this,config,props,check,not,null,deserializer,deserializer,can,not,be,null,check,argument,instantiation,util,is,serializable,deserializer,the,provided,deserialization,schema,is,not,serializable,deserializer,get,class,get,name,please,check,that,it,does,not,contain,references,to,non,serializable,instances,this,deserializer,deserializer,if,log,is,info,enabled,string,builder,sb,new,string,builder,for,string,stream,streams,sb,append,stream,append,log,info,flink,kinesis,consumer,is,going,to,read,the,following,streams,sb,to,string
FlinkKinesisConsumer -> public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps);1512029104;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param streams_The AWS Kinesis streams to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		checkNotNull(streams, "streams can not be null")__		checkArgument(streams.size() != 0, "must be consuming at least 1 stream")__		checkArgument(!streams.contains(""), "stream names cannot be empty Strings")__		this.streams = streams___		this.configProps = checkNotNull(configProps, "configProps can not be null")___		_		KinesisConfigUtil.validateConsumerConfiguration(this.configProps)___		checkNotNull(deserializer, "deserializer can not be null")__		checkArgument(_			InstantiationUtil.isSerializable(deserializer),_			"The provided deserialization schema is not serializable: " + deserializer.getClass().getName() + ". " +_				"Please check that it does not contain references to non-serializable instances.")__		this.deserializer = deserializer___		if (LOG.isInfoEnabled()) {_			StringBuilder sb = new StringBuilder()__			for (String stream : streams) {_				sb.append(stream).append(", ")__			}_			LOG.info("Flink Kinesis Consumer is going to read the following streams: {}", sb.toString())__		}_	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,streams,the,aws,kinesis,streams,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,list,string,streams,kinesis,deserialization,schema,t,deserializer,properties,config,props,check,not,null,streams,streams,can,not,be,null,check,argument,streams,size,0,must,be,consuming,at,least,1,stream,check,argument,streams,contains,stream,names,cannot,be,empty,strings,this,streams,streams,this,config,props,check,not,null,config,props,config,props,can,not,be,null,kinesis,config,util,validate,consumer,configuration,this,config,props,check,not,null,deserializer,deserializer,can,not,be,null,check,argument,instantiation,util,is,serializable,deserializer,the,provided,deserialization,schema,is,not,serializable,deserializer,get,class,get,name,please,check,that,it,does,not,contain,references,to,non,serializable,instances,this,deserializer,deserializer,if,log,is,info,enabled,string,builder,sb,new,string,builder,for,string,stream,streams,sb,append,stream,append,log,info,flink,kinesis,consumer,is,going,to,read,the,following,streams,sb,to,string
FlinkKinesisConsumer -> public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps);1515757408;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param streams_The AWS Kinesis streams to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		checkNotNull(streams, "streams can not be null")__		checkArgument(streams.size() != 0, "must be consuming at least 1 stream")__		checkArgument(!streams.contains(""), "stream names cannot be empty Strings")__		this.streams = streams___		this.configProps = checkNotNull(configProps, "configProps can not be null")___		_		KinesisConfigUtil.validateConsumerConfiguration(this.configProps)___		checkNotNull(deserializer, "deserializer can not be null")__		checkArgument(_			InstantiationUtil.isSerializable(deserializer),_			"The provided deserialization schema is not serializable: " + deserializer.getClass().getName() + ". " +_				"Please check that it does not contain references to non-serializable instances.")__		this.deserializer = deserializer___		if (LOG.isInfoEnabled()) {_			StringBuilder sb = new StringBuilder()__			for (String stream : streams) {_				sb.append(stream).append(", ")__			}_			LOG.info("Flink Kinesis Consumer is going to read the following streams: {}", sb.toString())__		}_	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,streams,the,aws,kinesis,streams,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,list,string,streams,kinesis,deserialization,schema,t,deserializer,properties,config,props,check,not,null,streams,streams,can,not,be,null,check,argument,streams,size,0,must,be,consuming,at,least,1,stream,check,argument,streams,contains,stream,names,cannot,be,empty,strings,this,streams,streams,this,config,props,check,not,null,config,props,config,props,can,not,be,null,kinesis,config,util,validate,consumer,configuration,this,config,props,check,not,null,deserializer,deserializer,can,not,be,null,check,argument,instantiation,util,is,serializable,deserializer,the,provided,deserialization,schema,is,not,serializable,deserializer,get,class,get,name,please,check,that,it,does,not,contain,references,to,non,serializable,instances,this,deserializer,deserializer,if,log,is,info,enabled,string,builder,sb,new,string,builder,for,string,stream,streams,sb,append,stream,append,log,info,flink,kinesis,consumer,is,going,to,read,the,following,streams,sb,to,string
FlinkKinesisConsumer -> public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps);1517943538;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param streams_The AWS Kinesis streams to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		checkNotNull(streams, "streams can not be null")__		checkArgument(streams.size() != 0, "must be consuming at least 1 stream")__		checkArgument(!streams.contains(""), "stream names cannot be empty Strings")__		this.streams = streams___		this.configProps = checkNotNull(configProps, "configProps can not be null")___		_		KinesisConfigUtil.validateConsumerConfiguration(this.configProps)___		checkNotNull(deserializer, "deserializer can not be null")__		checkArgument(_			InstantiationUtil.isSerializable(deserializer),_			"The provided deserialization schema is not serializable: " + deserializer.getClass().getName() + ". " +_				"Please check that it does not contain references to non-serializable instances.")__		this.deserializer = deserializer___		if (LOG.isInfoEnabled()) {_			StringBuilder sb = new StringBuilder()__			for (String stream : streams) {_				sb.append(stream).append(", ")__			}_			LOG.info("Flink Kinesis Consumer is going to read the following streams: {}", sb.toString())__		}_	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,streams,the,aws,kinesis,streams,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,list,string,streams,kinesis,deserialization,schema,t,deserializer,properties,config,props,check,not,null,streams,streams,can,not,be,null,check,argument,streams,size,0,must,be,consuming,at,least,1,stream,check,argument,streams,contains,stream,names,cannot,be,empty,strings,this,streams,streams,this,config,props,check,not,null,config,props,config,props,can,not,be,null,kinesis,config,util,validate,consumer,configuration,this,config,props,check,not,null,deserializer,deserializer,can,not,be,null,check,argument,instantiation,util,is,serializable,deserializer,the,provided,deserialization,schema,is,not,serializable,deserializer,get,class,get,name,please,check,that,it,does,not,contain,references,to,non,serializable,instances,this,deserializer,deserializer,if,log,is,info,enabled,string,builder,sb,new,string,builder,for,string,stream,streams,sb,append,stream,append,log,info,flink,kinesis,consumer,is,going,to,read,the,following,streams,sb,to,string
FlinkKinesisConsumer -> public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps);1517943538;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param streams_The AWS Kinesis streams to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		checkNotNull(streams, "streams can not be null")__		checkArgument(streams.size() != 0, "must be consuming at least 1 stream")__		checkArgument(!streams.contains(""), "stream names cannot be empty Strings")__		this.streams = streams___		this.configProps = checkNotNull(configProps, "configProps can not be null")___		_		KinesisConfigUtil.validateConsumerConfiguration(this.configProps)___		checkNotNull(deserializer, "deserializer can not be null")__		checkArgument(_			InstantiationUtil.isSerializable(deserializer),_			"The provided deserialization schema is not serializable: " + deserializer.getClass().getName() + ". " +_				"Please check that it does not contain references to non-serializable instances.")__		this.deserializer = deserializer___		if (LOG.isInfoEnabled()) {_			StringBuilder sb = new StringBuilder()__			for (String stream : streams) {_				sb.append(stream).append(", ")__			}_			LOG.info("Flink Kinesis Consumer is going to read the following streams: {}", sb.toString())__		}_	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,streams,the,aws,kinesis,streams,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,list,string,streams,kinesis,deserialization,schema,t,deserializer,properties,config,props,check,not,null,streams,streams,can,not,be,null,check,argument,streams,size,0,must,be,consuming,at,least,1,stream,check,argument,streams,contains,stream,names,cannot,be,empty,strings,this,streams,streams,this,config,props,check,not,null,config,props,config,props,can,not,be,null,kinesis,config,util,validate,consumer,configuration,this,config,props,check,not,null,deserializer,deserializer,can,not,be,null,check,argument,instantiation,util,is,serializable,deserializer,the,provided,deserialization,schema,is,not,serializable,deserializer,get,class,get,name,please,check,that,it,does,not,contain,references,to,non,serializable,instances,this,deserializer,deserializer,if,log,is,info,enabled,string,builder,sb,new,string,builder,for,string,stream,streams,sb,append,stream,append,log,info,flink,kinesis,consumer,is,going,to,read,the,following,streams,sb,to,string
FlinkKinesisConsumer -> public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps);1518718884;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param streams_The AWS Kinesis streams to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		checkNotNull(streams, "streams can not be null")__		checkArgument(streams.size() != 0, "must be consuming at least 1 stream")__		checkArgument(!streams.contains(""), "stream names cannot be empty Strings")__		this.streams = streams___		this.configProps = checkNotNull(configProps, "configProps can not be null")___		_		KinesisConfigUtil.validateConsumerConfiguration(this.configProps)___		checkNotNull(deserializer, "deserializer can not be null")__		checkArgument(_			InstantiationUtil.isSerializable(deserializer),_			"The provided deserialization schema is not serializable: " + deserializer.getClass().getName() + ". " +_				"Please check that it does not contain references to non-serializable instances.")__		this.deserializer = deserializer___		if (LOG.isInfoEnabled()) {_			StringBuilder sb = new StringBuilder()__			for (String stream : streams) {_				sb.append(stream).append(", ")__			}_			LOG.info("Flink Kinesis Consumer is going to read the following streams: {}", sb.toString())__		}_	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,streams,the,aws,kinesis,streams,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,list,string,streams,kinesis,deserialization,schema,t,deserializer,properties,config,props,check,not,null,streams,streams,can,not,be,null,check,argument,streams,size,0,must,be,consuming,at,least,1,stream,check,argument,streams,contains,stream,names,cannot,be,empty,strings,this,streams,streams,this,config,props,check,not,null,config,props,config,props,can,not,be,null,kinesis,config,util,validate,consumer,configuration,this,config,props,check,not,null,deserializer,deserializer,can,not,be,null,check,argument,instantiation,util,is,serializable,deserializer,the,provided,deserialization,schema,is,not,serializable,deserializer,get,class,get,name,please,check,that,it,does,not,contain,references,to,non,serializable,instances,this,deserializer,deserializer,if,log,is,info,enabled,string,builder,sb,new,string,builder,for,string,stream,streams,sb,append,stream,append,log,info,flink,kinesis,consumer,is,going,to,read,the,following,streams,sb,to,string
FlinkKinesisConsumer -> public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps);1542797087;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param streams_The AWS Kinesis streams to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(List<String> streams, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		checkNotNull(streams, "streams can not be null")__		checkArgument(streams.size() != 0, "must be consuming at least 1 stream")__		checkArgument(!streams.contains(""), "stream names cannot be empty Strings")__		this.streams = streams___		this.configProps = checkNotNull(configProps, "configProps can not be null")___		_		KinesisConfigUtil.validateConsumerConfiguration(this.configProps)___		checkNotNull(deserializer, "deserializer can not be null")__		checkArgument(_			InstantiationUtil.isSerializable(deserializer),_			"The provided deserialization schema is not serializable: " + deserializer.getClass().getName() + ". " +_				"Please check that it does not contain references to non-serializable instances.")__		this.deserializer = deserializer___		if (LOG.isInfoEnabled()) {_			StringBuilder sb = new StringBuilder()__			for (String stream : streams) {_				sb.append(stream).append(", ")__			}_			LOG.info("Flink Kinesis Consumer is going to read the following streams: {}", sb.toString())__		}_	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,streams,the,aws,kinesis,streams,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,list,string,streams,kinesis,deserialization,schema,t,deserializer,properties,config,props,check,not,null,streams,streams,can,not,be,null,check,argument,streams,size,0,must,be,consuming,at,least,1,stream,check,argument,streams,contains,stream,names,cannot,be,empty,strings,this,streams,streams,this,config,props,check,not,null,config,props,config,props,can,not,be,null,kinesis,config,util,validate,consumer,configuration,this,config,props,check,not,null,deserializer,deserializer,can,not,be,null,check,argument,instantiation,util,is,serializable,deserializer,the,provided,deserialization,schema,is,not,serializable,deserializer,get,class,get,name,please,check,that,it,does,not,contain,references,to,non,serializable,instances,this,deserializer,deserializer,if,log,is,info,enabled,string,builder,sb,new,string,builder,for,string,stream,streams,sb,append,stream,append,log,info,flink,kinesis,consumer,is,going,to,read,the,following,streams,sb,to,string
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps);1480685315;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The deserializer used to convert raw bytes of Kinesis records to Java objects (without key)._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps) {_		this(stream, new KinesisDeserializationSchemaWrapper<>(deserializer), configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,without,key,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,deserialization,schema,t,deserializer,properties,config,props,this,stream,new,kinesis,deserialization,schema,wrapper,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps);1494145732;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The deserializer used to convert raw bytes of Kinesis records to Java objects (without key)._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps) {_		this(stream, new KinesisDeserializationSchemaWrapper<>(deserializer), configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,without,key,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,deserialization,schema,t,deserializer,properties,config,props,this,stream,new,kinesis,deserialization,schema,wrapper,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps);1494149584;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The deserializer used to convert raw bytes of Kinesis records to Java objects (without key)._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps) {_		this(stream, new KinesisDeserializationSchemaWrapper<>(deserializer), configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,without,key,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,deserialization,schema,t,deserializer,properties,config,props,this,stream,new,kinesis,deserialization,schema,wrapper,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps);1495787238;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The deserializer used to convert raw bytes of Kinesis records to Java objects (without key)._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps) {_		this(stream, new KinesisDeserializationSchemaWrapper<>(deserializer), configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,without,key,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,deserialization,schema,t,deserializer,properties,config,props,this,stream,new,kinesis,deserialization,schema,wrapper,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps);1495787239;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The deserializer used to convert raw bytes of Kinesis records to Java objects (without key)._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps) {_		this(stream, new KinesisDeserializationSchemaWrapper<>(deserializer), configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,without,key,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,deserialization,schema,t,deserializer,properties,config,props,this,stream,new,kinesis,deserialization,schema,wrapper,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps);1495923079;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The deserializer used to convert raw bytes of Kinesis records to Java objects (without key)._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps) {_		this(stream, new KinesisDeserializationSchemaWrapper<>(deserializer), configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,without,key,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,deserialization,schema,t,deserializer,properties,config,props,this,stream,new,kinesis,deserialization,schema,wrapper,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps);1503598628;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The deserializer used to convert raw bytes of Kinesis records to Java objects (without key)._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps) {_		this(stream, new KinesisDeserializationSchemaWrapper<>(deserializer), configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,without,key,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,deserialization,schema,t,deserializer,properties,config,props,this,stream,new,kinesis,deserialization,schema,wrapper,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps);1504760052;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The deserializer used to convert raw bytes of Kinesis records to Java objects (without key)._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps) {_		this(stream, new KinesisDeserializationSchemaWrapper<>(deserializer), configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,without,key,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,deserialization,schema,t,deserializer,properties,config,props,this,stream,new,kinesis,deserialization,schema,wrapper,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps);1512029104;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The deserializer used to convert raw bytes of Kinesis records to Java objects (without key)._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps) {_		this(stream, new KinesisDeserializationSchemaWrapper<>(deserializer), configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,without,key,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,deserialization,schema,t,deserializer,properties,config,props,this,stream,new,kinesis,deserialization,schema,wrapper,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps);1515757408;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The deserializer used to convert raw bytes of Kinesis records to Java objects (without key)._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps) {_		this(stream, new KinesisDeserializationSchemaWrapper<>(deserializer), configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,without,key,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,deserialization,schema,t,deserializer,properties,config,props,this,stream,new,kinesis,deserialization,schema,wrapper,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps);1517943538;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The deserializer used to convert raw bytes of Kinesis records to Java objects (without key)._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps) {_		this(stream, new KinesisDeserializationSchemaWrapper<>(deserializer), configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,without,key,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,deserialization,schema,t,deserializer,properties,config,props,this,stream,new,kinesis,deserialization,schema,wrapper,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps);1517943538;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The deserializer used to convert raw bytes of Kinesis records to Java objects (without key)._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps) {_		this(stream, new KinesisDeserializationSchemaWrapper<>(deserializer), configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,without,key,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,deserialization,schema,t,deserializer,properties,config,props,this,stream,new,kinesis,deserialization,schema,wrapper,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps);1518718884;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The deserializer used to convert raw bytes of Kinesis records to Java objects (without key)._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps) {_		this(stream, new KinesisDeserializationSchemaWrapper<>(deserializer), configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,without,key,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,deserialization,schema,t,deserializer,properties,config,props,this,stream,new,kinesis,deserialization,schema,wrapper,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps);1542797087;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The deserializer used to convert raw bytes of Kinesis records to Java objects (without key)._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, DeserializationSchema<T> deserializer, Properties configProps) {_		this(stream, new KinesisDeserializationSchemaWrapper<>(deserializer), configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,without,key,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,deserialization,schema,t,deserializer,properties,config,props,this,stream,new,kinesis,deserialization,schema,wrapper,deserializer,config,props
FlinkKinesisConsumer -> protected KinesisDataFetcher<T> createFetcher( 			List<String> streams, 			SourceFunction.SourceContext<T> sourceContext, 			RuntimeContext runtimeContext, 			Properties configProps, 			KinesisDeserializationSchema<T> deserializationSchema);1494149584;This method is exposed for tests that need to mock the KinesisDataFetcher in the consumer.;protected KinesisDataFetcher<T> createFetcher(_			List<String> streams,_			SourceFunction.SourceContext<T> sourceContext,_			RuntimeContext runtimeContext,_			Properties configProps,_			KinesisDeserializationSchema<T> deserializationSchema) {__		return new KinesisDataFetcher<>(streams, sourceContext, runtimeContext, configProps, deserializationSchema)__	};this,method,is,exposed,for,tests,that,need,to,mock,the,kinesis,data,fetcher,in,the,consumer;protected,kinesis,data,fetcher,t,create,fetcher,list,string,streams,source,function,source,context,t,source,context,runtime,context,runtime,context,properties,config,props,kinesis,deserialization,schema,t,deserialization,schema,return,new,kinesis,data,fetcher,streams,source,context,runtime,context,config,props,deserialization,schema
FlinkKinesisConsumer -> protected KinesisDataFetcher<T> createFetcher( 			List<String> streams, 			SourceFunction.SourceContext<T> sourceContext, 			RuntimeContext runtimeContext, 			Properties configProps, 			KinesisDeserializationSchema<T> deserializationSchema);1495787238;This method is exposed for tests that need to mock the KinesisDataFetcher in the consumer.;protected KinesisDataFetcher<T> createFetcher(_			List<String> streams,_			SourceFunction.SourceContext<T> sourceContext,_			RuntimeContext runtimeContext,_			Properties configProps,_			KinesisDeserializationSchema<T> deserializationSchema) {__		return new KinesisDataFetcher<>(streams, sourceContext, runtimeContext, configProps, deserializationSchema)__	};this,method,is,exposed,for,tests,that,need,to,mock,the,kinesis,data,fetcher,in,the,consumer;protected,kinesis,data,fetcher,t,create,fetcher,list,string,streams,source,function,source,context,t,source,context,runtime,context,runtime,context,properties,config,props,kinesis,deserialization,schema,t,deserialization,schema,return,new,kinesis,data,fetcher,streams,source,context,runtime,context,config,props,deserialization,schema
FlinkKinesisConsumer -> protected KinesisDataFetcher<T> createFetcher( 			List<String> streams, 			SourceFunction.SourceContext<T> sourceContext, 			RuntimeContext runtimeContext, 			Properties configProps, 			KinesisDeserializationSchema<T> deserializationSchema);1495787239;This method is exposed for tests that need to mock the KinesisDataFetcher in the consumer.;protected KinesisDataFetcher<T> createFetcher(_			List<String> streams,_			SourceFunction.SourceContext<T> sourceContext,_			RuntimeContext runtimeContext,_			Properties configProps,_			KinesisDeserializationSchema<T> deserializationSchema) {__		return new KinesisDataFetcher<>(streams, sourceContext, runtimeContext, configProps, deserializationSchema)__	};this,method,is,exposed,for,tests,that,need,to,mock,the,kinesis,data,fetcher,in,the,consumer;protected,kinesis,data,fetcher,t,create,fetcher,list,string,streams,source,function,source,context,t,source,context,runtime,context,runtime,context,properties,config,props,kinesis,deserialization,schema,t,deserialization,schema,return,new,kinesis,data,fetcher,streams,source,context,runtime,context,config,props,deserialization,schema
FlinkKinesisConsumer -> protected KinesisDataFetcher<T> createFetcher( 			List<String> streams, 			SourceFunction.SourceContext<T> sourceContext, 			RuntimeContext runtimeContext, 			Properties configProps, 			KinesisDeserializationSchema<T> deserializationSchema);1495923079;This method is exposed for tests that need to mock the KinesisDataFetcher in the consumer.;protected KinesisDataFetcher<T> createFetcher(_			List<String> streams,_			SourceFunction.SourceContext<T> sourceContext,_			RuntimeContext runtimeContext,_			Properties configProps,_			KinesisDeserializationSchema<T> deserializationSchema) {__		return new KinesisDataFetcher<>(streams, sourceContext, runtimeContext, configProps, deserializationSchema)__	};this,method,is,exposed,for,tests,that,need,to,mock,the,kinesis,data,fetcher,in,the,consumer;protected,kinesis,data,fetcher,t,create,fetcher,list,string,streams,source,function,source,context,t,source,context,runtime,context,runtime,context,properties,config,props,kinesis,deserialization,schema,t,deserialization,schema,return,new,kinesis,data,fetcher,streams,source,context,runtime,context,config,props,deserialization,schema
FlinkKinesisConsumer -> protected KinesisDataFetcher<T> createFetcher( 			List<String> streams, 			SourceFunction.SourceContext<T> sourceContext, 			RuntimeContext runtimeContext, 			Properties configProps, 			KinesisDeserializationSchema<T> deserializationSchema);1503598628;This method is exposed for tests that need to mock the KinesisDataFetcher in the consumer.;protected KinesisDataFetcher<T> createFetcher(_			List<String> streams,_			SourceFunction.SourceContext<T> sourceContext,_			RuntimeContext runtimeContext,_			Properties configProps,_			KinesisDeserializationSchema<T> deserializationSchema) {__		return new KinesisDataFetcher<>(streams, sourceContext, runtimeContext, configProps, deserializationSchema)__	};this,method,is,exposed,for,tests,that,need,to,mock,the,kinesis,data,fetcher,in,the,consumer;protected,kinesis,data,fetcher,t,create,fetcher,list,string,streams,source,function,source,context,t,source,context,runtime,context,runtime,context,properties,config,props,kinesis,deserialization,schema,t,deserialization,schema,return,new,kinesis,data,fetcher,streams,source,context,runtime,context,config,props,deserialization,schema
FlinkKinesisConsumer -> protected KinesisDataFetcher<T> createFetcher( 			List<String> streams, 			SourceFunction.SourceContext<T> sourceContext, 			RuntimeContext runtimeContext, 			Properties configProps, 			KinesisDeserializationSchema<T> deserializationSchema);1504760052;This method is exposed for tests that need to mock the KinesisDataFetcher in the consumer.;protected KinesisDataFetcher<T> createFetcher(_			List<String> streams,_			SourceFunction.SourceContext<T> sourceContext,_			RuntimeContext runtimeContext,_			Properties configProps,_			KinesisDeserializationSchema<T> deserializationSchema) {__		return new KinesisDataFetcher<>(streams, sourceContext, runtimeContext, configProps, deserializationSchema)__	};this,method,is,exposed,for,tests,that,need,to,mock,the,kinesis,data,fetcher,in,the,consumer;protected,kinesis,data,fetcher,t,create,fetcher,list,string,streams,source,function,source,context,t,source,context,runtime,context,runtime,context,properties,config,props,kinesis,deserialization,schema,t,deserialization,schema,return,new,kinesis,data,fetcher,streams,source,context,runtime,context,config,props,deserialization,schema
FlinkKinesisConsumer -> protected KinesisDataFetcher<T> createFetcher( 			List<String> streams, 			SourceFunction.SourceContext<T> sourceContext, 			RuntimeContext runtimeContext, 			Properties configProps, 			KinesisDeserializationSchema<T> deserializationSchema);1512029104;This method is exposed for tests that need to mock the KinesisDataFetcher in the consumer.;protected KinesisDataFetcher<T> createFetcher(_			List<String> streams,_			SourceFunction.SourceContext<T> sourceContext,_			RuntimeContext runtimeContext,_			Properties configProps,_			KinesisDeserializationSchema<T> deserializationSchema) {__		return new KinesisDataFetcher<>(streams, sourceContext, runtimeContext, configProps, deserializationSchema)__	};this,method,is,exposed,for,tests,that,need,to,mock,the,kinesis,data,fetcher,in,the,consumer;protected,kinesis,data,fetcher,t,create,fetcher,list,string,streams,source,function,source,context,t,source,context,runtime,context,runtime,context,properties,config,props,kinesis,deserialization,schema,t,deserialization,schema,return,new,kinesis,data,fetcher,streams,source,context,runtime,context,config,props,deserialization,schema
FlinkKinesisConsumer -> protected KinesisDataFetcher<T> createFetcher( 			List<String> streams, 			SourceFunction.SourceContext<T> sourceContext, 			RuntimeContext runtimeContext, 			Properties configProps, 			KinesisDeserializationSchema<T> deserializationSchema);1515757408;This method is exposed for tests that need to mock the KinesisDataFetcher in the consumer.;protected KinesisDataFetcher<T> createFetcher(_			List<String> streams,_			SourceFunction.SourceContext<T> sourceContext,_			RuntimeContext runtimeContext,_			Properties configProps,_			KinesisDeserializationSchema<T> deserializationSchema) {__		return new KinesisDataFetcher<>(streams, sourceContext, runtimeContext, configProps, deserializationSchema)__	};this,method,is,exposed,for,tests,that,need,to,mock,the,kinesis,data,fetcher,in,the,consumer;protected,kinesis,data,fetcher,t,create,fetcher,list,string,streams,source,function,source,context,t,source,context,runtime,context,runtime,context,properties,config,props,kinesis,deserialization,schema,t,deserialization,schema,return,new,kinesis,data,fetcher,streams,source,context,runtime,context,config,props,deserialization,schema
FlinkKinesisConsumer -> protected KinesisDataFetcher<T> createFetcher( 			List<String> streams, 			SourceFunction.SourceContext<T> sourceContext, 			RuntimeContext runtimeContext, 			Properties configProps, 			KinesisDeserializationSchema<T> deserializationSchema);1517943538;This method is exposed for tests that need to mock the KinesisDataFetcher in the consumer.;protected KinesisDataFetcher<T> createFetcher(_			List<String> streams,_			SourceFunction.SourceContext<T> sourceContext,_			RuntimeContext runtimeContext,_			Properties configProps,_			KinesisDeserializationSchema<T> deserializationSchema) {__		return new KinesisDataFetcher<>(streams, sourceContext, runtimeContext, configProps, deserializationSchema)__	};this,method,is,exposed,for,tests,that,need,to,mock,the,kinesis,data,fetcher,in,the,consumer;protected,kinesis,data,fetcher,t,create,fetcher,list,string,streams,source,function,source,context,t,source,context,runtime,context,runtime,context,properties,config,props,kinesis,deserialization,schema,t,deserialization,schema,return,new,kinesis,data,fetcher,streams,source,context,runtime,context,config,props,deserialization,schema
FlinkKinesisConsumer -> protected KinesisDataFetcher<T> createFetcher( 			List<String> streams, 			SourceFunction.SourceContext<T> sourceContext, 			RuntimeContext runtimeContext, 			Properties configProps, 			KinesisDeserializationSchema<T> deserializationSchema);1517943538;This method is exposed for tests that need to mock the KinesisDataFetcher in the consumer.;protected KinesisDataFetcher<T> createFetcher(_			List<String> streams,_			SourceFunction.SourceContext<T> sourceContext,_			RuntimeContext runtimeContext,_			Properties configProps,_			KinesisDeserializationSchema<T> deserializationSchema) {__		return new KinesisDataFetcher<>(streams, sourceContext, runtimeContext, configProps, deserializationSchema)__	};this,method,is,exposed,for,tests,that,need,to,mock,the,kinesis,data,fetcher,in,the,consumer;protected,kinesis,data,fetcher,t,create,fetcher,list,string,streams,source,function,source,context,t,source,context,runtime,context,runtime,context,properties,config,props,kinesis,deserialization,schema,t,deserialization,schema,return,new,kinesis,data,fetcher,streams,source,context,runtime,context,config,props,deserialization,schema
FlinkKinesisConsumer -> protected KinesisDataFetcher<T> createFetcher( 			List<String> streams, 			SourceFunction.SourceContext<T> sourceContext, 			RuntimeContext runtimeContext, 			Properties configProps, 			KinesisDeserializationSchema<T> deserializationSchema);1518718884;This method is exposed for tests that need to mock the KinesisDataFetcher in the consumer.;protected KinesisDataFetcher<T> createFetcher(_			List<String> streams,_			SourceFunction.SourceContext<T> sourceContext,_			RuntimeContext runtimeContext,_			Properties configProps,_			KinesisDeserializationSchema<T> deserializationSchema) {__		return new KinesisDataFetcher<>(streams, sourceContext, runtimeContext, configProps, deserializationSchema, shardAssigner)__	};this,method,is,exposed,for,tests,that,need,to,mock,the,kinesis,data,fetcher,in,the,consumer;protected,kinesis,data,fetcher,t,create,fetcher,list,string,streams,source,function,source,context,t,source,context,runtime,context,runtime,context,properties,config,props,kinesis,deserialization,schema,t,deserialization,schema,return,new,kinesis,data,fetcher,streams,source,context,runtime,context,config,props,deserialization,schema,shard,assigner
FlinkKinesisConsumer -> protected KinesisDataFetcher<T> createFetcher( 			List<String> streams, 			SourceFunction.SourceContext<T> sourceContext, 			RuntimeContext runtimeContext, 			Properties configProps, 			KinesisDeserializationSchema<T> deserializationSchema);1542797087;This method is exposed for tests that need to mock the KinesisDataFetcher in the consumer.;protected KinesisDataFetcher<T> createFetcher(_			List<String> streams,_			SourceFunction.SourceContext<T> sourceContext,_			RuntimeContext runtimeContext,_			Properties configProps,_			KinesisDeserializationSchema<T> deserializationSchema) {__		return new KinesisDataFetcher<>(streams, sourceContext, runtimeContext, configProps, deserializationSchema, shardAssigner, periodicWatermarkAssigner)__	};this,method,is,exposed,for,tests,that,need,to,mock,the,kinesis,data,fetcher,in,the,consumer;protected,kinesis,data,fetcher,t,create,fetcher,list,string,streams,source,function,source,context,t,source,context,runtime,context,runtime,context,properties,config,props,kinesis,deserialization,schema,t,deserialization,schema,return,new,kinesis,data,fetcher,streams,source,context,runtime,context,config,props,deserialization,schema,shard,assigner,periodic,watermark,assigner
FlinkKinesisConsumer -> public void setShardAssigner(KinesisShardAssigner shardAssigner);1518718884;Provide a custom assigner to influence how shards are distributed over subtasks._@param shardAssigner;public void setShardAssigner(KinesisShardAssigner shardAssigner) {_		this.shardAssigner = checkNotNull(shardAssigner, "function can not be null")__		ClosureCleaner.clean(shardAssigner, true)__	};provide,a,custom,assigner,to,influence,how,shards,are,distributed,over,subtasks,param,shard,assigner;public,void,set,shard,assigner,kinesis,shard,assigner,shard,assigner,this,shard,assigner,check,not,null,shard,assigner,function,can,not,be,null,closure,cleaner,clean,shard,assigner,true
FlinkKinesisConsumer -> public void setShardAssigner(KinesisShardAssigner shardAssigner);1542797087;Provide a custom assigner to influence how shards are distributed over subtasks._@param shardAssigner shard assigner;public void setShardAssigner(KinesisShardAssigner shardAssigner) {_		this.shardAssigner = checkNotNull(shardAssigner, "function can not be null")__		ClosureCleaner.clean(shardAssigner, true)__	};provide,a,custom,assigner,to,influence,how,shards,are,distributed,over,subtasks,param,shard,assigner,shard,assigner;public,void,set,shard,assigner,kinesis,shard,assigner,shard,assigner,this,shard,assigner,check,not,null,shard,assigner,function,can,not,be,null,closure,cleaner,clean,shard,assigner,true
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps);1480685315;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		this(Collections.singletonList(stream), deserializer, configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,kinesis,deserialization,schema,t,deserializer,properties,config,props,this,collections,singleton,list,stream,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps);1494145732;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		this(Collections.singletonList(stream), deserializer, configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,kinesis,deserialization,schema,t,deserializer,properties,config,props,this,collections,singleton,list,stream,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps);1494149584;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		this(Collections.singletonList(stream), deserializer, configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,kinesis,deserialization,schema,t,deserializer,properties,config,props,this,collections,singleton,list,stream,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps);1495787238;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		this(Collections.singletonList(stream), deserializer, configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,kinesis,deserialization,schema,t,deserializer,properties,config,props,this,collections,singleton,list,stream,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps);1495787239;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		this(Collections.singletonList(stream), deserializer, configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,kinesis,deserialization,schema,t,deserializer,properties,config,props,this,collections,singleton,list,stream,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps);1495923079;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		this(Collections.singletonList(stream), deserializer, configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,kinesis,deserialization,schema,t,deserializer,properties,config,props,this,collections,singleton,list,stream,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps);1503598628;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		this(Collections.singletonList(stream), deserializer, configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,kinesis,deserialization,schema,t,deserializer,properties,config,props,this,collections,singleton,list,stream,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps);1504760052;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		this(Collections.singletonList(stream), deserializer, configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,kinesis,deserialization,schema,t,deserializer,properties,config,props,this,collections,singleton,list,stream,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps);1512029104;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		this(Collections.singletonList(stream), deserializer, configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,kinesis,deserialization,schema,t,deserializer,properties,config,props,this,collections,singleton,list,stream,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps);1515757408;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		this(Collections.singletonList(stream), deserializer, configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,kinesis,deserialization,schema,t,deserializer,properties,config,props,this,collections,singleton,list,stream,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps);1517943538;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		this(Collections.singletonList(stream), deserializer, configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,kinesis,deserialization,schema,t,deserializer,properties,config,props,this,collections,singleton,list,stream,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps);1517943538;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		this(Collections.singletonList(stream), deserializer, configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,kinesis,deserialization,schema,t,deserializer,properties,config,props,this,collections,singleton,list,stream,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps);1518718884;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		this(Collections.singletonList(stream), deserializer, configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,kinesis,deserialization,schema,t,deserializer,properties,config,props,this,collections,singleton,list,stream,deserializer,config,props
FlinkKinesisConsumer -> public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps);1542797087;Creates a new Flink Kinesis Consumer.__<p>The AWS credentials to be used, AWS region of the Kinesis streams, initial position to start streaming_from are configured with a {@link Properties} instance.</p>__@param stream_The single AWS Kinesis stream to read from._@param deserializer_The keyed deserializer used to convert raw bytes of Kinesis records to Java objects._@param configProps_The properties used to configure AWS credentials, AWS region, and initial starting position.;public FlinkKinesisConsumer(String stream, KinesisDeserializationSchema<T> deserializer, Properties configProps) {_		this(Collections.singletonList(stream), deserializer, configProps)__	};creates,a,new,flink,kinesis,consumer,p,the,aws,credentials,to,be,used,aws,region,of,the,kinesis,streams,initial,position,to,start,streaming,from,are,configured,with,a,link,properties,instance,p,param,stream,the,single,aws,kinesis,stream,to,read,from,param,deserializer,the,keyed,deserializer,used,to,convert,raw,bytes,of,kinesis,records,to,java,objects,param,config,props,the,properties,used,to,configure,aws,credentials,aws,region,and,initial,starting,position;public,flink,kinesis,consumer,string,stream,kinesis,deserialization,schema,t,deserializer,properties,config,props,this,collections,singleton,list,stream,deserializer,config,props
