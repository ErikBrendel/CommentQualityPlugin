commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Override public void runFetcher() throws Exception {     runWaiter.trigger().     super.runFetcher(). }
false;public;0;3;;public void waitUntilRun() throws Exception {     runWaiter.await(). }
false;public;2;3;;public void waitUntilShutdown(long timeout, TimeUnit timeUnit) throws Exception {     shutdownWaiter.await(timeout, timeUnit). }
false;protected;1;12;;@Override protected ExecutorService createShardConsumersThreadPool(String subtaskName) {     // this is just a dummy fetcher, so no need to create a thread pool for shard consumers     ExecutorService mockExecutor = mock(ExecutorService.class).     when(mockExecutor.isTerminated()).thenAnswer((InvocationOnMock invocation) -> !running).     try {         when(mockExecutor.awaitTermination(anyLong(), any())).thenReturn(!running).     } catch (InterruptedException e) {     // We're just trying to stub the method. Must acknowledge the checked exception.     }     return mockExecutor. }
false;public;0;5;;@Override public void awaitTermination() throws InterruptedException {     this.running = false.     super.awaitTermination(). }
false;public;0;5;;@Override public void shutdownFetcher() {     super.shutdownFetcher().     shutdownWaiter.trigger(). }
false;public;0;6;;@Override public List<StreamShardHandle> discoverNewShardsToSubscribe() throws InterruptedException {     List<StreamShardHandle> newShards = super.discoverNewShardsToSubscribe().     initialDiscoveryWaiter.trigger().     return newShards. }
false;public;0;3;;public void waitUntilInitialDiscovery() throws InterruptedException {     initialDiscoveryWaiter.await(). }
false;private,static;2;15;;private static RuntimeContext getMockedRuntimeContext(final int fakeTotalCountOfSubtasks, final int fakeIndexOfThisSubtask) {     RuntimeContext mockedRuntimeContext = mock(RuntimeContext.class).     Mockito.when(mockedRuntimeContext.getNumberOfParallelSubtasks()).thenReturn(fakeTotalCountOfSubtasks).     Mockito.when(mockedRuntimeContext.getIndexOfThisSubtask()).thenReturn(fakeIndexOfThisSubtask).     Mockito.when(mockedRuntimeContext.getTaskName()).thenReturn("Fake Task").     Mockito.when(mockedRuntimeContext.getTaskNameWithSubtasks()).thenReturn("Fake Task (" + fakeIndexOfThisSubtask + "/" + fakeTotalCountOfSubtasks + ")").     Mockito.when(mockedRuntimeContext.getUserCodeClassLoader()).thenReturn(Thread.currentThread().getContextClassLoader()).     Mockito.when(mockedRuntimeContext.getMetricGroup()).thenReturn(new UnregisteredMetricsGroup()).     return mockedRuntimeContext. }
