# id;timestamp;commentText;codeText;commentWords;codeWords
FlinkKinesisConsumerTest -> @Test 	public void testFindSequenceNumberToRestoreFromIfTheShardHasBeenClosedSinceTheStateWasStored() throws Exception;1517943538;FLINK-8484: ensure that a state change in the StreamShardMetadata other than {@link StreamShardMetadata#shardId} or_{@link StreamShardMetadata#streamName} does not result in the shard not being able to be restored._This handles the corner case where the stored shard metadata is open (no ending sequence number), but after the_job restore, the shard has been closed (ending number set) due to re-sharding, and we can no longer rely on_{@link StreamShardMetadata#equals(Object)} to find back the sequence number in the collection of restored shard metadata._<p></p>_Therefore, we will rely on synchronizing the snapshot's state with the Kinesis shard before attempting to find back_the sequence number to restore.;@Test_	public void testFindSequenceNumberToRestoreFromIfTheShardHasBeenClosedSinceTheStateWasStored() throws Exception {_		_		_		__		HashMap<StreamShardHandle, SequenceNumber> fakeRestoredState = getFakeRestoredStore("all")___		_		_		__		TestingListState<Tuple2<StreamShardMetadata, SequenceNumber>> listState = new TestingListState<>()__		for (Map.Entry<StreamShardHandle, SequenceNumber> state : fakeRestoredState.entrySet()) {_			listState.add(Tuple2.of(KinesisDataFetcher.convertToStreamShardMetadata(state.getKey()), state.getValue()))__		}__		OperatorStateStore operatorStateStore = mock(OperatorStateStore.class)__		when(operatorStateStore.getUnionListState(Matchers.any(ListStateDescriptor.class))).thenReturn(listState)___		StateInitializationContext initializationContext = mock(StateInitializationContext.class)__		when(initializationContext.getOperatorStateStore()).thenReturn(operatorStateStore)__		when(initializationContext.isRestored()).thenReturn(true)___		_		_		__		KinesisDataFetcher mockedFetcher = Mockito.mock(KinesisDataFetcher.class)__		List<StreamShardHandle> shards = new ArrayList<>()___		_		final StreamShardHandle originalStreamShardHandle = fakeRestoredState.keySet().iterator().next()__		final StreamShardHandle closedStreamShardHandle = new StreamShardHandle(originalStreamShardHandle.getStreamName(), originalStreamShardHandle.getShard())__		_		final SequenceNumberRange sequenceNumberRange = new SequenceNumberRange()__		sequenceNumberRange.setEndingSequenceNumber("1293844")__		closedStreamShardHandle.getShard().setSequenceNumberRange(sequenceNumberRange)___		shards.add(closedStreamShardHandle)___		when(mockedFetcher.discoverNewShardsToSubscribe()).thenReturn(shards)__		PowerMockito.whenNew(KinesisDataFetcher.class).withAnyArguments().thenReturn(mockedFetcher)___		_		PowerMockito.mockStatic(KinesisConfigUtil.class)__		PowerMockito.doNothing().when(KinesisConfigUtil.class)___		_		_		__		TestableFlinkKinesisConsumer consumer = new TestableFlinkKinesisConsumer(_			"fakeStream", new Properties(), 10, 2)__		consumer.initializeState(initializationContext)__		consumer.open(new Configuration())__		consumer.run(Mockito.mock(SourceFunction.SourceContext.class))___		Mockito.verify(mockedFetcher).registerNewSubscribedShardState(_			new KinesisStreamShardState(KinesisDataFetcher.convertToStreamShardMetadata(closedStreamShardHandle),_				closedStreamShardHandle, fakeRestoredState.get(closedStreamShardHandle)))__	};flink,8484,ensure,that,a,state,change,in,the,stream,shard,metadata,other,than,link,stream,shard,metadata,shard,id,or,link,stream,shard,metadata,stream,name,does,not,result,in,the,shard,not,being,able,to,be,restored,this,handles,the,corner,case,where,the,stored,shard,metadata,is,open,no,ending,sequence,number,but,after,the,job,restore,the,shard,has,been,closed,ending,number,set,due,to,re,sharding,and,we,can,no,longer,rely,on,link,stream,shard,metadata,equals,object,to,find,back,the,sequence,number,in,the,collection,of,restored,shard,metadata,p,p,therefore,we,will,rely,on,synchronizing,the,snapshot,s,state,with,the,kinesis,shard,before,attempting,to,find,back,the,sequence,number,to,restore;test,public,void,test,find,sequence,number,to,restore,from,if,the,shard,has,been,closed,since,the,state,was,stored,throws,exception,hash,map,stream,shard,handle,sequence,number,fake,restored,state,get,fake,restored,store,all,testing,list,state,tuple2,stream,shard,metadata,sequence,number,list,state,new,testing,list,state,for,map,entry,stream,shard,handle,sequence,number,state,fake,restored,state,entry,set,list,state,add,tuple2,of,kinesis,data,fetcher,convert,to,stream,shard,metadata,state,get,key,state,get,value,operator,state,store,operator,state,store,mock,operator,state,store,class,when,operator,state,store,get,union,list,state,matchers,any,list,state,descriptor,class,then,return,list,state,state,initialization,context,initialization,context,mock,state,initialization,context,class,when,initialization,context,get,operator,state,store,then,return,operator,state,store,when,initialization,context,is,restored,then,return,true,kinesis,data,fetcher,mocked,fetcher,mockito,mock,kinesis,data,fetcher,class,list,stream,shard,handle,shards,new,array,list,final,stream,shard,handle,original,stream,shard,handle,fake,restored,state,key,set,iterator,next,final,stream,shard,handle,closed,stream,shard,handle,new,stream,shard,handle,original,stream,shard,handle,get,stream,name,original,stream,shard,handle,get,shard,final,sequence,number,range,sequence,number,range,new,sequence,number,range,sequence,number,range,set,ending,sequence,number,1293844,closed,stream,shard,handle,get,shard,set,sequence,number,range,sequence,number,range,shards,add,closed,stream,shard,handle,when,mocked,fetcher,discover,new,shards,to,subscribe,then,return,shards,power,mockito,when,new,kinesis,data,fetcher,class,with,any,arguments,then,return,mocked,fetcher,power,mockito,mock,static,kinesis,config,util,class,power,mockito,do,nothing,when,kinesis,config,util,class,testable,flink,kinesis,consumer,consumer,new,testable,flink,kinesis,consumer,fake,stream,new,properties,10,2,consumer,initialize,state,initialization,context,consumer,open,new,configuration,consumer,run,mockito,mock,source,function,source,context,class,mockito,verify,mocked,fetcher,register,new,subscribed,shard,state,new,kinesis,stream,shard,state,kinesis,data,fetcher,convert,to,stream,shard,metadata,closed,stream,shard,handle,closed,stream,shard,handle,fake,restored,state,get,closed,stream,shard,handle
FlinkKinesisConsumerTest -> @Test 	public void testFindSequenceNumberToRestoreFromIfTheShardHasBeenClosedSinceTheStateWasStored() throws Exception;1517943538;FLINK-8484: ensure that a state change in the StreamShardMetadata other than {@link StreamShardMetadata#shardId} or_{@link StreamShardMetadata#streamName} does not result in the shard not being able to be restored._This handles the corner case where the stored shard metadata is open (no ending sequence number), but after the_job restore, the shard has been closed (ending number set) due to re-sharding, and we can no longer rely on_{@link StreamShardMetadata#equals(Object)} to find back the sequence number in the collection of restored shard metadata._<p></p>_Therefore, we will rely on synchronizing the snapshot's state with the Kinesis shard before attempting to find back_the sequence number to restore.;@Test_	public void testFindSequenceNumberToRestoreFromIfTheShardHasBeenClosedSinceTheStateWasStored() throws Exception {_		_		_		__		HashMap<StreamShardHandle, SequenceNumber> fakeRestoredState = getFakeRestoredStore("all")___		_		_		__		TestingListState<Tuple2<StreamShardMetadata, SequenceNumber>> listState = new TestingListState<>()__		for (Map.Entry<StreamShardHandle, SequenceNumber> state : fakeRestoredState.entrySet()) {_			listState.add(Tuple2.of(KinesisDataFetcher.convertToStreamShardMetadata(state.getKey()), state.getValue()))__		}__		OperatorStateStore operatorStateStore = mock(OperatorStateStore.class)__		when(operatorStateStore.getUnionListState(Matchers.any(ListStateDescriptor.class))).thenReturn(listState)___		StateInitializationContext initializationContext = mock(StateInitializationContext.class)__		when(initializationContext.getOperatorStateStore()).thenReturn(operatorStateStore)__		when(initializationContext.isRestored()).thenReturn(true)___		_		_		__		KinesisDataFetcher mockedFetcher = Mockito.mock(KinesisDataFetcher.class)__		List<StreamShardHandle> shards = new ArrayList<>()___		_		final StreamShardHandle originalStreamShardHandle = fakeRestoredState.keySet().iterator().next()__		final StreamShardHandle closedStreamShardHandle = new StreamShardHandle(originalStreamShardHandle.getStreamName(), originalStreamShardHandle.getShard())__		_		final SequenceNumberRange sequenceNumberRange = new SequenceNumberRange()__		sequenceNumberRange.setEndingSequenceNumber("1293844")__		closedStreamShardHandle.getShard().setSequenceNumberRange(sequenceNumberRange)___		shards.add(closedStreamShardHandle)___		when(mockedFetcher.discoverNewShardsToSubscribe()).thenReturn(shards)__		PowerMockito.whenNew(KinesisDataFetcher.class).withAnyArguments().thenReturn(mockedFetcher)___		_		PowerMockito.mockStatic(KinesisConfigUtil.class)__		PowerMockito.doNothing().when(KinesisConfigUtil.class)___		_		_		__		TestableFlinkKinesisConsumer consumer = new TestableFlinkKinesisConsumer(_			"fakeStream", new Properties(), 10, 2)__		consumer.initializeState(initializationContext)__		consumer.open(new Configuration())__		consumer.run(Mockito.mock(SourceFunction.SourceContext.class))___		Mockito.verify(mockedFetcher).registerNewSubscribedShardState(_			new KinesisStreamShardState(KinesisDataFetcher.convertToStreamShardMetadata(closedStreamShardHandle),_				closedStreamShardHandle, fakeRestoredState.get(closedStreamShardHandle)))__	};flink,8484,ensure,that,a,state,change,in,the,stream,shard,metadata,other,than,link,stream,shard,metadata,shard,id,or,link,stream,shard,metadata,stream,name,does,not,result,in,the,shard,not,being,able,to,be,restored,this,handles,the,corner,case,where,the,stored,shard,metadata,is,open,no,ending,sequence,number,but,after,the,job,restore,the,shard,has,been,closed,ending,number,set,due,to,re,sharding,and,we,can,no,longer,rely,on,link,stream,shard,metadata,equals,object,to,find,back,the,sequence,number,in,the,collection,of,restored,shard,metadata,p,p,therefore,we,will,rely,on,synchronizing,the,snapshot,s,state,with,the,kinesis,shard,before,attempting,to,find,back,the,sequence,number,to,restore;test,public,void,test,find,sequence,number,to,restore,from,if,the,shard,has,been,closed,since,the,state,was,stored,throws,exception,hash,map,stream,shard,handle,sequence,number,fake,restored,state,get,fake,restored,store,all,testing,list,state,tuple2,stream,shard,metadata,sequence,number,list,state,new,testing,list,state,for,map,entry,stream,shard,handle,sequence,number,state,fake,restored,state,entry,set,list,state,add,tuple2,of,kinesis,data,fetcher,convert,to,stream,shard,metadata,state,get,key,state,get,value,operator,state,store,operator,state,store,mock,operator,state,store,class,when,operator,state,store,get,union,list,state,matchers,any,list,state,descriptor,class,then,return,list,state,state,initialization,context,initialization,context,mock,state,initialization,context,class,when,initialization,context,get,operator,state,store,then,return,operator,state,store,when,initialization,context,is,restored,then,return,true,kinesis,data,fetcher,mocked,fetcher,mockito,mock,kinesis,data,fetcher,class,list,stream,shard,handle,shards,new,array,list,final,stream,shard,handle,original,stream,shard,handle,fake,restored,state,key,set,iterator,next,final,stream,shard,handle,closed,stream,shard,handle,new,stream,shard,handle,original,stream,shard,handle,get,stream,name,original,stream,shard,handle,get,shard,final,sequence,number,range,sequence,number,range,new,sequence,number,range,sequence,number,range,set,ending,sequence,number,1293844,closed,stream,shard,handle,get,shard,set,sequence,number,range,sequence,number,range,shards,add,closed,stream,shard,handle,when,mocked,fetcher,discover,new,shards,to,subscribe,then,return,shards,power,mockito,when,new,kinesis,data,fetcher,class,with,any,arguments,then,return,mocked,fetcher,power,mockito,mock,static,kinesis,config,util,class,power,mockito,do,nothing,when,kinesis,config,util,class,testable,flink,kinesis,consumer,consumer,new,testable,flink,kinesis,consumer,fake,stream,new,properties,10,2,consumer,initialize,state,initialization,context,consumer,open,new,configuration,consumer,run,mockito,mock,source,function,source,context,class,mockito,verify,mocked,fetcher,register,new,subscribed,shard,state,new,kinesis,stream,shard,state,kinesis,data,fetcher,convert,to,stream,shard,metadata,closed,stream,shard,handle,closed,stream,shard,handle,fake,restored,state,get,closed,stream,shard,handle
FlinkKinesisConsumerTest -> @Test 	public void testFindSequenceNumberToRestoreFromIfTheShardHasBeenClosedSinceTheStateWasStored() throws Exception;1538998760;FLINK-8484: ensure that a state change in the StreamShardMetadata other than {@link StreamShardMetadata#shardId} or_{@link StreamShardMetadata#streamName} does not result in the shard not being able to be restored._This handles the corner case where the stored shard metadata is open (no ending sequence number), but after the_job restore, the shard has been closed (ending number set) due to re-sharding, and we can no longer rely on_{@link StreamShardMetadata#equals(Object)} to find back the sequence number in the collection of restored shard metadata._<p></p>_Therefore, we will rely on synchronizing the snapshot's state with the Kinesis shard before attempting to find back_the sequence number to restore.;@Test_	public void testFindSequenceNumberToRestoreFromIfTheShardHasBeenClosedSinceTheStateWasStored() throws Exception {_		_		_		__		HashMap<StreamShardHandle, SequenceNumber> fakeRestoredState = getFakeRestoredStore("all")___		_		_		__		TestingListState<Tuple2<StreamShardMetadata, SequenceNumber>> listState = new TestingListState<>()__		for (Map.Entry<StreamShardHandle, SequenceNumber> state : fakeRestoredState.entrySet()) {_			listState.add(Tuple2.of(KinesisDataFetcher.convertToStreamShardMetadata(state.getKey()), state.getValue()))__		}__		OperatorStateStore operatorStateStore = mock(OperatorStateStore.class)__		when(operatorStateStore.getUnionListState(Matchers.any(ListStateDescriptor.class))).thenReturn(listState)___		StateInitializationContext initializationContext = mock(StateInitializationContext.class)__		when(initializationContext.getOperatorStateStore()).thenReturn(operatorStateStore)__		when(initializationContext.isRestored()).thenReturn(true)___		_		_		__		KinesisDataFetcher mockedFetcher = Mockito.mock(KinesisDataFetcher.class)__		List<StreamShardHandle> shards = new ArrayList<>()___		_		final StreamShardHandle originalStreamShardHandle = fakeRestoredState.keySet().iterator().next()__		final StreamShardHandle closedStreamShardHandle = new StreamShardHandle(originalStreamShardHandle.getStreamName(), originalStreamShardHandle.getShard())__		_		final SequenceNumberRange sequenceNumberRange = new SequenceNumberRange()__		sequenceNumberRange.setEndingSequenceNumber("1293844")__		closedStreamShardHandle.getShard().setSequenceNumberRange(sequenceNumberRange)___		shards.add(closedStreamShardHandle)___		when(mockedFetcher.discoverNewShardsToSubscribe()).thenReturn(shards)__		PowerMockito.whenNew(KinesisDataFetcher.class).withAnyArguments().thenReturn(mockedFetcher)___		_		PowerMockito.mockStatic(KinesisConfigUtil.class)__		PowerMockito.doNothing().when(KinesisConfigUtil.class)___		_		_		__		TestableFlinkKinesisConsumer consumer = new TestableFlinkKinesisConsumer(_			"fakeStream", new Properties(), 10, 2)__		consumer.initializeState(initializationContext)__		consumer.open(new Configuration())__		consumer.run(Mockito.mock(SourceFunction.SourceContext.class))___		Mockito.verify(mockedFetcher).registerNewSubscribedShardState(_			new KinesisStreamShardState(KinesisDataFetcher.convertToStreamShardMetadata(closedStreamShardHandle),_				closedStreamShardHandle, fakeRestoredState.get(closedStreamShardHandle)))__	};flink,8484,ensure,that,a,state,change,in,the,stream,shard,metadata,other,than,link,stream,shard,metadata,shard,id,or,link,stream,shard,metadata,stream,name,does,not,result,in,the,shard,not,being,able,to,be,restored,this,handles,the,corner,case,where,the,stored,shard,metadata,is,open,no,ending,sequence,number,but,after,the,job,restore,the,shard,has,been,closed,ending,number,set,due,to,re,sharding,and,we,can,no,longer,rely,on,link,stream,shard,metadata,equals,object,to,find,back,the,sequence,number,in,the,collection,of,restored,shard,metadata,p,p,therefore,we,will,rely,on,synchronizing,the,snapshot,s,state,with,the,kinesis,shard,before,attempting,to,find,back,the,sequence,number,to,restore;test,public,void,test,find,sequence,number,to,restore,from,if,the,shard,has,been,closed,since,the,state,was,stored,throws,exception,hash,map,stream,shard,handle,sequence,number,fake,restored,state,get,fake,restored,store,all,testing,list,state,tuple2,stream,shard,metadata,sequence,number,list,state,new,testing,list,state,for,map,entry,stream,shard,handle,sequence,number,state,fake,restored,state,entry,set,list,state,add,tuple2,of,kinesis,data,fetcher,convert,to,stream,shard,metadata,state,get,key,state,get,value,operator,state,store,operator,state,store,mock,operator,state,store,class,when,operator,state,store,get,union,list,state,matchers,any,list,state,descriptor,class,then,return,list,state,state,initialization,context,initialization,context,mock,state,initialization,context,class,when,initialization,context,get,operator,state,store,then,return,operator,state,store,when,initialization,context,is,restored,then,return,true,kinesis,data,fetcher,mocked,fetcher,mockito,mock,kinesis,data,fetcher,class,list,stream,shard,handle,shards,new,array,list,final,stream,shard,handle,original,stream,shard,handle,fake,restored,state,key,set,iterator,next,final,stream,shard,handle,closed,stream,shard,handle,new,stream,shard,handle,original,stream,shard,handle,get,stream,name,original,stream,shard,handle,get,shard,final,sequence,number,range,sequence,number,range,new,sequence,number,range,sequence,number,range,set,ending,sequence,number,1293844,closed,stream,shard,handle,get,shard,set,sequence,number,range,sequence,number,range,shards,add,closed,stream,shard,handle,when,mocked,fetcher,discover,new,shards,to,subscribe,then,return,shards,power,mockito,when,new,kinesis,data,fetcher,class,with,any,arguments,then,return,mocked,fetcher,power,mockito,mock,static,kinesis,config,util,class,power,mockito,do,nothing,when,kinesis,config,util,class,testable,flink,kinesis,consumer,consumer,new,testable,flink,kinesis,consumer,fake,stream,new,properties,10,2,consumer,initialize,state,initialization,context,consumer,open,new,configuration,consumer,run,mockito,mock,source,function,source,context,class,mockito,verify,mocked,fetcher,register,new,subscribed,shard,state,new,kinesis,stream,shard,state,kinesis,data,fetcher,convert,to,stream,shard,metadata,closed,stream,shard,handle,closed,stream,shard,handle,fake,restored,state,get,closed,stream,shard,handle
FlinkKinesisConsumerTest -> @Test 	public void testFindSequenceNumberToRestoreFromIfTheShardHasBeenClosedSinceTheStateWasStored() throws Exception;1542797087;FLINK-8484: ensure that a state change in the StreamShardMetadata other than {@link StreamShardMetadata#shardId} or_{@link StreamShardMetadata#streamName} does not result in the shard not being able to be restored._This handles the corner case where the stored shard metadata is open (no ending sequence number), but after the_job restore, the shard has been closed (ending number set) due to re-sharding, and we can no longer rely on_{@link StreamShardMetadata#equals(Object)} to find back the sequence number in the collection of restored shard metadata._<p></p>_Therefore, we will rely on synchronizing the snapshot's state with the Kinesis shard before attempting to find back_the sequence number to restore.;@Test_	public void testFindSequenceNumberToRestoreFromIfTheShardHasBeenClosedSinceTheStateWasStored() throws Exception {_		_		_		__		HashMap<StreamShardHandle, SequenceNumber> fakeRestoredState = getFakeRestoredStore("all")___		_		_		__		TestingListState<Tuple2<StreamShardMetadata, SequenceNumber>> listState = new TestingListState<>()__		for (Map.Entry<StreamShardHandle, SequenceNumber> state : fakeRestoredState.entrySet()) {_			listState.add(Tuple2.of(KinesisDataFetcher.convertToStreamShardMetadata(state.getKey()), state.getValue()))__		}__		OperatorStateStore operatorStateStore = mock(OperatorStateStore.class)__		when(operatorStateStore.getUnionListState(Matchers.any(ListStateDescriptor.class))).thenReturn(listState)___		StateInitializationContext initializationContext = mock(StateInitializationContext.class)__		when(initializationContext.getOperatorStateStore()).thenReturn(operatorStateStore)__		when(initializationContext.isRestored()).thenReturn(true)___		_		_		__		KinesisDataFetcher mockedFetcher = mockKinesisDataFetcher()__		List<StreamShardHandle> shards = new ArrayList<>()___		_		final StreamShardHandle originalStreamShardHandle = fakeRestoredState.keySet().iterator().next()__		final StreamShardHandle closedStreamShardHandle = new StreamShardHandle(originalStreamShardHandle.getStreamName(), originalStreamShardHandle.getShard())__		_		final SequenceNumberRange sequenceNumberRange = new SequenceNumberRange()__		sequenceNumberRange.setEndingSequenceNumber("1293844")__		closedStreamShardHandle.getShard().setSequenceNumberRange(sequenceNumberRange)___		shards.add(closedStreamShardHandle)___		when(mockedFetcher.discoverNewShardsToSubscribe()).thenReturn(shards)___		_		PowerMockito.mockStatic(KinesisConfigUtil.class)__		PowerMockito.doNothing().when(KinesisConfigUtil.class)___		_		_		__		TestableFlinkKinesisConsumer consumer = new TestableFlinkKinesisConsumer(_			"fakeStream", new Properties(), 10, 2)__		consumer.initializeState(initializationContext)__		consumer.open(new Configuration())__		consumer.run(Mockito.mock(SourceFunction.SourceContext.class))___		Mockito.verify(mockedFetcher).registerNewSubscribedShardState(_			new KinesisStreamShardState(KinesisDataFetcher.convertToStreamShardMetadata(closedStreamShardHandle),_				closedStreamShardHandle, fakeRestoredState.get(closedStreamShardHandle)))__	};flink,8484,ensure,that,a,state,change,in,the,stream,shard,metadata,other,than,link,stream,shard,metadata,shard,id,or,link,stream,shard,metadata,stream,name,does,not,result,in,the,shard,not,being,able,to,be,restored,this,handles,the,corner,case,where,the,stored,shard,metadata,is,open,no,ending,sequence,number,but,after,the,job,restore,the,shard,has,been,closed,ending,number,set,due,to,re,sharding,and,we,can,no,longer,rely,on,link,stream,shard,metadata,equals,object,to,find,back,the,sequence,number,in,the,collection,of,restored,shard,metadata,p,p,therefore,we,will,rely,on,synchronizing,the,snapshot,s,state,with,the,kinesis,shard,before,attempting,to,find,back,the,sequence,number,to,restore;test,public,void,test,find,sequence,number,to,restore,from,if,the,shard,has,been,closed,since,the,state,was,stored,throws,exception,hash,map,stream,shard,handle,sequence,number,fake,restored,state,get,fake,restored,store,all,testing,list,state,tuple2,stream,shard,metadata,sequence,number,list,state,new,testing,list,state,for,map,entry,stream,shard,handle,sequence,number,state,fake,restored,state,entry,set,list,state,add,tuple2,of,kinesis,data,fetcher,convert,to,stream,shard,metadata,state,get,key,state,get,value,operator,state,store,operator,state,store,mock,operator,state,store,class,when,operator,state,store,get,union,list,state,matchers,any,list,state,descriptor,class,then,return,list,state,state,initialization,context,initialization,context,mock,state,initialization,context,class,when,initialization,context,get,operator,state,store,then,return,operator,state,store,when,initialization,context,is,restored,then,return,true,kinesis,data,fetcher,mocked,fetcher,mock,kinesis,data,fetcher,list,stream,shard,handle,shards,new,array,list,final,stream,shard,handle,original,stream,shard,handle,fake,restored,state,key,set,iterator,next,final,stream,shard,handle,closed,stream,shard,handle,new,stream,shard,handle,original,stream,shard,handle,get,stream,name,original,stream,shard,handle,get,shard,final,sequence,number,range,sequence,number,range,new,sequence,number,range,sequence,number,range,set,ending,sequence,number,1293844,closed,stream,shard,handle,get,shard,set,sequence,number,range,sequence,number,range,shards,add,closed,stream,shard,handle,when,mocked,fetcher,discover,new,shards,to,subscribe,then,return,shards,power,mockito,mock,static,kinesis,config,util,class,power,mockito,do,nothing,when,kinesis,config,util,class,testable,flink,kinesis,consumer,consumer,new,testable,flink,kinesis,consumer,fake,stream,new,properties,10,2,consumer,initialize,state,initialization,context,consumer,open,new,configuration,consumer,run,mockito,mock,source,function,source,context,class,mockito,verify,mocked,fetcher,register,new,subscribed,shard,state,new,kinesis,stream,shard,state,kinesis,data,fetcher,convert,to,stream,shard,metadata,closed,stream,shard,handle,closed,stream,shard,handle,fake,restored,state,get,closed,stream,shard,handle
FlinkKinesisConsumerTest -> @Test 	public void testFindSequenceNumberToRestoreFromIfTheShardHasBeenClosedSinceTheStateWasStored() throws Exception;1547725934;FLINK-8484: ensure that a state change in the StreamShardMetadata other than {@link StreamShardMetadata#shardId} or_{@link StreamShardMetadata#streamName} does not result in the shard not being able to be restored._This handles the corner case where the stored shard metadata is open (no ending sequence number), but after the_job restore, the shard has been closed (ending number set) due to re-sharding, and we can no longer rely on_{@link StreamShardMetadata#equals(Object)} to find back the sequence number in the collection of restored shard metadata._<p></p>_Therefore, we will rely on synchronizing the snapshot's state with the Kinesis shard before attempting to find back_the sequence number to restore.;@Test_	public void testFindSequenceNumberToRestoreFromIfTheShardHasBeenClosedSinceTheStateWasStored() throws Exception {_		_		_		__		HashMap<StreamShardHandle, SequenceNumber> fakeRestoredState = getFakeRestoredStore("all")___		_		_		__		TestingListState<Tuple2<StreamShardMetadata, SequenceNumber>> listState = new TestingListState<>()__		for (Map.Entry<StreamShardHandle, SequenceNumber> state : fakeRestoredState.entrySet()) {_			listState.add(Tuple2.of(KinesisDataFetcher.convertToStreamShardMetadata(state.getKey()), state.getValue()))__		}__		OperatorStateStore operatorStateStore = mock(OperatorStateStore.class)__		when(operatorStateStore.getUnionListState(Matchers.any(ListStateDescriptor.class))).thenReturn(listState)___		StateInitializationContext initializationContext = mock(StateInitializationContext.class)__		when(initializationContext.getOperatorStateStore()).thenReturn(operatorStateStore)__		when(initializationContext.isRestored()).thenReturn(true)___		_		_		__		KinesisDataFetcher mockedFetcher = mockKinesisDataFetcher()__		List<StreamShardHandle> shards = new ArrayList<>()___		_		final StreamShardHandle originalStreamShardHandle = fakeRestoredState.keySet().iterator().next()__		final StreamShardHandle closedStreamShardHandle = new StreamShardHandle(originalStreamShardHandle.getStreamName(), originalStreamShardHandle.getShard())__		_		final SequenceNumberRange sequenceNumberRange = new SequenceNumberRange()__		sequenceNumberRange.setEndingSequenceNumber("1293844")__		closedStreamShardHandle.getShard().setSequenceNumberRange(sequenceNumberRange)___		shards.add(closedStreamShardHandle)___		when(mockedFetcher.discoverNewShardsToSubscribe()).thenReturn(shards)___		_		PowerMockito.mockStatic(KinesisConfigUtil.class)__		PowerMockito.doNothing().when(KinesisConfigUtil.class)___		_		_		__		TestableFlinkKinesisConsumer consumer = new TestableFlinkKinesisConsumer(_			"fakeStream", new Properties(), 10, 2)__		consumer.initializeState(initializationContext)__		consumer.open(new Configuration())__		consumer.run(Mockito.mock(SourceFunction.SourceContext.class))___		Mockito.verify(mockedFetcher).registerNewSubscribedShardState(_			new KinesisStreamShardState(KinesisDataFetcher.convertToStreamShardMetadata(closedStreamShardHandle),_				closedStreamShardHandle, fakeRestoredState.get(closedStreamShardHandle)))__	};flink,8484,ensure,that,a,state,change,in,the,stream,shard,metadata,other,than,link,stream,shard,metadata,shard,id,or,link,stream,shard,metadata,stream,name,does,not,result,in,the,shard,not,being,able,to,be,restored,this,handles,the,corner,case,where,the,stored,shard,metadata,is,open,no,ending,sequence,number,but,after,the,job,restore,the,shard,has,been,closed,ending,number,set,due,to,re,sharding,and,we,can,no,longer,rely,on,link,stream,shard,metadata,equals,object,to,find,back,the,sequence,number,in,the,collection,of,restored,shard,metadata,p,p,therefore,we,will,rely,on,synchronizing,the,snapshot,s,state,with,the,kinesis,shard,before,attempting,to,find,back,the,sequence,number,to,restore;test,public,void,test,find,sequence,number,to,restore,from,if,the,shard,has,been,closed,since,the,state,was,stored,throws,exception,hash,map,stream,shard,handle,sequence,number,fake,restored,state,get,fake,restored,store,all,testing,list,state,tuple2,stream,shard,metadata,sequence,number,list,state,new,testing,list,state,for,map,entry,stream,shard,handle,sequence,number,state,fake,restored,state,entry,set,list,state,add,tuple2,of,kinesis,data,fetcher,convert,to,stream,shard,metadata,state,get,key,state,get,value,operator,state,store,operator,state,store,mock,operator,state,store,class,when,operator,state,store,get,union,list,state,matchers,any,list,state,descriptor,class,then,return,list,state,state,initialization,context,initialization,context,mock,state,initialization,context,class,when,initialization,context,get,operator,state,store,then,return,operator,state,store,when,initialization,context,is,restored,then,return,true,kinesis,data,fetcher,mocked,fetcher,mock,kinesis,data,fetcher,list,stream,shard,handle,shards,new,array,list,final,stream,shard,handle,original,stream,shard,handle,fake,restored,state,key,set,iterator,next,final,stream,shard,handle,closed,stream,shard,handle,new,stream,shard,handle,original,stream,shard,handle,get,stream,name,original,stream,shard,handle,get,shard,final,sequence,number,range,sequence,number,range,new,sequence,number,range,sequence,number,range,set,ending,sequence,number,1293844,closed,stream,shard,handle,get,shard,set,sequence,number,range,sequence,number,range,shards,add,closed,stream,shard,handle,when,mocked,fetcher,discover,new,shards,to,subscribe,then,return,shards,power,mockito,mock,static,kinesis,config,util,class,power,mockito,do,nothing,when,kinesis,config,util,class,testable,flink,kinesis,consumer,consumer,new,testable,flink,kinesis,consumer,fake,stream,new,properties,10,2,consumer,initialize,state,initialization,context,consumer,open,new,configuration,consumer,run,mockito,mock,source,function,source,context,class,mockito,verify,mocked,fetcher,register,new,subscribed,shard,state,new,kinesis,stream,shard,state,kinesis,data,fetcher,convert,to,stream,shard,metadata,closed,stream,shard,handle,closed,stream,shard,handle,fake,restored,state,get,closed,stream,shard,handle
