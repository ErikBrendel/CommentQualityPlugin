commented;modifiers;parameterAmount;loc;comment;code
false;public;0;16;;@Test public void testOpen() throws Exception {     OutputFormat<String, Long> dummyOutputFormat = mock(DummyOutputFormat.class).     DummyOutputCommitter outputCommitter = mock(DummyOutputCommitter.class).     JobConf jobConf = Mockito.spy(new JobConf()).     when(jobConf.getOutputCommitter()).thenReturn(outputCommitter).     HadoopOutputFormat<String, Long> outputFormat = new HadoopOutputFormat<>(dummyOutputFormat, jobConf).     outputFormat.open(1, 1).     verify(jobConf, times(2)).getOutputCommitter().     verify(outputCommitter, times(1)).setupJob(any(JobContext.class)).     verify(dummyOutputFormat, times(1)).getRecordWriter(nullable(FileSystem.class), any(JobConf.class), anyString(), any(Progressable.class)). }
false;public;0;11;;@Test public void testConfigureWithConfigurable() {     ConfigurableDummyOutputFormat dummyOutputFormat = mock(ConfigurableDummyOutputFormat.class).     JobConf jobConf = mock(JobConf.class).     HadoopOutputFormat<String, Long> outputFormat = new HadoopOutputFormat<>(dummyOutputFormat, jobConf).     outputFormat.configure(Matchers.<org.apache.flink.configuration.Configuration>any()).     verify(dummyOutputFormat, times(1)).setConf(any(Configuration.class)). }
false;public;0;11;;@Test public void testConfigureWithJobConfigurable() {     JobConfigurableDummyOutputFormat dummyOutputFormat = mock(JobConfigurableDummyOutputFormat.class).     JobConf jobConf = mock(JobConf.class).     HadoopOutputFormat<String, Long> outputFormat = new HadoopOutputFormat<>(dummyOutputFormat, jobConf).     outputFormat.configure(Matchers.<org.apache.flink.configuration.Configuration>any()).     verify(dummyOutputFormat, times(1)).configure(any(JobConf.class)). }
false;public;0;17;;@Test public void testCloseWithTaskCommit() throws Exception {     OutputFormat<String, Long> dummyOutputFormat = mock(DummyOutputFormat.class).     DummyOutputCommitter outputCommitter = mock(DummyOutputCommitter.class).     when(outputCommitter.needsTaskCommit(nullable(TaskAttemptContext.class))).thenReturn(true).     DummyRecordWriter recordWriter = mock(DummyRecordWriter.class).     JobConf jobConf = mock(JobConf.class).     HadoopOutputFormat<String, Long> outputFormat = new HadoopOutputFormat<>(dummyOutputFormat, jobConf).     outputFormat.recordWriter = recordWriter.     outputFormat.outputCommitter = outputCommitter.     outputFormat.close().     verify(recordWriter, times(1)).close(nullable(Reporter.class)).     verify(outputCommitter, times(1)).commitTask(nullable(TaskAttemptContext.class)). }
false;public;0;17;;@Test public void testCloseWithoutTaskCommit() throws Exception {     OutputFormat<String, Long> dummyOutputFormat = mock(DummyOutputFormat.class).     DummyOutputCommitter outputCommitter = mock(DummyOutputCommitter.class).     when(outputCommitter.needsTaskCommit(any(TaskAttemptContext.class))).thenReturn(false).     DummyRecordWriter recordWriter = mock(DummyRecordWriter.class).     JobConf jobConf = mock(JobConf.class).     HadoopOutputFormat<String, Long> outputFormat = new HadoopOutputFormat<>(dummyOutputFormat, jobConf).     outputFormat.recordWriter = recordWriter.     outputFormat.outputCommitter = outputCommitter.     outputFormat.close().     verify(recordWriter, times(1)).close(any(Reporter.class)).     verify(outputCommitter, times(0)).commitTask(any(TaskAttemptContext.class)). }
false;public;0;13;;@Test public void testWriteRecord() throws Exception {     OutputFormat<String, Long> dummyOutputFormat = mock(DummyOutputFormat.class).     DummyRecordWriter recordWriter = mock(DummyRecordWriter.class).     JobConf jobConf = mock(JobConf.class).     HadoopOutputFormat<String, Long> outputFormat = new HadoopOutputFormat<>(dummyOutputFormat, jobConf).     outputFormat.recordWriter = recordWriter.     outputFormat.writeRecord(new Tuple2<>("key", 1L)).     verify(recordWriter, times(1)).write(anyString(), anyLong()). }
false;public;0;13;;@Test public void testFinalizeGlobal() throws Exception {     OutputFormat<String, Long> dummyOutputFormat = mock(DummyOutputFormat.class).     DummyOutputCommitter outputCommitter = mock(DummyOutputCommitter.class).     JobConf jobConf = Mockito.spy(new JobConf()).     when(jobConf.getOutputCommitter()).thenReturn(outputCommitter).     HadoopOutputFormat<String, Long> outputFormat = new HadoopOutputFormat<>(dummyOutputFormat, jobConf).     outputFormat.finalizeGlobal(1).     verify(outputCommitter, times(1)).commitJob(any(JobContext.class)). }
false;public;4;4;;@Override public RecordWriter<String, Long> getRecordWriter(FileSystem fileSystem, JobConf jobConf, String s, Progressable progressable) throws IOException {     return null. }
false;public;2;4;;@Override public void checkOutputSpecs(FileSystem fileSystem, JobConf jobConf) throws IOException { }
false;public;1;4;;@Override public void setConf(Configuration configuration) { }
false;public;0;4;;@Override public Configuration getConf() {     return null. }
false;public;1;4;;@Override public void configure(JobConf jobConf) { }
false;public;1;4;;@Override public void setupJob(JobContext jobContext) throws IOException { }
false;public;1;4;;@Override public void setupTask(TaskAttemptContext taskAttemptContext) throws IOException { }
false;public;1;4;;@Override public boolean needsTaskCommit(TaskAttemptContext taskAttemptContext) throws IOException {     return false. }
false;public;1;4;;@Override public void commitTask(TaskAttemptContext taskAttemptContext) throws IOException { }
false;public;1;4;;@Override public void abortTask(TaskAttemptContext taskAttemptContext) throws IOException { }
false;public;2;4;;@Override public void write(String s, Long aLong) throws IOException { }
false;public;1;4;;@Override public void close(Reporter reporter) throws IOException { }
