commented;modifiers;parameterAmount;loc;comment;code
false;public;1;13;;@Override public Tuple2<K, V> nextRecord(Tuple2<K, V> record) throws IOException {     if (!fetched) {         fetchNext().     }     if (!hasNext) {         return null.     }     record.f0 = key.     record.f1 = value.     fetched = false.     return record. }
false;public;0;4;;@Override public TypeInformation<Tuple2<K, V>> getProducedType() {     return new TupleTypeInfo<>(TypeExtractor.createTypeInfo(keyClass), TypeExtractor.createTypeInfo(valueClass)). }
