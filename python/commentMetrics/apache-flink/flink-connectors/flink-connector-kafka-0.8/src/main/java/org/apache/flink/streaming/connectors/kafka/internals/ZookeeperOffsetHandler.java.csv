# id;timestamp;commentText;codeText;commentWords;codeWords
ZookeeperOffsetHandler -> public void prepareAndCommitOffsets(Map<KafkaTopicPartition, Long> internalOffsets) throws Exception;1480685315;Commits offsets for Kafka partitions to ZooKeeper. The given offsets to this method should be the offsets of_the last processed records_ this method will take care of incrementing the offsets by 1 before committing them so_that the committed offsets to Zookeeper represent the next record to process.__@param internalOffsets The internal offsets (representing last processed records) for the partitions to commit._@throws Exception The method forwards exceptions.;public void prepareAndCommitOffsets(Map<KafkaTopicPartition, Long> internalOffsets) throws Exception {_		for (Map.Entry<KafkaTopicPartition, Long> entry : internalOffsets.entrySet()) {_			KafkaTopicPartition tp = entry.getKey()___			Long lastProcessedOffset = entry.getValue()__			if (lastProcessedOffset != null && lastProcessedOffset >= 0) {_				setOffsetInZooKeeper(curatorClient, groupId, tp.getTopic(), tp.getPartition(), lastProcessedOffset + 1)__			}_		}_	};commits,offsets,for,kafka,partitions,to,zoo,keeper,the,given,offsets,to,this,method,should,be,the,offsets,of,the,last,processed,records,this,method,will,take,care,of,incrementing,the,offsets,by,1,before,committing,them,so,that,the,committed,offsets,to,zookeeper,represent,the,next,record,to,process,param,internal,offsets,the,internal,offsets,representing,last,processed,records,for,the,partitions,to,commit,throws,exception,the,method,forwards,exceptions;public,void,prepare,and,commit,offsets,map,kafka,topic,partition,long,internal,offsets,throws,exception,for,map,entry,kafka,topic,partition,long,entry,internal,offsets,entry,set,kafka,topic,partition,tp,entry,get,key,long,last,processed,offset,entry,get,value,if,last,processed,offset,null,last,processed,offset,0,set,offset,in,zoo,keeper,curator,client,group,id,tp,get,topic,tp,get,partition,last,processed,offset,1
ZookeeperOffsetHandler -> public void prepareAndCommitOffsets(Map<KafkaTopicPartition, Long> internalOffsets) throws Exception;1488214488;Commits offsets for Kafka partitions to ZooKeeper. The given offsets to this method should be the offsets of_the last processed records_ this method will take care of incrementing the offsets by 1 before committing them so_that the committed offsets to Zookeeper represent the next record to process.__@param internalOffsets The internal offsets (representing last processed records) for the partitions to commit._@throws Exception The method forwards exceptions.;public void prepareAndCommitOffsets(Map<KafkaTopicPartition, Long> internalOffsets) throws Exception {_		for (Map.Entry<KafkaTopicPartition, Long> entry : internalOffsets.entrySet()) {_			KafkaTopicPartition tp = entry.getKey()___			Long lastProcessedOffset = entry.getValue()__			if (lastProcessedOffset != null && lastProcessedOffset >= 0) {_				setOffsetInZooKeeper(curatorClient, groupId, tp.getTopic(), tp.getPartition(), lastProcessedOffset + 1)__			}_		}_	};commits,offsets,for,kafka,partitions,to,zoo,keeper,the,given,offsets,to,this,method,should,be,the,offsets,of,the,last,processed,records,this,method,will,take,care,of,incrementing,the,offsets,by,1,before,committing,them,so,that,the,committed,offsets,to,zookeeper,represent,the,next,record,to,process,param,internal,offsets,the,internal,offsets,representing,last,processed,records,for,the,partitions,to,commit,throws,exception,the,method,forwards,exceptions;public,void,prepare,and,commit,offsets,map,kafka,topic,partition,long,internal,offsets,throws,exception,for,map,entry,kafka,topic,partition,long,entry,internal,offsets,entry,set,kafka,topic,partition,tp,entry,get,key,long,last,processed,offset,entry,get,value,if,last,processed,offset,null,last,processed,offset,0,set,offset,in,zoo,keeper,curator,client,group,id,tp,get,topic,tp,get,partition,last,processed,offset,1
ZookeeperOffsetHandler -> public void prepareAndCommitOffsets(Map<KafkaTopicPartition, Long> internalOffsets) throws Exception;1489060855;Commits offsets for Kafka partitions to ZooKeeper. The given offsets to this method should be the offsets of_the last processed records_ this method will take care of incrementing the offsets by 1 before committing them so_that the committed offsets to Zookeeper represent the next record to process.__@param internalOffsets The internal offsets (representing last processed records) for the partitions to commit._@throws Exception The method forwards exceptions.;public void prepareAndCommitOffsets(Map<KafkaTopicPartition, Long> internalOffsets) throws Exception {_		for (Map.Entry<KafkaTopicPartition, Long> entry : internalOffsets.entrySet()) {_			KafkaTopicPartition tp = entry.getKey()___			Long lastProcessedOffset = entry.getValue()__			if (lastProcessedOffset != null && lastProcessedOffset >= 0) {_				setOffsetInZooKeeper(curatorClient, groupId, tp.getTopic(), tp.getPartition(), lastProcessedOffset + 1)__			}_		}_	};commits,offsets,for,kafka,partitions,to,zoo,keeper,the,given,offsets,to,this,method,should,be,the,offsets,of,the,last,processed,records,this,method,will,take,care,of,incrementing,the,offsets,by,1,before,committing,them,so,that,the,committed,offsets,to,zookeeper,represent,the,next,record,to,process,param,internal,offsets,the,internal,offsets,representing,last,processed,records,for,the,partitions,to,commit,throws,exception,the,method,forwards,exceptions;public,void,prepare,and,commit,offsets,map,kafka,topic,partition,long,internal,offsets,throws,exception,for,map,entry,kafka,topic,partition,long,entry,internal,offsets,entry,set,kafka,topic,partition,tp,entry,get,key,long,last,processed,offset,entry,get,value,if,last,processed,offset,null,last,processed,offset,0,set,offset,in,zoo,keeper,curator,client,group,id,tp,get,topic,tp,get,partition,last,processed,offset,1
ZookeeperOffsetHandler -> public void prepareAndCommitOffsets(Map<KafkaTopicPartition, Long> internalOffsets) throws Exception;1495923077;Commits offsets for Kafka partitions to ZooKeeper. The given offsets to this method should be the offsets of_the last processed records_ this method will take care of incrementing the offsets by 1 before committing them so_that the committed offsets to Zookeeper represent the next record to process.__@param internalOffsets The internal offsets (representing last processed records) for the partitions to commit._@throws Exception The method forwards exceptions.;public void prepareAndCommitOffsets(Map<KafkaTopicPartition, Long> internalOffsets) throws Exception {_		for (Map.Entry<KafkaTopicPartition, Long> entry : internalOffsets.entrySet()) {_			KafkaTopicPartition tp = entry.getKey()___			Long lastProcessedOffset = entry.getValue()__			if (lastProcessedOffset != null && lastProcessedOffset >= 0) {_				setOffsetInZooKeeper(curatorClient, groupId, tp.getTopic(), tp.getPartition(), lastProcessedOffset + 1)__			}_		}_	};commits,offsets,for,kafka,partitions,to,zoo,keeper,the,given,offsets,to,this,method,should,be,the,offsets,of,the,last,processed,records,this,method,will,take,care,of,incrementing,the,offsets,by,1,before,committing,them,so,that,the,committed,offsets,to,zookeeper,represent,the,next,record,to,process,param,internal,offsets,the,internal,offsets,representing,last,processed,records,for,the,partitions,to,commit,throws,exception,the,method,forwards,exceptions;public,void,prepare,and,commit,offsets,map,kafka,topic,partition,long,internal,offsets,throws,exception,for,map,entry,kafka,topic,partition,long,entry,internal,offsets,entry,set,kafka,topic,partition,tp,entry,get,key,long,last,processed,offset,entry,get,value,if,last,processed,offset,null,last,processed,offset,0,set,offset,in,zoo,keeper,curator,client,group,id,tp,get,topic,tp,get,partition,last,processed,offset,1
ZookeeperOffsetHandler -> public void prepareAndCommitOffsets(Map<KafkaTopicPartition, Long> internalOffsets) throws Exception;1515757409;Commits offsets for Kafka partitions to ZooKeeper. The given offsets to this method should be the offsets of_the last processed records_ this method will take care of incrementing the offsets by 1 before committing them so_that the committed offsets to Zookeeper represent the next record to process.__@param internalOffsets The internal offsets (representing last processed records) for the partitions to commit._@throws Exception The method forwards exceptions.;public void prepareAndCommitOffsets(Map<KafkaTopicPartition, Long> internalOffsets) throws Exception {_		for (Map.Entry<KafkaTopicPartition, Long> entry : internalOffsets.entrySet()) {_			KafkaTopicPartition tp = entry.getKey()___			Long lastProcessedOffset = entry.getValue()__			if (lastProcessedOffset != null && lastProcessedOffset >= 0) {_				setOffsetInZooKeeper(curatorClient, groupId, tp.getTopic(), tp.getPartition(), lastProcessedOffset + 1)__			}_		}_	};commits,offsets,for,kafka,partitions,to,zoo,keeper,the,given,offsets,to,this,method,should,be,the,offsets,of,the,last,processed,records,this,method,will,take,care,of,incrementing,the,offsets,by,1,before,committing,them,so,that,the,committed,offsets,to,zookeeper,represent,the,next,record,to,process,param,internal,offsets,the,internal,offsets,representing,last,processed,records,for,the,partitions,to,commit,throws,exception,the,method,forwards,exceptions;public,void,prepare,and,commit,offsets,map,kafka,topic,partition,long,internal,offsets,throws,exception,for,map,entry,kafka,topic,partition,long,entry,internal,offsets,entry,set,kafka,topic,partition,tp,entry,get,key,long,last,processed,offset,entry,get,value,if,last,processed,offset,null,last,processed,offset,0,set,offset,in,zoo,keeper,curator,client,group,id,tp,get,topic,tp,get,partition,last,processed,offset,1
ZookeeperOffsetHandler -> public Long getCommittedOffset(KafkaTopicPartition partition) throws Exception;1488214488;@param partition The partition to read offset for._@return The mapping from partition to offset._@throws Exception This method forwards exceptions.;public Long getCommittedOffset(KafkaTopicPartition partition) throws Exception {_		return getOffsetFromZooKeeper(curatorClient, groupId, partition.getTopic(), partition.getPartition())__	};param,partition,the,partition,to,read,offset,for,return,the,mapping,from,partition,to,offset,throws,exception,this,method,forwards,exceptions;public,long,get,committed,offset,kafka,topic,partition,partition,throws,exception,return,get,offset,from,zoo,keeper,curator,client,group,id,partition,get,topic,partition,get,partition
ZookeeperOffsetHandler -> public Long getCommittedOffset(KafkaTopicPartition partition) throws Exception;1489060855;@param partition The partition to read offset for._@return The mapping from partition to offset._@throws Exception This method forwards exceptions.;public Long getCommittedOffset(KafkaTopicPartition partition) throws Exception {_		return getOffsetFromZooKeeper(curatorClient, groupId, partition.getTopic(), partition.getPartition())__	};param,partition,the,partition,to,read,offset,for,return,the,mapping,from,partition,to,offset,throws,exception,this,method,forwards,exceptions;public,long,get,committed,offset,kafka,topic,partition,partition,throws,exception,return,get,offset,from,zoo,keeper,curator,client,group,id,partition,get,topic,partition,get,partition
ZookeeperOffsetHandler -> public Long getCommittedOffset(KafkaTopicPartition partition) throws Exception;1495923077;@param partition The partition to read offset for._@return The mapping from partition to offset._@throws Exception This method forwards exceptions.;public Long getCommittedOffset(KafkaTopicPartition partition) throws Exception {_		return getOffsetFromZooKeeper(curatorClient, groupId, partition.getTopic(), partition.getPartition())__	};param,partition,the,partition,to,read,offset,for,return,the,mapping,from,partition,to,offset,throws,exception,this,method,forwards,exceptions;public,long,get,committed,offset,kafka,topic,partition,partition,throws,exception,return,get,offset,from,zoo,keeper,curator,client,group,id,partition,get,topic,partition,get,partition
ZookeeperOffsetHandler -> public Long getCommittedOffset(KafkaTopicPartition partition) throws Exception;1515757409;@param partition The partition to read offset for._@return The mapping from partition to offset._@throws Exception This method forwards exceptions.;public Long getCommittedOffset(KafkaTopicPartition partition) throws Exception {_		return getOffsetFromZooKeeper(curatorClient, groupId, partition.getTopic(), partition.getPartition())__	};param,partition,the,partition,to,read,offset,for,return,the,mapping,from,partition,to,offset,throws,exception,this,method,forwards,exceptions;public,long,get,committed,offset,kafka,topic,partition,partition,throws,exception,return,get,offset,from,zoo,keeper,curator,client,group,id,partition,get,topic,partition,get,partition
ZookeeperOffsetHandler -> public void close() throws IOException;1480685315;Closes the offset handler.__@throws IOException Thrown, if the handler cannot be closed properly.;public void close() throws IOException {_		curatorClient.close()__	};closes,the,offset,handler,throws,ioexception,thrown,if,the,handler,cannot,be,closed,properly;public,void,close,throws,ioexception,curator,client,close
ZookeeperOffsetHandler -> public void close() throws IOException;1488214488;Closes the offset handler.__@throws IOException Thrown, if the handler cannot be closed properly.;public void close() throws IOException {_		curatorClient.close()__	};closes,the,offset,handler,throws,ioexception,thrown,if,the,handler,cannot,be,closed,properly;public,void,close,throws,ioexception,curator,client,close
ZookeeperOffsetHandler -> public void close() throws IOException;1489060855;Closes the offset handler.__@throws IOException Thrown, if the handler cannot be closed properly.;public void close() throws IOException {_		curatorClient.close()__	};closes,the,offset,handler,throws,ioexception,thrown,if,the,handler,cannot,be,closed,properly;public,void,close,throws,ioexception,curator,client,close
ZookeeperOffsetHandler -> public void close() throws IOException;1495923077;Closes the offset handler.__@throws IOException Thrown, if the handler cannot be closed properly.;public void close() throws IOException {_		curatorClient.close()__	};closes,the,offset,handler,throws,ioexception,thrown,if,the,handler,cannot,be,closed,properly;public,void,close,throws,ioexception,curator,client,close
ZookeeperOffsetHandler -> public void close() throws IOException;1515757409;Closes the offset handler.__@throws IOException Thrown, if the handler cannot be closed properly.;public void close() throws IOException {_		curatorClient.close()__	};closes,the,offset,handler,throws,ioexception,thrown,if,the,handler,cannot,be,closed,properly;public,void,close,throws,ioexception,curator,client,close
