# id;timestamp;commentText;codeText;commentWords;codeWords
KafkaTableSinkBase -> protected abstract SinkFunction<Row> createKafkaProducer( 		String topic, 		Properties properties, 		SerializationSchema<Row> serializationSchema, 		Optional<FlinkKafkaPartitioner<Row>> partitioner)_;1539704473;Returns the version-specific Kafka producer.__@param topic               Kafka topic to produce to._@param properties          Properties for the Kafka producer._@param serializationSchema Serialization schema to use to create Kafka records._@param partitioner         Partitioner to select Kafka partition._@return The version-specific Kafka producer;protected abstract SinkFunction<Row> createKafkaProducer(_		String topic,_		Properties properties,_		SerializationSchema<Row> serializationSchema,_		Optional<FlinkKafkaPartitioner<Row>> partitioner)_;returns,the,version,specific,kafka,producer,param,topic,kafka,topic,to,produce,to,param,properties,properties,for,the,kafka,producer,param,serialization,schema,serialization,schema,to,use,to,create,kafka,records,param,partitioner,partitioner,to,select,kafka,partition,return,the,version,specific,kafka,producer;protected,abstract,sink,function,row,create,kafka,producer,string,topic,properties,properties,serialization,schema,row,serialization,schema,optional,flink,kafka,partitioner,row,partitioner
KafkaTableSinkBase -> protected abstract SinkFunction<Row> createKafkaProducer( 		String topic, 		Properties properties, 		SerializationSchema<Row> serializationSchema, 		Optional<FlinkKafkaPartitioner<Row>> partitioner)_;1540894120;Returns the version-specific Kafka producer.__@param topic               Kafka topic to produce to._@param properties          Properties for the Kafka producer._@param serializationSchema Serialization schema to use to create Kafka records._@param partitioner         Partitioner to select Kafka partition._@return The version-specific Kafka producer;protected abstract SinkFunction<Row> createKafkaProducer(_		String topic,_		Properties properties,_		SerializationSchema<Row> serializationSchema,_		Optional<FlinkKafkaPartitioner<Row>> partitioner)_;returns,the,version,specific,kafka,producer,param,topic,kafka,topic,to,produce,to,param,properties,properties,for,the,kafka,producer,param,serialization,schema,serialization,schema,to,use,to,create,kafka,records,param,partitioner,partitioner,to,select,kafka,partition,return,the,version,specific,kafka,producer;protected,abstract,sink,function,row,create,kafka,producer,string,topic,properties,properties,serialization,schema,row,serialization,schema,optional,flink,kafka,partitioner,row,partitioner
KafkaTableSinkBase -> protected abstract SinkFunction<Row> createKafkaProducer( 		String topic, 		Properties properties, 		SerializationSchema<Row> serializationSchema, 		Optional<FlinkKafkaPartitioner<Row>> partitioner)_;1543586152;Returns the version-specific Kafka producer.__@param topic               Kafka topic to produce to._@param properties          Properties for the Kafka producer._@param serializationSchema Serialization schema to use to create Kafka records._@param partitioner         Partitioner to select Kafka partition._@return The version-specific Kafka producer;protected abstract SinkFunction<Row> createKafkaProducer(_		String topic,_		Properties properties,_		SerializationSchema<Row> serializationSchema,_		Optional<FlinkKafkaPartitioner<Row>> partitioner)_;returns,the,version,specific,kafka,producer,param,topic,kafka,topic,to,produce,to,param,properties,properties,for,the,kafka,producer,param,serialization,schema,serialization,schema,to,use,to,create,kafka,records,param,partitioner,partitioner,to,select,kafka,partition,return,the,version,specific,kafka,producer;protected,abstract,sink,function,row,create,kafka,producer,string,topic,properties,properties,serialization,schema,row,serialization,schema,optional,flink,kafka,partitioner,row,partitioner
KafkaTableSinkBase -> protected abstract SinkFunction<Row> createKafkaProducer( 		String topic, 		Properties properties, 		SerializationSchema<Row> serializationSchema, 		Optional<FlinkKafkaPartitioner<Row>> partitioner)_;1549034017;Returns the version-specific Kafka producer.__@param topic               Kafka topic to produce to._@param properties          Properties for the Kafka producer._@param serializationSchema Serialization schema to use to create Kafka records._@param partitioner         Partitioner to select Kafka partition._@return The version-specific Kafka producer;protected abstract SinkFunction<Row> createKafkaProducer(_		String topic,_		Properties properties,_		SerializationSchema<Row> serializationSchema,_		Optional<FlinkKafkaPartitioner<Row>> partitioner)_;returns,the,version,specific,kafka,producer,param,topic,kafka,topic,to,produce,to,param,properties,properties,for,the,kafka,producer,param,serialization,schema,serialization,schema,to,use,to,create,kafka,records,param,partitioner,partitioner,to,select,kafka,partition,return,the,version,specific,kafka,producer;protected,abstract,sink,function,row,create,kafka,producer,string,topic,properties,properties,serialization,schema,row,serialization,schema,optional,flink,kafka,partitioner,row,partitioner
KafkaTableSinkBase -> @Deprecated 	protected SerializationSchema<Row> createSerializationSchema(RowTypeInfo rowSchema);1539704473;Create serialization schema for converting table rows into bytes.__@param rowSchema the schema of the row to serialize._@return Instance of serialization schema_@deprecated Use the constructor to pass a serialization schema instead.;@Deprecated_	protected SerializationSchema<Row> createSerializationSchema(RowTypeInfo rowSchema) {_		throw new UnsupportedOperationException("This method only exists for backwards compatibility.")__	};create,serialization,schema,for,converting,table,rows,into,bytes,param,row,schema,the,schema,of,the,row,to,serialize,return,instance,of,serialization,schema,deprecated,use,the,constructor,to,pass,a,serialization,schema,instead;deprecated,protected,serialization,schema,row,create,serialization,schema,row,type,info,row,schema,throw,new,unsupported,operation,exception,this,method,only,exists,for,backwards,compatibility
KafkaTableSinkBase -> @Deprecated 	protected SerializationSchema<Row> createSerializationSchema(RowTypeInfo rowSchema);1540894120;Create serialization schema for converting table rows into bytes.__@param rowSchema the schema of the row to serialize._@return Instance of serialization schema_@deprecated Use the constructor to pass a serialization schema instead.;@Deprecated_	protected SerializationSchema<Row> createSerializationSchema(RowTypeInfo rowSchema) {_		throw new UnsupportedOperationException("This method only exists for backwards compatibility.")__	};create,serialization,schema,for,converting,table,rows,into,bytes,param,row,schema,the,schema,of,the,row,to,serialize,return,instance,of,serialization,schema,deprecated,use,the,constructor,to,pass,a,serialization,schema,instead;deprecated,protected,serialization,schema,row,create,serialization,schema,row,type,info,row,schema,throw,new,unsupported,operation,exception,this,method,only,exists,for,backwards,compatibility
KafkaTableSinkBase -> @Deprecated 	protected KafkaTableSinkBase createCopy();1539704473;Create a deep copy of this sink.__@return Deep copy of this sink;@Deprecated_	protected KafkaTableSinkBase createCopy() {_		throw new UnsupportedOperationException("This method only exists for backwards compatibility.")__	};create,a,deep,copy,of,this,sink,return,deep,copy,of,this,sink;deprecated,protected,kafka,table,sink,base,create,copy,throw,new,unsupported,operation,exception,this,method,only,exists,for,backwards,compatibility
KafkaTableSinkBase -> @Deprecated 	protected KafkaTableSinkBase createCopy();1540894120;Create a deep copy of this sink.__@return Deep copy of this sink;@Deprecated_	protected KafkaTableSinkBase createCopy() {_		throw new UnsupportedOperationException("This method only exists for backwards compatibility.")__	};create,a,deep,copy,of,this,sink,return,deep,copy,of,this,sink;deprecated,protected,kafka,table,sink,base,create,copy,throw,new,unsupported,operation,exception,this,method,only,exists,for,backwards,compatibility
KafkaTableSinkBase -> @Deprecated 	public KafkaTableSinkBase( 			String topic, 			Properties properties, 			FlinkKafkaPartitioner<Row> partitioner);1539704473;Creates KafkaTableSinkBase.__@param topic                 Kafka topic to write to._@param properties            Properties for the Kafka producer._@param partitioner           Partitioner to select Kafka partition for each item_@deprecated Use table descriptors instead of implementation-specific classes.;@Deprecated_	public KafkaTableSinkBase(_			String topic,_			Properties properties,_			FlinkKafkaPartitioner<Row> partitioner) {_		this.schema = Optional.empty()__		this.topic = Preconditions.checkNotNull(topic, "topic")__		this.properties = Preconditions.checkNotNull(properties, "properties")__		this.partitioner = Optional.of(Preconditions.checkNotNull(partitioner, "partitioner"))__		this.serializationSchema = Optional.empty()__	};creates,kafka,table,sink,base,param,topic,kafka,topic,to,write,to,param,properties,properties,for,the,kafka,producer,param,partitioner,partitioner,to,select,kafka,partition,for,each,item,deprecated,use,table,descriptors,instead,of,implementation,specific,classes;deprecated,public,kafka,table,sink,base,string,topic,properties,properties,flink,kafka,partitioner,row,partitioner,this,schema,optional,empty,this,topic,preconditions,check,not,null,topic,topic,this,properties,preconditions,check,not,null,properties,properties,this,partitioner,optional,of,preconditions,check,not,null,partitioner,partitioner,this,serialization,schema,optional,empty
KafkaTableSinkBase -> @Deprecated 	public KafkaTableSinkBase( 			String topic, 			Properties properties, 			FlinkKafkaPartitioner<Row> partitioner);1540894120;Creates KafkaTableSinkBase.__@param topic                 Kafka topic to write to._@param properties            Properties for the Kafka producer._@param partitioner           Partitioner to select Kafka partition for each item_@deprecated Use table descriptors instead of implementation-specific classes.;@Deprecated_	public KafkaTableSinkBase(_			String topic,_			Properties properties,_			FlinkKafkaPartitioner<Row> partitioner) {_		this.schema = Optional.empty()__		this.topic = Preconditions.checkNotNull(topic, "topic")__		this.properties = Preconditions.checkNotNull(properties, "properties")__		this.partitioner = Optional.of(Preconditions.checkNotNull(partitioner, "partitioner"))__		this.serializationSchema = Optional.empty()__	};creates,kafka,table,sink,base,param,topic,kafka,topic,to,write,to,param,properties,properties,for,the,kafka,producer,param,partitioner,partitioner,to,select,kafka,partition,for,each,item,deprecated,use,table,descriptors,instead,of,implementation,specific,classes;deprecated,public,kafka,table,sink,base,string,topic,properties,properties,flink,kafka,partitioner,row,partitioner,this,schema,optional,empty,this,topic,preconditions,check,not,null,topic,topic,this,properties,preconditions,check,not,null,properties,properties,this,partitioner,optional,of,preconditions,check,not,null,partitioner,partitioner,this,serialization,schema,optional,empty
