commented;modifiers;parameterAmount;loc;comment;code
true;public;2;3;/**  * Initializer for the partitioner. This is called once on each parallel sink instance of  * the Flink Kafka producer. This method should be overridden if necessary.  *  * @param parallelInstanceId 0-indexed id of the parallel sink instance in Flink  * @param parallelInstances the total number of parallel instances  */ ;/**  * Initializer for the partitioner. This is called once on each parallel sink instance of  * the Flink Kafka producer. This method should be overridden if necessary.  *  * @param parallelInstanceId 0-indexed id of the parallel sink instance in Flink  * @param parallelInstances the total number of parallel instances  */ public void open(int parallelInstanceId, int parallelInstances) { // overwrite this method if needed. }
true;public,abstract;5;1;/**  * Determine the id of the partition that the record should be written to.  *  * @param record the record value  * @param key serialized key of the record  * @param value serialized value of the record  * @param targetTopic target topic for the record  * @param partitions found partitions for the target topic  *  * @return the id of the target partition  */ ;/**  * Determine the id of the partition that the record should be written to.  *  * @param record the record value  * @param key serialized key of the record  * @param value serialized value of the record  * @param targetTopic target topic for the record  * @param partitions found partitions for the target topic  *  * @return the id of the target partition  */ public abstract int partition(T record, byte[] key, byte[] value, String targetTopic, int[] partitions).
