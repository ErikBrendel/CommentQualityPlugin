commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Test public void testElasticsearchSink() throws Exception {     runElasticsearchSinkTest(). }
false;public;0;4;;@Test public void testNullAddresses() throws Exception {     runNullAddressesTest(). }
false;public;0;4;;@Test public void testEmptyAddresses() throws Exception {     runEmptyAddressesTest(). }
false;public;0;4;;@Test public void testInvalidElasticsearchCluster() throws Exception {     runInvalidElasticsearchClusterTest(). }
false;protected;4;12;;@Override protected ElasticsearchSinkBase<Tuple2<Integer, String>, TransportClient> createElasticsearchSink(int bulkFlushMaxActions, String clusterName, List<InetSocketAddress> addresses, ElasticsearchSinkFunction<Tuple2<Integer, String>> elasticsearchSinkFunction) {     return new ElasticsearchSink<>(Collections.unmodifiableMap(createUserConfig(bulkFlushMaxActions, clusterName)), addresses, elasticsearchSinkFunction). }
false;protected;3;9;;@Override protected ElasticsearchSinkBase<Tuple2<Integer, String>, TransportClient> createElasticsearchSinkForEmbeddedNode(int bulkFlushMaxActions, String clusterName, ElasticsearchSinkFunction<Tuple2<Integer, String>> elasticsearchSinkFunction) throws Exception {     return createElasticsearchSinkForNode(bulkFlushMaxActions, clusterName, elasticsearchSinkFunction, "127.0.0.1"). }
false;protected;4;15;;@Override protected ElasticsearchSinkBase<Tuple2<Integer, String>, TransportClient> createElasticsearchSinkForNode(int bulkFlushMaxActions, String clusterName, ElasticsearchSinkFunction<Tuple2<Integer, String>> elasticsearchSinkFunction, String ipAddress) throws Exception {     List<InetSocketAddress> transports = new ArrayList<>().     transports.add(new InetSocketAddress(InetAddress.getByName(ipAddress), 9300)).     return new ElasticsearchSink<>(Collections.unmodifiableMap(createUserConfig(bulkFlushMaxActions, clusterName)), transports, elasticsearchSinkFunction). }
