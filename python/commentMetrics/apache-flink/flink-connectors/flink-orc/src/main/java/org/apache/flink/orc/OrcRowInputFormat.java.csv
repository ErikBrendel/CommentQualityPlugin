# id;timestamp;commentText;codeText;commentWords;codeWords
OrcRowInputFormat -> public OrcRowInputFormat(String path, String schemaString, Configuration orcConfig, int batchSize);1511388690;Creates an OrcRowInputFormat.__@param path The path to read ORC files from._@param schemaString The schema of the ORC files as String._@param orcConfig The configuration to read the ORC files with._@param batchSize The number of Row objects to read in a batch.;public OrcRowInputFormat(String path, String schemaString, Configuration orcConfig, int batchSize) {_		this(path, TypeDescription.fromString(schemaString), orcConfig, batchSize)__	};creates,an,orc,row,input,format,param,path,the,path,to,read,orc,files,from,param,schema,string,the,schema,of,the,orc,files,as,string,param,orc,config,the,configuration,to,read,the,orc,files,with,param,batch,size,the,number,of,row,objects,to,read,in,a,batch;public,orc,row,input,format,string,path,string,schema,string,configuration,orc,config,int,batch,size,this,path,type,description,from,string,schema,string,orc,config,batch,size
OrcRowInputFormat -> public OrcRowInputFormat(String path, String schemaString, Configuration orcConfig, int batchSize);1517406263;Creates an OrcRowInputFormat.__@param path The path to read ORC files from._@param schemaString The schema of the ORC files as String._@param orcConfig The configuration to read the ORC files with._@param batchSize The number of Row objects to read in a batch.;public OrcRowInputFormat(String path, String schemaString, Configuration orcConfig, int batchSize) {_		this(path, TypeDescription.fromString(schemaString), orcConfig, batchSize)__	};creates,an,orc,row,input,format,param,path,the,path,to,read,orc,files,from,param,schema,string,the,schema,of,the,orc,files,as,string,param,orc,config,the,configuration,to,read,the,orc,files,with,param,batch,size,the,number,of,row,objects,to,read,in,a,batch;public,orc,row,input,format,string,path,string,schema,string,configuration,orc,config,int,batch,size,this,path,type,description,from,string,schema,string,orc,config,batch,size
OrcRowInputFormat -> public OrcRowInputFormat(String path, String schemaString, Configuration orcConfig, int batchSize);1517847628;Creates an OrcRowInputFormat.__@param path The path to read ORC files from._@param schemaString The schema of the ORC files as String._@param orcConfig The configuration to read the ORC files with._@param batchSize The number of Row objects to read in a batch.;public OrcRowInputFormat(String path, String schemaString, Configuration orcConfig, int batchSize) {_		this(path, TypeDescription.fromString(schemaString), orcConfig, batchSize)__	};creates,an,orc,row,input,format,param,path,the,path,to,read,orc,files,from,param,schema,string,the,schema,of,the,orc,files,as,string,param,orc,config,the,configuration,to,read,the,orc,files,with,param,batch,size,the,number,of,row,objects,to,read,in,a,batch;public,orc,row,input,format,string,path,string,schema,string,configuration,orc,config,int,batch,size,this,path,type,description,from,string,schema,string,orc,config,batch,size
OrcRowInputFormat -> public OrcRowInputFormat(String path, String schemaString, Configuration orcConfig, int batchSize);1518772855;Creates an OrcRowInputFormat.__@param path The path to read ORC files from._@param schemaString The schema of the ORC files as String._@param orcConfig The configuration to read the ORC files with._@param batchSize The number of Row objects to read in a batch.;public OrcRowInputFormat(String path, String schemaString, Configuration orcConfig, int batchSize) {_		this(path, TypeDescription.fromString(schemaString), orcConfig, batchSize)__	};creates,an,orc,row,input,format,param,path,the,path,to,read,orc,files,from,param,schema,string,the,schema,of,the,orc,files,as,string,param,orc,config,the,configuration,to,read,the,orc,files,with,param,batch,size,the,number,of,row,objects,to,read,in,a,batch;public,orc,row,input,format,string,path,string,schema,string,configuration,orc,config,int,batch,size,this,path,type,description,from,string,schema,string,orc,config,batch,size
OrcRowInputFormat -> public OrcRowInputFormat(String path, String schemaString, Configuration orcConfig, int batchSize);1529010948;Creates an OrcRowInputFormat.__@param path The path to read ORC files from._@param schemaString The schema of the ORC files as String._@param orcConfig The configuration to read the ORC files with._@param batchSize The number of Row objects to read in a batch.;public OrcRowInputFormat(String path, String schemaString, Configuration orcConfig, int batchSize) {_		this(path, TypeDescription.fromString(schemaString), orcConfig, batchSize)__	};creates,an,orc,row,input,format,param,path,the,path,to,read,orc,files,from,param,schema,string,the,schema,of,the,orc,files,as,string,param,orc,config,the,configuration,to,read,the,orc,files,with,param,batch,size,the,number,of,row,objects,to,read,in,a,batch;public,orc,row,input,format,string,path,string,schema,string,configuration,orc,config,int,batch,size,this,path,type,description,from,string,schema,string,orc,config,batch,size
OrcRowInputFormat -> LessThan -> public LessThan(String columnName, PredicateLeaf.Type literalType, Serializable literal);1511388690;Creates a LESS_THAN predicate.__@param columnName The column to check._@param literalType The type of the literal._@param literal The literal value to check the column against.;public LessThan(String columnName, PredicateLeaf.Type literalType, Serializable literal) {_			super(columnName, literalType, literal)__		};creates,a,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literal,param,literal,the,literal,value,to,check,the,column,against;public,less,than,string,column,name,predicate,leaf,type,literal,type,serializable,literal,super,column,name,literal,type,literal
OrcRowInputFormat -> LessThan -> public LessThan(String columnName, PredicateLeaf.Type literalType, Serializable literal);1517406263;Creates a LESS_THAN predicate.__@param columnName The column to check._@param literalType The type of the literal._@param literal The literal value to check the column against.;public LessThan(String columnName, PredicateLeaf.Type literalType, Serializable literal) {_			super(columnName, literalType, literal)__		};creates,a,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literal,param,literal,the,literal,value,to,check,the,column,against;public,less,than,string,column,name,predicate,leaf,type,literal,type,serializable,literal,super,column,name,literal,type,literal
OrcRowInputFormat -> LessThan -> public LessThan(String columnName, PredicateLeaf.Type literalType, Serializable literal);1517847628;Creates a LESS_THAN predicate.__@param columnName The column to check._@param literalType The type of the literal._@param literal The literal value to check the column against.;public LessThan(String columnName, PredicateLeaf.Type literalType, Serializable literal) {_			super(columnName, literalType, literal)__		};creates,a,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literal,param,literal,the,literal,value,to,check,the,column,against;public,less,than,string,column,name,predicate,leaf,type,literal,type,serializable,literal,super,column,name,literal,type,literal
OrcRowInputFormat -> LessThan -> public LessThan(String columnName, PredicateLeaf.Type literalType, Serializable literal);1518772855;Creates a LESS_THAN predicate.__@param columnName The column to check._@param literalType The type of the literal._@param literal The literal value to check the column against.;public LessThan(String columnName, PredicateLeaf.Type literalType, Serializable literal) {_			super(columnName, literalType, literal)__		};creates,a,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literal,param,literal,the,literal,value,to,check,the,column,against;public,less,than,string,column,name,predicate,leaf,type,literal,type,serializable,literal,super,column,name,literal,type,literal
OrcRowInputFormat -> LessThan -> public LessThan(String columnName, PredicateLeaf.Type literalType, Serializable literal);1529010948;Creates a LESS_THAN predicate.__@param columnName The column to check._@param literalType The type of the literal._@param literal The literal value to check the column against.;public LessThan(String columnName, PredicateLeaf.Type literalType, Serializable literal) {_			super(columnName, literalType, literal)__		};creates,a,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literal,param,literal,the,literal,value,to,check,the,column,against;public,less,than,string,column,name,predicate,leaf,type,literal,type,serializable,literal,super,column,name,literal,type,literal
OrcRowInputFormat -> Or -> public Or(Predicate... predicates);1511388690;Creates an OR predicate.__@param predicates The disjunctive predicates.;public Or(Predicate... predicates) {_			this.preds = predicates__		};creates,an,or,predicate,param,predicates,the,disjunctive,predicates;public,or,predicate,predicates,this,preds,predicates
OrcRowInputFormat -> Or -> public Or(Predicate... predicates);1517406263;Creates an OR predicate.__@param predicates The disjunctive predicates.;public Or(Predicate... predicates) {_			this.preds = predicates__		};creates,an,or,predicate,param,predicates,the,disjunctive,predicates;public,or,predicate,predicates,this,preds,predicates
OrcRowInputFormat -> Or -> public Or(Predicate... predicates);1517847628;Creates an OR predicate.__@param predicates The disjunctive predicates.;public Or(Predicate... predicates) {_			this.preds = predicates__		};creates,an,or,predicate,param,predicates,the,disjunctive,predicates;public,or,predicate,predicates,this,preds,predicates
OrcRowInputFormat -> Or -> public Or(Predicate... predicates);1518772855;Creates an OR predicate.__@param predicates The disjunctive predicates.;public Or(Predicate... predicates) {_			this.preds = predicates__		};creates,an,or,predicate,param,predicates,the,disjunctive,predicates;public,or,predicate,predicates,this,preds,predicates
OrcRowInputFormat -> Or -> public Or(Predicate... predicates);1529010948;Creates an OR predicate.__@param predicates The disjunctive predicates.;public Or(Predicate... predicates) {_			this.preds = predicates__		};creates,an,or,predicate,param,predicates,the,disjunctive,predicates;public,or,predicate,predicates,this,preds,predicates
OrcRowInputFormat -> public void selectFields(int... selectedFields);1511388690;Selects the fields from the ORC schema that are returned by InputFormat.__@param selectedFields The indices of the fields of the ORC schema that are returned by the InputFormat.;public void selectFields(int... selectedFields) {_		_		this.selectedFields = selectedFields__		_		this.rowType = RowTypeInfo.projectFields(this.rowType, selectedFields)__	};selects,the,fields,from,the,orc,schema,that,are,returned,by,input,format,param,selected,fields,the,indices,of,the,fields,of,the,orc,schema,that,are,returned,by,the,input,format;public,void,select,fields,int,selected,fields,this,selected,fields,selected,fields,this,row,type,row,type,info,project,fields,this,row,type,selected,fields
OrcRowInputFormat -> public void selectFields(int... selectedFields);1517406263;Selects the fields from the ORC schema that are returned by InputFormat.__@param selectedFields The indices of the fields of the ORC schema that are returned by the InputFormat.;public void selectFields(int... selectedFields) {_		_		this.selectedFields = selectedFields__		_		this.rowType = RowTypeInfo.projectFields(this.rowType, selectedFields)__	};selects,the,fields,from,the,orc,schema,that,are,returned,by,input,format,param,selected,fields,the,indices,of,the,fields,of,the,orc,schema,that,are,returned,by,the,input,format;public,void,select,fields,int,selected,fields,this,selected,fields,selected,fields,this,row,type,row,type,info,project,fields,this,row,type,selected,fields
OrcRowInputFormat -> public void selectFields(int... selectedFields);1517847628;Selects the fields from the ORC schema that are returned by InputFormat.__@param selectedFields The indices of the fields of the ORC schema that are returned by the InputFormat.;public void selectFields(int... selectedFields) {_		_		this.selectedFields = selectedFields__		_		this.rowType = RowTypeInfo.projectFields(this.rowType, selectedFields)__	};selects,the,fields,from,the,orc,schema,that,are,returned,by,input,format,param,selected,fields,the,indices,of,the,fields,of,the,orc,schema,that,are,returned,by,the,input,format;public,void,select,fields,int,selected,fields,this,selected,fields,selected,fields,this,row,type,row,type,info,project,fields,this,row,type,selected,fields
OrcRowInputFormat -> public void selectFields(int... selectedFields);1518772855;Selects the fields from the ORC schema that are returned by InputFormat.__@param selectedFields The indices of the fields of the ORC schema that are returned by the InputFormat.;public void selectFields(int... selectedFields) {_		_		this.selectedFields = selectedFields__		_		this.rowType = RowTypeInfo.projectFields(this.rowType, selectedFields)__	};selects,the,fields,from,the,orc,schema,that,are,returned,by,input,format,param,selected,fields,the,indices,of,the,fields,of,the,orc,schema,that,are,returned,by,the,input,format;public,void,select,fields,int,selected,fields,this,selected,fields,selected,fields,this,row,type,row,type,info,project,fields,this,row,type,selected,fields
OrcRowInputFormat -> public void selectFields(int... selectedFields);1529010948;Selects the fields from the ORC schema that are returned by InputFormat.__@param selectedFields The indices of the fields of the ORC schema that are returned by the InputFormat.;public void selectFields(int... selectedFields) {_		_		this.selectedFields = selectedFields__		_		this.rowType = RowTypeInfo.projectFields(this.rowType, selectedFields)__	};selects,the,fields,from,the,orc,schema,that,are,returned,by,input,format,param,selected,fields,the,indices,of,the,fields,of,the,orc,schema,that,are,returned,by,the,input,format;public,void,select,fields,int,selected,fields,this,selected,fields,selected,fields,this,row,type,row,type,info,project,fields,this,row,type,selected,fields
OrcRowInputFormat -> private boolean ensureBatch() throws IOException;1511388690;Checks if there is at least one row left in the batch to return._If no more row are available, it reads another batch of rows.__@return Returns true if there is one more row to return, false otherwise._@throws IOException throw if an exception happens while reading a batch.;private boolean ensureBatch() throws IOException {__		if (nextRow >= rowsInBatch) {_			_			nextRow = 0__			_			boolean moreRows = orcRowsReader.nextBatch(rowBatch)___			if (moreRows) {_				_				rowsInBatch = fillRows(rows, schema, rowBatch, selectedFields)__			}_			return moreRows__		}_		_		return true__	};checks,if,there,is,at,least,one,row,left,in,the,batch,to,return,if,no,more,row,are,available,it,reads,another,batch,of,rows,return,returns,true,if,there,is,one,more,row,to,return,false,otherwise,throws,ioexception,throw,if,an,exception,happens,while,reading,a,batch;private,boolean,ensure,batch,throws,ioexception,if,next,row,rows,in,batch,next,row,0,boolean,more,rows,orc,rows,reader,next,batch,row,batch,if,more,rows,rows,in,batch,fill,rows,rows,schema,row,batch,selected,fields,return,more,rows,return,true
OrcRowInputFormat -> private boolean ensureBatch() throws IOException;1517406263;Checks if there is at least one row left in the batch to return._If no more row are available, it reads another batch of rows.__@return Returns true if there is one more row to return, false otherwise._@throws IOException throw if an exception happens while reading a batch.;private boolean ensureBatch() throws IOException {__		if (nextRow >= rowsInBatch) {_			_			nextRow = 0__			_			boolean moreRows = orcRowsReader.nextBatch(rowBatch)___			if (moreRows) {_				_				rowsInBatch = fillRows(rows, schema, rowBatch, selectedFields)__			}_			return moreRows__		}_		_		return true__	};checks,if,there,is,at,least,one,row,left,in,the,batch,to,return,if,no,more,row,are,available,it,reads,another,batch,of,rows,return,returns,true,if,there,is,one,more,row,to,return,false,otherwise,throws,ioexception,throw,if,an,exception,happens,while,reading,a,batch;private,boolean,ensure,batch,throws,ioexception,if,next,row,rows,in,batch,next,row,0,boolean,more,rows,orc,rows,reader,next,batch,row,batch,if,more,rows,rows,in,batch,fill,rows,rows,schema,row,batch,selected,fields,return,more,rows,return,true
OrcRowInputFormat -> private boolean ensureBatch() throws IOException;1517847628;Checks if there is at least one row left in the batch to return._If no more row are available, it reads another batch of rows.__@return Returns true if there is one more row to return, false otherwise._@throws IOException throw if an exception happens while reading a batch.;private boolean ensureBatch() throws IOException {__		if (nextRow >= rowsInBatch) {_			_			nextRow = 0__			_			boolean moreRows = orcRowsReader.nextBatch(rowBatch)___			if (moreRows) {_				_				rowsInBatch = fillRows(rows, schema, rowBatch, selectedFields)__			}_			return moreRows__		}_		_		return true__	};checks,if,there,is,at,least,one,row,left,in,the,batch,to,return,if,no,more,row,are,available,it,reads,another,batch,of,rows,return,returns,true,if,there,is,one,more,row,to,return,false,otherwise,throws,ioexception,throw,if,an,exception,happens,while,reading,a,batch;private,boolean,ensure,batch,throws,ioexception,if,next,row,rows,in,batch,next,row,0,boolean,more,rows,orc,rows,reader,next,batch,row,batch,if,more,rows,rows,in,batch,fill,rows,rows,schema,row,batch,selected,fields,return,more,rows,return,true
OrcRowInputFormat -> private boolean ensureBatch() throws IOException;1518772855;Checks if there is at least one row left in the batch to return._If no more row are available, it reads another batch of rows.__@return Returns true if there is one more row to return, false otherwise._@throws IOException throw if an exception happens while reading a batch.;private boolean ensureBatch() throws IOException {__		if (nextRow >= rowsInBatch) {_			_			nextRow = 0__			_			boolean moreRows = orcRowsReader.nextBatch(rowBatch)___			if (moreRows) {_				_				rowsInBatch = fillRows(rows, schema, rowBatch, selectedFields)__			}_			return moreRows__		}_		_		return true__	};checks,if,there,is,at,least,one,row,left,in,the,batch,to,return,if,no,more,row,are,available,it,reads,another,batch,of,rows,return,returns,true,if,there,is,one,more,row,to,return,false,otherwise,throws,ioexception,throw,if,an,exception,happens,while,reading,a,batch;private,boolean,ensure,batch,throws,ioexception,if,next,row,rows,in,batch,next,row,0,boolean,more,rows,orc,rows,reader,next,batch,row,batch,if,more,rows,rows,in,batch,fill,rows,rows,schema,row,batch,selected,fields,return,more,rows,return,true
OrcRowInputFormat -> private boolean ensureBatch() throws IOException;1529010948;Checks if there is at least one row left in the batch to return._If no more row are available, it reads another batch of rows.__@return Returns true if there is one more row to return, false otherwise._@throws IOException throw if an exception happens while reading a batch.;private boolean ensureBatch() throws IOException {__		if (nextRow >= rowsInBatch) {_			_			nextRow = 0__			_			boolean moreRows = orcRowsReader.nextBatch(rowBatch)___			if (moreRows) {_				_				rowsInBatch = fillRows(rows, schema, rowBatch, selectedFields)__			}_			return moreRows__		}_		_		return true__	};checks,if,there,is,at,least,one,row,left,in,the,batch,to,return,if,no,more,row,are,available,it,reads,another,batch,of,rows,return,returns,true,if,there,is,one,more,row,to,return,false,otherwise,throws,ioexception,throw,if,an,exception,happens,while,reading,a,batch;private,boolean,ensure,batch,throws,ioexception,if,next,row,rows,in,batch,next,row,0,boolean,more,rows,orc,rows,reader,next,batch,row,batch,if,more,rows,rows,in,batch,fill,rows,rows,schema,row,batch,selected,fields,return,more,rows,return,true
OrcRowInputFormat -> Not -> public Not(Predicate predicate);1511388690;Creates a NOT predicate.__@param predicate The predicate to negate.;public Not(Predicate predicate) {_			this.pred = predicate__		};creates,a,not,predicate,param,predicate,the,predicate,to,negate;public,not,predicate,predicate,this,pred,predicate
OrcRowInputFormat -> Not -> public Not(Predicate predicate);1517406263;Creates a NOT predicate.__@param predicate The predicate to negate.;public Not(Predicate predicate) {_			this.pred = predicate__		};creates,a,not,predicate,param,predicate,the,predicate,to,negate;public,not,predicate,predicate,this,pred,predicate
OrcRowInputFormat -> Not -> public Not(Predicate predicate);1517847628;Creates a NOT predicate.__@param predicate The predicate to negate.;public Not(Predicate predicate) {_			this.pred = predicate__		};creates,a,not,predicate,param,predicate,the,predicate,to,negate;public,not,predicate,predicate,this,pred,predicate
OrcRowInputFormat -> Not -> public Not(Predicate predicate);1518772855;Creates a NOT predicate.__@param predicate The predicate to negate.;public Not(Predicate predicate) {_			this.pred = predicate__		};creates,a,not,predicate,param,predicate,the,predicate,to,negate;public,not,predicate,predicate,this,pred,predicate
OrcRowInputFormat -> Not -> public Not(Predicate predicate);1529010948;Creates a NOT predicate.__@param predicate The predicate to negate.;public Not(Predicate predicate) {_			this.pred = predicate__		};creates,a,not,predicate,param,predicate,the,predicate,to,negate;public,not,predicate,predicate,this,pred,predicate
OrcRowInputFormat -> NullSafeEquals -> public NullSafeEquals(String columnName, PredicateLeaf.Type literalType, Serializable literal);1511388690;Creates a null-safe EQUALS predicate.__@param columnName The column to check._@param literalType The type of the literal._@param literal The literal value to check the column against.;public NullSafeEquals(String columnName, PredicateLeaf.Type literalType, Serializable literal) {_			super(columnName, literalType, literal)__		};creates,a,null,safe,equals,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literal,param,literal,the,literal,value,to,check,the,column,against;public,null,safe,equals,string,column,name,predicate,leaf,type,literal,type,serializable,literal,super,column,name,literal,type,literal
OrcRowInputFormat -> NullSafeEquals -> public NullSafeEquals(String columnName, PredicateLeaf.Type literalType, Serializable literal);1517406263;Creates a null-safe EQUALS predicate.__@param columnName The column to check._@param literalType The type of the literal._@param literal The literal value to check the column against.;public NullSafeEquals(String columnName, PredicateLeaf.Type literalType, Serializable literal) {_			super(columnName, literalType, literal)__		};creates,a,null,safe,equals,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literal,param,literal,the,literal,value,to,check,the,column,against;public,null,safe,equals,string,column,name,predicate,leaf,type,literal,type,serializable,literal,super,column,name,literal,type,literal
OrcRowInputFormat -> NullSafeEquals -> public NullSafeEquals(String columnName, PredicateLeaf.Type literalType, Serializable literal);1517847628;Creates a null-safe EQUALS predicate.__@param columnName The column to check._@param literalType The type of the literal._@param literal The literal value to check the column against.;public NullSafeEquals(String columnName, PredicateLeaf.Type literalType, Serializable literal) {_			super(columnName, literalType, literal)__		};creates,a,null,safe,equals,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literal,param,literal,the,literal,value,to,check,the,column,against;public,null,safe,equals,string,column,name,predicate,leaf,type,literal,type,serializable,literal,super,column,name,literal,type,literal
OrcRowInputFormat -> NullSafeEquals -> public NullSafeEquals(String columnName, PredicateLeaf.Type literalType, Serializable literal);1518772855;Creates a null-safe EQUALS predicate.__@param columnName The column to check._@param literalType The type of the literal._@param literal The literal value to check the column against.;public NullSafeEquals(String columnName, PredicateLeaf.Type literalType, Serializable literal) {_			super(columnName, literalType, literal)__		};creates,a,null,safe,equals,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literal,param,literal,the,literal,value,to,check,the,column,against;public,null,safe,equals,string,column,name,predicate,leaf,type,literal,type,serializable,literal,super,column,name,literal,type,literal
OrcRowInputFormat -> NullSafeEquals -> public NullSafeEquals(String columnName, PredicateLeaf.Type literalType, Serializable literal);1529010948;Creates a null-safe EQUALS predicate.__@param columnName The column to check._@param literalType The type of the literal._@param literal The literal value to check the column against.;public NullSafeEquals(String columnName, PredicateLeaf.Type literalType, Serializable literal) {_			super(columnName, literalType, literal)__		};creates,a,null,safe,equals,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literal,param,literal,the,literal,value,to,check,the,column,against;public,null,safe,equals,string,column,name,predicate,leaf,type,literal,type,serializable,literal,super,column,name,literal,type,literal
OrcRowInputFormat -> public OrcRowInputFormat(String path, String schemaString, Configuration orcConfig);1511388690;Creates an OrcRowInputFormat.__@param path The path to read ORC files from._@param schemaString The schema of the ORC files as String._@param orcConfig The configuration to read the ORC files with.;public OrcRowInputFormat(String path, String schemaString, Configuration orcConfig) {_		this(path, TypeDescription.fromString(schemaString), orcConfig, DEFAULT_BATCH_SIZE)__	};creates,an,orc,row,input,format,param,path,the,path,to,read,orc,files,from,param,schema,string,the,schema,of,the,orc,files,as,string,param,orc,config,the,configuration,to,read,the,orc,files,with;public,orc,row,input,format,string,path,string,schema,string,configuration,orc,config,this,path,type,description,from,string,schema,string,orc,config
OrcRowInputFormat -> public OrcRowInputFormat(String path, String schemaString, Configuration orcConfig);1517406263;Creates an OrcRowInputFormat.__@param path The path to read ORC files from._@param schemaString The schema of the ORC files as String._@param orcConfig The configuration to read the ORC files with.;public OrcRowInputFormat(String path, String schemaString, Configuration orcConfig) {_		this(path, TypeDescription.fromString(schemaString), orcConfig, DEFAULT_BATCH_SIZE)__	};creates,an,orc,row,input,format,param,path,the,path,to,read,orc,files,from,param,schema,string,the,schema,of,the,orc,files,as,string,param,orc,config,the,configuration,to,read,the,orc,files,with;public,orc,row,input,format,string,path,string,schema,string,configuration,orc,config,this,path,type,description,from,string,schema,string,orc,config
OrcRowInputFormat -> public OrcRowInputFormat(String path, String schemaString, Configuration orcConfig);1517847628;Creates an OrcRowInputFormat.__@param path The path to read ORC files from._@param schemaString The schema of the ORC files as String._@param orcConfig The configuration to read the ORC files with.;public OrcRowInputFormat(String path, String schemaString, Configuration orcConfig) {_		this(path, TypeDescription.fromString(schemaString), orcConfig, DEFAULT_BATCH_SIZE)__	};creates,an,orc,row,input,format,param,path,the,path,to,read,orc,files,from,param,schema,string,the,schema,of,the,orc,files,as,string,param,orc,config,the,configuration,to,read,the,orc,files,with;public,orc,row,input,format,string,path,string,schema,string,configuration,orc,config,this,path,type,description,from,string,schema,string,orc,config
OrcRowInputFormat -> public OrcRowInputFormat(String path, String schemaString, Configuration orcConfig);1518772855;Creates an OrcRowInputFormat.__@param path The path to read ORC files from._@param schemaString The schema of the ORC files as String._@param orcConfig The configuration to read the ORC files with.;public OrcRowInputFormat(String path, String schemaString, Configuration orcConfig) {_		this(path, TypeDescription.fromString(schemaString), orcConfig, DEFAULT_BATCH_SIZE)__	};creates,an,orc,row,input,format,param,path,the,path,to,read,orc,files,from,param,schema,string,the,schema,of,the,orc,files,as,string,param,orc,config,the,configuration,to,read,the,orc,files,with;public,orc,row,input,format,string,path,string,schema,string,configuration,orc,config,this,path,type,description,from,string,schema,string,orc,config
OrcRowInputFormat -> public OrcRowInputFormat(String path, String schemaString, Configuration orcConfig);1529010948;Creates an OrcRowInputFormat.__@param path The path to read ORC files from._@param schemaString The schema of the ORC files as String._@param orcConfig The configuration to read the ORC files with.;public OrcRowInputFormat(String path, String schemaString, Configuration orcConfig) {_		this(path, TypeDescription.fromString(schemaString), orcConfig, DEFAULT_BATCH_SIZE)__	};creates,an,orc,row,input,format,param,path,the,path,to,read,orc,files,from,param,schema,string,the,schema,of,the,orc,files,as,string,param,orc,config,the,configuration,to,read,the,orc,files,with;public,orc,row,input,format,string,path,string,schema,string,configuration,orc,config,this,path,type,description,from,string,schema,string,orc,config
OrcRowInputFormat -> LessThanEquals -> public LessThanEquals(String columnName, PredicateLeaf.Type literalType, Serializable literal);1511388690;Creates a LESS_THAN_EQUALS predicate.__@param columnName The column to check._@param literalType The type of the literal._@param literal The literal value to check the column against.;public LessThanEquals(String columnName, PredicateLeaf.Type literalType, Serializable literal) {_			super(columnName, literalType, literal)__		};creates,a,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literal,param,literal,the,literal,value,to,check,the,column,against;public,less,than,equals,string,column,name,predicate,leaf,type,literal,type,serializable,literal,super,column,name,literal,type,literal
OrcRowInputFormat -> LessThanEquals -> public LessThanEquals(String columnName, PredicateLeaf.Type literalType, Serializable literal);1517406263;Creates a LESS_THAN_EQUALS predicate.__@param columnName The column to check._@param literalType The type of the literal._@param literal The literal value to check the column against.;public LessThanEquals(String columnName, PredicateLeaf.Type literalType, Serializable literal) {_			super(columnName, literalType, literal)__		};creates,a,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literal,param,literal,the,literal,value,to,check,the,column,against;public,less,than,equals,string,column,name,predicate,leaf,type,literal,type,serializable,literal,super,column,name,literal,type,literal
OrcRowInputFormat -> LessThanEquals -> public LessThanEquals(String columnName, PredicateLeaf.Type literalType, Serializable literal);1517847628;Creates a LESS_THAN_EQUALS predicate.__@param columnName The column to check._@param literalType The type of the literal._@param literal The literal value to check the column against.;public LessThanEquals(String columnName, PredicateLeaf.Type literalType, Serializable literal) {_			super(columnName, literalType, literal)__		};creates,a,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literal,param,literal,the,literal,value,to,check,the,column,against;public,less,than,equals,string,column,name,predicate,leaf,type,literal,type,serializable,literal,super,column,name,literal,type,literal
OrcRowInputFormat -> LessThanEquals -> public LessThanEquals(String columnName, PredicateLeaf.Type literalType, Serializable literal);1518772855;Creates a LESS_THAN_EQUALS predicate.__@param columnName The column to check._@param literalType The type of the literal._@param literal The literal value to check the column against.;public LessThanEquals(String columnName, PredicateLeaf.Type literalType, Serializable literal) {_			super(columnName, literalType, literal)__		};creates,a,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literal,param,literal,the,literal,value,to,check,the,column,against;public,less,than,equals,string,column,name,predicate,leaf,type,literal,type,serializable,literal,super,column,name,literal,type,literal
OrcRowInputFormat -> LessThanEquals -> public LessThanEquals(String columnName, PredicateLeaf.Type literalType, Serializable literal);1529010948;Creates a LESS_THAN_EQUALS predicate.__@param columnName The column to check._@param literalType The type of the literal._@param literal The literal value to check the column against.;public LessThanEquals(String columnName, PredicateLeaf.Type literalType, Serializable literal) {_			super(columnName, literalType, literal)__		};creates,a,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literal,param,literal,the,literal,value,to,check,the,column,against;public,less,than,equals,string,column,name,predicate,leaf,type,literal,type,serializable,literal,super,column,name,literal,type,literal
OrcRowInputFormat -> Between -> public Between(String columnName, PredicateLeaf.Type literalType, Serializable lowerBound, Serializable upperBound);1511388690;Creates an BETWEEN predicate.__@param columnName The column to check._@param literalType The type of the literals._@param lowerBound The literal value of the (inclusive) lower bound to check the column against._@param upperBound The literal value of the (inclusive) upper bound to check the column against.;public Between(String columnName, PredicateLeaf.Type literalType, Serializable lowerBound, Serializable upperBound) {_			super(columnName, literalType)__			this.lowerBound = lowerBound__			this.upperBound = upperBound__		};creates,an,between,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literals,param,lower,bound,the,literal,value,of,the,inclusive,lower,bound,to,check,the,column,against,param,upper,bound,the,literal,value,of,the,inclusive,upper,bound,to,check,the,column,against;public,between,string,column,name,predicate,leaf,type,literal,type,serializable,lower,bound,serializable,upper,bound,super,column,name,literal,type,this,lower,bound,lower,bound,this,upper,bound,upper,bound
OrcRowInputFormat -> Between -> public Between(String columnName, PredicateLeaf.Type literalType, Serializable lowerBound, Serializable upperBound);1517406263;Creates an BETWEEN predicate.__@param columnName The column to check._@param literalType The type of the literals._@param lowerBound The literal value of the (inclusive) lower bound to check the column against._@param upperBound The literal value of the (inclusive) upper bound to check the column against.;public Between(String columnName, PredicateLeaf.Type literalType, Serializable lowerBound, Serializable upperBound) {_			super(columnName, literalType)__			this.lowerBound = lowerBound__			this.upperBound = upperBound__		};creates,an,between,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literals,param,lower,bound,the,literal,value,of,the,inclusive,lower,bound,to,check,the,column,against,param,upper,bound,the,literal,value,of,the,inclusive,upper,bound,to,check,the,column,against;public,between,string,column,name,predicate,leaf,type,literal,type,serializable,lower,bound,serializable,upper,bound,super,column,name,literal,type,this,lower,bound,lower,bound,this,upper,bound,upper,bound
OrcRowInputFormat -> Between -> public Between(String columnName, PredicateLeaf.Type literalType, Serializable lowerBound, Serializable upperBound);1517847628;Creates an BETWEEN predicate.__@param columnName The column to check._@param literalType The type of the literals._@param lowerBound The literal value of the (inclusive) lower bound to check the column against._@param upperBound The literal value of the (inclusive) upper bound to check the column against.;public Between(String columnName, PredicateLeaf.Type literalType, Serializable lowerBound, Serializable upperBound) {_			super(columnName, literalType)__			this.lowerBound = lowerBound__			this.upperBound = upperBound__		};creates,an,between,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literals,param,lower,bound,the,literal,value,of,the,inclusive,lower,bound,to,check,the,column,against,param,upper,bound,the,literal,value,of,the,inclusive,upper,bound,to,check,the,column,against;public,between,string,column,name,predicate,leaf,type,literal,type,serializable,lower,bound,serializable,upper,bound,super,column,name,literal,type,this,lower,bound,lower,bound,this,upper,bound,upper,bound
OrcRowInputFormat -> Between -> public Between(String columnName, PredicateLeaf.Type literalType, Serializable lowerBound, Serializable upperBound);1518772855;Creates an BETWEEN predicate.__@param columnName The column to check._@param literalType The type of the literals._@param lowerBound The literal value of the (inclusive) lower bound to check the column against._@param upperBound The literal value of the (inclusive) upper bound to check the column against.;public Between(String columnName, PredicateLeaf.Type literalType, Serializable lowerBound, Serializable upperBound) {_			super(columnName, literalType)__			this.lowerBound = lowerBound__			this.upperBound = upperBound__		};creates,an,between,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literals,param,lower,bound,the,literal,value,of,the,inclusive,lower,bound,to,check,the,column,against,param,upper,bound,the,literal,value,of,the,inclusive,upper,bound,to,check,the,column,against;public,between,string,column,name,predicate,leaf,type,literal,type,serializable,lower,bound,serializable,upper,bound,super,column,name,literal,type,this,lower,bound,lower,bound,this,upper,bound,upper,bound
OrcRowInputFormat -> Between -> public Between(String columnName, PredicateLeaf.Type literalType, Serializable lowerBound, Serializable upperBound);1529010948;Creates an BETWEEN predicate.__@param columnName The column to check._@param literalType The type of the literals._@param lowerBound The literal value of the (inclusive) lower bound to check the column against._@param upperBound The literal value of the (inclusive) upper bound to check the column against.;public Between(String columnName, PredicateLeaf.Type literalType, Serializable lowerBound, Serializable upperBound) {_			super(columnName, literalType)__			this.lowerBound = lowerBound__			this.upperBound = upperBound__		};creates,an,between,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literals,param,lower,bound,the,literal,value,of,the,inclusive,lower,bound,to,check,the,column,against,param,upper,bound,the,literal,value,of,the,inclusive,upper,bound,to,check,the,column,against;public,between,string,column,name,predicate,leaf,type,literal,type,serializable,lower,bound,serializable,upper,bound,super,column,name,literal,type,this,lower,bound,lower,bound,this,upper,bound,upper,bound
OrcRowInputFormat -> In -> public In(String columnName, PredicateLeaf.Type literalType, Serializable... literals);1511388690;Creates an IN predicate.__@param columnName The column to check._@param literalType The type of the literals._@param literals The literal values to check the column against.;public In(String columnName, PredicateLeaf.Type literalType, Serializable... literals) {_			super(columnName, literalType)__			this.literals = literals__		};creates,an,in,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literals,param,literals,the,literal,values,to,check,the,column,against;public,in,string,column,name,predicate,leaf,type,literal,type,serializable,literals,super,column,name,literal,type,this,literals,literals
OrcRowInputFormat -> In -> public In(String columnName, PredicateLeaf.Type literalType, Serializable... literals);1517406263;Creates an IN predicate.__@param columnName The column to check._@param literalType The type of the literals._@param literals The literal values to check the column against.;public In(String columnName, PredicateLeaf.Type literalType, Serializable... literals) {_			super(columnName, literalType)__			this.literals = literals__		};creates,an,in,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literals,param,literals,the,literal,values,to,check,the,column,against;public,in,string,column,name,predicate,leaf,type,literal,type,serializable,literals,super,column,name,literal,type,this,literals,literals
OrcRowInputFormat -> In -> public In(String columnName, PredicateLeaf.Type literalType, Serializable... literals);1517847628;Creates an IN predicate.__@param columnName The column to check._@param literalType The type of the literals._@param literals The literal values to check the column against.;public In(String columnName, PredicateLeaf.Type literalType, Serializable... literals) {_			super(columnName, literalType)__			this.literals = literals__		};creates,an,in,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literals,param,literals,the,literal,values,to,check,the,column,against;public,in,string,column,name,predicate,leaf,type,literal,type,serializable,literals,super,column,name,literal,type,this,literals,literals
OrcRowInputFormat -> In -> public In(String columnName, PredicateLeaf.Type literalType, Serializable... literals);1518772855;Creates an IN predicate.__@param columnName The column to check._@param literalType The type of the literals._@param literals The literal values to check the column against.;public In(String columnName, PredicateLeaf.Type literalType, Serializable... literals) {_			super(columnName, literalType)__			this.literals = literals__		};creates,an,in,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literals,param,literals,the,literal,values,to,check,the,column,against;public,in,string,column,name,predicate,leaf,type,literal,type,serializable,literals,super,column,name,literal,type,this,literals,literals
OrcRowInputFormat -> In -> public In(String columnName, PredicateLeaf.Type literalType, Serializable... literals);1529010948;Creates an IN predicate.__@param columnName The column to check._@param literalType The type of the literals._@param literals The literal values to check the column against.;public In(String columnName, PredicateLeaf.Type literalType, Serializable... literals) {_			super(columnName, literalType)__			this.literals = literals__		};creates,an,in,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literals,param,literals,the,literal,values,to,check,the,column,against;public,in,string,column,name,predicate,leaf,type,literal,type,serializable,literals,super,column,name,literal,type,this,literals,literals
OrcRowInputFormat -> IsNull -> public IsNull(String columnName, PredicateLeaf.Type literalType);1511388690;Creates an IS_NULL predicate.__@param columnName The column to check for null._@param literalType The type of the column to check for null.;public IsNull(String columnName, PredicateLeaf.Type literalType) {_			super(columnName, literalType)__		};creates,an,predicate,param,column,name,the,column,to,check,for,null,param,literal,type,the,type,of,the,column,to,check,for,null;public,is,null,string,column,name,predicate,leaf,type,literal,type,super,column,name,literal,type
OrcRowInputFormat -> IsNull -> public IsNull(String columnName, PredicateLeaf.Type literalType);1517406263;Creates an IS_NULL predicate.__@param columnName The column to check for null._@param literalType The type of the column to check for null.;public IsNull(String columnName, PredicateLeaf.Type literalType) {_			super(columnName, literalType)__		};creates,an,predicate,param,column,name,the,column,to,check,for,null,param,literal,type,the,type,of,the,column,to,check,for,null;public,is,null,string,column,name,predicate,leaf,type,literal,type,super,column,name,literal,type
OrcRowInputFormat -> IsNull -> public IsNull(String columnName, PredicateLeaf.Type literalType);1517847628;Creates an IS_NULL predicate.__@param columnName The column to check for null._@param literalType The type of the column to check for null.;public IsNull(String columnName, PredicateLeaf.Type literalType) {_			super(columnName, literalType)__		};creates,an,predicate,param,column,name,the,column,to,check,for,null,param,literal,type,the,type,of,the,column,to,check,for,null;public,is,null,string,column,name,predicate,leaf,type,literal,type,super,column,name,literal,type
OrcRowInputFormat -> IsNull -> public IsNull(String columnName, PredicateLeaf.Type literalType);1518772855;Creates an IS_NULL predicate.__@param columnName The column to check for null._@param literalType The type of the column to check for null.;public IsNull(String columnName, PredicateLeaf.Type literalType) {_			super(columnName, literalType)__		};creates,an,predicate,param,column,name,the,column,to,check,for,null,param,literal,type,the,type,of,the,column,to,check,for,null;public,is,null,string,column,name,predicate,leaf,type,literal,type,super,column,name,literal,type
OrcRowInputFormat -> IsNull -> public IsNull(String columnName, PredicateLeaf.Type literalType);1529010948;Creates an IS_NULL predicate.__@param columnName The column to check for null._@param literalType The type of the column to check for null.;public IsNull(String columnName, PredicateLeaf.Type literalType) {_			super(columnName, literalType)__		};creates,an,predicate,param,column,name,the,column,to,check,for,null,param,literal,type,the,type,of,the,column,to,check,for,null;public,is,null,string,column,name,predicate,leaf,type,literal,type,super,column,name,literal,type
OrcRowInputFormat -> private boolean[] computeProjectionMask();1511388690;Computes the ORC projection mask of the fields to include from the selected fields.rowOrcInputFormat.nextRecord(null).__@return The ORC projection mask.;private boolean[] computeProjectionMask() {_		_		boolean[] projectionMask = new boolean[schema.getMaximumId() + 1]__		_		for (int inIdx : selectedFields) {_			_			TypeDescription fieldSchema = schema.getChildren().get(inIdx)__			for (int i = fieldSchema.getId()_ i <= fieldSchema.getMaximumId()_ i++) {_				projectionMask[i] = true__			}_		}_		return projectionMask__	};computes,the,orc,projection,mask,of,the,fields,to,include,from,the,selected,fields,row,orc,input,format,next,record,null,return,the,orc,projection,mask;private,boolean,compute,projection,mask,boolean,projection,mask,new,boolean,schema,get,maximum,id,1,for,int,in,idx,selected,fields,type,description,field,schema,schema,get,children,get,in,idx,for,int,i,field,schema,get,id,i,field,schema,get,maximum,id,i,projection,mask,i,true,return,projection,mask
OrcRowInputFormat -> private boolean[] computeProjectionMask();1517406263;Computes the ORC projection mask of the fields to include from the selected fields.rowOrcInputFormat.nextRecord(null).__@return The ORC projection mask.;private boolean[] computeProjectionMask() {_		_		boolean[] projectionMask = new boolean[schema.getMaximumId() + 1]__		_		for (int inIdx : selectedFields) {_			_			TypeDescription fieldSchema = schema.getChildren().get(inIdx)__			for (int i = fieldSchema.getId()_ i <= fieldSchema.getMaximumId()_ i++) {_				projectionMask[i] = true__			}_		}_		return projectionMask__	};computes,the,orc,projection,mask,of,the,fields,to,include,from,the,selected,fields,row,orc,input,format,next,record,null,return,the,orc,projection,mask;private,boolean,compute,projection,mask,boolean,projection,mask,new,boolean,schema,get,maximum,id,1,for,int,in,idx,selected,fields,type,description,field,schema,schema,get,children,get,in,idx,for,int,i,field,schema,get,id,i,field,schema,get,maximum,id,i,projection,mask,i,true,return,projection,mask
OrcRowInputFormat -> private boolean[] computeProjectionMask();1517847628;Computes the ORC projection mask of the fields to include from the selected fields.rowOrcInputFormat.nextRecord(null).__@return The ORC projection mask.;private boolean[] computeProjectionMask() {_		_		boolean[] projectionMask = new boolean[schema.getMaximumId() + 1]__		_		for (int inIdx : selectedFields) {_			_			TypeDescription fieldSchema = schema.getChildren().get(inIdx)__			for (int i = fieldSchema.getId()_ i <= fieldSchema.getMaximumId()_ i++) {_				projectionMask[i] = true__			}_		}_		return projectionMask__	};computes,the,orc,projection,mask,of,the,fields,to,include,from,the,selected,fields,row,orc,input,format,next,record,null,return,the,orc,projection,mask;private,boolean,compute,projection,mask,boolean,projection,mask,new,boolean,schema,get,maximum,id,1,for,int,in,idx,selected,fields,type,description,field,schema,schema,get,children,get,in,idx,for,int,i,field,schema,get,id,i,field,schema,get,maximum,id,i,projection,mask,i,true,return,projection,mask
OrcRowInputFormat -> private boolean[] computeProjectionMask();1518772855;Computes the ORC projection mask of the fields to include from the selected fields.rowOrcInputFormat.nextRecord(null).__@return The ORC projection mask.;private boolean[] computeProjectionMask() {_		_		boolean[] projectionMask = new boolean[schema.getMaximumId() + 1]__		_		for (int inIdx : selectedFields) {_			_			TypeDescription fieldSchema = schema.getChildren().get(inIdx)__			for (int i = fieldSchema.getId()_ i <= fieldSchema.getMaximumId()_ i++) {_				projectionMask[i] = true__			}_		}_		return projectionMask__	};computes,the,orc,projection,mask,of,the,fields,to,include,from,the,selected,fields,row,orc,input,format,next,record,null,return,the,orc,projection,mask;private,boolean,compute,projection,mask,boolean,projection,mask,new,boolean,schema,get,maximum,id,1,for,int,in,idx,selected,fields,type,description,field,schema,schema,get,children,get,in,idx,for,int,i,field,schema,get,id,i,field,schema,get,maximum,id,i,projection,mask,i,true,return,projection,mask
OrcRowInputFormat -> private boolean[] computeProjectionMask();1529010948;Computes the ORC projection mask of the fields to include from the selected fields.rowOrcInputFormat.nextRecord(null).__@return The ORC projection mask.;private boolean[] computeProjectionMask() {_		_		boolean[] projectionMask = new boolean[schema.getMaximumId() + 1]__		_		for (int inIdx : selectedFields) {_			_			TypeDescription fieldSchema = schema.getChildren().get(inIdx)__			for (int i = fieldSchema.getId()_ i <= fieldSchema.getMaximumId()_ i++) {_				projectionMask[i] = true__			}_		}_		return projectionMask__	};computes,the,orc,projection,mask,of,the,fields,to,include,from,the,selected,fields,row,orc,input,format,next,record,null,return,the,orc,projection,mask;private,boolean,compute,projection,mask,boolean,projection,mask,new,boolean,schema,get,maximum,id,1,for,int,in,idx,selected,fields,type,description,field,schema,schema,get,children,get,in,idx,for,int,i,field,schema,get,id,i,field,schema,get,maximum,id,i,projection,mask,i,true,return,projection,mask
OrcRowInputFormat -> public OrcRowInputFormat(String path, TypeDescription orcSchema, Configuration orcConfig, int batchSize);1511388690;Creates an OrcRowInputFormat.__@param path The path to read ORC files from._@param orcSchema The schema of the ORC files as ORC TypeDescription._@param orcConfig The configuration to read the ORC files with._@param batchSize The number of Row objects to read in a batch.;public OrcRowInputFormat(String path, TypeDescription orcSchema, Configuration orcConfig, int batchSize) {_		super(new Path(path))___		_		this.schema = orcSchema__		this.rowType = (RowTypeInfo) OrcUtils.schemaToTypeInfo(schema)__		this.conf = orcConfig__		this.batchSize = batchSize___		_		this.selectedFields = new int[this.schema.getChildren().size()]__		for (int i = 0_ i < selectedFields.length_ i++) {_			this.selectedFields[i] = i__		}_	};creates,an,orc,row,input,format,param,path,the,path,to,read,orc,files,from,param,orc,schema,the,schema,of,the,orc,files,as,orc,type,description,param,orc,config,the,configuration,to,read,the,orc,files,with,param,batch,size,the,number,of,row,objects,to,read,in,a,batch;public,orc,row,input,format,string,path,type,description,orc,schema,configuration,orc,config,int,batch,size,super,new,path,path,this,schema,orc,schema,this,row,type,row,type,info,orc,utils,schema,to,type,info,schema,this,conf,orc,config,this,batch,size,batch,size,this,selected,fields,new,int,this,schema,get,children,size,for,int,i,0,i,selected,fields,length,i,this,selected,fields,i,i
OrcRowInputFormat -> public OrcRowInputFormat(String path, TypeDescription orcSchema, Configuration orcConfig, int batchSize);1517406263;Creates an OrcRowInputFormat.__@param path The path to read ORC files from._@param orcSchema The schema of the ORC files as ORC TypeDescription._@param orcConfig The configuration to read the ORC files with._@param batchSize The number of Row objects to read in a batch.;public OrcRowInputFormat(String path, TypeDescription orcSchema, Configuration orcConfig, int batchSize) {_		super(new Path(path))___		_		this.schema = orcSchema__		this.rowType = (RowTypeInfo) OrcBatchReader.schemaToTypeInfo(schema)__		this.conf = orcConfig__		this.batchSize = batchSize___		_		this.selectedFields = new int[this.schema.getChildren().size()]__		for (int i = 0_ i < selectedFields.length_ i++) {_			this.selectedFields[i] = i__		}_	};creates,an,orc,row,input,format,param,path,the,path,to,read,orc,files,from,param,orc,schema,the,schema,of,the,orc,files,as,orc,type,description,param,orc,config,the,configuration,to,read,the,orc,files,with,param,batch,size,the,number,of,row,objects,to,read,in,a,batch;public,orc,row,input,format,string,path,type,description,orc,schema,configuration,orc,config,int,batch,size,super,new,path,path,this,schema,orc,schema,this,row,type,row,type,info,orc,batch,reader,schema,to,type,info,schema,this,conf,orc,config,this,batch,size,batch,size,this,selected,fields,new,int,this,schema,get,children,size,for,int,i,0,i,selected,fields,length,i,this,selected,fields,i,i
OrcRowInputFormat -> public OrcRowInputFormat(String path, TypeDescription orcSchema, Configuration orcConfig, int batchSize);1517847628;Creates an OrcRowInputFormat.__@param path The path to read ORC files from._@param orcSchema The schema of the ORC files as ORC TypeDescription._@param orcConfig The configuration to read the ORC files with._@param batchSize The number of Row objects to read in a batch.;public OrcRowInputFormat(String path, TypeDescription orcSchema, Configuration orcConfig, int batchSize) {_		super(new Path(path))___		_		this.schema = orcSchema__		this.rowType = (RowTypeInfo) OrcBatchReader.schemaToTypeInfo(schema)__		this.conf = orcConfig__		this.batchSize = batchSize___		_		this.selectedFields = new int[this.schema.getChildren().size()]__		for (int i = 0_ i < selectedFields.length_ i++) {_			this.selectedFields[i] = i__		}_	};creates,an,orc,row,input,format,param,path,the,path,to,read,orc,files,from,param,orc,schema,the,schema,of,the,orc,files,as,orc,type,description,param,orc,config,the,configuration,to,read,the,orc,files,with,param,batch,size,the,number,of,row,objects,to,read,in,a,batch;public,orc,row,input,format,string,path,type,description,orc,schema,configuration,orc,config,int,batch,size,super,new,path,path,this,schema,orc,schema,this,row,type,row,type,info,orc,batch,reader,schema,to,type,info,schema,this,conf,orc,config,this,batch,size,batch,size,this,selected,fields,new,int,this,schema,get,children,size,for,int,i,0,i,selected,fields,length,i,this,selected,fields,i,i
OrcRowInputFormat -> public OrcRowInputFormat(String path, TypeDescription orcSchema, Configuration orcConfig, int batchSize);1518772855;Creates an OrcRowInputFormat.__@param path The path to read ORC files from._@param orcSchema The schema of the ORC files as ORC TypeDescription._@param orcConfig The configuration to read the ORC files with._@param batchSize The number of Row objects to read in a batch.;public OrcRowInputFormat(String path, TypeDescription orcSchema, Configuration orcConfig, int batchSize) {_		super(new Path(path))___		_		this.schema = orcSchema__		this.rowType = (RowTypeInfo) OrcBatchReader.schemaToTypeInfo(schema)__		this.conf = orcConfig__		this.batchSize = batchSize___		_		this.selectedFields = new int[this.schema.getChildren().size()]__		for (int i = 0_ i < selectedFields.length_ i++) {_			this.selectedFields[i] = i__		}_	};creates,an,orc,row,input,format,param,path,the,path,to,read,orc,files,from,param,orc,schema,the,schema,of,the,orc,files,as,orc,type,description,param,orc,config,the,configuration,to,read,the,orc,files,with,param,batch,size,the,number,of,row,objects,to,read,in,a,batch;public,orc,row,input,format,string,path,type,description,orc,schema,configuration,orc,config,int,batch,size,super,new,path,path,this,schema,orc,schema,this,row,type,row,type,info,orc,batch,reader,schema,to,type,info,schema,this,conf,orc,config,this,batch,size,batch,size,this,selected,fields,new,int,this,schema,get,children,size,for,int,i,0,i,selected,fields,length,i,this,selected,fields,i,i
OrcRowInputFormat -> public OrcRowInputFormat(String path, TypeDescription orcSchema, Configuration orcConfig, int batchSize);1529010948;Creates an OrcRowInputFormat.__@param path The path to read ORC files from._@param orcSchema The schema of the ORC files as ORC TypeDescription._@param orcConfig The configuration to read the ORC files with._@param batchSize The number of Row objects to read in a batch.;public OrcRowInputFormat(String path, TypeDescription orcSchema, Configuration orcConfig, int batchSize) {_		super(new Path(path))___		_		this.schema = orcSchema__		this.rowType = (RowTypeInfo) OrcBatchReader.schemaToTypeInfo(schema)__		this.conf = orcConfig__		this.batchSize = batchSize___		_		this.selectedFields = new int[this.schema.getChildren().size()]__		for (int i = 0_ i < selectedFields.length_ i++) {_			this.selectedFields[i] = i__		}_	};creates,an,orc,row,input,format,param,path,the,path,to,read,orc,files,from,param,orc,schema,the,schema,of,the,orc,files,as,orc,type,description,param,orc,config,the,configuration,to,read,the,orc,files,with,param,batch,size,the,number,of,row,objects,to,read,in,a,batch;public,orc,row,input,format,string,path,type,description,orc,schema,configuration,orc,config,int,batch,size,super,new,path,path,this,schema,orc,schema,this,row,type,row,type,info,orc,batch,reader,schema,to,type,info,schema,this,conf,orc,config,this,batch,size,batch,size,this,selected,fields,new,int,this,schema,get,children,size,for,int,i,0,i,selected,fields,length,i,this,selected,fields,i,i
OrcRowInputFormat -> public void addPredicate(Predicate predicate);1511388690;Adds a filter predicate to reduce the number of rows to be returned by the input format._Multiple conjunctive predicates can be added by calling this method multiple times.__<p>Note: Predicates can significantly reduce the amount of data that is read._However, the OrcRowInputFormat does not guarantee that all returned rows qualify the_predicates. Moreover, predicates are only applied if the referenced field is among the_selected fields.__@param predicate The filter predicate.;public void addPredicate(Predicate predicate) {_		_		validatePredicate(predicate)__		_		this.conjunctPredicates.add(predicate)__	};adds,a,filter,predicate,to,reduce,the,number,of,rows,to,be,returned,by,the,input,format,multiple,conjunctive,predicates,can,be,added,by,calling,this,method,multiple,times,p,note,predicates,can,significantly,reduce,the,amount,of,data,that,is,read,however,the,orc,row,input,format,does,not,guarantee,that,all,returned,rows,qualify,the,predicates,moreover,predicates,are,only,applied,if,the,referenced,field,is,among,the,selected,fields,param,predicate,the,filter,predicate;public,void,add,predicate,predicate,predicate,validate,predicate,predicate,this,conjunct,predicates,add,predicate
OrcRowInputFormat -> public void addPredicate(Predicate predicate);1517406263;Adds a filter predicate to reduce the number of rows to be returned by the input format._Multiple conjunctive predicates can be added by calling this method multiple times.__<p>Note: Predicates can significantly reduce the amount of data that is read._However, the OrcRowInputFormat does not guarantee that all returned rows qualify the_predicates. Moreover, predicates are only applied if the referenced field is among the_selected fields.__@param predicate The filter predicate.;public void addPredicate(Predicate predicate) {_		_		validatePredicate(predicate)__		_		this.conjunctPredicates.add(predicate)__	};adds,a,filter,predicate,to,reduce,the,number,of,rows,to,be,returned,by,the,input,format,multiple,conjunctive,predicates,can,be,added,by,calling,this,method,multiple,times,p,note,predicates,can,significantly,reduce,the,amount,of,data,that,is,read,however,the,orc,row,input,format,does,not,guarantee,that,all,returned,rows,qualify,the,predicates,moreover,predicates,are,only,applied,if,the,referenced,field,is,among,the,selected,fields,param,predicate,the,filter,predicate;public,void,add,predicate,predicate,predicate,validate,predicate,predicate,this,conjunct,predicates,add,predicate
OrcRowInputFormat -> public void addPredicate(Predicate predicate);1517847628;Adds a filter predicate to reduce the number of rows to be returned by the input format._Multiple conjunctive predicates can be added by calling this method multiple times.__<p>Note: Predicates can significantly reduce the amount of data that is read._However, the OrcRowInputFormat does not guarantee that all returned rows qualify the_predicates. Moreover, predicates are only applied if the referenced field is among the_selected fields.__@param predicate The filter predicate.;public void addPredicate(Predicate predicate) {_		_		validatePredicate(predicate)__		_		this.conjunctPredicates.add(predicate)__	};adds,a,filter,predicate,to,reduce,the,number,of,rows,to,be,returned,by,the,input,format,multiple,conjunctive,predicates,can,be,added,by,calling,this,method,multiple,times,p,note,predicates,can,significantly,reduce,the,amount,of,data,that,is,read,however,the,orc,row,input,format,does,not,guarantee,that,all,returned,rows,qualify,the,predicates,moreover,predicates,are,only,applied,if,the,referenced,field,is,among,the,selected,fields,param,predicate,the,filter,predicate;public,void,add,predicate,predicate,predicate,validate,predicate,predicate,this,conjunct,predicates,add,predicate
OrcRowInputFormat -> public void addPredicate(Predicate predicate);1518772855;Adds a filter predicate to reduce the number of rows to be returned by the input format._Multiple conjunctive predicates can be added by calling this method multiple times.__<p>Note: Predicates can significantly reduce the amount of data that is read._However, the OrcRowInputFormat does not guarantee that all returned rows qualify the_predicates. Moreover, predicates are only applied if the referenced field is among the_selected fields.__@param predicate The filter predicate.;public void addPredicate(Predicate predicate) {_		_		validatePredicate(predicate)__		_		this.conjunctPredicates.add(predicate)__	};adds,a,filter,predicate,to,reduce,the,number,of,rows,to,be,returned,by,the,input,format,multiple,conjunctive,predicates,can,be,added,by,calling,this,method,multiple,times,p,note,predicates,can,significantly,reduce,the,amount,of,data,that,is,read,however,the,orc,row,input,format,does,not,guarantee,that,all,returned,rows,qualify,the,predicates,moreover,predicates,are,only,applied,if,the,referenced,field,is,among,the,selected,fields,param,predicate,the,filter,predicate;public,void,add,predicate,predicate,predicate,validate,predicate,predicate,this,conjunct,predicates,add,predicate
OrcRowInputFormat -> public void addPredicate(Predicate predicate);1529010948;Adds a filter predicate to reduce the number of rows to be returned by the input format._Multiple conjunctive predicates can be added by calling this method multiple times.__<p>Note: Predicates can significantly reduce the amount of data that is read._However, the OrcRowInputFormat does not guarantee that all returned rows qualify the_predicates. Moreover, predicates are only applied if the referenced field is among the_selected fields.__@param predicate The filter predicate.;public void addPredicate(Predicate predicate) {_		_		validatePredicate(predicate)__		_		this.conjunctPredicates.add(predicate)__	};adds,a,filter,predicate,to,reduce,the,number,of,rows,to,be,returned,by,the,input,format,multiple,conjunctive,predicates,can,be,added,by,calling,this,method,multiple,times,p,note,predicates,can,significantly,reduce,the,amount,of,data,that,is,read,however,the,orc,row,input,format,does,not,guarantee,that,all,returned,rows,qualify,the,predicates,moreover,predicates,are,only,applied,if,the,referenced,field,is,among,the,selected,fields,param,predicate,the,filter,predicate;public,void,add,predicate,predicate,predicate,validate,predicate,predicate,this,conjunct,predicates,add,predicate
OrcRowInputFormat -> Equals -> public Equals(String columnName, PredicateLeaf.Type literalType, Serializable literal);1511388690;Creates an EQUALS predicate.__@param columnName The column to check._@param literalType The type of the literal._@param literal The literal value to check the column against.;public Equals(String columnName, PredicateLeaf.Type literalType, Serializable literal) {_			super(columnName, literalType, literal)__		};creates,an,equals,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literal,param,literal,the,literal,value,to,check,the,column,against;public,equals,string,column,name,predicate,leaf,type,literal,type,serializable,literal,super,column,name,literal,type,literal
OrcRowInputFormat -> Equals -> public Equals(String columnName, PredicateLeaf.Type literalType, Serializable literal);1517406263;Creates an EQUALS predicate.__@param columnName The column to check._@param literalType The type of the literal._@param literal The literal value to check the column against.;public Equals(String columnName, PredicateLeaf.Type literalType, Serializable literal) {_			super(columnName, literalType, literal)__		};creates,an,equals,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literal,param,literal,the,literal,value,to,check,the,column,against;public,equals,string,column,name,predicate,leaf,type,literal,type,serializable,literal,super,column,name,literal,type,literal
OrcRowInputFormat -> Equals -> public Equals(String columnName, PredicateLeaf.Type literalType, Serializable literal);1517847628;Creates an EQUALS predicate.__@param columnName The column to check._@param literalType The type of the literal._@param literal The literal value to check the column against.;public Equals(String columnName, PredicateLeaf.Type literalType, Serializable literal) {_			super(columnName, literalType, literal)__		};creates,an,equals,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literal,param,literal,the,literal,value,to,check,the,column,against;public,equals,string,column,name,predicate,leaf,type,literal,type,serializable,literal,super,column,name,literal,type,literal
OrcRowInputFormat -> Equals -> public Equals(String columnName, PredicateLeaf.Type literalType, Serializable literal);1518772855;Creates an EQUALS predicate.__@param columnName The column to check._@param literalType The type of the literal._@param literal The literal value to check the column against.;public Equals(String columnName, PredicateLeaf.Type literalType, Serializable literal) {_			super(columnName, literalType, literal)__		};creates,an,equals,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literal,param,literal,the,literal,value,to,check,the,column,against;public,equals,string,column,name,predicate,leaf,type,literal,type,serializable,literal,super,column,name,literal,type,literal
OrcRowInputFormat -> Equals -> public Equals(String columnName, PredicateLeaf.Type literalType, Serializable literal);1529010948;Creates an EQUALS predicate.__@param columnName The column to check._@param literalType The type of the literal._@param literal The literal value to check the column against.;public Equals(String columnName, PredicateLeaf.Type literalType, Serializable literal) {_			super(columnName, literalType, literal)__		};creates,an,equals,predicate,param,column,name,the,column,to,check,param,literal,type,the,type,of,the,literal,param,literal,the,literal,value,to,check,the,column,against;public,equals,string,column,name,predicate,leaf,type,literal,type,serializable,literal,super,column,name,literal,type,literal
