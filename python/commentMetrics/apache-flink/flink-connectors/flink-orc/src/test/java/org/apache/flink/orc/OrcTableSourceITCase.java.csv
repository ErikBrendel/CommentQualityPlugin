commented;modifiers;parameterAmount;loc;comment;code
false;public;0;34;;@Test public void testFullScan() throws Exception {     ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment().     BatchTableEnvironment tEnv = BatchTableEnvironment.create(env).     OrcTableSource orc = OrcTableSource.builder().path(getPath(TEST_FILE_FLAT)).forOrcSchema(TEST_SCHEMA_FLAT).build().     tEnv.registerTableSource("OrcTable", orc).     String query = "SELECT COUNT(*), " + "MIN(_col0), MAX(_col0), " + "MIN(_col1), MAX(_col1), " + "MIN(_col2), MAX(_col2), " + "MIN(_col3), MAX(_col3), " + "MIN(_col4), MAX(_col4), " + "MIN(_col5), MAX(_col5), " + "MIN(_col6), MAX(_col6), " + "MIN(_col7), MAX(_col7), " + "MIN(_col8), MAX(_col8) " + "FROM OrcTable".     Table t = tEnv.sqlQuery(query).     DataSet<Row> dataSet = tEnv.toDataSet(t, Row.class).     List<Row> result = dataSet.collect().     assertEquals(1, result.size()).     assertEquals("1920800,1,1920800,F,M,D,W,2 yr Degree,Unknown,500,10000,Good,Unknown,0,6,0,6,0,6", result.get(0).toString()). }
false;public;0;31;;@Test public void testScanWithProjectionAndFilter() throws Exception {     ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment().     BatchTableEnvironment tEnv = BatchTableEnvironment.create(env).     OrcTableSource orc = OrcTableSource.builder().path(getPath(TEST_FILE_FLAT)).forOrcSchema(TEST_SCHEMA_FLAT).build().     tEnv.registerTableSource("OrcTable", orc).     String query = "SELECT " + "MIN(_col4), MAX(_col4), " + "MIN(_col3), MAX(_col3), " + "MIN(_col0), MAX(_col0), " + "MIN(_col2), MAX(_col2), " + "COUNT(*) " + "FROM OrcTable " + "WHERE (_col0 BETWEEN 4975 and 5024 OR _col0 BETWEEN 9975 AND 10024) AND _col1 = 'F'".     Table t = tEnv.sqlQuery(query).     DataSet<Row> dataSet = tEnv.toDataSet(t, Row.class).     List<Row> result = dataSet.collect().     assertEquals(1, result.size()).     assertEquals("1500,6000,2 yr Degree,Unknown,4976,10024,D,W,50", result.get(0).toString()). }
false;private;1;3;;private String getPath(String fileName) {     return getClass().getClassLoader().getResource(fileName).getPath(). }
