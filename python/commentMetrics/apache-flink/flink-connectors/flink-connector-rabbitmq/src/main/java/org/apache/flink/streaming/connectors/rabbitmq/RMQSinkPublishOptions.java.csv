commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Compute the message's routing key from the data.  * @param a The data used by the sink  * @return The routing key of the message  * null will raise a NullPointerException  */ ;/**  * Compute the message's routing key from the data.  * @param a The data used by the sink  * @return The routing key of the message  * null will raise a NullPointerException  */ String computeRoutingKey(IN a).
true;;1;1;/**  * Compute the message's properties from the data.  * @param a The data used by the sink  * @return The message's properties (can be null)  */ ;/**  * Compute the message's properties from the data.  * @param a The data used by the sink  * @return The message's properties (can be null)  */ BasicProperties computeProperties(IN a).
true;;1;1;/**  * Compute the exchange from the data.  * @param a The data used by the sink  * @return The exchange to publish the message to  * null will raise a NullPointerException  */ ;/**  * Compute the exchange from the data.  * @param a The data used by the sink  * @return The exchange to publish the message to  * null will raise a NullPointerException  */ String computeExchange(IN a).
true;default;1;3;/**  * Compute the mandatory flag passed to method {@link com.rabbitmq.client.Channel#basicPublish(String, String, boolean, boolean, BasicProperties, byte[])}.  * A {@link SerializableReturnListener} is mandatory if this flag can be true.  * @param a The data used by the sink  * @return The mandatory flag  */ ;/**  * Compute the mandatory flag passed to method {@link com.rabbitmq.client.Channel#basicPublish(String, String, boolean, boolean, BasicProperties, byte[])}.  * A {@link SerializableReturnListener} is mandatory if this flag can be true.  * @param a The data used by the sink  * @return The mandatory flag  */ default boolean computeMandatory(IN a) {     return false. }
true;default;1;3;/**  * Compute the immediate flag passed to method {@link com.rabbitmq.client.Channel#basicPublish(String, String, boolean, boolean, BasicProperties, byte[])}.  * A {@link SerializableReturnListener} is mandatory if this flag can be true.  * @param a The data used by the sink  * @return The mandatory flag  */ ;/**  * Compute the immediate flag passed to method {@link com.rabbitmq.client.Channel#basicPublish(String, String, boolean, boolean, BasicProperties, byte[])}.  * A {@link SerializableReturnListener} is mandatory if this flag can be true.  * @param a The data used by the sink  * @return The mandatory flag  */ default boolean computeImmediate(IN a) {     return false. }
