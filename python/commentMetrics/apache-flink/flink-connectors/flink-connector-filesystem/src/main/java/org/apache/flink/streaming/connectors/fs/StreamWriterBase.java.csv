# id;timestamp;commentText;codeText;commentWords;codeWords
StreamWriterBase -> protected FSDataOutputStream getStream();1480685315;Returns the current output stream, if the stream is open.;protected FSDataOutputStream getStream() {_		if (outStream == null) {_			throw new IllegalStateException("Output stream has not been opened")__		}_		return outStream__	};returns,the,current,output,stream,if,the,stream,is,open;protected,fsdata,output,stream,get,stream,if,out,stream,null,throw,new,illegal,state,exception,output,stream,has,not,been,opened,return,out,stream
StreamWriterBase -> protected FSDataOutputStream getStream();1493811970;Returns the current output stream, if the stream is open.;protected FSDataOutputStream getStream() {_		if (outStream == null) {_			throw new IllegalStateException("Output stream has not been opened")__		}_		return outStream__	};returns,the,current,output,stream,if,the,stream,is,open;protected,fsdata,output,stream,get,stream,if,out,stream,null,throw,new,illegal,state,exception,output,stream,has,not,been,opened,return,out,stream
StreamWriterBase -> protected FSDataOutputStream getStream();1495923089;Returns the current output stream, if the stream is open.;protected FSDataOutputStream getStream() {_		if (outStream == null) {_			throw new IllegalStateException("Output stream has not been opened")__		}_		return outStream__	};returns,the,current,output,stream,if,the,stream,is,open;protected,fsdata,output,stream,get,stream,if,out,stream,null,throw,new,illegal,state,exception,output,stream,has,not,been,opened,return,out,stream
StreamWriterBase -> protected FSDataOutputStream getStream();1507281416;Returns the current output stream, if the stream is open.;protected FSDataOutputStream getStream() {_		if (outStream == null) {_			throw new IllegalStateException("Output stream has not been opened")__		}_		return outStream__	};returns,the,current,output,stream,if,the,stream,is,open;protected,fsdata,output,stream,get,stream,if,out,stream,null,throw,new,illegal,state,exception,output,stream,has,not,been,opened,return,out,stream
StreamWriterBase -> protected FSDataOutputStream getStream();1508854428;Returns the current output stream, if the stream is open.;protected FSDataOutputStream getStream() {_		if (outStream == null) {_			throw new IllegalStateException("Output stream has not been opened")__		}_		return outStream__	};returns,the,current,output,stream,if,the,stream,is,open;protected,fsdata,output,stream,get,stream,if,out,stream,null,throw,new,illegal,state,exception,output,stream,has,not,been,opened,return,out,stream
StreamWriterBase -> protected FSDataOutputStream getStream();1530796781;Returns the current output stream, if the stream is open.;protected FSDataOutputStream getStream() {_		if (outStream == null) {_			throw new IllegalStateException("Output stream has not been opened")__		}_		return outStream__	};returns,the,current,output,stream,if,the,stream,is,open;protected,fsdata,output,stream,get,stream,if,out,stream,null,throw,new,illegal,state,exception,output,stream,has,not,been,opened,return,out,stream
StreamWriterBase -> public void setSyncOnFlush(boolean syncOnFlush);1508854428;Controls whether to sync {@link FSDataOutputStream} on flush.;public void setSyncOnFlush(boolean syncOnFlush) {_		this.syncOnFlush = syncOnFlush__	};controls,whether,to,sync,link,fsdata,output,stream,on,flush;public,void,set,sync,on,flush,boolean,sync,on,flush,this,sync,on,flush,sync,on,flush
StreamWriterBase -> public void setSyncOnFlush(boolean syncOnFlush);1530796781;Controls whether to sync {@link FSDataOutputStream} on flush.;public void setSyncOnFlush(boolean syncOnFlush) {_		this.syncOnFlush = syncOnFlush__	};controls,whether,to,sync,link,fsdata,output,stream,on,flush;public,void,set,sync,on,flush,boolean,sync,on,flush,this,sync,on,flush,sync,on,flush
StreamWriterBase -> protected void hflushOrSync(FSDataOutputStream os) throws IOException;1480685315;If hflush is available in this version of HDFS, then this method calls_hflush, else it calls sync._@param os - The stream to flush/sync_@throws java.io.IOException__<p>_Note: This code comes from Flume;protected void hflushOrSync(FSDataOutputStream os) throws IOException {_		try {_			_			_			this.refHflushOrSync.invoke(os)__		} catch (InvocationTargetException e) {_			String msg = "Error while trying to hflushOrSync!"__			LOG.error(msg + " " + e.getCause())__			Throwable cause = e.getCause()__			if(cause != null && cause instanceof IOException) {_				throw (IOException)cause__			}_			throw new RuntimeException(msg, e)__		} catch (Exception e) {_			String msg = "Error while trying to hflushOrSync!"__			LOG.error(msg + " " + e)__			throw new RuntimeException(msg, e)__		}_	};if,hflush,is,available,in,this,version,of,hdfs,then,this,method,calls,hflush,else,it,calls,sync,param,os,the,stream,to,flush,sync,throws,java,io,ioexception,p,note,this,code,comes,from,flume;protected,void,hflush,or,sync,fsdata,output,stream,os,throws,ioexception,try,this,ref,hflush,or,sync,invoke,os,catch,invocation,target,exception,e,string,msg,error,while,trying,to,hflush,or,sync,log,error,msg,e,get,cause,throwable,cause,e,get,cause,if,cause,null,cause,instanceof,ioexception,throw,ioexception,cause,throw,new,runtime,exception,msg,e,catch,exception,e,string,msg,error,while,trying,to,hflush,or,sync,log,error,msg,e,throw,new,runtime,exception,msg,e
StreamWriterBase -> protected void hflushOrSync(FSDataOutputStream os) throws IOException;1493811970;If hflush is available in this version of HDFS, then this method calls_hflush, else it calls sync._@param os - The stream to flush/sync_@throws java.io.IOException__<p>_Note: This code comes from Flume;protected void hflushOrSync(FSDataOutputStream os) throws IOException {_		try {_			_			_			this.refHflushOrSync.invoke(os)___			if (os instanceof HdfsDataOutputStream) {_				((HdfsDataOutputStream) os).hsync(EnumSet.of(HdfsDataOutputStream.SyncFlag.UPDATE_LENGTH))__			}_		} catch (InvocationTargetException e) {_			String msg = "Error while trying to hflushOrSync!"__			LOG.error(msg + " " + e.getCause())__			Throwable cause = e.getCause()__			if(cause != null && cause instanceof IOException) {_				throw (IOException)cause__			}_			throw new RuntimeException(msg, e)__		} catch (Exception e) {_			String msg = "Error while trying to hflushOrSync!"__			LOG.error(msg + " " + e)__			throw new RuntimeException(msg, e)__		}_	};if,hflush,is,available,in,this,version,of,hdfs,then,this,method,calls,hflush,else,it,calls,sync,param,os,the,stream,to,flush,sync,throws,java,io,ioexception,p,note,this,code,comes,from,flume;protected,void,hflush,or,sync,fsdata,output,stream,os,throws,ioexception,try,this,ref,hflush,or,sync,invoke,os,if,os,instanceof,hdfs,data,output,stream,hdfs,data,output,stream,os,hsync,enum,set,of,hdfs,data,output,stream,sync,flag,catch,invocation,target,exception,e,string,msg,error,while,trying,to,hflush,or,sync,log,error,msg,e,get,cause,throwable,cause,e,get,cause,if,cause,null,cause,instanceof,ioexception,throw,ioexception,cause,throw,new,runtime,exception,msg,e,catch,exception,e,string,msg,error,while,trying,to,hflush,or,sync,log,error,msg,e,throw,new,runtime,exception,msg,e
StreamWriterBase -> protected void hflushOrSync(FSDataOutputStream os) throws IOException;1495923089;If hflush is available in this version of HDFS, then this method calls_hflush, else it calls sync.__<p>Note: This code comes from Flume__@param os - The stream to flush/sync_@throws java.io.IOException;protected void hflushOrSync(FSDataOutputStream os) throws IOException {_		try {_			_			_			this.refHflushOrSync.invoke(os)___			if (os instanceof HdfsDataOutputStream) {_				((HdfsDataOutputStream) os).hsync(EnumSet.of(HdfsDataOutputStream.SyncFlag.UPDATE_LENGTH))__			}_		} catch (InvocationTargetException e) {_			String msg = "Error while trying to hflushOrSync!"__			LOG.error(msg + " " + e.getCause())__			Throwable cause = e.getCause()__			if (cause != null && cause instanceof IOException) {_				throw (IOException) cause__			}_			throw new RuntimeException(msg, e)__		} catch (Exception e) {_			String msg = "Error while trying to hflushOrSync!"__			LOG.error(msg + " " + e)__			throw new RuntimeException(msg, e)__		}_	};if,hflush,is,available,in,this,version,of,hdfs,then,this,method,calls,hflush,else,it,calls,sync,p,note,this,code,comes,from,flume,param,os,the,stream,to,flush,sync,throws,java,io,ioexception;protected,void,hflush,or,sync,fsdata,output,stream,os,throws,ioexception,try,this,ref,hflush,or,sync,invoke,os,if,os,instanceof,hdfs,data,output,stream,hdfs,data,output,stream,os,hsync,enum,set,of,hdfs,data,output,stream,sync,flag,catch,invocation,target,exception,e,string,msg,error,while,trying,to,hflush,or,sync,log,error,msg,e,get,cause,throwable,cause,e,get,cause,if,cause,null,cause,instanceof,ioexception,throw,ioexception,cause,throw,new,runtime,exception,msg,e,catch,exception,e,string,msg,error,while,trying,to,hflush,or,sync,log,error,msg,e,throw,new,runtime,exception,msg,e
StreamWriterBase -> private Method reflectHflushOrSync(FSDataOutputStream os);1480685315;Gets the hflush call using reflection. Fallback to sync if hflush is not available.__<p>_Note: This code comes from Flume;private Method reflectHflushOrSync(FSDataOutputStream os) {_		Method m = null__		if(os != null) {_			Class<?> fsDataOutputStreamClass = os.getClass()__			try {_				m = fsDataOutputStreamClass.getMethod("hflush")__			} catch (NoSuchMethodException ex) {_				LOG.debug("HFlush not found. Will use sync() instead")__				try {_					m = fsDataOutputStreamClass.getMethod("sync")__				} catch (Exception ex1) {_					String msg = "Neither hflush not sync were found. That seems to be " +_							"a problem!"__					LOG.error(msg)__					throw new RuntimeException(msg, ex1)__				}_			}_		}_		return m__	};gets,the,hflush,call,using,reflection,fallback,to,sync,if,hflush,is,not,available,p,note,this,code,comes,from,flume;private,method,reflect,hflush,or,sync,fsdata,output,stream,os,method,m,null,if,os,null,class,fs,data,output,stream,class,os,get,class,try,m,fs,data,output,stream,class,get,method,hflush,catch,no,such,method,exception,ex,log,debug,hflush,not,found,will,use,sync,instead,try,m,fs,data,output,stream,class,get,method,sync,catch,exception,ex1,string,msg,neither,hflush,not,sync,were,found,that,seems,to,be,a,problem,log,error,msg,throw,new,runtime,exception,msg,ex1,return,m
StreamWriterBase -> private Method reflectHflushOrSync(FSDataOutputStream os);1493811970;Gets the hflush call using reflection. Fallback to sync if hflush is not available.__<p>_Note: This code comes from Flume;private Method reflectHflushOrSync(FSDataOutputStream os) {_		Method m = null__		if(os != null) {_			Class<?> fsDataOutputStreamClass = os.getClass()__			try {_				m = fsDataOutputStreamClass.getMethod("hflush")__			} catch (NoSuchMethodException ex) {_				LOG.debug("HFlush not found. Will use sync() instead")__				try {_					m = fsDataOutputStreamClass.getMethod("sync")__				} catch (Exception ex1) {_					String msg = "Neither hflush not sync were found. That seems to be " +_							"a problem!"__					LOG.error(msg)__					throw new RuntimeException(msg, ex1)__				}_			}_		}_		return m__	};gets,the,hflush,call,using,reflection,fallback,to,sync,if,hflush,is,not,available,p,note,this,code,comes,from,flume;private,method,reflect,hflush,or,sync,fsdata,output,stream,os,method,m,null,if,os,null,class,fs,data,output,stream,class,os,get,class,try,m,fs,data,output,stream,class,get,method,hflush,catch,no,such,method,exception,ex,log,debug,hflush,not,found,will,use,sync,instead,try,m,fs,data,output,stream,class,get,method,sync,catch,exception,ex1,string,msg,neither,hflush,not,sync,were,found,that,seems,to,be,a,problem,log,error,msg,throw,new,runtime,exception,msg,ex1,return,m
StreamWriterBase -> private Method reflectHflushOrSync(FSDataOutputStream os);1495923089;Gets the hflush call using reflection. Fallback to sync if hflush is not available.__<p>Note: This code comes from Flume;private Method reflectHflushOrSync(FSDataOutputStream os) {_		Method m = null__		if (os != null) {_			Class<?> fsDataOutputStreamClass = os.getClass()__			try {_				m = fsDataOutputStreamClass.getMethod("hflush")__			} catch (NoSuchMethodException ex) {_				LOG.debug("HFlush not found. Will use sync() instead")__				try {_					m = fsDataOutputStreamClass.getMethod("sync")__				} catch (Exception ex1) {_					String msg = "Neither hflush not sync were found. That seems to be " +_							"a problem!"__					LOG.error(msg)__					throw new RuntimeException(msg, ex1)__				}_			}_		}_		return m__	};gets,the,hflush,call,using,reflection,fallback,to,sync,if,hflush,is,not,available,p,note,this,code,comes,from,flume;private,method,reflect,hflush,or,sync,fsdata,output,stream,os,method,m,null,if,os,null,class,fs,data,output,stream,class,os,get,class,try,m,fs,data,output,stream,class,get,method,hflush,catch,no,such,method,exception,ex,log,debug,hflush,not,found,will,use,sync,instead,try,m,fs,data,output,stream,class,get,method,sync,catch,exception,ex1,string,msg,neither,hflush,not,sync,were,found,that,seems,to,be,a,problem,log,error,msg,throw,new,runtime,exception,msg,ex1,return,m
