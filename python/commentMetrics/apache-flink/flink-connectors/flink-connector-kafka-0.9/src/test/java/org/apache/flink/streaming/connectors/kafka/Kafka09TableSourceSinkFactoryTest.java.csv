commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected String getKafkaVersion() {     return KafkaValidator.CONNECTOR_VERSION_VALUE_09. }
false;protected;0;5;;@Override @SuppressWarnings("unchecked") protected Class<FlinkKafkaConsumerBase<Row>> getExpectedFlinkKafkaConsumer() {     return (Class) FlinkKafkaConsumer09.class. }
false;protected;0;4;;@Override protected Class<?> getExpectedFlinkKafkaProducer() {     return FlinkKafkaProducer09.class. }
false;protected;9;24;;@Override protected KafkaTableSourceBase getExpectedKafkaTableSource(TableSchema schema, Optional<String> proctimeAttribute, List<RowtimeAttributeDescriptor> rowtimeAttributeDescriptors, Map<String, String> fieldMapping, String topic, Properties properties, DeserializationSchema<Row> deserializationSchema, StartupMode startupMode, Map<KafkaTopicPartition, Long> specificStartupOffsets) {     return new Kafka09TableSource(schema, proctimeAttribute, rowtimeAttributeDescriptors, Optional.of(fieldMapping), topic, properties, deserializationSchema, startupMode, specificStartupOffsets). }
false;protected;5;16;;@Override protected KafkaTableSinkBase getExpectedKafkaTableSink(TableSchema schema, String topic, Properties properties, Optional<FlinkKafkaPartitioner<Row>> partitioner, SerializationSchema<Row> serializationSchema) {     return new Kafka09TableSink(schema, topic, properties, partitioner, serializationSchema). }
