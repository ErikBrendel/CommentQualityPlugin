# id;timestamp;commentText;codeText;commentWords;codeWords
ElasticsearchSinkTestBase -> protected abstract <T> ElasticsearchSinkBase<T> createElasticsearchSinkForEmbeddedNode( 		Map<String, String> userConfig, ElasticsearchSinkFunction<T> elasticsearchSinkFunction) throws Exception_;1486478745;Creates a version-specific Elasticsearch sink to connect to a local embedded Elasticsearch node.__This case is singled out from {@link ElasticsearchSinkTestBase#createElasticsearchSink(Map, List, ElasticsearchSinkFunction)}_because the Elasticsearch Java API to do so is incompatible across different versions.;protected abstract <T> ElasticsearchSinkBase<T> createElasticsearchSinkForEmbeddedNode(_		Map<String, String> userConfig, ElasticsearchSinkFunction<T> elasticsearchSinkFunction) throws Exception_;creates,a,version,specific,elasticsearch,sink,to,connect,to,a,local,embedded,elasticsearch,node,this,case,is,singled,out,from,link,elasticsearch,sink,test,base,create,elasticsearch,sink,map,list,elasticsearch,sink,function,because,the,elasticsearch,java,api,to,do,so,is,incompatible,across,different,versions;protected,abstract,t,elasticsearch,sink,base,t,create,elasticsearch,sink,for,embedded,node,map,string,string,user,config,elasticsearch,sink,function,t,elasticsearch,sink,function,throws,exception
ElasticsearchSinkTestBase -> protected abstract <T> ElasticsearchSinkBase<T> createElasticsearchSinkForEmbeddedNode( 		Map<String, String> userConfig, ElasticsearchSinkFunction<T> elasticsearchSinkFunction) throws Exception_;1495923072;Creates a version-specific Elasticsearch sink to connect to a local embedded Elasticsearch node.__<p>This case is singled out from {@link ElasticsearchSinkTestBase#createElasticsearchSink(Map, List, ElasticsearchSinkFunction)}_because the Elasticsearch Java API to do so is incompatible across different versions.;protected abstract <T> ElasticsearchSinkBase<T> createElasticsearchSinkForEmbeddedNode(_		Map<String, String> userConfig, ElasticsearchSinkFunction<T> elasticsearchSinkFunction) throws Exception_;creates,a,version,specific,elasticsearch,sink,to,connect,to,a,local,embedded,elasticsearch,node,p,this,case,is,singled,out,from,link,elasticsearch,sink,test,base,create,elasticsearch,sink,map,list,elasticsearch,sink,function,because,the,elasticsearch,java,api,to,do,so,is,incompatible,across,different,versions;protected,abstract,t,elasticsearch,sink,base,t,create,elasticsearch,sink,for,embedded,node,map,string,string,user,config,elasticsearch,sink,function,t,elasticsearch,sink,function,throws,exception
ElasticsearchSinkTestBase -> protected abstract <T> ElasticsearchSinkBase<T> createElasticsearchSinkForEmbeddedNode( 		Map<String, String> userConfig, ElasticsearchSinkFunction<T> elasticsearchSinkFunction) throws Exception_;1515481551;Creates a version-specific Elasticsearch sink to connect to a local embedded Elasticsearch node.__<p>This case is singled out from {@link ElasticsearchSinkTestBase#createElasticsearchSink(Map, List, ElasticsearchSinkFunction)}_because the Elasticsearch Java API to do so is incompatible across different versions.;protected abstract <T> ElasticsearchSinkBase<T> createElasticsearchSinkForEmbeddedNode(_		Map<String, String> userConfig, ElasticsearchSinkFunction<T> elasticsearchSinkFunction) throws Exception_;creates,a,version,specific,elasticsearch,sink,to,connect,to,a,local,embedded,elasticsearch,node,p,this,case,is,singled,out,from,link,elasticsearch,sink,test,base,create,elasticsearch,sink,map,list,elasticsearch,sink,function,because,the,elasticsearch,java,api,to,do,so,is,incompatible,across,different,versions;protected,abstract,t,elasticsearch,sink,base,t,create,elasticsearch,sink,for,embedded,node,map,string,string,user,config,elasticsearch,sink,function,t,elasticsearch,sink,function,throws,exception
ElasticsearchSinkTestBase -> protected abstract <T> ElasticsearchSinkBase<T> createElasticsearchSinkForEmbeddedNode( 		Map<String, String> userConfig, ElasticsearchSinkFunction<T> elasticsearchSinkFunction) throws Exception_;1517405138;Creates a version-specific Elasticsearch sink to connect to a local embedded Elasticsearch node.__<p>This case is singled out from {@link ElasticsearchSinkTestBase#createElasticsearchSink(Map, List, ElasticsearchSinkFunction)}_because the Elasticsearch Java API to do so is incompatible across different versions.;protected abstract <T> ElasticsearchSinkBase<T> createElasticsearchSinkForEmbeddedNode(_		Map<String, String> userConfig, ElasticsearchSinkFunction<T> elasticsearchSinkFunction) throws Exception_;creates,a,version,specific,elasticsearch,sink,to,connect,to,a,local,embedded,elasticsearch,node,p,this,case,is,singled,out,from,link,elasticsearch,sink,test,base,create,elasticsearch,sink,map,list,elasticsearch,sink,function,because,the,elasticsearch,java,api,to,do,so,is,incompatible,across,different,versions;protected,abstract,t,elasticsearch,sink,base,t,create,elasticsearch,sink,for,embedded,node,map,string,string,user,config,elasticsearch,sink,function,t,elasticsearch,sink,function,throws,exception
ElasticsearchSinkTestBase -> protected abstract <T> ElasticsearchSinkBase<T> createElasticsearchSink(Map<String, String> userConfig, 																			List<InetSocketAddress> transportAddresses, 																			ElasticsearchSinkFunction<T> elasticsearchSinkFunction)_;1486478745;Creates a version-specific Elasticsearch sink, using arbitrary transport addresses;protected abstract <T> ElasticsearchSinkBase<T> createElasticsearchSink(Map<String, String> userConfig,_																			List<InetSocketAddress> transportAddresses,_																			ElasticsearchSinkFunction<T> elasticsearchSinkFunction)_;creates,a,version,specific,elasticsearch,sink,using,arbitrary,transport,addresses;protected,abstract,t,elasticsearch,sink,base,t,create,elasticsearch,sink,map,string,string,user,config,list,inet,socket,address,transport,addresses,elasticsearch,sink,function,t,elasticsearch,sink,function
ElasticsearchSinkTestBase -> protected abstract <T> ElasticsearchSinkBase<T> createElasticsearchSink(Map<String, String> userConfig, 																			List<InetSocketAddress> transportAddresses, 																			ElasticsearchSinkFunction<T> elasticsearchSinkFunction)_;1495923072;Creates a version-specific Elasticsearch sink, using arbitrary transport addresses.;protected abstract <T> ElasticsearchSinkBase<T> createElasticsearchSink(Map<String, String> userConfig,_																			List<InetSocketAddress> transportAddresses,_																			ElasticsearchSinkFunction<T> elasticsearchSinkFunction)_;creates,a,version,specific,elasticsearch,sink,using,arbitrary,transport,addresses;protected,abstract,t,elasticsearch,sink,base,t,create,elasticsearch,sink,map,string,string,user,config,list,inet,socket,address,transport,addresses,elasticsearch,sink,function,t,elasticsearch,sink,function
ElasticsearchSinkTestBase -> protected abstract <T> ElasticsearchSinkBase<T> createElasticsearchSink(Map<String, String> userConfig, 																			List<InetSocketAddress> transportAddresses, 																			ElasticsearchSinkFunction<T> elasticsearchSinkFunction)_;1515481551;Creates a version-specific Elasticsearch sink, using arbitrary transport addresses.;protected abstract <T> ElasticsearchSinkBase<T> createElasticsearchSink(Map<String, String> userConfig,_																			List<InetSocketAddress> transportAddresses,_																			ElasticsearchSinkFunction<T> elasticsearchSinkFunction)_;creates,a,version,specific,elasticsearch,sink,using,arbitrary,transport,addresses;protected,abstract,t,elasticsearch,sink,base,t,create,elasticsearch,sink,map,string,string,user,config,list,inet,socket,address,transport,addresses,elasticsearch,sink,function,t,elasticsearch,sink,function
ElasticsearchSinkTestBase -> protected abstract <T> ElasticsearchSinkBase<T> createElasticsearchSink(Map<String, String> userConfig, 																			List<InetSocketAddress> transportAddresses, 																			ElasticsearchSinkFunction<T> elasticsearchSinkFunction)_;1517405138;Creates a version-specific Elasticsearch sink, using arbitrary transport addresses.;protected abstract <T> ElasticsearchSinkBase<T> createElasticsearchSink(Map<String, String> userConfig,_																			List<InetSocketAddress> transportAddresses,_																			ElasticsearchSinkFunction<T> elasticsearchSinkFunction)_;creates,a,version,specific,elasticsearch,sink,using,arbitrary,transport,addresses;protected,abstract,t,elasticsearch,sink,base,t,create,elasticsearch,sink,map,string,string,user,config,list,inet,socket,address,transport,addresses,elasticsearch,sink,function,t,elasticsearch,sink,function
ElasticsearchSinkTestBase -> public void runTransportClientFailsTest() throws Exception;1486478745;Tests whether the Elasticsearch sink fails when there is no cluster to connect to.;public void runTransportClientFailsTest() throws Exception {_		final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()___		DataStreamSource<Tuple2<Integer, String>> source = env.addSource(new SourceSinkDataTestKit.TestDataSourceFunction())___		Map<String, String> userConfig = new HashMap<>()__		userConfig.put(ElasticsearchSinkBase.CONFIG_KEY_BULK_FLUSH_MAX_ACTIONS, "1")__		userConfig.put("cluster.name", "my-transport-client-cluster")___		source.addSink(createElasticsearchSinkForEmbeddedNode(_			userConfig, new SourceSinkDataTestKit.TestElasticsearchSinkFunction("test")))___		try {_			env.execute("Elasticsearch Transport Client Test")__		} catch(JobExecutionException expectedException) {_			assertTrue(expectedException.getCause().getMessage().contains("not connected to any Elasticsearch nodes"))__			return__		}__		fail()__	};tests,whether,the,elasticsearch,sink,fails,when,there,is,no,cluster,to,connect,to;public,void,run,transport,client,fails,test,throws,exception,final,stream,execution,environment,env,stream,execution,environment,get,execution,environment,data,stream,source,tuple2,integer,string,source,env,add,source,new,source,sink,data,test,kit,test,data,source,function,map,string,string,user,config,new,hash,map,user,config,put,elasticsearch,sink,base,1,user,config,put,cluster,name,my,transport,client,cluster,source,add,sink,create,elasticsearch,sink,for,embedded,node,user,config,new,source,sink,data,test,kit,test,elasticsearch,sink,function,test,try,env,execute,elasticsearch,transport,client,test,catch,job,execution,exception,expected,exception,assert,true,expected,exception,get,cause,get,message,contains,not,connected,to,any,elasticsearch,nodes,return,fail
ElasticsearchSinkTestBase -> public void runTransportClientFailsTest() throws Exception;1495923072;Tests whether the Elasticsearch sink fails when there is no cluster to connect to.;public void runTransportClientFailsTest() throws Exception {_		final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()___		DataStreamSource<Tuple2<Integer, String>> source = env.addSource(new SourceSinkDataTestKit.TestDataSourceFunction())___		Map<String, String> userConfig = new HashMap<>()__		userConfig.put(ElasticsearchSinkBase.CONFIG_KEY_BULK_FLUSH_MAX_ACTIONS, "1")__		userConfig.put("cluster.name", "my-transport-client-cluster")___		source.addSink(createElasticsearchSinkForEmbeddedNode(_			userConfig, new SourceSinkDataTestKit.TestElasticsearchSinkFunction("test")))___		try {_			env.execute("Elasticsearch Transport Client Test")__		} catch (JobExecutionException expectedException) {_			assertTrue(expectedException.getCause().getMessage().contains("not connected to any Elasticsearch nodes"))__			return__		}__		fail()__	};tests,whether,the,elasticsearch,sink,fails,when,there,is,no,cluster,to,connect,to;public,void,run,transport,client,fails,test,throws,exception,final,stream,execution,environment,env,stream,execution,environment,get,execution,environment,data,stream,source,tuple2,integer,string,source,env,add,source,new,source,sink,data,test,kit,test,data,source,function,map,string,string,user,config,new,hash,map,user,config,put,elasticsearch,sink,base,1,user,config,put,cluster,name,my,transport,client,cluster,source,add,sink,create,elasticsearch,sink,for,embedded,node,user,config,new,source,sink,data,test,kit,test,elasticsearch,sink,function,test,try,env,execute,elasticsearch,transport,client,test,catch,job,execution,exception,expected,exception,assert,true,expected,exception,get,cause,get,message,contains,not,connected,to,any,elasticsearch,nodes,return,fail
ElasticsearchSinkTestBase -> public void runTransportClientFailsTest() throws Exception;1515481551;Tests whether the Elasticsearch sink fails when there is no cluster to connect to.;public void runTransportClientFailsTest() throws Exception {_		final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()___		DataStreamSource<Tuple2<Integer, String>> source = env.addSource(new SourceSinkDataTestKit.TestDataSourceFunction())___		Map<String, String> userConfig = new HashMap<>()__		userConfig.put(ElasticsearchSinkBase.CONFIG_KEY_BULK_FLUSH_MAX_ACTIONS, "1")__		userConfig.put("cluster.name", "my-transport-client-cluster")___		source.addSink(createElasticsearchSinkForEmbeddedNode(_			userConfig, new SourceSinkDataTestKit.TestElasticsearchSinkFunction("test")))___		try {_			env.execute("Elasticsearch Transport Client Test")__		} catch (JobExecutionException expectedException) {_			assertTrue(expectedException.getCause().getMessage().contains("not connected to any Elasticsearch nodes"))__			return__		}__		fail()__	};tests,whether,the,elasticsearch,sink,fails,when,there,is,no,cluster,to,connect,to;public,void,run,transport,client,fails,test,throws,exception,final,stream,execution,environment,env,stream,execution,environment,get,execution,environment,data,stream,source,tuple2,integer,string,source,env,add,source,new,source,sink,data,test,kit,test,data,source,function,map,string,string,user,config,new,hash,map,user,config,put,elasticsearch,sink,base,1,user,config,put,cluster,name,my,transport,client,cluster,source,add,sink,create,elasticsearch,sink,for,embedded,node,user,config,new,source,sink,data,test,kit,test,elasticsearch,sink,function,test,try,env,execute,elasticsearch,transport,client,test,catch,job,execution,exception,expected,exception,assert,true,expected,exception,get,cause,get,message,contains,not,connected,to,any,elasticsearch,nodes,return,fail
ElasticsearchSinkTestBase -> public void runTransportClientFailsTest() throws Exception;1517405138;Tests whether the Elasticsearch sink fails when there is no cluster to connect to.;public void runTransportClientFailsTest() throws Exception {_		final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()___		DataStreamSource<Tuple2<Integer, String>> source = env.addSource(new SourceSinkDataTestKit.TestDataSourceFunction())___		Map<String, String> userConfig = new HashMap<>()__		userConfig.put(ElasticsearchSinkBase.CONFIG_KEY_BULK_FLUSH_MAX_ACTIONS, "1")__		userConfig.put("cluster.name", "my-transport-client-cluster")___		source.addSink(createElasticsearchSinkForEmbeddedNode(_			Collections.unmodifiableMap(userConfig), new SourceSinkDataTestKit.TestElasticsearchSinkFunction("test")))___		try {_			env.execute("Elasticsearch Transport Client Test")__		} catch (JobExecutionException expectedException) {_			assertTrue(expectedException.getCause().getMessage().contains("not connected to any Elasticsearch nodes"))__			return__		}__		fail()__	};tests,whether,the,elasticsearch,sink,fails,when,there,is,no,cluster,to,connect,to;public,void,run,transport,client,fails,test,throws,exception,final,stream,execution,environment,env,stream,execution,environment,get,execution,environment,data,stream,source,tuple2,integer,string,source,env,add,source,new,source,sink,data,test,kit,test,data,source,function,map,string,string,user,config,new,hash,map,user,config,put,elasticsearch,sink,base,1,user,config,put,cluster,name,my,transport,client,cluster,source,add,sink,create,elasticsearch,sink,for,embedded,node,collections,unmodifiable,map,user,config,new,source,sink,data,test,kit,test,elasticsearch,sink,function,test,try,env,execute,elasticsearch,transport,client,test,catch,job,execution,exception,expected,exception,assert,true,expected,exception,get,cause,get,message,contains,not,connected,to,any,elasticsearch,nodes,return,fail
ElasticsearchSinkTestBase -> public void runNullTransportClientTest() throws Exception;1486478745;Tests that the Elasticsearch sink fails eagerly if the provided list of transport addresses is {@code null}.;public void runNullTransportClientTest() throws Exception {_		Map<String, String> userConfig = new HashMap<>()__		userConfig.put(ElasticsearchSinkBase.CONFIG_KEY_BULK_FLUSH_MAX_ACTIONS, "1")__		userConfig.put("cluster.name", "my-transport-client-cluster")___		try {_			createElasticsearchSink(userConfig, null, new SourceSinkDataTestKit.TestElasticsearchSinkFunction("test"))__		} catch(IllegalArgumentException expectedException) {_			_			return__		}__		fail()__	};tests,that,the,elasticsearch,sink,fails,eagerly,if,the,provided,list,of,transport,addresses,is,code,null;public,void,run,null,transport,client,test,throws,exception,map,string,string,user,config,new,hash,map,user,config,put,elasticsearch,sink,base,1,user,config,put,cluster,name,my,transport,client,cluster,try,create,elasticsearch,sink,user,config,null,new,source,sink,data,test,kit,test,elasticsearch,sink,function,test,catch,illegal,argument,exception,expected,exception,return,fail
ElasticsearchSinkTestBase -> public void runNullTransportClientTest() throws Exception;1495923072;Tests that the Elasticsearch sink fails eagerly if the provided list of transport addresses is {@code null}.;public void runNullTransportClientTest() throws Exception {_		Map<String, String> userConfig = new HashMap<>()__		userConfig.put(ElasticsearchSinkBase.CONFIG_KEY_BULK_FLUSH_MAX_ACTIONS, "1")__		userConfig.put("cluster.name", "my-transport-client-cluster")___		try {_			createElasticsearchSink(userConfig, null, new SourceSinkDataTestKit.TestElasticsearchSinkFunction("test"))__		} catch (IllegalArgumentException expectedException) {_			_			return__		}__		fail()__	};tests,that,the,elasticsearch,sink,fails,eagerly,if,the,provided,list,of,transport,addresses,is,code,null;public,void,run,null,transport,client,test,throws,exception,map,string,string,user,config,new,hash,map,user,config,put,elasticsearch,sink,base,1,user,config,put,cluster,name,my,transport,client,cluster,try,create,elasticsearch,sink,user,config,null,new,source,sink,data,test,kit,test,elasticsearch,sink,function,test,catch,illegal,argument,exception,expected,exception,return,fail
ElasticsearchSinkTestBase -> public void runNullTransportClientTest() throws Exception;1515481551;Tests that the Elasticsearch sink fails eagerly if the provided list of transport addresses is {@code null}.;public void runNullTransportClientTest() throws Exception {_		Map<String, String> userConfig = new HashMap<>()__		userConfig.put(ElasticsearchSinkBase.CONFIG_KEY_BULK_FLUSH_MAX_ACTIONS, "1")__		userConfig.put("cluster.name", "my-transport-client-cluster")___		try {_			createElasticsearchSink(userConfig, null, new SourceSinkDataTestKit.TestElasticsearchSinkFunction("test"))__		} catch (IllegalArgumentException expectedException) {_			_			return__		}__		fail()__	};tests,that,the,elasticsearch,sink,fails,eagerly,if,the,provided,list,of,transport,addresses,is,code,null;public,void,run,null,transport,client,test,throws,exception,map,string,string,user,config,new,hash,map,user,config,put,elasticsearch,sink,base,1,user,config,put,cluster,name,my,transport,client,cluster,try,create,elasticsearch,sink,user,config,null,new,source,sink,data,test,kit,test,elasticsearch,sink,function,test,catch,illegal,argument,exception,expected,exception,return,fail
ElasticsearchSinkTestBase -> public void runNullTransportClientTest() throws Exception;1517405138;Tests that the Elasticsearch sink fails eagerly if the provided list of transport addresses is {@code null}.;public void runNullTransportClientTest() throws Exception {_		Map<String, String> userConfig = new HashMap<>()__		userConfig.put(ElasticsearchSinkBase.CONFIG_KEY_BULK_FLUSH_MAX_ACTIONS, "1")__		userConfig.put("cluster.name", "my-transport-client-cluster")___		try {_			createElasticsearchSink(userConfig, null, new SourceSinkDataTestKit.TestElasticsearchSinkFunction("test"))__		} catch (IllegalArgumentException expectedException) {_			_			return__		}__		fail()__	};tests,that,the,elasticsearch,sink,fails,eagerly,if,the,provided,list,of,transport,addresses,is,code,null;public,void,run,null,transport,client,test,throws,exception,map,string,string,user,config,new,hash,map,user,config,put,elasticsearch,sink,base,1,user,config,put,cluster,name,my,transport,client,cluster,try,create,elasticsearch,sink,user,config,null,new,source,sink,data,test,kit,test,elasticsearch,sink,function,test,catch,illegal,argument,exception,expected,exception,return,fail
ElasticsearchSinkTestBase -> public void runEmptyTransportClientTest() throws Exception;1486478745;Tests that the Elasticsearch sink fails eagerly if the provided list of transport addresses is empty.;public void runEmptyTransportClientTest() throws Exception {_		Map<String, String> userConfig = new HashMap<>()__		userConfig.put(ElasticsearchSinkBase.CONFIG_KEY_BULK_FLUSH_MAX_ACTIONS, "1")__		userConfig.put("cluster.name", "my-transport-client-cluster")___		try {_			createElasticsearchSink(_				userConfig,_				Collections.<InetSocketAddress>emptyList(),_				new SourceSinkDataTestKit.TestElasticsearchSinkFunction("test"))__		} catch(IllegalArgumentException expectedException) {_			_			return__		}__		fail()__	};tests,that,the,elasticsearch,sink,fails,eagerly,if,the,provided,list,of,transport,addresses,is,empty;public,void,run,empty,transport,client,test,throws,exception,map,string,string,user,config,new,hash,map,user,config,put,elasticsearch,sink,base,1,user,config,put,cluster,name,my,transport,client,cluster,try,create,elasticsearch,sink,user,config,collections,inet,socket,address,empty,list,new,source,sink,data,test,kit,test,elasticsearch,sink,function,test,catch,illegal,argument,exception,expected,exception,return,fail
ElasticsearchSinkTestBase -> public void runEmptyTransportClientTest() throws Exception;1495923072;Tests that the Elasticsearch sink fails eagerly if the provided list of transport addresses is empty.;public void runEmptyTransportClientTest() throws Exception {_		Map<String, String> userConfig = new HashMap<>()__		userConfig.put(ElasticsearchSinkBase.CONFIG_KEY_BULK_FLUSH_MAX_ACTIONS, "1")__		userConfig.put("cluster.name", "my-transport-client-cluster")___		try {_			createElasticsearchSink(_				userConfig,_				Collections.<InetSocketAddress>emptyList(),_				new SourceSinkDataTestKit.TestElasticsearchSinkFunction("test"))__		} catch (IllegalArgumentException expectedException) {_			_			return__		}__		fail()__	};tests,that,the,elasticsearch,sink,fails,eagerly,if,the,provided,list,of,transport,addresses,is,empty;public,void,run,empty,transport,client,test,throws,exception,map,string,string,user,config,new,hash,map,user,config,put,elasticsearch,sink,base,1,user,config,put,cluster,name,my,transport,client,cluster,try,create,elasticsearch,sink,user,config,collections,inet,socket,address,empty,list,new,source,sink,data,test,kit,test,elasticsearch,sink,function,test,catch,illegal,argument,exception,expected,exception,return,fail
ElasticsearchSinkTestBase -> public void runEmptyTransportClientTest() throws Exception;1515481551;Tests that the Elasticsearch sink fails eagerly if the provided list of transport addresses is empty.;public void runEmptyTransportClientTest() throws Exception {_		Map<String, String> userConfig = new HashMap<>()__		userConfig.put(ElasticsearchSinkBase.CONFIG_KEY_BULK_FLUSH_MAX_ACTIONS, "1")__		userConfig.put("cluster.name", "my-transport-client-cluster")___		try {_			createElasticsearchSink(_				userConfig,_				Collections.<InetSocketAddress>emptyList(),_				new SourceSinkDataTestKit.TestElasticsearchSinkFunction("test"))__		} catch (IllegalArgumentException expectedException) {_			_			return__		}__		fail()__	};tests,that,the,elasticsearch,sink,fails,eagerly,if,the,provided,list,of,transport,addresses,is,empty;public,void,run,empty,transport,client,test,throws,exception,map,string,string,user,config,new,hash,map,user,config,put,elasticsearch,sink,base,1,user,config,put,cluster,name,my,transport,client,cluster,try,create,elasticsearch,sink,user,config,collections,inet,socket,address,empty,list,new,source,sink,data,test,kit,test,elasticsearch,sink,function,test,catch,illegal,argument,exception,expected,exception,return,fail
ElasticsearchSinkTestBase -> public void runEmptyTransportClientTest() throws Exception;1517405138;Tests that the Elasticsearch sink fails eagerly if the provided list of transport addresses is empty.;public void runEmptyTransportClientTest() throws Exception {_		Map<String, String> userConfig = new HashMap<>()__		userConfig.put(ElasticsearchSinkBase.CONFIG_KEY_BULK_FLUSH_MAX_ACTIONS, "1")__		userConfig.put("cluster.name", "my-transport-client-cluster")___		try {_			createElasticsearchSink(_				userConfig,_				Collections.<InetSocketAddress>emptyList(),_				new SourceSinkDataTestKit.TestElasticsearchSinkFunction("test"))__		} catch (IllegalArgumentException expectedException) {_			_			return__		}__		fail()__	};tests,that,the,elasticsearch,sink,fails,eagerly,if,the,provided,list,of,transport,addresses,is,empty;public,void,run,empty,transport,client,test,throws,exception,map,string,string,user,config,new,hash,map,user,config,put,elasticsearch,sink,base,1,user,config,put,cluster,name,my,transport,client,cluster,try,create,elasticsearch,sink,user,config,collections,inet,socket,address,empty,list,new,source,sink,data,test,kit,test,elasticsearch,sink,function,test,catch,illegal,argument,exception,expected,exception,return,fail
ElasticsearchSinkTestBase -> public void runTransportClientTest() throws Exception;1486478745;Tests that the Elasticsearch sink works properly using a {@link TransportClient}.;public void runTransportClientTest() throws Exception {_		final String index = "transport-client-test-index"___		final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()___		DataStreamSource<Tuple2<Integer, String>> source = env.addSource(new SourceSinkDataTestKit.TestDataSourceFunction())___		Map<String, String> userConfig = new HashMap<>()__		_		userConfig.put(ElasticsearchSinkBase.CONFIG_KEY_BULK_FLUSH_MAX_ACTIONS, "1")__		userConfig.put("cluster.name", CLUSTER_NAME)___		source.addSink(createElasticsearchSinkForEmbeddedNode(_			userConfig, new SourceSinkDataTestKit.TestElasticsearchSinkFunction(index)))___		env.execute("Elasticsearch TransportClient Test")___		_		Client client = embeddedNodeEnv.getClient()__		SourceSinkDataTestKit.verifyProducedSinkData(client, index)___		client.close()__	};tests,that,the,elasticsearch,sink,works,properly,using,a,link,transport,client;public,void,run,transport,client,test,throws,exception,final,string,index,transport,client,test,index,final,stream,execution,environment,env,stream,execution,environment,get,execution,environment,data,stream,source,tuple2,integer,string,source,env,add,source,new,source,sink,data,test,kit,test,data,source,function,map,string,string,user,config,new,hash,map,user,config,put,elasticsearch,sink,base,1,user,config,put,cluster,name,source,add,sink,create,elasticsearch,sink,for,embedded,node,user,config,new,source,sink,data,test,kit,test,elasticsearch,sink,function,index,env,execute,elasticsearch,transport,client,test,client,client,embedded,node,env,get,client,source,sink,data,test,kit,verify,produced,sink,data,client,index,client,close
ElasticsearchSinkTestBase -> public void runTransportClientTest() throws Exception;1495923072;Tests that the Elasticsearch sink works properly using a {@link TransportClient}.;public void runTransportClientTest() throws Exception {_		final String index = "transport-client-test-index"___		final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()___		DataStreamSource<Tuple2<Integer, String>> source = env.addSource(new SourceSinkDataTestKit.TestDataSourceFunction())___		Map<String, String> userConfig = new HashMap<>()__		_		userConfig.put(ElasticsearchSinkBase.CONFIG_KEY_BULK_FLUSH_MAX_ACTIONS, "1")__		userConfig.put("cluster.name", CLUSTER_NAME)___		source.addSink(createElasticsearchSinkForEmbeddedNode(_			userConfig, new SourceSinkDataTestKit.TestElasticsearchSinkFunction(index)))___		env.execute("Elasticsearch TransportClient Test")___		_		Client client = embeddedNodeEnv.getClient()__		SourceSinkDataTestKit.verifyProducedSinkData(client, index)___		client.close()__	};tests,that,the,elasticsearch,sink,works,properly,using,a,link,transport,client;public,void,run,transport,client,test,throws,exception,final,string,index,transport,client,test,index,final,stream,execution,environment,env,stream,execution,environment,get,execution,environment,data,stream,source,tuple2,integer,string,source,env,add,source,new,source,sink,data,test,kit,test,data,source,function,map,string,string,user,config,new,hash,map,user,config,put,elasticsearch,sink,base,1,user,config,put,cluster,name,source,add,sink,create,elasticsearch,sink,for,embedded,node,user,config,new,source,sink,data,test,kit,test,elasticsearch,sink,function,index,env,execute,elasticsearch,transport,client,test,client,client,embedded,node,env,get,client,source,sink,data,test,kit,verify,produced,sink,data,client,index,client,close
ElasticsearchSinkTestBase -> public void runTransportClientTest() throws Exception;1515481551;Tests that the Elasticsearch sink works properly using a {@link TransportClient}.;public void runTransportClientTest() throws Exception {_		final String index = "transport-client-test-index"___		final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()___		DataStreamSource<Tuple2<Integer, String>> source = env.addSource(new SourceSinkDataTestKit.TestDataSourceFunction())___		Map<String, String> userConfig = new HashMap<>()__		_		userConfig.put(ElasticsearchSinkBase.CONFIG_KEY_BULK_FLUSH_MAX_ACTIONS, "1")__		userConfig.put("cluster.name", CLUSTER_NAME)___		source.addSink(createElasticsearchSinkForEmbeddedNode(_			userConfig, new SourceSinkDataTestKit.TestElasticsearchSinkFunction(index)))___		env.execute("Elasticsearch TransportClient Test")___		_		Client client = embeddedNodeEnv.getClient()__		SourceSinkDataTestKit.verifyProducedSinkData(client, index)___		client.close()__	};tests,that,the,elasticsearch,sink,works,properly,using,a,link,transport,client;public,void,run,transport,client,test,throws,exception,final,string,index,transport,client,test,index,final,stream,execution,environment,env,stream,execution,environment,get,execution,environment,data,stream,source,tuple2,integer,string,source,env,add,source,new,source,sink,data,test,kit,test,data,source,function,map,string,string,user,config,new,hash,map,user,config,put,elasticsearch,sink,base,1,user,config,put,cluster,name,source,add,sink,create,elasticsearch,sink,for,embedded,node,user,config,new,source,sink,data,test,kit,test,elasticsearch,sink,function,index,env,execute,elasticsearch,transport,client,test,client,client,embedded,node,env,get,client,source,sink,data,test,kit,verify,produced,sink,data,client,index,client,close
ElasticsearchSinkTestBase -> public void runTransportClientTest() throws Exception;1517405138;Tests that the Elasticsearch sink works properly using a {@link TransportClient}.;public void runTransportClientTest() throws Exception {_		final String index = "transport-client-test-index"___		final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()___		DataStreamSource<Tuple2<Integer, String>> source = env.addSource(new SourceSinkDataTestKit.TestDataSourceFunction())___		Map<String, String> userConfig = new HashMap<>()__		_		userConfig.put(ElasticsearchSinkBase.CONFIG_KEY_BULK_FLUSH_MAX_ACTIONS, "1")__		userConfig.put("cluster.name", CLUSTER_NAME)___		source.addSink(createElasticsearchSinkForEmbeddedNode(_			userConfig, new SourceSinkDataTestKit.TestElasticsearchSinkFunction(index)))___		env.execute("Elasticsearch TransportClient Test")___		_		Client client = embeddedNodeEnv.getClient()__		SourceSinkDataTestKit.verifyProducedSinkData(client, index)___		client.close()__	};tests,that,the,elasticsearch,sink,works,properly,using,a,link,transport,client;public,void,run,transport,client,test,throws,exception,final,string,index,transport,client,test,index,final,stream,execution,environment,env,stream,execution,environment,get,execution,environment,data,stream,source,tuple2,integer,string,source,env,add,source,new,source,sink,data,test,kit,test,data,source,function,map,string,string,user,config,new,hash,map,user,config,put,elasticsearch,sink,base,1,user,config,put,cluster,name,source,add,sink,create,elasticsearch,sink,for,embedded,node,user,config,new,source,sink,data,test,kit,test,elasticsearch,sink,function,index,env,execute,elasticsearch,transport,client,test,client,client,embedded,node,env,get,client,source,sink,data,test,kit,verify,produced,sink,data,client,index,client,close
