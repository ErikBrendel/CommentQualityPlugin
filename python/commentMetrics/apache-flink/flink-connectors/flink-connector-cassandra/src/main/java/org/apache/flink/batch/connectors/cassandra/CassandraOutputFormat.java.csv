# id;timestamp;commentText;codeText;commentWords;codeWords
CassandraOutputFormat -> @Override 	public void open(int taskNumber, int numTasks) throws IOException;1480685315;Opens a Session to Cassandra and initializes the prepared statement.__@param taskNumber The number of the parallel instance._@throws IOException Thrown, if the output could not be opened due to an_I/O problem.;@Override_	public void open(int taskNumber, int numTasks) throws IOException {_		this.session = cluster.connect()__		this.prepared = session.prepare(insertQuery)__		this.callback = new FutureCallback<ResultSet>() {_			@Override_			public void onSuccess(ResultSet ignored) {_			}__			@Override_			public void onFailure(Throwable t) {_				exception = t__			}_		}__	};opens,a,session,to,cassandra,and,initializes,the,prepared,statement,param,task,number,the,number,of,the,parallel,instance,throws,ioexception,thrown,if,the,output,could,not,be,opened,due,to,an,i,o,problem;override,public,void,open,int,task,number,int,num,tasks,throws,ioexception,this,session,cluster,connect,this,prepared,session,prepare,insert,query,this,callback,new,future,callback,result,set,override,public,void,on,success,result,set,ignored,override,public,void,on,failure,throwable,t,exception,t
CassandraOutputFormat -> @Override 	public void open(int taskNumber, int numTasks) throws IOException;1495923092;Opens a Session to Cassandra and initializes the prepared statement.__@param taskNumber The number of the parallel instance._@throws IOException Thrown, if the output could not be opened due to an_I/O problem.;@Override_	public void open(int taskNumber, int numTasks) throws IOException {_		this.session = cluster.connect()__		this.prepared = session.prepare(insertQuery)__		this.callback = new FutureCallback<ResultSet>() {_			@Override_			public void onSuccess(ResultSet ignored) {_			}__			@Override_			public void onFailure(Throwable t) {_				exception = t__			}_		}__	};opens,a,session,to,cassandra,and,initializes,the,prepared,statement,param,task,number,the,number,of,the,parallel,instance,throws,ioexception,thrown,if,the,output,could,not,be,opened,due,to,an,i,o,problem;override,public,void,open,int,task,number,int,num,tasks,throws,ioexception,this,session,cluster,connect,this,prepared,session,prepare,insert,query,this,callback,new,future,callback,result,set,override,public,void,on,success,result,set,ignored,override,public,void,on,failure,throwable,t,exception,t
CassandraOutputFormat -> @Override 	public void close() throws IOException;1480685315;Closes all resources used.;@Override_	public void close() throws IOException {_		try {_			if (session != null) {_				session.close()__			}_		} catch (Exception e) {_			LOG.error("Error while closing session.", e)__		}__		try {_			if (cluster != null ) {_				cluster.close()__			}_		} catch (Exception e) {_			LOG.error("Error while closing cluster.", e)__		}_	};closes,all,resources,used;override,public,void,close,throws,ioexception,try,if,session,null,session,close,catch,exception,e,log,error,error,while,closing,session,e,try,if,cluster,null,cluster,close,catch,exception,e,log,error,error,while,closing,cluster,e
CassandraOutputFormat -> @Override 	public void close() throws IOException;1495923092;Closes all resources used.;@Override_	public void close() throws IOException {_		try {_			if (session != null) {_				session.close()__			}_		} catch (Exception e) {_			LOG.error("Error while closing session.", e)__		}__		try {_			if (cluster != null) {_				cluster.close()__			}_		} catch (Exception e) {_			LOG.error("Error while closing cluster.", e)__		}_	};closes,all,resources,used;override,public,void,close,throws,ioexception,try,if,session,null,session,close,catch,exception,e,log,error,error,while,closing,session,e,try,if,cluster,null,cluster,close,catch,exception,e,log,error,error,while,closing,cluster,e
