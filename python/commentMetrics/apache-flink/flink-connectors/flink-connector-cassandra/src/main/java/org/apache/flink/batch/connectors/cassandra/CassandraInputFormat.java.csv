# id;timestamp;commentText;codeText;commentWords;codeWords
CassandraInputFormat -> @Override 	public void open(InputSplit ignored) throws IOException;1480685315;Opens a Session and executes the query.__@param ignored_@throws IOException;@Override_	public void open(InputSplit ignored) throws IOException {_		this.session = cluster.connect()__		this.resultSet = session.execute(query)__	};opens,a,session,and,executes,the,query,param,ignored,throws,ioexception;override,public,void,open,input,split,ignored,throws,ioexception,this,session,cluster,connect,this,result,set,session,execute,query
CassandraInputFormat -> @Override 	public void open(InputSplit ignored) throws IOException;1495923092;Opens a Session and executes the query.__@param ignored_@throws IOException;@Override_	public void open(InputSplit ignored) throws IOException {_		this.session = cluster.connect()__		this.resultSet = session.execute(query)__	};opens,a,session,and,executes,the,query,param,ignored,throws,ioexception;override,public,void,open,input,split,ignored,throws,ioexception,this,session,cluster,connect,this,result,set,session,execute,query
CassandraInputFormat -> @Override 	public void open(InputSplit ignored) throws IOException;1539072997;Opens a Session and executes the query.__@param ignored because parameter is not parallelizable._@throws IOException;@Override_	public void open(InputSplit ignored) throws IOException {_		this.session = cluster.connect()__		this.resultSet = session.execute(query)__	};opens,a,session,and,executes,the,query,param,ignored,because,parameter,is,not,parallelizable,throws,ioexception;override,public,void,open,input,split,ignored,throws,ioexception,this,session,cluster,connect,this,result,set,session,execute,query
CassandraInputFormat -> @Override 	public void open(InputSplit ignored) throws IOException;1539072997;Opens a Session and executes the query.__@param ignored because parameter is not parallelizable._@throws IOException;@Override_	public void open(InputSplit ignored) throws IOException {_		this.session = cluster.connect()__		this.resultSet = session.execute(query)__	};opens,a,session,and,executes,the,query,param,ignored,because,parameter,is,not,parallelizable,throws,ioexception;override,public,void,open,input,split,ignored,throws,ioexception,this,session,cluster,connect,this,result,set,session,execute,query
CassandraInputFormat -> @Override 	public void close() throws IOException;1480685315;Closes all resources used.;@Override_	public void close() throws IOException {_		try {_			if (session != null) {_				session.close()__			}_		} catch (Exception e) {_			LOG.error("Error while closing session.", e)__		}__		try {_			if (cluster != null ) {_				cluster.close()__			}_		} catch (Exception e) {_			LOG.error("Error while closing cluster.", e)__		}_	};closes,all,resources,used;override,public,void,close,throws,ioexception,try,if,session,null,session,close,catch,exception,e,log,error,error,while,closing,session,e,try,if,cluster,null,cluster,close,catch,exception,e,log,error,error,while,closing,cluster,e
CassandraInputFormat -> @Override 	public void close() throws IOException;1495923092;Closes all resources used.;@Override_	public void close() throws IOException {_		try {_			if (session != null) {_				session.close()__			}_		} catch (Exception e) {_			LOG.error("Error while closing session.", e)__		}__		try {_			if (cluster != null) {_				cluster.close()__			}_		} catch (Exception e) {_			LOG.error("Error while closing cluster.", e)__		}_	};closes,all,resources,used;override,public,void,close,throws,ioexception,try,if,session,null,session,close,catch,exception,e,log,error,error,while,closing,session,e,try,if,cluster,null,cluster,close,catch,exception,e,log,error,error,while,closing,cluster,e
