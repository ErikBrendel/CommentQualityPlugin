commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;4;;@Override protected Cluster buildCluster(Cluster.Builder builder) {     return builder.addContactPoints("127.0.0.1").build(). }
false;public,static;1;37;;public static void main(String[] args) throws Exception {     ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment().     env.setParallelism(1).     List<CustomCassandraAnnotatedPojo> customCassandraAnnotatedPojos = IntStream.range(0, 20).mapToObj(x -> new CustomCassandraAnnotatedPojo(UUID.randomUUID().toString(), x, 0)).collect(Collectors.toList()).     DataSet<CustomCassandraAnnotatedPojo> dataSet = env.fromCollection(customCassandraAnnotatedPojos).     ClusterBuilder clusterBuilder = new ClusterBuilder() {          private static final long serialVersionUID = -1754532803757154795L.          @Override         protected Cluster buildCluster(Cluster.Builder builder) {             return builder.addContactPoints("127.0.0.1").build().         }     }.     dataSet.output(new CassandraPojoOutputFormat<>(clusterBuilder, CustomCassandraAnnotatedPojo.class, () -> new Mapper.Option[] { Mapper.Option.saveNullFields(true) })).     env.execute("Write").     /* 		 *	This is for the purpose of showing an example of creating a DataSet using CassandraPojoInputFormat. 		 */     DataSet<CustomCassandraAnnotatedPojo> inputDS = env.createInput(new CassandraPojoInputFormat<>(SELECT_QUERY, clusterBuilder, CustomCassandraAnnotatedPojo.class, () -> new Mapper.Option[] { Mapper.Option.consistencyLevel(ConsistencyLevel.ANY) })).     inputDS.print(). }
