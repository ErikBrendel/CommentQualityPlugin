# id;timestamp;commentText;codeText;commentWords;codeWords
OneShotLatch -> public void trigger();1467726586;Fires the latch. Code that is blocked on {@link #await()} will now return.;public void trigger() {_		synchronized (lock) {_			triggered = true__			lock.notifyAll()__		}_	};fires,the,latch,code,that,is,blocked,on,link,await,will,now,return;public,void,trigger,synchronized,lock,triggered,true,lock,notify,all
OneShotLatch -> public void trigger();1470405838;Fires the latch. Code that is blocked on {@link #await()} will now return.;public void trigger() {_		synchronized (lock) {_			triggered = true__			lock.notifyAll()__		}_	};fires,the,latch,code,that,is,blocked,on,link,await,will,now,return;public,void,trigger,synchronized,lock,triggered,true,lock,notify,all
OneShotLatch -> public void trigger();1472066344;Fires the latch. Code that is blocked on {@link #await()} will now return.;public void trigger() {_		synchronized (lock) {_			triggered = true__			lock.notifyAll()__		}_	};fires,the,latch,code,that,is,blocked,on,link,await,will,now,return;public,void,trigger,synchronized,lock,triggered,true,lock,notify,all
OneShotLatch -> public void trigger();1480698613;Fires the latch. Code that is blocked on {@link #await()} will now return.;public void trigger() {_		synchronized (lock) {_			triggered = true__			lock.notifyAll()__		}_	};fires,the,latch,code,that,is,blocked,on,link,await,will,now,return;public,void,trigger,synchronized,lock,triggered,true,lock,notify,all
OneShotLatch -> public void trigger();1481715812;Fires the latch. Code that is blocked on {@link #await()} will now return.;public void trigger() {_		synchronized (lock) {_			triggered = true__			lock.notifyAll()__		}_	};fires,the,latch,code,that,is,blocked,on,link,await,will,now,return;public,void,trigger,synchronized,lock,triggered,true,lock,notify,all
OneShotLatch -> public void trigger();1482249704;Fires the latch. Code that is blocked on {@link #await()} will now return.;public void trigger() {_		synchronized (lock) {_			triggered = true__			lock.notifyAll()__		}_	};fires,the,latch,code,that,is,blocked,on,link,await,will,now,return;public,void,trigger,synchronized,lock,triggered,true,lock,notify,all
OneShotLatch -> public void trigger();1487636187;Fires the latch. Code that is blocked on {@link #await()} will now return.;public void trigger() {_		synchronized (lock) {_			triggered = true__			lock.notifyAll()__		}_	};fires,the,latch,code,that,is,blocked,on,link,await,will,now,return;public,void,trigger,synchronized,lock,triggered,true,lock,notify,all
OneShotLatch -> public void trigger();1495790937;Fires the latch. Code that is blocked on {@link #await()} will now return.;public void trigger() {_		synchronized (lock) {_			triggered = true__			lock.notifyAll()__		}_	};fires,the,latch,code,that,is,blocked,on,link,await,will,now,return;public,void,trigger,synchronized,lock,triggered,true,lock,notify,all
OneShotLatch -> public void trigger();1534854671;Fires the latch. Code that is blocked on {@link #await()} will now return.;public void trigger() {_		synchronized (lock) {_			triggered = true__			lock.notifyAll()__		}_	};fires,the,latch,code,that,is,blocked,on,link,await,will,now,return;public,void,trigger,synchronized,lock,triggered,true,lock,notify,all
OneShotLatch -> public void await(long timeout, TimeUnit timeUnit) throws InterruptedException, TimeoutException;1472066344;Waits until {@link #trigger())} is called. Once {@code #trigger()} has been called this_call will always return immediately.__<p>If the latch is not triggered within the given timeout, a {@code TimeoutException}_will be thrown after the timeout.__<p>A timeout value of zero means infinite timeout and make this equivalent to {@link #await()}.__@param timeout   The value of the timeout, a value of zero indicating infinite timeout._@param timeUnit  The unit of the timeout__@throws InterruptedException Thrown if the thread is interrupted while waiting._@throws TimeoutException Thrown, if the latch is not triggered within the timeout time.;public void await(long timeout, TimeUnit timeUnit) throws InterruptedException, TimeoutException {_		if (timeout < 0) {_			throw new IllegalArgumentException("time may not be negative")__		}_		if (timeUnit == null) {_			throw new NullPointerException("timeUnit")__		}__		if (timeout == 0) {_			await()__		} else {_			final long deadline = System.nanoTime() + timeUnit.toNanos(timeout)__			long millisToWait___			synchronized (lock) {_				while (!triggered && (millisToWait = (deadline - System.nanoTime()) / 1_000_000) > 0) {_					lock.wait(millisToWait)__				}__				if (!triggered) {_					throw new TimeoutException()__				}_			}_		}_	};waits,until,link,trigger,is,called,once,code,trigger,has,been,called,this,call,will,always,return,immediately,p,if,the,latch,is,not,triggered,within,the,given,timeout,a,code,timeout,exception,will,be,thrown,after,the,timeout,p,a,timeout,value,of,zero,means,infinite,timeout,and,make,this,equivalent,to,link,await,param,timeout,the,value,of,the,timeout,a,value,of,zero,indicating,infinite,timeout,param,time,unit,the,unit,of,the,timeout,throws,interrupted,exception,thrown,if,the,thread,is,interrupted,while,waiting,throws,timeout,exception,thrown,if,the,latch,is,not,triggered,within,the,timeout,time;public,void,await,long,timeout,time,unit,time,unit,throws,interrupted,exception,timeout,exception,if,timeout,0,throw,new,illegal,argument,exception,time,may,not,be,negative,if,time,unit,null,throw,new,null,pointer,exception,time,unit,if,timeout,0,await,else,final,long,deadline,system,nano,time,time,unit,to,nanos,timeout,long,millis,to,wait,synchronized,lock,while,triggered,millis,to,wait,deadline,system,nano,time,0,lock,wait,millis,to,wait,if,triggered,throw,new,timeout,exception
OneShotLatch -> public void await(long timeout, TimeUnit timeUnit) throws InterruptedException, TimeoutException;1480698613;Waits until {@link #trigger())} is called. Once {@code #trigger()} has been called this_call will always return immediately.__<p>If the latch is not triggered within the given timeout, a {@code TimeoutException}_will be thrown after the timeout.__<p>A timeout value of zero means infinite timeout and make this equivalent to {@link #await()}.__@param timeout   The value of the timeout, a value of zero indicating infinite timeout._@param timeUnit  The unit of the timeout__@throws InterruptedException Thrown if the thread is interrupted while waiting._@throws TimeoutException Thrown, if the latch is not triggered within the timeout time.;public void await(long timeout, TimeUnit timeUnit) throws InterruptedException, TimeoutException {_		if (timeout < 0) {_			throw new IllegalArgumentException("time may not be negative")__		}_		if (timeUnit == null) {_			throw new NullPointerException("timeUnit")__		}__		if (timeout == 0) {_			await()__		} else {_			final long deadline = System.nanoTime() + timeUnit.toNanos(timeout)__			long millisToWait___			synchronized (lock) {_				while (!triggered && (millisToWait = (deadline - System.nanoTime()) / 1_000_000) > 0) {_					lock.wait(millisToWait)__				}__				if (!triggered) {_					throw new TimeoutException()__				}_			}_		}_	};waits,until,link,trigger,is,called,once,code,trigger,has,been,called,this,call,will,always,return,immediately,p,if,the,latch,is,not,triggered,within,the,given,timeout,a,code,timeout,exception,will,be,thrown,after,the,timeout,p,a,timeout,value,of,zero,means,infinite,timeout,and,make,this,equivalent,to,link,await,param,timeout,the,value,of,the,timeout,a,value,of,zero,indicating,infinite,timeout,param,time,unit,the,unit,of,the,timeout,throws,interrupted,exception,thrown,if,the,thread,is,interrupted,while,waiting,throws,timeout,exception,thrown,if,the,latch,is,not,triggered,within,the,timeout,time;public,void,await,long,timeout,time,unit,time,unit,throws,interrupted,exception,timeout,exception,if,timeout,0,throw,new,illegal,argument,exception,time,may,not,be,negative,if,time,unit,null,throw,new,null,pointer,exception,time,unit,if,timeout,0,await,else,final,long,deadline,system,nano,time,time,unit,to,nanos,timeout,long,millis,to,wait,synchronized,lock,while,triggered,millis,to,wait,deadline,system,nano,time,0,lock,wait,millis,to,wait,if,triggered,throw,new,timeout,exception
OneShotLatch -> public void await(long timeout, TimeUnit timeUnit) throws InterruptedException, TimeoutException;1481715812;Waits until {@link #trigger())} is called. Once {@code #trigger()} has been called this_call will always return immediately.__<p>If the latch is not triggered within the given timeout, a {@code TimeoutException}_will be thrown after the timeout.__<p>A timeout value of zero means infinite timeout and make this equivalent to {@link #await()}.__@param timeout   The value of the timeout, a value of zero indicating infinite timeout._@param timeUnit  The unit of the timeout__@throws InterruptedException Thrown if the thread is interrupted while waiting._@throws TimeoutException Thrown, if the latch is not triggered within the timeout time.;public void await(long timeout, TimeUnit timeUnit) throws InterruptedException, TimeoutException {_		if (timeout < 0) {_			throw new IllegalArgumentException("time may not be negative")__		}_		if (timeUnit == null) {_			throw new NullPointerException("timeUnit")__		}__		if (timeout == 0) {_			await()__		} else {_			final long deadline = System.nanoTime() + timeUnit.toNanos(timeout)__			long millisToWait___			synchronized (lock) {_				while (!triggered && (millisToWait = (deadline - System.nanoTime()) / 1_000_000) > 0) {_					lock.wait(millisToWait)__				}__				if (!triggered) {_					throw new TimeoutException()__				}_			}_		}_	};waits,until,link,trigger,is,called,once,code,trigger,has,been,called,this,call,will,always,return,immediately,p,if,the,latch,is,not,triggered,within,the,given,timeout,a,code,timeout,exception,will,be,thrown,after,the,timeout,p,a,timeout,value,of,zero,means,infinite,timeout,and,make,this,equivalent,to,link,await,param,timeout,the,value,of,the,timeout,a,value,of,zero,indicating,infinite,timeout,param,time,unit,the,unit,of,the,timeout,throws,interrupted,exception,thrown,if,the,thread,is,interrupted,while,waiting,throws,timeout,exception,thrown,if,the,latch,is,not,triggered,within,the,timeout,time;public,void,await,long,timeout,time,unit,time,unit,throws,interrupted,exception,timeout,exception,if,timeout,0,throw,new,illegal,argument,exception,time,may,not,be,negative,if,time,unit,null,throw,new,null,pointer,exception,time,unit,if,timeout,0,await,else,final,long,deadline,system,nano,time,time,unit,to,nanos,timeout,long,millis,to,wait,synchronized,lock,while,triggered,millis,to,wait,deadline,system,nano,time,0,lock,wait,millis,to,wait,if,triggered,throw,new,timeout,exception
OneShotLatch -> public void await(long timeout, TimeUnit timeUnit) throws InterruptedException, TimeoutException;1482249704;Waits until {@link OneShotLatch#trigger())} is called. Once {@code #trigger()} has been called this_call will always return immediately.__<p>If the latch is not triggered within the given timeout, a {@code TimeoutException}_will be thrown after the timeout.__<p>A timeout value of zero means infinite timeout and make this equivalent to {@link #await()}.__@param timeout   The value of the timeout, a value of zero indicating infinite timeout._@param timeUnit  The unit of the timeout__@throws InterruptedException Thrown if the thread is interrupted while waiting._@throws TimeoutException Thrown, if the latch is not triggered within the timeout time.;public void await(long timeout, TimeUnit timeUnit) throws InterruptedException, TimeoutException {_		if (timeout < 0) {_			throw new IllegalArgumentException("time may not be negative")__		}_		if (timeUnit == null) {_			throw new NullPointerException("timeUnit")__		}__		if (timeout == 0) {_			await()__		} else {_			final long deadline = System.nanoTime() + timeUnit.toNanos(timeout)__			long millisToWait___			synchronized (lock) {_				while (!triggered && (millisToWait = (deadline - System.nanoTime()) / 1_000_000) > 0) {_					lock.wait(millisToWait)__				}__				if (!triggered) {_					throw new TimeoutException()__				}_			}_		}_	};waits,until,link,one,shot,latch,trigger,is,called,once,code,trigger,has,been,called,this,call,will,always,return,immediately,p,if,the,latch,is,not,triggered,within,the,given,timeout,a,code,timeout,exception,will,be,thrown,after,the,timeout,p,a,timeout,value,of,zero,means,infinite,timeout,and,make,this,equivalent,to,link,await,param,timeout,the,value,of,the,timeout,a,value,of,zero,indicating,infinite,timeout,param,time,unit,the,unit,of,the,timeout,throws,interrupted,exception,thrown,if,the,thread,is,interrupted,while,waiting,throws,timeout,exception,thrown,if,the,latch,is,not,triggered,within,the,timeout,time;public,void,await,long,timeout,time,unit,time,unit,throws,interrupted,exception,timeout,exception,if,timeout,0,throw,new,illegal,argument,exception,time,may,not,be,negative,if,time,unit,null,throw,new,null,pointer,exception,time,unit,if,timeout,0,await,else,final,long,deadline,system,nano,time,time,unit,to,nanos,timeout,long,millis,to,wait,synchronized,lock,while,triggered,millis,to,wait,deadline,system,nano,time,0,lock,wait,millis,to,wait,if,triggered,throw,new,timeout,exception
OneShotLatch -> public void await(long timeout, TimeUnit timeUnit) throws InterruptedException, TimeoutException;1487636187;Waits until {@link OneShotLatch#trigger()} is called. Once {@code #trigger()} has been called this_call will always return immediately.__<p>If the latch is not triggered within the given timeout, a {@code TimeoutException}_will be thrown after the timeout.__<p>A timeout value of zero means infinite timeout and make this equivalent to {@link #await()}.__@param timeout   The value of the timeout, a value of zero indicating infinite timeout._@param timeUnit  The unit of the timeout__@throws InterruptedException Thrown if the thread is interrupted while waiting._@throws TimeoutException Thrown, if the latch is not triggered within the timeout time.;public void await(long timeout, TimeUnit timeUnit) throws InterruptedException, TimeoutException {_		if (timeout < 0) {_			throw new IllegalArgumentException("time may not be negative")__		}_		if (timeUnit == null) {_			throw new NullPointerException("timeUnit")__		}__		if (timeout == 0) {_			await()__		} else {_			final long deadline = System.nanoTime() + timeUnit.toNanos(timeout)__			long millisToWait___			synchronized (lock) {_				while (!triggered && (millisToWait = (deadline - System.nanoTime()) / 1_000_000) > 0) {_					lock.wait(millisToWait)__				}__				if (!triggered) {_					throw new TimeoutException()__				}_			}_		}_	};waits,until,link,one,shot,latch,trigger,is,called,once,code,trigger,has,been,called,this,call,will,always,return,immediately,p,if,the,latch,is,not,triggered,within,the,given,timeout,a,code,timeout,exception,will,be,thrown,after,the,timeout,p,a,timeout,value,of,zero,means,infinite,timeout,and,make,this,equivalent,to,link,await,param,timeout,the,value,of,the,timeout,a,value,of,zero,indicating,infinite,timeout,param,time,unit,the,unit,of,the,timeout,throws,interrupted,exception,thrown,if,the,thread,is,interrupted,while,waiting,throws,timeout,exception,thrown,if,the,latch,is,not,triggered,within,the,timeout,time;public,void,await,long,timeout,time,unit,time,unit,throws,interrupted,exception,timeout,exception,if,timeout,0,throw,new,illegal,argument,exception,time,may,not,be,negative,if,time,unit,null,throw,new,null,pointer,exception,time,unit,if,timeout,0,await,else,final,long,deadline,system,nano,time,time,unit,to,nanos,timeout,long,millis,to,wait,synchronized,lock,while,triggered,millis,to,wait,deadline,system,nano,time,0,lock,wait,millis,to,wait,if,triggered,throw,new,timeout,exception
OneShotLatch -> public void await(long timeout, TimeUnit timeUnit) throws InterruptedException, TimeoutException;1495790937;Waits until {@link OneShotLatch#trigger()} is called. Once {@code #trigger()} has been called this_call will always return immediately.__<p>If the latch is not triggered within the given timeout, a {@code TimeoutException}_will be thrown after the timeout.__<p>A timeout value of zero means infinite timeout and make this equivalent to {@link #await()}.__@param timeout   The value of the timeout, a value of zero indicating infinite timeout._@param timeUnit  The unit of the timeout__@throws InterruptedException Thrown if the thread is interrupted while waiting._@throws TimeoutException Thrown, if the latch is not triggered within the timeout time.;public void await(long timeout, TimeUnit timeUnit) throws InterruptedException, TimeoutException {_		if (timeout < 0) {_			throw new IllegalArgumentException("time may not be negative")__		}_		if (timeUnit == null) {_			throw new NullPointerException("timeUnit")__		}__		if (timeout == 0) {_			await()__		} else {_			final long deadline = System.nanoTime() + timeUnit.toNanos(timeout)__			long millisToWait___			synchronized (lock) {_				while (!triggered && (millisToWait = (deadline - System.nanoTime()) / 1_000_000) > 0) {_					lock.wait(millisToWait)__				}__				if (!triggered) {_					throw new TimeoutException()__				}_			}_		}_	};waits,until,link,one,shot,latch,trigger,is,called,once,code,trigger,has,been,called,this,call,will,always,return,immediately,p,if,the,latch,is,not,triggered,within,the,given,timeout,a,code,timeout,exception,will,be,thrown,after,the,timeout,p,a,timeout,value,of,zero,means,infinite,timeout,and,make,this,equivalent,to,link,await,param,timeout,the,value,of,the,timeout,a,value,of,zero,indicating,infinite,timeout,param,time,unit,the,unit,of,the,timeout,throws,interrupted,exception,thrown,if,the,thread,is,interrupted,while,waiting,throws,timeout,exception,thrown,if,the,latch,is,not,triggered,within,the,timeout,time;public,void,await,long,timeout,time,unit,time,unit,throws,interrupted,exception,timeout,exception,if,timeout,0,throw,new,illegal,argument,exception,time,may,not,be,negative,if,time,unit,null,throw,new,null,pointer,exception,time,unit,if,timeout,0,await,else,final,long,deadline,system,nano,time,time,unit,to,nanos,timeout,long,millis,to,wait,synchronized,lock,while,triggered,millis,to,wait,deadline,system,nano,time,0,lock,wait,millis,to,wait,if,triggered,throw,new,timeout,exception
OneShotLatch -> public void await(long timeout, TimeUnit timeUnit) throws InterruptedException, TimeoutException;1534854671;Waits until {@link OneShotLatch#trigger()} is called. Once {@code #trigger()} has been called this_call will always return immediately.__<p>If the latch is not triggered within the given timeout, a {@code TimeoutException}_will be thrown after the timeout.__<p>A timeout value of zero means infinite timeout and make this equivalent to {@link #await()}.__@param timeout   The value of the timeout, a value of zero indicating infinite timeout._@param timeUnit  The unit of the timeout__@throws InterruptedException Thrown if the thread is interrupted while waiting._@throws TimeoutException Thrown, if the latch is not triggered within the timeout time.;public void await(long timeout, TimeUnit timeUnit) throws InterruptedException, TimeoutException {_		if (timeout < 0) {_			throw new IllegalArgumentException("time may not be negative")__		}_		if (timeUnit == null) {_			throw new NullPointerException("timeUnit")__		}__		if (timeout == 0) {_			await()__		} else {_			final long deadline = System.nanoTime() + timeUnit.toNanos(timeout)__			long millisToWait___			synchronized (lock) {_				while (!triggered && (millisToWait = (deadline - System.nanoTime()) / 1_000_000) > 0) {_					lock.wait(millisToWait)__				}__				if (!triggered) {_					throw new TimeoutException()__				}_			}_		}_	};waits,until,link,one,shot,latch,trigger,is,called,once,code,trigger,has,been,called,this,call,will,always,return,immediately,p,if,the,latch,is,not,triggered,within,the,given,timeout,a,code,timeout,exception,will,be,thrown,after,the,timeout,p,a,timeout,value,of,zero,means,infinite,timeout,and,make,this,equivalent,to,link,await,param,timeout,the,value,of,the,timeout,a,value,of,zero,indicating,infinite,timeout,param,time,unit,the,unit,of,the,timeout,throws,interrupted,exception,thrown,if,the,thread,is,interrupted,while,waiting,throws,timeout,exception,thrown,if,the,latch,is,not,triggered,within,the,timeout,time;public,void,await,long,timeout,time,unit,time,unit,throws,interrupted,exception,timeout,exception,if,timeout,0,throw,new,illegal,argument,exception,time,may,not,be,negative,if,time,unit,null,throw,new,null,pointer,exception,time,unit,if,timeout,0,await,else,final,long,deadline,system,nano,time,time,unit,to,nanos,timeout,long,millis,to,wait,synchronized,lock,while,triggered,millis,to,wait,deadline,system,nano,time,0,lock,wait,millis,to,wait,if,triggered,throw,new,timeout,exception
OneShotLatch -> public void await() throws InterruptedException;1467726586;Waits until {@link #trigger())} is called. Once {@code trigger()} has been called this_call will always return immediately.;public void await() throws InterruptedException {_		synchronized (lock) {_			while (!triggered) {_				lock.wait()__			}_		}_	};waits,until,link,trigger,is,called,once,code,trigger,has,been,called,this,call,will,always,return,immediately;public,void,await,throws,interrupted,exception,synchronized,lock,while,triggered,lock,wait
OneShotLatch -> public void await() throws InterruptedException;1470405838;Waits until {@link #trigger())} is called. Once {@code #trigger()} has been called this_call will always return immediately.;public void await() throws InterruptedException {_		synchronized (lock) {_			while (!triggered) {_				lock.wait()__			}_		}_	};waits,until,link,trigger,is,called,once,code,trigger,has,been,called,this,call,will,always,return,immediately;public,void,await,throws,interrupted,exception,synchronized,lock,while,triggered,lock,wait
OneShotLatch -> public void await() throws InterruptedException;1472066344;Waits until {@link #trigger())} is called. Once {@code #trigger()} has been called this_call will always return immediately.__@throws InterruptedException Thrown if the thread is interrupted while waiting.;public void await() throws InterruptedException {_		synchronized (lock) {_			while (!triggered) {_				lock.wait()__			}_		}_	};waits,until,link,trigger,is,called,once,code,trigger,has,been,called,this,call,will,always,return,immediately,throws,interrupted,exception,thrown,if,the,thread,is,interrupted,while,waiting;public,void,await,throws,interrupted,exception,synchronized,lock,while,triggered,lock,wait
OneShotLatch -> public void await() throws InterruptedException;1480698613;Waits until {@link #trigger())} is called. Once {@code #trigger()} has been called this_call will always return immediately.__@throws InterruptedException Thrown if the thread is interrupted while waiting.;public void await() throws InterruptedException {_		synchronized (lock) {_			while (!triggered) {_				lock.wait()__			}_		}_	};waits,until,link,trigger,is,called,once,code,trigger,has,been,called,this,call,will,always,return,immediately,throws,interrupted,exception,thrown,if,the,thread,is,interrupted,while,waiting;public,void,await,throws,interrupted,exception,synchronized,lock,while,triggered,lock,wait
OneShotLatch -> public void await() throws InterruptedException;1481715812;Waits until {@link #trigger())} is called. Once {@code #trigger()} has been called this_call will always return immediately.__@throws InterruptedException Thrown if the thread is interrupted while waiting.;public void await() throws InterruptedException {_		synchronized (lock) {_			while (!triggered) {_				lock.wait()__			}_		}_	};waits,until,link,trigger,is,called,once,code,trigger,has,been,called,this,call,will,always,return,immediately,throws,interrupted,exception,thrown,if,the,thread,is,interrupted,while,waiting;public,void,await,throws,interrupted,exception,synchronized,lock,while,triggered,lock,wait
OneShotLatch -> public void await() throws InterruptedException;1482249704;Waits until {@link OneShotLatch#trigger())} is called. Once {@code trigger()} has been called this_call will always return immediately.__@throws InterruptedException Thrown if the thread is interrupted while waiting.;public void await() throws InterruptedException {_		synchronized (lock) {_			while (!triggered) {_				lock.wait()__			}_		}_	};waits,until,link,one,shot,latch,trigger,is,called,once,code,trigger,has,been,called,this,call,will,always,return,immediately,throws,interrupted,exception,thrown,if,the,thread,is,interrupted,while,waiting;public,void,await,throws,interrupted,exception,synchronized,lock,while,triggered,lock,wait
OneShotLatch -> public void await() throws InterruptedException;1487636187;Waits until {@link OneShotLatch#trigger()} is called. Once {@code trigger()} has been called this_call will always return immediately.__@throws InterruptedException Thrown if the thread is interrupted while waiting.;public void await() throws InterruptedException {_		synchronized (lock) {_			while (!triggered) {_				lock.wait()__			}_		}_	};waits,until,link,one,shot,latch,trigger,is,called,once,code,trigger,has,been,called,this,call,will,always,return,immediately,throws,interrupted,exception,thrown,if,the,thread,is,interrupted,while,waiting;public,void,await,throws,interrupted,exception,synchronized,lock,while,triggered,lock,wait
OneShotLatch -> public void await() throws InterruptedException;1495790937;Waits until {@link OneShotLatch#trigger()} is called. Once {@code trigger()} has been called this_call will always return immediately.__@throws InterruptedException Thrown if the thread is interrupted while waiting.;public void await() throws InterruptedException {_		synchronized (lock) {_			while (!triggered) {_				lock.wait()__			}_		}_	};waits,until,link,one,shot,latch,trigger,is,called,once,code,trigger,has,been,called,this,call,will,always,return,immediately,throws,interrupted,exception,thrown,if,the,thread,is,interrupted,while,waiting;public,void,await,throws,interrupted,exception,synchronized,lock,while,triggered,lock,wait
OneShotLatch -> public void await() throws InterruptedException;1534854671;Waits until {@link OneShotLatch#trigger()} is called. Once {@code trigger()} has been called this_call will always return immediately.__@throws InterruptedException Thrown if the thread is interrupted while waiting.;public void await() throws InterruptedException {_		synchronized (lock) {_			while (!triggered) {_				Thread thread = Thread.currentThread()__				try {_					waitersSet.add(thread)__					lock.wait()__				} finally {_					waitersSet.remove(thread)__				}_			}_		}_	};waits,until,link,one,shot,latch,trigger,is,called,once,code,trigger,has,been,called,this,call,will,always,return,immediately,throws,interrupted,exception,thrown,if,the,thread,is,interrupted,while,waiting;public,void,await,throws,interrupted,exception,synchronized,lock,while,triggered,thread,thread,thread,current,thread,try,waiters,set,add,thread,lock,wait,finally,waiters,set,remove,thread
OneShotLatch -> public boolean isTriggered();1472066344;Checks if the latch was triggered.__@return True, if the latch was triggered, false if not.;public boolean isTriggered() {_		return triggered__	};checks,if,the,latch,was,triggered,return,true,if,the,latch,was,triggered,false,if,not;public,boolean,is,triggered,return,triggered
OneShotLatch -> public boolean isTriggered();1480698613;Checks if the latch was triggered.__@return True, if the latch was triggered, false if not.;public boolean isTriggered() {_		return triggered__	};checks,if,the,latch,was,triggered,return,true,if,the,latch,was,triggered,false,if,not;public,boolean,is,triggered,return,triggered
OneShotLatch -> public boolean isTriggered();1481715812;Checks if the latch was triggered.__@return True, if the latch was triggered, false if not.;public boolean isTriggered() {_		return triggered__	};checks,if,the,latch,was,triggered,return,true,if,the,latch,was,triggered,false,if,not;public,boolean,is,triggered,return,triggered
OneShotLatch -> public boolean isTriggered();1482249704;Checks if the latch was triggered.__@return True, if the latch was triggered, false if not.;public boolean isTriggered() {_		return triggered__	};checks,if,the,latch,was,triggered,return,true,if,the,latch,was,triggered,false,if,not;public,boolean,is,triggered,return,triggered
OneShotLatch -> public boolean isTriggered();1487636187;Checks if the latch was triggered.__@return True, if the latch was triggered, false if not.;public boolean isTriggered() {_		return triggered__	};checks,if,the,latch,was,triggered,return,true,if,the,latch,was,triggered,false,if,not;public,boolean,is,triggered,return,triggered
OneShotLatch -> public boolean isTriggered();1495790937;Checks if the latch was triggered.__@return True, if the latch was triggered, false if not.;public boolean isTriggered() {_		return triggered__	};checks,if,the,latch,was,triggered,return,true,if,the,latch,was,triggered,false,if,not;public,boolean,is,triggered,return,triggered
OneShotLatch -> public boolean isTriggered();1534854671;Checks if the latch was triggered.__@return True, if the latch was triggered, false if not.;public boolean isTriggered() {_		return triggered__	};checks,if,the,latch,was,triggered,return,true,if,the,latch,was,triggered,false,if,not;public,boolean,is,triggered,return,triggered
OneShotLatch -> public void reset();1480698613;resets the latch to triggered = false;public void reset() {_		synchronized (lock) {_			triggered = false__		}_	};resets,the,latch,to,triggered,false;public,void,reset,synchronized,lock,triggered,false
OneShotLatch -> public void reset();1481715812;resets the latch to triggered = false;public void reset() {_		synchronized (lock) {_			triggered = false__		}_	};resets,the,latch,to,triggered,false;public,void,reset,synchronized,lock,triggered,false
OneShotLatch -> public void reset();1482249704;resets the latch to triggered = false;public void reset() {_		synchronized (lock) {_			triggered = false__		}_	};resets,the,latch,to,triggered,false;public,void,reset,synchronized,lock,triggered,false
OneShotLatch -> public void reset();1487636187;resets the latch to triggered = false;public void reset() {_		synchronized (lock) {_			triggered = false__		}_	};resets,the,latch,to,triggered,false;public,void,reset,synchronized,lock,triggered,false
OneShotLatch -> public void reset();1495790937;Resets the latch so that {@link #isTriggered()} returns false.;public void reset() {_		synchronized (lock) {_			triggered = false__		}_	};resets,the,latch,so,that,link,is,triggered,returns,false;public,void,reset,synchronized,lock,triggered,false
OneShotLatch -> public void reset();1534854671;Resets the latch so that {@link #isTriggered()} returns false.;public void reset() {_		synchronized (lock) {_			triggered = false__		}_	};resets,the,latch,so,that,link,is,triggered,returns,false;public,void,reset,synchronized,lock,triggered,false
