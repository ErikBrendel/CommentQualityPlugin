commented;modifiers;parameterAmount;loc;comment;code
true;public;0;6;/**  * Fires the latch. Code that is blocked on {@link #await()} will now return.  */ ;/**  * Fires the latch. Code that is blocked on {@link #await()} will now return.  */ public void trigger() {     synchronized (lock) {         triggered = true.         lock.notifyAll().     } }
true;public;0;8;/**  * Waits until {@link #trigger()} is called.  */ ;/**  * Waits until {@link #trigger()} is called.  */ public void await() throws InterruptedException {     synchronized (lock) {         while (!triggered) {             lock.wait().         }         triggered = false.     } }
true;public;0;3;/**  * Checks if the latch was triggered.  *  * @return True, if the latch was triggered, false if not.  */ ;/**  * Checks if the latch was triggered.  *  * @return True, if the latch was triggered, false if not.  */ public boolean isTriggered() {     return triggered. }
