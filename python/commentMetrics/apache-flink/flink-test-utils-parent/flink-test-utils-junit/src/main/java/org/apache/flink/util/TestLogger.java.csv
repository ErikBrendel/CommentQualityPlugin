commented;modifiers;parameterAmount;loc;comment;code
false;public;1;7;;@Override public void starting(Description description) {     log.info("\n================================================================================" + "\nTest {} is running." + "\n--------------------------------------------------------------------------------", description). }
false;public;1;7;;@Override public void succeeded(Description description) {     log.info("\n--------------------------------------------------------------------------------" + "\nTest {} successfully run." + "\n================================================================================", description). }
false;public;2;7;;@Override public void failed(Throwable e, Description description) {     log.error("\n--------------------------------------------------------------------------------" + "\nTest {} failed with:\n{}" + "\n================================================================================", description, exceptionToString(e)). }
false;private,static;1;16;;private static String exceptionToString(Throwable t) {     if (t == null) {         return "(null)".     }     try {         StringWriter stm = new StringWriter().         PrintWriter wrt = new PrintWriter(stm).         t.printStackTrace(wrt).         wrt.close().         return stm.toString().     } catch (Throwable ignored) {         return t.getClass().getName() + " (error while printing stack trace)".     } }
