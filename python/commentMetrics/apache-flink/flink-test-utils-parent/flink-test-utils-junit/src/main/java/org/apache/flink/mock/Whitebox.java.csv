commented;modifiers;parameterAmount;loc;comment;code
false;public,static;2;10;;public static Object getInternalState(Object target, String field) {     Class<?> c = target.getClass().     try {         Field f = getFieldFromHierarchy(c, field).         f.setAccessible(true).         return f.get(target).     } catch (Exception e) {         throw new RuntimeException("Unable to set internal state on a private field. Please report to mockito mailing list.", e).     } }
false;public,static;3;10;;public static void setInternalState(Object target, String field, Object value) {     Class<?> c = target.getClass().     try {         Field f = getFieldFromHierarchy(c, field).         f.setAccessible(true).         f.set(target, value).     } catch (Exception e) {         throw new RuntimeException("Unable to set internal state on a private field. Please report to mockito mailing list.", e).     } }
false;private,static;2;14;;private static Field getFieldFromHierarchy(Class<?> clazz, String field) {     Field f = getField(clazz, field).     while (f == null && clazz != Object.class) {         clazz = clazz.getSuperclass().         f = getField(clazz, field).     }     if (f == null) {         throw new RuntimeException("You want me to set value to this field: '" + field + "' on this class: '" + clazz.getSimpleName() + "' but this field is not declared withing hierarchy of this class!").     }     return f. }
false;private,static;2;7;;private static Field getField(Class<?> clazz, String field) {     try {         return clazz.getDeclaredField(field).     } catch (NoSuchFieldException e) {         return null.     } }
