commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void testProxy() throws Exception {     try (EchoServer echoServer = new EchoServer(SOCKET_TIMEOUT).         NetworkFailuresProxy proxy = new NetworkFailuresProxy(0, "localhost", echoServer.getLocalPort()).         EchoClient echoClient = new EchoClient("localhost", proxy.getLocalPort(), SOCKET_TIMEOUT)) {         echoServer.start().         assertEquals("42", echoClient.write("42")).         assertEquals("Ala ma kota!", echoClient.write("Ala ma kota!")).     } }
false;public;0;14;;@Test public void testMultipleConnections() throws Exception {     try (EchoServer echoServer = new EchoServer(SOCKET_TIMEOUT).         NetworkFailuresProxy proxy = new NetworkFailuresProxy(0, "localhost", echoServer.getLocalPort()).         EchoClient echoClient1 = new EchoClient("localhost", proxy.getLocalPort(), SOCKET_TIMEOUT).         EchoClient echoClient2 = new EchoClient("localhost", proxy.getLocalPort(), SOCKET_TIMEOUT)) {         echoServer.start().         assertEquals("42", echoClient1.write("42")).         assertEquals("Ala ma kota!", echoClient2.write("Ala ma kota!")).         assertEquals("Ala hat eine Katze!", echoClient1.write("Ala hat eine Katze!")).     } }
false;public;0;30;;@Test public void testBlockTraffic() throws Exception {     try (EchoServer echoServer = new EchoServer(SOCKET_TIMEOUT).         NetworkFailuresProxy proxy = new NetworkFailuresProxy(0, "localhost", echoServer.getLocalPort())) {         echoServer.start().         try (EchoClient echoClient = new EchoClient("localhost", proxy.getLocalPort(), SOCKET_TIMEOUT)) {             assertEquals("42", echoClient.write("42")).             proxy.blockTraffic().             try {                 echoClient.write("Ala ma kota!").             } catch (SocketException ex) {                 assertEquals("Connection reset", ex.getMessage()).             }         }         try (EchoClient echoClient = new EchoClient("localhost", proxy.getLocalPort(), SOCKET_TIMEOUT)) {             assertEquals(null, echoClient.write("42")).         } catch (SocketException ex) {             assertEquals("Connection reset", ex.getMessage()).         }         proxy.unblockTraffic().         try (EchoClient echoClient = new EchoClient("localhost", proxy.getLocalPort(), SOCKET_TIMEOUT)) {             assertEquals("42", echoClient.write("42")).             assertEquals("Ala ma kota!", echoClient.write("Ala ma kota!")).         }     } }
false;public;1;4;;public String write(String message) throws IOException {     output.println(message).     return input.readLine(). }
false;public;0;6;;@Override public void close() throws Exception {     input.close().     output.close().     socket.close(). }
