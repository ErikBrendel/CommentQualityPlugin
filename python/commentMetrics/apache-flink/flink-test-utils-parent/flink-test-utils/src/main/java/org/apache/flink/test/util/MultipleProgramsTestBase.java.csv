commented;modifiers;parameterAmount;loc;comment;code
false;public;0;23;;// ------------------------------------------------------------------------ // Environment setup & teardown // ------------------------------------------------------------------------ @Before public void setupEnvironment() {     TestEnvironment testEnvironment.     switch(mode) {         case CLUSTER:             // This only works because of the quirks we built in the TestEnvironment.             // We should refactor this in the future!!!             testEnvironment = miniClusterResource.getTestEnvironment().             testEnvironment.getConfig().disableObjectReuse().             testEnvironment.setAsContext().             break.         case CLUSTER_OBJECT_REUSE:             // This only works because of the quirks we built in the TestEnvironment.             // We should refactor this in the future!!!             testEnvironment = miniClusterResource.getTestEnvironment().             testEnvironment.getConfig().enableObjectReuse().             testEnvironment.setAsContext().             break.         case COLLECTION:             new CollectionTestEnvironment().setAsContext().             break.     } }
false;public;0;12;;@After public void teardownEnvironment() {     switch(mode) {         case CLUSTER:         case CLUSTER_OBJECT_REUSE:             TestEnvironment.unsetAsContext().             break.         case COLLECTION:             CollectionTestEnvironment.unsetAsContext().             break.     } }
false;public,static;0;6;;// ------------------------------------------------------------------------ // Parametrization lets the tests run in cluster and collection mode // ------------------------------------------------------------------------ @Parameterized.Parameters(name = "Execution mode = {0}") public static Collection<Object[]> executionModes() {     return Arrays.asList(new Object[] { TestExecutionMode.CLUSTER }, new Object[] { TestExecutionMode.COLLECTION }). }
