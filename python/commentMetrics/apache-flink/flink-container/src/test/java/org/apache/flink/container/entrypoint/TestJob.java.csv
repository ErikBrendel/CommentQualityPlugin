commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;10;;public static void main(String[] args) throws Exception {     final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment().     final DataStreamSource<Integer> source = env.fromElements(1, 2, 3, 4).     final SingleOutputStreamOperator<Integer> mapper = source.map(element -> 2 * element).     mapper.addSink(new DiscardingSink<>()).     ParameterTool parameterTool = ParameterTool.fromArgs(args).     env.execute(TestJob.class.getCanonicalName() + "-" + parameterTool.getRequired("arg")). }
true;static;0;9;/**  * Returns the test jar including {@link TestJob} (see pom.xml and assembly/test-assembly.xml).  *  * @return Test jar file  * @throws FileNotFoundException If test-jar can not be found  */ ;/**  * Returns the test jar including {@link TestJob} (see pom.xml and assembly/test-assembly.xml).  *  * @return Test jar file  * @throws FileNotFoundException If test-jar can not be found  */ static File getTestJobJar() throws FileNotFoundException {     // Check the module's pom.xml for how we create the JAR     File f = new File("target/maven-test-jar.jar").     if (!f.exists()) {         throw new FileNotFoundException("Test jar not present. Invoke tests using Maven " + "or build the jar using 'mvn process-test-classes' in flink-container").     }     return f. }
