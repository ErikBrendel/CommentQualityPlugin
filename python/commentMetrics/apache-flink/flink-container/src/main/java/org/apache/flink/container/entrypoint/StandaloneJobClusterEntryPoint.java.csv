commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;6;;@Override protected DispatcherResourceManagerComponentFactory<?> createDispatcherResourceManagerComponentFactory(Configuration configuration) {     return new JobDispatcherResourceManagerComponentFactory(StandaloneResourceManagerFactory.INSTANCE, new ClassPathJobGraphRetriever(jobId, savepointRestoreSettings, programArguments, jobClassName)). }
false;public,static;1;30;;public static void main(String[] args) {     // startup checks and logging     EnvironmentInformation.logEnvironmentInfo(LOG, StandaloneJobClusterEntryPoint.class.getSimpleName(), args).     SignalHandler.register(LOG).     JvmShutdownSafeguard.installAsShutdownHook(LOG).     final CommandLineParser<StandaloneJobClusterConfiguration> commandLineParser = new CommandLineParser<>(new StandaloneJobClusterConfigurationParserFactory()).     StandaloneJobClusterConfiguration clusterConfiguration = null.     try {         clusterConfiguration = commandLineParser.parse(args).     } catch (Exception e) {         LOG.error("Could not parse command line arguments {}.", args, e).         commandLineParser.printHelp(StandaloneJobClusterEntryPoint.class.getSimpleName()).         System.exit(1).     }     Configuration configuration = loadConfiguration(clusterConfiguration).     configuration.setString(ClusterEntrypoint.EXECUTION_MODE, ExecutionMode.DETACHED.toString()).     StandaloneJobClusterEntryPoint entrypoint = new StandaloneJobClusterEntryPoint(configuration, clusterConfiguration.getJobId(), clusterConfiguration.getSavepointRestoreSettings(), clusterConfiguration.getArgs(), clusterConfiguration.getJobClassName()).     ClusterEntrypoint.runClusterEntrypoint(entrypoint). }
