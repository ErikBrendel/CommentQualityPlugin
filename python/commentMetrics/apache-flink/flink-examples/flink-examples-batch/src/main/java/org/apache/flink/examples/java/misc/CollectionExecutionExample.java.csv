commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String toString() {     return "User{userIdentifier=" + userIdentifier + " name=" + name + "}". }
false;public;0;3;;public String toString() {     return "eMail{userId=" + userId + " subject=" + subject + " body=" + body + "}". }
false;public,static;1;26;;public static void main(String[] args) throws Exception {     // initialize a new Collection-based execution environment     final ExecutionEnvironment env = ExecutionEnvironment.createCollectionsEnvironment().     // create objects for users and emails     User[] usersArray = { new User(1, "Peter"), new User(2, "John"), new User(3, "Bill") }.     EMail[] emailsArray = { new EMail(1, "Re: Meeting", "How about 1pm?"), new EMail(1, "Re: Meeting", "Sorry, I'm not availble"), new EMail(3, "Re: Re: Project proposal", "Give me a few more days to think about it.") }.     // convert objects into a DataSet     DataSet<User> users = env.fromElements(usersArray).     DataSet<EMail> emails = env.fromElements(emailsArray).     // join the two DataSets     DataSet<Tuple2<User, EMail>> joined = users.join(emails).where("userIdentifier").equalTo("userId").     // retrieve the resulting Tuple2 elements into a ArrayList.     List<Tuple2<User, EMail>> result = joined.collect().     // Do some work with the resulting ArrayList (=Collection).     for (Tuple2<User, EMail> t : result) {         System.err.println("Result = " + t).     } }
