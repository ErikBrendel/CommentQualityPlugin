commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;// ------------------------------------------------------------------------ public EventType eventType() {     return eventType. }
false;public;0;3;;public State targetState() {     return targetState. }
false;public;0;3;;public float prob() {     return prob. }
false;public;1;15;;// ------------------------------------------------------------------------ @Override public boolean equals(Object obj) {     if (this == obj) {         return true.     } else if (obj == null || getClass() != obj.getClass()) {         return false.     } else {         final Transition that = (Transition) obj.         return this.eventType == that.eventType && this.targetState == that.targetState && Float.compare(this.prob, that.prob) == 0.     } }
false;public;0;5;;@Override public int hashCode() {     int code = 31 * eventType.hashCode() + targetState.hashCode().     return 31 * code + (prob != +0.0f ? Float.floatToIntBits(prob) : 0). }
false;public;0;4;;@Override public String toString() {     return "--[" + eventType.name() + "]--> " + targetState.name() + " (" + prob + ')'. }
