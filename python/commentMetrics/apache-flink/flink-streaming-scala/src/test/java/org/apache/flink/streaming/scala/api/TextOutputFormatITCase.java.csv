commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Before public void createFile() throws Exception {     File resultFile = createAndRegisterTempFile("result").     resultPath = resultFile.toURI().toString(). }
false;public;0;4;;@Test public void testPath() throws Exception {     OutputFormatTestPrograms.wordCountToText(WordCountData.TEXT, resultPath). }
false;public;0;4;;@Test public void testPathWriteMode() throws Exception {     OutputFormatTestPrograms.wordCountToText(WordCountData.TEXT, resultPath, FileSystem.WriteMode.NO_OVERWRITE). }
false;public;0;10;;@Test public void failPathWriteMode() throws Exception {     OutputFormatTestPrograms.wordCountToText(WordCountData.TEXT, resultPath).     try {         OutputFormatTestPrograms.wordCountToText(WordCountData.TEXT, resultPath, FileSystem.WriteMode.NO_OVERWRITE).         fail("File should exist.").     } catch (Exception e) {         assertTrue(e.getCause().getMessage().contains("File already exists")).     } }
false;public;0;4;;@After public void closeFile() throws Exception {     compareResultsByLinesInMemory(WordCountData.STREAMING_COUNTS_AS_TUPLES, resultPath). }
