commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;8;;@BeforeClass public static void startServer() throws Exception {     // Start the Greeter Server     Object implementor = new GreeterImpl().     String address = "http://localhost:" + port + "/SoapContext/SoapPort".     endpoint = Endpoint.publish(address, implementor).     LOG.info("The WS endpoint is published! "). }
false;public,static;0;8;;@AfterClass public static void stopServer() throws Exception {     // Shutdown the Greeter Server     if (endpoint != null) {         endpoint.stop().         endpoint = null.     } }
false;public;0;20;;@Test public void testMocksAreValid() throws Exception {     assertNotNull(camelContext).     assertNotNull(resultEndpoint).     ProducerTemplate template = camelContext.createProducerTemplate().     template.sendBodyAndHeader("jms:requestQueue", "Willem", CxfConstants.OPERATION_NAME, "greetMe").     // Sleep a while and wait for the message whole processing     Thread.sleep(4000).     template.stop().     MockEndpoint.assertIsSatisfied(camelContext).     List<Exchange> list = resultEndpoint.getReceivedExchanges().     assertEquals("Should get one message", list.size(), 1).     for (Exchange exchange : list) {         String result = (String) exchange.getIn().getBody().         assertEquals("Get the wrong result ", result, "Hello Willem").     } }
