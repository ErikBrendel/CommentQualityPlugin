commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testDynamicRouteWithJms() throws Exception {     String response = template.requestBody("jms:queue:request?replyTo=bar", "foo", String.class).     assertEquals("response is foo", response).     response = template.requestBody("jms:queue:request", "bar", String.class).     assertEquals("response is bar", response). }
false;public;0;9;;@Test public void testDynamicRouteWithDirect() throws Exception {     String response = template.requestBody("direct:start", "foo", String.class).     assertEquals("response is foo", response).     response = template.requestBody("direct:start", "bar", String.class).     assertEquals("response is bar", response). }
false;public;0;6;;public void configure() {     from("jms:queue:request").dynamicRouter().method(MyDynamicRouter.class, "route").     from("direct:start").dynamicRouter(method(new MyDynamicRouter())). }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             from("jms:queue:request").dynamicRouter().method(MyDynamicRouter.class, "route").             from("direct:start").dynamicRouter(method(new MyDynamicRouter())).         }     }. }
false;protected;1;9;;@Override protected void bindToRegistry(Registry registry) throws Exception {     // add ActiveMQ with embedded broker     ConnectionFactory connectionFactory = CamelJmsTestHelper.createConnectionFactory().     JmsComponent amq = jmsComponentAutoAcknowledge(connectionFactory).     amq.setCamelContext(context).     registry.bind("jms", amq).     registry.bind("myBean", new MyBean()). }
false;public;0;3;;public String foo() {     return "response is foo". }
false;public;0;3;;public String bar() {     return "response is bar". }
false;public;2;9;;public String route(String methodName, @Header(Exchange.SLIP_ENDPOINT) String previous) {     if (previous != null && previous.startsWith("bean://myBean?method")) {         // we get the result here and stop routing         return null.     } else {         return "bean:myBean?method=" + methodName.     } }
