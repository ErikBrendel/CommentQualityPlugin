commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testJaxbFallbackTypeConverter() {     Bar bar = new Bar().     bar.setName("camel").     bar.setValue("cool").     String result = template.requestBody("direct:start", bar, String.class).     assertNotNull(result).     assertTrue("Get a wrong xml string", result.indexOf("<bar name=\"camel\" value=\"cool\"/>") > 0).     assertTrue("The pretty print setting is not working", result.indexOf("><bar") > 0). }
false;public;1;9;;@Override public void process(Exchange exchange) throws Exception {     Message in = exchange.getIn().     RequestEntity entity = in.getBody(RequestEntity.class).     assertNull("We should not get the entity here", entity).     InputStream is = in.getMandatoryBody(InputStream.class).     // make sure we can get the InputStream rightly.     exchange.getOut().setBody(is). }
false;public;0;19;;@Override public void configure() throws Exception {     // setup the camel property for the PrettyPrint     context.getGlobalOptions().put(FallbackTypeConverter.PRETTY_PRINT, "false").     from("direct:start").process(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             Message in = exchange.getIn().             RequestEntity entity = in.getBody(RequestEntity.class).             assertNull("We should not get the entity here", entity).             InputStream is = in.getMandatoryBody(InputStream.class).             // make sure we can get the InputStream rightly.             exchange.getOut().setBody(is).         }     }). }
false;protected;0;25;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // setup the camel property for the PrettyPrint             context.getGlobalOptions().put(FallbackTypeConverter.PRETTY_PRINT, "false").             from("direct:start").process(new Processor() {                  @Override                 public void process(Exchange exchange) throws Exception {                     Message in = exchange.getIn().                     RequestEntity entity = in.getBody(RequestEntity.class).                     assertNull("We should not get the entity here", entity).                     InputStream is = in.getMandatoryBody(InputStream.class).                     // make sure we can get the InputStream rightly.                     exchange.getOut().setBody(is).                 }             }).         }     }. }
