commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected AbstractApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/itest/jms/AdviceWithTransactionIssueTest.xml"). }
false;public;0;4;;@Override public boolean isUseAdviceWith() {     return true. }
false;public;0;4;;@Override public void configure() throws Exception {     weaveById("mock-b*").after().to("mock:last"). }
false;public;0;18;;@Test public void testAdviceWithWeaveById() throws Exception {     RouteReifier.adviceWith(context.getRouteDefinitions().get(0), context, new AdviceWithRouteBuilder() {          @Override         public void configure() throws Exception {             weaveById("mock-b*").after().to("mock:last").         }     }).     context.start().     MockEndpoint mockLast = getMockEndpoint("mock:last").     mockLast.expectedBodiesReceived("bar").     mockLast.setExpectedMessageCount(1).     template.sendBody("activemq:queue:start", "bar").     assertMockEndpointsSatisfied(). }
false;public;0;4;;@Override public void configure() throws Exception {     weaveAddLast().to("mock:last"). }
false;public;0;18;;@Test public void testAdviceWithAddLast() throws Exception {     RouteReifier.adviceWith(context.getRouteDefinitions().get(0), context, new AdviceWithRouteBuilder() {          @Override         public void configure() throws Exception {             weaveAddLast().to("mock:last").         }     }).     context.start().     MockEndpoint mockLast = getMockEndpoint("mock:last").     mockLast.expectedBodiesReceived("bar").     mockLast.setExpectedMessageCount(1).     template.sendBody("activemq:queue:start", "bar").     assertMockEndpointsSatisfied(). }
