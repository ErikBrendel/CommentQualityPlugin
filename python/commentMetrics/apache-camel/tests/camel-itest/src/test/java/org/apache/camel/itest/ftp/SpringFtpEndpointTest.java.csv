commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testFtpEndpointAsSpringBean() throws Exception {     result.expectedBodiesReceived("Hello World").     template.sendBodyAndHeader(inputFTP, "Hello World", Exchange.FILE_NAME, "hello.txt").     result.assertIsSatisfied(). }
false;public;0;5;;@Before public void setUp() throws Exception {     initFtpServer().     ftpServer.start(). }
false;public;0;5;;@After public void tearDown() throws Exception {     ftpServer.stop().     ftpServer = null. }
false;protected;0;18;;protected void initFtpServer() throws Exception {     FtpServerFactory serverFactory = new FtpServerFactory().     // setup user management to read our users.properties and use clear text passwords     File file = new File("src/test/resources/users.properties").     UserManager uman = new PropertiesUserManager(new ClearTextPasswordEncryptor(), file, "admin").     serverFactory.setUserManager(uman).     NativeFileSystemFactory fsf = new NativeFileSystemFactory().     fsf.setCreateHome(true).     serverFactory.setFileSystem(fsf).     ListenerFactory factory = new ListenerFactory().     factory.setPort(ftpPort).     serverFactory.addListener("default", factory.createListener()).     ftpServer = serverFactory.createServer(). }
