commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected AbstractApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/itest/greeter/JettyRecipientListCxfIssueTest.xml"). }
false;public;1;5;;@Override public void process(Exchange exchange) throws Exception {     exchange.getIn().setHeader("operationName", "greetMe").     exchange.getIn().setBody(request). }
false;public;0;24;;@Test public void testJettyRecipientListCxf() throws Exception {     final String request = context().getTypeConverter().convertTo(String.class, new File("src/test/resources/greetMe.xml")).     assertNotNull(request).     // send a message to jetty     Exchange out = template.request("jetty:http://0.0.0.0:{{RecipientListCxfTest.port3}}/myapp", new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             exchange.getIn().setHeader("operationName", "greetMe").             exchange.getIn().setBody(request).         }     }).     assertNotNull(out).     assertTrue("Should have out", out.hasOut()).     String body = out.getOut().getBody(String.class).     log.info("Reply from jetty call:\n{}", body).     // we get the last reply as response     assertNotNull(body).     assertTrue("Should have Bye Camel", body.contains("Bye Camel")). }
