commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Before public void setUp() throws Exception {     super.setUp().     context.getStreamCachingStrategy().setSpoolThreshold(16).     context.getStreamCachingStrategy().setSpoolDirectory("target/cachedir").     deleteDirectory("target/cachedir").     createDirectory("target/cachedir"). }
false;public;0;11;;@Test public void testGetWithRelativePath() throws Exception {     String response = template.requestBody("http://localhost:8201/clipboard/download/file", "   ", String.class).     assertEquals("should get the right response", TEST_STRING, response).     File file = new File("target/cachedir").     String[] files = file.list().     assertTrue("There should not have any temp file", files.length == 0). }
false;public;1;3;;public void process(Exchange exchange) throws Exception {     exchange.getOut().setBody(TEST_STRING). }
false;public;0;18;;@Override public void configure() throws Exception {     from("jetty:http://localhost:8201/clipboard/download?chunked=true&matchOnUriPrefix=true").to("http://localhost:9101?bridgeEndpoint=true").     from("jetty:http://localhost:9101?chunked=true&matchOnUriPrefix=true").process(new Processor() {          public void process(Exchange exchange) throws Exception {             exchange.getOut().setBody(TEST_STRING).         }     }). }
false;protected;0;23;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("jetty:http://localhost:8201/clipboard/download?chunked=true&matchOnUriPrefix=true").to("http://localhost:9101?bridgeEndpoint=true").             from("jetty:http://localhost:9101?chunked=true&matchOnUriPrefix=true").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     exchange.getOut().setBody(TEST_STRING).                 }             }).         }     }. }
