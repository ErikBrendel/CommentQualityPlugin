commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected AbstractApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/itest/greeter/MulticastCxfTest-context.xml"). }
false;public;0;24;;@Test public void testMulticastCXF() throws Exception {     replyEndpoint.expectedBodiesReceived("Hello Willem", "Hello Claus", "Hello Jonathan").     reply2Endpoint.expectedBodiesReceived("Bye Willem", "Bye Claus", "Bye Jonathan").     outputEndpoint.expectedBodiesReceived("Bye Willem", "Bye Claus", "Bye Jonathan").     // returns the last message from the recipient list     String out = template.requestBodyAndHeader("direct:start", "Willem", CxfConstants.OPERATION_NAME, "greetMe", String.class).     assertEquals("Bye Willem", out).     // call again to ensure that works also     // returns the last message from the recipient list     String out2 = template.requestBodyAndHeader("direct:start", "Claus", CxfConstants.OPERATION_NAME, "greetMe", String.class).     assertEquals("Bye Claus", out2).     // and call again to ensure that it really works also     // returns the last message from the recipient list     String out3 = template.requestBodyAndHeader("direct:start", "Jonathan", CxfConstants.OPERATION_NAME, "greetMe", String.class).     assertEquals("Bye Jonathan", out3).     replyEndpoint.assertIsSatisfied().     reply2Endpoint.assertIsSatisfied().     outputEndpoint.assertIsSatisfied(). }
