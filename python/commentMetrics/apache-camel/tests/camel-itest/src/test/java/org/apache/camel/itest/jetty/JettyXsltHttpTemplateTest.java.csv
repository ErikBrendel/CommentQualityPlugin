commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Test public void testXsltHttpTemplate() throws Exception {     // give Jetty a bit time to startup and be ready     Thread.sleep(1000).     String xml = template.requestBody("xslt:http://0.0.0.0:" + port + "/myxslt", "<mail><subject>Hey</subject><body>Hello world!</body></mail>", String.class).     assertNotNull("The transformed XML should not be null", xml).     assertTrue(xml.indexOf("transformed") > -1).     // the cheese tag is in the transform.xsl     assertTrue(xml.indexOf("cheese") > -1).     assertTrue(xml.indexOf("<subject>Hey</subject>") > -1).     assertTrue(xml.indexOf("<body>Hello world!</body>") > -1). }
false;public;0;7;;@Override public void configure() throws Exception {     from("jetty:http://0.0.0.0:" + port + "/myxslt").pollEnrich("file://src/test/resources/org/apache/camel/itest/jetty/?fileName=transform.xsl&noop=true&readLock=none", 2000).convertBodyTo(String.class).to("log:transform"). }
false;protected;0;14;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     port = AvailablePortFinder.getNextAvailable(8000).     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("jetty:http://0.0.0.0:" + port + "/myxslt").pollEnrich("file://src/test/resources/org/apache/camel/itest/jetty/?fileName=transform.xsl&noop=true&readLock=none", 2000).convertBodyTo(String.class).to("log:transform").         }     }. }
