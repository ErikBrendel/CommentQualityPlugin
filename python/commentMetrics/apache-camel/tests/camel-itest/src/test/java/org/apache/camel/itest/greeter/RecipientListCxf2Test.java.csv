commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected AbstractApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/itest/greeter/RecipientListCxf2Test-context.xml"). }
false;public;0;44;;@Test public void testRecipientListCXF2() throws Exception {     replyEndpoint.expectedBodiesReceived("Hello Willem", "Hello Jonathan", "Hello Freeman").     reply2Endpoint.expectedBodiesReceived("Bye Claus", "Bye Jonathan", "Bye Freeman").     outputEndpoint.expectedBodiesReceived("Hello Willem", "Bye Claus", "Bye Jonathan", "Hello Freeman").     Map<String, Object> headers = new HashMap<>().     headers.put(CxfConstants.OPERATION_NAME, "greetMe").     headers.put("foo", "cxf:bean:clientEndpoint?address=http://localhost:" + port1 + "/SoapContext/SoapPort").     // returns the last message from the recipient list     Object out = template.requestBodyAndHeaders("direct:start", "Willem", headers, String.class).     assertEquals("Hello Willem", out).     // change foo headers     headers.put("foo", "cxf:bean:clientEndpoint?address=http://localhost:" + port2 + "/SoapContext/SoapPort").     // call again to ensure that works also     // returns the last message from the recipient list     String out2 = template.requestBodyAndHeaders("direct:start", "Claus", headers, String.class).     assertEquals("Bye Claus", out2).     // change foo headers again     headers.put("foo", "cxf:bean:clientEndpoint?address=http://localhost:" + port1 + "/SoapContext/SoapPort" + ",cxf:bean:clientEndpoint?address=http://localhost:" + port2 + "/SoapContext/SoapPort").     // and call again to ensure that it really works also     // returns the last message from the recipient list     String out3 = template.requestBodyAndHeaders("direct:start", "Jonathan", headers, String.class).     assertEquals("Bye Jonathan", out3).     // change foo headers again     headers.put("foo", "cxf:bean:clientEndpoint?address=http://localhost:" + port2 + "/SoapContext/SoapPort" + ",cxf:bean:clientEndpoint?address=http://localhost:" + port1 + "/SoapContext/SoapPort").     // and call again to ensure that it really works also     // returns the last message from the recipient list     String out4 = template.requestBodyAndHeaders("direct:start", "Freeman", headers, String.class).     assertEquals("Hello Freeman", out4).     replyEndpoint.assertIsSatisfied().     reply2Endpoint.assertIsSatisfied().     outputEndpoint.assertIsSatisfied(). }
