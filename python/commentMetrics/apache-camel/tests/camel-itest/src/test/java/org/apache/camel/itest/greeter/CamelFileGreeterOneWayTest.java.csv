commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;8;;@BeforeClass public static void startServer() throws Exception {     // Start the Greeter Server     greeterImpl = new GreeterImpl().     String address = "http://localhost:" + port + "/SoapContext/SoapPort".     endpoint = Endpoint.publish(address, greeterImpl).     LOG.info("The WS endpoint is published! "). }
false;public,static;0;8;;@AfterClass public static void stopServer() throws Exception {     // Shutdown the Greeter Server     if (endpoint != null) {         endpoint.stop().         endpoint = null.     } }
false;public;0;17;;@Test public void testFileWithOnewayOperation() throws Exception {     deleteDirectory("target/messages/input/").     greeterImpl.resetOneWayCounter().     ProducerTemplate template = context.createProducerTemplate().     template.sendBodyAndHeader("file://target/messages/input/", "Hello World", Exchange.FILE_NAME, "hello.txt").     // Sleep a while and wait for the message whole processing     Thread.sleep(4000).     template.stop().     // make sure the greeter is called     assertEquals("The oneway operation of greeter should be called", 1, greeterImpl.getOneWayCounter()).     File file = new File("target/messages/input/hello.txt").     assertFalse("File " + file + " should be deleted", file.exists()). }
false;protected;0;4;;@Override protected AbstractApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/itest/greeter/CamelFileGreeterOneWayTest.xml"). }
