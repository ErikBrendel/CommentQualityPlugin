commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception {     throw new Exception("Kaboom!"). }
false;public;0;18;;@Test @DirtiesContext public void testJmsConsumerShutdownWithMessageInFlight() throws InterruptedException {     end.expectedMessageCount(0).     end.setResultWaitTime(2000).     // direct:dir route always fails     exception.whenAnyExchangeReceived(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             throw new Exception("Kaboom!").         }     }).     activemq.sendBody("activemq:start", "Hello").     end.assertIsSatisfied(). }
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception {     throw new Exception("Kaboom!"). }
true;public;0;18;// Just for the sake of comparison test the SedaConsumer as well ;// Just for the sake of comparison test the SedaConsumer as well @Test @DirtiesContext public void testSedaConsumerShutdownWithMessageInFlight() throws InterruptedException {     end.expectedMessageCount(0).     end.setResultWaitTime(2000).     // direct:dir route always fails     exception.whenAnyExchangeReceived(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             throw new Exception("Kaboom!").         }     }).     seda.sendBody("seda:start", "Hello").     end.assertIsSatisfied(). }
false;public;0;18;;@Override public void configure() throws Exception {     from("activemq:start").to("direct:dir").to("mock:end").     from("seda:start").to("direct:dir").to("mock:end").     from("direct:dir").onException(Exception.class).redeliveryDelay(1000).maximumRedeliveries(// forever     -1).end().to("mock:exception"). }
