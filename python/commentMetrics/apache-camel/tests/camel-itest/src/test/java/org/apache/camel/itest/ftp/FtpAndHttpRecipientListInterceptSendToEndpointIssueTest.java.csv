commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;5;;@BeforeClass public static void initPort() throws Exception {     ftpPort = AvailablePortFinder.getNextAvailable(20126).     httpPort = AvailablePortFinder.getNextAvailable(9193). }
false;public;0;13;;@Test public void testFtpAndHttpIssue() throws Exception {     String ftp = "ftp:localhost:" + ftpPort + "/myapp?password=admin&username=admin".     String http = "http://localhost:" + httpPort + "/myapp".     getMockEndpoint("mock:result").expectedBodiesReceived("Bye World").     getMockEndpoint("mock:foo").expectedBodiesReceived("Hello World").     getMockEndpoint("mock:intercept").expectedMessageCount(3).     template.sendBodyAndHeader("direct:start", "Hello World", "foo", "seda:foo," + ftp + "," + http).     assertMockEndpointsSatisfied(). }
false;public;0;14;;@Override public void configure() throws Exception {     interceptSendToEndpoint("(ftp|http|seda):.*").to("mock:intercept").     from("direct:start").recipientList(header("foo")).to("mock:result").     from("jetty:http://0.0.0.0:" + httpPort + "/myapp").transform().constant("Bye World").     from("seda:foo").to("mock:foo"). }
false;protected;0;19;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             interceptSendToEndpoint("(ftp|http|seda):.*").to("mock:intercept").             from("direct:start").recipientList(header("foo")).to("mock:result").             from("jetty:http://0.0.0.0:" + httpPort + "/myapp").transform().constant("Bye World").             from("seda:foo").to("mock:foo").         }     }. }
false;public;0;5;;public void setUp() throws Exception {     super.setUp().     initFtpServer().     ftpServer.start(). }
false;public;0;6;;@After public void tearDown() throws Exception {     super.tearDown().     ftpServer.stop().     ftpServer = null. }
false;protected;0;18;;protected void initFtpServer() throws Exception {     FtpServerFactory serverFactory = new FtpServerFactory().     // setup user management to read our users.properties and use clear text passwords     File file = new File("src/test/resources/users.properties").     UserManager uman = new PropertiesUserManager(new ClearTextPasswordEncryptor(), file, "admin").     serverFactory.setUserManager(uman).     NativeFileSystemFactory fsf = new NativeFileSystemFactory().     fsf.setCreateHome(true).     serverFactory.setFileSystem(fsf).     ListenerFactory factory = new ListenerFactory().     factory.setPort(ftpPort).     serverFactory.addListener("default", factory.createListener()).     ftpServer = serverFactory.createServer(). }
