commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testValideRequestAsStream() throws Exception {     InputStream inputStream = this.getClass().getResourceAsStream("ValidRequest.xml").     assertNotNull("the inputStream should not be null", inputStream).     String response = template.requestBody("http://localhost:" + port + "/test", inputStream, String.class).     assertEquals("The response should be ok", response, "<ok/>"). }
false;public;0;8;;@Override public void configure() throws Exception {     context.setStreamCaching(true).     from("jetty:http://localhost:" + port + "/test").to("validator:OptimizationRequest.xsd").transform(constant("<ok/>")). }
false;protected;0;15;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     port = AvailablePortFinder.getNextAvailable(8000).     return new RouteBuilder() {          @Override         public void configure() throws Exception {             context.setStreamCaching(true).             from("jetty:http://localhost:" + port + "/test").to("validator:OptimizationRequest.xsd").transform(constant("<ok/>")).         }     }. }
