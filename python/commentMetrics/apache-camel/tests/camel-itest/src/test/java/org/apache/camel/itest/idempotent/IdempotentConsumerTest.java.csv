commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/itest/idempotent/IdempotentConsumerTest.xml"). }
false;public;0;12;;@Test public void testDuplicateMessagesAreFilteredOut() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("one", "two", "three").     template.sendBodyAndHeader("direct:start", "one", "messageId", 1).     template.sendBodyAndHeader("direct:start", "two", "messageId", 2).     template.sendBodyAndHeader("direct:start", "one", "messageId", 1).     template.sendBodyAndHeader("direct:start", "two", "messageId", 2).     template.sendBodyAndHeader("direct:start", "three", "messageId", 3).     assertMockEndpointsSatisfied(). }
