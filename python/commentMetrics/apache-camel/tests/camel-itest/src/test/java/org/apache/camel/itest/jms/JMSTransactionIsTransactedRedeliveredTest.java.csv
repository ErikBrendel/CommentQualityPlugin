commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;protected ClassPathXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("/org/apache/camel/itest/jms/JMSTransactionIsTransactedRedeliveredTest.xml"). }
false;public;0;4;;@Override public boolean isUseAdviceWith() {     return true. }
false;public;0;4;;@Override public void configure() throws Exception {     onException(AssertionError.class).to("log:error", "mock:error"). }
false;public;0;29;;@Test public void testTransactionSuccess() throws Exception {     RouteReifier.adviceWith(context.getRouteDefinitions().get(0), context, new AdviceWithRouteBuilder() {          @Override         public void configure() throws Exception {             onException(AssertionError.class).to("log:error", "mock:error").         }     }).     context.start().     // there should be no assertion errors     MockEndpoint error = getMockEndpoint("mock:error").     error.expectedMessageCount(0).     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     mock.expectedBodiesReceived("Bye World").     // success at 3rd attempt     mock.message(0).header("count").isEqualTo(3).     MockEndpoint jetty = getMockEndpoint("mock:jetty").     jetty.expectedMessageCount(1).     template.sendBody("activemq:queue:okay", "Hello World").     mock.assertIsSatisfied().     jetty.assertIsSatisfied().     error.assertIsSatisfied(). }
false;public;1;15;;public void process(Exchange exchange) throws Exception {     ++count.     // the first is not redelivered     if (count == 1) {         assertFalse("Should not be external redelivered", exchange.isExternalRedelivered()).     } else {         assertTrue("Should be external redelivered", exchange.isExternalRedelivered()).     }     if (count < 3) {         throw new IllegalArgumentException("Forced exception").     }     exchange.getIn().setHeader("count", count). }
false;public;1;4;;public void process(Exchange exchange) throws Exception {     // origin message should be a external redelivered     assertTrue("Should be external redelivered", exchange.isExternalRedelivered()). }
