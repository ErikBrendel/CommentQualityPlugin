commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;4;;@BeforeClass public static void initPort() throws Exception {     ftpPort = AvailablePortFinder.getNextAvailable(20127). }
false;public;0;18;;@Test public void testXQueryFromFtp() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:davsclaus").     mock.expectedMessageCount(1).     mock.message(0).body(String.class).contains("Hello World").     MockEndpoint other = getMockEndpoint("mock:other").     other.expectedMessageCount(1).     other.message(0).body(String.class).contains("Bye World").     template.sendBodyAndHeader(ftp, "<mail from=\"davsclaus@apache.org\"><subject>Hey</subject><body>Hello World!</body></mail>", Exchange.FILE_NAME, "claus.xml").     template.sendBodyAndHeader(ftp, "<mail from=\"janstey@apache.org\"><subject>Hey</subject><body>Bye World!</body></mail>", Exchange.FILE_NAME, "janstey.xml").     assertMockEndpointsSatisfied(). }
false;public;0;9;;@Override public void configure() throws Exception {     from(ftp).choice().when().xquery("/mail/@from = 'davsclaus@apache.org'").to("mock:davsclaus").otherwise().to("mock:other"). }
false;protected;0;14;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from(ftp).choice().when().xquery("/mail/@from = 'davsclaus@apache.org'").to("mock:davsclaus").otherwise().to("mock:other").         }     }. }
false;public;0;5;;public void setUp() throws Exception {     super.setUp().     initFtpServer().     ftpServer.start(). }
false;public;0;6;;@After public void tearDown() throws Exception {     super.tearDown().     ftpServer.stop().     ftpServer = null. }
false;protected;0;18;;protected void initFtpServer() throws Exception {     FtpServerFactory serverFactory = new FtpServerFactory().     // setup user management to read our users.properties and use clear text passwords     File file = new File("src/test/resources/users.properties").     UserManager uman = new PropertiesUserManager(new ClearTextPasswordEncryptor(), file, "admin").     serverFactory.setUserManager(uman).     NativeFileSystemFactory fsf = new NativeFileSystemFactory().     fsf.setCreateHome(true).     serverFactory.setFileSystem(fsf).     ListenerFactory factory = new ListenerFactory().     factory.setPort(ftpPort).     serverFactory.addListener("default", factory.createListener()).     ftpServer = serverFactory.createServer(). }
