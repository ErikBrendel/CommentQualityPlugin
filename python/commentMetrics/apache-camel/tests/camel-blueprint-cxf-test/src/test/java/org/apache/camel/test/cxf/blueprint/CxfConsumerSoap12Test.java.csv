commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;6;;@Override protected Properties useOverridePropertiesWithPropertiesComponent() {     Properties extra = new Properties().     extra.put("router.address", "http://localhost:" + CXFTestSupport.getPort1() + "/CxfConsumerSoap12Test/router").     return extra. }
false;protected;0;4;;@Override protected String getBlueprintDescriptor() {     return "org/apache/camel/test/cxf/blueprint/CxfConsumerSoap12Beans.xml". }
false;public;0;3;;public boolean isCreateCamelContextPerClass() {     return true. }
false;public;0;14;;@Test public void testCxfEndpointBeanDefinitionParser() {     CxfEndpoint routerEndpoint = context.getEndpoint("routerEndpoint", CxfEndpoint.class).     assertEquals("Got the wrong endpoint address", routerEndpoint.getAddress(), "http://localhost:" + CXFTestSupport.getPort1() + "/CxfConsumerSoap12Test/router").     assertEquals("Got the wrong endpont service class", "org.apache.hello_world_soap_http.Greeter", routerEndpoint.getServiceClass().getName()).     BindingConfiguration binding = routerEndpoint.getBindingConfig().     assertTrue("Got no soap binding", binding instanceof SoapBindingConfiguration).     assertEquals("Got the wrong soap version", "http://schemas.xmlsoap.org/wsdl/soap12/", ((SoapBindingConfiguration) binding).getVersion().getBindingId()).     assertTrue("Mtom not enabled", ((SoapBindingConfiguration) binding).isMtomEnabled()). }
false;public;0;14;;@Test public void testInvokeGreeter() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     Service service = Service.create(SERVICE_NAME).     service.addPort(PORT_NAME, "http://www.w3.org/2003/05/soap/bindings/HTTP/", "http://localhost:" + CXFTestSupport.getPort1() + "/CxfConsumerSoap12Test/router").     Greeter greeter = service.getPort(PORT_NAME, Greeter.class).     greeter.greetMeOneWay("test").     assertMockEndpointsSatisfied(). }
