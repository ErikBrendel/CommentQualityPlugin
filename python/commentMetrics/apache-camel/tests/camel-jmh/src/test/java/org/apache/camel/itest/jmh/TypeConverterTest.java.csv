commented;modifiers;parameterAmount;loc;comment;code
false;public;0;22;;@Test public void launchBenchmark() throws Exception {     Options opt = new OptionsBuilder().include(this.getClass().getName() + ".*").mode(Mode.SampleTime).timeUnit(TimeUnit.MILLISECONDS).warmupTime(TimeValue.seconds(1)).warmupIterations(2).measurementTime(TimeValue.seconds(5)).measurementIterations(3).threads(1).forks(1).shouldFailOnError(true).shouldDoGC(true).measurementBatchSize(100000).build().     new Runner(opt).run(). }
false;public;0;12;;@Setup(Level.Trial) public void initialize() throws IOException {     camel = new DefaultCamelContext().     try {         camel.start().     } catch (Exception e) {     // ignore     }     xmlAsString = IOHelper.loadText(getClass().getClassLoader().getResourceAsStream("sample_soap.xml")).     xmlAsBytes = xmlAsString.getBytes(StandardCharsets.UTF_8). }
false;public;0;8;;@TearDown(Level.Trial) public void close() {     try {         camel.stop().     } catch (Exception e) {     // ignore     } }
false;public;2;5;;@Benchmark public void typeConvertIntegerToString(BenchmarkCamelContextState state, Blackhole bh) {     String string = state.camel.getTypeConverter().convertTo(String.class, state.someInteger).     bh.consume(string). }
false;public;2;5;;@Benchmark public void typeConvertStringToInteger(BenchmarkCamelContextState state, Blackhole bh) {     Integer integer = state.camel.getTypeConverter().convertTo(Integer.class, state.someIntegerString).     bh.consume(integer). }
false;public;2;5;;@Benchmark public void typeConvertTheSameTypes(BenchmarkCamelContextState state, Blackhole bh) {     String string = state.camel.getTypeConverter().convertTo(String.class, state.someIntegerString).     bh.consume(string). }
false;public;2;5;;@Benchmark public void typeConvertInputStreamToString(BenchmarkCamelContextState state, Blackhole bh) {     String string = state.camel.getTypeConverter().convertTo(String.class, new ByteArrayInputStream(state.xmlAsBytes)).     bh.consume(string). }
false;public;2;5;;@Benchmark public void typeConvertStringToInputStream(BenchmarkCamelContextState state, Blackhole bh) {     InputStream inputStream = state.camel.getTypeConverter().convertTo(InputStream.class, state.xmlAsString).     bh.consume(inputStream). }
false;public;2;5;;@Benchmark public void typeConvertStringToDocument(BenchmarkCamelContextState state, Blackhole bh) {     Document document = state.camel.getTypeConverter().convertTo(Document.class, state.xmlAsString).     bh.consume(document). }
false;public;2;5;;@Benchmark public void typeConvertStringToByteArray(BenchmarkCamelContextState state, Blackhole bh) {     byte[] bytes = state.camel.getTypeConverter().convertTo(byte[].class, state.xmlAsString).     bh.consume(bytes). }
false;public;2;5;;@Benchmark public void typeConvertByteArrayToString(BenchmarkCamelContextState state, Blackhole bh) {     String string = state.camel.getTypeConverter().convertTo(String.class, state.xmlAsBytes).     bh.consume(string). }
