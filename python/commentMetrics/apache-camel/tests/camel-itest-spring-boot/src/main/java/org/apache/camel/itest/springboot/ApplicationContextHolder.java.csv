commented;modifiers;parameterAmount;loc;comment;code
false;public;1;7;;@Override public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {     synchronized (ApplicationContextHolder.class) {         ApplicationContextHolder.context = applicationContext.         ApplicationContextHolder.class.notifyAll().     } }
false;public,static;0;4;;public static ApplicationContext getApplicationContext() throws InterruptedException {     waitForContextReady().     return context. }
false;private,static;0;15;;private static void waitForContextReady() throws InterruptedException {     long maxWait = contextMaxWaitTime.     long deadline = System.currentTimeMillis() + maxWait.     synchronized (ApplicationContextHolder.class) {         long time = System.currentTimeMillis().         while (time < deadline && context == null) {             ApplicationContextHolder.class.wait(deadline - time).             time = System.currentTimeMillis().         }         if (context == null) {             throw new IllegalStateException("No spring context available after " + maxWait + " millis").         }     } }
false;public,static;0;3;;public static long getContextMaxWaitTime() {     return contextMaxWaitTime. }
false;public,static;1;3;;public static void setContextMaxWaitTime(long contextMaxWaitTime) {     ApplicationContextHolder.contextMaxWaitTime = contextMaxWaitTime. }
