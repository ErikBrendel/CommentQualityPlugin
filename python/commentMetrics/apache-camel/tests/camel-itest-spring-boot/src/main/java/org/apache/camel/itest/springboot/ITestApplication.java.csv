commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;11;;public static void main(String[] args) throws Exception {     try {         overrideLoggingConfig().         SpringApplication.run(ITestApplication.class, args).     } catch (Throwable t) {         LoggerFactory.getLogger(ITestApplication.class).error("Error while executing test", t).         throw t.     } }
false;public;0;5;;@Override public String toString() {     // to tell source-check this is not a utility-class     return "spring-boot-main". }
false;private,static;0;21;;private static void overrideLoggingConfig() {     URL logbackFile = ITestApplication.class.getResource("/spring-logback.xml").     if (logbackFile != null) {         LoggerContext context = (LoggerContext) LoggerFactory.getILoggerFactory().         try {             JoranConfigurator configurator = new JoranConfigurator().             configurator.setContext(context).             // Call context.reset() to clear any previous configuration, e.g. default             // configuration. For multi-step configuration, omit calling context.reset().             context.reset().             configurator.doConfigure(logbackFile).         } catch (JoranException je) {         // StatusPrinter will handle this         }         StatusPrinter.printInCaseOfErrorsOrWarnings(context).     } }
