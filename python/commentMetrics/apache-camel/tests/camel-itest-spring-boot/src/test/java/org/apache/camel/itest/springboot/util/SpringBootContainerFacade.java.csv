commented;modifiers;parameterAmount;loc;comment;code
false;public;3;4;;public Object executeTest(String test, ITestConfig config, String component) throws Exception {     Object resObj = execute(test, config, component).     return resObj. }
false;private;2;21;;private Object execute(String command, Object... args) throws Exception {     Method method = delegateClass.getMethod("execute", String.class, byte[].class).     byte[] argsSer = null.     if (args != null) {         argsSer = SerializationUtils.marshal(args).     }     byte[] resByte = (byte[]) method.invoke(null, command, argsSer).     if (resByte != null) {         Object res = SerializationUtils.unmarshal(resByte).         if (res instanceof Exception) {             throw (Exception) res.         } else if (res instanceof Throwable) {             throw new RuntimeException((Throwable) res).         } else {             return res.         }     }     return null. }
