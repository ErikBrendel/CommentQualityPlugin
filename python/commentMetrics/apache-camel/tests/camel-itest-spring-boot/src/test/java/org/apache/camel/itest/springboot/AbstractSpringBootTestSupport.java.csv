commented;modifiers;parameterAmount;loc;comment;code
true;public;0;9;/**  * Starts a spring-boot container with the module under test.  *  * @throws Exception  */ ;/**  * Starts a spring-boot container with the module under test.  *  * @throws Exception  */ @Before public void startSpringBoot() throws Exception {     this.config = retrieveConfig().     ArquillianSyncBootJarLauncher launcher = new ArquillianSyncBootJarLauncher().     launcher.run(new String[] {}).     this.facade = new SpringBootContainerFacade(launcher.getClassLoader()). }
false;protected,static;1;13;;protected static String inferModuleName(Class<?> testClass) {     String name = testClass.getSimpleName().     int id1 = name.indexOf("Test").     StringBuilder sb = new StringBuilder().     for (int i = 0. i < id1. i++) {         char c = name.charAt(i).         if (i > 0 && Character.isUpperCase(c) && sb.length() > 0) {             sb.append("-").         }         sb.append(Character.toLowerCase(c)).     }     return sb.toString(). }
false;protected;0;3;;protected String defaultComponentName() throws Exception {     return config.getModuleName().replace("camel-", ""). }
false;protected;1;3;;protected void runComponentTest(ITestConfig config) throws Exception {     this.runComponentTest(config, defaultComponentName()). }
false;protected;2;3;;protected void runComponentTest(ITestConfig config, String componentName) throws Exception {     facade.executeTest("module", config, componentName). }
false;protected;1;3;;protected void runDataformatTest(ITestConfig config) throws Exception {     this.runDataformatTest(config, defaultComponentName()). }
false;protected;2;3;;protected void runDataformatTest(ITestConfig config, String dataFormatName) throws Exception {     facade.executeTest("dataformat", config, dataFormatName). }
false;protected;1;3;;protected void runLanguageTest(ITestConfig config) throws Exception {     this.runLanguageTest(config, defaultComponentName()). }
false;protected;2;3;;protected void runLanguageTest(ITestConfig config, String language) throws Exception {     facade.executeTest("language", config, language). }
false;protected;1;5;;protected void runModuleUnitTestsIfEnabled(ITestConfig config) throws Exception {     if (config.getUnitTestEnabled()) {         this.runModuleUnitTests(config).     } }
false;protected;1;3;;protected void runModuleUnitTests(ITestConfig config) throws Exception {     facade.executeTest("unittest", config, config.getModuleName().replace("camel-", "")). }
false;protected;0;5;;protected ITestConfig retrieveConfig() throws Exception {     Method confMethod = this.getClass().getMethod("createTestConfig").     ITestConfig conf = (ITestConfig) confMethod.invoke(null).     return conf. }
