commented;modifiers;parameterAmount;loc;comment;code
false;public;0;24;;@Test public void testContextList() throws Exception {     CamelContext context = new DefaultCamelContext().     context.setNameStrategy(new ExplicitCamelContextNameStrategy("foobar")).     context.start().     CamelController controller = new DummyCamelController(context).     OutputStream os = new ByteArrayOutputStream().     PrintStream ps = new PrintStream(os).     ContextListCommand command = new ContextListCommand().     command.execute(controller, ps, null).     String out = os.toString().     assertNotNull(out).     LOG.info("\n\n{}\n", out).     // should contain a table with the context     assertTrue(out.contains("foobar")).     assertTrue(out.contains("Started")).     context.stop(). }
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:start").to("mock:result"). }
false;public;0;32;;@Test public void testEndpointStats() throws Exception {     CamelContext context = new DefaultCamelContext().     context.setRuntimeEndpointRegistry(new DefaultRuntimeEndpointRegistry()).     context.setNameStrategy(new ExplicitCamelContextNameStrategy("foobar")).     context.adapt(ModelCamelContext.class).addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("mock:result").         }     }).     context.start().     context.createProducerTemplate().sendBody("direct:start", "Hello World").     CamelController controller = new DummyCamelController(context).     OutputStream os = new ByteArrayOutputStream().     PrintStream ps = new PrintStream(os).     EndpointStatisticCommand command = new EndpointStatisticCommand("foobar", false, null).     command.execute(controller, ps, null).     String out = os.toString().     assertNotNull(out).     LOG.info("\n\n{}\n", out).     assertTrue(out.contains("direct://start")).     assertTrue(out.contains("mock://result")).     context.stop(). }
