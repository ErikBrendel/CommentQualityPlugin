commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Lazy @Bean(name = "etcd-service-discovery") @ConditionalOnClass(CamelContext.class) public ServiceDiscovery configureServiceDiscoveryFactory() throws Exception {     EtcdServiceDiscoveryFactory factory = new EtcdServiceDiscoveryFactory().     IntrospectionSupport.setProperties(camelContext, camelContext.getTypeConverter(), factory, IntrospectionSupport.getNonNullProperties(configuration)).     return factory.newInstance(camelContext). }
false;public;0;23;;@PostConstruct public void postConstruct() {     if (beanFactory != null) {         Map<String, Object> parameters = new HashMap<>().         for (Map.Entry<String, EtcdServiceCallServiceDiscoveryConfigurationCommon> entry : configuration.getConfigurations().entrySet()) {             // clean up params             parameters.clear().             // The instance factory             EtcdServiceDiscoveryFactory factory = new EtcdServiceDiscoveryFactory().             try {                 IntrospectionSupport.getProperties(entry.getValue(), parameters, null, false).                 IntrospectionSupport.setProperties(camelContext, camelContext.getTypeConverter(), factory, parameters).                 beanFactory.registerSingleton(entry.getKey(), factory.newInstance(camelContext)).             } catch (Exception e) {                 throw new BeanCreationException(entry.getKey(), e.getMessage(), e).             }         }     } }
