commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Test public void testConfiguration() throws Exception {     RouteDefinition routeDefinition = camelContext.adapt(ModelCamelContext.class).getRouteDefinition("hystrix-route").     HystrixDefinition hystrixDefinition = findHystrixDefinition(routeDefinition).     Assert.assertNotNull(hystrixDefinition).     HystrixReifier reifier = new HystrixReifier(hystrixDefinition).     HystrixConfigurationDefinition config = reifier.buildHystrixConfiguration(camelContext).     Assert.assertEquals("local-conf-group-key", config.getGroupKey()).     Assert.assertEquals("global-thread-key", config.getThreadPoolKey()).     Assert.assertEquals(new Integer(5), config.getCorePoolSize()). }
false;private;1;7;;// ********************************************** // Helper // ********************************************** private HystrixDefinition findHystrixDefinition(RouteDefinition routeDefinition) throws Exception {     return routeDefinition.getOutputs().stream().filter(HystrixDefinition.class::isInstance).map(HystrixDefinition.class::cast).findFirst().orElseThrow(() -> new IllegalStateException("Unable to find a HystrixDefinition")). }
