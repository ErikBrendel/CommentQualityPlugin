commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;3;;public static String getBasePath() {     return BASEPATH. }
false;public,static;0;3;;public static int getNumOfRecords() {     return NUM_RECORDS. }
false;public,static;0;3;;public static int getMaxWaitTime() {     return MAX_WAIT_TIME. }
false;public,static;0;30;;public static void buildTestXml() throws Exception {     new File(BASEPATH).mkdir().     File f = new File(BASEPATH + "/test.xml").     if (!f.exists()) {         LOG.info("Building test XML file...").         XMLOutputFactory xof = XMLOutputFactory.newInstance().         XMLStreamWriter xsw = xof.createXMLStreamWriter(new FileOutputStream(f), "UTF-8").         try {             xsw.writeStartDocument("UTF-8", "1.0").             xsw.writeStartElement("records").             xsw.writeAttribute("xmlns", "http://fvaleri.it/records").             for (int i = 0. i < NUM_RECORDS. i++) {                 xsw.writeStartElement("record").                 xsw.writeStartElement("key").                 xsw.writeCharacters("" + i).                 xsw.writeEndElement().                 xsw.writeStartElement("value").                 xsw.writeCharacters("The quick brown fox jumps over the lazy dog").                 xsw.writeEndElement().                 xsw.writeEndElement().             }             xsw.writeEndElement().             xsw.writeEndDocument().         } finally {             LOG.info("Test XML file ready (size: {} kB)", f.length() / 1024).             xsw.flush().             xsw.close().         }     } }
