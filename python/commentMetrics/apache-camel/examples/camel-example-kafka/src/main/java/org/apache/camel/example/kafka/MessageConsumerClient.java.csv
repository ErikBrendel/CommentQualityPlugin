commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;public void configure() {     PropertiesComponent pc = getContext().getComponent("properties", PropertiesComponent.class).     pc.setLocation("classpath:application.properties").     log.info("About to start route: Kafka Server -> Log ").     from("kafka:{{consumer.topic}}?brokers={{kafka.host}}:{{kafka.port}}" + "&maxPollRecords={{consumer.maxPollRecords}}" + "&consumersCount={{consumer.consumersCount}}" + "&seekTo={{consumer.seekTo}}" + "&groupId={{consumer.group}}").routeId("FromKafka").log("${body}"). }
false;public,static;1;31;;public static void main(String[] args) throws Exception {     LOG.info("About to run Kafka-camel integration...").     CamelContext camelContext = new DefaultCamelContext().     // Add route to send messages to Kafka     camelContext.addRoutes(new RouteBuilder() {          public void configure() {             PropertiesComponent pc = getContext().getComponent("properties", PropertiesComponent.class).             pc.setLocation("classpath:application.properties").             log.info("About to start route: Kafka Server -> Log ").             from("kafka:{{consumer.topic}}?brokers={{kafka.host}}:{{kafka.port}}" + "&maxPollRecords={{consumer.maxPollRecords}}" + "&consumersCount={{consumer.consumersCount}}" + "&seekTo={{consumer.seekTo}}" + "&groupId={{consumer.group}}").routeId("FromKafka").log("${body}").         }     }).     camelContext.start().     // let it run for 5 minutes before shutting down     Thread.sleep(5 * 60 * 1000).     camelContext.stop(). }
