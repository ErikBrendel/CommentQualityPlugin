commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;6;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = super.createCamelContext().     bindBeans(context.getRegistry()).     return context. }
false;protected;1;7;;protected void bindBeans(Registry registry) throws Exception {     registry.bind("drinkRouter", driverRouter).     registry.bind("orderSplitter", new OrderSplitter()).     registry.bind("barista", new Barista()).     registry.bind("waiter", waiter).     registry.bind("aggregatorStrategy", new CafeAggregationStrategy()). }
false;public;0;16;;@Test public void testSplitter() throws InterruptedException {     MockEndpoint coldDrinks = context.getEndpoint("mock:coldDrinks", MockEndpoint.class).     MockEndpoint hotDrinks = context.getEndpoint("mock:hotDrinks", MockEndpoint.class).     Order order = new Order(1).     order.addItem(DrinkType.ESPRESSO, 2, true).     order.addItem(DrinkType.CAPPUCCINO, 2, false).     coldDrinks.expectedBodiesReceived(new OrderItem(order, DrinkType.ESPRESSO, 2, true)).     hotDrinks.expectedBodiesReceived(new OrderItem(order, DrinkType.CAPPUCCINO, 2, false)).     template.sendBody("direct:cafe", order).     assertMockEndpointsSatisfied(). }
false;public;0;24;;@Test public void testCafeRoute() throws Exception {     driverRouter.setTestModel(false).     List<Drink> drinks = new ArrayList<>().     Order order = new Order(2).     order.addItem(DrinkType.ESPRESSO, 2, true).     order.addItem(DrinkType.CAPPUCCINO, 4, false).     order.addItem(DrinkType.LATTE, 4, false).     order.addItem(DrinkType.MOCHA, 2, false).     drinks.add(new Drink(2, DrinkType.ESPRESSO, true, 2)).     drinks.add(new Drink(2, DrinkType.CAPPUCCINO, false, 4)).     drinks.add(new Drink(2, DrinkType.LATTE, false, 4)).     drinks.add(new Drink(2, DrinkType.MOCHA, false, 2)).     waiter.setVerfiyDrinks(drinks).     template.sendBody("direct:cafe", order).     // wait enough time to let the aggregate complete     Thread.sleep(10000).     waiter.verifyDrinks(). }
false;protected;0;3;;protected RouteBuilder createRouteBuilder() throws Exception {     return new CafeRouteBuilder(). }
