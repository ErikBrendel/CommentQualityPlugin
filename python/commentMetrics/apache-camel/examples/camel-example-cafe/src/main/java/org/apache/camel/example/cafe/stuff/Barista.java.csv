commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;public void setHotDrinkDelay(long hotDrinkDelay) {     this.hotDrinkDelay = hotDrinkDelay. }
false;public;1;3;;public void setColdDrinkDelay(long coldDrinkDelay) {     this.coldDrinkDelay = coldDrinkDelay. }
false;public;1;13;;public Drink prepareHotDrink(OrderItem orderItem) {     try {         Thread.sleep(this.hotDrinkDelay).         System.out.println(Thread.currentThread().getName() + " prepared hot drink #" + hotDrinkCounter.incrementAndGet() + " for order #" + orderItem.getOrder().getNumber() + ": " + orderItem).         return new Drink(orderItem.getOrder().getNumber(), orderItem.getDrinkType(), orderItem.isIced(), orderItem.getShots()).     } catch (InterruptedException e) {         Thread.currentThread().interrupt().         return null.     } }
false;public;1;13;;public Drink prepareColdDrink(OrderItem orderItem) {     try {         Thread.sleep(this.coldDrinkDelay).         System.out.println(Thread.currentThread().getName() + " prepared cold drink #" + coldDrinkCounter.incrementAndGet() + " for order #" + orderItem.getOrder().getNumber() + ": " + orderItem).         return new Drink(orderItem.getOrder().getNumber(), orderItem.getDrinkType(), orderItem.isIced(), orderItem.getShots()).     } catch (InterruptedException e) {         Thread.currentThread().interrupt().         return null.     } }
