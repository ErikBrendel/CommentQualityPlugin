commented;modifiers;parameterAmount;loc;comment;code
true;public;1;6;/**  * This method will be called by a Camel route.  */ ;/**  * This method will be called by a Camel route.  */ public Publisher<UserInfo> getUserInfo(Publisher<Long> userId) {     return Flux.from(userId).map(UserInfo::new).flatMap(this::retrieveAddress).flatMap(this::retrieveName). }
true;private;1;4;/**  * This is a sample utility method.  */ ;/**  * This is a sample utility method.  */ private Publisher<UserInfo> retrieveAddress(UserInfo user) {     // you can do an async database retrieval here     return Flux.just(user.withAddress("Address" + user.getId())). }
false;private;1;4;;private Publisher<UserInfo> retrieveName(UserInfo user) {     // you can do an async database retrieval here     return Flux.just(user.withName("Name" + user.getId())). }
false;public;0;11;;@Override public void configure() throws Exception {     // Generate a Id and retrieve user data from reactor     from("timer:clock?period=9000&delay=1500").setBody().header(Exchange.TIMER_COUNTER).convertBodyTo(// Sample ID     Long.class).bean("userBean", // Get the user info from reactor code     "getUserInfo").process(// Unwrap the Publisher     new UnwrapStreamProcessor()).log("BasicCamelToReactorInOut - Got ${body}"). }
false;public;0;3;;public Long getId() {     return id. }
false;public;1;3;;public void setId(Long id) {     this.id = id. }
false;public;0;3;;public String getName() {     return name. }
false;public;1;3;;public void setName(String name) {     this.name = name. }
false;public;1;4;;public UserInfo withName(String name) {     this.name = name.     return this. }
false;public;0;3;;public String getAddress() {     return address. }
false;public;1;3;;public void setAddress(String address) {     this.address = address. }
false;public;1;4;;public UserInfo withAddress(String address) {     this.address = address.     return this. }
false;public;0;9;;@Override public String toString() {     final StringBuilder sb = new StringBuilder("UserInfo{").     sb.append("id=").append(id).     sb.append(", name='").append(name).append('\'').     sb.append(", address='").append(address).append('\'').     sb.append('}').     return sb.toString(). }
