# id;timestamp;commentText;codeText;commentWords;codeWords
OrderBean -> public Map<String, Object> generateOrder();1405374721;Generates a new order structured as a {@link Map};public Map<String, Object> generateOrder() {_        Map<String, Object> answer = new HashMap<String, Object>()__        answer.put("id", counter++)__        answer.put("item", counter % 2 == 0 ? 111 : 222)__        answer.put("amount", ran.nextInt(10) + 1)__        answer.put("description", counter % 2 == 0 ? "Camel in Action" : "ActiveMQ in Action")__        return answer__    };generates,a,new,order,structured,as,a,link,map;public,map,string,object,generate,order,map,string,object,answer,new,hash,map,string,object,answer,put,id,counter,answer,put,item,counter,2,0,111,222,answer,put,amount,ran,next,int,10,1,answer,put,description,counter,2,0,camel,in,action,active,mq,in,action,return,answer
OrderBean -> public Map<String, Object> generateOrder();1523994421;Generates a new order structured as a {@link Map};public Map<String, Object> generateOrder() {_        Map<String, Object> answer = new HashMap<>()__        answer.put("id", counter++)__        answer.put("item", counter % 2 == 0 ? 111 : 222)__        answer.put("amount", ran.nextInt(10) + 1)__        answer.put("description", counter % 2 == 0 ? "Camel in Action" : "ActiveMQ in Action")__        return answer__    };generates,a,new,order,structured,as,a,link,map;public,map,string,object,generate,order,map,string,object,answer,new,hash,map,answer,put,id,counter,answer,put,item,counter,2,0,111,222,answer,put,amount,ran,next,int,10,1,answer,put,description,counter,2,0,camel,in,action,active,mq,in,action,return,answer
OrderBean -> public String processOrder(Map<String, Object> data);1405374721;Processes the order__@param data  the order as a {@link Map}_@return the transformed order;public String processOrder(Map<String, Object> data) {_        return "Processed order id " + data.get("id") + " item " + data.get("item") + " of " + data.get("amount") + " copies of " + data.get("description")__    };processes,the,order,param,data,the,order,as,a,link,map,return,the,transformed,order;public,string,process,order,map,string,object,data,return,processed,order,id,data,get,id,item,data,get,item,of,data,get,amount,copies,of,data,get,description
OrderBean -> public String processOrder(Map<String, Object> data);1523994421;Processes the order__@param data  the order as a {@link Map}_@return the transformed order;public String processOrder(Map<String, Object> data) {_        return "Processed order id " + data.get("id") + " item " + data.get("item") + " of " + data.get("amount") + " copies of " + data.get("description")__    };processes,the,order,param,data,the,order,as,a,link,map,return,the,transformed,order;public,string,process,order,map,string,object,data,return,processed,order,id,data,get,id,item,data,get,item,of,data,get,amount,copies,of,data,get,description
