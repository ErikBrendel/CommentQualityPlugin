commented;modifiers;parameterAmount;loc;comment;code
true;public,static;1;16;// START SNIPPET: e1 ;// START SNIPPET: e1 public static void main(final String[] args) {     System.out.println("Notice this client requires that the CamelServer is already running!").     AbstractApplicationContext context = new ClassPathXmlApplicationContext("camel-client-remoting.xml").     // just get the proxy to the service and we as the client can use the "proxy" as it was     // a local object we are invoking. Camel will under the covers do the remote communication     // to the remote ActiveMQ server and fetch the response.     Multiplier multiplier = context.getBean("multiplierProxy", Multiplier.class).     System.out.println("Invoking the multiply with 33").     int response = multiplier.multiply(33).     System.out.println("... the result is: " + response).     // we're done so let's properly close the application context     IOHelper.close(context). }
