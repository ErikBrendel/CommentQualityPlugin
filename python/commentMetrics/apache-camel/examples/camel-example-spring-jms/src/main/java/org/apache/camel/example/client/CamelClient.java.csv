commented;modifiers;parameterAmount;loc;comment;code
true;public,static;1;16;// START SNIPPET: e1 ;// START SNIPPET: e1 public static void main(final String[] args) throws Exception {     System.out.println("Notice this client requires that the CamelServer is already running!").     AbstractApplicationContext context = new ClassPathXmlApplicationContext("camel-client.xml").     // get the camel template for Spring template style sending of messages (= producer)     ProducerTemplate camelTemplate = context.getBean("camelTemplate", ProducerTemplate.class).     System.out.println("Invoking the multiply with 22").     // as opposed to the CamelClientRemoting example we need to define the service URI in this java code     int response = (Integer) camelTemplate.sendBody("jms:queue:numbers", ExchangePattern.InOut, 22).     System.out.println("... the result is: " + response).     // we're done so let's properly close the application context     IOHelper.close(context). }
