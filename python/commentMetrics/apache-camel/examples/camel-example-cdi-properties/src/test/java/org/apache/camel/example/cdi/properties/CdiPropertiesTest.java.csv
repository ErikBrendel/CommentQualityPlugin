commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public void configure() {     weaveAddLast().to("mock:outbound"). }
false;static;2;10;;static void advice(@Observes CamelContextStartingEvent event, ModelCamelContext context) throws Exception {     // Add a mock endpoint to the end of the route     RouteReifier.adviceWith(context.getRouteDefinitions().get(0), context, new AdviceWithRouteBuilder() {          @Override         public void configure() {             weaveAddLast().to("mock:outbound").         }     }). }
false;public;1;9;;@Test public void testRouteMessage(@Uri("mock:outbound") MockEndpoint outbound) {     assertThat("Exchange count is incorrect!", outbound.getExchanges(), hasSize(1)).     assertThat("Exchange body is incorrect!", outbound.getExchanges().get(0).getIn().getBody(String.class), is(equalTo("Hello"))). }
false;public;2;10;;@Test public void testProperties(@ConfigProperty(name = "destination") String destination, @ConfigProperty(name = "message") String message) {     assertThat("Property 'destination' value is incorrect!", destination, is(equalTo("direct:hello"))).     assertThat("Property 'message' value is incorrect!", message, is(equalTo("Hello"))). }
