commented;modifiers;parameterAmount;loc;comment;code
false;public;0;56;;public String invoke() throws Exception {     // Service Qname as defined in the WSDL.     QName serviceName = new QName("http://apache.org/hello_world_soap_http", "SOAPService").     // Port QName as defined in the WSDL.     QName portName = new QName("http://apache.org/hello_world_soap_http", "SoapOverHttpRouter").     // Create a dynamic Service instance     Service service = Service.create(serviceName).     // Add a port to the Service     service.addPort(portName, SOAPBinding.SOAP11HTTP_BINDING, endpointAddress).     // Create a dispatch instance     Dispatch<SOAPMessage> dispatch = service.createDispatch(portName, SOAPMessage.class, Service.Mode.MESSAGE).     // Use Dispatch as BindingProvider     BindingProvider bp = dispatch.     MessageFactory factory = ((SOAPBinding) bp.getBinding()).getMessageFactory().     // Create SOAPMessage Request     SOAPMessage request = factory.createMessage().     // Request Body     SOAPBody body = request.getSOAPBody().     // Compose the soap:Body payload     QName payloadName = new QName("http://apache.org/hello_world_soap_http/types", "greetMe", "ns1").     SOAPBodyElement payload = body.addBodyElement(payloadName).     SOAPElement message = payload.addChildElement("requestType").     message.addTextNode("Hello Camel!!").     System.out.println("Send out the request: Hello Camel!!").     // Invoke the endpoint synchronously     // Invoke endpoint operation and read response     SOAPMessage reply = dispatch.invoke(request).     // process the reply     body = reply.getSOAPBody().     QName responseName = new QName("http://apache.org/hello_world_soap_http/types", "greetMeResponse").     SOAPElement bodyElement = (SOAPElement) body.getChildElements(responseName).next().     String responseMessageText = bodyElement.getTextContent().     System.out.println("Get the response: " + responseMessageText).     return responseMessageText. }
false;public,static;1;4;;public static void main(String[] args) throws Exception {     Client client = new Client("http://localhost:9000/GreeterContext/SOAPMessageService").     client.invoke(). }
