commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public Greeter getProxy() {     return port. }
false;public,static;1;6;;public static void main(String[] args) throws Exception {     // set the client's service access point     Client client = new Client("http://localhost:9001/GreeterContext/GreeterPort").     // invoking the services     client.invoke(). }
false;public;0;35;;public void invoke() throws Exception {     String resp.     System.out.println("Invoking sayHi...").     resp = port.sayHi().     System.out.println("Server responded with: " + resp).     System.out.println().     System.out.println("Invoking greetMe... with Mike").     resp = port.greetMe("Mike").     System.out.println("Server responded with: " + resp).     System.out.println().     System.out.println("Invoking greetMe... with James").     resp = port.greetMe("James").     System.out.println("Server responded with: " + resp).     System.out.println().     System.out.println("Invoking greetMeOneWay...").     port.greetMeOneWay(System.getProperty("user.name")).     System.out.println("No response from server as method is OneWay").     System.out.println().     try {         System.out.println("Invoking pingMe, expecting exception...").         port.pingMe("hello").     } catch (PingMeFault ex) {         System.out.println("Expected exception: PingMeFault has occurred: " + ex.getMessage()).         FaultDetail detail = ex.getFaultInfo().         System.out.println("FaultDetail major:" + detail.getMajor()).         System.out.println("FaultDetail minor:" + detail.getMinor()).     } }
