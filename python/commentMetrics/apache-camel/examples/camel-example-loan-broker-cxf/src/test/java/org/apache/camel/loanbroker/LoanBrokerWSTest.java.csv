commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;31;;@BeforeClass public static void setupFreePort() throws Exception {     // find a free port number, and write that in the custom.properties file     // which we will use for the unit tests, to avoid port number in use problems     int port = AvailablePortFinder.getNextAvailable().     String bank1 = "bank1.port=" + port.     port = AvailablePortFinder.getNextAvailable().     String bank2 = "bank2.port=" + port.     port = AvailablePortFinder.getNextAvailable().     String bank3 = "bank3.port=" + port.     port = AvailablePortFinder.getNextAvailable().     String credit = "credit_agency.port=" + port.     port = AvailablePortFinder.getNextAvailable().     String loan = "loan_broker.port=" + port.     File custom = new File("target/custom.properties").     FileOutputStream fos = new FileOutputStream(custom).     fos.write(bank1.getBytes()).     fos.write("\n".getBytes()).     fos.write(bank2.getBytes()).     fos.write("\n".getBytes()).     fos.write(bank3.getBytes()).     fos.write("\n".getBytes()).     fos.write(credit.getBytes()).     fos.write("\n".getBytes()).     fos.write(loan.getBytes()).     fos.write("\n".getBytes()).     fos.close().     url = "http://localhost:" + port + "/loanBroker". }
false;public;0;7;;@Test public void testInvocation() throws Exception {     LoanBrokerWS loanBroker = Client.getProxy(url).     String result = loanBroker.getLoanQuote("SSN", 1000.54, 10).     log.info("Result: {}", result).     assertTrue(result.startsWith("The best rate is [ssn:SSN bank:bank")). }
false;protected;0;4;;@Override protected AbstractApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("/META-INF/spring/webServiceCamelContext.xml"). }
