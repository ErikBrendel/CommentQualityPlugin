commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;public void configure() {     PropertiesComponent pc = getContext().getComponent("properties", PropertiesComponent.class).     pc.setLocation("classpath:example.properties").     log.info("About to start route: Google Pubsub -> Log ").     from("google-pubsub:{{pubsub.projectId}}:{{pubsub.subscription}}?" + "maxMessagesPerPoll={{consumer.maxMessagesPerPoll}}&" + "concurrentConsumers={{consumer.concurrentConsumers}}").routeId("FromGooglePubsub").log("${body}"). }
false;public,static;1;33;;public static void main(String[] args) throws Exception {     LOG.info("About to run Google-pubsub-camel integration...").     CamelContext camelContext = new DefaultCamelContext().     // setup google pubsub component     GooglePubsubComponent googlePubsub = PubsubUtil.createComponent().     camelContext.addComponent("google-pubsub", googlePubsub).     // Add route to send messages to Google pubsub     camelContext.addRoutes(new RouteBuilder() {          public void configure() {             PropertiesComponent pc = getContext().getComponent("properties", PropertiesComponent.class).             pc.setLocation("classpath:example.properties").             log.info("About to start route: Google Pubsub -> Log ").             from("google-pubsub:{{pubsub.projectId}}:{{pubsub.subscription}}?" + "maxMessagesPerPoll={{consumer.maxMessagesPerPoll}}&" + "concurrentConsumers={{consumer.concurrentConsumers}}").routeId("FromGooglePubsub").log("${body}").         }     }).     camelContext.start().     // let it run for 5 minutes before shutting down     Thread.sleep(5 * 60 * 1000).     camelContext.stop(). }
