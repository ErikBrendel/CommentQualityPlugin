commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;3;;public static void main(String[] args) throws Exception {     createTopicSubscriptionPair(10). }
false;private,static;1;50;;private static void createTopicSubscriptionPair(int ackDeadlineSeconds) throws Exception {     Properties properties = PubsubUtil.loadProperties().     String projectId = properties.getProperty("pubsub.projectId").     String topic = properties.getProperty("pubsub.topic").     String subscriptionName = properties.getProperty("pubsub.subscription").     String topicFullName = String.format("projects/%s/topics/%s", projectId, topic).     String subscriptionFullName = String.format("projects/%s/subscriptions/%s", projectId, subscriptionName).     Pubsub pubsub = PubsubUtil.createConnectionFactory(properties).getDefaultClient().     try {         pubsub.projects().topics().create(topicFullName, new Topic()).execute().     } catch (GoogleJsonResponseException e) {         // 409 indicates that the resource is available already         if (409 == e.getStatusCode()) {             LOG.info("Topic {} already exist", topic).         } else {             throw e.         }     }     try {         Subscription subscription = new Subscription().setTopic(topicFullName).setAckDeadlineSeconds(ackDeadlineSeconds).         pubsub.projects().subscriptions().create(subscriptionFullName, subscription).execute().     } catch (GoogleJsonResponseException e) {         // 409 indicates that the resource is available already         if (409 == e.getStatusCode()) {             LOG.info("Subscription {} already exist", subscriptionName).         } else {             throw e.         }     } }
