commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;7;;@Override protected String getBlueprintDescriptor() {     return "/OSGI-INF/blueprint/camel-context.xml," + // We add the embedded Artemis Broker     "/OSGI-INF/blueprint/embedded-broker.xml". }
false;protected;1;17;;@Override @SuppressWarnings({ "unchecked", "rawtypes" }) protected String useOverridePropertiesWithConfigAdmin(Dictionary props) {     // obtain an available port     int port = AvailablePortFinder.getNextAvailable(9090).     if (port != 9090) {         // override the Netty port to use         props.put("netty.port", "" + port).         // return the PID of the config-admin we are using in the blueprint xml file         return "my-placeholders".     } else {         // no update needed         return null.     } }
false;public;0;8;;@Test public void testEmbeddedBroker() throws Exception {     // trigger     String response = template.requestBody("netty4-http:http://localhost:{{netty.port}}/message", null, String.class).     // response validation     assertEquals("not expected", "Hello from Camel's AMQP example", response). }
