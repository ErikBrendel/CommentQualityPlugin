commented;modifiers;parameterAmount;loc;comment;code
false;public;0;21;;@Configuration public Option[] config() throws IOException {     return options(KARAF.option(), CAMEL_COMMANDS.option(), PAX_CDI_IMPL.option(), CAMEL_CDI.option(), CAMEL_SJMS.option(), ACTIVEMQ.option(), streamBundle(TinyBundles.bundle().read(Files.newInputStream(Paths.get("target").resolve("camel-example-cdi-osgi.jar"))).build()), when(false).useOptions(debugConfiguration("5005", true))). }
false;public;0;5;;@Test public void testRouteStatus() {     assertThat("Route status is incorrect!", context.getRouteController().getRouteStatus("consumer-route"), equalTo(ServiceStatus.Started)). }
false;public;0;6;;@Test public void testExchangesCompleted() throws Exception {     ManagedRouteMBean route = context.getManagedRoute(context.getRoute("consumer-route").getId(), ManagedRouteMBean.class).     assertThat("Number of exchanges completed is incorrect!", route.getExchangesCompleted(), equalTo(1L)). }
false;public;0;7;;@Test public void testExecuteCommands() throws Exception {     Session session = sessionFactory.create(System.in, System.out, System.err).     session.execute("camel:context-list").     session.execute("camel:route-list").     session.execute("camel:route-info consumer-route"). }
