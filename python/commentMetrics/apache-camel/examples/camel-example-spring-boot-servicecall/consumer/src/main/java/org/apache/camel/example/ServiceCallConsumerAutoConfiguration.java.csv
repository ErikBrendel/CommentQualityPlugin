commented;modifiers;parameterAmount;loc;comment;code
false;public;0;20;;@Override public void configure() throws Exception {     rest("/serviceCall").get("/{serviceId}").to("direct:service-call").     from("direct:service-call").setBody().constant(null).removeHeaders("CamelHttp*").to("log:service-call?level=INFO&showAll=true&multiline=true").choice().when(header("serviceId").isEqualTo("service1")).serviceCall("service-1").convertBodyTo(String.class).log("service-1 : ${body}").when(header("serviceId").isEqualTo("service2")).serviceCall("service-2").convertBodyTo(String.class).log("service-2 : ${body}"). }
false;public;0;25;;@Bean public RouteBuilder routeBuilder() {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             rest("/serviceCall").get("/{serviceId}").to("direct:service-call").             from("direct:service-call").setBody().constant(null).removeHeaders("CamelHttp*").to("log:service-call?level=INFO&showAll=true&multiline=true").choice().when(header("serviceId").isEqualTo("service1")).serviceCall("service-1").convertBodyTo(String.class).log("service-1 : ${body}").when(header("serviceId").isEqualTo("service2")).serviceCall("service-2").convertBodyTo(String.class).log("service-2 : ${body}").         }     }. }
