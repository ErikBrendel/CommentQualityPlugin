commented;modifiers;parameterAmount;loc;comment;code
false;public;0;17;;@Test public void consumeMessagesFromQueue() throws Exception {     // simple test to make sure that concurrent consumers were used in the test     NotifyBuilder notifier = new NotifyBuilder(context).whenCompleted(NUM_MESSAGES).create().     assertTrue("We didn't process " + NUM_MESSAGES + " messages as we expected!", notifier.matches(5, TimeUnit.SECONDS)).     if (isPlatform("windows")) {     // threading is different on windows     } else {         // usually we use all threads evenly but sometimes threads are reused so just test that 50%+ was used         if (threadNumbers.size() < (NUM_CONCURRENT / 2)) {             fail(String.format("We were expecting to have about half of %d numbers of concurrent consumers, but only found %d", NUM_CONCURRENT, threadNumbers.size())).         }     } }
false;protected;0;8;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry reg = super.createRegistry().     AmazonSQSClientMock client = new AmazonSQSClientMock().     createDummyMessages(client, NUM_MESSAGES).     reg.bind("client", client).     return reg. }
false;private;2;10;;private void createDummyMessages(AmazonSQSClientMock client, int numMessages) {     for (int counter = 0. counter < numMessages. counter++) {         Message message = new Message().         message.setBody("Message " + counter).         message.setMD5OfBody("6a1559560f67c5e7a7d5d838bf0272ee").         message.setMessageId("f6fb6f99-5eb2-4be4-9b15-144774141458").         message.setReceiptHandle("0NNAq8PwvXsyZkR6yu4nQ07FGxNmOBWi5").         client.messages.add(message).     } }
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception {     threadNumbers.add(Thread.currentThread().getId()). }
false;public;0;10;;@Override public void configure() throws Exception {     from("aws-sqs://demo?concurrentConsumers=" + NUM_CONCURRENT + "&maxMessagesPerPoll=10&amazonSQSClient=#client").process(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             threadNumbers.add(Thread.currentThread().getId()).         }     }).log("processed a new message!"). }
false;protected;0;15;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("aws-sqs://demo?concurrentConsumers=" + NUM_CONCURRENT + "&maxMessagesPerPoll=10&amazonSQSClient=#client").process(new Processor() {                  @Override                 public void process(Exchange exchange) throws Exception {                     threadNumbers.add(Thread.currentThread().getId()).                 }             }).log("processed a new message!").         }     }. }
