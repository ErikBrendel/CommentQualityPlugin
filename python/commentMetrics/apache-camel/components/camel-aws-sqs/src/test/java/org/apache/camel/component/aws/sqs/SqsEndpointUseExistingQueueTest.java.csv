commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void defaultsToDisabled() throws Exception {     this.mock.expectedMessageCount(1).     // Wait for message to arrive.     assertMockEndpointsSatisfied(). }
false;protected;0;9;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry registry = super.createRegistry().     AmazonSQSClientMock clientMock = new SqsEndpointUseExistingQueueTest.AmazonSQSClientMock().     registry.bind("amazonSQSClient", clientMock).     return registry. }
false;public;0;5;;@Override public void configure() throws Exception {     from("aws-sqs://MyQueue?amazonSQSClient=#amazonSQSClient").to("mock:result"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("aws-sqs://MyQueue?amazonSQSClient=#amazonSQSClient").to("mock:result").         }     }. }
false;public;0;8;;@Override public ListQueuesResult listQueues() throws AmazonServiceException, AmazonClientException {     ListQueuesResult result = new ListQueuesResult().     result.getQueueUrls().add("http://queue.amazonaws.com/0815/Foo").     result.getQueueUrls().add("http://queue.amazonaws.com/0815/MyQueue").     result.getQueueUrls().add("http://queue.amazonaws.com/0815/Bar").     return result. }
false;public;1;4;;@Override public CreateQueueResult createQueue(CreateQueueRequest createQueueRequest) throws AmazonServiceException, AmazonClientException {     throw new AmazonServiceException("forced exception for test if this method is called"). }
false;public;1;4;;@Override public SetQueueAttributesResult setQueueAttributes(SetQueueAttributesRequest setQueueAttributesRequest) throws AmazonServiceException, AmazonClientException {     return new SetQueueAttributesResult(). }
false;public;1;9;;@Override public ReceiveMessageResult receiveMessage(ReceiveMessageRequest receiveMessageRequest) throws AmazonServiceException, AmazonClientException {     ReceiveMessageResult result = new ReceiveMessageResult().     List<Message> resultMessages = result.getMessages().     Message message = new Message().     resultMessages.add(message).     return result. }
