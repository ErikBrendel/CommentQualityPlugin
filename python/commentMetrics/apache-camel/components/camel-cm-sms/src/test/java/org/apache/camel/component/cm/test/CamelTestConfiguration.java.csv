commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Override public void configure() throws Exception {     Assert.hasLength(uri).     log.debug("CM Component is an URI based component\nCM URI: {}", uri).     // Route definition     from("direct:sms").to(uri).to("mock:test").routeId(SIMPLE_ROUTE_ID). }
false;public;0;18;;@Override public RouteBuilder route() {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             Assert.hasLength(uri).             log.debug("CM Component is an URI based component\nCM URI: {}", uri).             // Route definition             from("direct:sms").to(uri).to("mock:test").routeId(SIMPLE_ROUTE_ID).         }     }. }
false;public;0;7;;@Bean public LocalValidatorFactoryBean getValidatorFactory() {     final LocalValidatorFactoryBean localValidatorFactoryBean = new LocalValidatorFactoryBean().     localValidatorFactoryBean.getValidationPropertyMap().put("hibernate.validator.fail_fast", "true").     return localValidatorFactoryBean. }
true;public,final;1;35;/**  * Build the URI of the CM Component based on Environmental properties  */ ;/**  * Build the URI of the CM Component based on Environmental properties  */ @Override public final void setApplicationContext(final ApplicationContext applicationContext) {     super.setApplicationContext(applicationContext).     final Environment env = applicationContext.getEnvironment().     final String host = env.getRequiredProperty("cm.url").     final String productTokenString = env.getRequiredProperty("cm.product-token").     final String sender = env.getRequiredProperty("cm.default-sender").     final StringBuffer cmUri = new StringBuffer("cm-sms:" + host).append("?productToken=").append(productTokenString).     if (sender != null && !sender.isEmpty()) {         cmUri.append("&defaultFrom=").append(sender).     }     // Defaults to false     final Boolean testConnectionOnStartup = Boolean.parseBoolean(env.getProperty("cm.testConnectionOnStartup", "false")).     if (testConnectionOnStartup) {         cmUri.append("&testConnectionOnStartup=").append(testConnectionOnStartup.toString()).     }     // Defaults to 8     final Integer defaultMaxNumberOfParts = Integer.parseInt(env.getProperty("defaultMaxNumberOfParts", "8")).     cmUri.append("&defaultMaxNumberOfParts=").append(defaultMaxNumberOfParts.toString()).     uri = cmUri.toString(). }
false;public;0;3;;public String getUri() {     return uri. }
