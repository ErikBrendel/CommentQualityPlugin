commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;29;;@Override protected Endpoint createEndpoint(final String uri, final String remaining, final Map<String, Object> parameters) throws Exception {     // Set configuration based on uri parameters     final CMConfiguration config = new CMConfiguration().     setProperties(config, parameters).     // Validate configuration     log.debug("Validating uri based configuration").     final Set<ConstraintViolation<CMConfiguration>> constraintViolations = getValidator().validate(config).     if (constraintViolations.size() > 0) {         final StringBuffer msg = new StringBuffer().         for (final ConstraintViolation<CMConfiguration> cv : constraintViolations) {             msg.append(String.format("- Invalid value for %s: %s", cv.getPropertyPath().toString(), cv.getMessage())).         }         throw new ResolveEndpointFailedException(uri, msg.toString()).     }     // Component is an Endpoint factory. So far, just one Endpoint type.     // Endpoint construction and configuration.     final CMEndpoint endpoint = new CMEndpoint(uri, this).     endpoint.setConfiguration(config).     endpoint.setHost(remaining).     return endpoint. }
false;public;0;7;;public Validator getValidator() {     if (validator == null) {         ValidatorFactory factory = Validation.buildDefaultValidatorFactory().         validator = factory.getValidator().     }     return validator. }
