commented;modifiers;parameterAmount;loc;comment;code
false;public;1;8;;@Override public void process(Exchange exchange) throws Exception {     Map<String, String> body = new HashMap<>().     body.put("keepMe", "This should still be in the result").     body.put("Hello", "World").     body.put("removeMe", "This should be gone").     exchange.getIn().setBody(body). }
false;public;0;17;;@Test public void testFirstSampleJolt() throws Exception {     Exchange exchange = template.request("direct://start", new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             Map<String, String> body = new HashMap<>().             body.put("keepMe", "This should still be in the result").             body.put("Hello", "World").             body.put("removeMe", "This should be gone").             exchange.getIn().setBody(body).         }     }).     assertEquals(2, exchange.getOut().getBody(Map.class).size()).     assertEquals(null, exchange.getOut().getBody(Map.class).get("removeMe")).     assertEquals("World", exchange.getOut().getBody(Map.class).get("Hello")). }
false;public;0;4;;public void configure() {     from("direct://start").to("jolt:org/apache/camel/component/jolt/removr.json?transformDsl=Removr"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             from("direct://start").to("jolt:org/apache/camel/component/jolt/removr.json?transformDsl=Removr").         }     }. }
