commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;@Test public void testSimple() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Hello World").     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied().     // should have detected custom and use that     HeadersMapFactory factory = context.getHeadersMapFactory().     assertIsInstanceOf(FastHeadersMapFactory.class, factory). }
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:start").to("log:foo").to("log:bar").to("mock:result"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("log:foo").to("log:bar").to("mock:result").         }     }. }
