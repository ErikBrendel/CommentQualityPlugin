commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void testReadTwice() throws Exception {     getMockEndpoint("mock:foo").expectedMessageCount(1).     getMockEndpoint("mock:bar").expectedMessageCount(1).     String body = "{ \"name\": \"Joe Doe\", \"id\": 1, \"price\": 12.5 }".     ByteArrayInputStream bais = new ByteArrayInputStream(body.getBytes()).     template.sendBody("direct:start", bais).     assertMockEndpointsSatisfied(). }
false;public;0;8;;@Override public void configure() throws Exception {     from("direct:start").to("json-validator:org/apache/camel/component/jsonvalidator/schema.json").to("mock:foo").to("json-validator:org/apache/camel/component/jsonvalidator/schema.json").to("mock:bar"). }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("json-validator:org/apache/camel/component/jsonvalidator/schema.json").to("mock:foo").to("json-validator:org/apache/camel/component/jsonvalidator/schema.json").to("mock:bar").         }     }. }
