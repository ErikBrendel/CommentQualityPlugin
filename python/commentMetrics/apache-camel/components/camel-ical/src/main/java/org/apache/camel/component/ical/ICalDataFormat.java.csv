commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getDataFormatName() {     return "ical". }
false;public;3;5;;@Override public void marshal(Exchange exchange, Object graph, OutputStream stream) throws Exception {     Calendar calendar = exchange.getContext().getTypeConverter().convertTo(Calendar.class, graph).     outputer.output(calendar, stream). }
false;public;2;4;;@Override public Object unmarshal(Exchange exchange, InputStream stream) throws Exception {     return builder.build(stream). }
false;protected;0;4;;@Override protected void doStart() throws Exception { // noop }
false;protected;0;4;;@Override protected void doStop() throws Exception { // noop }
false;public;1;3;;public void setValidating(boolean validate) {     outputer.setValidating(validate). }
false;public;0;3;;public boolean isValidating() {     return outputer.isValidating(). }
false;public;0;3;;public CalendarOutputter getOutputer() {     return outputer. }
false;public;1;3;;public void setOutputer(CalendarOutputter outputer) {     this.outputer = outputer. }
false;public;0;3;;public CalendarBuilder getBuilder() {     return builder. }
false;public;1;3;;public void setBuilder(CalendarBuilder builder) {     this.builder = builder. }
