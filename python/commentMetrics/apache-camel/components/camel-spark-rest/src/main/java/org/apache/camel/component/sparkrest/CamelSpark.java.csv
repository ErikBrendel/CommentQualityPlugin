# id;timestamp;commentText;codeText;commentWords;codeWords
CamelSpark -> public static void spark(String verb, String path, String accept, Route route);1456059484;Adds a Spark REST verb that routes to the given Camel route__@param verb   the HTTP verb_@param path   the context path_@param accept the accept header_@param route  the Camel route;public static void spark(String verb, String path, String accept, Route route) {_        if ("get".equals(verb)) {_            if (accept != null) {_                Spark.get(path, accept, route)__            } else {_                Spark.get(path, route)__            }_        } else if ("post".equals(verb)) {_            if (accept != null) {_                Spark.post(path, accept, route)__            } else {_                Spark.post(path, route)__            }_        } else if ("put".equals(verb)) {_            if (accept != null) {_                Spark.put(path, accept, route)__            } else {_                Spark.put(path, route)__            }_        } else if ("patch".equals(verb)) {_            if (accept != null) {_                Spark.patch(path, accept, route)__            } else {_                Spark.patch(path, route)__            }_        } else if ("delete".equals(verb)) {_            if (accept != null) {_                Spark.delete(path, accept, route)__            } else {_                Spark.delete(path, route)__            }_        } else if ("head".equals(verb)) {_            if (accept != null) {_                Spark.head(path, accept, route)__            } else {_                Spark.head(path, route)__            }_        } else if ("trace".equals(verb)) {_            if (accept != null) {_                Spark.trace(path, accept, route)__            } else {_                Spark.trace(path, route)__            }_        } else if ("connect".equals(verb)) {_            if (accept != null) {_                Spark.connect(path, accept, route)__            } else {_                Spark.connect(path, route)__            }_        } else if ("options".equals(verb)) {_            if (accept != null) {_                Spark.options(path, accept, route)__            } else {_                Spark.options(path, route)__            }_        }_    };adds,a,spark,rest,verb,that,routes,to,the,given,camel,route,param,verb,the,http,verb,param,path,the,context,path,param,accept,the,accept,header,param,route,the,camel,route;public,static,void,spark,string,verb,string,path,string,accept,route,route,if,get,equals,verb,if,accept,null,spark,get,path,accept,route,else,spark,get,path,route,else,if,post,equals,verb,if,accept,null,spark,post,path,accept,route,else,spark,post,path,route,else,if,put,equals,verb,if,accept,null,spark,put,path,accept,route,else,spark,put,path,route,else,if,patch,equals,verb,if,accept,null,spark,patch,path,accept,route,else,spark,patch,path,route,else,if,delete,equals,verb,if,accept,null,spark,delete,path,accept,route,else,spark,delete,path,route,else,if,head,equals,verb,if,accept,null,spark,head,path,accept,route,else,spark,head,path,route,else,if,trace,equals,verb,if,accept,null,spark,trace,path,accept,route,else,spark,trace,path,route,else,if,connect,equals,verb,if,accept,null,spark,connect,path,accept,route,else,spark,connect,path,route,else,if,options,equals,verb,if,accept,null,spark,options,path,accept,route,else,spark,options,path,route
CamelSpark -> public static void spark(String verb, String path, String accept, Route route);1456059932;Adds a Spark REST verb that routes to the given spark route__@param verb   the HTTP verb_@param path   the context path_@param accept the accept header_@param route  the spark route (we call a Camel route from here);public static void spark(String verb, String path, String accept, Route route) {_        if ("get".equals(verb)) {_            if (accept != null) {_                Spark.get(path, accept, route)__            } else {_                Spark.get(path, route)__            }_        } else if ("post".equals(verb)) {_            if (accept != null) {_                Spark.post(path, accept, route)__            } else {_                Spark.post(path, route)__            }_        } else if ("put".equals(verb)) {_            if (accept != null) {_                Spark.put(path, accept, route)__            } else {_                Spark.put(path, route)__            }_        } else if ("patch".equals(verb)) {_            if (accept != null) {_                Spark.patch(path, accept, route)__            } else {_                Spark.patch(path, route)__            }_        } else if ("delete".equals(verb)) {_            if (accept != null) {_                Spark.delete(path, accept, route)__            } else {_                Spark.delete(path, route)__            }_        } else if ("head".equals(verb)) {_            if (accept != null) {_                Spark.head(path, accept, route)__            } else {_                Spark.head(path, route)__            }_        } else if ("trace".equals(verb)) {_            if (accept != null) {_                Spark.trace(path, accept, route)__            } else {_                Spark.trace(path, route)__            }_        } else if ("connect".equals(verb)) {_            if (accept != null) {_                Spark.connect(path, accept, route)__            } else {_                Spark.connect(path, route)__            }_        } else if ("options".equals(verb)) {_            if (accept != null) {_                Spark.options(path, accept, route)__            } else {_                Spark.options(path, route)__            }_        }_    };adds,a,spark,rest,verb,that,routes,to,the,given,spark,route,param,verb,the,http,verb,param,path,the,context,path,param,accept,the,accept,header,param,route,the,spark,route,we,call,a,camel,route,from,here;public,static,void,spark,string,verb,string,path,string,accept,route,route,if,get,equals,verb,if,accept,null,spark,get,path,accept,route,else,spark,get,path,route,else,if,post,equals,verb,if,accept,null,spark,post,path,accept,route,else,spark,post,path,route,else,if,put,equals,verb,if,accept,null,spark,put,path,accept,route,else,spark,put,path,route,else,if,patch,equals,verb,if,accept,null,spark,patch,path,accept,route,else,spark,patch,path,route,else,if,delete,equals,verb,if,accept,null,spark,delete,path,accept,route,else,spark,delete,path,route,else,if,head,equals,verb,if,accept,null,spark,head,path,accept,route,else,spark,head,path,route,else,if,trace,equals,verb,if,accept,null,spark,trace,path,accept,route,else,spark,trace,path,route,else,if,connect,equals,verb,if,accept,null,spark,connect,path,accept,route,else,spark,connect,path,route,else,if,options,equals,verb,if,accept,null,spark,options,path,accept,route,else,spark,options,path,route
CamelSpark -> public static void spark(String verb, String path, String accept, Route route);1456060011;Adds a Spark REST verb that routes to the given spark route__@param verb   the HTTP verb_@param path   the context path_@param accept the accept header_@param route  the spark route (we call a Camel route from here);public static void spark(String verb, String path, String accept, Route route) {_        if ("get".equals(verb)) {_            if (accept != null) {_                Spark.get(path, accept, route)__            } else {_                Spark.get(path, route)__            }_        } else if ("post".equals(verb)) {_            if (accept != null) {_                Spark.post(path, accept, route)__            } else {_                Spark.post(path, route)__            }_        } else if ("put".equals(verb)) {_            if (accept != null) {_                Spark.put(path, accept, route)__            } else {_                Spark.put(path, route)__            }_        } else if ("patch".equals(verb)) {_            if (accept != null) {_                Spark.patch(path, accept, route)__            } else {_                Spark.patch(path, route)__            }_        } else if ("delete".equals(verb)) {_            if (accept != null) {_                Spark.delete(path, accept, route)__            } else {_                Spark.delete(path, route)__            }_        } else if ("head".equals(verb)) {_            if (accept != null) {_                Spark.head(path, accept, route)__            } else {_                Spark.head(path, route)__            }_        } else if ("trace".equals(verb)) {_            if (accept != null) {_                Spark.trace(path, accept, route)__            } else {_                Spark.trace(path, route)__            }_        } else if ("connect".equals(verb)) {_            if (accept != null) {_                Spark.connect(path, accept, route)__            } else {_                Spark.connect(path, route)__            }_        } else if ("options".equals(verb)) {_            if (accept != null) {_                Spark.options(path, accept, route)__            } else {_                Spark.options(path, route)__            }_        }_    };adds,a,spark,rest,verb,that,routes,to,the,given,spark,route,param,verb,the,http,verb,param,path,the,context,path,param,accept,the,accept,header,param,route,the,spark,route,we,call,a,camel,route,from,here;public,static,void,spark,string,verb,string,path,string,accept,route,route,if,get,equals,verb,if,accept,null,spark,get,path,accept,route,else,spark,get,path,route,else,if,post,equals,verb,if,accept,null,spark,post,path,accept,route,else,spark,post,path,route,else,if,put,equals,verb,if,accept,null,spark,put,path,accept,route,else,spark,put,path,route,else,if,patch,equals,verb,if,accept,null,spark,patch,path,accept,route,else,spark,patch,path,route,else,if,delete,equals,verb,if,accept,null,spark,delete,path,accept,route,else,spark,delete,path,route,else,if,head,equals,verb,if,accept,null,spark,head,path,accept,route,else,spark,head,path,route,else,if,trace,equals,verb,if,accept,null,spark,trace,path,accept,route,else,spark,trace,path,route,else,if,connect,equals,verb,if,accept,null,spark,connect,path,accept,route,else,spark,connect,path,route,else,if,options,equals,verb,if,accept,null,spark,options,path,accept,route,else,spark,options,path,route
CamelSpark -> public static void spark(String verb, String path, String accept, Route route);1456060355;Adds a Spark REST verb that routes to the given spark route__@param verb   the HTTP verb_@param path   the context path_@param accept the accept header_@param route  the spark route (we call a Camel route from here);public static void spark(String verb, String path, String accept, Route route) {_        if ("get".equals(verb)) {_            if (accept != null) {_                Spark.get(path, accept, route)__            } else {_                Spark.get(path, route)__            }_        } else if ("post".equals(verb)) {_            if (accept != null) {_                Spark.post(path, accept, route)__            } else {_                Spark.post(path, route)__            }_        } else if ("put".equals(verb)) {_            if (accept != null) {_                Spark.put(path, accept, route)__            } else {_                Spark.put(path, route)__            }_        } else if ("patch".equals(verb)) {_            if (accept != null) {_                Spark.patch(path, accept, route)__            } else {_                Spark.patch(path, route)__            }_        } else if ("delete".equals(verb)) {_            if (accept != null) {_                Spark.delete(path, accept, route)__            } else {_                Spark.delete(path, route)__            }_        } else if ("head".equals(verb)) {_            if (accept != null) {_                Spark.head(path, accept, route)__            } else {_                Spark.head(path, route)__            }_        } else if ("trace".equals(verb)) {_            if (accept != null) {_                Spark.trace(path, accept, route)__            } else {_                Spark.trace(path, route)__            }_        } else if ("connect".equals(verb)) {_            if (accept != null) {_                Spark.connect(path, accept, route)__            } else {_                Spark.connect(path, route)__            }_        } else if ("options".equals(verb)) {_            if (accept != null) {_                Spark.options(path, accept, route)__            } else {_                Spark.options(path, route)__            }_        }_    };adds,a,spark,rest,verb,that,routes,to,the,given,spark,route,param,verb,the,http,verb,param,path,the,context,path,param,accept,the,accept,header,param,route,the,spark,route,we,call,a,camel,route,from,here;public,static,void,spark,string,verb,string,path,string,accept,route,route,if,get,equals,verb,if,accept,null,spark,get,path,accept,route,else,spark,get,path,route,else,if,post,equals,verb,if,accept,null,spark,post,path,accept,route,else,spark,post,path,route,else,if,put,equals,verb,if,accept,null,spark,put,path,accept,route,else,spark,put,path,route,else,if,patch,equals,verb,if,accept,null,spark,patch,path,accept,route,else,spark,patch,path,route,else,if,delete,equals,verb,if,accept,null,spark,delete,path,accept,route,else,spark,delete,path,route,else,if,head,equals,verb,if,accept,null,spark,head,path,accept,route,else,spark,head,path,route,else,if,trace,equals,verb,if,accept,null,spark,trace,path,accept,route,else,spark,trace,path,route,else,if,connect,equals,verb,if,accept,null,spark,connect,path,accept,route,else,spark,connect,path,route,else,if,options,equals,verb,if,accept,null,spark,options,path,accept,route,else,spark,options,path,route
CamelSpark -> public static void spark(String verb, String path, String accept, Route route);1456060760;Adds a Spark REST verb that routes to the given spark route__@param verb   the HTTP verb_@param path   the context path_@param accept the accept header_@param route  the spark route (we call a Camel route from here);public static void spark(String verb, String path, String accept, Route route) {_        if ("get".equals(verb)) {_            if (accept != null) {_                Spark.get(path, accept, route)__            } else {_                Spark.get(path, route)__            }_        } else if ("post".equals(verb)) {_            if (accept != null) {_                Spark.post(path, accept, route)__            } else {_                Spark.post(path, route)__            }_        } else if ("put".equals(verb)) {_            if (accept != null) {_                Spark.put(path, accept, route)__            } else {_                Spark.put(path, route)__            }_        } else if ("patch".equals(verb)) {_            if (accept != null) {_                Spark.patch(path, accept, route)__            } else {_                Spark.patch(path, route)__            }_        } else if ("delete".equals(verb)) {_            if (accept != null) {_                Spark.delete(path, accept, route)__            } else {_                Spark.delete(path, route)__            }_        } else if ("head".equals(verb)) {_            if (accept != null) {_                Spark.head(path, accept, route)__            } else {_                Spark.head(path, route)__            }_        } else if ("trace".equals(verb)) {_            if (accept != null) {_                Spark.trace(path, accept, route)__            } else {_                Spark.trace(path, route)__            }_        } else if ("connect".equals(verb)) {_            if (accept != null) {_                Spark.connect(path, accept, route)__            } else {_                Spark.connect(path, route)__            }_        } else if ("options".equals(verb)) {_            if (accept != null) {_                Spark.options(path, accept, route)__            } else {_                Spark.options(path, route)__            }_        }_    };adds,a,spark,rest,verb,that,routes,to,the,given,spark,route,param,verb,the,http,verb,param,path,the,context,path,param,accept,the,accept,header,param,route,the,spark,route,we,call,a,camel,route,from,here;public,static,void,spark,string,verb,string,path,string,accept,route,route,if,get,equals,verb,if,accept,null,spark,get,path,accept,route,else,spark,get,path,route,else,if,post,equals,verb,if,accept,null,spark,post,path,accept,route,else,spark,post,path,route,else,if,put,equals,verb,if,accept,null,spark,put,path,accept,route,else,spark,put,path,route,else,if,patch,equals,verb,if,accept,null,spark,patch,path,accept,route,else,spark,patch,path,route,else,if,delete,equals,verb,if,accept,null,spark,delete,path,accept,route,else,spark,delete,path,route,else,if,head,equals,verb,if,accept,null,spark,head,path,accept,route,else,spark,head,path,route,else,if,trace,equals,verb,if,accept,null,spark,trace,path,accept,route,else,spark,trace,path,route,else,if,connect,equals,verb,if,accept,null,spark,connect,path,accept,route,else,spark,connect,path,route,else,if,options,equals,verb,if,accept,null,spark,options,path,accept,route,else,spark,options,path,route
CamelSpark -> public static void spark(String verb, String path, String accept, Route route);1456586710;Adds a Spark REST verb that routes to the given spark route__@param verb   the HTTP verb_@param path   the context path_@param accept the accept header_@param route  the spark route (we call a Camel route from here);public static void spark(String verb, String path, String accept, Route route) {_        if ("get".equals(verb)) {_            if (accept != null) {_                Spark.get(path, accept, route)__            } else {_                Spark.get(path, route)__            }_        } else if ("post".equals(verb)) {_            if (accept != null) {_                Spark.post(path, accept, route)__            } else {_                Spark.post(path, route)__            }_        } else if ("put".equals(verb)) {_            if (accept != null) {_                Spark.put(path, accept, route)__            } else {_                Spark.put(path, route)__            }_        } else if ("patch".equals(verb)) {_            if (accept != null) {_                Spark.patch(path, accept, route)__            } else {_                Spark.patch(path, route)__            }_        } else if ("delete".equals(verb)) {_            if (accept != null) {_                Spark.delete(path, accept, route)__            } else {_                Spark.delete(path, route)__            }_        } else if ("head".equals(verb)) {_            if (accept != null) {_                Spark.head(path, accept, route)__            } else {_                Spark.head(path, route)__            }_        } else if ("trace".equals(verb)) {_            if (accept != null) {_                Spark.trace(path, accept, route)__            } else {_                Spark.trace(path, route)__            }_        } else if ("connect".equals(verb)) {_            if (accept != null) {_                Spark.connect(path, accept, route)__            } else {_                Spark.connect(path, route)__            }_        } else if ("options".equals(verb)) {_            if (accept != null) {_                Spark.options(path, accept, route)__            } else {_                Spark.options(path, route)__            }_        }_    };adds,a,spark,rest,verb,that,routes,to,the,given,spark,route,param,verb,the,http,verb,param,path,the,context,path,param,accept,the,accept,header,param,route,the,spark,route,we,call,a,camel,route,from,here;public,static,void,spark,string,verb,string,path,string,accept,route,route,if,get,equals,verb,if,accept,null,spark,get,path,accept,route,else,spark,get,path,route,else,if,post,equals,verb,if,accept,null,spark,post,path,accept,route,else,spark,post,path,route,else,if,put,equals,verb,if,accept,null,spark,put,path,accept,route,else,spark,put,path,route,else,if,patch,equals,verb,if,accept,null,spark,patch,path,accept,route,else,spark,patch,path,route,else,if,delete,equals,verb,if,accept,null,spark,delete,path,accept,route,else,spark,delete,path,route,else,if,head,equals,verb,if,accept,null,spark,head,path,accept,route,else,spark,head,path,route,else,if,trace,equals,verb,if,accept,null,spark,trace,path,accept,route,else,spark,trace,path,route,else,if,connect,equals,verb,if,accept,null,spark,connect,path,accept,route,else,spark,connect,path,route,else,if,options,equals,verb,if,accept,null,spark,options,path,accept,route,else,spark,options,path,route
CamelSpark -> public static void spark(String verb, String path, String accept, Route route);1479916234;Adds a Spark REST verb that routes to the given spark route__@param verb   the HTTP verb_@param path   the context path_@param accept the accept header_@param route  the spark route (we call a Camel route from here);public static void spark(String verb, String path, String accept, Route route) {_        if ("get".equals(verb)) {_            if (accept != null) {_                Spark.get(path, accept, route)__            } else {_                Spark.get(path, route)__            }_        } else if ("post".equals(verb)) {_            if (accept != null) {_                Spark.post(path, accept, route)__            } else {_                Spark.post(path, route)__            }_        } else if ("put".equals(verb)) {_            if (accept != null) {_                Spark.put(path, accept, route)__            } else {_                Spark.put(path, route)__            }_        } else if ("patch".equals(verb)) {_            if (accept != null) {_                Spark.patch(path, accept, route)__            } else {_                Spark.patch(path, route)__            }_        } else if ("delete".equals(verb)) {_            if (accept != null) {_                Spark.delete(path, accept, route)__            } else {_                Spark.delete(path, route)__            }_        } else if ("head".equals(verb)) {_            if (accept != null) {_                Spark.head(path, accept, route)__            } else {_                Spark.head(path, route)__            }_        } else if ("trace".equals(verb)) {_            if (accept != null) {_                Spark.trace(path, accept, route)__            } else {_                Spark.trace(path, route)__            }_        } else if ("connect".equals(verb)) {_            if (accept != null) {_                Spark.connect(path, accept, route)__            } else {_                Spark.connect(path, route)__            }_        } else if ("options".equals(verb)) {_            if (accept != null) {_                Spark.options(path, accept, route)__            } else {_                Spark.options(path, route)__            }_        }_    };adds,a,spark,rest,verb,that,routes,to,the,given,spark,route,param,verb,the,http,verb,param,path,the,context,path,param,accept,the,accept,header,param,route,the,spark,route,we,call,a,camel,route,from,here;public,static,void,spark,string,verb,string,path,string,accept,route,route,if,get,equals,verb,if,accept,null,spark,get,path,accept,route,else,spark,get,path,route,else,if,post,equals,verb,if,accept,null,spark,post,path,accept,route,else,spark,post,path,route,else,if,put,equals,verb,if,accept,null,spark,put,path,accept,route,else,spark,put,path,route,else,if,patch,equals,verb,if,accept,null,spark,patch,path,accept,route,else,spark,patch,path,route,else,if,delete,equals,verb,if,accept,null,spark,delete,path,accept,route,else,spark,delete,path,route,else,if,head,equals,verb,if,accept,null,spark,head,path,accept,route,else,spark,head,path,route,else,if,trace,equals,verb,if,accept,null,spark,trace,path,accept,route,else,spark,trace,path,route,else,if,connect,equals,verb,if,accept,null,spark,connect,path,accept,route,else,spark,connect,path,route,else,if,options,equals,verb,if,accept,null,spark,options,path,accept,route,else,spark,options,path,route
CamelSpark -> public static void security(String keystoreFile, String keystorePassword, String truststoreFile, String truststorePassword);1456060760;Configures connection to be secure;public static void security(String keystoreFile, String keystorePassword, String truststoreFile, String truststorePassword) {_        Spark.secure(keystoreFile, keystorePassword, truststoreFile, truststorePassword)__    };configures,connection,to,be,secure;public,static,void,security,string,keystore,file,string,keystore,password,string,truststore,file,string,truststore,password,spark,secure,keystore,file,keystore,password,truststore,file,truststore,password
CamelSpark -> public static void security(String keystoreFile, String keystorePassword, String truststoreFile, String truststorePassword);1456586710;Configures connection to be secure;public static void security(String keystoreFile, String keystorePassword, String truststoreFile, String truststorePassword) {_        Spark.secure(keystoreFile, keystorePassword, truststoreFile, truststorePassword)__    };configures,connection,to,be,secure;public,static,void,security,string,keystore,file,string,keystore,password,string,truststore,file,string,truststore,password,spark,secure,keystore,file,keystore,password,truststore,file,truststore,password
CamelSpark -> public static void security(String keystoreFile, String keystorePassword, String truststoreFile, String truststorePassword);1479916234;Configures connection to be secure;public static void security(String keystoreFile, String keystorePassword, String truststoreFile, String truststorePassword) {_        Spark.secure(keystoreFile, keystorePassword, truststoreFile, truststorePassword)__    };configures,connection,to,be,secure;public,static,void,security,string,keystore,file,string,keystore,password,string,truststore,file,string,truststore,password,spark,secure,keystore,file,keystore,password,truststore,file,truststore,password
CamelSpark -> public static void port(int port);1456059484;Configures the port number to use;public static void port(int port) {_        Spark.port(port)__    };configures,the,port,number,to,use;public,static,void,port,int,port,spark,port,port
CamelSpark -> public static void port(int port);1456059932;Configures the port number to use;public static void port(int port) {_        Spark.port(port)__    };configures,the,port,number,to,use;public,static,void,port,int,port,spark,port,port
CamelSpark -> public static void port(int port);1456060011;Configures the port number to use;public static void port(int port) {_        Spark.port(port)__    };configures,the,port,number,to,use;public,static,void,port,int,port,spark,port,port
CamelSpark -> public static void port(int port);1456060355;Configures the port number to use;public static void port(int port) {_        Spark.port(port)__    };configures,the,port,number,to,use;public,static,void,port,int,port,spark,port,port
CamelSpark -> public static void port(int port);1456060760;Configures the port number to use;public static void port(int port) {_        Spark.port(port)__    };configures,the,port,number,to,use;public,static,void,port,int,port,spark,port,port
CamelSpark -> public static void port(int port);1456586710;Configures the port number to use;public static void port(int port) {_        Spark.port(port)__    };configures,the,port,number,to,use;public,static,void,port,int,port,spark,port,port
CamelSpark -> public static void port(int port);1479916234;Configures the port number to use;public static void port(int port) {_        Spark.port(port)__    };configures,the,port,number,to,use;public,static,void,port,int,port,spark,port,port
CamelSpark -> public static void stop();1456059484;Stops the Spark Server;public static void stop() {_        Spark.stop()__    };stops,the,spark,server;public,static,void,stop,spark,stop
CamelSpark -> public static void stop();1456059932;Stops the Spark Server;public static void stop() {_        Spark.stop()__    };stops,the,spark,server;public,static,void,stop,spark,stop
CamelSpark -> public static void stop();1456060011;Stops the Spark Server;public static void stop() {_        Spark.stop()__    };stops,the,spark,server;public,static,void,stop,spark,stop
CamelSpark -> public static void stop();1456060355;Stops the Spark Server;public static void stop() {_        Spark.stop()__    };stops,the,spark,server;public,static,void,stop,spark,stop
CamelSpark -> public static void stop();1456060760;Stops the Spark Server;public static void stop() {_        Spark.stop()__    };stops,the,spark,server;public,static,void,stop,spark,stop
CamelSpark -> public static void stop();1456586710;Stops the Spark Server;public static void stop() {_        Spark.stop()__    };stops,the,spark,server;public,static,void,stop,spark,stop
CamelSpark -> public static void stop();1479916234;Stops the Spark Server;public static void stop() {_        Spark.stop()__    };stops,the,spark,server;public,static,void,stop,spark,stop
CamelSpark -> public static void ipAddress(String ip);1456059484;Configures the IP address to use;public static void ipAddress(String ip) {_        Spark.ipAddress(ip)__    };configures,the,ip,address,to,use;public,static,void,ip,address,string,ip,spark,ip,address,ip
CamelSpark -> public static void ipAddress(String ip);1456059932;Configures the IP address to use;public static void ipAddress(String ip) {_        Spark.ipAddress(ip)__    };configures,the,ip,address,to,use;public,static,void,ip,address,string,ip,spark,ip,address,ip
CamelSpark -> public static void ipAddress(String ip);1456060011;Configures the IP address to use;public static void ipAddress(String ip) {_        Spark.ipAddress(ip)__    };configures,the,ip,address,to,use;public,static,void,ip,address,string,ip,spark,ip,address,ip
CamelSpark -> public static void ipAddress(String ip);1456060355;Configures the IP address to use;public static void ipAddress(String ip) {_        Spark.ipAddress(ip)__    };configures,the,ip,address,to,use;public,static,void,ip,address,string,ip,spark,ip,address,ip
CamelSpark -> public static void ipAddress(String ip);1456060760;Configures the IP address to use;public static void ipAddress(String ip) {_        Spark.ipAddress(ip)__    };configures,the,ip,address,to,use;public,static,void,ip,address,string,ip,spark,ip,address,ip
CamelSpark -> public static void ipAddress(String ip);1456586710;Configures the IP address to use;public static void ipAddress(String ip) {_        Spark.ipAddress(ip)__    };configures,the,ip,address,to,use;public,static,void,ip,address,string,ip,spark,ip,address,ip
CamelSpark -> public static void ipAddress(String ip);1479916234;Configures the IP address to use;public static void ipAddress(String ip) {_        Spark.ipAddress(ip)__    };configures,the,ip,address,to,use;public,static,void,ip,address,string,ip,spark,ip,address,ip
CamelSpark -> public static void threadPool(int minThreads, int maxThreads, int timeOutMillis);1456060355;Configures the thread pool;public static void threadPool(int minThreads, int maxThreads, int timeOutMillis) {_        int min = minThreads > 0 ? minThreads : -1__        int max = maxThreads > 0 ? maxThreads : -1__        int idle = timeOutMillis > 0 ? timeOutMillis : -1___        Spark.threadPool(max, min, idle)__    };configures,the,thread,pool;public,static,void,thread,pool,int,min,threads,int,max,threads,int,time,out,millis,int,min,min,threads,0,min,threads,1,int,max,max,threads,0,max,threads,1,int,idle,time,out,millis,0,time,out,millis,1,spark,thread,pool,max,min,idle
CamelSpark -> public static void threadPool(int minThreads, int maxThreads, int timeOutMillis);1456060760;Configures the thread pool;public static void threadPool(int minThreads, int maxThreads, int timeOutMillis) {_        int min = minThreads > 0 ? minThreads : -1__        int max = maxThreads > 0 ? maxThreads : -1__        int idle = timeOutMillis > 0 ? timeOutMillis : -1___        Spark.threadPool(max, min, idle)__    };configures,the,thread,pool;public,static,void,thread,pool,int,min,threads,int,max,threads,int,time,out,millis,int,min,min,threads,0,min,threads,1,int,max,max,threads,0,max,threads,1,int,idle,time,out,millis,0,time,out,millis,1,spark,thread,pool,max,min,idle
CamelSpark -> public static void threadPool(int minThreads, int maxThreads, int timeOutMillis);1456586710;Configures the thread pool;public static void threadPool(int minThreads, int maxThreads, int timeOutMillis) {_        int min = minThreads > 0 ? minThreads : -1__        int max = maxThreads > 0 ? maxThreads : -1__        int idle = timeOutMillis > 0 ? timeOutMillis : -1___        Spark.threadPool(max, min, idle)__    };configures,the,thread,pool;public,static,void,thread,pool,int,min,threads,int,max,threads,int,time,out,millis,int,min,min,threads,0,min,threads,1,int,max,max,threads,0,max,threads,1,int,idle,time,out,millis,0,time,out,millis,1,spark,thread,pool,max,min,idle
CamelSpark -> public static void threadPool(int minThreads, int maxThreads, int timeOutMillis);1479916234;Configures the thread pool;public static void threadPool(int minThreads, int maxThreads, int timeOutMillis) {_        int min = minThreads > 0 ? minThreads : -1__        int max = maxThreads > 0 ? maxThreads : -1__        int idle = timeOutMillis > 0 ? timeOutMillis : -1___        Spark.threadPool(max, min, idle)__    };configures,the,thread,pool;public,static,void,thread,pool,int,min,threads,int,max,threads,int,time,out,millis,int,min,min,threads,0,min,threads,1,int,max,max,threads,0,max,threads,1,int,idle,time,out,millis,0,time,out,millis,1,spark,thread,pool,max,min,idle
