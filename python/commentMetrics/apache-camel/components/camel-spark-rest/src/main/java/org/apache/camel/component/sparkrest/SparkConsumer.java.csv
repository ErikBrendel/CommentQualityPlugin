commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public SparkEndpoint getEndpoint() {     return (SparkEndpoint) super.getEndpoint(). }
false;public;0;3;;public boolean isEnableCors() {     return enableCors. }
false;public;1;3;;public void setEnableCors(boolean enableCors) {     this.enableCors = enableCors. }
false;protected;0;25;;@Override protected void doStart() throws Exception {     super.doStart().     String verb = getEndpoint().getVerb().     String path = getEndpoint().getPath().     String accept = getEndpoint().getAccept().     boolean matchOnUriPrefix = getEndpoint().getSparkConfiguration().isMatchOnUriPrefix().     if (accept != null) {         log.debug("Spark-rest: {}({}) accepting: {}", verb, path, accept).     } else {         log.debug("Spark-rest: {}({})", verb, path).     }     CamelSpark.spark(verb, path, accept, route).     // special if cors is enabled in rest-dsl then we need a spark-route to trigger cors support     if (enableCors && !"options".equals(verb)) {         CamelSpark.spark("options", path, accept, route).     }     if (matchOnUriPrefix) {         CamelSpark.spark(verb, path + "/*", accept, route).     } }
