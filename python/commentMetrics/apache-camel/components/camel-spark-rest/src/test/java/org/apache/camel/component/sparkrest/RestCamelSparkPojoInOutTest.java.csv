commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testRestletPojoInOut() throws Exception {     String body = "{\"id\": 123, \"name\": \"Donald Duck\"}".     String out = template.requestBody("http://localhost:" + getPort() + "/users/lives", body, String.class).     assertNotNull(out).     assertEquals("{\"iso\":\"EN\",\"country\":\"England\"}", out). }
false;public;0;12;;@Override public void configure() throws Exception {     // configure to use spark on localhost with the given port     // and enable auto binding mode     restConfiguration().component("spark-rest").host("localhost").port(getPort()).bindingMode(RestBindingMode.auto).     // use the rest DSL to define the rest services     rest("/users/").post("lives").type(UserPojo.class).outType(CountryPojo.class).route().bean(new UserService(), "livesWhere"). }
false;protected;0;17;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // configure to use spark on localhost with the given port             // and enable auto binding mode             restConfiguration().component("spark-rest").host("localhost").port(getPort()).bindingMode(RestBindingMode.auto).             // use the rest DSL to define the rest services             rest("/users/").post("lives").type(UserPojo.class).outType(CountryPojo.class).route().bean(new UserService(), "livesWhere").         }     }. }
