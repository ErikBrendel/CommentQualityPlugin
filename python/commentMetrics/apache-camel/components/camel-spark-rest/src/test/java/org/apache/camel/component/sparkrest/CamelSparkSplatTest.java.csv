commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testSparkGet() throws Exception {     getMockEndpoint("mock:foo").expectedMessageCount(1).     String out = template.requestBody("http://localhost:" + getPort() + "/hello/camel/to/world", null, String.class).     assertEquals("Bye big world from camel", out).     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     from("spark-rest:get:/hello/*/to/*").to("mock:foo").transform().simple("Bye big ${header.splat[1]} from ${header.splat[0]}"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("spark-rest:get:/hello/*/to/*").to("mock:foo").transform().simple("Bye big ${header.splat[1]} from ${header.splat[0]}").         }     }. }
