commented;modifiers;parameterAmount;loc;comment;code
false;;0;3;;@WebMethod(operationName = "getSomething") @WebResult(name = "result", targetNamespace = "urn:test") String getSomething().
false;;0;3;;@WebMethod(operationName = "getSomething") @WebResult(name = "result", targetNamespace = "urn:test") String getSomething().
false;;0;2;;@WebMethod(operationName = "getSomething") Response<String> getSomethingAsync().
false;;1;3;;@WebMethod(operationName = "getSomething") Future<?> getSomethingAsync(@WebParam(name = "asyncHandler", targetNamespace = "") AsyncHandler<String> asyncHandler).
false;public;0;4;;@Override public String getSomething() {     return "something!". }
true;public;0;6;/**  * Initialize CamelTransportFactory without Spring  */ ;/**  * Initialize CamelTransportFactory without Spring  */ @Before public void setUpCXFCamelContext() {     bus = BusFactory.getThreadDefaultBus().     // make sure the CamelTransportFactory is injected with right camel context     bus.getExtension(CamelTransportFactory.class).setCamelContext(context). }
true;public;1;9;/**  * Create a SampleWS JAXWS-Proxy to a specified route  *  * @param camelEndpoint  * @return  */ ;/**  * Create a SampleWS JAXWS-Proxy to a specified route  *  * @param camelEndpoint  * @return  */ public SampleWS getSampleWS(String camelEndpoint) {     QName serviceName = new QName("urn:test", "testService").     Service s = Service.create(serviceName).     QName portName = new QName("urn:test", "testPort").     s.addPort(portName, "http://schemas.xmlsoap.org/soap/", "camel://" + camelEndpoint).     return s.getPort(SampleWS.class). }
false;public;1;7;;public SampleWS getSampleWSWithCXFAPI(String camelEndpoint) {     JaxWsProxyFactoryBean factory = new JaxWsProxyFactoryBean().     factory.setAddress("camel://" + camelEndpoint).     factory.setServiceClass(SampleWS.class).     factory.setBus(bus).     return factory.create(SampleWS.class). }
false;public;1;7;;public SampleWSAsync getSampleWSAsyncWithCXFAPI(String camelEndpoint) {     JaxWsProxyFactoryBean factory = new JaxWsProxyFactoryBean().     factory.setAddress("camel://" + camelEndpoint).     factory.setServiceClass(SampleWSAsync.class).     factory.setBus(bus).     return factory.create(SampleWSAsync.class). }
false;public;1;4;;/**  * Create a SampleWS Server to a specified route  * @param camelEndpoint  */ public Endpoint publishSampleWS(String camelEndpoint) {     return Endpoint.publish("camel://" + camelEndpoint, new SampleWSImpl()). }
false;public;1;7;;/**  * Create a SampleWS Server with Gzip enabled to a specified route  * @param camelEndpoint  */ public Endpoint publishSampleWSWithGzipEnabled(String camelEndpoint) {     EndpointImpl endpoint = (EndpointImpl) Endpoint.publish("camel://" + camelEndpoint, new SampleWSImpl()).     endpoint.getInInterceptors().add(new org.apache.cxf.transport.common.gzip.GZIPInInterceptor()).     endpoint.getOutInterceptors().add(new org.apache.cxf.transport.common.gzip.GZIPOutInterceptor(0)).     return endpoint. }
