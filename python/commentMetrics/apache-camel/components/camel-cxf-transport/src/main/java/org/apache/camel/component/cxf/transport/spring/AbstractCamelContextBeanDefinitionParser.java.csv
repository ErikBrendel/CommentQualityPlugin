commented;modifiers;parameterAmount;loc;comment;code
false;private;1;8;;private String getContextId(String contextId) {     if (ObjectHelper.isEmpty(contextId)) {         // Set the contextId default value here         return DEFAULT_CAMEL_CONTEXT_NAME.     } else {         return contextId.     } }
false;protected;2;3;;protected void wireCamelContext(BeanDefinitionBuilder bean, String camelContextId) {     bean.addPropertyReference("camelContext", camelContextId). }
false;protected;3;28;;protected void doParse(Element element, ParserContext ctx, BeanDefinitionBuilder bean) {     // Parser the id attribute     bean.setAbstract(true).     // Parser the camelContextId attribute     final String camelContextId = element.getAttribute("camelContextId").     if (!StringUtils.isEmpty(camelContextId)) {         wireCamelContext(bean, getContextId(camelContextId)).         // Don't need to do further parsing here         return.     }     NodeList children = element.getChildNodes().     for (int i = 0. i < children.getLength(). i++) {         Node n = children.item(i).         if (n.getNodeType() == Node.ELEMENT_NODE) {             String name = n.getLocalName().             if ("camelContext".equals(name)) {                 // Parser the camel context                 BeanDefinition bd = ctx.getDelegate().parseCustomElement((Element) n).                 // Get the inner camel context id                 String contextId = (String) bd.getPropertyValues().getPropertyValue("id").getValue().                 wireCamelContext(bean, getContextId(contextId)).             } else if ("camelContextRef".equals(name)) {                 String contextId = n.getTextContent().                 wireCamelContext(bean, getContextId(contextId)).             }         }     } }
