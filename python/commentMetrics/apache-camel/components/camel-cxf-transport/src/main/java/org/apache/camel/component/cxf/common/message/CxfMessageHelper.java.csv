commented;modifiers;parameterAmount;loc;comment;code
false;public,static;3;34;;public static org.apache.cxf.message.Message getCxfInMessage(HeaderFilterStrategy headerFilterStrategy, org.apache.camel.Exchange exchange, boolean isClient) {     MessageImpl answer = new MessageImpl().     org.apache.cxf.message.Exchange cxfExchange = exchange.getProperty(CamelTransportConstants.CXF_EXCHANGE, org.apache.cxf.message.Exchange.class).     org.apache.camel.Message message.     if (isClient && exchange.hasOut()) {         message = exchange.getOut().     } else {         message = exchange.getIn().     }     assert message != null.     if (cxfExchange == null) {         cxfExchange = new ExchangeImpl().         exchange.setProperty(CamelTransportConstants.CXF_EXCHANGE, cxfExchange).     }     CxfHeaderHelper.propagateCamelToCxf(headerFilterStrategy, message.getHeaders(), answer, exchange).     // body can be empty in case of GET etc.     InputStream body = message.getBody(InputStream.class).     if (body != null) {         answer.setContent(InputStream.class, body).     } else if (message.getBody() != null) {         // fallback and set the body as what it is         answer.setContent(Object.class, body).     }     answer.putAll(message.getHeaders()).     answer.setExchange(cxfExchange).     cxfExchange.setInMessage(answer).     return answer. }
