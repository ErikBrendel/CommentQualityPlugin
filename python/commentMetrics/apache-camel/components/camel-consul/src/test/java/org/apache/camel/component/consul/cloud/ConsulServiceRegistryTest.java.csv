commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
false;public;0;40;;@Test public void testSimpleServiceRegistration() throws Exception {     ConsulServiceRegistry registry = new ConsulServiceRegistry().     registry.setCamelContext(context()).     registry.setUrl(consulUrl()).     registry.setServiceHost("service-host").     registry.setOverrideServiceHost(true).     registry.start().     registry.register(DefaultServiceDefinition.builder().withId("my-id").withName("service-name").withHost("my-host").withPort(9091).build()).     final CatalogClient catalog = getConsul().catalogClient().     final HealthClient health = getConsul().healthClient().     // check that service has been registered     List<CatalogService> services = catalog.getService("service-name").getResponse().     assertEquals(1, services.size()).     assertEquals(9091, services.get(0).getServicePort()).     assertEquals("service-host", services.get(0).getServiceAddress()).     assertEquals("my-id", services.get(0).getServiceId()).     List<ServiceHealth> checks = health.getHealthyServiceInstances("service-name").getResponse().     assertEquals(1, checks.size()).     assertEquals(9091, checks.get(0).getService().getPort()).     assertEquals("service-host", checks.get(0).getService().getAddress()).     assertEquals("my-id", checks.get(0).getService().getId()).     registry.stop().     // check that service has been de registered on service registry shutdown     assertEquals(0, catalog.getService("service-name").getResponse().size()).     assertEquals(0, health.getServiceChecks("service-name").getResponse().size()). }
