commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override public void doPreSetup() {     key = generateKey().     client = getConsul().keyValueClient().     random = new Random(). }
false;public;0;16;;@Test public void testWatchKey() throws Exception {     List<String> values = generateRandomListOfStrings(3).     MockEndpoint mock = getMockEndpoint("mock:kv-watch").     mock.expectedMessageCount(values.size()).     mock.expectedBodiesReceived(values).     mock.expectedHeaderReceived(ConsulConstants.CONSUL_RESULT, true).     for (String val : values) {         client.putValue(key, val).         Thread.sleep(250 + random.nextInt(250)).     }     mock.assertIsSatisfied(). }
false;public;0;5;;public void configure() {     fromF("consul:kv?key=%s&valueAsString=true", key).to("log:org.apache.camel.component.consul?level=INFO&showAll=true").to("mock:kv-watch"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             fromF("consul:kv?key=%s&valueAsString=true", key).to("log:org.apache.camel.component.consul?level=INFO&showAll=true").to("mock:kv-watch").         }     }. }
