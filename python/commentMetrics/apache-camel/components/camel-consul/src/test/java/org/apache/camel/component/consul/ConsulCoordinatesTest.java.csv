commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void testDatacenters() throws Exception {     List<Datacenter> ref = getConsul().coordinateClient().getDatacenters().     List<Datacenter> res = fluentTemplate().withHeader(ConsulConstants.CONSUL_ACTION, ConsulCoordinatesActions.DATACENTERS).to("direct:consul").request(List.class).     Assert.assertFalse(ref.isEmpty()).     Assert.assertFalse(res.isEmpty()).     Assert.assertEquals(ref, res). }
false;public;0;13;;@Ignore("Disabled as it seems that nodes is always 0") @Test public void testNodes() throws Exception {     List<Coordinate> ref = getConsul().coordinateClient().getNodes().     List<Coordinate> res = fluentTemplate().withHeader(ConsulConstants.CONSUL_ACTION, ConsulCoordinatesActions.NODES).to("direct:consul").request(List.class).     Assert.assertFalse(ref.isEmpty()).     Assert.assertFalse(res.isEmpty()).     Assert.assertEquals(ref, res). }
false;public;0;4;;public void configure() {     from("direct:consul").to("consul:coordinates"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             from("direct:consul").to("consul:coordinates").         }     }. }
