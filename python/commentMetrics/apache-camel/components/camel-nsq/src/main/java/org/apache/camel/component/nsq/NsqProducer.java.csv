commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public NsqEndpoint getEndpoint() {     return (NsqEndpoint) super.getEndpoint(). }
false;public;1;10;;@Override public void process(Exchange exchange) throws Exception {     String topic = exchange.getIn().getHeader(NsqConstants.NSQ_MESSAGE_TOPIC, configuration.getTopic(), String.class).     LOG.debug("Publishing to topic: {}", topic).     byte[] body = exchange.getIn().getBody(byte[].class).     producer.produce(topic, body). }
false;protected;0;13;;@Override protected void doStart() throws Exception {     super.doStart().     LOG.debug("Starting NSQ Producer").     NsqConfiguration config = getEndpoint().getNsqConfiguration().     producer = new NSQProducer().     for (ServerAddress server : config.getServerAddresses()) {         producer.addAddress(server.getHost(), server.getPort() == 0 ? config.getPort() : server.getPort()).     }     producer.setConfig(getEndpoint().getNsqConfig()).     producer.start(). }
false;protected;0;8;;@Override protected void doStop() throws Exception {     LOG.debug("Stopping NSQ Producer").     if (producer != null) {         producer.shutdown().     }     super.doStop(). }
