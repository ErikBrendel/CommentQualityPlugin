commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public NsqEndpoint getEndpoint() {     return (NsqEndpoint) super.getEndpoint(). }
false;protected;0;18;;@Override protected void doStart() throws Exception {     super.doStart().     LOG.debug("Starting NSQ Consumer").     executor = getEndpoint().createExecutor().     LOG.debug("Getting NSQ Connection").     NSQLookup lookup = new DefaultNSQLookup().     for (ServerAddress server : configuration.getServerAddresses()) {         lookup.addLookupAddress(server.getHost(), server.getPort() == 0 ? configuration.getLookupServerPort() : server.getPort()).     }     consumer = new NSQConsumer(lookup, configuration.getTopic(), configuration.getChannel(), new CamelNsqMessageHandler(), getEndpoint().getNsqConfig()).     consumer.setLookupPeriod(configuration.getLookupInterval()).     consumer.setExecutor(getEndpoint().createExecutor()).     consumer.start(). }
false;protected;0;19;;@Override protected void doStop() throws Exception {     LOG.debug("Stopping NSQ Consumer").     if (consumer != null) {         consumer.shutdown().     }     if (executor != null) {         if (getEndpoint() != null && getEndpoint().getCamelContext() != null) {             getEndpoint().getCamelContext().getExecutorServiceManager().shutdownNow(executor).         } else {             executor.shutdownNow().         }     }     executor = null.     super.doStop(). }
false;public;1;22;;@Override public void message(NSQMessage msg) {     LOG.debug("Received Message: {}", msg).     Exchange exchange = getEndpoint().createExchange(ExchangePattern.InOnly).     exchange.getIn().setBody(msg.getMessage()).     exchange.getIn().setHeader(NsqConstants.NSQ_MESSAGE_ID, msg.getId()).     exchange.getIn().setHeader(NsqConstants.NSQ_MESSAGE_ATTEMPTS, msg.getAttempts()).     exchange.getIn().setHeader(NsqConstants.NSQ_MESSAGE_TIMESTAMP, msg.getTimestamp()).     try {         if (configuration.getAutoFinish()) {             msg.finished().         } else {             exchange.addOnCompletion(new NsqSynchronization(msg, (int) configuration.getRequeueInterval())).         }         processor.process(exchange).     } catch (Exception e) {         if (!configuration.getAutoFinish()) {             msg.requeue((int) configuration.getRequeueInterval()).         }         getExceptionHandler().handleException("Error during processing", exchange, e).     } }
