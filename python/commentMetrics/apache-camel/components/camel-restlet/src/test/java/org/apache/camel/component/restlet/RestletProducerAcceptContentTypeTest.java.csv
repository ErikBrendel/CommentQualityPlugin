commented;modifiers;parameterAmount;loc;comment;code
false;public;1;8;;public void process(Exchange exchange) throws Exception {     String body = exchange.getIn().getBody(String.class).     assertNotNull(body).     exchange.getOut().setBody("{OK}").     exchange.getOut().setHeader(Exchange.CONTENT_TYPE, "application/json").     assertEquals("application/json", exchange.getIn().getHeader("Accept", String.class)). }
false;public;0;18;;@Override public void configure() throws Exception {     from("jetty://http://localhost:" + portNum + "/users").process(new Processor() {          public void process(Exchange exchange) throws Exception {             String body = exchange.getIn().getBody(String.class).             assertNotNull(body).             exchange.getOut().setBody("{OK}").             exchange.getOut().setHeader(Exchange.CONTENT_TYPE, "application/json").             assertEquals("application/json", exchange.getIn().getHeader("Accept", String.class)).         }     }).     // route to restlet     from("direct:start").to(url). }
false;protected;0;23;;@Override protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("jetty://http://localhost:" + portNum + "/users").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     String body = exchange.getIn().getBody(String.class).                     assertNotNull(body).                     exchange.getOut().setBody("{OK}").                     exchange.getOut().setHeader(Exchange.CONTENT_TYPE, "application/json").                     assertEquals("application/json", exchange.getIn().getHeader("Accept", String.class)).                 }             }).             // route to restlet             from("direct:start").to(url).         }     }. }
false;public;1;6;;public void process(Exchange exchange) throws Exception {     exchange.getIn().setBody(message).     exchange.getIn().setHeader(Exchange.CONTENT_TYPE, "application/json").     exchange.getIn().setHeader(Exchange.ACCEPT_CONTENT_TYPE, "application/json"). }
false;protected;1;17;;@Override protected void postRequestMessage(final String message) throws Exception {     Exchange exchange = template.request("direct:start", new Processor() {          public void process(Exchange exchange) throws Exception {             exchange.getIn().setBody(message).             exchange.getIn().setHeader(Exchange.CONTENT_TYPE, "application/json").             exchange.getIn().setHeader(Exchange.ACCEPT_CONTENT_TYPE, "application/json").         }     }).     assertNotNull(exchange).     assertTrue(exchange.hasOut()).     String s = exchange.getOut().getBody(String.class).     assertEquals("{OK}", s). }
