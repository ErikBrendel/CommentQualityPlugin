commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void testRestletProducerGet() throws Exception {     String out = template.requestBody("http://localhost:" + portNum + "/users/info", null, String.class).     assertEquals("There are many users", out). }
false;public;1;3;;public void process(Exchange exchange) throws Exception {     exchange.getOut().setBody("There are many users"). }
false;public;0;16;;@Override public void configure() throws Exception {     // configure to use restlet on localhost with the given port     restConfiguration().component("restlet").host("localhost").port(portNum).     // use the rest DSL to define the rest services     rest("/users/").get("/info").route().to("mock:input").process(new Processor() {          public void process(Exchange exchange) throws Exception {             exchange.getOut().setBody("There are many users").         }     }). }
false;protected;0;21;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // configure to use restlet on localhost with the given port             restConfiguration().component("restlet").host("localhost").port(portNum).             // use the rest DSL to define the rest services             rest("/users/").get("/info").route().to("mock:input").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     exchange.getOut().setBody("There are many users").                 }             }).         }     }. }
