commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Override public void configure() throws Exception {     from("restlet:http://localhost:" + portNum + "/users?restletMethod=POST").process(new PostProcessor()). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("restlet:http://localhost:" + portNum + "/users?restletMethod=POST").process(new PostProcessor()).         }     }. }
false;public;1;5;;public void process(Exchange exchange) throws Exception {     assertEquals("bar", exchange.getIn().getHeader("foo", String.class)).     exchange.getIn().setBody("OK").     exchange.getIn().setHeader(Exchange.CONTENT_TYPE, "text/plain"). }
false;public;0;13;;@Test public void testPostBody() throws Exception {     HttpUriRequest method = new HttpPost("http://localhost:" + portNum + "/users").     List<NameValuePair> urlParameters = new ArrayList<>().     urlParameters.add(new BasicNameValuePair("foo", "bar")).     ((HttpEntityEnclosingRequestBase) method).setEntity(new UrlEncodedFormEntity(urlParameters)).     HttpResponse response = doExecute(method).     assertHttpResponse(response, 200, "text/plain"). }
