commented;modifiers;parameterAmount;loc;comment;code
false;public;0;18;;@Test public void testBasicAuth() throws IOException {     // START SNIPPET: auth_request     final String id = "89531".     Map<String, Object> headers = new HashMap<>().     headers.put(RestletConstants.RESTLET_LOGIN, "admin").     headers.put(RestletConstants.RESTLET_PASSWORD, "foo").     headers.put(Exchange.CONTENT_TYPE, MediaType.APPLICATION_XML).     headers.put("id", id).     String response = template.requestBodyAndHeaders("direct:start-auth", "<order foo='1'/>", headers, String.class).     // END SNIPPET: auth_request     assertEquals("received [<order foo='1'/>] as an order id = " + id, response). }
false;public;0;11;;@Test(expected = CamelExecutionException.class) public void testhBasicAuthError() throws IOException {     Map<String, Object> headers = new HashMap<>().     headers.put(RestletConstants.RESTLET_LOGIN, "admin").     headers.put(RestletConstants.RESTLET_PASSWORD, "bad").     headers.put("id", "xyz").     String response = (String) template.requestBodyAndHeaders("direct:start-auth", "<order foo='1'/>", headers).     assertNotNull("No response", response).     assertTrue(response.contains("requires user authentication")). }
false;protected;0;5;;@Override protected ClassPathXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/component/restlet/camel-context.xml"). }
