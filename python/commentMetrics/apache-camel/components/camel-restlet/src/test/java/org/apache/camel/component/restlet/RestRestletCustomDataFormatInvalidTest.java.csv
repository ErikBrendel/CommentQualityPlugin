commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
false;protected;0;6;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndi = super.createRegistry().     jndi.bind("bla", new JacksonDataFormat()).     return jndi. }
false;public;0;14;;@Override public void configure() throws Exception {     restConfiguration().component("restlet").host("localhost").port(portNum).bindingMode(RestBindingMode.json).jsonDataFormat("bla").     // use the rest DSL to define the rest services     rest("/users/").post("lives").type(UserPojo.class).outType(CountryPojo.class).route().choice().when().simple("${body.id} < 100").bean(new UserErrorService(), "idToLowError").otherwise().bean(new UserService(), "livesWhere"). }
false;public;0;25;;@Test public void testCustom() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             restConfiguration().component("restlet").host("localhost").port(portNum).bindingMode(RestBindingMode.json).jsonDataFormat("bla").             // use the rest DSL to define the rest services             rest("/users/").post("lives").type(UserPojo.class).outType(CountryPojo.class).route().choice().when().simple("${body.id} < 100").bean(new UserErrorService(), "idToLowError").otherwise().bean(new UserService(), "livesWhere").         }     }).     try {         context.start().         fail("Should have thrown exception").     } catch (FailedToCreateRouteException e) {         assertTrue(e.getCause().getMessage().contains("JsonDataFormat name: bla must not be an existing bean instance from the registry")).     } }
