commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testRestletProducerTimeout() throws Exception {     try {         template.requestBodyAndHeader("restlet:http://localhost:" + portNum + "/users/123/basic?socketTimeout=100", null, "id", 123, String.class).         fail("Should have thrown exception").     } catch (Exception ex) {     // expected     } }
false;public;1;5;;@Override public void process(Exchange exchange) throws Exception {     Thread.sleep(2000).     exchange.getOut().setBody("Here is the response"). }
false;public;0;11;;@Override public void configure() throws Exception {     from("restlet:http://localhost:" + portNum + "/users/{id}/basic").process(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             Thread.sleep(2000).             exchange.getOut().setBody("Here is the response").         }     }). }
false;protected;0;16;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("restlet:http://localhost:" + portNum + "/users/{id}/basic").process(new Processor() {                  @Override                 public void process(Exchange exchange) throws Exception {                     Thread.sleep(2000).                     exchange.getOut().setBody("Here is the response").                 }             }).         }     }. }
