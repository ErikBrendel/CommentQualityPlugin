commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void testRestletProducerAuthorizationGet() throws Exception {     String out = fluentTemplate.to("direct:start").withHeader("id", 123).withHeader("Authorization", "myuser").request(String.class).     assertEquals("123.Donald Duck.myuser", out). }
false;public;1;10;;public void process(Exchange exchange) throws Exception {     String authorization = exchange.getIn().getHeader("Authorization", String.class).     log.info("Authorization header: {}", authorization).     String id = exchange.getIn().getHeader("id", String.class).     exchange.getOut().setBody(id + ".Donald Duck").     if (authorization != null) {         String body = exchange.getOut().getBody(String.class) + "." + authorization.         exchange.getOut().setBody(body).     } }
false;public;0;18;;@Override public void configure() throws Exception {     from("direct:start").to("restlet:http://localhost:" + portNum + "/users/{id}/basic").to("log:reply").     from("restlet:http://localhost:" + portNum + "/users/{id}/basic?restletMethods=GET,DELETE").process(new Processor() {          public void process(Exchange exchange) throws Exception {             String authorization = exchange.getIn().getHeader("Authorization", String.class).             log.info("Authorization header: {}", authorization).             String id = exchange.getIn().getHeader("id", String.class).             exchange.getOut().setBody(id + ".Donald Duck").             if (authorization != null) {                 String body = exchange.getOut().getBody(String.class) + "." + authorization.                 exchange.getOut().setBody(body).             }         }     }). }
false;protected;0;23;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("restlet:http://localhost:" + portNum + "/users/{id}/basic").to("log:reply").             from("restlet:http://localhost:" + portNum + "/users/{id}/basic?restletMethods=GET,DELETE").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     String authorization = exchange.getIn().getHeader("Authorization", String.class).                     log.info("Authorization header: {}", authorization).                     String id = exchange.getIn().getHeader("id", String.class).                     exchange.getOut().setBody(id + ".Donald Duck").                     if (authorization != null) {                         String body = exchange.getOut().getBody(String.class) + "." + authorization.                         exchange.getOut().setBody(body).                     }                 }             }).         }     }. }
