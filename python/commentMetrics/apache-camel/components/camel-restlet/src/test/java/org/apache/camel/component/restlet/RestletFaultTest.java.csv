commented;modifiers;parameterAmount;loc;comment;code
false;public;1;6;;public void process(Exchange exchange) throws Exception {     exchange.getOut().setFault(true).     exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE, "404").     exchange.getOut().setHeader(Exchange.CONTENT_TYPE, "text/plain").     exchange.getOut().setBody("Application fault"). }
false;public;0;11;;@Override public void configure() throws Exception {     from("restlet:http://localhost:" + portNum + "/users/{username}?restletMethod=POST").process(new Processor() {          public void process(Exchange exchange) throws Exception {             exchange.getOut().setFault(true).             exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE, "404").             exchange.getOut().setHeader(Exchange.CONTENT_TYPE, "text/plain").             exchange.getOut().setBody("Application fault").         }     }). }
false;protected;0;17;;@Override protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("restlet:http://localhost:" + portNum + "/users/{username}?restletMethod=POST").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     exchange.getOut().setFault(true).                     exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE, "404").                     exchange.getOut().setHeader(Exchange.CONTENT_TYPE, "text/plain").                     exchange.getOut().setBody("Application fault").                 }             }).         }     }. }
false;public;0;6;;@Test public void testFaultResponse() throws Exception {     HttpResponse response = doExecute(new HttpPost("http://localhost:" + portNum + "/users/homer")).     assertHttpResponse(response, 404, "text/plain", "Application fault"). }
