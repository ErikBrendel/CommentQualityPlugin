# id;timestamp;commentText;codeText;commentWords;codeWords
RestletEndpoint -> public void disconnect(RestletConsumer restletConsumer) throws Exception;1230651400;@param restletConsumer;public void disconnect(RestletConsumer restletConsumer) throws Exception {_        ((RestletComponent)getComponent()).disconnect(restletConsumer)_        _    };param,restlet,consumer;public,void,disconnect,restlet,consumer,restlet,consumer,throws,exception,restlet,component,get,component,disconnect,restlet,consumer
RestletEndpoint -> public void disconnect(RestletConsumer restletConsumer) throws Exception;1230693478;@param restletConsumer;public void disconnect(RestletConsumer restletConsumer) throws Exception {_        ((RestletComponent)getComponent()).disconnect(restletConsumer)_        _    };param,restlet,consumer;public,void,disconnect,restlet,consumer,restlet,consumer,throws,exception,restlet,component,get,component,disconnect,restlet,consumer
RestletEndpoint -> public Method getRestletMethod();1230651400;@return the restletMethod;public Method getRestletMethod() {_        return restletMethod__    };return,the,restlet,method;public,method,get,restlet,method,return,restlet,method
RestletEndpoint -> public Method getRestletMethod();1230693478;@return the restletMethod;public Method getRestletMethod() {_        return restletMethod__    };return,the,restlet,method;public,method,get,restlet,method,return,restlet,method
RestletEndpoint -> public void setConnectTimeout(int connectTimeout);1431337048;The Client will give up connection if the connection is timeout, 0 for unlimited wait.;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };the,client,will,give,up,connection,if,the,connection,is,timeout,0,for,unlimited,wait;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RestletEndpoint -> public void setConnectTimeout(int connectTimeout);1434198513;The Client will give up connection if the connection is timeout, 0 for unlimited wait.;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };the,client,will,give,up,connection,if,the,connection,is,timeout,0,for,unlimited,wait;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RestletEndpoint -> public void setConnectTimeout(int connectTimeout);1451237128;The Client will give up connection if the connection is timeout, 0 for unlimited wait.;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };the,client,will,give,up,connection,if,the,connection,is,timeout,0,for,unlimited,wait;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RestletEndpoint -> public void setConnectTimeout(int connectTimeout);1451302108;The Client will give up connection if the connection is timeout, 0 for unlimited wait.;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };the,client,will,give,up,connection,if,the,connection,is,timeout,0,for,unlimited,wait;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RestletEndpoint -> public void setConnectTimeout(int connectTimeout);1451939116;The Client will give up connection if the connection is timeout, 0 for unlimited wait.;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };the,client,will,give,up,connection,if,the,connection,is,timeout,0,for,unlimited,wait;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RestletEndpoint -> public void setConnectTimeout(int connectTimeout);1452076588;The Client will give up connection if the connection is timeout, 0 for unlimited wait.;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };the,client,will,give,up,connection,if,the,connection,is,timeout,0,for,unlimited,wait;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RestletEndpoint -> public void setConnectTimeout(int connectTimeout);1452194208;The Client will give up connection if the connection is timeout, 0 for unlimited wait.;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };the,client,will,give,up,connection,if,the,connection,is,timeout,0,for,unlimited,wait;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RestletEndpoint -> public void setConnectTimeout(int connectTimeout);1460115881;The Client will give up connection if the connection is timeout, 0 for unlimited wait.;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };the,client,will,give,up,connection,if,the,connection,is,timeout,0,for,unlimited,wait;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RestletEndpoint -> public void setConnectTimeout(int connectTimeout);1460966546;The Client will give up connection if the connection is timeout, 0 for unlimited wait.;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };the,client,will,give,up,connection,if,the,connection,is,timeout,0,for,unlimited,wait;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RestletEndpoint -> public void setConnectTimeout(int connectTimeout);1463151573;The Client will give up connection if the connection is timeout, 0 for unlimited wait.;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };the,client,will,give,up,connection,if,the,connection,is,timeout,0,for,unlimited,wait;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RestletEndpoint -> public void setConnectTimeout(int connectTimeout);1476946116;The Client will give up connection if the connection is timeout, 0 for unlimited wait.;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };the,client,will,give,up,connection,if,the,connection,is,timeout,0,for,unlimited,wait;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RestletEndpoint -> public void setConnectTimeout(int connectTimeout);1482332324;The Client will give up connection if the connection is timeout, 0 for unlimited wait.;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };the,client,will,give,up,connection,if,the,connection,is,timeout,0,for,unlimited,wait;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RestletEndpoint -> public void setConnectTimeout(int connectTimeout);1485974480;The Client will give up connection if the connection is timeout, 0 for unlimited wait.;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };the,client,will,give,up,connection,if,the,connection,is,timeout,0,for,unlimited,wait;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RestletEndpoint -> public void setConnectTimeout(int connectTimeout);1494752465;The Client will give up connection if the connection is timeout, 0 for unlimited wait.;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };the,client,will,give,up,connection,if,the,connection,is,timeout,0,for,unlimited,wait;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RestletEndpoint -> public void setConnectTimeout(int connectTimeout);1495627904;The Client will give up connection if the connection is timeout, 0 for unlimited wait.;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };the,client,will,give,up,connection,if,the,connection,is,timeout,0,for,unlimited,wait;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RestletEndpoint -> public void setConnectTimeout(int connectTimeout);1506336987;The Client will give up connection if the connection is timeout, 0 for unlimited wait.;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };the,client,will,give,up,connection,if,the,connection,is,timeout,0,for,unlimited,wait;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RestletEndpoint -> public void setConnectTimeout(int connectTimeout);1520245176;The Client will give up connection if the connection is timeout, 0 for unlimited wait.;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };the,client,will,give,up,connection,if,the,connection,is,timeout,0,for,unlimited,wait;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RestletEndpoint -> public void setConnectTimeout(int connectTimeout);1540108158;The Client will give up connection if the connection is timeout, 0 for unlimited wait.;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };the,client,will,give,up,connection,if,the,connection,is,timeout,0,for,unlimited,wait;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RestletEndpoint -> public void setConnectTimeout(int connectTimeout);1540108163;The Client will give up connection if the connection is timeout, 0 for unlimited wait.;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };the,client,will,give,up,connection,if,the,connection,is,timeout,0,for,unlimited,wait;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RestletEndpoint -> public void setConnectTimeout(int connectTimeout);1545313144;The Client will give up connection if the connection is timeout, 0 for unlimited wait.;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };the,client,will,give,up,connection,if,the,connection,is,timeout,0,for,unlimited,wait;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RestletEndpoint -> public void setConnectTimeout(int connectTimeout);1547240981;The Client will give up connection if the connection is timeout, 0 for unlimited wait.;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };the,client,will,give,up,connection,if,the,connection,is,timeout,0,for,unlimited,wait;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RestletEndpoint -> public void setConnectTimeout(int connectTimeout);1547480087;The Client will give up connection if the connection is timeout, 0 for unlimited wait.;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };the,client,will,give,up,connection,if,the,connection,is,timeout,0,for,unlimited,wait;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RestletEndpoint -> public void setSslContextParameters(SSLContextParameters scp);1431337048;To configure security using SSLContextParameters.;public void setSslContextParameters(SSLContextParameters scp) {_        this.sslContextParameters = scp__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,scp,this,ssl,context,parameters,scp
RestletEndpoint -> public void setSslContextParameters(SSLContextParameters scp);1434198513;To configure security using SSLContextParameters.;public void setSslContextParameters(SSLContextParameters scp) {_        this.sslContextParameters = scp__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,scp,this,ssl,context,parameters,scp
RestletEndpoint -> public void setSslContextParameters(SSLContextParameters scp);1451237128;To configure security using SSLContextParameters.;public void setSslContextParameters(SSLContextParameters scp) {_        this.sslContextParameters = scp__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,scp,this,ssl,context,parameters,scp
RestletEndpoint -> public void setSslContextParameters(SSLContextParameters scp);1451302108;To configure security using SSLContextParameters.;public void setSslContextParameters(SSLContextParameters scp) {_        this.sslContextParameters = scp__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,scp,this,ssl,context,parameters,scp
RestletEndpoint -> public void setSslContextParameters(SSLContextParameters scp);1451939116;To configure security using SSLContextParameters.;public void setSslContextParameters(SSLContextParameters scp) {_        this.sslContextParameters = scp__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,scp,this,ssl,context,parameters,scp
RestletEndpoint -> public void setSslContextParameters(SSLContextParameters scp);1452076588;To configure security using SSLContextParameters.;public void setSslContextParameters(SSLContextParameters scp) {_        this.sslContextParameters = scp__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,scp,this,ssl,context,parameters,scp
RestletEndpoint -> public void setSslContextParameters(SSLContextParameters scp);1452194208;To configure security using SSLContextParameters.;public void setSslContextParameters(SSLContextParameters scp) {_        this.sslContextParameters = scp__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,scp,this,ssl,context,parameters,scp
RestletEndpoint -> public void setSslContextParameters(SSLContextParameters scp);1460115881;To configure security using SSLContextParameters.;public void setSslContextParameters(SSLContextParameters scp) {_        this.sslContextParameters = scp__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,scp,this,ssl,context,parameters,scp
RestletEndpoint -> public void setSslContextParameters(SSLContextParameters scp);1460966546;To configure security using SSLContextParameters.;public void setSslContextParameters(SSLContextParameters scp) {_        this.sslContextParameters = scp__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,scp,this,ssl,context,parameters,scp
RestletEndpoint -> public void setSslContextParameters(SSLContextParameters scp);1463151573;To configure security using SSLContextParameters.;public void setSslContextParameters(SSLContextParameters scp) {_        this.sslContextParameters = scp__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,scp,this,ssl,context,parameters,scp
RestletEndpoint -> public void setSslContextParameters(SSLContextParameters scp);1476946116;To configure security using SSLContextParameters.;public void setSslContextParameters(SSLContextParameters scp) {_        this.sslContextParameters = scp__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,scp,this,ssl,context,parameters,scp
RestletEndpoint -> public void setSslContextParameters(SSLContextParameters scp);1482332324;To configure security using SSLContextParameters.;public void setSslContextParameters(SSLContextParameters scp) {_        this.sslContextParameters = scp__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,scp,this,ssl,context,parameters,scp
RestletEndpoint -> public void setSslContextParameters(SSLContextParameters scp);1485974480;To configure security using SSLContextParameters.;public void setSslContextParameters(SSLContextParameters scp) {_        this.sslContextParameters = scp__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,scp,this,ssl,context,parameters,scp
RestletEndpoint -> public void setSslContextParameters(SSLContextParameters scp);1494752465;To configure security using SSLContextParameters.;public void setSslContextParameters(SSLContextParameters scp) {_        this.sslContextParameters = scp__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,scp,this,ssl,context,parameters,scp
RestletEndpoint -> public void setSslContextParameters(SSLContextParameters scp);1495627904;To configure security using SSLContextParameters.;public void setSslContextParameters(SSLContextParameters scp) {_        this.sslContextParameters = scp__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,scp,this,ssl,context,parameters,scp
RestletEndpoint -> public void setSslContextParameters(SSLContextParameters scp);1506336987;To configure security using SSLContextParameters.;public void setSslContextParameters(SSLContextParameters scp) {_        this.sslContextParameters = scp__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,scp,this,ssl,context,parameters,scp
RestletEndpoint -> public void setSslContextParameters(SSLContextParameters scp);1520245176;To configure security using SSLContextParameters.;public void setSslContextParameters(SSLContextParameters scp) {_        this.sslContextParameters = scp__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,scp,this,ssl,context,parameters,scp
RestletEndpoint -> public void setSslContextParameters(SSLContextParameters scp);1540108158;To configure security using SSLContextParameters.;public void setSslContextParameters(SSLContextParameters scp) {_        this.sslContextParameters = scp__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,scp,this,ssl,context,parameters,scp
RestletEndpoint -> public void setSslContextParameters(SSLContextParameters scp);1540108163;To configure security using SSLContextParameters.;public void setSslContextParameters(SSLContextParameters scp) {_        this.sslContextParameters = scp__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,scp,this,ssl,context,parameters,scp
RestletEndpoint -> public void setSslContextParameters(SSLContextParameters scp);1545313144;To configure security using SSLContextParameters.;public void setSslContextParameters(SSLContextParameters scp) {_        this.sslContextParameters = scp__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,scp,this,ssl,context,parameters,scp
RestletEndpoint -> public void setSslContextParameters(SSLContextParameters scp);1547240981;To configure security using SSLContextParameters.;public void setSslContextParameters(SSLContextParameters scp) {_        this.sslContextParameters = scp__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,scp,this,ssl,context,parameters,scp
RestletEndpoint -> public void setSslContextParameters(SSLContextParameters scp);1547480087;To configure security using SSLContextParameters.;public void setSslContextParameters(SSLContextParameters scp) {_        this.sslContextParameters = scp__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,scp,this,ssl,context,parameters,scp
RestletEndpoint -> public void setHost(String host);1431337048;The hostname of the restlet service;public void setHost(String host) {_        this.host = host__    };the,hostname,of,the,restlet,service;public,void,set,host,string,host,this,host,host
RestletEndpoint -> public void setHost(String host);1434198513;The hostname of the restlet service;public void setHost(String host) {_        this.host = host__    };the,hostname,of,the,restlet,service;public,void,set,host,string,host,this,host,host
RestletEndpoint -> public void setHost(String host);1451237128;The hostname of the restlet service;public void setHost(String host) {_        this.host = host__    };the,hostname,of,the,restlet,service;public,void,set,host,string,host,this,host,host
RestletEndpoint -> public void setHost(String host);1451302108;The hostname of the restlet service;public void setHost(String host) {_        this.host = host__    };the,hostname,of,the,restlet,service;public,void,set,host,string,host,this,host,host
RestletEndpoint -> public void setHost(String host);1451939116;The hostname of the restlet service;public void setHost(String host) {_        this.host = host__    };the,hostname,of,the,restlet,service;public,void,set,host,string,host,this,host,host
RestletEndpoint -> public void setHost(String host);1452076588;The hostname of the restlet service;public void setHost(String host) {_        this.host = host__    };the,hostname,of,the,restlet,service;public,void,set,host,string,host,this,host,host
RestletEndpoint -> public void setHost(String host);1452194208;The hostname of the restlet service;public void setHost(String host) {_        this.host = host__    };the,hostname,of,the,restlet,service;public,void,set,host,string,host,this,host,host
RestletEndpoint -> public void setHost(String host);1460115881;The hostname of the restlet service;public void setHost(String host) {_        this.host = host__    };the,hostname,of,the,restlet,service;public,void,set,host,string,host,this,host,host
RestletEndpoint -> public void setHost(String host);1460966546;The hostname of the restlet service;public void setHost(String host) {_        this.host = host__    };the,hostname,of,the,restlet,service;public,void,set,host,string,host,this,host,host
RestletEndpoint -> public void setHost(String host);1463151573;The hostname of the restlet service;public void setHost(String host) {_        this.host = host__    };the,hostname,of,the,restlet,service;public,void,set,host,string,host,this,host,host
RestletEndpoint -> public void setHost(String host);1476946116;The hostname of the restlet service;public void setHost(String host) {_        this.host = host__    };the,hostname,of,the,restlet,service;public,void,set,host,string,host,this,host,host
RestletEndpoint -> public void setHost(String host);1482332324;The hostname of the restlet service;public void setHost(String host) {_        this.host = host__    };the,hostname,of,the,restlet,service;public,void,set,host,string,host,this,host,host
RestletEndpoint -> public void setHost(String host);1485974480;The hostname of the restlet service;public void setHost(String host) {_        this.host = host__    };the,hostname,of,the,restlet,service;public,void,set,host,string,host,this,host,host
RestletEndpoint -> public void setHost(String host);1494752465;The hostname of the restlet service;public void setHost(String host) {_        this.host = host__    };the,hostname,of,the,restlet,service;public,void,set,host,string,host,this,host,host
RestletEndpoint -> public void setHost(String host);1495627904;The hostname of the restlet service;public void setHost(String host) {_        this.host = host__    };the,hostname,of,the,restlet,service;public,void,set,host,string,host,this,host,host
RestletEndpoint -> public void setHost(String host);1506336987;The hostname of the restlet service;public void setHost(String host) {_        this.host = host__    };the,hostname,of,the,restlet,service;public,void,set,host,string,host,this,host,host
RestletEndpoint -> public void setHost(String host);1520245176;The hostname of the restlet service;public void setHost(String host) {_        this.host = host__    };the,hostname,of,the,restlet,service;public,void,set,host,string,host,this,host,host
RestletEndpoint -> public void setHost(String host);1540108158;The hostname of the restlet service;public void setHost(String host) {_        this.host = host__    };the,hostname,of,the,restlet,service;public,void,set,host,string,host,this,host,host
RestletEndpoint -> public void setHost(String host);1540108163;The hostname of the restlet service;public void setHost(String host) {_        this.host = host__    };the,hostname,of,the,restlet,service;public,void,set,host,string,host,this,host,host
RestletEndpoint -> public void setHost(String host);1545313144;The hostname of the restlet service;public void setHost(String host) {_        this.host = host__    };the,hostname,of,the,restlet,service;public,void,set,host,string,host,this,host,host
RestletEndpoint -> public void setHost(String host);1547240981;The hostname of the restlet service;public void setHost(String host) {_        this.host = host__    };the,hostname,of,the,restlet,service;public,void,set,host,string,host,this,host,host
RestletEndpoint -> public void setHost(String host);1547480087;The hostname of the restlet service;public void setHost(String host) {_        this.host = host__    };the,hostname,of,the,restlet,service;public,void,set,host,string,host,this,host,host
RestletEndpoint -> public void setRestletUriPatterns(List<String> restletUriPatterns);1244989524;@param restletUriPatterns the restletUriPatterns to set;public void setRestletUriPatterns(List<String> restletUriPatterns) {_        this.restletUriPatterns = restletUriPatterns__    };param,restlet,uri,patterns,the,restlet,uri,patterns,to,set;public,void,set,restlet,uri,patterns,list,string,restlet,uri,patterns,this,restlet,uri,patterns,restlet,uri,patterns
RestletEndpoint -> public void setRestletUriPatterns(List<String> restletUriPatterns);1248967091;@param restletUriPatterns the restletUriPatterns to set;public void setRestletUriPatterns(List<String> restletUriPatterns) {_        this.restletUriPatterns = restletUriPatterns__    };param,restlet,uri,patterns,the,restlet,uri,patterns,to,set;public,void,set,restlet,uri,patterns,list,string,restlet,uri,patterns,this,restlet,uri,patterns,restlet,uri,patterns
RestletEndpoint -> public void setRestletUriPatterns(List<String> restletUriPatterns);1431337048;Specify one ore more URI templates to be serviced by a restlet consumer endpoint, using the # notation to_reference a List<String> in the Camel Registry._If a URI pattern has been defined in the endpoint URI, both the URI pattern defined in the endpoint and the restletUriPatterns option will be honored.;public void setRestletUriPatterns(List<String> restletUriPatterns) {_        this.restletUriPatterns = restletUriPatterns__    };specify,one,ore,more,uri,templates,to,be,serviced,by,a,restlet,consumer,endpoint,using,the,notation,to,reference,a,list,string,in,the,camel,registry,if,a,uri,pattern,has,been,defined,in,the,endpoint,uri,both,the,uri,pattern,defined,in,the,endpoint,and,the,restlet,uri,patterns,option,will,be,honored;public,void,set,restlet,uri,patterns,list,string,restlet,uri,patterns,this,restlet,uri,patterns,restlet,uri,patterns
RestletEndpoint -> public void setRestletUriPatterns(List<String> restletUriPatterns);1434198513;Specify one ore more URI templates to be serviced by a restlet consumer endpoint, using the # notation to_reference a List<String> in the Camel Registry._If a URI pattern has been defined in the endpoint URI, both the URI pattern defined in the endpoint and the restletUriPatterns option will be honored.;public void setRestletUriPatterns(List<String> restletUriPatterns) {_        this.restletUriPatterns = restletUriPatterns__    };specify,one,ore,more,uri,templates,to,be,serviced,by,a,restlet,consumer,endpoint,using,the,notation,to,reference,a,list,string,in,the,camel,registry,if,a,uri,pattern,has,been,defined,in,the,endpoint,uri,both,the,uri,pattern,defined,in,the,endpoint,and,the,restlet,uri,patterns,option,will,be,honored;public,void,set,restlet,uri,patterns,list,string,restlet,uri,patterns,this,restlet,uri,patterns,restlet,uri,patterns
RestletEndpoint -> public void setRestletUriPatterns(List<String> restletUriPatterns);1451237128;Specify one ore more URI templates to be serviced by a restlet consumer endpoint, using the # notation to_reference a List<String> in the Camel Registry._If a URI pattern has been defined in the endpoint URI, both the URI pattern defined in the endpoint and the restletUriPatterns option will be honored.;public void setRestletUriPatterns(List<String> restletUriPatterns) {_        this.restletUriPatterns = restletUriPatterns__    };specify,one,ore,more,uri,templates,to,be,serviced,by,a,restlet,consumer,endpoint,using,the,notation,to,reference,a,list,string,in,the,camel,registry,if,a,uri,pattern,has,been,defined,in,the,endpoint,uri,both,the,uri,pattern,defined,in,the,endpoint,and,the,restlet,uri,patterns,option,will,be,honored;public,void,set,restlet,uri,patterns,list,string,restlet,uri,patterns,this,restlet,uri,patterns,restlet,uri,patterns
RestletEndpoint -> public void setRestletUriPatterns(List<String> restletUriPatterns);1451302108;Specify one ore more URI templates to be serviced by a restlet consumer endpoint, using the # notation to_reference a List<String> in the Camel Registry._If a URI pattern has been defined in the endpoint URI, both the URI pattern defined in the endpoint and the restletUriPatterns option will be honored.;public void setRestletUriPatterns(List<String> restletUriPatterns) {_        this.restletUriPatterns = restletUriPatterns__    };specify,one,ore,more,uri,templates,to,be,serviced,by,a,restlet,consumer,endpoint,using,the,notation,to,reference,a,list,string,in,the,camel,registry,if,a,uri,pattern,has,been,defined,in,the,endpoint,uri,both,the,uri,pattern,defined,in,the,endpoint,and,the,restlet,uri,patterns,option,will,be,honored;public,void,set,restlet,uri,patterns,list,string,restlet,uri,patterns,this,restlet,uri,patterns,restlet,uri,patterns
RestletEndpoint -> public void setRestletUriPatterns(List<String> restletUriPatterns);1451939116;Specify one ore more URI templates to be serviced by a restlet consumer endpoint, using the # notation to_reference a List<String> in the Camel Registry._If a URI pattern has been defined in the endpoint URI, both the URI pattern defined in the endpoint and the restletUriPatterns option will be honored.;public void setRestletUriPatterns(List<String> restletUriPatterns) {_        this.restletUriPatterns = restletUriPatterns__    };specify,one,ore,more,uri,templates,to,be,serviced,by,a,restlet,consumer,endpoint,using,the,notation,to,reference,a,list,string,in,the,camel,registry,if,a,uri,pattern,has,been,defined,in,the,endpoint,uri,both,the,uri,pattern,defined,in,the,endpoint,and,the,restlet,uri,patterns,option,will,be,honored;public,void,set,restlet,uri,patterns,list,string,restlet,uri,patterns,this,restlet,uri,patterns,restlet,uri,patterns
RestletEndpoint -> public void setRestletUriPatterns(List<String> restletUriPatterns);1452076588;Specify one ore more URI templates to be serviced by a restlet consumer endpoint, using the # notation to_reference a List<String> in the Camel Registry._If a URI pattern has been defined in the endpoint URI, both the URI pattern defined in the endpoint and the restletUriPatterns option will be honored.;public void setRestletUriPatterns(List<String> restletUriPatterns) {_        this.restletUriPatterns = restletUriPatterns__    };specify,one,ore,more,uri,templates,to,be,serviced,by,a,restlet,consumer,endpoint,using,the,notation,to,reference,a,list,string,in,the,camel,registry,if,a,uri,pattern,has,been,defined,in,the,endpoint,uri,both,the,uri,pattern,defined,in,the,endpoint,and,the,restlet,uri,patterns,option,will,be,honored;public,void,set,restlet,uri,patterns,list,string,restlet,uri,patterns,this,restlet,uri,patterns,restlet,uri,patterns
RestletEndpoint -> public void setRestletUriPatterns(List<String> restletUriPatterns);1452194208;Specify one ore more URI templates to be serviced by a restlet consumer endpoint, using the # notation to_reference a List<String> in the Camel Registry._If a URI pattern has been defined in the endpoint URI, both the URI pattern defined in the endpoint and the restletUriPatterns option will be honored.;public void setRestletUriPatterns(List<String> restletUriPatterns) {_        this.restletUriPatterns = restletUriPatterns__    };specify,one,ore,more,uri,templates,to,be,serviced,by,a,restlet,consumer,endpoint,using,the,notation,to,reference,a,list,string,in,the,camel,registry,if,a,uri,pattern,has,been,defined,in,the,endpoint,uri,both,the,uri,pattern,defined,in,the,endpoint,and,the,restlet,uri,patterns,option,will,be,honored;public,void,set,restlet,uri,patterns,list,string,restlet,uri,patterns,this,restlet,uri,patterns,restlet,uri,patterns
RestletEndpoint -> public void setRestletUriPatterns(List<String> restletUriPatterns);1460115881;Specify one ore more URI templates to be serviced by a restlet consumer endpoint, using the # notation to_reference a List<String> in the Camel Registry._If a URI pattern has been defined in the endpoint URI, both the URI pattern defined in the endpoint and the restletUriPatterns option will be honored.;public void setRestletUriPatterns(List<String> restletUriPatterns) {_        this.restletUriPatterns = restletUriPatterns__    };specify,one,ore,more,uri,templates,to,be,serviced,by,a,restlet,consumer,endpoint,using,the,notation,to,reference,a,list,string,in,the,camel,registry,if,a,uri,pattern,has,been,defined,in,the,endpoint,uri,both,the,uri,pattern,defined,in,the,endpoint,and,the,restlet,uri,patterns,option,will,be,honored;public,void,set,restlet,uri,patterns,list,string,restlet,uri,patterns,this,restlet,uri,patterns,restlet,uri,patterns
RestletEndpoint -> public void setRestletUriPatterns(List<String> restletUriPatterns);1460966546;Specify one ore more URI templates to be serviced by a restlet consumer endpoint, using the # notation to_reference a List<String> in the Camel Registry._If a URI pattern has been defined in the endpoint URI, both the URI pattern defined in the endpoint and the restletUriPatterns option will be honored.;public void setRestletUriPatterns(List<String> restletUriPatterns) {_        this.restletUriPatterns = restletUriPatterns__    };specify,one,ore,more,uri,templates,to,be,serviced,by,a,restlet,consumer,endpoint,using,the,notation,to,reference,a,list,string,in,the,camel,registry,if,a,uri,pattern,has,been,defined,in,the,endpoint,uri,both,the,uri,pattern,defined,in,the,endpoint,and,the,restlet,uri,patterns,option,will,be,honored;public,void,set,restlet,uri,patterns,list,string,restlet,uri,patterns,this,restlet,uri,patterns,restlet,uri,patterns
RestletEndpoint -> public void setRestletUriPatterns(List<String> restletUriPatterns);1463151573;Specify one ore more URI templates to be serviced by a restlet consumer endpoint, using the # notation to_reference a List<String> in the Camel Registry._If a URI pattern has been defined in the endpoint URI, both the URI pattern defined in the endpoint and the restletUriPatterns option will be honored.;public void setRestletUriPatterns(List<String> restletUriPatterns) {_        this.restletUriPatterns = restletUriPatterns__    };specify,one,ore,more,uri,templates,to,be,serviced,by,a,restlet,consumer,endpoint,using,the,notation,to,reference,a,list,string,in,the,camel,registry,if,a,uri,pattern,has,been,defined,in,the,endpoint,uri,both,the,uri,pattern,defined,in,the,endpoint,and,the,restlet,uri,patterns,option,will,be,honored;public,void,set,restlet,uri,patterns,list,string,restlet,uri,patterns,this,restlet,uri,patterns,restlet,uri,patterns
RestletEndpoint -> public void setRestletUriPatterns(List<String> restletUriPatterns);1476946116;Specify one ore more URI templates to be serviced by a restlet consumer endpoint, using the # notation to_reference a List<String> in the Camel Registry._If a URI pattern has been defined in the endpoint URI, both the URI pattern defined in the endpoint and the restletUriPatterns option will be honored.;public void setRestletUriPatterns(List<String> restletUriPatterns) {_        this.restletUriPatterns = restletUriPatterns__    };specify,one,ore,more,uri,templates,to,be,serviced,by,a,restlet,consumer,endpoint,using,the,notation,to,reference,a,list,string,in,the,camel,registry,if,a,uri,pattern,has,been,defined,in,the,endpoint,uri,both,the,uri,pattern,defined,in,the,endpoint,and,the,restlet,uri,patterns,option,will,be,honored;public,void,set,restlet,uri,patterns,list,string,restlet,uri,patterns,this,restlet,uri,patterns,restlet,uri,patterns
RestletEndpoint -> public void setRestletUriPatterns(List<String> restletUriPatterns);1482332324;Specify one ore more URI templates to be serviced by a restlet consumer endpoint, using the # notation to_reference a List<String> in the Camel Registry._If a URI pattern has been defined in the endpoint URI, both the URI pattern defined in the endpoint and the restletUriPatterns option will be honored.;public void setRestletUriPatterns(List<String> restletUriPatterns) {_        this.restletUriPatterns = restletUriPatterns__    };specify,one,ore,more,uri,templates,to,be,serviced,by,a,restlet,consumer,endpoint,using,the,notation,to,reference,a,list,string,in,the,camel,registry,if,a,uri,pattern,has,been,defined,in,the,endpoint,uri,both,the,uri,pattern,defined,in,the,endpoint,and,the,restlet,uri,patterns,option,will,be,honored;public,void,set,restlet,uri,patterns,list,string,restlet,uri,patterns,this,restlet,uri,patterns,restlet,uri,patterns
RestletEndpoint -> public void setRestletUriPatterns(List<String> restletUriPatterns);1485974480;Specify one ore more URI templates to be serviced by a restlet consumer endpoint, using the # notation to_reference a List<String> in the Camel Registry._If a URI pattern has been defined in the endpoint URI, both the URI pattern defined in the endpoint and the restletUriPatterns option will be honored.;public void setRestletUriPatterns(List<String> restletUriPatterns) {_        this.restletUriPatterns = restletUriPatterns__    };specify,one,ore,more,uri,templates,to,be,serviced,by,a,restlet,consumer,endpoint,using,the,notation,to,reference,a,list,string,in,the,camel,registry,if,a,uri,pattern,has,been,defined,in,the,endpoint,uri,both,the,uri,pattern,defined,in,the,endpoint,and,the,restlet,uri,patterns,option,will,be,honored;public,void,set,restlet,uri,patterns,list,string,restlet,uri,patterns,this,restlet,uri,patterns,restlet,uri,patterns
RestletEndpoint -> public void setRestletUriPatterns(List<String> restletUriPatterns);1494752465;Specify one ore more URI templates to be serviced by a restlet consumer endpoint, using the # notation to_reference a List<String> in the Camel Registry._If a URI pattern has been defined in the endpoint URI, both the URI pattern defined in the endpoint and the restletUriPatterns option will be honored.;public void setRestletUriPatterns(List<String> restletUriPatterns) {_        this.restletUriPatterns = restletUriPatterns__    };specify,one,ore,more,uri,templates,to,be,serviced,by,a,restlet,consumer,endpoint,using,the,notation,to,reference,a,list,string,in,the,camel,registry,if,a,uri,pattern,has,been,defined,in,the,endpoint,uri,both,the,uri,pattern,defined,in,the,endpoint,and,the,restlet,uri,patterns,option,will,be,honored;public,void,set,restlet,uri,patterns,list,string,restlet,uri,patterns,this,restlet,uri,patterns,restlet,uri,patterns
RestletEndpoint -> public void setRestletUriPatterns(List<String> restletUriPatterns);1495627904;Specify one ore more URI templates to be serviced by a restlet consumer endpoint, using the # notation to_reference a List<String> in the Camel Registry._If a URI pattern has been defined in the endpoint URI, both the URI pattern defined in the endpoint and the restletUriPatterns option will be honored.;public void setRestletUriPatterns(List<String> restletUriPatterns) {_        this.restletUriPatterns = restletUriPatterns__    };specify,one,ore,more,uri,templates,to,be,serviced,by,a,restlet,consumer,endpoint,using,the,notation,to,reference,a,list,string,in,the,camel,registry,if,a,uri,pattern,has,been,defined,in,the,endpoint,uri,both,the,uri,pattern,defined,in,the,endpoint,and,the,restlet,uri,patterns,option,will,be,honored;public,void,set,restlet,uri,patterns,list,string,restlet,uri,patterns,this,restlet,uri,patterns,restlet,uri,patterns
RestletEndpoint -> public void setRestletUriPatterns(List<String> restletUriPatterns);1506336987;Specify one ore more URI templates to be serviced by a restlet consumer endpoint, using the # notation to_reference a List<String> in the Camel Registry._If a URI pattern has been defined in the endpoint URI, both the URI pattern defined in the endpoint and the restletUriPatterns option will be honored.;public void setRestletUriPatterns(List<String> restletUriPatterns) {_        this.restletUriPatterns = restletUriPatterns__    };specify,one,ore,more,uri,templates,to,be,serviced,by,a,restlet,consumer,endpoint,using,the,notation,to,reference,a,list,string,in,the,camel,registry,if,a,uri,pattern,has,been,defined,in,the,endpoint,uri,both,the,uri,pattern,defined,in,the,endpoint,and,the,restlet,uri,patterns,option,will,be,honored;public,void,set,restlet,uri,patterns,list,string,restlet,uri,patterns,this,restlet,uri,patterns,restlet,uri,patterns
RestletEndpoint -> public void setUriPattern(String uriPattern);1431337048;The resource pattern such as /customer/{id};public void setUriPattern(String uriPattern) {_        this.uriPattern = uriPattern__    };the,resource,pattern,such,as,customer,id;public,void,set,uri,pattern,string,uri,pattern,this,uri,pattern,uri,pattern
RestletEndpoint -> public void setUriPattern(String uriPattern);1434198513;The resource pattern such as /customer/{id};public void setUriPattern(String uriPattern) {_        this.uriPattern = uriPattern__    };the,resource,pattern,such,as,customer,id;public,void,set,uri,pattern,string,uri,pattern,this,uri,pattern,uri,pattern
RestletEndpoint -> public void setUriPattern(String uriPattern);1451237128;The resource pattern such as /customer/{id};public void setUriPattern(String uriPattern) {_        this.uriPattern = uriPattern__    };the,resource,pattern,such,as,customer,id;public,void,set,uri,pattern,string,uri,pattern,this,uri,pattern,uri,pattern
RestletEndpoint -> public void setUriPattern(String uriPattern);1451302108;The resource pattern such as /customer/{id};public void setUriPattern(String uriPattern) {_        this.uriPattern = uriPattern__    };the,resource,pattern,such,as,customer,id;public,void,set,uri,pattern,string,uri,pattern,this,uri,pattern,uri,pattern
RestletEndpoint -> public void setUriPattern(String uriPattern);1451939116;The resource pattern such as /customer/{id};public void setUriPattern(String uriPattern) {_        this.uriPattern = uriPattern__    };the,resource,pattern,such,as,customer,id;public,void,set,uri,pattern,string,uri,pattern,this,uri,pattern,uri,pattern
RestletEndpoint -> public void setUriPattern(String uriPattern);1452076588;The resource pattern such as /customer/{id};public void setUriPattern(String uriPattern) {_        this.uriPattern = uriPattern__    };the,resource,pattern,such,as,customer,id;public,void,set,uri,pattern,string,uri,pattern,this,uri,pattern,uri,pattern
RestletEndpoint -> public void setUriPattern(String uriPattern);1452194208;The resource pattern such as /customer/{id};public void setUriPattern(String uriPattern) {_        this.uriPattern = uriPattern__    };the,resource,pattern,such,as,customer,id;public,void,set,uri,pattern,string,uri,pattern,this,uri,pattern,uri,pattern
RestletEndpoint -> public void setUriPattern(String uriPattern);1460115881;The resource pattern such as /customer/{id};public void setUriPattern(String uriPattern) {_        this.uriPattern = uriPattern__    };the,resource,pattern,such,as,customer,id;public,void,set,uri,pattern,string,uri,pattern,this,uri,pattern,uri,pattern
RestletEndpoint -> public void setUriPattern(String uriPattern);1460966546;The resource pattern such as /customer/{id};public void setUriPattern(String uriPattern) {_        this.uriPattern = uriPattern__    };the,resource,pattern,such,as,customer,id;public,void,set,uri,pattern,string,uri,pattern,this,uri,pattern,uri,pattern
RestletEndpoint -> public void setUriPattern(String uriPattern);1463151573;The resource pattern such as /customer/{id};public void setUriPattern(String uriPattern) {_        this.uriPattern = uriPattern__    };the,resource,pattern,such,as,customer,id;public,void,set,uri,pattern,string,uri,pattern,this,uri,pattern,uri,pattern
RestletEndpoint -> public void setUriPattern(String uriPattern);1476946116;The resource pattern such as /customer/{id};public void setUriPattern(String uriPattern) {_        this.uriPattern = uriPattern__    };the,resource,pattern,such,as,customer,id;public,void,set,uri,pattern,string,uri,pattern,this,uri,pattern,uri,pattern
RestletEndpoint -> public void setUriPattern(String uriPattern);1482332324;The resource pattern such as /customer/{id};public void setUriPattern(String uriPattern) {_        this.uriPattern = uriPattern__    };the,resource,pattern,such,as,customer,id;public,void,set,uri,pattern,string,uri,pattern,this,uri,pattern,uri,pattern
RestletEndpoint -> public void setUriPattern(String uriPattern);1485974480;The resource pattern such as /customer/{id};public void setUriPattern(String uriPattern) {_        this.uriPattern = uriPattern__    };the,resource,pattern,such,as,customer,id;public,void,set,uri,pattern,string,uri,pattern,this,uri,pattern,uri,pattern
RestletEndpoint -> public void setUriPattern(String uriPattern);1494752465;The resource pattern such as /customer/{id};public void setUriPattern(String uriPattern) {_        this.uriPattern = uriPattern__    };the,resource,pattern,such,as,customer,id;public,void,set,uri,pattern,string,uri,pattern,this,uri,pattern,uri,pattern
RestletEndpoint -> public void setUriPattern(String uriPattern);1495627904;The resource pattern such as /customer/{id};public void setUriPattern(String uriPattern) {_        this.uriPattern = uriPattern__    };the,resource,pattern,such,as,customer,id;public,void,set,uri,pattern,string,uri,pattern,this,uri,pattern,uri,pattern
RestletEndpoint -> public void setUriPattern(String uriPattern);1506336987;The resource pattern such as /customer/{id};public void setUriPattern(String uriPattern) {_        this.uriPattern = uriPattern__    };the,resource,pattern,such,as,customer,id;public,void,set,uri,pattern,string,uri,pattern,this,uri,pattern,uri,pattern
RestletEndpoint -> public void setUriPattern(String uriPattern);1520245176;The resource pattern such as /customer/{id};public void setUriPattern(String uriPattern) {_        this.uriPattern = uriPattern__    };the,resource,pattern,such,as,customer,id;public,void,set,uri,pattern,string,uri,pattern,this,uri,pattern,uri,pattern
RestletEndpoint -> public void setUriPattern(String uriPattern);1540108158;The resource pattern such as /customer/{id};public void setUriPattern(String uriPattern) {_        this.uriPattern = uriPattern__    };the,resource,pattern,such,as,customer,id;public,void,set,uri,pattern,string,uri,pattern,this,uri,pattern,uri,pattern
RestletEndpoint -> public void setUriPattern(String uriPattern);1540108163;The resource pattern such as /customer/{id};public void setUriPattern(String uriPattern) {_        this.uriPattern = uriPattern__    };the,resource,pattern,such,as,customer,id;public,void,set,uri,pattern,string,uri,pattern,this,uri,pattern,uri,pattern
RestletEndpoint -> public void setUriPattern(String uriPattern);1545313144;The resource pattern such as /customer/{id};public void setUriPattern(String uriPattern) {_        this.uriPattern = uriPattern__    };the,resource,pattern,such,as,customer,id;public,void,set,uri,pattern,string,uri,pattern,this,uri,pattern,uri,pattern
RestletEndpoint -> public void setUriPattern(String uriPattern);1547240981;The resource pattern such as /customer/{id};public void setUriPattern(String uriPattern) {_        this.uriPattern = uriPattern__    };the,resource,pattern,such,as,customer,id;public,void,set,uri,pattern,string,uri,pattern,this,uri,pattern,uri,pattern
RestletEndpoint -> public void setUriPattern(String uriPattern);1547480087;The resource pattern such as /customer/{id};public void setUriPattern(String uriPattern) {_        this.uriPattern = uriPattern__    };the,resource,pattern,such,as,customer,id;public,void,set,uri,pattern,string,uri,pattern,this,uri,pattern,uri,pattern
RestletEndpoint -> public void setSocketTimeout(int socketTimeout);1431337048;The Client socket receive timeout, 0 for unlimited wait.;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };the,client,socket,receive,timeout,0,for,unlimited,wait;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
RestletEndpoint -> public void setSocketTimeout(int socketTimeout);1434198513;The Client socket receive timeout, 0 for unlimited wait.;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };the,client,socket,receive,timeout,0,for,unlimited,wait;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
RestletEndpoint -> public void setSocketTimeout(int socketTimeout);1451237128;The Client socket receive timeout, 0 for unlimited wait.;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };the,client,socket,receive,timeout,0,for,unlimited,wait;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
RestletEndpoint -> public void setSocketTimeout(int socketTimeout);1451302108;The Client socket receive timeout, 0 for unlimited wait.;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };the,client,socket,receive,timeout,0,for,unlimited,wait;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
RestletEndpoint -> public void setSocketTimeout(int socketTimeout);1451939116;The Client socket receive timeout, 0 for unlimited wait.;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };the,client,socket,receive,timeout,0,for,unlimited,wait;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
RestletEndpoint -> public void setSocketTimeout(int socketTimeout);1452076588;The Client socket receive timeout, 0 for unlimited wait.;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };the,client,socket,receive,timeout,0,for,unlimited,wait;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
RestletEndpoint -> public void setSocketTimeout(int socketTimeout);1452194208;The Client socket receive timeout, 0 for unlimited wait.;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };the,client,socket,receive,timeout,0,for,unlimited,wait;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
RestletEndpoint -> public void setSocketTimeout(int socketTimeout);1460115881;The Client socket receive timeout, 0 for unlimited wait.;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };the,client,socket,receive,timeout,0,for,unlimited,wait;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
RestletEndpoint -> public void setSocketTimeout(int socketTimeout);1460966546;The Client socket receive timeout, 0 for unlimited wait.;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };the,client,socket,receive,timeout,0,for,unlimited,wait;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
RestletEndpoint -> public void setSocketTimeout(int socketTimeout);1463151573;The Client socket receive timeout, 0 for unlimited wait.;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };the,client,socket,receive,timeout,0,for,unlimited,wait;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
RestletEndpoint -> public void setSocketTimeout(int socketTimeout);1476946116;The Client socket receive timeout, 0 for unlimited wait.;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };the,client,socket,receive,timeout,0,for,unlimited,wait;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
RestletEndpoint -> public void setSocketTimeout(int socketTimeout);1482332324;The Client socket receive timeout, 0 for unlimited wait.;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };the,client,socket,receive,timeout,0,for,unlimited,wait;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
RestletEndpoint -> public void setSocketTimeout(int socketTimeout);1485974480;The Client socket receive timeout, 0 for unlimited wait.;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };the,client,socket,receive,timeout,0,for,unlimited,wait;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
RestletEndpoint -> public void setSocketTimeout(int socketTimeout);1494752465;The Client socket receive timeout, 0 for unlimited wait.;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };the,client,socket,receive,timeout,0,for,unlimited,wait;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
RestletEndpoint -> public void setSocketTimeout(int socketTimeout);1495627904;The Client socket receive timeout, 0 for unlimited wait.;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };the,client,socket,receive,timeout,0,for,unlimited,wait;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
RestletEndpoint -> public void setSocketTimeout(int socketTimeout);1506336987;The Client socket receive timeout, 0 for unlimited wait.;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };the,client,socket,receive,timeout,0,for,unlimited,wait;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
RestletEndpoint -> public void setSocketTimeout(int socketTimeout);1520245176;The Client socket receive timeout, 0 for unlimited wait.;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };the,client,socket,receive,timeout,0,for,unlimited,wait;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
RestletEndpoint -> public void setSocketTimeout(int socketTimeout);1540108158;The Client socket receive timeout, 0 for unlimited wait.;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };the,client,socket,receive,timeout,0,for,unlimited,wait;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
RestletEndpoint -> public void setSocketTimeout(int socketTimeout);1540108163;The Client socket receive timeout, 0 for unlimited wait.;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };the,client,socket,receive,timeout,0,for,unlimited,wait;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
RestletEndpoint -> public void setSocketTimeout(int socketTimeout);1545313144;The Client socket receive timeout, 0 for unlimited wait.;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };the,client,socket,receive,timeout,0,for,unlimited,wait;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
RestletEndpoint -> public void setSocketTimeout(int socketTimeout);1547240981;The Client socket receive timeout, 0 for unlimited wait.;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };the,client,socket,receive,timeout,0,for,unlimited,wait;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
RestletEndpoint -> public void setSocketTimeout(int socketTimeout);1547480087;The Client socket receive timeout, 0 for unlimited wait.;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };the,client,socket,receive,timeout,0,for,unlimited,wait;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
RestletEndpoint -> public void setQueryParameters(Map<String, Object> queryParameters);1495627904;Additional query parameters for producer;public void setQueryParameters(Map<String, Object> queryParameters) {_        this.queryParameters = queryParameters__    };additional,query,parameters,for,producer;public,void,set,query,parameters,map,string,object,query,parameters,this,query,parameters,query,parameters
RestletEndpoint -> public void setQueryParameters(Map<String, Object> queryParameters);1506336987;Additional query parameters for producer;public void setQueryParameters(Map<String, Object> queryParameters) {_        this.queryParameters = queryParameters__    };additional,query,parameters,for,producer;public,void,set,query,parameters,map,string,object,query,parameters,this,query,parameters,query,parameters
RestletEndpoint -> public void setQueryParameters(Map<String, Object> queryParameters);1520245176;Additional query parameters for producer;public void setQueryParameters(Map<String, Object> queryParameters) {_        this.queryParameters = queryParameters__    };additional,query,parameters,for,producer;public,void,set,query,parameters,map,string,object,query,parameters,this,query,parameters,query,parameters
RestletEndpoint -> public void setQueryParameters(Map<String, Object> queryParameters);1540108158;Additional query parameters for producer;public void setQueryParameters(Map<String, Object> queryParameters) {_        this.queryParameters = queryParameters__    };additional,query,parameters,for,producer;public,void,set,query,parameters,map,string,object,query,parameters,this,query,parameters,query,parameters
RestletEndpoint -> public void setQueryParameters(Map<String, Object> queryParameters);1540108163;Additional query parameters for producer;public void setQueryParameters(Map<String, Object> queryParameters) {_        this.queryParameters = queryParameters__    };additional,query,parameters,for,producer;public,void,set,query,parameters,map,string,object,query,parameters,this,query,parameters,query,parameters
RestletEndpoint -> public void setQueryParameters(Map<String, Object> queryParameters);1545313144;Additional query parameters for producer;public void setQueryParameters(Map<String, Object> queryParameters) {_        this.queryParameters = queryParameters__    };additional,query,parameters,for,producer;public,void,set,query,parameters,map,string,object,query,parameters,this,query,parameters,query,parameters
RestletEndpoint -> public void setQueryParameters(Map<String, Object> queryParameters);1547240981;Additional query parameters for producer;public void setQueryParameters(Map<String, Object> queryParameters) {_        this.queryParameters = queryParameters__    };additional,query,parameters,for,producer;public,void,set,query,parameters,map,string,object,query,parameters,this,query,parameters,query,parameters
RestletEndpoint -> public void setQueryParameters(Map<String, Object> queryParameters);1547480087;Additional query parameters for producer;public void setQueryParameters(Map<String, Object> queryParameters) {_        this.queryParameters = queryParameters__    };additional,query,parameters,for,producer;public,void,set,query,parameters,map,string,object,query,parameters,this,query,parameters,query,parameters
RestletEndpoint -> public String getHost();1230651400;@return the host;public String getHost() {_        return host__    };return,the,host;public,string,get,host,return,host
RestletEndpoint -> public String getHost();1230693478;@return the host;public String getHost() {_        return host__    };return,the,host;public,string,get,host,return,host
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1230651400;@param restletMethod the restletMethod to set;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };param,restlet,method,the,restlet,method,to,set;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1230693478;@param restletMethod the restletMethod to set;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };param,restlet,method,the,restlet,method,to,set;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1431337048;On a producer endpoint, specifies the request method to use._On a consumer endpoint, specifies that the endpoint consumes only restletMethod requests.;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };on,a,producer,endpoint,specifies,the,request,method,to,use,on,a,consumer,endpoint,specifies,that,the,endpoint,consumes,only,restlet,method,requests;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1434198513;On a producer endpoint, specifies the request method to use._On a consumer endpoint, specifies that the endpoint consumes only restletMethod requests.;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };on,a,producer,endpoint,specifies,the,request,method,to,use,on,a,consumer,endpoint,specifies,that,the,endpoint,consumes,only,restlet,method,requests;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1451237128;On a producer endpoint, specifies the request method to use._On a consumer endpoint, specifies that the endpoint consumes only restletMethod requests.;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };on,a,producer,endpoint,specifies,the,request,method,to,use,on,a,consumer,endpoint,specifies,that,the,endpoint,consumes,only,restlet,method,requests;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1451302108;On a producer endpoint, specifies the request method to use._On a consumer endpoint, specifies that the endpoint consumes only restletMethod requests.;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };on,a,producer,endpoint,specifies,the,request,method,to,use,on,a,consumer,endpoint,specifies,that,the,endpoint,consumes,only,restlet,method,requests;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1451939116;On a producer endpoint, specifies the request method to use._On a consumer endpoint, specifies that the endpoint consumes only restletMethod requests.;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };on,a,producer,endpoint,specifies,the,request,method,to,use,on,a,consumer,endpoint,specifies,that,the,endpoint,consumes,only,restlet,method,requests;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1452076588;On a producer endpoint, specifies the request method to use._On a consumer endpoint, specifies that the endpoint consumes only restletMethod requests.;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };on,a,producer,endpoint,specifies,the,request,method,to,use,on,a,consumer,endpoint,specifies,that,the,endpoint,consumes,only,restlet,method,requests;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1452194208;On a producer endpoint, specifies the request method to use._On a consumer endpoint, specifies that the endpoint consumes only restletMethod requests.;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };on,a,producer,endpoint,specifies,the,request,method,to,use,on,a,consumer,endpoint,specifies,that,the,endpoint,consumes,only,restlet,method,requests;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1460115881;On a producer endpoint, specifies the request method to use._On a consumer endpoint, specifies that the endpoint consumes only restletMethod requests.;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };on,a,producer,endpoint,specifies,the,request,method,to,use,on,a,consumer,endpoint,specifies,that,the,endpoint,consumes,only,restlet,method,requests;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1460966546;On a producer endpoint, specifies the request method to use._On a consumer endpoint, specifies that the endpoint consumes only restletMethod requests.;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };on,a,producer,endpoint,specifies,the,request,method,to,use,on,a,consumer,endpoint,specifies,that,the,endpoint,consumes,only,restlet,method,requests;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1463151573;On a producer endpoint, specifies the request method to use._On a consumer endpoint, specifies that the endpoint consumes only restletMethod requests.;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };on,a,producer,endpoint,specifies,the,request,method,to,use,on,a,consumer,endpoint,specifies,that,the,endpoint,consumes,only,restlet,method,requests;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1476946116;On a producer endpoint, specifies the request method to use._On a consumer endpoint, specifies that the endpoint consumes only restletMethod requests.;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };on,a,producer,endpoint,specifies,the,request,method,to,use,on,a,consumer,endpoint,specifies,that,the,endpoint,consumes,only,restlet,method,requests;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1482332324;On a producer endpoint, specifies the request method to use._On a consumer endpoint, specifies that the endpoint consumes only restletMethod requests.;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };on,a,producer,endpoint,specifies,the,request,method,to,use,on,a,consumer,endpoint,specifies,that,the,endpoint,consumes,only,restlet,method,requests;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1485974480;On a producer endpoint, specifies the request method to use._On a consumer endpoint, specifies that the endpoint consumes only restletMethod requests.;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };on,a,producer,endpoint,specifies,the,request,method,to,use,on,a,consumer,endpoint,specifies,that,the,endpoint,consumes,only,restlet,method,requests;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1494752465;On a producer endpoint, specifies the request method to use._On a consumer endpoint, specifies that the endpoint consumes only restletMethod requests.;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };on,a,producer,endpoint,specifies,the,request,method,to,use,on,a,consumer,endpoint,specifies,that,the,endpoint,consumes,only,restlet,method,requests;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1495627904;On a producer endpoint, specifies the request method to use._On a consumer endpoint, specifies that the endpoint consumes only restletMethod requests.;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };on,a,producer,endpoint,specifies,the,request,method,to,use,on,a,consumer,endpoint,specifies,that,the,endpoint,consumes,only,restlet,method,requests;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1506336987;On a producer endpoint, specifies the request method to use._On a consumer endpoint, specifies that the endpoint consumes only restletMethod requests.;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };on,a,producer,endpoint,specifies,the,request,method,to,use,on,a,consumer,endpoint,specifies,that,the,endpoint,consumes,only,restlet,method,requests;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1520245176;On a producer endpoint, specifies the request method to use._On a consumer endpoint, specifies that the endpoint consumes only restletMethod requests.;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };on,a,producer,endpoint,specifies,the,request,method,to,use,on,a,consumer,endpoint,specifies,that,the,endpoint,consumes,only,restlet,method,requests;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1540108158;On a producer endpoint, specifies the request method to use._On a consumer endpoint, specifies that the endpoint consumes only restletMethod requests.;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };on,a,producer,endpoint,specifies,the,request,method,to,use,on,a,consumer,endpoint,specifies,that,the,endpoint,consumes,only,restlet,method,requests;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1540108163;On a producer endpoint, specifies the request method to use._On a consumer endpoint, specifies that the endpoint consumes only restletMethod requests.;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };on,a,producer,endpoint,specifies,the,request,method,to,use,on,a,consumer,endpoint,specifies,that,the,endpoint,consumes,only,restlet,method,requests;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1545313144;On a producer endpoint, specifies the request method to use._On a consumer endpoint, specifies that the endpoint consumes only restletMethod requests.;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };on,a,producer,endpoint,specifies,the,request,method,to,use,on,a,consumer,endpoint,specifies,that,the,endpoint,consumes,only,restlet,method,requests;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1547240981;On a producer endpoint, specifies the request method to use._On a consumer endpoint, specifies that the endpoint consumes only restletMethod requests.;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };on,a,producer,endpoint,specifies,the,request,method,to,use,on,a,consumer,endpoint,specifies,that,the,endpoint,consumes,only,restlet,method,requests;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setRestletMethod(Method restletMethod);1547480087;On a producer endpoint, specifies the request method to use._On a consumer endpoint, specifies that the endpoint consumes only restletMethod requests.;public void setRestletMethod(Method restletMethod) {_        this.restletMethod = restletMethod__    };on,a,producer,endpoint,specifies,the,request,method,to,use,on,a,consumer,endpoint,specifies,that,the,endpoint,consumes,only,restlet,method,requests;public,void,set,restlet,method,method,restlet,method,this,restlet,method,restlet,method
RestletEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1431337048;Whether to throw exception on a producer failure. If this option is false then the http status code is set as a message header which_can be checked if it has an error value.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };whether,to,throw,exception,on,a,producer,failure,if,this,option,is,false,then,the,http,status,code,is,set,as,a,message,header,which,can,be,checked,if,it,has,an,error,value;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
RestletEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1434198513;Whether to throw exception on a producer failure. If this option is false then the http status code is set as a message header which_can be checked if it has an error value.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };whether,to,throw,exception,on,a,producer,failure,if,this,option,is,false,then,the,http,status,code,is,set,as,a,message,header,which,can,be,checked,if,it,has,an,error,value;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
RestletEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1451237128;Whether to throw exception on a producer failure. If this option is false then the http status code is set as a message header which_can be checked if it has an error value.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };whether,to,throw,exception,on,a,producer,failure,if,this,option,is,false,then,the,http,status,code,is,set,as,a,message,header,which,can,be,checked,if,it,has,an,error,value;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
RestletEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1451302108;Whether to throw exception on a producer failure. If this option is false then the http status code is set as a message header which_can be checked if it has an error value.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };whether,to,throw,exception,on,a,producer,failure,if,this,option,is,false,then,the,http,status,code,is,set,as,a,message,header,which,can,be,checked,if,it,has,an,error,value;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
RestletEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1451939116;Whether to throw exception on a producer failure. If this option is false then the http status code is set as a message header which_can be checked if it has an error value.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };whether,to,throw,exception,on,a,producer,failure,if,this,option,is,false,then,the,http,status,code,is,set,as,a,message,header,which,can,be,checked,if,it,has,an,error,value;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
RestletEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1452076588;Whether to throw exception on a producer failure. If this option is false then the http status code is set as a message header which_can be checked if it has an error value.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };whether,to,throw,exception,on,a,producer,failure,if,this,option,is,false,then,the,http,status,code,is,set,as,a,message,header,which,can,be,checked,if,it,has,an,error,value;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
RestletEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1452194208;Whether to throw exception on a producer failure. If this option is false then the http status code is set as a message header which_can be checked if it has an error value.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };whether,to,throw,exception,on,a,producer,failure,if,this,option,is,false,then,the,http,status,code,is,set,as,a,message,header,which,can,be,checked,if,it,has,an,error,value;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
RestletEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1460115881;Whether to throw exception on a producer failure. If this option is false then the http status code is set as a message header which_can be checked if it has an error value.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };whether,to,throw,exception,on,a,producer,failure,if,this,option,is,false,then,the,http,status,code,is,set,as,a,message,header,which,can,be,checked,if,it,has,an,error,value;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
RestletEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1460966546;Whether to throw exception on a producer failure. If this option is false then the http status code is set as a message header which_can be checked if it has an error value.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };whether,to,throw,exception,on,a,producer,failure,if,this,option,is,false,then,the,http,status,code,is,set,as,a,message,header,which,can,be,checked,if,it,has,an,error,value;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
RestletEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1463151573;Whether to throw exception on a producer failure. If this option is false then the http status code is set as a message header which_can be checked if it has an error value.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };whether,to,throw,exception,on,a,producer,failure,if,this,option,is,false,then,the,http,status,code,is,set,as,a,message,header,which,can,be,checked,if,it,has,an,error,value;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
RestletEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1476946116;Whether to throw exception on a producer failure. If this option is false then the http status code is set as a message header which_can be checked if it has an error value.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };whether,to,throw,exception,on,a,producer,failure,if,this,option,is,false,then,the,http,status,code,is,set,as,a,message,header,which,can,be,checked,if,it,has,an,error,value;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
RestletEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1482332324;Whether to throw exception on a producer failure. If this option is false then the http status code is set as a message header which_can be checked if it has an error value.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };whether,to,throw,exception,on,a,producer,failure,if,this,option,is,false,then,the,http,status,code,is,set,as,a,message,header,which,can,be,checked,if,it,has,an,error,value;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
RestletEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1485974480;Whether to throw exception on a producer failure. If this option is false then the http status code is set as a message header which_can be checked if it has an error value.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };whether,to,throw,exception,on,a,producer,failure,if,this,option,is,false,then,the,http,status,code,is,set,as,a,message,header,which,can,be,checked,if,it,has,an,error,value;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
RestletEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1494752465;Whether to throw exception on a producer failure. If this option is false then the http status code is set as a message header which_can be checked if it has an error value.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };whether,to,throw,exception,on,a,producer,failure,if,this,option,is,false,then,the,http,status,code,is,set,as,a,message,header,which,can,be,checked,if,it,has,an,error,value;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
RestletEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1495627904;Whether to throw exception on a producer failure. If this option is false then the http status code is set as a message header which_can be checked if it has an error value.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };whether,to,throw,exception,on,a,producer,failure,if,this,option,is,false,then,the,http,status,code,is,set,as,a,message,header,which,can,be,checked,if,it,has,an,error,value;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
RestletEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1506336987;Whether to throw exception on a producer failure. If this option is false then the http status code is set as a message header which_can be checked if it has an error value.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };whether,to,throw,exception,on,a,producer,failure,if,this,option,is,false,then,the,http,status,code,is,set,as,a,message,header,which,can,be,checked,if,it,has,an,error,value;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
RestletEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1520245176;Whether to throw exception on a producer failure. If this option is false then the http status code is set as a message header which_can be checked if it has an error value.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };whether,to,throw,exception,on,a,producer,failure,if,this,option,is,false,then,the,http,status,code,is,set,as,a,message,header,which,can,be,checked,if,it,has,an,error,value;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
RestletEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1540108158;Whether to throw exception on a producer failure. If this option is false then the http status code is set as a message header which_can be checked if it has an error value.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };whether,to,throw,exception,on,a,producer,failure,if,this,option,is,false,then,the,http,status,code,is,set,as,a,message,header,which,can,be,checked,if,it,has,an,error,value;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
RestletEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1540108163;Whether to throw exception on a producer failure. If this option is false then the http status code is set as a message header which_can be checked if it has an error value.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };whether,to,throw,exception,on,a,producer,failure,if,this,option,is,false,then,the,http,status,code,is,set,as,a,message,header,which,can,be,checked,if,it,has,an,error,value;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
RestletEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1545313144;Whether to throw exception on a producer failure. If this option is false then the http status code is set as a message header which_can be checked if it has an error value.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };whether,to,throw,exception,on,a,producer,failure,if,this,option,is,false,then,the,http,status,code,is,set,as,a,message,header,which,can,be,checked,if,it,has,an,error,value;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
RestletEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1547240981;Whether to throw exception on a producer failure. If this option is false then the http status code is set as a message header which_can be checked if it has an error value.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };whether,to,throw,exception,on,a,producer,failure,if,this,option,is,false,then,the,http,status,code,is,set,as,a,message,header,which,can,be,checked,if,it,has,an,error,value;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
RestletEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1547480087;Whether to throw exception on a producer failure. If this option is false then the http status code is set as a message header which_can be checked if it has an error value.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };whether,to,throw,exception,on,a,producer,failure,if,this,option,is,false,then,the,http,status,code,is,set,as,a,message,header,which,can,be,checked,if,it,has,an,error,value;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
RestletEndpoint -> public void setDisableStreamCache(boolean disableStreamCache);1431337048;Determines whether or not the raw input stream from Restlet is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Restlet input stream to support reading it multiple times to ensure Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultRestletBinding will copy the request input stream into a stream cache and put it into message body_if this option is false to support reading the stream multiple times.;public void setDisableStreamCache(boolean disableStreamCache) {_        this.disableStreamCache = disableStreamCache__    };determines,whether,or,not,the,raw,input,stream,from,restlet,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,restlet,input,stream,to,support,reading,it,multiple,times,to,ensure,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,restlet,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,body,if,this,option,is,false,to,support,reading,the,stream,multiple,times;public,void,set,disable,stream,cache,boolean,disable,stream,cache,this,disable,stream,cache,disable,stream,cache
RestletEndpoint -> public void setDisableStreamCache(boolean disableStreamCache);1434198513;Determines whether or not the raw input stream from Restlet is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Restlet input stream to support reading it multiple times to ensure Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultRestletBinding will copy the request input stream into a stream cache and put it into message body_if this option is false to support reading the stream multiple times.;public void setDisableStreamCache(boolean disableStreamCache) {_        this.disableStreamCache = disableStreamCache__    };determines,whether,or,not,the,raw,input,stream,from,restlet,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,restlet,input,stream,to,support,reading,it,multiple,times,to,ensure,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,restlet,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,body,if,this,option,is,false,to,support,reading,the,stream,multiple,times;public,void,set,disable,stream,cache,boolean,disable,stream,cache,this,disable,stream,cache,disable,stream,cache
RestletEndpoint -> public void setDisableStreamCache(boolean disableStreamCache);1451237128;Determines whether or not the raw input stream from Restlet is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Restlet input stream to support reading it multiple times to ensure Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultRestletBinding will copy the request input stream into a stream cache and put it into message body_if this option is false to support reading the stream multiple times.;public void setDisableStreamCache(boolean disableStreamCache) {_        this.disableStreamCache = disableStreamCache__    };determines,whether,or,not,the,raw,input,stream,from,restlet,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,restlet,input,stream,to,support,reading,it,multiple,times,to,ensure,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,restlet,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,body,if,this,option,is,false,to,support,reading,the,stream,multiple,times;public,void,set,disable,stream,cache,boolean,disable,stream,cache,this,disable,stream,cache,disable,stream,cache
RestletEndpoint -> public void setDisableStreamCache(boolean disableStreamCache);1451302108;Determines whether or not the raw input stream from Restlet is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Restlet input stream to support reading it multiple times to ensure Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultRestletBinding will copy the request input stream into a stream cache and put it into message body_if this option is false to support reading the stream multiple times.;public void setDisableStreamCache(boolean disableStreamCache) {_        this.disableStreamCache = disableStreamCache__    };determines,whether,or,not,the,raw,input,stream,from,restlet,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,restlet,input,stream,to,support,reading,it,multiple,times,to,ensure,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,restlet,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,body,if,this,option,is,false,to,support,reading,the,stream,multiple,times;public,void,set,disable,stream,cache,boolean,disable,stream,cache,this,disable,stream,cache,disable,stream,cache
RestletEndpoint -> public void setDisableStreamCache(boolean disableStreamCache);1451939116;Determines whether or not the raw input stream from Restlet is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Restlet input stream to support reading it multiple times to ensure Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultRestletBinding will copy the request input stream into a stream cache and put it into message body_if this option is false to support reading the stream multiple times.;public void setDisableStreamCache(boolean disableStreamCache) {_        this.disableStreamCache = disableStreamCache__    };determines,whether,or,not,the,raw,input,stream,from,restlet,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,restlet,input,stream,to,support,reading,it,multiple,times,to,ensure,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,restlet,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,body,if,this,option,is,false,to,support,reading,the,stream,multiple,times;public,void,set,disable,stream,cache,boolean,disable,stream,cache,this,disable,stream,cache,disable,stream,cache
RestletEndpoint -> public void setDisableStreamCache(boolean disableStreamCache);1452076588;Determines whether or not the raw input stream from Restlet is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Restlet input stream to support reading it multiple times to ensure Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultRestletBinding will copy the request input stream into a stream cache and put it into message body_if this option is false to support reading the stream multiple times.;public void setDisableStreamCache(boolean disableStreamCache) {_        this.disableStreamCache = disableStreamCache__    };determines,whether,or,not,the,raw,input,stream,from,restlet,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,restlet,input,stream,to,support,reading,it,multiple,times,to,ensure,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,restlet,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,body,if,this,option,is,false,to,support,reading,the,stream,multiple,times;public,void,set,disable,stream,cache,boolean,disable,stream,cache,this,disable,stream,cache,disable,stream,cache
RestletEndpoint -> public void setDisableStreamCache(boolean disableStreamCache);1452194208;Determines whether or not the raw input stream from Restlet is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Restlet input stream to support reading it multiple times to ensure Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultRestletBinding will copy the request input stream into a stream cache and put it into message body_if this option is false to support reading the stream multiple times.;public void setDisableStreamCache(boolean disableStreamCache) {_        this.disableStreamCache = disableStreamCache__    };determines,whether,or,not,the,raw,input,stream,from,restlet,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,restlet,input,stream,to,support,reading,it,multiple,times,to,ensure,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,restlet,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,body,if,this,option,is,false,to,support,reading,the,stream,multiple,times;public,void,set,disable,stream,cache,boolean,disable,stream,cache,this,disable,stream,cache,disable,stream,cache
RestletEndpoint -> public void setDisableStreamCache(boolean disableStreamCache);1460115881;Determines whether or not the raw input stream from Restlet is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Restlet input stream to support reading it multiple times to ensure Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultRestletBinding will copy the request input stream into a stream cache and put it into message body_if this option is false to support reading the stream multiple times.;public void setDisableStreamCache(boolean disableStreamCache) {_        this.disableStreamCache = disableStreamCache__    };determines,whether,or,not,the,raw,input,stream,from,restlet,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,restlet,input,stream,to,support,reading,it,multiple,times,to,ensure,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,restlet,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,body,if,this,option,is,false,to,support,reading,the,stream,multiple,times;public,void,set,disable,stream,cache,boolean,disable,stream,cache,this,disable,stream,cache,disable,stream,cache
RestletEndpoint -> public void setDisableStreamCache(boolean disableStreamCache);1460966546;Determines whether or not the raw input stream from Restlet is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Restlet input stream to support reading it multiple times to ensure Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultRestletBinding will copy the request input stream into a stream cache and put it into message body_if this option is false to support reading the stream multiple times.;public void setDisableStreamCache(boolean disableStreamCache) {_        this.disableStreamCache = disableStreamCache__    };determines,whether,or,not,the,raw,input,stream,from,restlet,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,restlet,input,stream,to,support,reading,it,multiple,times,to,ensure,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,restlet,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,body,if,this,option,is,false,to,support,reading,the,stream,multiple,times;public,void,set,disable,stream,cache,boolean,disable,stream,cache,this,disable,stream,cache,disable,stream,cache
RestletEndpoint -> public void setDisableStreamCache(boolean disableStreamCache);1463151573;Determines whether or not the raw input stream from Restlet is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Restlet input stream to support reading it multiple times to ensure Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultRestletBinding will copy the request input stream into a stream cache and put it into message body_if this option is false to support reading the stream multiple times.;public void setDisableStreamCache(boolean disableStreamCache) {_        this.disableStreamCache = disableStreamCache__    };determines,whether,or,not,the,raw,input,stream,from,restlet,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,restlet,input,stream,to,support,reading,it,multiple,times,to,ensure,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,restlet,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,body,if,this,option,is,false,to,support,reading,the,stream,multiple,times;public,void,set,disable,stream,cache,boolean,disable,stream,cache,this,disable,stream,cache,disable,stream,cache
RestletEndpoint -> public void setDisableStreamCache(boolean disableStreamCache);1476946116;Determines whether or not the raw input stream from Restlet is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Restlet input stream to support reading it multiple times to ensure Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultRestletBinding will copy the request input stream into a stream cache and put it into message body_if this option is false to support reading the stream multiple times.;public void setDisableStreamCache(boolean disableStreamCache) {_        this.disableStreamCache = disableStreamCache__    };determines,whether,or,not,the,raw,input,stream,from,restlet,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,restlet,input,stream,to,support,reading,it,multiple,times,to,ensure,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,restlet,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,body,if,this,option,is,false,to,support,reading,the,stream,multiple,times;public,void,set,disable,stream,cache,boolean,disable,stream,cache,this,disable,stream,cache,disable,stream,cache
RestletEndpoint -> public void setDisableStreamCache(boolean disableStreamCache);1482332324;Determines whether or not the raw input stream from Restlet is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Restlet input stream to support reading it multiple times to ensure Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultRestletBinding will copy the request input stream into a stream cache and put it into message body_if this option is false to support reading the stream multiple times.;public void setDisableStreamCache(boolean disableStreamCache) {_        this.disableStreamCache = disableStreamCache__    };determines,whether,or,not,the,raw,input,stream,from,restlet,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,restlet,input,stream,to,support,reading,it,multiple,times,to,ensure,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,restlet,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,body,if,this,option,is,false,to,support,reading,the,stream,multiple,times;public,void,set,disable,stream,cache,boolean,disable,stream,cache,this,disable,stream,cache,disable,stream,cache
RestletEndpoint -> public void setDisableStreamCache(boolean disableStreamCache);1485974480;Determines whether or not the raw input stream from Restlet is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Restlet input stream to support reading it multiple times to ensure Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultRestletBinding will copy the request input stream into a stream cache and put it into message body_if this option is false to support reading the stream multiple times.;public void setDisableStreamCache(boolean disableStreamCache) {_        this.disableStreamCache = disableStreamCache__    };determines,whether,or,not,the,raw,input,stream,from,restlet,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,restlet,input,stream,to,support,reading,it,multiple,times,to,ensure,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,restlet,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,body,if,this,option,is,false,to,support,reading,the,stream,multiple,times;public,void,set,disable,stream,cache,boolean,disable,stream,cache,this,disable,stream,cache,disable,stream,cache
RestletEndpoint -> public void setDisableStreamCache(boolean disableStreamCache);1494752465;Determines whether or not the raw input stream from Restlet is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Restlet input stream to support reading it multiple times to ensure Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultRestletBinding will copy the request input stream into a stream cache and put it into message body_if this option is false to support reading the stream multiple times.;public void setDisableStreamCache(boolean disableStreamCache) {_        this.disableStreamCache = disableStreamCache__    };determines,whether,or,not,the,raw,input,stream,from,restlet,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,restlet,input,stream,to,support,reading,it,multiple,times,to,ensure,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,restlet,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,body,if,this,option,is,false,to,support,reading,the,stream,multiple,times;public,void,set,disable,stream,cache,boolean,disable,stream,cache,this,disable,stream,cache,disable,stream,cache
RestletEndpoint -> public void setDisableStreamCache(boolean disableStreamCache);1495627904;Determines whether or not the raw input stream from Restlet is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Restlet input stream to support reading it multiple times to ensure Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultRestletBinding will copy the request input stream into a stream cache and put it into message body_if this option is false to support reading the stream multiple times.;public void setDisableStreamCache(boolean disableStreamCache) {_        this.disableStreamCache = disableStreamCache__    };determines,whether,or,not,the,raw,input,stream,from,restlet,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,restlet,input,stream,to,support,reading,it,multiple,times,to,ensure,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,restlet,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,body,if,this,option,is,false,to,support,reading,the,stream,multiple,times;public,void,set,disable,stream,cache,boolean,disable,stream,cache,this,disable,stream,cache,disable,stream,cache
RestletEndpoint -> public void setDisableStreamCache(boolean disableStreamCache);1506336987;Determines whether or not the raw input stream from Restlet is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Restlet input stream to support reading it multiple times to ensure Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultRestletBinding will copy the request input stream into a stream cache and put it into message body_if this option is false to support reading the stream multiple times.;public void setDisableStreamCache(boolean disableStreamCache) {_        this.disableStreamCache = disableStreamCache__    };determines,whether,or,not,the,raw,input,stream,from,restlet,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,restlet,input,stream,to,support,reading,it,multiple,times,to,ensure,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,restlet,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,body,if,this,option,is,false,to,support,reading,the,stream,multiple,times;public,void,set,disable,stream,cache,boolean,disable,stream,cache,this,disable,stream,cache,disable,stream,cache
RestletEndpoint -> public void setDisableStreamCache(boolean disableStreamCache);1520245176;Determines whether or not the raw input stream from Restlet is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Restlet input stream to support reading it multiple times to ensure Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultRestletBinding will copy the request input stream into a stream cache and put it into message body_if this option is false to support reading the stream multiple times.;public void setDisableStreamCache(boolean disableStreamCache) {_        this.disableStreamCache = disableStreamCache__    };determines,whether,or,not,the,raw,input,stream,from,restlet,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,restlet,input,stream,to,support,reading,it,multiple,times,to,ensure,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,restlet,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,body,if,this,option,is,false,to,support,reading,the,stream,multiple,times;public,void,set,disable,stream,cache,boolean,disable,stream,cache,this,disable,stream,cache,disable,stream,cache
RestletEndpoint -> public void setDisableStreamCache(boolean disableStreamCache);1540108158;Determines whether or not the raw input stream from Restlet is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Restlet input stream to support reading it multiple times to ensure Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultRestletBinding will copy the request input stream into a stream cache and put it into message body_if this option is false to support reading the stream multiple times.;public void setDisableStreamCache(boolean disableStreamCache) {_        this.disableStreamCache = disableStreamCache__    };determines,whether,or,not,the,raw,input,stream,from,restlet,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,restlet,input,stream,to,support,reading,it,multiple,times,to,ensure,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,restlet,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,body,if,this,option,is,false,to,support,reading,the,stream,multiple,times;public,void,set,disable,stream,cache,boolean,disable,stream,cache,this,disable,stream,cache,disable,stream,cache
RestletEndpoint -> public void setDisableStreamCache(boolean disableStreamCache);1540108163;Determines whether or not the raw input stream from Restlet is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Restlet input stream to support reading it multiple times to ensure Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultRestletBinding will copy the request input stream into a stream cache and put it into message body_if this option is false to support reading the stream multiple times.;public void setDisableStreamCache(boolean disableStreamCache) {_        this.disableStreamCache = disableStreamCache__    };determines,whether,or,not,the,raw,input,stream,from,restlet,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,restlet,input,stream,to,support,reading,it,multiple,times,to,ensure,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,restlet,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,body,if,this,option,is,false,to,support,reading,the,stream,multiple,times;public,void,set,disable,stream,cache,boolean,disable,stream,cache,this,disable,stream,cache,disable,stream,cache
RestletEndpoint -> public void setDisableStreamCache(boolean disableStreamCache);1545313144;Determines whether or not the raw input stream from Restlet is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Restlet input stream to support reading it multiple times to ensure Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultRestletBinding will copy the request input stream into a stream cache and put it into message body_if this option is false to support reading the stream multiple times.;public void setDisableStreamCache(boolean disableStreamCache) {_        this.disableStreamCache = disableStreamCache__    };determines,whether,or,not,the,raw,input,stream,from,restlet,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,restlet,input,stream,to,support,reading,it,multiple,times,to,ensure,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,restlet,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,body,if,this,option,is,false,to,support,reading,the,stream,multiple,times;public,void,set,disable,stream,cache,boolean,disable,stream,cache,this,disable,stream,cache,disable,stream,cache
RestletEndpoint -> public void setDisableStreamCache(boolean disableStreamCache);1547240981;Determines whether or not the raw input stream from Restlet is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Restlet input stream to support reading it multiple times to ensure Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultRestletBinding will copy the request input stream into a stream cache and put it into message body_if this option is false to support reading the stream multiple times.;public void setDisableStreamCache(boolean disableStreamCache) {_        this.disableStreamCache = disableStreamCache__    };determines,whether,or,not,the,raw,input,stream,from,restlet,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,restlet,input,stream,to,support,reading,it,multiple,times,to,ensure,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,restlet,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,body,if,this,option,is,false,to,support,reading,the,stream,multiple,times;public,void,set,disable,stream,cache,boolean,disable,stream,cache,this,disable,stream,cache,disable,stream,cache
RestletEndpoint -> public void setDisableStreamCache(boolean disableStreamCache);1547480087;Determines whether or not the raw input stream from Restlet is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Restlet input stream to support reading it multiple times to ensure Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultRestletBinding will copy the request input stream into a stream cache and put it into message body_if this option is false to support reading the stream multiple times.;public void setDisableStreamCache(boolean disableStreamCache) {_        this.disableStreamCache = disableStreamCache__    };determines,whether,or,not,the,raw,input,stream,from,restlet,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,restlet,input,stream,to,support,reading,it,multiple,times,to,ensure,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,restlet,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,body,if,this,option,is,false,to,support,reading,the,stream,multiple,times;public,void,set,disable,stream,cache,boolean,disable,stream,cache,this,disable,stream,cache,disable,stream,cache
RestletEndpoint -> public void setAutoCloseStream(boolean autoCloseStream);1463151573;Whether to auto close the stream representation as response from calling a REST service using the restlet producer._If the response is streaming and the option streamRepresentation is enabled then you may want to auto close_the {@link InputStream} from the streaming response to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setAutoCloseStream(boolean autoCloseStream) {_        this.autoCloseStream = autoCloseStream__    };whether,to,auto,close,the,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,and,the,option,stream,representation,is,enabled,then,you,may,want,to,auto,close,the,link,input,stream,from,the,streaming,response,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,auto,close,stream,boolean,auto,close,stream,this,auto,close,stream,auto,close,stream
RestletEndpoint -> public void setAutoCloseStream(boolean autoCloseStream);1476946116;Whether to auto close the stream representation as response from calling a REST service using the restlet producer._If the response is streaming and the option streamRepresentation is enabled then you may want to auto close_the {@link InputStream} from the streaming response to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setAutoCloseStream(boolean autoCloseStream) {_        this.autoCloseStream = autoCloseStream__    };whether,to,auto,close,the,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,and,the,option,stream,representation,is,enabled,then,you,may,want,to,auto,close,the,link,input,stream,from,the,streaming,response,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,auto,close,stream,boolean,auto,close,stream,this,auto,close,stream,auto,close,stream
RestletEndpoint -> public void setAutoCloseStream(boolean autoCloseStream);1482332324;Whether to auto close the stream representation as response from calling a REST service using the restlet producer._If the response is streaming and the option streamRepresentation is enabled then you may want to auto close_the {@link InputStream} from the streaming response to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setAutoCloseStream(boolean autoCloseStream) {_        this.autoCloseStream = autoCloseStream__    };whether,to,auto,close,the,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,and,the,option,stream,representation,is,enabled,then,you,may,want,to,auto,close,the,link,input,stream,from,the,streaming,response,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,auto,close,stream,boolean,auto,close,stream,this,auto,close,stream,auto,close,stream
RestletEndpoint -> public void setAutoCloseStream(boolean autoCloseStream);1485974480;Whether to auto close the stream representation as response from calling a REST service using the restlet producer._If the response is streaming and the option streamRepresentation is enabled then you may want to auto close_the {@link InputStream} from the streaming response to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setAutoCloseStream(boolean autoCloseStream) {_        this.autoCloseStream = autoCloseStream__    };whether,to,auto,close,the,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,and,the,option,stream,representation,is,enabled,then,you,may,want,to,auto,close,the,link,input,stream,from,the,streaming,response,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,auto,close,stream,boolean,auto,close,stream,this,auto,close,stream,auto,close,stream
RestletEndpoint -> public void setAutoCloseStream(boolean autoCloseStream);1494752465;Whether to auto close the stream representation as response from calling a REST service using the restlet producer._If the response is streaming and the option streamRepresentation is enabled then you may want to auto close_the {@link InputStream} from the streaming response to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setAutoCloseStream(boolean autoCloseStream) {_        this.autoCloseStream = autoCloseStream__    };whether,to,auto,close,the,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,and,the,option,stream,representation,is,enabled,then,you,may,want,to,auto,close,the,link,input,stream,from,the,streaming,response,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,auto,close,stream,boolean,auto,close,stream,this,auto,close,stream,auto,close,stream
RestletEndpoint -> public void setAutoCloseStream(boolean autoCloseStream);1495627904;Whether to auto close the stream representation as response from calling a REST service using the restlet producer._If the response is streaming and the option streamRepresentation is enabled then you may want to auto close_the {@link InputStream} from the streaming response to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setAutoCloseStream(boolean autoCloseStream) {_        this.autoCloseStream = autoCloseStream__    };whether,to,auto,close,the,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,and,the,option,stream,representation,is,enabled,then,you,may,want,to,auto,close,the,link,input,stream,from,the,streaming,response,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,auto,close,stream,boolean,auto,close,stream,this,auto,close,stream,auto,close,stream
RestletEndpoint -> public void setAutoCloseStream(boolean autoCloseStream);1506336987;Whether to auto close the stream representation as response from calling a REST service using the restlet producer._If the response is streaming and the option streamRepresentation is enabled then you may want to auto close_the {@link InputStream} from the streaming response to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setAutoCloseStream(boolean autoCloseStream) {_        this.autoCloseStream = autoCloseStream__    };whether,to,auto,close,the,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,and,the,option,stream,representation,is,enabled,then,you,may,want,to,auto,close,the,link,input,stream,from,the,streaming,response,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,auto,close,stream,boolean,auto,close,stream,this,auto,close,stream,auto,close,stream
RestletEndpoint -> public void setAutoCloseStream(boolean autoCloseStream);1520245176;Whether to auto close the stream representation as response from calling a REST service using the restlet producer._If the response is streaming and the option streamRepresentation is enabled then you may want to auto close_the {@link InputStream} from the streaming response to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setAutoCloseStream(boolean autoCloseStream) {_        this.autoCloseStream = autoCloseStream__    };whether,to,auto,close,the,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,and,the,option,stream,representation,is,enabled,then,you,may,want,to,auto,close,the,link,input,stream,from,the,streaming,response,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,auto,close,stream,boolean,auto,close,stream,this,auto,close,stream,auto,close,stream
RestletEndpoint -> public void setAutoCloseStream(boolean autoCloseStream);1540108158;Whether to auto close the stream representation as response from calling a REST service using the restlet producer._If the response is streaming and the option streamRepresentation is enabled then you may want to auto close_the {@link InputStream} from the streaming response to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setAutoCloseStream(boolean autoCloseStream) {_        this.autoCloseStream = autoCloseStream__    };whether,to,auto,close,the,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,and,the,option,stream,representation,is,enabled,then,you,may,want,to,auto,close,the,link,input,stream,from,the,streaming,response,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,auto,close,stream,boolean,auto,close,stream,this,auto,close,stream,auto,close,stream
RestletEndpoint -> public void setAutoCloseStream(boolean autoCloseStream);1540108163;Whether to auto close the stream representation as response from calling a REST service using the restlet producer._If the response is streaming and the option streamRepresentation is enabled then you may want to auto close_the {@link InputStream} from the streaming response to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setAutoCloseStream(boolean autoCloseStream) {_        this.autoCloseStream = autoCloseStream__    };whether,to,auto,close,the,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,and,the,option,stream,representation,is,enabled,then,you,may,want,to,auto,close,the,link,input,stream,from,the,streaming,response,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,auto,close,stream,boolean,auto,close,stream,this,auto,close,stream,auto,close,stream
RestletEndpoint -> public void setAutoCloseStream(boolean autoCloseStream);1545313144;Whether to auto close the stream representation as response from calling a REST service using the restlet producer._If the response is streaming and the option streamRepresentation is enabled then you may want to auto close_the {@link InputStream} from the streaming response to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setAutoCloseStream(boolean autoCloseStream) {_        this.autoCloseStream = autoCloseStream__    };whether,to,auto,close,the,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,and,the,option,stream,representation,is,enabled,then,you,may,want,to,auto,close,the,link,input,stream,from,the,streaming,response,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,auto,close,stream,boolean,auto,close,stream,this,auto,close,stream,auto,close,stream
RestletEndpoint -> public void setAutoCloseStream(boolean autoCloseStream);1547240981;Whether to auto close the stream representation as response from calling a REST service using the restlet producer._If the response is streaming and the option streamRepresentation is enabled then you may want to auto close_the {@link InputStream} from the streaming response to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setAutoCloseStream(boolean autoCloseStream) {_        this.autoCloseStream = autoCloseStream__    };whether,to,auto,close,the,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,and,the,option,stream,representation,is,enabled,then,you,may,want,to,auto,close,the,link,input,stream,from,the,streaming,response,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,auto,close,stream,boolean,auto,close,stream,this,auto,close,stream,auto,close,stream
RestletEndpoint -> public void setAutoCloseStream(boolean autoCloseStream);1547480087;Whether to auto close the stream representation as response from calling a REST service using the restlet producer._If the response is streaming and the option streamRepresentation is enabled then you may want to auto close_the {@link InputStream} from the streaming response to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setAutoCloseStream(boolean autoCloseStream) {_        this.autoCloseStream = autoCloseStream__    };whether,to,auto,close,the,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,and,the,option,stream,representation,is,enabled,then,you,may,want,to,auto,close,the,link,input,stream,from,the,streaming,response,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,auto,close,stream,boolean,auto,close,stream,this,auto,close,stream,auto,close,stream
RestletEndpoint -> public RestletBinding getRestletBinding();1230651400;@return the restletBinding;public RestletBinding getRestletBinding() {_        return restletBinding__    };return,the,restlet,binding;public,restlet,binding,get,restlet,binding,return,restlet,binding
RestletEndpoint -> public RestletBinding getRestletBinding();1230693478;@return the restletBinding;public RestletBinding getRestletBinding() {_        return restletBinding__    };return,the,restlet,binding;public,restlet,binding,get,restlet,binding,return,restlet,binding
RestletEndpoint -> public void setCookieHandler(CookieHandler cookieHandler);1476946116;Configure a cookie handler to maintain a HTTP session;public void setCookieHandler(CookieHandler cookieHandler) {_        this.cookieHandler = cookieHandler__    };configure,a,cookie,handler,to,maintain,a,http,session;public,void,set,cookie,handler,cookie,handler,cookie,handler,this,cookie,handler,cookie,handler
RestletEndpoint -> public void setCookieHandler(CookieHandler cookieHandler);1482332324;Configure a cookie handler to maintain a HTTP session;public void setCookieHandler(CookieHandler cookieHandler) {_        this.cookieHandler = cookieHandler__    };configure,a,cookie,handler,to,maintain,a,http,session;public,void,set,cookie,handler,cookie,handler,cookie,handler,this,cookie,handler,cookie,handler
RestletEndpoint -> public void setCookieHandler(CookieHandler cookieHandler);1485974480;Configure a cookie handler to maintain a HTTP session;public void setCookieHandler(CookieHandler cookieHandler) {_        this.cookieHandler = cookieHandler__    };configure,a,cookie,handler,to,maintain,a,http,session;public,void,set,cookie,handler,cookie,handler,cookie,handler,this,cookie,handler,cookie,handler
RestletEndpoint -> public void setCookieHandler(CookieHandler cookieHandler);1494752465;Configure a cookie handler to maintain a HTTP session;public void setCookieHandler(CookieHandler cookieHandler) {_        this.cookieHandler = cookieHandler__    };configure,a,cookie,handler,to,maintain,a,http,session;public,void,set,cookie,handler,cookie,handler,cookie,handler,this,cookie,handler,cookie,handler
RestletEndpoint -> public void setCookieHandler(CookieHandler cookieHandler);1495627904;Configure a cookie handler to maintain a HTTP session;public void setCookieHandler(CookieHandler cookieHandler) {_        this.cookieHandler = cookieHandler__    };configure,a,cookie,handler,to,maintain,a,http,session;public,void,set,cookie,handler,cookie,handler,cookie,handler,this,cookie,handler,cookie,handler
RestletEndpoint -> public void setCookieHandler(CookieHandler cookieHandler);1506336987;Configure a cookie handler to maintain a HTTP session;public void setCookieHandler(CookieHandler cookieHandler) {_        this.cookieHandler = cookieHandler__    };configure,a,cookie,handler,to,maintain,a,http,session;public,void,set,cookie,handler,cookie,handler,cookie,handler,this,cookie,handler,cookie,handler
RestletEndpoint -> public void setCookieHandler(CookieHandler cookieHandler);1520245176;Configure a cookie handler to maintain a HTTP session;public void setCookieHandler(CookieHandler cookieHandler) {_        this.cookieHandler = cookieHandler__    };configure,a,cookie,handler,to,maintain,a,http,session;public,void,set,cookie,handler,cookie,handler,cookie,handler,this,cookie,handler,cookie,handler
RestletEndpoint -> public void setCookieHandler(CookieHandler cookieHandler);1540108158;Configure a cookie handler to maintain a HTTP session;public void setCookieHandler(CookieHandler cookieHandler) {_        this.cookieHandler = cookieHandler__    };configure,a,cookie,handler,to,maintain,a,http,session;public,void,set,cookie,handler,cookie,handler,cookie,handler,this,cookie,handler,cookie,handler
RestletEndpoint -> public void setCookieHandler(CookieHandler cookieHandler);1540108163;Configure a cookie handler to maintain a HTTP session;public void setCookieHandler(CookieHandler cookieHandler) {_        this.cookieHandler = cookieHandler__    };configure,a,cookie,handler,to,maintain,a,http,session;public,void,set,cookie,handler,cookie,handler,cookie,handler,this,cookie,handler,cookie,handler
RestletEndpoint -> public void setCookieHandler(CookieHandler cookieHandler);1545313144;Configure a cookie handler to maintain a HTTP session;public void setCookieHandler(CookieHandler cookieHandler) {_        this.cookieHandler = cookieHandler__    };configure,a,cookie,handler,to,maintain,a,http,session;public,void,set,cookie,handler,cookie,handler,cookie,handler,this,cookie,handler,cookie,handler
RestletEndpoint -> public void setCookieHandler(CookieHandler cookieHandler);1547240981;Configure a cookie handler to maintain a HTTP session;public void setCookieHandler(CookieHandler cookieHandler) {_        this.cookieHandler = cookieHandler__    };configure,a,cookie,handler,to,maintain,a,http,session;public,void,set,cookie,handler,cookie,handler,cookie,handler,this,cookie,handler,cookie,handler
RestletEndpoint -> public void setCookieHandler(CookieHandler cookieHandler);1547480087;Configure a cookie handler to maintain a HTTP session;public void setCookieHandler(CookieHandler cookieHandler) {_        this.cookieHandler = cookieHandler__    };configure,a,cookie,handler,to,maintain,a,http,session;public,void,set,cookie,handler,cookie,handler,cookie,handler,this,cookie,handler,cookie,handler
RestletEndpoint -> public String getProtocol();1230651400;@return the protocol;public String getProtocol() {_        return protocol__    };return,the,protocol;public,string,get,protocol,return,protocol
RestletEndpoint -> public String getProtocol();1230693478;@return the protocol;public String getProtocol() {_        return protocol__    };return,the,protocol;public,string,get,protocol,return,protocol
RestletEndpoint -> public int getPort();1230651400;@return the port;public int getPort() {_        return port__    };return,the,port;public,int,get,port,return,port
RestletEndpoint -> public int getPort();1230693478;@return the port;public int getPort() {_        return port__    };return,the,port;public,int,get,port,return,port
RestletEndpoint -> public String getUriPattern();1230651400;@return the uriPattern;public String getUriPattern() {_        return uriPattern__    };return,the,uri,pattern;public,string,get,uri,pattern,return,uri,pattern
RestletEndpoint -> public String getUriPattern();1230693478;@return the uriPattern;public String getUriPattern() {_        return uriPattern__    };return,the,uri,pattern;public,string,get,uri,pattern,return,uri,pattern
RestletEndpoint -> public void setRestletRealm(Map<String, String> restletRealm);1431337048;To configure the security realms of restlet as a map.;public void setRestletRealm(Map<String, String> restletRealm) {_        this.restletRealm = restletRealm__    };to,configure,the,security,realms,of,restlet,as,a,map;public,void,set,restlet,realm,map,string,string,restlet,realm,this,restlet,realm,restlet,realm
RestletEndpoint -> public void setRestletRealm(Map<String, String> restletRealm);1434198513;To configure the security realms of restlet as a map.;public void setRestletRealm(Map<String, String> restletRealm) {_        this.restletRealm = restletRealm__    };to,configure,the,security,realms,of,restlet,as,a,map;public,void,set,restlet,realm,map,string,string,restlet,realm,this,restlet,realm,restlet,realm
RestletEndpoint -> public void setRestletRealm(Map<String, String> restletRealm);1451237128;To configure the security realms of restlet as a map.;public void setRestletRealm(Map<String, String> restletRealm) {_        this.restletRealm = restletRealm__    };to,configure,the,security,realms,of,restlet,as,a,map;public,void,set,restlet,realm,map,string,string,restlet,realm,this,restlet,realm,restlet,realm
RestletEndpoint -> public void setRestletRealm(Map<String, String> restletRealm);1451302108;To configure the security realms of restlet as a map.;public void setRestletRealm(Map<String, String> restletRealm) {_        this.restletRealm = restletRealm__    };to,configure,the,security,realms,of,restlet,as,a,map;public,void,set,restlet,realm,map,string,string,restlet,realm,this,restlet,realm,restlet,realm
RestletEndpoint -> public void setRestletRealm(Map<String, String> restletRealm);1451939116;To configure the security realms of restlet as a map.;public void setRestletRealm(Map<String, String> restletRealm) {_        this.restletRealm = restletRealm__    };to,configure,the,security,realms,of,restlet,as,a,map;public,void,set,restlet,realm,map,string,string,restlet,realm,this,restlet,realm,restlet,realm
RestletEndpoint -> public void setRestletRealm(Map<String, String> restletRealm);1452076588;To configure the security realms of restlet as a map.;public void setRestletRealm(Map<String, String> restletRealm) {_        this.restletRealm = restletRealm__    };to,configure,the,security,realms,of,restlet,as,a,map;public,void,set,restlet,realm,map,string,string,restlet,realm,this,restlet,realm,restlet,realm
RestletEndpoint -> public void setRestletRealm(Map<String, String> restletRealm);1452194208;To configure the security realms of restlet as a map.;public void setRestletRealm(Map<String, String> restletRealm) {_        this.restletRealm = restletRealm__    };to,configure,the,security,realms,of,restlet,as,a,map;public,void,set,restlet,realm,map,string,string,restlet,realm,this,restlet,realm,restlet,realm
RestletEndpoint -> public void setRestletRealm(Map<String, String> restletRealm);1460115881;To configure the security realms of restlet as a map.;public void setRestletRealm(Map<String, String> restletRealm) {_        this.restletRealm = restletRealm__    };to,configure,the,security,realms,of,restlet,as,a,map;public,void,set,restlet,realm,map,string,string,restlet,realm,this,restlet,realm,restlet,realm
RestletEndpoint -> public void setRestletRealm(Map<String, String> restletRealm);1460966546;To configure the security realms of restlet as a map.;public void setRestletRealm(Map<String, String> restletRealm) {_        this.restletRealm = restletRealm__    };to,configure,the,security,realms,of,restlet,as,a,map;public,void,set,restlet,realm,map,string,string,restlet,realm,this,restlet,realm,restlet,realm
RestletEndpoint -> public void setRestletRealm(Map<String, String> restletRealm);1463151573;To configure the security realms of restlet as a map.;public void setRestletRealm(Map<String, String> restletRealm) {_        this.restletRealm = restletRealm__    };to,configure,the,security,realms,of,restlet,as,a,map;public,void,set,restlet,realm,map,string,string,restlet,realm,this,restlet,realm,restlet,realm
RestletEndpoint -> public void setRestletRealm(Map<String, String> restletRealm);1476946116;To configure the security realms of restlet as a map.;public void setRestletRealm(Map<String, String> restletRealm) {_        this.restletRealm = restletRealm__    };to,configure,the,security,realms,of,restlet,as,a,map;public,void,set,restlet,realm,map,string,string,restlet,realm,this,restlet,realm,restlet,realm
RestletEndpoint -> public void setRestletRealm(Map<String, String> restletRealm);1482332324;To configure the security realms of restlet as a map.;public void setRestletRealm(Map<String, String> restletRealm) {_        this.restletRealm = restletRealm__    };to,configure,the,security,realms,of,restlet,as,a,map;public,void,set,restlet,realm,map,string,string,restlet,realm,this,restlet,realm,restlet,realm
RestletEndpoint -> public void setRestletRealm(Map<String, String> restletRealm);1485974480;To configure the security realms of restlet as a map.;public void setRestletRealm(Map<String, String> restletRealm) {_        this.restletRealm = restletRealm__    };to,configure,the,security,realms,of,restlet,as,a,map;public,void,set,restlet,realm,map,string,string,restlet,realm,this,restlet,realm,restlet,realm
RestletEndpoint -> public void setRestletRealm(Map<String, String> restletRealm);1494752465;To configure the security realms of restlet as a map.;public void setRestletRealm(Map<String, String> restletRealm) {_        this.restletRealm = restletRealm__    };to,configure,the,security,realms,of,restlet,as,a,map;public,void,set,restlet,realm,map,string,string,restlet,realm,this,restlet,realm,restlet,realm
RestletEndpoint -> public void setRestletRealm(Map<String, String> restletRealm);1495627904;To configure the security realms of restlet as a map.;public void setRestletRealm(Map<String, String> restletRealm) {_        this.restletRealm = restletRealm__    };to,configure,the,security,realms,of,restlet,as,a,map;public,void,set,restlet,realm,map,string,string,restlet,realm,this,restlet,realm,restlet,realm
RestletEndpoint -> public void setRestletRealm(Map<String, String> restletRealm);1506336987;To configure the security realms of restlet as a map.;public void setRestletRealm(Map<String, String> restletRealm) {_        this.restletRealm = restletRealm__    };to,configure,the,security,realms,of,restlet,as,a,map;public,void,set,restlet,realm,map,string,string,restlet,realm,this,restlet,realm,restlet,realm
RestletEndpoint -> public void setRestletRealm(Map<String, String> restletRealm);1520245176;To configure the security realms of restlet as a map.;public void setRestletRealm(Map<String, String> restletRealm) {_        this.restletRealm = restletRealm__    };to,configure,the,security,realms,of,restlet,as,a,map;public,void,set,restlet,realm,map,string,string,restlet,realm,this,restlet,realm,restlet,realm
RestletEndpoint -> public void setRestletRealm(Map<String, String> restletRealm);1540108158;To configure the security realms of restlet as a map.;public void setRestletRealm(Map<String, String> restletRealm) {_        this.restletRealm = restletRealm__    };to,configure,the,security,realms,of,restlet,as,a,map;public,void,set,restlet,realm,map,string,string,restlet,realm,this,restlet,realm,restlet,realm
RestletEndpoint -> public void setRestletRealm(Map<String, String> restletRealm);1540108163;To configure the security realms of restlet as a map.;public void setRestletRealm(Map<String, String> restletRealm) {_        this.restletRealm = restletRealm__    };to,configure,the,security,realms,of,restlet,as,a,map;public,void,set,restlet,realm,map,string,string,restlet,realm,this,restlet,realm,restlet,realm
RestletEndpoint -> public void setRestletRealm(Map<String, String> restletRealm);1545313144;To configure the security realms of restlet as a map.;public void setRestletRealm(Map<String, String> restletRealm) {_        this.restletRealm = restletRealm__    };to,configure,the,security,realms,of,restlet,as,a,map;public,void,set,restlet,realm,map,string,string,restlet,realm,this,restlet,realm,restlet,realm
RestletEndpoint -> public void setRestletRealm(Map<String, String> restletRealm);1547240981;To configure the security realms of restlet as a map.;public void setRestletRealm(Map<String, String> restletRealm) {_        this.restletRealm = restletRealm__    };to,configure,the,security,realms,of,restlet,as,a,map;public,void,set,restlet,realm,map,string,string,restlet,realm,this,restlet,realm,restlet,realm
RestletEndpoint -> public void setRestletRealm(Map<String, String> restletRealm);1547480087;To configure the security realms of restlet as a map.;public void setRestletRealm(Map<String, String> restletRealm) {_        this.restletRealm = restletRealm__    };to,configure,the,security,realms,of,restlet,as,a,map;public,void,set,restlet,realm,map,string,string,restlet,realm,this,restlet,realm,restlet,realm
RestletEndpoint -> public void setRestletBinding(RestletBinding restletBinding);1431337048;To use a custom RestletBinding to bind between Restlet and Camel message.;public void setRestletBinding(RestletBinding restletBinding) {_        this.restletBinding = restletBinding__    };to,use,a,custom,restlet,binding,to,bind,between,restlet,and,camel,message;public,void,set,restlet,binding,restlet,binding,restlet,binding,this,restlet,binding,restlet,binding
RestletEndpoint -> public void setRestletBinding(RestletBinding restletBinding);1434198513;To use a custom RestletBinding to bind between Restlet and Camel message.;public void setRestletBinding(RestletBinding restletBinding) {_        this.restletBinding = restletBinding__    };to,use,a,custom,restlet,binding,to,bind,between,restlet,and,camel,message;public,void,set,restlet,binding,restlet,binding,restlet,binding,this,restlet,binding,restlet,binding
RestletEndpoint -> public void setRestletBinding(RestletBinding restletBinding);1451237128;To use a custom RestletBinding to bind between Restlet and Camel message.;public void setRestletBinding(RestletBinding restletBinding) {_        this.restletBinding = restletBinding__    };to,use,a,custom,restlet,binding,to,bind,between,restlet,and,camel,message;public,void,set,restlet,binding,restlet,binding,restlet,binding,this,restlet,binding,restlet,binding
RestletEndpoint -> public void setRestletBinding(RestletBinding restletBinding);1451302108;To use a custom RestletBinding to bind between Restlet and Camel message.;public void setRestletBinding(RestletBinding restletBinding) {_        this.restletBinding = restletBinding__    };to,use,a,custom,restlet,binding,to,bind,between,restlet,and,camel,message;public,void,set,restlet,binding,restlet,binding,restlet,binding,this,restlet,binding,restlet,binding
RestletEndpoint -> public void setRestletBinding(RestletBinding restletBinding);1451939116;To use a custom RestletBinding to bind between Restlet and Camel message.;public void setRestletBinding(RestletBinding restletBinding) {_        this.restletBinding = restletBinding__    };to,use,a,custom,restlet,binding,to,bind,between,restlet,and,camel,message;public,void,set,restlet,binding,restlet,binding,restlet,binding,this,restlet,binding,restlet,binding
RestletEndpoint -> public void setRestletBinding(RestletBinding restletBinding);1452076588;To use a custom RestletBinding to bind between Restlet and Camel message.;public void setRestletBinding(RestletBinding restletBinding) {_        this.restletBinding = restletBinding__    };to,use,a,custom,restlet,binding,to,bind,between,restlet,and,camel,message;public,void,set,restlet,binding,restlet,binding,restlet,binding,this,restlet,binding,restlet,binding
RestletEndpoint -> public void setRestletBinding(RestletBinding restletBinding);1452194208;To use a custom RestletBinding to bind between Restlet and Camel message.;public void setRestletBinding(RestletBinding restletBinding) {_        this.restletBinding = restletBinding__    };to,use,a,custom,restlet,binding,to,bind,between,restlet,and,camel,message;public,void,set,restlet,binding,restlet,binding,restlet,binding,this,restlet,binding,restlet,binding
RestletEndpoint -> public void setRestletBinding(RestletBinding restletBinding);1460115881;To use a custom RestletBinding to bind between Restlet and Camel message.;public void setRestletBinding(RestletBinding restletBinding) {_        this.restletBinding = restletBinding__    };to,use,a,custom,restlet,binding,to,bind,between,restlet,and,camel,message;public,void,set,restlet,binding,restlet,binding,restlet,binding,this,restlet,binding,restlet,binding
RestletEndpoint -> public void setRestletBinding(RestletBinding restletBinding);1460966546;To use a custom RestletBinding to bind between Restlet and Camel message.;public void setRestletBinding(RestletBinding restletBinding) {_        this.restletBinding = restletBinding__    };to,use,a,custom,restlet,binding,to,bind,between,restlet,and,camel,message;public,void,set,restlet,binding,restlet,binding,restlet,binding,this,restlet,binding,restlet,binding
RestletEndpoint -> public void setRestletBinding(RestletBinding restletBinding);1463151573;To use a custom RestletBinding to bind between Restlet and Camel message.;public void setRestletBinding(RestletBinding restletBinding) {_        this.restletBinding = restletBinding__    };to,use,a,custom,restlet,binding,to,bind,between,restlet,and,camel,message;public,void,set,restlet,binding,restlet,binding,restlet,binding,this,restlet,binding,restlet,binding
RestletEndpoint -> public void setRestletBinding(RestletBinding restletBinding);1476946116;To use a custom RestletBinding to bind between Restlet and Camel message.;public void setRestletBinding(RestletBinding restletBinding) {_        this.restletBinding = restletBinding__    };to,use,a,custom,restlet,binding,to,bind,between,restlet,and,camel,message;public,void,set,restlet,binding,restlet,binding,restlet,binding,this,restlet,binding,restlet,binding
RestletEndpoint -> public void setRestletBinding(RestletBinding restletBinding);1482332324;To use a custom RestletBinding to bind between Restlet and Camel message.;public void setRestletBinding(RestletBinding restletBinding) {_        this.restletBinding = restletBinding__    };to,use,a,custom,restlet,binding,to,bind,between,restlet,and,camel,message;public,void,set,restlet,binding,restlet,binding,restlet,binding,this,restlet,binding,restlet,binding
RestletEndpoint -> public void setRestletBinding(RestletBinding restletBinding);1485974480;To use a custom RestletBinding to bind between Restlet and Camel message.;public void setRestletBinding(RestletBinding restletBinding) {_        this.restletBinding = restletBinding__    };to,use,a,custom,restlet,binding,to,bind,between,restlet,and,camel,message;public,void,set,restlet,binding,restlet,binding,restlet,binding,this,restlet,binding,restlet,binding
RestletEndpoint -> public void setRestletBinding(RestletBinding restletBinding);1494752465;To use a custom RestletBinding to bind between Restlet and Camel message.;public void setRestletBinding(RestletBinding restletBinding) {_        this.restletBinding = restletBinding__    };to,use,a,custom,restlet,binding,to,bind,between,restlet,and,camel,message;public,void,set,restlet,binding,restlet,binding,restlet,binding,this,restlet,binding,restlet,binding
RestletEndpoint -> public void setRestletBinding(RestletBinding restletBinding);1495627904;To use a custom RestletBinding to bind between Restlet and Camel message.;public void setRestletBinding(RestletBinding restletBinding) {_        this.restletBinding = restletBinding__    };to,use,a,custom,restlet,binding,to,bind,between,restlet,and,camel,message;public,void,set,restlet,binding,restlet,binding,restlet,binding,this,restlet,binding,restlet,binding
RestletEndpoint -> public void setRestletBinding(RestletBinding restletBinding);1506336987;To use a custom RestletBinding to bind between Restlet and Camel message.;public void setRestletBinding(RestletBinding restletBinding) {_        this.restletBinding = restletBinding__    };to,use,a,custom,restlet,binding,to,bind,between,restlet,and,camel,message;public,void,set,restlet,binding,restlet,binding,restlet,binding,this,restlet,binding,restlet,binding
RestletEndpoint -> public void setRestletBinding(RestletBinding restletBinding);1520245176;To use a custom RestletBinding to bind between Restlet and Camel message.;public void setRestletBinding(RestletBinding restletBinding) {_        this.restletBinding = restletBinding__    };to,use,a,custom,restlet,binding,to,bind,between,restlet,and,camel,message;public,void,set,restlet,binding,restlet,binding,restlet,binding,this,restlet,binding,restlet,binding
RestletEndpoint -> public void setRestletBinding(RestletBinding restletBinding);1540108158;To use a custom RestletBinding to bind between Restlet and Camel message.;public void setRestletBinding(RestletBinding restletBinding) {_        this.restletBinding = restletBinding__    };to,use,a,custom,restlet,binding,to,bind,between,restlet,and,camel,message;public,void,set,restlet,binding,restlet,binding,restlet,binding,this,restlet,binding,restlet,binding
RestletEndpoint -> public void setRestletBinding(RestletBinding restletBinding);1540108163;To use a custom RestletBinding to bind between Restlet and Camel message.;public void setRestletBinding(RestletBinding restletBinding) {_        this.restletBinding = restletBinding__    };to,use,a,custom,restlet,binding,to,bind,between,restlet,and,camel,message;public,void,set,restlet,binding,restlet,binding,restlet,binding,this,restlet,binding,restlet,binding
RestletEndpoint -> public void setRestletBinding(RestletBinding restletBinding);1545313144;To use a custom RestletBinding to bind between Restlet and Camel message.;public void setRestletBinding(RestletBinding restletBinding) {_        this.restletBinding = restletBinding__    };to,use,a,custom,restlet,binding,to,bind,between,restlet,and,camel,message;public,void,set,restlet,binding,restlet,binding,restlet,binding,this,restlet,binding,restlet,binding
RestletEndpoint -> public void setRestletBinding(RestletBinding restletBinding);1547240981;To use a custom RestletBinding to bind between Restlet and Camel message.;public void setRestletBinding(RestletBinding restletBinding) {_        this.restletBinding = restletBinding__    };to,use,a,custom,restlet,binding,to,bind,between,restlet,and,camel,message;public,void,set,restlet,binding,restlet,binding,restlet,binding,this,restlet,binding,restlet,binding
RestletEndpoint -> public void setRestletBinding(RestletBinding restletBinding);1547480087;To use a custom RestletBinding to bind between Restlet and Camel message.;public void setRestletBinding(RestletBinding restletBinding) {_        this.restletBinding = restletBinding__    };to,use,a,custom,restlet,binding,to,bind,between,restlet,and,camel,message;public,void,set,restlet,binding,restlet,binding,restlet,binding,this,restlet,binding,restlet,binding
RestletEndpoint -> public Method[] getRestletMethods();1244953688;@return the restletMethods;public Method[] getRestletMethods() {_        return restletMethods__    };return,the,restlet,methods;public,method,get,restlet,methods,return,restlet,methods
RestletEndpoint -> public Method[] getRestletMethods();1244989524;@return the restletMethods;public Method[] getRestletMethods() {_        return restletMethods__    };return,the,restlet,methods;public,method,get,restlet,methods,return,restlet,methods
RestletEndpoint -> public Method[] getRestletMethods();1248967091;@return the restletMethods;public Method[] getRestletMethods() {_        return restletMethods__    };return,the,restlet,methods;public,method,get,restlet,methods,return,restlet,methods
RestletEndpoint -> public void setProtocol(String protocol);1431337048;The protocol to use which is http or https;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,protocol,to,use,which,is,http,or,https;public,void,set,protocol,string,protocol,this,protocol,protocol
RestletEndpoint -> public void setProtocol(String protocol);1434198513;The protocol to use which is http or https;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,protocol,to,use,which,is,http,or,https;public,void,set,protocol,string,protocol,this,protocol,protocol
RestletEndpoint -> public void setProtocol(String protocol);1451237128;The protocol to use which is http or https;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,protocol,to,use,which,is,http,or,https;public,void,set,protocol,string,protocol,this,protocol,protocol
RestletEndpoint -> public void setProtocol(String protocol);1451302108;The protocol to use which is http or https;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,protocol,to,use,which,is,http,or,https;public,void,set,protocol,string,protocol,this,protocol,protocol
RestletEndpoint -> public void setProtocol(String protocol);1451939116;The protocol to use which is http or https;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,protocol,to,use,which,is,http,or,https;public,void,set,protocol,string,protocol,this,protocol,protocol
RestletEndpoint -> public void setProtocol(String protocol);1452076588;The protocol to use which is http or https;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,protocol,to,use,which,is,http,or,https;public,void,set,protocol,string,protocol,this,protocol,protocol
RestletEndpoint -> public void setProtocol(String protocol);1452194208;The protocol to use which is http or https;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,protocol,to,use,which,is,http,or,https;public,void,set,protocol,string,protocol,this,protocol,protocol
RestletEndpoint -> public void setProtocol(String protocol);1460115881;The protocol to use which is http or https;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,protocol,to,use,which,is,http,or,https;public,void,set,protocol,string,protocol,this,protocol,protocol
RestletEndpoint -> public void setProtocol(String protocol);1460966546;The protocol to use which is http or https;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,protocol,to,use,which,is,http,or,https;public,void,set,protocol,string,protocol,this,protocol,protocol
RestletEndpoint -> public void setProtocol(String protocol);1463151573;The protocol to use which is http or https;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,protocol,to,use,which,is,http,or,https;public,void,set,protocol,string,protocol,this,protocol,protocol
RestletEndpoint -> public void setProtocol(String protocol);1476946116;The protocol to use which is http or https;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,protocol,to,use,which,is,http,or,https;public,void,set,protocol,string,protocol,this,protocol,protocol
RestletEndpoint -> public void setProtocol(String protocol);1482332324;The protocol to use which is http or https;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,protocol,to,use,which,is,http,or,https;public,void,set,protocol,string,protocol,this,protocol,protocol
RestletEndpoint -> public void setProtocol(String protocol);1485974480;The protocol to use which is http or https;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,protocol,to,use,which,is,http,or,https;public,void,set,protocol,string,protocol,this,protocol,protocol
RestletEndpoint -> public void setProtocol(String protocol);1494752465;The protocol to use which is http or https;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,protocol,to,use,which,is,http,or,https;public,void,set,protocol,string,protocol,this,protocol,protocol
RestletEndpoint -> public void setProtocol(String protocol);1495627904;The protocol to use which is http or https;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,protocol,to,use,which,is,http,or,https;public,void,set,protocol,string,protocol,this,protocol,protocol
RestletEndpoint -> public void setProtocol(String protocol);1506336987;The protocol to use which is http or https;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,protocol,to,use,which,is,http,or,https;public,void,set,protocol,string,protocol,this,protocol,protocol
RestletEndpoint -> public void setProtocol(String protocol);1520245176;The protocol to use which is http or https;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,protocol,to,use,which,is,http,or,https;public,void,set,protocol,string,protocol,this,protocol,protocol
RestletEndpoint -> public void setProtocol(String protocol);1540108158;The protocol to use which is http or https;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,protocol,to,use,which,is,http,or,https;public,void,set,protocol,string,protocol,this,protocol,protocol
RestletEndpoint -> public void setProtocol(String protocol);1540108163;The protocol to use which is http or https;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,protocol,to,use,which,is,http,or,https;public,void,set,protocol,string,protocol,this,protocol,protocol
RestletEndpoint -> public void setProtocol(String protocol);1545313144;The protocol to use which is http or https;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,protocol,to,use,which,is,http,or,https;public,void,set,protocol,string,protocol,this,protocol,protocol
RestletEndpoint -> public void setProtocol(String protocol);1547240981;The protocol to use which is http or https;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,protocol,to,use,which,is,http,or,https;public,void,set,protocol,string,protocol,this,protocol,protocol
RestletEndpoint -> public void setProtocol(String protocol);1547480087;The protocol to use which is http or https;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,protocol,to,use,which,is,http,or,https;public,void,set,protocol,string,protocol,this,protocol,protocol
RestletEndpoint -> public void connect(RestletConsumer restletConsumer) throws Exception;1230651400;@param restletConsumer;public void connect(RestletConsumer restletConsumer) throws Exception {_        ((RestletComponent)getComponent()).connect(restletConsumer)__    };param,restlet,consumer;public,void,connect,restlet,consumer,restlet,consumer,throws,exception,restlet,component,get,component,connect,restlet,consumer
RestletEndpoint -> public void connect(RestletConsumer restletConsumer) throws Exception;1230693478;@param restletConsumer;public void connect(RestletConsumer restletConsumer) throws Exception {_        ((RestletComponent)getComponent()).connect(restletConsumer)__    };param,restlet,consumer;public,void,connect,restlet,consumer,restlet,consumer,throws,exception,restlet,component,get,component,connect,restlet,consumer
RestletEndpoint -> public void setPort(int port);1431337048;The port number of the restlet service;public void setPort(int port) {_        this.port = port__    };the,port,number,of,the,restlet,service;public,void,set,port,int,port,this,port,port
RestletEndpoint -> public void setPort(int port);1434198513;The port number of the restlet service;public void setPort(int port) {_        this.port = port__    };the,port,number,of,the,restlet,service;public,void,set,port,int,port,this,port,port
RestletEndpoint -> public void setPort(int port);1451237128;The port number of the restlet service;public void setPort(int port) {_        this.port = port__    };the,port,number,of,the,restlet,service;public,void,set,port,int,port,this,port,port
RestletEndpoint -> public void setPort(int port);1451302108;The port number of the restlet service;public void setPort(int port) {_        this.port = port__    };the,port,number,of,the,restlet,service;public,void,set,port,int,port,this,port,port
RestletEndpoint -> public void setPort(int port);1451939116;The port number of the restlet service;public void setPort(int port) {_        this.port = port__    };the,port,number,of,the,restlet,service;public,void,set,port,int,port,this,port,port
RestletEndpoint -> public void setPort(int port);1452076588;The port number of the restlet service;public void setPort(int port) {_        this.port = port__    };the,port,number,of,the,restlet,service;public,void,set,port,int,port,this,port,port
RestletEndpoint -> public void setPort(int port);1452194208;The port number of the restlet service;public void setPort(int port) {_        this.port = port__    };the,port,number,of,the,restlet,service;public,void,set,port,int,port,this,port,port
RestletEndpoint -> public void setPort(int port);1460115881;The port number of the restlet service;public void setPort(int port) {_        this.port = port__    };the,port,number,of,the,restlet,service;public,void,set,port,int,port,this,port,port
RestletEndpoint -> public void setPort(int port);1460966546;The port number of the restlet service;public void setPort(int port) {_        this.port = port__    };the,port,number,of,the,restlet,service;public,void,set,port,int,port,this,port,port
RestletEndpoint -> public void setPort(int port);1463151573;The port number of the restlet service;public void setPort(int port) {_        this.port = port__    };the,port,number,of,the,restlet,service;public,void,set,port,int,port,this,port,port
RestletEndpoint -> public void setPort(int port);1476946116;The port number of the restlet service;public void setPort(int port) {_        this.port = port__    };the,port,number,of,the,restlet,service;public,void,set,port,int,port,this,port,port
RestletEndpoint -> public void setPort(int port);1482332324;The port number of the restlet service;public void setPort(int port) {_        this.port = port__    };the,port,number,of,the,restlet,service;public,void,set,port,int,port,this,port,port
RestletEndpoint -> public void setPort(int port);1485974480;The port number of the restlet service;public void setPort(int port) {_        this.port = port__    };the,port,number,of,the,restlet,service;public,void,set,port,int,port,this,port,port
RestletEndpoint -> public void setPort(int port);1494752465;The port number of the restlet service;public void setPort(int port) {_        this.port = port__    };the,port,number,of,the,restlet,service;public,void,set,port,int,port,this,port,port
RestletEndpoint -> public void setPort(int port);1495627904;The port number of the restlet service;public void setPort(int port) {_        this.port = port__    };the,port,number,of,the,restlet,service;public,void,set,port,int,port,this,port,port
RestletEndpoint -> public void setPort(int port);1506336987;The port number of the restlet service;public void setPort(int port) {_        this.port = port__    };the,port,number,of,the,restlet,service;public,void,set,port,int,port,this,port,port
RestletEndpoint -> public void setPort(int port);1520245176;The port number of the restlet service;public void setPort(int port) {_        this.port = port__    };the,port,number,of,the,restlet,service;public,void,set,port,int,port,this,port,port
RestletEndpoint -> public void setPort(int port);1540108158;The port number of the restlet service;public void setPort(int port) {_        this.port = port__    };the,port,number,of,the,restlet,service;public,void,set,port,int,port,this,port,port
RestletEndpoint -> public void setPort(int port);1540108163;The port number of the restlet service;public void setPort(int port) {_        this.port = port__    };the,port,number,of,the,restlet,service;public,void,set,port,int,port,this,port,port
RestletEndpoint -> public void setPort(int port);1545313144;The port number of the restlet service;public void setPort(int port) {_        this.port = port__    };the,port,number,of,the,restlet,service;public,void,set,port,int,port,this,port,port
RestletEndpoint -> public void setPort(int port);1547240981;The port number of the restlet service;public void setPort(int port) {_        this.port = port__    };the,port,number,of,the,restlet,service;public,void,set,port,int,port,this,port,port
RestletEndpoint -> public void setPort(int port);1547480087;The port number of the restlet service;public void setPort(int port) {_        this.port = port__    };the,port,number,of,the,restlet,service;public,void,set,port,int,port,this,port,port
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1244953688;@param restletMethods the restletMethods to set;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };param,restlet,methods,the,restlet,methods,to,set;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1244989524;@param restletMethods the restletMethods to set;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };param,restlet,methods,the,restlet,methods,to,set;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1248967091;@param restletMethods the restletMethods to set;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };param,restlet,methods,the,restlet,methods,to,set;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1431337048;Specify one or more methods separated by commas (e.g. restletMethods=post,put) to be serviced by a restlet consumer endpoint._If both restletMethod and restletMethods options are specified, the restletMethod setting is ignored.;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };specify,one,or,more,methods,separated,by,commas,e,g,restlet,methods,post,put,to,be,serviced,by,a,restlet,consumer,endpoint,if,both,restlet,method,and,restlet,methods,options,are,specified,the,restlet,method,setting,is,ignored;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1434198513;Specify one or more methods separated by commas (e.g. restletMethods=post,put) to be serviced by a restlet consumer endpoint._If both restletMethod and restletMethods options are specified, the restletMethod setting is ignored.;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };specify,one,or,more,methods,separated,by,commas,e,g,restlet,methods,post,put,to,be,serviced,by,a,restlet,consumer,endpoint,if,both,restlet,method,and,restlet,methods,options,are,specified,the,restlet,method,setting,is,ignored;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1451237128;Specify one or more methods separated by commas (e.g. restletMethods=post,put) to be serviced by a restlet consumer endpoint._If both restletMethod and restletMethods options are specified, the restletMethod setting is ignored.;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };specify,one,or,more,methods,separated,by,commas,e,g,restlet,methods,post,put,to,be,serviced,by,a,restlet,consumer,endpoint,if,both,restlet,method,and,restlet,methods,options,are,specified,the,restlet,method,setting,is,ignored;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1451302108;Specify one or more methods separated by commas (e.g. restletMethods=post,put) to be serviced by a restlet consumer endpoint._If both restletMethod and restletMethods options are specified, the restletMethod setting is ignored.;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };specify,one,or,more,methods,separated,by,commas,e,g,restlet,methods,post,put,to,be,serviced,by,a,restlet,consumer,endpoint,if,both,restlet,method,and,restlet,methods,options,are,specified,the,restlet,method,setting,is,ignored;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1451939116;Specify one or more methods separated by commas (e.g. restletMethods=post,put) to be serviced by a restlet consumer endpoint._If both restletMethod and restletMethods options are specified, the restletMethod setting is ignored.;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };specify,one,or,more,methods,separated,by,commas,e,g,restlet,methods,post,put,to,be,serviced,by,a,restlet,consumer,endpoint,if,both,restlet,method,and,restlet,methods,options,are,specified,the,restlet,method,setting,is,ignored;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1452076588;Specify one or more methods separated by commas (e.g. restletMethods=post,put) to be serviced by a restlet consumer endpoint._If both restletMethod and restletMethods options are specified, the restletMethod setting is ignored._The possible methods are: ALL,CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };specify,one,or,more,methods,separated,by,commas,e,g,restlet,methods,post,put,to,be,serviced,by,a,restlet,consumer,endpoint,if,both,restlet,method,and,restlet,methods,options,are,specified,the,restlet,method,setting,is,ignored,the,possible,methods,are,all,connect,delete,get,head,options,patch,post,put,trace;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1452194208;Specify one or more methods separated by commas (e.g. restletMethods=post,put) to be serviced by a restlet consumer endpoint._If both restletMethod and restletMethods options are specified, the restletMethod setting is ignored._The possible methods are: ALL,CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };specify,one,or,more,methods,separated,by,commas,e,g,restlet,methods,post,put,to,be,serviced,by,a,restlet,consumer,endpoint,if,both,restlet,method,and,restlet,methods,options,are,specified,the,restlet,method,setting,is,ignored,the,possible,methods,are,all,connect,delete,get,head,options,patch,post,put,trace;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1460115881;Specify one or more methods separated by commas (e.g. restletMethods=post,put) to be serviced by a restlet consumer endpoint._If both restletMethod and restletMethods options are specified, the restletMethod setting is ignored._The possible methods are: ALL,CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };specify,one,or,more,methods,separated,by,commas,e,g,restlet,methods,post,put,to,be,serviced,by,a,restlet,consumer,endpoint,if,both,restlet,method,and,restlet,methods,options,are,specified,the,restlet,method,setting,is,ignored,the,possible,methods,are,all,connect,delete,get,head,options,patch,post,put,trace;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1460966546;Specify one or more methods separated by commas (e.g. restletMethods=post,put) to be serviced by a restlet consumer endpoint._If both restletMethod and restletMethods options are specified, the restletMethod setting is ignored._The possible methods are: ALL,CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };specify,one,or,more,methods,separated,by,commas,e,g,restlet,methods,post,put,to,be,serviced,by,a,restlet,consumer,endpoint,if,both,restlet,method,and,restlet,methods,options,are,specified,the,restlet,method,setting,is,ignored,the,possible,methods,are,all,connect,delete,get,head,options,patch,post,put,trace;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1463151573;Specify one or more methods separated by commas (e.g. restletMethods=post,put) to be serviced by a restlet consumer endpoint._If both restletMethod and restletMethods options are specified, the restletMethod setting is ignored._The possible methods are: ALL,CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };specify,one,or,more,methods,separated,by,commas,e,g,restlet,methods,post,put,to,be,serviced,by,a,restlet,consumer,endpoint,if,both,restlet,method,and,restlet,methods,options,are,specified,the,restlet,method,setting,is,ignored,the,possible,methods,are,all,connect,delete,get,head,options,patch,post,put,trace;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1476946116;Specify one or more methods separated by commas (e.g. restletMethods=post,put) to be serviced by a restlet consumer endpoint._If both restletMethod and restletMethods options are specified, the restletMethod setting is ignored._The possible methods are: ALL,CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };specify,one,or,more,methods,separated,by,commas,e,g,restlet,methods,post,put,to,be,serviced,by,a,restlet,consumer,endpoint,if,both,restlet,method,and,restlet,methods,options,are,specified,the,restlet,method,setting,is,ignored,the,possible,methods,are,all,connect,delete,get,head,options,patch,post,put,trace;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1482332324;Specify one or more methods separated by commas (e.g. restletMethods=post,put) to be serviced by a restlet consumer endpoint._If both restletMethod and restletMethods options are specified, the restletMethod setting is ignored._The possible methods are: ALL,CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };specify,one,or,more,methods,separated,by,commas,e,g,restlet,methods,post,put,to,be,serviced,by,a,restlet,consumer,endpoint,if,both,restlet,method,and,restlet,methods,options,are,specified,the,restlet,method,setting,is,ignored,the,possible,methods,are,all,connect,delete,get,head,options,patch,post,put,trace;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1485974480;Specify one or more methods separated by commas (e.g. restletMethods=post,put) to be serviced by a restlet consumer endpoint._If both restletMethod and restletMethods options are specified, the restletMethod setting is ignored._The possible methods are: ALL,CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };specify,one,or,more,methods,separated,by,commas,e,g,restlet,methods,post,put,to,be,serviced,by,a,restlet,consumer,endpoint,if,both,restlet,method,and,restlet,methods,options,are,specified,the,restlet,method,setting,is,ignored,the,possible,methods,are,all,connect,delete,get,head,options,patch,post,put,trace;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1494752465;Specify one or more methods separated by commas (e.g. restletMethods=post,put) to be serviced by a restlet consumer endpoint._If both restletMethod and restletMethods options are specified, the restletMethod setting is ignored._The possible methods are: ALL,CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };specify,one,or,more,methods,separated,by,commas,e,g,restlet,methods,post,put,to,be,serviced,by,a,restlet,consumer,endpoint,if,both,restlet,method,and,restlet,methods,options,are,specified,the,restlet,method,setting,is,ignored,the,possible,methods,are,all,connect,delete,get,head,options,patch,post,put,trace;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1495627904;Specify one or more methods separated by commas (e.g. restletMethods=post,put) to be serviced by a restlet consumer endpoint._If both restletMethod and restletMethods options are specified, the restletMethod setting is ignored._The possible methods are: ALL,CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };specify,one,or,more,methods,separated,by,commas,e,g,restlet,methods,post,put,to,be,serviced,by,a,restlet,consumer,endpoint,if,both,restlet,method,and,restlet,methods,options,are,specified,the,restlet,method,setting,is,ignored,the,possible,methods,are,all,connect,delete,get,head,options,patch,post,put,trace;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1506336987;Specify one or more methods separated by commas (e.g. restletMethods=post,put) to be serviced by a restlet consumer endpoint._If both restletMethod and restletMethods options are specified, the restletMethod setting is ignored._The possible methods are: ALL,CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };specify,one,or,more,methods,separated,by,commas,e,g,restlet,methods,post,put,to,be,serviced,by,a,restlet,consumer,endpoint,if,both,restlet,method,and,restlet,methods,options,are,specified,the,restlet,method,setting,is,ignored,the,possible,methods,are,all,connect,delete,get,head,options,patch,post,put,trace;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1520245176;Specify one or more methods separated by commas (e.g. restletMethods=post,put) to be serviced by a restlet consumer endpoint._If both restletMethod and restletMethods options are specified, the restletMethod setting is ignored._The possible methods are: ALL,CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };specify,one,or,more,methods,separated,by,commas,e,g,restlet,methods,post,put,to,be,serviced,by,a,restlet,consumer,endpoint,if,both,restlet,method,and,restlet,methods,options,are,specified,the,restlet,method,setting,is,ignored,the,possible,methods,are,all,connect,delete,get,head,options,patch,post,put,trace;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1540108158;Specify one or more methods separated by commas (e.g. restletMethods=post,put) to be serviced by a restlet consumer endpoint._If both restletMethod and restletMethods options are specified, the restletMethod setting is ignored._The possible methods are: ALL,CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };specify,one,or,more,methods,separated,by,commas,e,g,restlet,methods,post,put,to,be,serviced,by,a,restlet,consumer,endpoint,if,both,restlet,method,and,restlet,methods,options,are,specified,the,restlet,method,setting,is,ignored,the,possible,methods,are,all,connect,delete,get,head,options,patch,post,put,trace;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1540108163;Specify one or more methods separated by commas (e.g. restletMethods=post,put) to be serviced by a restlet consumer endpoint._If both restletMethod and restletMethods options are specified, the restletMethod setting is ignored._The possible methods are: ALL,CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };specify,one,or,more,methods,separated,by,commas,e,g,restlet,methods,post,put,to,be,serviced,by,a,restlet,consumer,endpoint,if,both,restlet,method,and,restlet,methods,options,are,specified,the,restlet,method,setting,is,ignored,the,possible,methods,are,all,connect,delete,get,head,options,patch,post,put,trace;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1545313144;Specify one or more methods separated by commas (e.g. restletMethods=post,put) to be serviced by a restlet consumer endpoint._If both restletMethod and restletMethods options are specified, the restletMethod setting is ignored._The possible methods are: ALL,CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };specify,one,or,more,methods,separated,by,commas,e,g,restlet,methods,post,put,to,be,serviced,by,a,restlet,consumer,endpoint,if,both,restlet,method,and,restlet,methods,options,are,specified,the,restlet,method,setting,is,ignored,the,possible,methods,are,all,connect,delete,get,head,options,patch,post,put,trace;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1547240981;Specify one or more methods separated by commas (e.g. restletMethods=post,put) to be serviced by a restlet consumer endpoint._If both restletMethod and restletMethods options are specified, the restletMethod setting is ignored._The possible methods are: ALL,CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };specify,one,or,more,methods,separated,by,commas,e,g,restlet,methods,post,put,to,be,serviced,by,a,restlet,consumer,endpoint,if,both,restlet,method,and,restlet,methods,options,are,specified,the,restlet,method,setting,is,ignored,the,possible,methods,are,all,connect,delete,get,head,options,patch,post,put,trace;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public void setRestletMethods(Method[] restletMethods);1547480087;Specify one or more methods separated by commas (e.g. restletMethods=post,put) to be serviced by a restlet consumer endpoint._If both restletMethod and restletMethods options are specified, the restletMethod setting is ignored._The possible methods are: ALL,CONNECT,DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT,TRACE;public void setRestletMethods(Method[] restletMethods) {_        this.restletMethods = restletMethods__    };specify,one,or,more,methods,separated,by,commas,e,g,restlet,methods,post,put,to,be,serviced,by,a,restlet,consumer,endpoint,if,both,restlet,method,and,restlet,methods,options,are,specified,the,restlet,method,setting,is,ignored,the,possible,methods,are,all,connect,delete,get,head,options,patch,post,put,trace;public,void,set,restlet,methods,method,restlet,methods,this,restlet,methods,restlet,methods
RestletEndpoint -> public List<String> getRestletUriPatterns();1244989524;@return the restletUriPatterns;public List<String> getRestletUriPatterns() {_        return restletUriPatterns__    };return,the,restlet,uri,patterns;public,list,string,get,restlet,uri,patterns,return,restlet,uri,patterns
RestletEndpoint -> public List<String> getRestletUriPatterns();1248967091;@return the restletUriPatterns;public List<String> getRestletUriPatterns() {_        return restletUriPatterns__    };return,the,restlet,uri,patterns;public,list,string,get,restlet,uri,patterns,return,restlet,uri,patterns
RestletEndpoint -> public void setStreamRepresentation(boolean streamRepresentation);1463151573;Whether to support stream representation as response from calling a REST service using the restlet producer._If the response is streaming then this option can be enabled to use an {@link java.io.InputStream} as the_message body on the Camel {@link Message} body. If using this option you may want to enable the_autoCloseStream option as well to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setStreamRepresentation(boolean streamRepresentation) {_        this.streamRepresentation = streamRepresentation__    };whether,to,support,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,then,this,option,can,be,enabled,to,use,an,link,java,io,input,stream,as,the,message,body,on,the,camel,link,message,body,if,using,this,option,you,may,want,to,enable,the,auto,close,stream,option,as,well,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,stream,representation,boolean,stream,representation,this,stream,representation,stream,representation
RestletEndpoint -> public void setStreamRepresentation(boolean streamRepresentation);1476946116;Whether to support stream representation as response from calling a REST service using the restlet producer._If the response is streaming then this option can be enabled to use an {@link java.io.InputStream} as the_message body on the Camel {@link Message} body. If using this option you may want to enable the_autoCloseStream option as well to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setStreamRepresentation(boolean streamRepresentation) {_        this.streamRepresentation = streamRepresentation__    };whether,to,support,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,then,this,option,can,be,enabled,to,use,an,link,java,io,input,stream,as,the,message,body,on,the,camel,link,message,body,if,using,this,option,you,may,want,to,enable,the,auto,close,stream,option,as,well,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,stream,representation,boolean,stream,representation,this,stream,representation,stream,representation
RestletEndpoint -> public void setStreamRepresentation(boolean streamRepresentation);1482332324;Whether to support stream representation as response from calling a REST service using the restlet producer._If the response is streaming then this option can be enabled to use an {@link java.io.InputStream} as the_message body on the Camel {@link Message} body. If using this option you may want to enable the_autoCloseStream option as well to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setStreamRepresentation(boolean streamRepresentation) {_        this.streamRepresentation = streamRepresentation__    };whether,to,support,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,then,this,option,can,be,enabled,to,use,an,link,java,io,input,stream,as,the,message,body,on,the,camel,link,message,body,if,using,this,option,you,may,want,to,enable,the,auto,close,stream,option,as,well,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,stream,representation,boolean,stream,representation,this,stream,representation,stream,representation
RestletEndpoint -> public void setStreamRepresentation(boolean streamRepresentation);1485974480;Whether to support stream representation as response from calling a REST service using the restlet producer._If the response is streaming then this option can be enabled to use an {@link java.io.InputStream} as the_message body on the Camel {@link Message} body. If using this option you may want to enable the_autoCloseStream option as well to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setStreamRepresentation(boolean streamRepresentation) {_        this.streamRepresentation = streamRepresentation__    };whether,to,support,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,then,this,option,can,be,enabled,to,use,an,link,java,io,input,stream,as,the,message,body,on,the,camel,link,message,body,if,using,this,option,you,may,want,to,enable,the,auto,close,stream,option,as,well,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,stream,representation,boolean,stream,representation,this,stream,representation,stream,representation
RestletEndpoint -> public void setStreamRepresentation(boolean streamRepresentation);1494752465;Whether to support stream representation as response from calling a REST service using the restlet producer._If the response is streaming then this option can be enabled to use an {@link java.io.InputStream} as the_message body on the Camel {@link Message} body. If using this option you may want to enable the_autoCloseStream option as well to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setStreamRepresentation(boolean streamRepresentation) {_        this.streamRepresentation = streamRepresentation__    };whether,to,support,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,then,this,option,can,be,enabled,to,use,an,link,java,io,input,stream,as,the,message,body,on,the,camel,link,message,body,if,using,this,option,you,may,want,to,enable,the,auto,close,stream,option,as,well,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,stream,representation,boolean,stream,representation,this,stream,representation,stream,representation
RestletEndpoint -> public void setStreamRepresentation(boolean streamRepresentation);1495627904;Whether to support stream representation as response from calling a REST service using the restlet producer._If the response is streaming then this option can be enabled to use an {@link java.io.InputStream} as the_message body on the Camel {@link Message} body. If using this option you may want to enable the_autoCloseStream option as well to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setStreamRepresentation(boolean streamRepresentation) {_        this.streamRepresentation = streamRepresentation__    };whether,to,support,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,then,this,option,can,be,enabled,to,use,an,link,java,io,input,stream,as,the,message,body,on,the,camel,link,message,body,if,using,this,option,you,may,want,to,enable,the,auto,close,stream,option,as,well,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,stream,representation,boolean,stream,representation,this,stream,representation,stream,representation
RestletEndpoint -> public void setStreamRepresentation(boolean streamRepresentation);1506336987;Whether to support stream representation as response from calling a REST service using the restlet producer._If the response is streaming then this option can be enabled to use an {@link java.io.InputStream} as the_message body on the Camel {@link Message} body. If using this option you may want to enable the_autoCloseStream option as well to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setStreamRepresentation(boolean streamRepresentation) {_        this.streamRepresentation = streamRepresentation__    };whether,to,support,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,then,this,option,can,be,enabled,to,use,an,link,java,io,input,stream,as,the,message,body,on,the,camel,link,message,body,if,using,this,option,you,may,want,to,enable,the,auto,close,stream,option,as,well,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,stream,representation,boolean,stream,representation,this,stream,representation,stream,representation
RestletEndpoint -> public void setStreamRepresentation(boolean streamRepresentation);1520245176;Whether to support stream representation as response from calling a REST service using the restlet producer._If the response is streaming then this option can be enabled to use an {@link java.io.InputStream} as the_message body on the Camel {@link Message} body. If using this option you may want to enable the_autoCloseStream option as well to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setStreamRepresentation(boolean streamRepresentation) {_        this.streamRepresentation = streamRepresentation__    };whether,to,support,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,then,this,option,can,be,enabled,to,use,an,link,java,io,input,stream,as,the,message,body,on,the,camel,link,message,body,if,using,this,option,you,may,want,to,enable,the,auto,close,stream,option,as,well,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,stream,representation,boolean,stream,representation,this,stream,representation,stream,representation
RestletEndpoint -> public void setStreamRepresentation(boolean streamRepresentation);1540108158;Whether to support stream representation as response from calling a REST service using the restlet producer._If the response is streaming then this option can be enabled to use an {@link java.io.InputStream} as the_message body on the Camel {@link Message} body. If using this option you may want to enable the_autoCloseStream option as well to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setStreamRepresentation(boolean streamRepresentation) {_        this.streamRepresentation = streamRepresentation__    };whether,to,support,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,then,this,option,can,be,enabled,to,use,an,link,java,io,input,stream,as,the,message,body,on,the,camel,link,message,body,if,using,this,option,you,may,want,to,enable,the,auto,close,stream,option,as,well,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,stream,representation,boolean,stream,representation,this,stream,representation,stream,representation
RestletEndpoint -> public void setStreamRepresentation(boolean streamRepresentation);1540108163;Whether to support stream representation as response from calling a REST service using the restlet producer._If the response is streaming then this option can be enabled to use an {@link java.io.InputStream} as the_message body on the Camel {@link Message} body. If using this option you may want to enable the_autoCloseStream option as well to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setStreamRepresentation(boolean streamRepresentation) {_        this.streamRepresentation = streamRepresentation__    };whether,to,support,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,then,this,option,can,be,enabled,to,use,an,link,java,io,input,stream,as,the,message,body,on,the,camel,link,message,body,if,using,this,option,you,may,want,to,enable,the,auto,close,stream,option,as,well,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,stream,representation,boolean,stream,representation,this,stream,representation,stream,representation
RestletEndpoint -> public void setStreamRepresentation(boolean streamRepresentation);1545313144;Whether to support stream representation as response from calling a REST service using the restlet producer._If the response is streaming then this option can be enabled to use an {@link java.io.InputStream} as the_message body on the Camel {@link Message} body. If using this option you may want to enable the_autoCloseStream option as well to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setStreamRepresentation(boolean streamRepresentation) {_        this.streamRepresentation = streamRepresentation__    };whether,to,support,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,then,this,option,can,be,enabled,to,use,an,link,java,io,input,stream,as,the,message,body,on,the,camel,link,message,body,if,using,this,option,you,may,want,to,enable,the,auto,close,stream,option,as,well,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,stream,representation,boolean,stream,representation,this,stream,representation,stream,representation
RestletEndpoint -> public void setStreamRepresentation(boolean streamRepresentation);1547240981;Whether to support stream representation as response from calling a REST service using the restlet producer._If the response is streaming then this option can be enabled to use an {@link java.io.InputStream} as the_message body on the Camel {@link Message} body. If using this option you may want to enable the_autoCloseStream option as well to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setStreamRepresentation(boolean streamRepresentation) {_        this.streamRepresentation = streamRepresentation__    };whether,to,support,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,then,this,option,can,be,enabled,to,use,an,link,java,io,input,stream,as,the,message,body,on,the,camel,link,message,body,if,using,this,option,you,may,want,to,enable,the,auto,close,stream,option,as,well,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,stream,representation,boolean,stream,representation,this,stream,representation,stream,representation
RestletEndpoint -> public void setStreamRepresentation(boolean streamRepresentation);1547480087;Whether to support stream representation as response from calling a REST service using the restlet producer._If the response is streaming then this option can be enabled to use an {@link java.io.InputStream} as the_message body on the Camel {@link Message} body. If using this option you may want to enable the_autoCloseStream option as well to ensure the input stream is closed when the Camel {@link Exchange}_is done being routed. However if you need to read the stream outside a Camel route, you may need_to not auto close the stream.;public void setStreamRepresentation(boolean streamRepresentation) {_        this.streamRepresentation = streamRepresentation__    };whether,to,support,stream,representation,as,response,from,calling,a,rest,service,using,the,restlet,producer,if,the,response,is,streaming,then,this,option,can,be,enabled,to,use,an,link,java,io,input,stream,as,the,message,body,on,the,camel,link,message,body,if,using,this,option,you,may,want,to,enable,the,auto,close,stream,option,as,well,to,ensure,the,input,stream,is,closed,when,the,camel,link,exchange,is,done,being,routed,however,if,you,need,to,read,the,stream,outside,a,camel,route,you,may,need,to,not,auto,close,the,stream;public,void,set,stream,representation,boolean,stream,representation,this,stream,representation,stream,representation
RestletEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1431337048;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__        if (restletBinding instanceof HeaderFilterStrategyAware) {_            ((HeaderFilterStrategyAware) restletBinding).setHeaderFilterStrategy(headerFilterStrategy)__        }_    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy,if,restlet,binding,instanceof,header,filter,strategy,aware,header,filter,strategy,aware,restlet,binding,set,header,filter,strategy,header,filter,strategy
RestletEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1434198513;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__        if (restletBinding instanceof HeaderFilterStrategyAware) {_            ((HeaderFilterStrategyAware) restletBinding).setHeaderFilterStrategy(headerFilterStrategy)__        }_    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy,if,restlet,binding,instanceof,header,filter,strategy,aware,header,filter,strategy,aware,restlet,binding,set,header,filter,strategy,header,filter,strategy
RestletEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1451237128;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__        if (restletBinding instanceof HeaderFilterStrategyAware) {_            ((HeaderFilterStrategyAware) restletBinding).setHeaderFilterStrategy(headerFilterStrategy)__        }_    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy,if,restlet,binding,instanceof,header,filter,strategy,aware,header,filter,strategy,aware,restlet,binding,set,header,filter,strategy,header,filter,strategy
RestletEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1451302108;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__        if (restletBinding instanceof HeaderFilterStrategyAware) {_            ((HeaderFilterStrategyAware) restletBinding).setHeaderFilterStrategy(headerFilterStrategy)__        }_    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy,if,restlet,binding,instanceof,header,filter,strategy,aware,header,filter,strategy,aware,restlet,binding,set,header,filter,strategy,header,filter,strategy
RestletEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1451939116;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__        if (restletBinding instanceof HeaderFilterStrategyAware) {_            ((HeaderFilterStrategyAware) restletBinding).setHeaderFilterStrategy(headerFilterStrategy)__        }_    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy,if,restlet,binding,instanceof,header,filter,strategy,aware,header,filter,strategy,aware,restlet,binding,set,header,filter,strategy,header,filter,strategy
RestletEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1452076588;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__        if (restletBinding instanceof HeaderFilterStrategyAware) {_            ((HeaderFilterStrategyAware) restletBinding).setHeaderFilterStrategy(headerFilterStrategy)__        }_    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy,if,restlet,binding,instanceof,header,filter,strategy,aware,header,filter,strategy,aware,restlet,binding,set,header,filter,strategy,header,filter,strategy
RestletEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1452194208;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__        if (restletBinding instanceof HeaderFilterStrategyAware) {_            ((HeaderFilterStrategyAware) restletBinding).setHeaderFilterStrategy(headerFilterStrategy)__        }_    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy,if,restlet,binding,instanceof,header,filter,strategy,aware,header,filter,strategy,aware,restlet,binding,set,header,filter,strategy,header,filter,strategy
RestletEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1460115881;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__        if (restletBinding instanceof HeaderFilterStrategyAware) {_            ((HeaderFilterStrategyAware) restletBinding).setHeaderFilterStrategy(headerFilterStrategy)__        }_    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy,if,restlet,binding,instanceof,header,filter,strategy,aware,header,filter,strategy,aware,restlet,binding,set,header,filter,strategy,header,filter,strategy
RestletEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1460966546;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__        if (restletBinding instanceof HeaderFilterStrategyAware) {_            ((HeaderFilterStrategyAware) restletBinding).setHeaderFilterStrategy(headerFilterStrategy)__        }_    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy,if,restlet,binding,instanceof,header,filter,strategy,aware,header,filter,strategy,aware,restlet,binding,set,header,filter,strategy,header,filter,strategy
RestletEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1463151573;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__        if (restletBinding instanceof HeaderFilterStrategyAware) {_            ((HeaderFilterStrategyAware) restletBinding).setHeaderFilterStrategy(headerFilterStrategy)__        }_    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy,if,restlet,binding,instanceof,header,filter,strategy,aware,header,filter,strategy,aware,restlet,binding,set,header,filter,strategy,header,filter,strategy
RestletEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1476946116;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__        if (restletBinding instanceof HeaderFilterStrategyAware) {_            ((HeaderFilterStrategyAware) restletBinding).setHeaderFilterStrategy(headerFilterStrategy)__        }_    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy,if,restlet,binding,instanceof,header,filter,strategy,aware,header,filter,strategy,aware,restlet,binding,set,header,filter,strategy,header,filter,strategy
RestletEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1482332324;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__        if (restletBinding instanceof HeaderFilterStrategyAware) {_            ((HeaderFilterStrategyAware) restletBinding).setHeaderFilterStrategy(headerFilterStrategy)__        }_    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy,if,restlet,binding,instanceof,header,filter,strategy,aware,header,filter,strategy,aware,restlet,binding,set,header,filter,strategy,header,filter,strategy
RestletEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1485974480;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__        if (restletBinding instanceof HeaderFilterStrategyAware) {_            ((HeaderFilterStrategyAware) restletBinding).setHeaderFilterStrategy(headerFilterStrategy)__        }_    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy,if,restlet,binding,instanceof,header,filter,strategy,aware,header,filter,strategy,aware,restlet,binding,set,header,filter,strategy,header,filter,strategy
RestletEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1494752465;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__        if (restletBinding instanceof HeaderFilterStrategyAware) {_            ((HeaderFilterStrategyAware) restletBinding).setHeaderFilterStrategy(headerFilterStrategy)__        }_    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy,if,restlet,binding,instanceof,header,filter,strategy,aware,header,filter,strategy,aware,restlet,binding,set,header,filter,strategy,header,filter,strategy
RestletEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1495627904;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__        if (restletBinding instanceof HeaderFilterStrategyAware) {_            ((HeaderFilterStrategyAware) restletBinding).setHeaderFilterStrategy(headerFilterStrategy)__        }_    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy,if,restlet,binding,instanceof,header,filter,strategy,aware,header,filter,strategy,aware,restlet,binding,set,header,filter,strategy,header,filter,strategy
RestletEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1506336987;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__        if (restletBinding instanceof HeaderFilterStrategyAware) {_            ((HeaderFilterStrategyAware) restletBinding).setHeaderFilterStrategy(headerFilterStrategy)__        }_    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy,if,restlet,binding,instanceof,header,filter,strategy,aware,header,filter,strategy,aware,restlet,binding,set,header,filter,strategy,header,filter,strategy
RestletEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1520245176;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__        if (restletBinding instanceof HeaderFilterStrategyAware) {_            ((HeaderFilterStrategyAware) restletBinding).setHeaderFilterStrategy(headerFilterStrategy)__        }_    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy,if,restlet,binding,instanceof,header,filter,strategy,aware,header,filter,strategy,aware,restlet,binding,set,header,filter,strategy,header,filter,strategy
RestletEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1540108158;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__        if (restletBinding instanceof HeaderFilterStrategyAware) {_            ((HeaderFilterStrategyAware) restletBinding).setHeaderFilterStrategy(headerFilterStrategy)__        }_    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy,if,restlet,binding,instanceof,header,filter,strategy,aware,header,filter,strategy,aware,restlet,binding,set,header,filter,strategy,header,filter,strategy
RestletEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1540108163;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__        if (restletBinding instanceof HeaderFilterStrategyAware) {_            ((HeaderFilterStrategyAware) restletBinding).setHeaderFilterStrategy(headerFilterStrategy)__        }_    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy,if,restlet,binding,instanceof,header,filter,strategy,aware,header,filter,strategy,aware,restlet,binding,set,header,filter,strategy,header,filter,strategy
RestletEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1545313144;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__        if (restletBinding instanceof HeaderFilterStrategyAware) {_            ((HeaderFilterStrategyAware) restletBinding).setHeaderFilterStrategy(headerFilterStrategy)__        }_    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy,if,restlet,binding,instanceof,header,filter,strategy,aware,header,filter,strategy,aware,restlet,binding,set,header,filter,strategy,header,filter,strategy
RestletEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1547240981;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__        if (restletBinding instanceof HeaderFilterStrategyAware) {_            ((HeaderFilterStrategyAware) restletBinding).setHeaderFilterStrategy(headerFilterStrategy)__        }_    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy,if,restlet,binding,instanceof,header,filter,strategy,aware,header,filter,strategy,aware,restlet,binding,set,header,filter,strategy,header,filter,strategy
RestletEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1547480087;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__        if (restletBinding instanceof HeaderFilterStrategyAware) {_            ((HeaderFilterStrategyAware) restletBinding).setHeaderFilterStrategy(headerFilterStrategy)__        }_    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy,if,restlet,binding,instanceof,header,filter,strategy,aware,header,filter,strategy,aware,restlet,binding,set,header,filter,strategy,header,filter,strategy
