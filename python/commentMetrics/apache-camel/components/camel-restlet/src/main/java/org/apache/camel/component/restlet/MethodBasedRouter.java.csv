commented;modifiers;parameterAmount;loc;comment;code
false;public;2;25;;@Override public void handle(Request request, Response response) {     Method method = request.getMethod().     LOG.debug("MethodRouter ({}) received request method: {}", uriPattern, method).     String requestPath = request.getResourceRef().getPath().     String consumerPath = request.getRootRef().getPath().     boolean matchOnUriPrefix = false.     boolean result = RestConsumerContextPathMatcher.matchPath(requestPath, consumerPath, matchOnUriPrefix).     if (result) {         Restlet target = routes.get(method).         if (target == null || org.restlet.data.Method.OPTIONS.equals(method)) {             // must include list of allowed methods             response.setAllowedMethods(routes.keySet()).         }         if (target != null) {             target.handle(request, response).         } else {             LOG.debug("MethodRouter ({}) method not allowed: {}", uriPattern, method).             response.setStatus(Status.CLIENT_ERROR_METHOD_NOT_ALLOWED).         }     } else {         response.setStatus(Status.CLIENT_ERROR_NOT_FOUND).     } }
false;;2;3;;void addRoute(Method method, Restlet target) {     routes.put(method, target). }
false;;1;3;;void removeRoute(Method method) {     routes.remove(method). }
false;;0;3;;boolean hasRoutes() {     return !routes.isEmpty(). }
true;;0;3;/**  * This method does "test-and-set" on the underlying flag that indicates  * whether this router restlet has been attached to a server or not.  It  * is the caller's responsibility to perform the "attach" when this method  * returns false.  *  * @return true only this method is called the first time.  */ ;/**  * This method does "test-and-set" on the underlying flag that indicates  * whether this router restlet has been attached to a server or not.  It  * is the caller's responsibility to perform the "attach" when this method  * returns false.  *  * @return true only this method is called the first time.  */ boolean hasBeenAttached() {     return hasBeenAttachedFlag.getAndSet(true). }
false;;0;3;;String getUriPattern() {     return uriPattern. }
