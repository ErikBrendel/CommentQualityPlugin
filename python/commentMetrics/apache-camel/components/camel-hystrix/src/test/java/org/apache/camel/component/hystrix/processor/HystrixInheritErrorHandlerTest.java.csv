commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testHystrix() throws Exception {     getMockEndpoint("mock:a").expectedMessageCount(3 + 1).     getMockEndpoint("mock:dead").expectedMessageCount(1).     getMockEndpoint("mock:result").expectedMessageCount(0).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;14;;@Override public void configure() throws Exception {     errorHandler(deadLetterChannel("mock:dead").maximumRedeliveries(3).redeliveryDelay(0)).     from("direct:start").to("log:start").hystrix().inheritErrorHandler(true).to("mock:a").throwException(new IllegalArgumentException("Forced")).end().to("log:result").to("mock:result"). }
false;protected;0;19;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             errorHandler(deadLetterChannel("mock:dead").maximumRedeliveries(3).redeliveryDelay(0)).             from("direct:start").to("log:start").hystrix().inheritErrorHandler(true).to("mock:a").throwException(new IllegalArgumentException("Forced")).end().to("log:result").to("mock:result").         }     }. }
