commented;modifiers;parameterAmount;loc;comment;code
false;public;3;36;;@Override public void populateCamelHeaders(HttpServerExchange httpExchange, Map<String, Object> headersMap, Exchange exchange) throws Exception {     super.populateCamelHeaders(httpExchange, headersMap, exchange).     String path = httpExchange.getRequestPath().     if (path == null) {         return.     }     // in the endpoint the user may have defined rest {} placeholders     // so we need to map those placeholders with data from the incoming request context path     UndertowEndpoint endpoint = (UndertowEndpoint) exchange.getFromEndpoint().     String consumerPath = endpoint.getHttpURI().getPath().     if (useRestMatching(consumerPath)) {         // split using single char / is optimized in the jdk         String[] paths = path.split("/").         String[] consumerPaths = consumerPath.split("/").         for (int i = 0. i < consumerPaths.length. i++) {             if (paths.length < i) {                 break.             }             String p1 = consumerPaths[i].             if (p1.startsWith("{") && p1.endsWith("}")) {                 String key = p1.substring(1, p1.length() - 1).                 String value = paths[i].                 if (value != null) {                     headersMap.put(key, value).                 }             }         }     } }
false;private;1;4;;private boolean useRestMatching(String path) {     // only need to do rest matching if using { } placeholders     return path.indexOf('{') > -1. }
