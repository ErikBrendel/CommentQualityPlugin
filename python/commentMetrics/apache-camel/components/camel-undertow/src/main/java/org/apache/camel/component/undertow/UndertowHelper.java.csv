# id;timestamp;commentText;codeText;commentWords;codeWords
UndertowHelper -> public static HttpString createMethod(Exchange exchange, UndertowEndpoint endpoint, boolean hasPayload) throws URISyntaxException;1437723958;Creates the HttpMethod to use to call the remote server, often either its GET or POST.__@param exchange the exchange_@return the created method_@throws URISyntaxException;public static HttpString createMethod(Exchange exchange, UndertowEndpoint endpoint, boolean hasPayload) throws URISyntaxException {_        _        _        String queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        _        String uriString = exchange.getIn().getHeader(Exchange.HTTP_URI, String.class)__        _        try {_            uriString = exchange.getContext().resolvePropertyPlaceholders(uriString)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uriString, exchange, e)__        }_        if (uriString != null) {_            URI uri = new URI(uriString)__            queryString = uri.getQuery()__        }_        if (queryString == null) {_            queryString = endpoint.getHttpURI().getRawQuery()__        }__        _        HttpString answer__        String m = exchange.getIn().getHeader(Exchange.HTTP_METHOD, String.class)__        if (m != null) {_            _            answer = new HttpString(m)__        } else if (queryString != null) {_            _            answer = Methods.GET__        } else {_            _            answer = hasPayload ? Methods.POST : Methods.GET__        }__        return answer__    };creates,the,http,method,to,use,to,call,the,remote,server,often,either,its,get,or,post,param,exchange,the,exchange,return,the,created,method,throws,urisyntax,exception;public,static,http,string,create,method,exchange,exchange,undertow,endpoint,endpoint,boolean,has,payload,throws,urisyntax,exception,string,query,string,exchange,get,in,get,header,exchange,string,class,string,uri,string,exchange,get,in,get,header,exchange,string,class,try,uri,string,exchange,get,context,resolve,property,placeholders,uri,string,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,string,exchange,e,if,uri,string,null,uri,uri,new,uri,uri,string,query,string,uri,get,query,if,query,string,null,query,string,endpoint,get,http,uri,get,raw,query,http,string,answer,string,m,exchange,get,in,get,header,exchange,string,class,if,m,null,answer,new,http,string,m,else,if,query,string,null,answer,methods,get,else,answer,has,payload,methods,post,methods,get,return,answer
UndertowHelper -> public static HttpString createMethod(Exchange exchange, UndertowEndpoint endpoint, boolean hasPayload) throws URISyntaxException;1472223211;Creates the HttpMethod to use to call the remote server, often either its GET or POST.__@param exchange the exchange_@return the created method_@throws URISyntaxException;public static HttpString createMethod(Exchange exchange, UndertowEndpoint endpoint, boolean hasPayload) throws URISyntaxException {_        _        _        String queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        _        String uriString = exchange.getIn().getHeader(Exchange.HTTP_URI, String.class)__        _        try {_            uriString = exchange.getContext().resolvePropertyPlaceholders(uriString)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uriString, exchange, e)__        }_        if (uriString != null) {_            URI uri = new URI(uriString)__            queryString = uri.getQuery()__        }_        if (queryString == null) {_            queryString = endpoint.getHttpURI().getRawQuery()__        }__        _        HttpString answer__        String m = exchange.getIn().getHeader(Exchange.HTTP_METHOD, String.class)__        if (m != null) {_            _            answer = new HttpString(m)__        } else if (queryString != null) {_            _            answer = Methods.GET__        } else {_            _            answer = hasPayload ? Methods.POST : Methods.GET__        }__        return answer__    };creates,the,http,method,to,use,to,call,the,remote,server,often,either,its,get,or,post,param,exchange,the,exchange,return,the,created,method,throws,urisyntax,exception;public,static,http,string,create,method,exchange,exchange,undertow,endpoint,endpoint,boolean,has,payload,throws,urisyntax,exception,string,query,string,exchange,get,in,get,header,exchange,string,class,string,uri,string,exchange,get,in,get,header,exchange,string,class,try,uri,string,exchange,get,context,resolve,property,placeholders,uri,string,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,string,exchange,e,if,uri,string,null,uri,uri,new,uri,uri,string,query,string,uri,get,query,if,query,string,null,query,string,endpoint,get,http,uri,get,raw,query,http,string,answer,string,m,exchange,get,in,get,header,exchange,string,class,if,m,null,answer,new,http,string,m,else,if,query,string,null,answer,methods,get,else,answer,has,payload,methods,post,methods,get,return,answer
UndertowHelper -> public static HttpString createMethod(Exchange exchange, UndertowEndpoint endpoint, boolean hasPayload) throws URISyntaxException;1472223211;Creates the HttpMethod to use to call the remote server, often either its GET or POST.;public static HttpString createMethod(Exchange exchange, UndertowEndpoint endpoint, boolean hasPayload) throws URISyntaxException {_        _        _        String queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        _        String uriString = exchange.getIn().getHeader(Exchange.HTTP_URI, String.class)__        _        try {_            uriString = exchange.getContext().resolvePropertyPlaceholders(uriString)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uriString, exchange, e)__        }_        if (uriString != null) {_            URI uri = new URI(uriString)__            queryString = uri.getQuery()__        }_        if (queryString == null) {_            queryString = endpoint.getHttpURI().getRawQuery()__        }__        _        HttpString answer__        String m = exchange.getIn().getHeader(Exchange.HTTP_METHOD, String.class)__        if (m != null) {_            _            answer = new HttpString(m)__        } else if (queryString != null) {_            _            answer = Methods.GET__        } else {_            _            answer = hasPayload ? Methods.POST : Methods.GET__        }__        return answer__    };creates,the,http,method,to,use,to,call,the,remote,server,often,either,its,get,or,post;public,static,http,string,create,method,exchange,exchange,undertow,endpoint,endpoint,boolean,has,payload,throws,urisyntax,exception,string,query,string,exchange,get,in,get,header,exchange,string,class,string,uri,string,exchange,get,in,get,header,exchange,string,class,try,uri,string,exchange,get,context,resolve,property,placeholders,uri,string,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,string,exchange,e,if,uri,string,null,uri,uri,new,uri,uri,string,query,string,uri,get,query,if,query,string,null,query,string,endpoint,get,http,uri,get,raw,query,http,string,answer,string,m,exchange,get,in,get,header,exchange,string,class,if,m,null,answer,new,http,string,m,else,if,query,string,null,answer,methods,get,else,answer,has,payload,methods,post,methods,get,return,answer
UndertowHelper -> public static HttpString createMethod(Exchange exchange, UndertowEndpoint endpoint, boolean hasPayload) throws URISyntaxException;1495541549;Creates the HttpMethod to use to call the remote server, often either its GET or POST.;public static HttpString createMethod(Exchange exchange, UndertowEndpoint endpoint, boolean hasPayload) throws URISyntaxException {_        _        _        String queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        _        String uriString = exchange.getIn().getHeader(Exchange.HTTP_URI, String.class)__        _        try {_            uriString = exchange.getContext().resolvePropertyPlaceholders(uriString)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uriString, exchange, e)__        }_        if (uriString != null) {_            URI uri = new URI(uriString)__            queryString = uri.getQuery()__        }_        if (queryString == null) {_            queryString = endpoint.getHttpURI().getRawQuery()__        }__        _        HttpString answer__        String m = exchange.getIn().getHeader(Exchange.HTTP_METHOD, String.class)__        if (m != null) {_            _            _            m = m.toUpperCase()__            answer = new HttpString(m)__        } else if (queryString != null) {_            _            answer = Methods.GET__        } else {_            _            answer = hasPayload ? Methods.POST : Methods.GET__        }__        return answer__    };creates,the,http,method,to,use,to,call,the,remote,server,often,either,its,get,or,post;public,static,http,string,create,method,exchange,exchange,undertow,endpoint,endpoint,boolean,has,payload,throws,urisyntax,exception,string,query,string,exchange,get,in,get,header,exchange,string,class,string,uri,string,exchange,get,in,get,header,exchange,string,class,try,uri,string,exchange,get,context,resolve,property,placeholders,uri,string,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,string,exchange,e,if,uri,string,null,uri,uri,new,uri,uri,string,query,string,uri,get,query,if,query,string,null,query,string,endpoint,get,http,uri,get,raw,query,http,string,answer,string,m,exchange,get,in,get,header,exchange,string,class,if,m,null,m,m,to,upper,case,answer,new,http,string,m,else,if,query,string,null,answer,methods,get,else,answer,has,payload,methods,post,methods,get,return,answer
UndertowHelper -> public static HttpString createMethod(Exchange exchange, UndertowEndpoint endpoint, boolean hasPayload) throws URISyntaxException;1505925729;Creates the HttpMethod to use to call the remote server, often either its GET or POST.;public static HttpString createMethod(Exchange exchange, UndertowEndpoint endpoint, boolean hasPayload) throws URISyntaxException {_        _        _        String queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        _        String uriString = exchange.getIn().getHeader(Exchange.HTTP_URI, String.class)__        _        try {_            uriString = exchange.getContext().resolvePropertyPlaceholders(uriString)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uriString, exchange, e)__        }_        if (uriString != null) {_            URI uri = new URI(uriString)__            queryString = uri.getQuery()__        }_        if (queryString == null) {_            queryString = endpoint.getHttpURI().getRawQuery()__        }__        _        HttpString answer__        String m = exchange.getIn().getHeader(Exchange.HTTP_METHOD, String.class)__        if (m != null) {_            _            _            m = m.toUpperCase()__            answer = new HttpString(m)__        } else if (queryString != null) {_            _            answer = Methods.GET__        } else {_            _            answer = hasPayload ? Methods.POST : Methods.GET__        }__        return answer__    };creates,the,http,method,to,use,to,call,the,remote,server,often,either,its,get,or,post;public,static,http,string,create,method,exchange,exchange,undertow,endpoint,endpoint,boolean,has,payload,throws,urisyntax,exception,string,query,string,exchange,get,in,get,header,exchange,string,class,string,uri,string,exchange,get,in,get,header,exchange,string,class,try,uri,string,exchange,get,context,resolve,property,placeholders,uri,string,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,string,exchange,e,if,uri,string,null,uri,uri,new,uri,uri,string,query,string,uri,get,query,if,query,string,null,query,string,endpoint,get,http,uri,get,raw,query,http,string,answer,string,m,exchange,get,in,get,header,exchange,string,class,if,m,null,m,m,to,upper,case,answer,new,http,string,m,else,if,query,string,null,answer,methods,get,else,answer,has,payload,methods,post,methods,get,return,answer
UndertowHelper -> public static HttpString createMethod(Exchange exchange, UndertowEndpoint endpoint, boolean hasPayload) throws URISyntaxException;1524063209;Creates the HttpMethod to use to call the remote server, often either its GET or POST.;public static HttpString createMethod(Exchange exchange, UndertowEndpoint endpoint, boolean hasPayload) throws URISyntaxException {_        _        _        String queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        _        String uriString = exchange.getIn().getHeader(Exchange.HTTP_URI, String.class)__        _        try {_            uriString = exchange.getContext().resolvePropertyPlaceholders(uriString)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uriString, exchange, e)__        }_        if (uriString != null) {_            URI uri = new URI(uriString)__            queryString = uri.getQuery()__        }_        if (queryString == null) {_            queryString = endpoint.getHttpURI().getRawQuery()__        }__        _        HttpString answer__        String m = exchange.getIn().getHeader(Exchange.HTTP_METHOD, String.class)__        if (m != null) {_            _            _            m = m.toUpperCase()__            answer = new HttpString(m)__        } else if (queryString != null) {_            _            answer = Methods.GET__        } else {_            _            answer = hasPayload ? Methods.POST : Methods.GET__        }__        return answer__    };creates,the,http,method,to,use,to,call,the,remote,server,often,either,its,get,or,post;public,static,http,string,create,method,exchange,exchange,undertow,endpoint,endpoint,boolean,has,payload,throws,urisyntax,exception,string,query,string,exchange,get,in,get,header,exchange,string,class,string,uri,string,exchange,get,in,get,header,exchange,string,class,try,uri,string,exchange,get,context,resolve,property,placeholders,uri,string,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,string,exchange,e,if,uri,string,null,uri,uri,new,uri,uri,string,query,string,uri,get,query,if,query,string,null,query,string,endpoint,get,http,uri,get,raw,query,http,string,answer,string,m,exchange,get,in,get,header,exchange,string,class,if,m,null,m,m,to,upper,case,answer,new,http,string,m,else,if,query,string,null,answer,methods,get,else,answer,has,payload,methods,post,methods,get,return,answer
UndertowHelper -> public static URI createURI(Exchange exchange, String url, UndertowEndpoint endpoint) throws URISyntaxException;1437723184;Creates the URI to invoke.__@param exchange the exchange_@param url      the url to invoke_@param endpoint the endpoint_@return the URI to invoke;public static URI createURI(Exchange exchange, String url, UndertowEndpoint endpoint) throws URISyntaxException {_        URI uri = new URI(url)__        _        String queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        if (queryString == null) {_            queryString = endpoint.getHttpURI().getRawQuery()__        }_        _        if (queryString == null) {_            queryString = uri.getRawQuery()__        }_        if (queryString != null) {_            _            queryString = UnsafeUriCharactersEncoder.encodeHttpURI(queryString)__            uri = URISupport.createURIWithQuery(uri, queryString)__        }_        return uri__    };creates,the,uri,to,invoke,param,exchange,the,exchange,param,url,the,url,to,invoke,param,endpoint,the,endpoint,return,the,uri,to,invoke;public,static,uri,create,uri,exchange,exchange,string,url,undertow,endpoint,endpoint,throws,urisyntax,exception,uri,uri,new,uri,url,string,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,endpoint,get,http,uri,get,raw,query,if,query,string,null,query,string,uri,get,raw,query,if,query,string,null,query,string,unsafe,uri,characters,encoder,encode,http,uri,query,string,uri,urisupport,create,uriwith,query,uri,query,string,return,uri
UndertowHelper -> public static URI createURI(Exchange exchange, String url, UndertowEndpoint endpoint) throws URISyntaxException;1437723958;Creates the URI to invoke.__@param exchange the exchange_@param url      the url to invoke_@param endpoint the endpoint_@return the URI to invoke;public static URI createURI(Exchange exchange, String url, UndertowEndpoint endpoint) throws URISyntaxException {_        URI uri = new URI(url)__        _        String queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        if (queryString == null) {_            queryString = endpoint.getHttpURI().getRawQuery()__        }_        _        if (queryString == null) {_            queryString = uri.getRawQuery()__        }_        if (queryString != null) {_            _            queryString = UnsafeUriCharactersEncoder.encodeHttpURI(queryString)__            uri = URISupport.createURIWithQuery(uri, queryString)__        }_        return uri__    };creates,the,uri,to,invoke,param,exchange,the,exchange,param,url,the,url,to,invoke,param,endpoint,the,endpoint,return,the,uri,to,invoke;public,static,uri,create,uri,exchange,exchange,string,url,undertow,endpoint,endpoint,throws,urisyntax,exception,uri,uri,new,uri,url,string,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,endpoint,get,http,uri,get,raw,query,if,query,string,null,query,string,uri,get,raw,query,if,query,string,null,query,string,unsafe,uri,characters,encoder,encode,http,uri,query,string,uri,urisupport,create,uriwith,query,uri,query,string,return,uri
UndertowHelper -> public static URI createURI(Exchange exchange, String url, UndertowEndpoint endpoint) throws URISyntaxException;1472223211;Creates the URI to invoke.__@param exchange the exchange_@param url      the url to invoke_@param endpoint the endpoint_@return the URI to invoke;public static URI createURI(Exchange exchange, String url, UndertowEndpoint endpoint) throws URISyntaxException {_        URI uri = new URI(url)__        _        String queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        if (queryString == null) {_            queryString = endpoint.getHttpURI().getRawQuery()__        }_        _        if (queryString == null) {_            queryString = uri.getRawQuery()__        }_        if (queryString != null) {_            _            queryString = UnsafeUriCharactersEncoder.encodeHttpURI(queryString)__            uri = URISupport.createURIWithQuery(uri, queryString)__        }_        return uri__    };creates,the,uri,to,invoke,param,exchange,the,exchange,param,url,the,url,to,invoke,param,endpoint,the,endpoint,return,the,uri,to,invoke;public,static,uri,create,uri,exchange,exchange,string,url,undertow,endpoint,endpoint,throws,urisyntax,exception,uri,uri,new,uri,url,string,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,endpoint,get,http,uri,get,raw,query,if,query,string,null,query,string,uri,get,raw,query,if,query,string,null,query,string,unsafe,uri,characters,encoder,encode,http,uri,query,string,uri,urisupport,create,uriwith,query,uri,query,string,return,uri
UndertowHelper -> public static URI createURI(Exchange exchange, String url, UndertowEndpoint endpoint) throws URISyntaxException;1472223211;Creates the URI to invoke.__@param exchange the exchange_@param url      the url to invoke_@param endpoint the endpoint_@return the URI to invoke;public static URI createURI(Exchange exchange, String url, UndertowEndpoint endpoint) throws URISyntaxException {_        URI uri = new URI(url)__        _        String queryString = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_QUERY)__        _        if (queryString == null) {_            queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        }_        if (queryString == null) {_            queryString = endpoint.getHttpURI().getRawQuery()__        }_        _        if (queryString == null) {_            queryString = uri.getRawQuery()__        }_        if (queryString != null) {_            _            queryString = UnsafeUriCharactersEncoder.encodeHttpURI(queryString)__            uri = URISupport.createURIWithQuery(uri, queryString)__        }_        return uri__    };creates,the,uri,to,invoke,param,exchange,the,exchange,param,url,the,url,to,invoke,param,endpoint,the,endpoint,return,the,uri,to,invoke;public,static,uri,create,uri,exchange,exchange,string,url,undertow,endpoint,endpoint,throws,urisyntax,exception,uri,uri,new,uri,url,string,query,string,string,exchange,get,in,remove,header,exchange,if,query,string,null,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,endpoint,get,http,uri,get,raw,query,if,query,string,null,query,string,uri,get,raw,query,if,query,string,null,query,string,unsafe,uri,characters,encoder,encode,http,uri,query,string,uri,urisupport,create,uriwith,query,uri,query,string,return,uri
UndertowHelper -> public static URI createURI(Exchange exchange, String url, UndertowEndpoint endpoint) throws URISyntaxException;1495541549;Creates the URI to invoke.__@param exchange the exchange_@param url      the url to invoke_@param endpoint the endpoint_@return the URI to invoke;public static URI createURI(Exchange exchange, String url, UndertowEndpoint endpoint) throws URISyntaxException {_        URI uri = new URI(url)__        _        String queryString = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_QUERY)__        _        if (queryString == null) {_            queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        }_        if (queryString == null) {_            queryString = endpoint.getHttpURI().getRawQuery()__        }_        _        if (queryString == null) {_            queryString = uri.getRawQuery()__        }_        if (queryString != null) {_            _            queryString = UnsafeUriCharactersEncoder.encodeHttpURI(queryString)__            uri = URISupport.createURIWithQuery(uri, queryString)__        }_        return uri__    };creates,the,uri,to,invoke,param,exchange,the,exchange,param,url,the,url,to,invoke,param,endpoint,the,endpoint,return,the,uri,to,invoke;public,static,uri,create,uri,exchange,exchange,string,url,undertow,endpoint,endpoint,throws,urisyntax,exception,uri,uri,new,uri,url,string,query,string,string,exchange,get,in,remove,header,exchange,if,query,string,null,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,endpoint,get,http,uri,get,raw,query,if,query,string,null,query,string,uri,get,raw,query,if,query,string,null,query,string,unsafe,uri,characters,encoder,encode,http,uri,query,string,uri,urisupport,create,uriwith,query,uri,query,string,return,uri
UndertowHelper -> public static URI createURI(Exchange exchange, String url, UndertowEndpoint endpoint) throws URISyntaxException;1505925729;Creates the URI to invoke.__@param exchange the exchange_@param url      the url to invoke_@param endpoint the endpoint_@return the URI to invoke;public static URI createURI(Exchange exchange, String url, UndertowEndpoint endpoint) throws URISyntaxException {_        URI uri = new URI(url)__        _        String queryString = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_QUERY)__        _        if (queryString == null) {_            queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        }_        if (queryString == null) {_            queryString = endpoint.getHttpURI().getRawQuery()__        }_        _        if (queryString == null) {_            queryString = uri.getRawQuery()__        }_        if (queryString != null) {_            _            queryString = UnsafeUriCharactersEncoder.encodeHttpURI(queryString)__            uri = URISupport.createURIWithQuery(uri, queryString)__        }_        return uri__    };creates,the,uri,to,invoke,param,exchange,the,exchange,param,url,the,url,to,invoke,param,endpoint,the,endpoint,return,the,uri,to,invoke;public,static,uri,create,uri,exchange,exchange,string,url,undertow,endpoint,endpoint,throws,urisyntax,exception,uri,uri,new,uri,url,string,query,string,string,exchange,get,in,remove,header,exchange,if,query,string,null,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,endpoint,get,http,uri,get,raw,query,if,query,string,null,query,string,uri,get,raw,query,if,query,string,null,query,string,unsafe,uri,characters,encoder,encode,http,uri,query,string,uri,urisupport,create,uriwith,query,uri,query,string,return,uri
UndertowHelper -> public static URI createURI(Exchange exchange, String url, UndertowEndpoint endpoint) throws URISyntaxException;1524063209;Creates the URI to invoke.__@param exchange the exchange_@param url      the url to invoke_@param endpoint the endpoint_@return the URI to invoke;public static URI createURI(Exchange exchange, String url, UndertowEndpoint endpoint) throws URISyntaxException {_        URI uri = new URI(url)__        _        String queryString = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_QUERY)__        _        if (queryString == null) {_            queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        }_        if (queryString == null) {_            queryString = endpoint.getHttpURI().getRawQuery()__        }_        _        if (queryString == null) {_            queryString = uri.getRawQuery()__        }_        if (queryString != null) {_            _            queryString = UnsafeUriCharactersEncoder.encodeHttpURI(queryString)__            uri = URISupport.createURIWithQuery(uri, queryString)__        }_        return uri__    };creates,the,uri,to,invoke,param,exchange,the,exchange,param,url,the,url,to,invoke,param,endpoint,the,endpoint,return,the,uri,to,invoke;public,static,uri,create,uri,exchange,exchange,string,url,undertow,endpoint,endpoint,throws,urisyntax,exception,uri,uri,new,uri,url,string,query,string,string,exchange,get,in,remove,header,exchange,if,query,string,null,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,endpoint,get,http,uri,get,raw,query,if,query,string,null,query,string,uri,get,raw,query,if,query,string,null,query,string,unsafe,uri,characters,encoder,encode,http,uri,query,string,uri,urisupport,create,uriwith,query,uri,query,string,return,uri
UndertowHelper -> public static String createURL(Exchange exchange, UndertowEndpoint endpoint);1437723184;Creates the URL to invoke.__@param exchange the exchange_@param endpoint the endpoint_@return the URL to invoke;public static String createURL(Exchange exchange, UndertowEndpoint endpoint) {_        String uri = null_____        if (uri == null) {_            uri = endpoint.getHttpURI().toASCIIString()__        }__        _        try {_            uri = exchange.getContext().resolvePropertyPlaceholders(uri)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uri, exchange, e)__        }__        _        String path = exchange.getIn().getHeader(Exchange.HTTP_PATH, String.class)__        _        if (path != null) {_            if (path.startsWith("/")) {_                path = path.substring(1)__            }_            if (path.length() > 0) {_                _                _                if (!uri.endsWith("/")) {_                    uri = uri + "/"__                }_                uri = uri.concat(path)__            }_        }__        _        uri = UnsafeUriCharactersEncoder.encodeHttpURI(uri)___        return uri__    };creates,the,url,to,invoke,param,exchange,the,exchange,param,endpoint,the,endpoint,return,the,url,to,invoke;public,static,string,create,url,exchange,exchange,undertow,endpoint,endpoint,string,uri,null,if,uri,null,uri,endpoint,get,http,uri,to,asciistring,try,uri,exchange,get,context,resolve,property,placeholders,uri,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,exchange,e,string,path,exchange,get,in,get,header,exchange,string,class,if,path,null,if,path,starts,with,path,path,substring,1,if,path,length,0,if,uri,ends,with,uri,uri,uri,uri,concat,path,uri,unsafe,uri,characters,encoder,encode,http,uri,uri,return,uri
UndertowHelper -> public static String createURL(Exchange exchange, UndertowEndpoint endpoint);1437723958;Creates the URL to invoke.__@param exchange the exchange_@param endpoint the endpoint_@return the URL to invoke;public static String createURL(Exchange exchange, UndertowEndpoint endpoint) {_        String uri = uri = endpoint.getHttpURI().toASCIIString()___        _        try {_            uri = exchange.getContext().resolvePropertyPlaceholders(uri)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uri, exchange, e)__        }__        _        String path = exchange.getIn().getHeader(Exchange.HTTP_PATH, String.class)__        _        if (path != null) {_            if (path.startsWith("/")) {_                path = path.substring(1)__            }_            if (path.length() > 0) {_                _                _                if (!uri.endsWith("/")) {_                    uri = uri + "/"__                }_                uri = uri.concat(path)__            }_        }__        _        uri = UnsafeUriCharactersEncoder.encodeHttpURI(uri)___        return uri__    };creates,the,url,to,invoke,param,exchange,the,exchange,param,endpoint,the,endpoint,return,the,url,to,invoke;public,static,string,create,url,exchange,exchange,undertow,endpoint,endpoint,string,uri,uri,endpoint,get,http,uri,to,asciistring,try,uri,exchange,get,context,resolve,property,placeholders,uri,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,exchange,e,string,path,exchange,get,in,get,header,exchange,string,class,if,path,null,if,path,starts,with,path,path,substring,1,if,path,length,0,if,uri,ends,with,uri,uri,uri,uri,concat,path,uri,unsafe,uri,characters,encoder,encode,http,uri,uri,return,uri
UndertowHelper -> public static String createURL(Exchange exchange, UndertowEndpoint endpoint);1472223211;Creates the URL to invoke.__@param exchange the exchange_@param endpoint the endpoint_@return the URL to invoke;public static String createURL(Exchange exchange, UndertowEndpoint endpoint) {_        String uri = exchange.getIn().getHeader(Exchange.HTTP_URI, String.class)__        if (uri == null) {_            uri = endpoint.getHttpURI().toASCIIString()__        }__        _        try {_            uri = exchange.getContext().resolvePropertyPlaceholders(uri)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uri, exchange, e)__        }__        _        String path = exchange.getIn().getHeader(Exchange.HTTP_PATH, String.class)__        _        if (path != null) {_            if (path.startsWith("/")) {_                path = path.substring(1)__            }_            if (path.length() > 0) {_                _                _                if (!uri.endsWith("/")) {_                    uri = uri + "/"__                }_                uri = uri.concat(path)__            }_        }__        _        uri = UnsafeUriCharactersEncoder.encodeHttpURI(uri)___        return uri__    };creates,the,url,to,invoke,param,exchange,the,exchange,param,endpoint,the,endpoint,return,the,url,to,invoke;public,static,string,create,url,exchange,exchange,undertow,endpoint,endpoint,string,uri,exchange,get,in,get,header,exchange,string,class,if,uri,null,uri,endpoint,get,http,uri,to,asciistring,try,uri,exchange,get,context,resolve,property,placeholders,uri,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,exchange,e,string,path,exchange,get,in,get,header,exchange,string,class,if,path,null,if,path,starts,with,path,path,substring,1,if,path,length,0,if,uri,ends,with,uri,uri,uri,uri,concat,path,uri,unsafe,uri,characters,encoder,encode,http,uri,uri,return,uri
UndertowHelper -> public static String createURL(Exchange exchange, UndertowEndpoint endpoint);1472223211;Creates the URL to invoke.__@param exchange the exchange_@param endpoint the endpoint_@return the URL to invoke;public static String createURL(Exchange exchange, UndertowEndpoint endpoint) {_        _        String uri = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_URI)__        if (uri == null) {_            uri = endpoint.getHttpURI().toASCIIString()__        }__        _        try {_            uri = exchange.getContext().resolvePropertyPlaceholders(uri)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uri, exchange, e)__        }__        _        String path = exchange.getIn().getHeader(Exchange.HTTP_PATH, String.class)__        _        if (path != null) {_            if (path.startsWith("/")) {_                path = path.substring(1)__            }_            if (path.length() > 0) {_                _                _                if (!uri.endsWith("/")) {_                    uri = uri + "/"__                }_                uri = uri.concat(path)__            }_        }__        _        uri = UnsafeUriCharactersEncoder.encodeHttpURI(uri)___        return uri__    };creates,the,url,to,invoke,param,exchange,the,exchange,param,endpoint,the,endpoint,return,the,url,to,invoke;public,static,string,create,url,exchange,exchange,undertow,endpoint,endpoint,string,uri,string,exchange,get,in,remove,header,exchange,if,uri,null,uri,endpoint,get,http,uri,to,asciistring,try,uri,exchange,get,context,resolve,property,placeholders,uri,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,exchange,e,string,path,exchange,get,in,get,header,exchange,string,class,if,path,null,if,path,starts,with,path,path,substring,1,if,path,length,0,if,uri,ends,with,uri,uri,uri,uri,concat,path,uri,unsafe,uri,characters,encoder,encode,http,uri,uri,return,uri
UndertowHelper -> public static String createURL(Exchange exchange, UndertowEndpoint endpoint);1495541549;Creates the URL to invoke.__@param exchange the exchange_@param endpoint the endpoint_@return the URL to invoke;public static String createURL(Exchange exchange, UndertowEndpoint endpoint) {_        _        String uri = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_URI)__        if (uri == null) {_            uri = endpoint.getHttpURI().toASCIIString()__        }__        _        try {_            uri = exchange.getContext().resolvePropertyPlaceholders(uri)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uri, exchange, e)__        }__        _        String path = exchange.getIn().getHeader(Exchange.HTTP_PATH, String.class)__        _        if (path != null) {_            if (path.startsWith("/")) {_                path = path.substring(1)__            }_            if (path.length() > 0) {_                _                _                if (!uri.endsWith("/")) {_                    uri = uri + "/"__                }_                uri = uri.concat(path)__            }_        }__        _        uri = UnsafeUriCharactersEncoder.encodeHttpURI(uri)___        return uri__    };creates,the,url,to,invoke,param,exchange,the,exchange,param,endpoint,the,endpoint,return,the,url,to,invoke;public,static,string,create,url,exchange,exchange,undertow,endpoint,endpoint,string,uri,string,exchange,get,in,remove,header,exchange,if,uri,null,uri,endpoint,get,http,uri,to,asciistring,try,uri,exchange,get,context,resolve,property,placeholders,uri,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,exchange,e,string,path,exchange,get,in,get,header,exchange,string,class,if,path,null,if,path,starts,with,path,path,substring,1,if,path,length,0,if,uri,ends,with,uri,uri,uri,uri,concat,path,uri,unsafe,uri,characters,encoder,encode,http,uri,uri,return,uri
UndertowHelper -> public static String createURL(Exchange exchange, UndertowEndpoint endpoint);1505925729;Creates the URL to invoke.__@param exchange the exchange_@param endpoint the endpoint_@return the URL to invoke;public static String createURL(Exchange exchange, UndertowEndpoint endpoint) {_        _        String uri = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_URI)__        if (uri == null) {_            uri = endpoint.getHttpURI().toASCIIString()__        }__        _        try {_            uri = exchange.getContext().resolvePropertyPlaceholders(uri)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uri, exchange, e)__        }__        _        String path = exchange.getIn().getHeader(Exchange.HTTP_PATH, String.class)__        _        if (path != null) {_            if (path.startsWith("/")) {_                path = path.substring(1)__            }_            if (path.length() > 0) {_                _                _                if (!uri.endsWith("/")) {_                    uri = uri + "/"__                }_                uri = uri.concat(path)__            }_        }__        _        uri = UnsafeUriCharactersEncoder.encodeHttpURI(uri)___        return uri__    };creates,the,url,to,invoke,param,exchange,the,exchange,param,endpoint,the,endpoint,return,the,url,to,invoke;public,static,string,create,url,exchange,exchange,undertow,endpoint,endpoint,string,uri,string,exchange,get,in,remove,header,exchange,if,uri,null,uri,endpoint,get,http,uri,to,asciistring,try,uri,exchange,get,context,resolve,property,placeholders,uri,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,exchange,e,string,path,exchange,get,in,get,header,exchange,string,class,if,path,null,if,path,starts,with,path,path,substring,1,if,path,length,0,if,uri,ends,with,uri,uri,uri,uri,concat,path,uri,unsafe,uri,characters,encoder,encode,http,uri,uri,return,uri
UndertowHelper -> public static String createURL(Exchange exchange, UndertowEndpoint endpoint);1524063209;Creates the URL to invoke.__@param exchange the exchange_@param endpoint the endpoint_@return the URL to invoke;public static String createURL(Exchange exchange, UndertowEndpoint endpoint) {_        _        String uri = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_URI)__        if (uri == null) {_            uri = endpoint.getHttpURI().toASCIIString()__        }__        _        try {_            uri = exchange.getContext().resolvePropertyPlaceholders(uri)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uri, exchange, e)__        }__        _        String path = exchange.getIn().getHeader(Exchange.HTTP_PATH, String.class)__        _        if (path != null) {_            if (path.startsWith("/")) {_                path = path.substring(1)__            }_            if (path.length() > 0) {_                _                _                if (!uri.endsWith("/")) {_                    uri = uri + "/"__                }_                uri = uri.concat(path)__            }_        }__        _        uri = UnsafeUriCharactersEncoder.encodeHttpURI(uri)___        return uri__    };creates,the,url,to,invoke,param,exchange,the,exchange,param,endpoint,the,endpoint,return,the,url,to,invoke;public,static,string,create,url,exchange,exchange,undertow,endpoint,endpoint,string,uri,string,exchange,get,in,remove,header,exchange,if,uri,null,uri,endpoint,get,http,uri,to,asciistring,try,uri,exchange,get,context,resolve,property,placeholders,uri,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,exchange,e,string,path,exchange,get,in,get,header,exchange,string,class,if,path,null,if,path,starts,with,path,path,substring,1,if,path,length,0,if,uri,ends,with,uri,uri,uri,uri,concat,path,uri,unsafe,uri,characters,encoder,encode,http,uri,uri,return,uri
