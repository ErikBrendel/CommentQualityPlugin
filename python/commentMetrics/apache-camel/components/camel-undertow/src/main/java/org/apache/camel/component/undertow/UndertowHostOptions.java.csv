commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public Integer getWorkerThreads() {     return workerThreads. }
false;public;1;3;;public void setWorkerThreads(Integer workerThreads) {     this.workerThreads = workerThreads. }
false;public;0;3;;public Integer getIoThreads() {     return ioThreads. }
false;public;1;3;;public void setIoThreads(Integer ioThreads) {     this.ioThreads = ioThreads. }
false;public;0;3;;public Integer getBufferSize() {     return bufferSize. }
false;public;1;3;;public void setBufferSize(Integer bufferSize) {     this.bufferSize = bufferSize. }
false;public;0;3;;public Boolean getDirectBuffers() {     return directBuffers. }
false;public;1;3;;public void setDirectBuffers(Boolean directBuffers) {     this.directBuffers = directBuffers. }
false;public;0;3;;public Boolean getHttp2Enabled() {     return http2Enabled. }
false;public;1;3;;public void setHttp2Enabled(Boolean http2Enabled) {     this.http2Enabled = http2Enabled. }
false;public;0;11;;@Override public String toString() {     final StringBuilder sb = new StringBuilder("UndertowHostOptions{").     sb.append("workerThreads=").append(workerThreads).     sb.append(", ioThreads=").append(ioThreads).     sb.append(", bufferSize=").append(bufferSize).     sb.append(", directBuffers=").append(directBuffers).     sb.append(", http2Enabled=").append(http2Enabled).     sb.append('}').     return sb.toString(). }
