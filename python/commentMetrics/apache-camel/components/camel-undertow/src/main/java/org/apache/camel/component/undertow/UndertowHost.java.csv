# id;timestamp;commentText;codeText;commentWords;codeWords
UndertowHost -> void unregisterHandler(HttpHandlerRegistrationInfo registrationInfo)_;1460180620;Unregister a handler with the given {@link HttpHandlerRegistrationInfo};void unregisterHandler(HttpHandlerRegistrationInfo registrationInfo)_;unregister,a,handler,with,the,given,link,http,handler,registration,info;void,unregister,handler,http,handler,registration,info,registration,info
UndertowHost -> void unregisterHandler(HttpHandlerRegistrationInfo registrationInfo)_;1513161172;Unregister a handler with the given {@link HttpHandlerRegistrationInfo}. Note that if_{@link #registerHandler(HttpHandlerRegistrationInfo, HttpHandler)} was successfully invoked multiple times for an_equivalent {@link HttpHandlerRegistrationInfo} then {@link #unregisterHandler(HttpHandlerRegistrationInfo)} must_be called the same number of times to unregister the associated handler completely.;void unregisterHandler(HttpHandlerRegistrationInfo registrationInfo)_;unregister,a,handler,with,the,given,link,http,handler,registration,info,note,that,if,link,register,handler,http,handler,registration,info,http,handler,was,successfully,invoked,multiple,times,for,an,equivalent,link,http,handler,registration,info,then,link,unregister,handler,http,handler,registration,info,must,be,called,the,same,number,of,times,to,unregister,the,associated,handler,completely;void,unregister,handler,http,handler,registration,info,registration,info
UndertowHost -> void unregisterHandler(HttpHandlerRegistrationInfo registrationInfo)_;1537290824;Unregister a handler with the given {@link HttpHandlerRegistrationInfo}. Note that if_{@link #registerHandler(HttpHandlerRegistrationInfo, HttpHandler)} was successfully invoked multiple times for an_equivalent {@link HttpHandlerRegistrationInfo} then {@link #unregisterHandler(HttpHandlerRegistrationInfo)} must_be called the same number of times to unregister the associated handler completely.;void unregisterHandler(HttpHandlerRegistrationInfo registrationInfo)_;unregister,a,handler,with,the,given,link,http,handler,registration,info,note,that,if,link,register,handler,http,handler,registration,info,http,handler,was,successfully,invoked,multiple,times,for,an,equivalent,link,http,handler,registration,info,then,link,unregister,handler,http,handler,registration,info,must,be,called,the,same,number,of,times,to,unregister,the,associated,handler,completely;void,unregister,handler,http,handler,registration,info,registration,info
UndertowHost -> HttpHandler registerHandler(HttpHandlerRegistrationInfo registrationInfo, HttpHandler handler)_;1513161172;Register a handler with the given {@link HttpHandlerRegistrationInfo}. Note that for some kinds of handlers (most_notably {@link CamelWebSocketHandler}), it is legal to call this method multiple times with equal_{@link HttpHandlerRegistrationInfo} and {@link HttpHandler}. In such cases the returned {@link HttpHandler} may_differ from the passed {@link HttpHandler} and the returned instance is the effectively registered one for the_given {@link HttpHandlerRegistrationInfo}.__@param registrationInfo_the {@link HttpHandlerRegistrationInfo} related to {@code handler}_@param handler_the {@link HttpHandler} to register_@return the given {@code handler} or a different {@link HttpHandler} that has been registered with the given_{@link HttpHandlerRegistrationInfo} earlier.;HttpHandler registerHandler(HttpHandlerRegistrationInfo registrationInfo, HttpHandler handler)_;register,a,handler,with,the,given,link,http,handler,registration,info,note,that,for,some,kinds,of,handlers,most,notably,link,camel,web,socket,handler,it,is,legal,to,call,this,method,multiple,times,with,equal,link,http,handler,registration,info,and,link,http,handler,in,such,cases,the,returned,link,http,handler,may,differ,from,the,passed,link,http,handler,and,the,returned,instance,is,the,effectively,registered,one,for,the,given,link,http,handler,registration,info,param,registration,info,the,link,http,handler,registration,info,related,to,code,handler,param,handler,the,link,http,handler,to,register,return,the,given,code,handler,or,a,different,link,http,handler,that,has,been,registered,with,the,given,link,http,handler,registration,info,earlier;http,handler,register,handler,http,handler,registration,info,registration,info,http,handler,handler
UndertowHost -> HttpHandler registerHandler(HttpHandlerRegistrationInfo registrationInfo, HttpHandler handler)_;1537290824;Register a handler with the given {@link HttpHandlerRegistrationInfo}. Note that for some kinds of handlers (most_notably {@link CamelWebSocketHandler}), it is legal to call this method multiple times with equal_{@link HttpHandlerRegistrationInfo} and {@link HttpHandler}. In such cases the returned {@link HttpHandler} may_differ from the passed {@link HttpHandler} and the returned instance is the effectively registered one for the_given {@link HttpHandlerRegistrationInfo}.__@param registrationInfo_the {@link HttpHandlerRegistrationInfo} related to {@code handler}_@param handler_the {@link HttpHandler} to register_@return the given {@code handler} or a different {@link HttpHandler} that has been registered with the given_{@link HttpHandlerRegistrationInfo} earlier.;HttpHandler registerHandler(HttpHandlerRegistrationInfo registrationInfo, HttpHandler handler)_;register,a,handler,with,the,given,link,http,handler,registration,info,note,that,for,some,kinds,of,handlers,most,notably,link,camel,web,socket,handler,it,is,legal,to,call,this,method,multiple,times,with,equal,link,http,handler,registration,info,and,link,http,handler,in,such,cases,the,returned,link,http,handler,may,differ,from,the,passed,link,http,handler,and,the,returned,instance,is,the,effectively,registered,one,for,the,given,link,http,handler,registration,info,param,registration,info,the,link,http,handler,registration,info,related,to,code,handler,param,handler,the,link,http,handler,to,register,return,the,given,code,handler,or,a,different,link,http,handler,that,has,been,registered,with,the,given,link,http,handler,registration,info,earlier;http,handler,register,handler,http,handler,registration,info,registration,info,http,handler,handler
UndertowHost -> void validateEndpointURI(URI httpURI)_;1438237931;Validate whether this host can process the given URI;void validateEndpointURI(URI httpURI)_;validate,whether,this,host,can,process,the,given,uri;void,validate,endpoint,uri,uri,http,uri
UndertowHost -> void validateEndpointURI(URI httpURI)_;1438238292;Validate whether this host can process the given URI;void validateEndpointURI(URI httpURI)_;validate,whether,this,host,can,process,the,given,uri;void,validate,endpoint,uri,uri,http,uri
UndertowHost -> void validateEndpointURI(URI httpURI)_;1438328538;Validate whether this host can process the given URI;void validateEndpointURI(URI httpURI)_;validate,whether,this,host,can,process,the,given,uri;void,validate,endpoint,uri,uri,http,uri
UndertowHost -> void validateEndpointURI(URI httpURI)_;1460180620;Validate whether this host can process the given URI;void validateEndpointURI(URI httpURI)_;validate,whether,this,host,can,process,the,given,uri;void,validate,endpoint,uri,uri,http,uri
UndertowHost -> void validateEndpointURI(URI httpURI)_;1513161172;Validate whether this host can process the given URI;void validateEndpointURI(URI httpURI)_;validate,whether,this,host,can,process,the,given,uri;void,validate,endpoint,uri,uri,http,uri
UndertowHost -> void validateEndpointURI(URI httpURI)_;1537290824;Validate whether this host can process the given URI;void validateEndpointURI(URI httpURI)_;validate,whether,this,host,can,process,the,given,uri;void,validate,endpoint,uri,uri,http,uri
UndertowHost -> void registerHandler(String path, HttpHandler handler)_;1438237931;register a handler on the given path;void registerHandler(String path, HttpHandler handler)_;register,a,handler,on,the,given,path;void,register,handler,string,path,http,handler,handler
UndertowHost -> void registerHandler(String path, HttpHandler handler)_;1438238292;register a handler on the given path;void registerHandler(String path, HttpHandler handler)_;register,a,handler,on,the,given,path;void,register,handler,string,path,http,handler,handler
UndertowHost -> void registerHandler(String path, HttpHandler handler)_;1438328538;Register a handler on the given path;void registerHandler(String path, HttpHandler handler)_;register,a,handler,on,the,given,path;void,register,handler,string,path,http,handler,handler
