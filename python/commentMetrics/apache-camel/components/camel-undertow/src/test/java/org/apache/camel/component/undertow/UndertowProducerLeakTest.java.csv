commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void testLeak() throws Exception {     getMockEndpoint("mock:result").expectedMinimumMessageCount(50).     assertMockEndpointsSatisfied(2, TimeUnit.MINUTES). }
false;public;0;7;;@Override public void configure() throws Exception {     from("undertow:http://localhost:{{port}}/test").to("log:undertow?showAll=true").to("mock:result").     from("timer:foo?period=100").transform(constant("hello world")).to("undertow:http://localhost:{{port}}/test"). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("undertow:http://localhost:{{port}}/test").to("log:undertow?showAll=true").to("mock:result").             from("timer:foo?period=100").transform(constant("hello world")).to("undertow:http://localhost:{{port}}/test").         }     }. }
