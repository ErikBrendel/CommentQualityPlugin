commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;@Test public void testHttp500Error() throws Exception {     getMockEndpoint("mock:input").expectedBodiesReceived("Hello World").     try {         template.requestBody("http://localhost:{{port}}/foo", "Hello World", String.class).         fail("Should have failed").     } catch (CamelExecutionException e) {     }     assertMockEndpointsSatisfied(). }
false;public;0;8;;@Override public void configure() throws Exception {     from("undertow:http://localhost:{{port}}/foo").to("mock:input").setHeader(Exchange.HTTP_RESPONSE_CODE, constant(500)).setBody().constant("Camel cannot do this"). }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("undertow:http://localhost:{{port}}/foo").to("mock:input").setHeader(Exchange.HTTP_RESPONSE_CODE, constant(500)).setBody().constant("Camel cannot do this").         }     }. }
