commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;public void process(Exchange exchange) throws Exception {     exchange.getIn().setBody("b1=x&b2=y").     exchange.getIn().setHeader("content-type", "application/x-www-form-urlencoded").     exchange.getIn().setHeader(Exchange.HTTP_METHOD, HttpMethods.POST). }
false;public;0;15;;@Test public void testSendToUndertow() throws Exception {     Exchange exchange = template.request("http://localhost:{{port}}/myapp/myservice?query1=a&query2=b", new Processor() {          public void process(Exchange exchange) throws Exception {             exchange.getIn().setBody("b1=x&b2=y").             exchange.getIn().setHeader("content-type", "application/x-www-form-urlencoded").             exchange.getIn().setHeader(Exchange.HTTP_METHOD, HttpMethods.POST).         }     }).     // convert the response to a String     String body = exchange.getOut().getBody(String.class).     assertEquals("Request message is OK", body). }
false;public;1;15;;public void process(Exchange exchange) throws Exception {     Map body = exchange.getIn().getBody(Map.class).     // for unit testing make sure we got right message     assertNotNull(body).     assertEquals("x", body.get("b1")).     assertEquals("y", body.get("b2")).     assertEquals("a", exchange.getIn().getHeader("query1")).     assertEquals("b", exchange.getIn().getHeader("query2")).     assertEquals("x", exchange.getIn().getHeader("b1")).     assertEquals("y", exchange.getIn().getHeader("b2")).     // send a response     exchange.getOut().setBody("Request message is OK"). }
false;public;0;19;;public void configure() throws Exception {     from("undertow:http://localhost:{{port}}/myapp/myservice?map").process(new Processor() {          public void process(Exchange exchange) throws Exception {             Map body = exchange.getIn().getBody(Map.class).             // for unit testing make sure we got right message             assertNotNull(body).             assertEquals("x", body.get("b1")).             assertEquals("y", body.get("b2")).             assertEquals("a", exchange.getIn().getHeader("query1")).             assertEquals("b", exchange.getIn().getHeader("query2")).             assertEquals("x", exchange.getIn().getHeader("b1")).             assertEquals("y", exchange.getIn().getHeader("b2")).             // send a response             exchange.getOut().setBody("Request message is OK").         }     }). }
false;protected;0;24;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("undertow:http://localhost:{{port}}/myapp/myservice?map").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     Map body = exchange.getIn().getBody(Map.class).                     // for unit testing make sure we got right message                     assertNotNull(body).                     assertEquals("x", body.get("b1")).                     assertEquals("y", body.get("b2")).                     assertEquals("a", exchange.getIn().getHeader("query1")).                     assertEquals("b", exchange.getIn().getHeader("query2")).                     assertEquals("x", exchange.getIn().getHeader("b1")).                     assertEquals("y", exchange.getIn().getHeader("b2")).                     // send a response                     exchange.getOut().setBody("Request message is OK").                 }             }).         }     }. }
