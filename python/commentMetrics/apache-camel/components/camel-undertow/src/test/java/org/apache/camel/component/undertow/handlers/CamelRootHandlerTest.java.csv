commented;modifiers;parameterAmount;loc;comment;code
false;public;0;30;;@Test public void httpAndWsUnssupportedForTheSamePath() {     final CamelRootHandler root = new CamelRootHandler(DEFAULT_HANDLER).     final RedirectHandler httpHandler = new RedirectHandler("http://whereever").     Assert.assertTrue(root.isEmpty()).     root.add("/app1", null, false, httpHandler).     Assert.assertFalse(root.isEmpty()).     try {         root.add("/app1", null, false, new CamelWebSocketHandler()).         Assert.fail(IllegalArgumentException.class.getName() + " expected").     } catch (IllegalArgumentException expected) {     }     root.remove("/app1", null, false).     Assert.assertTrue(root.isEmpty()).     /* now the other way round: register wsHandler and try to register httpHandler for the same path */     root.add("/app2", null, false, new CamelWebSocketHandler()).     try {         root.add("/app2", null, false, httpHandler).         Assert.fail(IllegalArgumentException.class.getName() + " expected").     } catch (IllegalArgumentException expected) {     } }
false;public;0;20;;@Test public void countWsHandlerInstances() {     final CamelRootHandler root = new CamelRootHandler(DEFAULT_HANDLER).     Assert.assertTrue(root.isEmpty()).     root.add("/app1", null, false, new CamelWebSocketHandler()).     Assert.assertFalse(root.isEmpty()).     /* registering twice must work */     root.add("/app1", null, false, new CamelWebSocketHandler()).     Assert.assertFalse(root.isEmpty()).     /* we have to remove twice for the root to become empty */     root.remove("/app1", null, false).     Assert.assertFalse(root.isEmpty()).     root.remove("/app1", null, false).     Assert.assertTrue(root.isEmpty()). }
