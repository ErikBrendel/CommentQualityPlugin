commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testUndertowPojoInOut() throws Exception {     String body = "{\"id\": 123, \"name\": \"Donald Duck\"}".     String out = template.requestBody("undertow:http://localhost:{{port}}/users/lives", body, String.class).     assertNotNull(out).     assertEquals("{\"iso\":\"EN\",\"country\":\"England\"}", out). }
false;public;0;7;;@Test public void testUndertowGetRequest() throws Exception {     String out = template.requestBody("undertow:http://localhost:{{port}}/users/lives", null, String.class).     assertNotNull(out).     assertEquals("{\"iso\":\"EN\",\"country\":\"England\"}", out). }
false;public;0;21;;@Override public void configure() throws Exception {     // configure to use undertow on localhost with the given port     // and enable auto binding mode     restConfiguration().component("undertow").host("localhost").port(getPort()).bindingMode(RestBindingMode.auto).     // use the rest DSL to define the rest services     rest("/users/").get("lives").to("direct:start").post("lives").type(UserPojo.class).outType(CountryPojo.class).route().bean(new UserService(), "livesWhere").     CountryPojo country = new CountryPojo().     country.setIso("EN").     country.setCountry("England").     from("direct:start").transform().constant(country). }
false;protected;0;26;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // configure to use undertow on localhost with the given port             // and enable auto binding mode             restConfiguration().component("undertow").host("localhost").port(getPort()).bindingMode(RestBindingMode.auto).             // use the rest DSL to define the rest services             rest("/users/").get("lives").to("direct:start").post("lives").type(UserPojo.class).outType(CountryPojo.class).route().bean(new UserService(), "livesWhere").             CountryPojo country = new CountryPojo().             country.setIso("EN").             country.setCountry("England").             from("direct:start").transform().constant(country).         }     }. }
