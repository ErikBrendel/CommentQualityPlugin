commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testConvertDate() throws Exception {     DefaultHttpBinding binding = new DefaultHttpBinding().     Date date = new Date().     Exchange exchange = super.createExchangeWithBody(null).     String value = binding.convertHeaderValueToString(exchange, date).     assertNotEquals(value, date.toString()).     assertEquals(value, DefaultHttpBinding.getHttpDateFormat().format(date)). }
false;public;0;9;;@Test public void testConvertDateTypeConverter() throws Exception {     DefaultHttpBinding binding = new DefaultHttpBinding().     Date date = new Date().     Exchange exchange = super.createExchangeWithBody(null).     exchange.setProperty(DefaultHttpBinding.DATE_LOCALE_CONVERSION, false).     String value = binding.convertHeaderValueToString(exchange, date).     assertEquals(value, date.toString()). }
false;public;0;10;;@Test public void testConvertLocale() throws Exception {     DefaultHttpBinding binding = new DefaultHttpBinding().     Locale l = Locale.SIMPLIFIED_CHINESE.     Exchange exchange = super.createExchangeWithBody(null).     String value = binding.convertHeaderValueToString(exchange, l).     assertNotEquals(value, l.toString()).     assertEquals("zh-CN", value). }
false;public;0;9;;@Test public void testConvertLocaleTypeConverter() throws Exception {     DefaultHttpBinding binding = new DefaultHttpBinding().     Locale l = Locale.SIMPLIFIED_CHINESE.     Exchange exchange = super.createExchangeWithBody(null).     exchange.setProperty(DefaultHttpBinding.DATE_LOCALE_CONVERSION, false).     String value = binding.convertHeaderValueToString(exchange, l).     assertEquals(value, l.toString()). }
