commented;modifiers;parameterAmount;loc;comment;code
true;;3;1;/**  * Store cookies for a HTTP response in the cookie handler  *  * @param exchange the exchange  * @param uri the URI of the called HTTP service  * @param headerMap a map containing the HTTP headers returned by the server  * @throws IOException if the cookies cannot be stored  */ ;/**  * Store cookies for a HTTP response in the cookie handler  *  * @param exchange the exchange  * @param uri the URI of the called HTTP service  * @param headerMap a map containing the HTTP headers returned by the server  * @throws IOException if the cookies cannot be stored  */ void storeCookies(Exchange exchange, URI uri, Map<String, List<String>> headerMap) throws IOException.
true;;2;1;/**  * Create cookie headers from the stored cookies appropriate for a given  * URI.  *  * @param exchange the exchange  * @param uri the URI of the called HTTP service  * @return a map containing the cookie headers that can be set to the HTTP  *         request. Only cookies that are supposed to be sent to the URI in  *         question are considered.  * @throws IOException if the cookies cannot be loaded  */ ;/**  * Create cookie headers from the stored cookies appropriate for a given  * URI.  *  * @param exchange the exchange  * @param uri the URI of the called HTTP service  * @return a map containing the cookie headers that can be set to the HTTP  *         request. Only cookies that are supposed to be sent to the URI in  *         question are considered.  * @throws IOException if the cookies cannot be loaded  */ Map<String, List<String>> loadCookies(Exchange exchange, URI uri) throws IOException.
true;;1;1;/**  * Get the CookieStore. This method can be used if the is using a CookieHandler by itself.  *  * @param exchange the exchange  * @return the CookieStore  */ ;/**  * Get the CookieStore. This method can be used if the is using a CookieHandler by itself.  *  * @param exchange the exchange  * @return the CookieStore  */ CookieStore getCookieStore(Exchange exchange).
true;;1;1;/**  * Define a CookiePolicy for cookies stored by this CookieHandler  *  * @param cookiePolicy the CookiePolicy  */ ;/**  * Define a CookiePolicy for cookies stored by this CookieHandler  *  * @param cookiePolicy the CookiePolicy  */ void setCookiePolicy(CookiePolicy cookiePolicy).
