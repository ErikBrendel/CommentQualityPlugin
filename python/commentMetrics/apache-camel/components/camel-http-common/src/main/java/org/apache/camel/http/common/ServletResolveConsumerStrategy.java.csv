commented;modifiers;parameterAmount;loc;comment;code
true;;2;1;/**  * Resolve the consumer to use.  *  * @param request   the http request  * @param consumers the map of registered consumers  * @return the consumer to service the request, or <tt>null</tt> if no match,  * which sends back a {@link javax.servlet.http.HttpServletResponse#SC_NOT_FOUND} to the client.  */ ;/**  * Resolve the consumer to use.  *  * @param request   the http request  * @param consumers the map of registered consumers  * @return the consumer to service the request, or <tt>null</tt> if no match,  * which sends back a {@link javax.servlet.http.HttpServletResponse#SC_NOT_FOUND} to the client.  */ HttpConsumer resolve(HttpServletRequest request, Map<String, HttpConsumer> consumers).
true;;3;1;/**  * Checks if the http request method (GET, POST, etc) would be allow among the registered consumers.  *  * @param request   the http request  * @param method    the http method  * @param consumers the map of registered consumers  * @return <tt>true</tt> if the method is allowed and can be serviced. Otherwise a  * {@link javax.servlet.http.HttpServletResponse#SC_METHOD_NOT_ALLOWED} is returned to the client.  */ ;/**  * Checks if the http request method (GET, POST, etc) would be allow among the registered consumers.  *  * @param request   the http request  * @param method    the http method  * @param consumers the map of registered consumers  * @return <tt>true</tt> if the method is allowed and can be serviced. Otherwise a  * {@link javax.servlet.http.HttpServletResponse#SC_METHOD_NOT_ALLOWED} is returned to the client.  */ boolean isHttpMethodAllowed(HttpServletRequest request, String method, Map<String, HttpConsumer> consumers).
