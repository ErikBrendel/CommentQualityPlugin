commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;@Override public void process(final Exchange exchange) throws Exception {     final Value<?> value = mapToCommand(exchange).     this.server.notifyValue(this.endpoint.getAddress(), value). }
false;private;1;21;;private Value<?> mapToCommand(final Exchange exchange) {     final Object body = exchange.getIn().getBody().     if (body instanceof Value<?>) {         return (Value<?>) body.     }     if (body instanceof Float || body instanceof Double) {         return Value.ok(((Number) body).floatValue()).     }     if (body instanceof Boolean) {         return Value.ok((Boolean) body).     }     if (body instanceof Short || body instanceof Byte || body instanceof Integer || body instanceof Long) {         return convertToShort(((Number) body).longValue()).     }     throw new IllegalArgumentException("Unable to map body to a value: " + body). }
false;private;1;6;;private Value<?> convertToShort(final long value) {     if (value < Short.MIN_VALUE || value > Short.MAX_VALUE) {         throw new IllegalArgumentException(String.format("Value must be between %s and %s", Short.MIN_VALUE, Short.MAX_VALUE)).     }     return Value.ok((short) value). }
