commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;public void start() throws Exception {     searcher = new LuceneSearcher().     super.doStart(). }
false;public;0;4;;public void stop() throws Exception {     searcher.close().     super.doStop(). }
false;public;1;16;;public void process(Exchange exchange) throws Exception {     Hits hits.     String phrase = exchange.getIn().getHeader("QUERY", String.class).     String returnLuceneDocs = exchange.getIn().getHeader("RETURN_LUCENE_DOCS", String.class).     boolean isReturnLuceneDocs = (returnLuceneDocs != null && returnLuceneDocs.equalsIgnoreCase("true")) ? true : false.     if (phrase != null) {         searcher.open(indexDirectory, analyzer).         hits = searcher.search(phrase, maxNumberOfHits, config.getLuceneVersion(), isReturnLuceneDocs).     } else {         throw new IllegalArgumentException("SearchPhrase for LucenePhraseQuerySearcher not set. Set the Header value: QUERY").     }     exchange.getIn().setBody(hits). }
false;public;0;3;;public LuceneConfiguration getConfig() {     return config. }
false;public;1;3;;public void setConfig(LuceneConfiguration config) {     this.config = config. }
