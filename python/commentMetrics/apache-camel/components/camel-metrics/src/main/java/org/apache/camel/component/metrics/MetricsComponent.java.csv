commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;14;;@Override protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {     if (metricRegistry == null) {         Registry camelRegistry = getCamelContext().getRegistry().         metricRegistry = getOrCreateMetricRegistry(camelRegistry, METRIC_REGISTRY_NAME).     }     String metricsName = getMetricsName(remaining).     MetricsType metricsType = getMetricsType(remaining).     log.debug("Metrics type: {}. name: {}", metricsType, metricsName).     Endpoint endpoint = new MetricsEndpoint(uri, this, metricRegistry, metricsType, metricsName).     setProperties(endpoint, parameters).     return endpoint. }
false;;1;4;;String getMetricsName(String remaining) {     String name = StringHelper.after(remaining, ":").     return name == null ? remaining : name. }
false;;1;13;;MetricsType getMetricsType(String remaining) {     String name = StringHelper.before(remaining, ":").     MetricsType type.     if (name == null) {         type = DEFAULT_METRICS_TYPE.     } else {         type = MetricsType.getByName(name).     }     if (type == null) {         throw new RuntimeCamelException("Unknown metrics type \"" + name + "\"").     }     return type. }
false;;2;10;;MetricRegistry getOrCreateMetricRegistry(Registry camelRegistry, String registryName) {     log.debug("Looking up MetricRegistry from Camel Registry for name \"{}\"", registryName).     MetricRegistry result = getMetricRegistryFromCamelRegistry(camelRegistry, registryName).     if (result == null) {         log.debug("MetricRegistry not found from Camel Registry for name \"{}\"", registryName).         log.info("Creating new default MetricRegistry").         result = createMetricRegistry().     }     return result. }
false;;2;12;;MetricRegistry getMetricRegistryFromCamelRegistry(Registry camelRegistry, String registryName) {     MetricRegistry registry = camelRegistry.lookupByNameAndType(registryName, MetricRegistry.class).     if (registry != null) {         return registry.     } else {         Set<MetricRegistry> registries = camelRegistry.findByType(MetricRegistry.class).         if (registries.size() == 1) {             return registries.iterator().next().         }     }     return null. }
false;;0;11;;MetricRegistry createMetricRegistry() {     MetricRegistry registry = new MetricRegistry().     final Slf4jReporter reporter = Slf4jReporter.forRegistry(registry).outputTo(log).convertRatesTo(TimeUnit.SECONDS).convertDurationsTo(TimeUnit.MILLISECONDS).withLoggingLevel(Slf4jReporter.LoggingLevel.DEBUG).build().     reporter.start(DEFAULT_REPORTING_INTERVAL_SECONDS, TimeUnit.SECONDS).     return registry. }
false;public;0;3;;public MetricRegistry getMetricRegistry() {     return metricRegistry. }
true;public;1;3;/**  * To use a custom configured MetricRegistry.  */ ;/**  * To use a custom configured MetricRegistry.  */ public void setMetricRegistry(MetricRegistry metricRegistry) {     this.metricRegistry = metricRegistry. }
