commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:in").to("metrics:counter:A?increment=512").to("mock:out"). }
false;public;0;13;;@Bean @Override public RouteBuilder route() {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:in").to("metrics:counter:A?increment=512").to("mock:out").         }     }. }
false;public;0;4;;@Bean(name = MetricsComponent.METRIC_REGISTRY_NAME) public MetricRegistry getMetricRegistry() {     return Mockito.mock(MetricRegistry.class). }
false;public;0;15;;@Test public void testMetricsRegistryFromCamelRegistry() throws Exception {     // TODO - 12.05.2014, Lauri - is there any better way to set this up?     MetricRegistry mockRegistry = endpoint.getCamelContext().getRegistry().lookupByNameAndType(MetricsComponent.METRIC_REGISTRY_NAME, MetricRegistry.class).     Counter mockCounter = Mockito.mock(Counter.class).     InOrder inOrder = Mockito.inOrder(mockRegistry, mockCounter).     when(mockRegistry.counter("A")).thenReturn(mockCounter).     endpoint.expectedMessageCount(1).     producer.sendBody(new Object()).     endpoint.assertIsSatisfied().     inOrder.verify(mockRegistry, times(1)).counter("A").     inOrder.verify(mockCounter, times(1)).inc(512L).     inOrder.verifyNoMoreInteractions(). }
