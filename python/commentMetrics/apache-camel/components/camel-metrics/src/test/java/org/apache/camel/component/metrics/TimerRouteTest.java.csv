commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Override public void configure() throws Exception {     from("direct:in-1").to("metrics:timer:A?action=start").to("mock:out").     from("direct:in-2").to("metrics:timer:A").to("mock:out"). }
false;public;0;17;;@Bean @Override public RouteBuilder route() {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:in-1").to("metrics:timer:A?action=start").to("mock:out").             from("direct:in-2").to("metrics:timer:A").to("mock:out").         }     }. }
false;public;0;4;;@Bean(name = METRIC_REGISTRY_NAME) public MetricRegistry getMetricRegistry() {     return Mockito.mock(MetricRegistry.class). }
false;public;0;7;;@Before public void setup() {     // TODO - 12.05.2014, Lauri - is there any better way to set this up?     mockRegistry = endpoint.getCamelContext().getRegistry().lookupByNameAndType(METRIC_REGISTRY_NAME, MetricRegistry.class).     mockTimer = Mockito.mock(Timer.class).     inOrder = Mockito.inOrder(mockRegistry, mockTimer). }
false;public;0;5;;@After public void tearDown() {     endpoint.reset().     reset(mockRegistry, mockTimer). }
false;public;0;12;;@Test public void testOverrideMetricsName() throws Exception {     when(mockRegistry.timer("B")).thenReturn(mockTimer).     Object body = new Object().     endpoint.expectedBodiesReceived(body).     producer1.sendBodyAndHeader(body, HEADER_METRIC_NAME, "B").     endpoint.assertIsSatisfied().     inOrder.verify(mockRegistry, times(1)).timer("B").     inOrder.verify(mockTimer, times(1)).time().     inOrder.verifyNoMoreInteractions(). }
false;public;0;9;;@Test public void testOverrideExistingAction() throws Exception {     when(mockRegistry.timer("A")).thenReturn(mockTimer).     Object body = new Object().     endpoint.expectedBodiesReceived(body).     producer1.sendBodyAndHeader(body, HEADER_TIMER_ACTION, MetricsTimerAction.stop).     endpoint.assertIsSatisfied().     inOrder.verifyNoMoreInteractions(). }
false;public;0;11;;@Test public void testOverrideNoAction() throws Exception {     when(mockRegistry.timer("A")).thenReturn(mockTimer).     Object body = new Object().     endpoint.expectedBodiesReceived(body).     producer2.sendBodyAndHeader(body, HEADER_TIMER_ACTION, MetricsTimerAction.start).     endpoint.assertIsSatisfied().     inOrder.verify(mockRegistry, times(1)).timer("A").     inOrder.verify(mockTimer, times(1)).time().     inOrder.verifyNoMoreInteractions(). }
