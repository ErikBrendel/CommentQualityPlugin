commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Before public void setUp() throws Exception {     profile = new ThreadPoolProfile(METRICS_NAME).     profile.setDefaultProfile(false).     profile.setMaxPoolSize(10).     profile.setMaxQueueSize(1000).     profile.setPoolSize(5).     profile.setKeepAliveTime(5L).     profile.setTimeUnit(TimeUnit.SECONDS).     profile.setRejectedPolicy(ThreadPoolRejectedPolicy.CallerRuns).     instrumentedThreadPoolFactory = new InstrumentedThreadPoolFactory(registry, threadPoolFactory).     inOrder = Mockito.inOrder(registry). }
false;public;0;12;;@Test public void testNewCacheThreadPool() throws Exception {     final ExecutorService executorService = instrumentedThreadPoolFactory.newCachedThreadPool(threadFactory).     assertThat(executorService, is(notNullValue())).     assertThat(executorService, is(instanceOf(InstrumentedExecutorService.class))).     inOrder.verify(registry, times(1)).meter(anyString()).     inOrder.verify(registry, times(1)).counter(anyString()).     inOrder.verify(registry, times(1)).meter(anyString()).     inOrder.verify(registry, times(1)).timer(anyString()).     inOrder.verifyNoMoreInteractions(). }
false;public;0;12;;@Test public void testNewThreadPool() throws Exception {     final ExecutorService executorService = instrumentedThreadPoolFactory.newThreadPool(profile, threadFactory).     assertThat(executorService, is(notNullValue())).     assertThat(executorService, is(instanceOf(InstrumentedExecutorService.class))).     inOrder.verify(registry, times(1)).meter(MetricRegistry.name(METRICS_NAME, new String[] { "submitted" })).     inOrder.verify(registry, times(1)).counter(MetricRegistry.name(METRICS_NAME, new String[] { "running" })).     inOrder.verify(registry, times(1)).meter(MetricRegistry.name(METRICS_NAME, new String[] { "completed" })).     inOrder.verify(registry, times(1)).timer(MetricRegistry.name(METRICS_NAME, new String[] { "duration" })).     inOrder.verifyNoMoreInteractions(). }
false;public;0;17;;@Test public void testNewScheduledThreadPool() throws Exception {     final ScheduledExecutorService scheduledExecutorService = instrumentedThreadPoolFactory.newScheduledThreadPool(profile, threadFactory).     assertThat(scheduledExecutorService, is(notNullValue())).     assertThat(scheduledExecutorService, is(instanceOf(InstrumentedScheduledExecutorService.class))).     inOrder.verify(registry, times(1)).meter(MetricRegistry.name(METRICS_NAME, new String[] { "submitted" })).     inOrder.verify(registry, times(1)).counter(MetricRegistry.name(METRICS_NAME, new String[] { "running" })).     inOrder.verify(registry, times(1)).meter(MetricRegistry.name(METRICS_NAME, new String[] { "completed" })).     inOrder.verify(registry, times(1)).timer(MetricRegistry.name(METRICS_NAME, new String[] { "duration" })).     inOrder.verify(registry, times(1)).meter(MetricRegistry.name(METRICS_NAME, new String[] { "scheduled.once" })).     inOrder.verify(registry, times(1)).meter(MetricRegistry.name(METRICS_NAME, new String[] { "scheduled.repetitively" })).     inOrder.verify(registry, times(1)).counter(MetricRegistry.name(METRICS_NAME, new String[] { "scheduled.overrun" })).     inOrder.verify(registry, times(1)).histogram(MetricRegistry.name(METRICS_NAME, new String[] { "scheduled.percent-of-period" })).     inOrder.verifyNoMoreInteractions(). }
