commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Before public void setUp() throws Exception {     if (!canTest()) {         return.     }     super.setUp(). }
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
false;public;0;5;;@Override public void configure() {     from("direct:start").to("hdfs2:localhost/" + file.toUri() + "?fileSystemType=LOCAL&splitStrategy=BYTES:5,IDLE:1000").     from("hdfs2:localhost/" + file.toUri() + "?initialDelay=2000&fileSystemType=LOCAL&chunkSize=5").to("mock:result"). }
false;public;0;32;;@Test public void testSimpleSplitWriteRead() throws Exception {     if (!canTest()) {         return.     }     final Path file = new Path(new File("target/test/test-camel-simple-write-file").getAbsolutePath()).     context.addRoutes(new RouteBuilder() {          @Override         public void configure() {             from("direct:start").to("hdfs2:localhost/" + file.toUri() + "?fileSystemType=LOCAL&splitStrategy=BYTES:5,IDLE:1000").             from("hdfs2:localhost/" + file.toUri() + "?initialDelay=2000&fileSystemType=LOCAL&chunkSize=5").to("mock:result").         }     }).     context.start().     List<String> expectedResults = new ArrayList<>().     for (int i = 0. i < 10. ++i) {         template.sendBody("direct:start", "CIAO" + i).         expectedResults.add("CIAO" + i).     }     MockEndpoint resultEndpoint = context.getEndpoint("mock:result", MockEndpoint.class).     resultEndpoint.expectedMessageCount(10).     resultEndpoint.assertIsSatisfied().     List<Exchange> exchanges = resultEndpoint.getExchanges().     assertEquals(10, exchanges.size()).     resultEndpoint.expectedBodiesReceivedInAnyOrder(expectedResults). }
false;public;0;14;;@Override @After public void tearDown() throws Exception {     if (!canTest()) {         return.     }     super.tearDown().     Thread.sleep(100).     Configuration conf = new Configuration().     Path dir = new Path("target/test").     FileSystem fs = FileSystem.get(dir.toUri(), conf).     fs.delete(dir, true). }
