commented;modifiers;parameterAmount;loc;comment;code
false;protected,final;3;5;;protected final Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {     HdfsEndpoint hdfsEndpoint = new HdfsEndpoint(uri, this).     setProperties(hdfsEndpoint.getConfig(), parameters).     return hdfsEndpoint. }
false;protected;0;8;;protected void initHdfs() {     try {         URL.setURLStreamHandlerFactory(new FsUrlStreamHandlerFactory()).     } catch (Throwable e) {         // ignore as its most likely already set         LOG.debug("Cannot set URLStreamHandlerFactory due " + e.getMessage() + ". This exception will be ignored.", e).     } }
false;static;0;10;;static Configuration getJAASConfiguration() {     Configuration auth = null.     try {         auth = Configuration.getConfiguration().         LOG.trace("Existing JAAS Configuration {}", auth).     } catch (SecurityException e) {         LOG.trace("Cannot load existing JAAS configuration", e).     }     return auth. }
true;static;1;12;/**  * To use the given configuration for security with JAAS.  */ ;/**  * To use the given configuration for security with JAAS.  */ static void setJAASConfiguration(Configuration auth) {     if (auth != null) {         LOG.trace("Restoring existing JAAS Configuration {}", auth).         try {             Configuration.setConfiguration(auth).         } catch (SecurityException e) {             LOG.trace("Cannot restore JAAS Configuration. This exception is ignored.", e).         }     } else {         LOG.trace("No JAAS Configuration to restore").     } }
