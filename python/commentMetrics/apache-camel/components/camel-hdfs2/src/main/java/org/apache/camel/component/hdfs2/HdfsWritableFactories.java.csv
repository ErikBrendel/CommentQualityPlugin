commented;modifiers;parameterAmount;loc;comment;code
false;;3;1;;Writable create(Object value, TypeConverter typeConverter, Holder<Integer> size).
false;;2;1;;Object read(Writable writable, Holder<Integer> size).
false;public;3;5;;@Override public Writable create(Object value, TypeConverter typeConverter, Holder<Integer> size) {     size.value = 0.     return NullWritable.get(). }
false;public;2;5;;@Override public Object read(Writable writable, Holder<Integer> size) {     size.value = 0.     return null. }
false;public;3;7;;@Override public Writable create(Object value, TypeConverter typeConverter, Holder<Integer> size) {     size.value = SIZE.     ByteWritable writable = new ByteWritable().     writable.set(typeConverter.convertTo(Byte.class, value)).     return writable. }
false;public;2;5;;@Override public Object read(Writable writable, Holder<Integer> size) {     size.value = SIZE.     return ((ByteWritable) writable).get(). }
false;public;3;7;;@Override public Writable create(Object value, TypeConverter typeConverter, Holder<Integer> size) {     size.value = SIZE.     BooleanWritable writable = new BooleanWritable().     writable.set(typeConverter.convertTo(Boolean.class, value)).     return writable. }
false;public;2;5;;@Override public Object read(Writable writable, Holder<Integer> size) {     size.value = SIZE.     return ((BooleanWritable) writable).get(). }
false;public;3;8;;@Override public Writable create(Object value, TypeConverter typeConverter, Holder<Integer> size) {     BytesWritable writable = new BytesWritable().     ByteBuffer bb = (ByteBuffer) value.     writable.set(bb.array(), 0, bb.array().length).     size.value = bb.array().length.     return writable. }
false;public;2;7;;@Override public Object read(Writable writable, Holder<Integer> size) {     size.value = ((BytesWritable) writable).getLength().     ByteBuffer bb = ByteBuffer.allocate(size.value).     bb.put(((BytesWritable) writable).getBytes(), 0, size.value).     return bb. }
false;public;3;7;;@Override public Writable create(Object value, TypeConverter typeConverter, Holder<Integer> size) {     size.value = SIZE.     DoubleWritable writable = new DoubleWritable().     writable.set(typeConverter.convertTo(Double.class, value)).     return writable. }
false;public;2;5;;@Override public Object read(Writable writable, Holder<Integer> size) {     size.value = SIZE.     return ((DoubleWritable) writable).get(). }
false;public;3;7;;@Override public Writable create(Object value, TypeConverter typeConverter, Holder<Integer> size) {     size.value = SIZE.     FloatWritable writable = new FloatWritable().     writable.set(typeConverter.convertTo(Float.class, value)).     return writable. }
false;public;2;5;;@Override public Object read(Writable writable, Holder<Integer> size) {     size.value = SIZE.     return ((FloatWritable) writable).get(). }
false;public;3;7;;@Override public Writable create(Object value, TypeConverter typeConverter, Holder<Integer> size) {     size.value = SIZE.     IntWritable writable = new IntWritable().     writable.set(typeConverter.convertTo(Integer.class, value)).     return writable. }
false;public;2;5;;@Override public Object read(Writable writable, Holder<Integer> size) {     size.value = SIZE.     return ((IntWritable) writable).get(). }
false;public;3;7;;@Override public Writable create(Object value, TypeConverter typeConverter, Holder<Integer> size) {     size.value = SIZE.     LongWritable writable = new LongWritable().     writable.set(typeConverter.convertTo(Long.class, value)).     return writable. }
false;public;2;5;;@Override public Object read(Writable writable, Holder<Integer> size) {     size.value = SIZE.     return ((LongWritable) writable).get(). }
false;public;3;7;;@Override public Writable create(Object value, TypeConverter typeConverter, Holder<Integer> size) {     Text writable = new Text().     writable.set(typeConverter.convertTo(String.class, value)).     size.value = writable.getBytes().length.     return writable. }
false;public;2;5;;@Override public Object read(Writable writable, Holder<Integer> size) {     size.value = ((Text) writable).getLength().     return writable.toString(). }
false;public;3;17;;@Override public Writable create(Object value, TypeConverter typeConverter, Holder<Integer> size) {     InputStream is = null.     try {         is = typeConverter.convertTo(InputStream.class, value).         ByteArrayOutputStream bos = new ByteArrayOutputStream().         IOUtils.copyBytes(is, bos, HdfsConstants.DEFAULT_BUFFERSIZE, false).         BytesWritable writable = new BytesWritable().         writable.set(bos.toByteArray(), 0, bos.toByteArray().length).         size.value = bos.toByteArray().length.         return writable.     } catch (IOException ex) {         throw new RuntimeCamelException(ex).     } finally {         IOHelper.close(is).     } }
false;public;2;5;;@Override public Object read(Writable writable, Holder<Integer> size) {     size.value = 0.     return null. }
