# id;timestamp;commentText;codeText;commentWords;codeWords
HdfsInputStream -> public final long next(Holder<Object> key, Holder<Object> value);1425466692;Reads next record/chunk specific to give file type._@param key_@param value_@return number of bytes read. 0 is correct number of bytes (empty file), -1 indicates no record was read;public final long next(Holder<Object> key, Holder<Object> value) {_        long nb = fileType.next(this, key, value)__        _        _        if (nb == 0 && numOfReadBytes.get() > 0) {_            _            return -1__        }_        if (value.value != null) {_            numOfReadBytes.addAndGet(nb)__            numOfReadMessages.incrementAndGet()__            return nb__        }_        return -1__    };reads,next,record,chunk,specific,to,give,file,type,param,key,param,value,return,number,of,bytes,read,0,is,correct,number,of,bytes,empty,file,1,indicates,no,record,was,read;public,final,long,next,holder,object,key,holder,object,value,long,nb,file,type,next,this,key,value,if,nb,0,num,of,read,bytes,get,0,return,1,if,value,value,null,num,of,read,bytes,add,and,get,nb,num,of,read,messages,increment,and,get,return,nb,return,1
HdfsInputStream -> public final long next(Holder<Object> key, Holder<Object> value);1425559030;Reads next record/chunk specific to give file type._@param key_@param value_@return number of bytes read. 0 is correct number of bytes (empty file), -1 indicates no record was read;public final long next(Holder<Object> key, Holder<Object> value) {_        long nb = fileType.next(this, key, value)__        _        _        if (nb == 0 && numOfReadBytes.get() > 0) {_            _            return -1__        }_        if (value.value != null) {_            numOfReadBytes.addAndGet(nb)__            numOfReadMessages.incrementAndGet()__            return nb__        }_        return -1__    };reads,next,record,chunk,specific,to,give,file,type,param,key,param,value,return,number,of,bytes,read,0,is,correct,number,of,bytes,empty,file,1,indicates,no,record,was,read;public,final,long,next,holder,object,key,holder,object,value,long,nb,file,type,next,this,key,value,if,nb,0,num,of,read,bytes,get,0,return,1,if,value,value,null,num,of,read,bytes,add,and,get,nb,num,of,read,messages,increment,and,get,return,nb,return,1
HdfsInputStream -> public final long next(Holder<Object> key, Holder<Object> value);1425580277;Reads next record/chunk specific to give file type._@param key_@param value_@return number of bytes read. 0 is correct number of bytes (empty file), -1 indicates no record was read;public final long next(Holder<Object> key, Holder<Object> value) {_        long nb = fileType.next(this, key, value)__        _        _        if (nb == 0 && numOfReadMessages.get() > 0) {_            _            return -1__        }_        if (value.value != null) {_            numOfReadBytes.addAndGet(nb)__            numOfReadMessages.incrementAndGet()__            return nb__        }_        return -1__    };reads,next,record,chunk,specific,to,give,file,type,param,key,param,value,return,number,of,bytes,read,0,is,correct,number,of,bytes,empty,file,1,indicates,no,record,was,read;public,final,long,next,holder,object,key,holder,object,value,long,nb,file,type,next,this,key,value,if,nb,0,num,of,read,messages,get,0,return,1,if,value,value,null,num,of,read,bytes,add,and,get,nb,num,of,read,messages,increment,and,get,return,nb,return,1
