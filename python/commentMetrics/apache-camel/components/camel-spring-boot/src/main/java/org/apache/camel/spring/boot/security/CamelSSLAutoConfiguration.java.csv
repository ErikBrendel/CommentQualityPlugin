commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;@Bean public GlobalSSLContextParametersSupplier sslContextParametersSupplier(CamelSSLConfigurationProperties properties) {     final SSLContextParameters config = properties.getConfig() != null ? properties.getConfig() : new SSLContextParameters().     return () -> config. }
false;public;2;11;;@Override public ConditionOutcome getMatchOutcome(ConditionContext context, AnnotatedTypeMetadata annotatedTypeMetadata) {     Binder binder = Binder.get(context.getEnvironment()).     Map<String, Object> sslProperties = binder.bind("camel.ssl.config", Bindable.mapOf(String.class, Object.class)).orElse(Collections.emptyMap()).     ConditionMessage.Builder message = ConditionMessage.forCondition("camel.ssl.config").     if (sslProperties.size() > 0) {         return ConditionOutcome.match(message.because("enabled")).     }     return ConditionOutcome.noMatch(message.because("not enabled")). }
