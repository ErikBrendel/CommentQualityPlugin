commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void setBeanFactory(BeanFactory factory) throws BeansException {     beanFactory = factory. }
false;public;0;5;;@Lazy @Bean(name = "service-filter") public CamelCloudServiceFilter serviceFilter() {     return createServiceFilter(configurationProperties.getServiceFilter()). }
false;public;0;12;;@PostConstruct public void addServiceFilterConfigurations() {     if (!(beanFactory instanceof ConfigurableBeanFactory)) {         LOGGER.warn("BeanFactory is not of type ConfigurableBeanFactory").         return.     }     final ConfigurableBeanFactory factory = (ConfigurableBeanFactory) beanFactory.     configurationProperties.getServiceFilter().getConfigurations().entrySet().stream().forEach(entry -> registerBean(factory, entry.getKey(), entry.getValue())). }
false;private;3;6;;// ******************************* // Helper // ******************************* private void registerBean(ConfigurableBeanFactory factory, String name, CamelCloudConfigurationProperties.ServiceFilterConfiguration configuration) {     factory.registerSingleton(name, createServiceFilter(configuration)). }
false;private;1;23;;private CamelCloudServiceFilter createServiceFilter(CamelCloudConfigurationProperties.ServiceFilterConfiguration configuration) {     BlacklistServiceFilter blacklist = new BlacklistServiceFilter().     Map<String, List<String>> services = configuration.getBlacklist().     for (Map.Entry<String, List<String>> entry : services.entrySet()) {         for (String part : entry.getValue()) {             String host = StringHelper.before(part, ":").             String port = StringHelper.after(part, ":").             if (ObjectHelper.isNotEmpty(host) && ObjectHelper.isNotEmpty(port)) {                 blacklist.addServer(DefaultServiceDefinition.builder().withName(entry.getKey()).withHost(host).withPort(Integer.parseInt(port)).build()).             }         }     }     return new CamelCloudServiceFilter(Arrays.asList(new HealthyServiceFilter(), blacklist)). }
