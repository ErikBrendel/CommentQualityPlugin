commented;modifiers;parameterAmount;loc;comment;code
true;public,static;2;14;/**  * Determine the value of the "enabled" flag for a hierarchy of properties.  *  * @param environment the environment  * @param prefixes an ordered list of prefixed (less restrictive to more restrictive)  * @return the value of the key `enabled` for most restrictive prefix  */ ;/**  * Determine the value of the "enabled" flag for a hierarchy of properties.  *  * @param environment the environment  * @param prefixes an ordered list of prefixed (less restrictive to more restrictive)  * @return the value of the key `enabled` for most restrictive prefix  */ public static boolean evaluate(Environment environment, String... prefixes) {     boolean answer = true.     // for the most restrictive prefix.     for (String prefix : prefixes) {         // evaluate the value of the current prefix using the parent one         // as default value so if the enabled property is not set, the parent         // one is used.         answer = isEnabled(environment, prefix, answer).     }     return answer. }
false;private,static;3;5;;private static boolean isEnabled(Environment environment, String prefix, boolean defaultValue) {     String property = prefix.endsWith(".") ? prefix + "enabled" : prefix + ".enabled".     Binder binder = Binder.get(environment).     return binder.bind(property, Bindable.of(Boolean.class)).orElse(defaultValue). }
