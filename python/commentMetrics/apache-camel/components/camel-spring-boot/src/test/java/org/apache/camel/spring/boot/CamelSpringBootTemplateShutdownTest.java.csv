commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Before public void setupApplicationContext() {     applicationContext = new AnnotationConfigApplicationContext(CamelAutoConfiguration.class).     camelContext = applicationContext.getBean(CamelContext.class).     consumerTemplate = applicationContext.getBean(ConsumerTemplate.class).     producerTemplate = applicationContext.getBean(ProducerTemplate.class).     fluentProducerTemplate = applicationContext.getBean(FluentProducerTemplate.class). }
false;public;0;13;;@Test public void shouldStopTemplatesWithCamelShutdown() throws Exception {     assertTrue(((ServiceSupport) consumerTemplate).isStarted()).     assertTrue(((ServiceSupport) producerTemplate).isStarted()).     assertTrue(((ServiceSupport) fluentProducerTemplate).isStarted()).     camelContext.stop().     assertTrue(((ServiceSupport) camelContext).isStopped()).     assertTrue(((ServiceSupport) consumerTemplate).isStopped()).     assertTrue(((ServiceSupport) producerTemplate).isStopped()).     assertTrue(((ServiceSupport) fluentProducerTemplate).isStopped()). }
false;public;0;14;;@Test public void shouldStopTemplatesWithApplicationContextShutdown() throws Exception {     assertTrue(((ServiceSupport) consumerTemplate).isStarted()).     assertTrue(((ServiceSupport) producerTemplate).isStarted()).     assertTrue(((ServiceSupport) fluentProducerTemplate).isStarted()).     applicationContext.close().     assertFalse(applicationContext.isActive()).     assertTrue(((ServiceSupport) camelContext).isStopped()).     assertTrue(((ServiceSupport) consumerTemplate).isStopped()).     assertTrue(((ServiceSupport) producerTemplate).isStopped()).     assertTrue(((ServiceSupport) fluentProducerTemplate).isStopped()). }
