commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Override public void configure() throws Exception {     from("direct:foo").routeId("foo").noAutoStartup().to("mock:result"). }
false;;0;10;;@Bean RouteBuilder routeBuilder() {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:foo").routeId("foo").noAutoStartup().to("mock:result").         }     }. }
false;public;1;4;;@Override public void beforeApplicationStart(CamelContext camelContext) { // noop }
false;public;1;9;;@Override public void afterApplicationStart(CamelContext camelContext) {     // lets start the route     try {         camelContext.getRouteController().startRoute("foo").     } catch (Exception e) {     // ignore     } }
false;public;0;20;;@Bean public CamelContextConfiguration myConfiguration() {     return new CamelContextConfiguration() {          @Override         public void beforeApplicationStart(CamelContext camelContext) {         // noop         }          @Override         public void afterApplicationStart(CamelContext camelContext) {             // lets start the route             try {                 camelContext.getRouteController().startRoute("foo").             } catch (Exception e) {             // ignore             }         }     }. }
false;public;0;7;;@Test public void shouldCustom() throws Exception {     assertNotNull(custom).     // should be started now from the custom camel configuration     assertTrue(camelContext.getRouteController().getRouteStatus("foo").isStarted()). }
