commented;modifiers;parameterAmount;loc;comment;code
false;public;0;30;;@Test public void test() throws Exception {     Assert.assertNotNull(context.getRouteController()).     Assert.assertTrue(context.getRouteController() instanceof SupervisingRouteController).     SupervisingRouteController controller = context.getRouteController().unwrap(SupervisingRouteController.class).     Assert.assertEquals(3, controller.getControlledRoutes().size()).     Assert.assertEquals(2, controller.getInitialDelay().getSeconds()).     // Route foo     BackOff foo = controller.getBackOff("foo").     Assert.assertEquals(1, foo.getDelay().getSeconds()).     Assert.assertEquals(Long.MAX_VALUE, foo.getMaxDelay().toMillis()).     Assert.assertEquals(10L, foo.getMaxAttempts().longValue()).     // Route bar     BackOff bar = controller.getBackOff("bar").     Assert.assertEquals(10, bar.getDelay().getSeconds()).     Assert.assertEquals(Long.MAX_VALUE, bar.getMaxDelay().toMillis()).     Assert.assertEquals(3L, bar.getMaxAttempts().longValue()).     Assert.assertEquals(controller, context.getRoute("foo").getRouteContext().getRouteController()).     Assert.assertEquals(controller, context.getRoute("bar").getRouteContext().getRouteController()).     Assert.assertNull(context.getRoute("timer-unmanaged").getRouteContext().getRouteController()).     Assert.assertNull(context.getRoute("timer-no-autostartup").getRouteContext().getRouteController()).     Assert.assertEquals(ServiceStatus.Stopped, context.getRouteController().getRouteStatus("foo")).     Assert.assertEquals(ServiceStatus.Stopped, context.getRouteController().getRouteStatus("bar")). }
false;public;0;22;;@Override public void configure() throws Exception {     from("timer:foo?period=5s").id("foo").startupOrder(2).to("mock:foo").     from("timer:bar?period=5s").id("bar").startupOrder(1).to("mock:bar").     from("timer:unmanaged?period=5s").id("timer-unmanaged").to("mock:timer-unmanaged").     from("timer:no-autostartup?period=5s").id("timer-no-autostartup").autoStartup(false).to("mock:timer-no-autostartup").     fromF("jetty:http://localhost:%d", PORT).id("jetty").to("mock:jetty"). }
false;public;0;27;;@Bean public RouteBuilder routeBuilder() {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("timer:foo?period=5s").id("foo").startupOrder(2).to("mock:foo").             from("timer:bar?period=5s").id("bar").startupOrder(1).to("mock:bar").             from("timer:unmanaged?period=5s").id("timer-unmanaged").to("mock:timer-unmanaged").             from("timer:no-autostartup?period=5s").id("timer-no-autostartup").autoStartup(false).to("mock:timer-no-autostartup").             fromF("jetty:http://localhost:%d", PORT).id("jetty").to("mock:jetty").         }     }. }
