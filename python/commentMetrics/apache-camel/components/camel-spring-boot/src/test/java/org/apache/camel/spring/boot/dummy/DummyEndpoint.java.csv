commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public DummyComponent getComponent() {     return (DummyComponent) super.getComponent(). }
false;public;0;4;;@Override public Producer createProducer() throws Exception {     throw new UnsupportedOperationException("Cannot produce"). }
false;public;1;7;;@Override public Consumer createConsumer(Processor processor) throws Exception {     DummyConsumer consumer = new DummyConsumer(this, processor).     configureConsumer(consumer).     consumer.setFailOnRestart(failOnRestart).     return consumer. }
false;public;0;4;;@Override public boolean isSingleton() {     return true. }
false;public;0;3;;public boolean isFailOnRestart() {     return failOnRestart. }
false;public;1;3;;public void setFailOnRestart(boolean failOnRestart) {     this.failOnRestart = failOnRestart. }
