commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;14;;@Override protected CamelContext createCamelContext() throws Exception {     // use simple registry to not conflict with jndi used by EJB     CamelContext answer = new DefaultCamelContext(new SimpleRegistry()).     // enlist EJB component using JndiContext     Properties properties = new Properties().     properties.setProperty(Context.INITIAL_CONTEXT_FACTORY, "org.apache.openejb.client.LocalInitialContextFactory").     EjbComponent ejb = answer.getComponent("ejb", EjbComponent.class).     ejb.setProperties(properties).     return answer. }
false;public;0;8;;@Test public void testGreaterViaCamelEjb() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("Hello World").     template.sendBody("direct:start", "World").     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").to("ejb:GreaterImplLocal?method=hello").to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("ejb:GreaterImplLocal?method=hello").to("mock:result").         }     }. }
