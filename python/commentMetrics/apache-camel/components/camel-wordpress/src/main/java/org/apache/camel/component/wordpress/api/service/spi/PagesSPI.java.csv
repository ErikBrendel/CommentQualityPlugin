commented;modifiers;parameterAmount;loc;comment;code
true;;20;8;// @formatter:off ;// @formatter:off @GET @Path("/v{apiVersion}/pages") @Produces(MediaType.APPLICATION_JSON) List<Page> list(@PathParam("apiVersion") String apiVersion, @QueryParam("context") Context context, @QueryParam("page") Integer page, @QueryParam("per_page") Integer perPage, @QueryParam("search") String search, @QueryParam("after") Date after, @QueryParam("author") List<Integer> author, @QueryParam("author_exclude") List<Integer> authorExclude, @QueryParam("before") Date before, @QueryParam("exclude") List<Integer> exclude, @QueryParam("include") List<Integer> include, @QueryParam("menu_order") Integer menuOrder, @QueryParam("offset") List<Integer> offset, @QueryParam("order") Order order, @QueryParam("orderby") PageOrderBy orderBy, @QueryParam("parent") Integer parent, @QueryParam("parent_exclude") Integer parentExclude, @QueryParam("slug") List<String> slug, @QueryParam("status") PublishableStatus status, @QueryParam("filter") String filter).
true;;4;4;// @formatter:off ;// @formatter:off @GET @Path("/v{apiVersion}/pages/{pageId}") @Produces(MediaType.APPLICATION_JSON) Page retrieve(@PathParam("apiVersion") String apiVersion, @PathParam("pageId") int pageId, @QueryParam("context") Context context, @QueryParam("password") String password).
true;;2;5;// @formatter:on ;// @formatter:on @POST @Path("/v{apiVersion}/pages") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) Page create(@PathParam("apiVersion") String apiVersion, Page page).
true;;3;5;// @formatter:off ;// @formatter:off @POST @Path("/v{apiVersion}/pages/{pageId}") @Produces(MediaType.APPLICATION_JSON) @Consumes(MediaType.APPLICATION_JSON) Page update(@PathParam("apiVersion") String apiVersion, @PathParam("pageId") int pageId, Page page).
false;;3;3;;@DELETE @Path("/v{apiVersion}/pages/{pageId}") Page delete(@PathParam("apiVersion") String apiVersion, @PathParam("pageId") int pageId, @QueryParam("force") boolean force).
