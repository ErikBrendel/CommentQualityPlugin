commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected Class<TagsSPI> getSpiType() {     return TagsSPI.class. }
true;public;1;6;// @formatter:off ;// @formatter:off @Override public List<Tag> list(TagSearchCriteria criteria) {     checkNotNull(criteria, "The search criteria must be defined").     return this.getSpi().list(this.getApiVersion(), criteria.getContext(), criteria.getPage(), criteria.getPerPage(), criteria.getSearch(), criteria.getExclude(), criteria.getInclude(), criteria.getOffset(), criteria.getOrder(), criteria.getOrderBy(), criteria.isHideEmpty(), criteria.getPostId(), criteria.getSlug()). }
false;protected;1;4;;// @formatter:on @Override protected Tag doCreate(Tag object) {     return getSpi().create(getApiVersion(), object). }
false;protected;1;4;;@Override protected Tag doDelete(Integer id) {     return getSpi().delete(getApiVersion(), id, false). }
false;protected;2;4;;@Override protected Tag doUpdate(Integer id, Tag object) {     return getSpi().update(getApiVersion(), id, object). }
false;protected;2;4;;@Override protected Tag doRetrieve(Integer entityID, Context context) {     return getSpi().retrieve(getApiVersion(), entityID, context). }
