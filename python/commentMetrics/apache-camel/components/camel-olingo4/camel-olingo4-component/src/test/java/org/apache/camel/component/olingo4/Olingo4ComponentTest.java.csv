# id;timestamp;commentText;codeText;commentWords;codeWords
Olingo4ComponentTest -> @Test     public void testProducerReadNoFilterAlreadySeen() throws Exception;1548683025;Read entity set of the People object_and with no filter already seen, all items_should be present in each message__@throws Exception;@Test_    public void testProducerReadNoFilterAlreadySeen() throws Exception {_        final Map<String, Object> headers = new HashMap<>()__        String endpoint = "direct:read-people-nofilterseen"__        int expectedEntities = 20__        int expectedMsgCount = 3___        for (int i = 0_ i < expectedMsgCount_ ++i) {_            final ClientEntitySet entities = (ClientEntitySet)requestBodyAndHeaders(endpoint, null, headers)__            assertNotNull(entities)__        }__        MockEndpoint mockEndpoint = getMockEndpoint("mock:producer-noalreadyseen")__        mockEndpoint.expectedMessageCount(expectedMsgCount)__        mockEndpoint.assertIsSatisfied()___        for (int i = 0_ i < expectedMsgCount_ ++i) {_            Object body = mockEndpoint.getExchanges().get(i).getIn().getBody()__            assertTrue(body instanceof ClientEntitySet)__            ClientEntitySet set = (ClientEntitySet) body___            _            _            _            assertEquals(expectedEntities, set.getEntities().size())__        }_    };read,entity,set,of,the,people,object,and,with,no,filter,already,seen,all,items,should,be,present,in,each,message,throws,exception;test,public,void,test,producer,read,no,filter,already,seen,throws,exception,final,map,string,object,headers,new,hash,map,string,endpoint,direct,read,people,nofilterseen,int,expected,entities,20,int,expected,msg,count,3,for,int,i,0,i,expected,msg,count,i,final,client,entity,set,entities,client,entity,set,request,body,and,headers,endpoint,null,headers,assert,not,null,entities,mock,endpoint,mock,endpoint,get,mock,endpoint,mock,producer,noalreadyseen,mock,endpoint,expected,message,count,expected,msg,count,mock,endpoint,assert,is,satisfied,for,int,i,0,i,expected,msg,count,i,object,body,mock,endpoint,get,exchanges,get,i,get,in,get,body,assert,true,body,instanceof,client,entity,set,client,entity,set,set,client,entity,set,body,assert,equals,expected,entities,set,get,entities,size
Olingo4ComponentTest -> @Test     public void testProducerReadNoFilterAlreadySeen() throws Exception;1548833678;Read entity set of the People object and with no filter already seen, all_items should be present in each message__@throws Exception;@Test_    public void testProducerReadNoFilterAlreadySeen() throws Exception {_        final Map<String, Object> headers = new HashMap<>()__        String endpoint = "direct:read-people-nofilterseen"__        int expectedEntities = 20__        int expectedMsgCount = 3___        for (int i = 0_ i < expectedMsgCount_ ++i) {_            final ClientEntitySet entities = (ClientEntitySet)requestBodyAndHeaders(endpoint, null, headers)__            assertNotNull(entities)__        }__        MockEndpoint mockEndpoint = getMockEndpoint("mock:producer-noalreadyseen")__        mockEndpoint.expectedMessageCount(expectedMsgCount)__        mockEndpoint.assertIsSatisfied()___        for (int i = 0_ i < expectedMsgCount_ ++i) {_            Object body = mockEndpoint.getExchanges().get(i).getIn().getBody()__            assertTrue(body instanceof ClientEntitySet)__            ClientEntitySet set = (ClientEntitySet)body___            _            _            _            assertEquals(expectedEntities, set.getEntities().size())__        }_    };read,entity,set,of,the,people,object,and,with,no,filter,already,seen,all,items,should,be,present,in,each,message,throws,exception;test,public,void,test,producer,read,no,filter,already,seen,throws,exception,final,map,string,object,headers,new,hash,map,string,endpoint,direct,read,people,nofilterseen,int,expected,entities,20,int,expected,msg,count,3,for,int,i,0,i,expected,msg,count,i,final,client,entity,set,entities,client,entity,set,request,body,and,headers,endpoint,null,headers,assert,not,null,entities,mock,endpoint,mock,endpoint,get,mock,endpoint,mock,producer,noalreadyseen,mock,endpoint,expected,message,count,expected,msg,count,mock,endpoint,assert,is,satisfied,for,int,i,0,i,expected,msg,count,i,object,body,mock,endpoint,get,exchanges,get,i,get,in,get,body,assert,true,body,instanceof,client,entity,set,client,entity,set,set,client,entity,set,body,assert,equals,expected,entities,set,get,entities,size
Olingo4ComponentTest -> @Test     public void testProducerReadNoFilterAlreadySeen() throws Exception;1550651978;Read entity set of the People object and with no filter already seen, all_items should be present in each message__@throws Exception;@Test_    public void testProducerReadNoFilterAlreadySeen() throws Exception {_        final Map<String, Object> headers = new HashMap<>()__        String endpoint = "direct:read-people-nofilterseen"__        int expectedEntities = 20__        int expectedMsgCount = 3___        MockEndpoint mockEndpoint = getMockEndpoint("mock:producer-noalreadyseen")__        mockEndpoint.expectedMessageCount(expectedMsgCount)___        for (int i = 0_ i < expectedMsgCount_ ++i) {_            final ClientEntitySet entities = (ClientEntitySet)requestBodyAndHeaders(endpoint, null, headers)__            assertNotNull(entities)__        }__        mockEndpoint.assertIsSatisfied()___        for (int i = 0_ i < expectedMsgCount_ ++i) {_            Object body = mockEndpoint.getExchanges().get(i).getIn().getBody()__            assertTrue(body instanceof ClientEntitySet)__            ClientEntitySet set = (ClientEntitySet)body___            _            _            _            assertEquals(expectedEntities, set.getEntities().size())__        }_    };read,entity,set,of,the,people,object,and,with,no,filter,already,seen,all,items,should,be,present,in,each,message,throws,exception;test,public,void,test,producer,read,no,filter,already,seen,throws,exception,final,map,string,object,headers,new,hash,map,string,endpoint,direct,read,people,nofilterseen,int,expected,entities,20,int,expected,msg,count,3,mock,endpoint,mock,endpoint,get,mock,endpoint,mock,producer,noalreadyseen,mock,endpoint,expected,message,count,expected,msg,count,for,int,i,0,i,expected,msg,count,i,final,client,entity,set,entities,client,entity,set,request,body,and,headers,endpoint,null,headers,assert,not,null,entities,mock,endpoint,assert,is,satisfied,for,int,i,0,i,expected,msg,count,i,object,body,mock,endpoint,get,exchanges,get,i,get,in,get,body,assert,true,body,instanceof,client,entity,set,client,entity,set,set,client,entity,set,body,assert,equals,expected,entities,set,get,entities,size
Olingo4ComponentTest -> @Test     public void testProducerReadFilterAlreadySeen() throws Exception;1548683025;Read entity set of the People object_and filter already seen items on subsequent exchanges;@Test_    public void testProducerReadFilterAlreadySeen() throws Exception {_        final Map<String, Object> headers = new HashMap<>()__        String endpoint = "direct:read-people-filterseen"__        int expectedEntities = 20__        int expectedMsgCount = 3___        for (int i = 0_ i < expectedMsgCount_ ++i) {_            final ClientEntitySet entities = (ClientEntitySet)requestBodyAndHeaders(endpoint, null, headers)__            assertNotNull(entities)__        }__        MockEndpoint mockEndpoint = getMockEndpoint("mock:producer-alreadyseen")__        mockEndpoint.expectedMessageCount(expectedMsgCount)__        mockEndpoint.assertIsSatisfied()___        for (int i = 0_ i < expectedMsgCount_ ++i) {_            Object body = mockEndpoint.getExchanges().get(i).getIn().getBody()__            assertTrue(body instanceof ClientEntitySet)__            ClientEntitySet set = (ClientEntitySet) body___            if (i == 0) {_                _                _                _                assertEquals(expectedEntities, set.getEntities().size())__            }_            else {_                _                _                _                _                assertEquals(0, set.getEntities().size())__            }_        }_    };read,entity,set,of,the,people,object,and,filter,already,seen,items,on,subsequent,exchanges;test,public,void,test,producer,read,filter,already,seen,throws,exception,final,map,string,object,headers,new,hash,map,string,endpoint,direct,read,people,filterseen,int,expected,entities,20,int,expected,msg,count,3,for,int,i,0,i,expected,msg,count,i,final,client,entity,set,entities,client,entity,set,request,body,and,headers,endpoint,null,headers,assert,not,null,entities,mock,endpoint,mock,endpoint,get,mock,endpoint,mock,producer,alreadyseen,mock,endpoint,expected,message,count,expected,msg,count,mock,endpoint,assert,is,satisfied,for,int,i,0,i,expected,msg,count,i,object,body,mock,endpoint,get,exchanges,get,i,get,in,get,body,assert,true,body,instanceof,client,entity,set,client,entity,set,set,client,entity,set,body,if,i,0,assert,equals,expected,entities,set,get,entities,size,else,assert,equals,0,set,get,entities,size
Olingo4ComponentTest -> @Test     public void testProducerReadFilterAlreadySeen() throws Exception;1548833678;Read entity set of the People object and filter already seen items on_subsequent exchanges;@Test_    public void testProducerReadFilterAlreadySeen() throws Exception {_        final Map<String, Object> headers = new HashMap<>()__        String endpoint = "direct:read-people-filterseen"__        int expectedEntities = 20__        int expectedMsgCount = 3___        for (int i = 0_ i < expectedMsgCount_ ++i) {_            final ClientEntitySet entities = (ClientEntitySet)requestBodyAndHeaders(endpoint, null, headers)__            assertNotNull(entities)__        }__        MockEndpoint mockEndpoint = getMockEndpoint("mock:producer-alreadyseen")__        mockEndpoint.expectedMessageCount(expectedMsgCount)__        mockEndpoint.assertIsSatisfied()___        for (int i = 0_ i < expectedMsgCount_ ++i) {_            Object body = mockEndpoint.getExchanges().get(i).getIn().getBody()__            assertTrue(body instanceof ClientEntitySet)__            ClientEntitySet set = (ClientEntitySet)body___            if (i == 0) {_                _                _                _                assertEquals(expectedEntities, set.getEntities().size())__            } else {_                _                _                _                _                assertEquals(0, set.getEntities().size())__            }_        }_    };read,entity,set,of,the,people,object,and,filter,already,seen,items,on,subsequent,exchanges;test,public,void,test,producer,read,filter,already,seen,throws,exception,final,map,string,object,headers,new,hash,map,string,endpoint,direct,read,people,filterseen,int,expected,entities,20,int,expected,msg,count,3,for,int,i,0,i,expected,msg,count,i,final,client,entity,set,entities,client,entity,set,request,body,and,headers,endpoint,null,headers,assert,not,null,entities,mock,endpoint,mock,endpoint,get,mock,endpoint,mock,producer,alreadyseen,mock,endpoint,expected,message,count,expected,msg,count,mock,endpoint,assert,is,satisfied,for,int,i,0,i,expected,msg,count,i,object,body,mock,endpoint,get,exchanges,get,i,get,in,get,body,assert,true,body,instanceof,client,entity,set,client,entity,set,set,client,entity,set,body,if,i,0,assert,equals,expected,entities,set,get,entities,size,else,assert,equals,0,set,get,entities,size
Olingo4ComponentTest -> @Test     public void testProducerReadFilterAlreadySeen() throws Exception;1550651978;Read entity set of the People object and filter already seen items on_subsequent exchanges;@Test_    public void testProducerReadFilterAlreadySeen() throws Exception {_        final Map<String, Object> headers = new HashMap<>()__        String endpoint = "direct:read-people-filterseen"__        int expectedEntities = 20__        int expectedMsgCount = 3___        MockEndpoint mockEndpoint = getMockEndpoint("mock:producer-alreadyseen")__        mockEndpoint.expectedMessageCount(expectedMsgCount)___        for (int i = 0_ i < expectedMsgCount_ ++i) {_            final ClientEntitySet entities = (ClientEntitySet)requestBodyAndHeaders(endpoint, null, headers)__            assertNotNull(entities)__        }__        mockEndpoint.assertIsSatisfied()___        for (int i = 0_ i < expectedMsgCount_ ++i) {_            Object body = mockEndpoint.getExchanges().get(i).getIn().getBody()__            assertTrue(body instanceof ClientEntitySet)__            ClientEntitySet set = (ClientEntitySet)body___            if (i == 0) {_                _                _                _                assertEquals(expectedEntities, set.getEntities().size())__            } else {_                _                _                _                _                assertEquals(0, set.getEntities().size())__            }_        }_    };read,entity,set,of,the,people,object,and,filter,already,seen,items,on,subsequent,exchanges;test,public,void,test,producer,read,filter,already,seen,throws,exception,final,map,string,object,headers,new,hash,map,string,endpoint,direct,read,people,filterseen,int,expected,entities,20,int,expected,msg,count,3,mock,endpoint,mock,endpoint,get,mock,endpoint,mock,producer,alreadyseen,mock,endpoint,expected,message,count,expected,msg,count,for,int,i,0,i,expected,msg,count,i,final,client,entity,set,entities,client,entity,set,request,body,and,headers,endpoint,null,headers,assert,not,null,entities,mock,endpoint,assert,is,satisfied,for,int,i,0,i,expected,msg,count,i,object,body,mock,endpoint,get,exchanges,get,i,get,in,get,body,assert,true,body,instanceof,client,entity,set,client,entity,set,set,client,entity,set,body,if,i,0,assert,equals,expected,entities,set,get,entities,size,else,assert,equals,0,set,get,entities,size
Olingo4ComponentTest -> @Test     public void testConsumerReadFilterAlreadySeen() throws Exception;1548683025;Read entity set of the People object_and filter already seen items on subsequent exchanges_Use a delay since the mock endpoint does not always get_the correct number of exchanges before being satisfied.;@Test_    public void testConsumerReadFilterAlreadySeen() throws Exception {_        final Map<String, Object> headers = new HashMap<>()__        String endpoint = "olingo4://read/People?filterAlreadySeen=true&consumer.delay=2&consumer.sendEmptyMessageWhenIdle=true"__        int expectedEntities = 20__        final ClientEntitySet entities = (ClientEntitySet)requestBodyAndHeaders(endpoint, null, headers)__        assertNotNull(entities)__        assertEquals(expectedEntities, entities.getEntities().size())___        int expectedMsgCount = 3__        MockEndpoint mockEndpoint = getMockEndpoint("mock:consumer-alreadyseen")__        mockEndpoint.expectedMessageCount(expectedMsgCount)__        mockEndpoint.assertIsSatisfied()___        for (int i = 0_ i < expectedMsgCount_ ++i) {_            Object body = mockEndpoint.getExchanges().get(i).getIn().getBody()___            if (i == 0) {_                _                _                _                assertTrue(body instanceof ClientEntitySet)__                ClientEntitySet set = (ClientEntitySet) body__                assertEquals(expectedEntities, set.getEntities().size())__            }_            else {_                _                _                _                _                assertNull(body)__            }_        }_    };read,entity,set,of,the,people,object,and,filter,already,seen,items,on,subsequent,exchanges,use,a,delay,since,the,mock,endpoint,does,not,always,get,the,correct,number,of,exchanges,before,being,satisfied;test,public,void,test,consumer,read,filter,already,seen,throws,exception,final,map,string,object,headers,new,hash,map,string,endpoint,olingo4,read,people,filter,already,seen,true,consumer,delay,2,consumer,send,empty,message,when,idle,true,int,expected,entities,20,final,client,entity,set,entities,client,entity,set,request,body,and,headers,endpoint,null,headers,assert,not,null,entities,assert,equals,expected,entities,entities,get,entities,size,int,expected,msg,count,3,mock,endpoint,mock,endpoint,get,mock,endpoint,mock,consumer,alreadyseen,mock,endpoint,expected,message,count,expected,msg,count,mock,endpoint,assert,is,satisfied,for,int,i,0,i,expected,msg,count,i,object,body,mock,endpoint,get,exchanges,get,i,get,in,get,body,if,i,0,assert,true,body,instanceof,client,entity,set,client,entity,set,set,client,entity,set,body,assert,equals,expected,entities,set,get,entities,size,else,assert,null,body
Olingo4ComponentTest -> @Test     public void testConsumerReadFilterAlreadySeen() throws Exception;1548833678;Read entity set of the People object and filter already seen items on_subsequent exchanges Use a delay since the mock endpoint does not always_get the correct number of exchanges before being satisfied.;@Test_    public void testConsumerReadFilterAlreadySeen() throws Exception {_        final Map<String, Object> headers = new HashMap<>()__        String endpoint = "olingo4://read/People?filterAlreadySeen=true&consumer.delay=2&consumer.sendEmptyMessageWhenIdle=true"__        int expectedEntities = 20__        final ClientEntitySet entities = (ClientEntitySet)requestBodyAndHeaders(endpoint, null, headers)__        assertNotNull(entities)__        assertEquals(expectedEntities, entities.getEntities().size())___        int expectedMsgCount = 3__        MockEndpoint mockEndpoint = getMockEndpoint("mock:consumer-alreadyseen")__        mockEndpoint.expectedMessageCount(expectedMsgCount)__        mockEndpoint.assertIsSatisfied()___        for (int i = 0_ i < expectedMsgCount_ ++i) {_            Object body = mockEndpoint.getExchanges().get(i).getIn().getBody()___            if (i == 0) {_                _                _                _                assertTrue(body instanceof ClientEntitySet)__                ClientEntitySet set = (ClientEntitySet)body__                assertEquals(expectedEntities, set.getEntities().size())__            } else {_                _                _                _                _                assertNull(body)__            }_        }_    };read,entity,set,of,the,people,object,and,filter,already,seen,items,on,subsequent,exchanges,use,a,delay,since,the,mock,endpoint,does,not,always,get,the,correct,number,of,exchanges,before,being,satisfied;test,public,void,test,consumer,read,filter,already,seen,throws,exception,final,map,string,object,headers,new,hash,map,string,endpoint,olingo4,read,people,filter,already,seen,true,consumer,delay,2,consumer,send,empty,message,when,idle,true,int,expected,entities,20,final,client,entity,set,entities,client,entity,set,request,body,and,headers,endpoint,null,headers,assert,not,null,entities,assert,equals,expected,entities,entities,get,entities,size,int,expected,msg,count,3,mock,endpoint,mock,endpoint,get,mock,endpoint,mock,consumer,alreadyseen,mock,endpoint,expected,message,count,expected,msg,count,mock,endpoint,assert,is,satisfied,for,int,i,0,i,expected,msg,count,i,object,body,mock,endpoint,get,exchanges,get,i,get,in,get,body,if,i,0,assert,true,body,instanceof,client,entity,set,client,entity,set,set,client,entity,set,body,assert,equals,expected,entities,set,get,entities,size,else,assert,null,body
Olingo4ComponentTest -> @Test     public void testConsumerReadFilterAlreadySeen() throws Exception;1550651978;Read entity set of the People object and filter already seen items on_subsequent exchanges Use a delay since the mock endpoint does not always_get the correct number of exchanges before being satisfied.__Note:_- consumer.splitResults is set to false since this ensures the first returned message_contains all the results. This is preferred for the purposes of this test. The default_will mean the first n messages contain the results (where n is the result total) then_subsequent messages will be empty;@Test_    public void testConsumerReadFilterAlreadySeen() throws Exception {_        final Map<String, Object> headers = new HashMap<>()__        String endpoint = "olingo4://read/People?filterAlreadySeen=true&consumer.delay=2&consumer.sendEmptyMessageWhenIdle=true&consumer.splitResult=false"__        int expectedEntities = 20__        int expectedMsgCount = 3__        MockEndpoint mockEndpoint = getMockEndpoint("mock:consumer-alreadyseen")__        mockEndpoint.expectedMessageCount(expectedMsgCount)___        final ClientEntitySet entities = (ClientEntitySet)requestBodyAndHeaders(endpoint, null, headers)__        assertNotNull(entities)__        assertEquals(expectedEntities, entities.getEntities().size())___        mockEndpoint.assertIsSatisfied()___        for (int i = 0_ i < expectedMsgCount_ ++i) {_            Object body = mockEndpoint.getExchanges().get(i).getIn().getBody()___            if (i == 0) {_                _                _                _                assertTrue(body instanceof ClientEntitySet)__                ClientEntitySet set = (ClientEntitySet)body__                assertEquals(expectedEntities, set.getEntities().size())__            } else {_                _                _                _                _                assertNull(body)__            }_        }_    };read,entity,set,of,the,people,object,and,filter,already,seen,items,on,subsequent,exchanges,use,a,delay,since,the,mock,endpoint,does,not,always,get,the,correct,number,of,exchanges,before,being,satisfied,note,consumer,split,results,is,set,to,false,since,this,ensures,the,first,returned,message,contains,all,the,results,this,is,preferred,for,the,purposes,of,this,test,the,default,will,mean,the,first,n,messages,contain,the,results,where,n,is,the,result,total,then,subsequent,messages,will,be,empty;test,public,void,test,consumer,read,filter,already,seen,throws,exception,final,map,string,object,headers,new,hash,map,string,endpoint,olingo4,read,people,filter,already,seen,true,consumer,delay,2,consumer,send,empty,message,when,idle,true,consumer,split,result,false,int,expected,entities,20,int,expected,msg,count,3,mock,endpoint,mock,endpoint,get,mock,endpoint,mock,consumer,alreadyseen,mock,endpoint,expected,message,count,expected,msg,count,final,client,entity,set,entities,client,entity,set,request,body,and,headers,endpoint,null,headers,assert,not,null,entities,assert,equals,expected,entities,entities,get,entities,size,mock,endpoint,assert,is,satisfied,for,int,i,0,i,expected,msg,count,i,object,body,mock,endpoint,get,exchanges,get,i,get,in,get,body,if,i,0,assert,true,body,instanceof,client,entity,set,client,entity,set,set,client,entity,set,body,assert,equals,expected,entities,set,get,entities,size,else,assert,null,body
