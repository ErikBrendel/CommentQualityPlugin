commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;19;;@Override protected CamelContext createCamelContext() throws Exception {     final CamelContext context = super.createCamelContext().     Map<String, Object> options = new HashMap<>().     options.put("serviceUri", getRealServiceUrl(TEST_SERVICE_BASE_URL)).     options.put("contentType", "application/json.charset=utf-8").     final Olingo4Configuration configuration = new Olingo4Configuration().     IntrospectionSupport.setProperties(configuration, options).     // add OlingoComponent to Camel context     final Olingo4Component component = new Olingo4Component(context).     component.setConfiguration(configuration).     context.addComponent("olingo4", component).     return context. }
true;protected;1;12;/*      * Every request to the demo OData 4.0      * (http://services.odata.org/TripPinRESTierService) generates unique      * service URL with postfix like (S(tuivu3up5ygvjzo5fszvnwfv)) for each      * session This method makes request to the base URL and return URL with      * generated postfix      */ ;/*      * Every request to the demo OData 4.0      * (http://services.odata.org/TripPinRESTierService) generates unique      * service URL with postfix like (S(tuivu3up5ygvjzo5fszvnwfv)) for each      * session This method makes request to the base URL and return URL with      * generated postfix      */ @SuppressWarnings("deprecation") protected String getRealServiceUrl(String baseUrl) throws ClientProtocolException, IOException {     CloseableHttpClient httpclient = HttpClients.createDefault().     HttpGet httpGet = new HttpGet(baseUrl).     HttpContext httpContext = new BasicHttpContext().     httpclient.execute(httpGet, httpContext).     HttpUriRequest currentReq = (HttpUriRequest) httpContext.getAttribute(ExecutionContext.HTTP_REQUEST).     HttpHost currentHost = (HttpHost) httpContext.getAttribute(ExecutionContext.HTTP_TARGET_HOST).     String currentUrl = (currentReq.getURI().isAbsolute()) ? currentReq.getURI().toString() : (currentHost.toURI() + currentReq.getURI()).     return currentUrl. }
false;public;0;5;;@Override public boolean isCreateCamelContextPerClass() {     // only create the context once for this class     return true. }
false;protected;3;4;;@SuppressWarnings("unchecked") protected <T> T requestBodyAndHeaders(String endpointUri, Object body, Map<String, Object> headers) throws CamelExecutionException {     return (T) template().requestBodyAndHeaders(endpointUri, body, headers). }
false;protected;2;4;;@SuppressWarnings("unchecked") protected <T> T requestBody(String endpoint, Object body) throws CamelExecutionException {     return (T) template().requestBody(endpoint, body). }
