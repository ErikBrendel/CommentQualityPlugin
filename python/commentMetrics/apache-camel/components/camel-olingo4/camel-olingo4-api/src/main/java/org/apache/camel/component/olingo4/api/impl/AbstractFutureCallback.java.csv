commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;24;;public static HttpStatusCode checkStatus(HttpResponse response) throws ODataException, ODataClientErrorException {     final StatusLine statusLine = response.getStatusLine().     HttpStatusCode httpStatusCode = HttpStatusCode.fromStatusCode(statusLine.getStatusCode()).     if (HttpStatusCode.BAD_REQUEST.getStatusCode() <= httpStatusCode.getStatusCode() && httpStatusCode.getStatusCode() <= NETWORK_CONNECT_TIMEOUT_ERROR) {         if (response.getEntity() != null) {             try {                 final ContentType responseContentType = getContentTypeHeader(response).                 if (responseContentType != null && ODATA_MIME_TYPE_PATTERN.matcher(responseContentType.toContentTypeString()).matches()) {                     final ODataReader reader = ODataClientFactory.getClient().getReader().                     final ODataError error = reader.readError(response.getEntity().getContent(), responseContentType).                     throw new ODataClientErrorException(statusLine, error).                 }             } catch (IOException e) {                 throw new ODataException(e.getMessage(), e).             }         }         throw new ODataException(statusLine.getReasonPhrase()).     }     return httpStatusCode. }
false;public,final;1;18;;@Override public final void completed(HttpResponse result) {     try {         // check response status         checkStatus(result).         onCompleted(result).     } catch (Exception e) {         failed(e).     } finally {         if (result instanceof Closeable) {             try {                 ((Closeable) result).close().             } catch (final IOException ignore) {             }         }     } }
false;protected,abstract;1;1;;protected abstract void onCompleted(HttpResponse result) throws ODataException, IOException.
false;public,final;1;4;;@Override public final void failed(Exception ex) {     responseHandler.onException(ex). }
false;public,final;0;4;;@Override public final void cancelled() {     responseHandler.onCanceled(). }
