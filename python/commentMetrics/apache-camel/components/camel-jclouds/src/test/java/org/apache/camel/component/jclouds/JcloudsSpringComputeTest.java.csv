# id;timestamp;commentText;codeText;commentWords;codeWords
JcloudsSpringComputeTest -> protected Map<String, Object> createHeaders(String imageId, String group);1320504254;Returns a {@Map} with the create headers.__@param imageId The imageId to use for creating the node._@param group   The group to be assigned to the node._@return;protected Map<String, Object> createHeaders(String imageId, String group) {_        Map<String, Object> createHeaders = new HashMap<String, Object>()__        createHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.CREATE_NODE)__        createHeaders.put(JcloudsConstants.IMAGE_ID, imageId)__        createHeaders.put(JcloudsConstants.GROUP, group)__        return createHeaders__    };returns,a,map,with,the,create,headers,param,image,id,the,image,id,to,use,for,creating,the,node,param,group,the,group,to,be,assigned,to,the,node,return;protected,map,string,object,create,headers,string,image,id,string,group,map,string,object,create,headers,new,hash,map,string,object,create,headers,put,jclouds,constants,operation,jclouds,constants,create,headers,put,jclouds,constants,image,id,create,headers,put,jclouds,constants,group,group,return,create,headers
JcloudsSpringComputeTest -> protected Map<String, Object> createHeaders(String imageId, String group);1326392736;Returns a {@Map} with the create headers.__@param imageId The imageId to use for creating the node._@param group   The group to be assigned to the node._@return;protected Map<String, Object> createHeaders(String imageId, String group) {_        Map<String, Object> createHeaders = new HashMap<String, Object>()__        createHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.CREATE_NODE)__        createHeaders.put(JcloudsConstants.IMAGE_ID, imageId)__        createHeaders.put(JcloudsConstants.GROUP, group)__        return createHeaders__    };returns,a,map,with,the,create,headers,param,image,id,the,image,id,to,use,for,creating,the,node,param,group,the,group,to,be,assigned,to,the,node,return;protected,map,string,object,create,headers,string,image,id,string,group,map,string,object,create,headers,new,hash,map,string,object,create,headers,put,jclouds,constants,operation,jclouds,constants,create,headers,put,jclouds,constants,image,id,create,headers,put,jclouds,constants,group,group,return,create,headers
JcloudsSpringComputeTest -> protected Map<String, Object> createHeaders(String imageId, String group);1353141176;Returns a {@Map} with the create headers.__@param imageId The imageId to use for creating the node._@param group   The group to be assigned to the node.;protected Map<String, Object> createHeaders(String imageId, String group) {_        Map<String, Object> createHeaders = new HashMap<String, Object>()__        createHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.CREATE_NODE)__        createHeaders.put(JcloudsConstants.IMAGE_ID, imageId)__        createHeaders.put(JcloudsConstants.GROUP, group)__        return createHeaders__    };returns,a,map,with,the,create,headers,param,image,id,the,image,id,to,use,for,creating,the,node,param,group,the,group,to,be,assigned,to,the,node;protected,map,string,object,create,headers,string,image,id,string,group,map,string,object,create,headers,new,hash,map,string,object,create,headers,put,jclouds,constants,operation,jclouds,constants,create,headers,put,jclouds,constants,image,id,create,headers,put,jclouds,constants,group,group,return,create,headers
JcloudsSpringComputeTest -> protected Map<String, Object> createHeaders(String imageId, String group);1357815620;Returns a {@Map} with the create headers.__@param imageId The imageId to use for creating the node._@param group   The group to be assigned to the node.;protected Map<String, Object> createHeaders(String imageId, String group) {_        Map<String, Object> createHeaders = new HashMap<String, Object>()__        createHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.CREATE_NODE)__        createHeaders.put(JcloudsConstants.IMAGE_ID, imageId)__        createHeaders.put(JcloudsConstants.GROUP, group)__        return createHeaders__    };returns,a,map,with,the,create,headers,param,image,id,the,image,id,to,use,for,creating,the,node,param,group,the,group,to,be,assigned,to,the,node;protected,map,string,object,create,headers,string,image,id,string,group,map,string,object,create,headers,new,hash,map,string,object,create,headers,put,jclouds,constants,operation,jclouds,constants,create,headers,put,jclouds,constants,image,id,create,headers,put,jclouds,constants,group,group,return,create,headers
JcloudsSpringComputeTest -> protected Map<String, Object> createHeaders(String imageId, String group);1357815666;Returns a {@Map} with the create headers.__@param imageId The imageId to use for creating the node._@param group   The group to be assigned to the node.;protected Map<String, Object> createHeaders(String imageId, String group) {_        Map<String, Object> createHeaders = new HashMap<String, Object>()__        createHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.CREATE_NODE)__        createHeaders.put(JcloudsConstants.IMAGE_ID, imageId)__        createHeaders.put(JcloudsConstants.GROUP, group)__        return createHeaders__    };returns,a,map,with,the,create,headers,param,image,id,the,image,id,to,use,for,creating,the,node,param,group,the,group,to,be,assigned,to,the,node;protected,map,string,object,create,headers,string,image,id,string,group,map,string,object,create,headers,new,hash,map,string,object,create,headers,put,jclouds,constants,operation,jclouds,constants,create,headers,put,jclouds,constants,image,id,create,headers,put,jclouds,constants,group,group,return,create,headers
JcloudsSpringComputeTest -> protected Map<String, Object> createHeaders(String imageId, String group);1435496986;Returns a {@Map} with the create headers.__@param imageId The imageId to use for creating the node._@param group   The group to be assigned to the node.;protected Map<String, Object> createHeaders(String imageId, String group) {_        Map<String, Object> createHeaders = new HashMap<String, Object>()__        createHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.CREATE_NODE)__        createHeaders.put(JcloudsConstants.IMAGE_ID, imageId)__        createHeaders.put(JcloudsConstants.GROUP, group)__        return createHeaders__    };returns,a,map,with,the,create,headers,param,image,id,the,image,id,to,use,for,creating,the,node,param,group,the,group,to,be,assigned,to,the,node;protected,map,string,object,create,headers,string,image,id,string,group,map,string,object,create,headers,new,hash,map,string,object,create,headers,put,jclouds,constants,operation,jclouds,constants,create,headers,put,jclouds,constants,image,id,create,headers,put,jclouds,constants,group,group,return,create,headers
JcloudsSpringComputeTest -> protected Map<String, Object> createHeaders(String imageId, String group);1435497606;Returns a {@Map} with the create headers.__@param imageId The imageId to use for creating the node._@param group   The group to be assigned to the node.;protected Map<String, Object> createHeaders(String imageId, String group) {_        Map<String, Object> createHeaders = new HashMap<String, Object>()__        createHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.CREATE_NODE)__        createHeaders.put(JcloudsConstants.IMAGE_ID, imageId)__        createHeaders.put(JcloudsConstants.GROUP, group)__        return createHeaders__    };returns,a,map,with,the,create,headers,param,image,id,the,image,id,to,use,for,creating,the,node,param,group,the,group,to,be,assigned,to,the,node;protected,map,string,object,create,headers,string,image,id,string,group,map,string,object,create,headers,new,hash,map,string,object,create,headers,put,jclouds,constants,operation,jclouds,constants,create,headers,put,jclouds,constants,image,id,create,headers,put,jclouds,constants,group,group,return,create,headers
JcloudsSpringComputeTest -> protected Map<String, Object> createHeaders(String imageId, String group);1435500284;Returns a {@Map} with the create headers.__@param imageId The imageId to use for creating the node._@param group   The group to be assigned to the node.;protected Map<String, Object> createHeaders(String imageId, String group) {_        Map<String, Object> createHeaders = new HashMap<String, Object>()__        createHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.CREATE_NODE)__        createHeaders.put(JcloudsConstants.IMAGE_ID, imageId)__        createHeaders.put(JcloudsConstants.GROUP, group)__        return createHeaders__    };returns,a,map,with,the,create,headers,param,image,id,the,image,id,to,use,for,creating,the,node,param,group,the,group,to,be,assigned,to,the,node;protected,map,string,object,create,headers,string,image,id,string,group,map,string,object,create,headers,new,hash,map,string,object,create,headers,put,jclouds,constants,operation,jclouds,constants,create,headers,put,jclouds,constants,image,id,create,headers,put,jclouds,constants,group,group,return,create,headers
JcloudsSpringComputeTest -> protected Map<String, Object> createHeaders(String imageId, String group);1524001544;Returns a {@Map} with the create headers.__@param imageId The imageId to use for creating the node._@param group   The group to be assigned to the node.;protected Map<String, Object> createHeaders(String imageId, String group) {_        Map<String, Object> createHeaders = new HashMap<>()__        createHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.CREATE_NODE)__        createHeaders.put(JcloudsConstants.IMAGE_ID, imageId)__        createHeaders.put(JcloudsConstants.GROUP, group)__        return createHeaders__    };returns,a,map,with,the,create,headers,param,image,id,the,image,id,to,use,for,creating,the,node,param,group,the,group,to,be,assigned,to,the,node;protected,map,string,object,create,headers,string,image,id,string,group,map,string,object,create,headers,new,hash,map,create,headers,put,jclouds,constants,operation,jclouds,constants,create,headers,put,jclouds,constants,image,id,create,headers,put,jclouds,constants,group,group,return,create,headers
JcloudsSpringComputeTest -> protected Map<String, Object> createHeaders(String imageId, String group);1537290824;Returns a {@Map} with the create headers.__@param imageId The imageId to use for creating the node._@param group   The group to be assigned to the node.;protected Map<String, Object> createHeaders(String imageId, String group) {_        Map<String, Object> createHeaders = new HashMap<>()__        createHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.CREATE_NODE)__        createHeaders.put(JcloudsConstants.IMAGE_ID, imageId)__        createHeaders.put(JcloudsConstants.GROUP, group)__        return createHeaders__    };returns,a,map,with,the,create,headers,param,image,id,the,image,id,to,use,for,creating,the,node,param,group,the,group,to,be,assigned,to,the,node;protected,map,string,object,create,headers,string,image,id,string,group,map,string,object,create,headers,new,hash,map,create,headers,put,jclouds,constants,operation,jclouds,constants,create,headers,put,jclouds,constants,image,id,create,headers,put,jclouds,constants,group,group,return,create,headers
JcloudsSpringComputeTest -> protected Map<String, Object> rebootHeaders(String nodeId, String group);1435496986;Returns a {@Map} with the reboot headers.__@param nodeId The id of the node to reboot._@param group  The group of the node to reboot.;protected Map<String, Object> rebootHeaders(String nodeId, String group) {_        Map<String, Object> rebootHeaders = new HashMap<String, Object>()__        rebootHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.REBOOT_NODE)__        if (nodeId != null) {_        	rebootHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }_        if (group != null) {_        	rebootHeaders.put(JcloudsConstants.GROUP, group)__        }_        return rebootHeaders__    };returns,a,map,with,the,reboot,headers,param,node,id,the,id,of,the,node,to,reboot,param,group,the,group,of,the,node,to,reboot;protected,map,string,object,reboot,headers,string,node,id,string,group,map,string,object,reboot,headers,new,hash,map,string,object,reboot,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,reboot,headers,put,jclouds,constants,node,id,if,group,null,reboot,headers,put,jclouds,constants,group,group,return,reboot,headers
JcloudsSpringComputeTest -> protected Map<String, Object> rebootHeaders(String nodeId, String group);1435497606;Returns a {@Map} with the reboot headers.__@param nodeId The id of the node to reboot._@param group  The group of the node to reboot.;protected Map<String, Object> rebootHeaders(String nodeId, String group) {_        Map<String, Object> rebootHeaders = new HashMap<String, Object>()__        rebootHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.REBOOT_NODE)__        if (nodeId != null) {_        	rebootHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }_        if (group != null) {_        	rebootHeaders.put(JcloudsConstants.GROUP, group)__        }_        return rebootHeaders__    };returns,a,map,with,the,reboot,headers,param,node,id,the,id,of,the,node,to,reboot,param,group,the,group,of,the,node,to,reboot;protected,map,string,object,reboot,headers,string,node,id,string,group,map,string,object,reboot,headers,new,hash,map,string,object,reboot,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,reboot,headers,put,jclouds,constants,node,id,if,group,null,reboot,headers,put,jclouds,constants,group,group,return,reboot,headers
JcloudsSpringComputeTest -> protected Map<String, Object> rebootHeaders(String nodeId, String group);1435500284;Returns a {@Map} with the reboot headers.__@param nodeId The id of the node to reboot._@param group  The group of the node to reboot.;protected Map<String, Object> rebootHeaders(String nodeId, String group) {_        Map<String, Object> rebootHeaders = new HashMap<String, Object>()__        rebootHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.REBOOT_NODE)__        if (nodeId != null) {_            rebootHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }_        if (group != null) {_            rebootHeaders.put(JcloudsConstants.GROUP, group)__        }_        return rebootHeaders__    };returns,a,map,with,the,reboot,headers,param,node,id,the,id,of,the,node,to,reboot,param,group,the,group,of,the,node,to,reboot;protected,map,string,object,reboot,headers,string,node,id,string,group,map,string,object,reboot,headers,new,hash,map,string,object,reboot,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,reboot,headers,put,jclouds,constants,node,id,if,group,null,reboot,headers,put,jclouds,constants,group,group,return,reboot,headers
JcloudsSpringComputeTest -> protected Map<String, Object> rebootHeaders(String nodeId, String group);1524001544;Returns a {@Map} with the reboot headers.__@param nodeId The id of the node to reboot._@param group  The group of the node to reboot.;protected Map<String, Object> rebootHeaders(String nodeId, String group) {_        Map<String, Object> rebootHeaders = new HashMap<>()__        rebootHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.REBOOT_NODE)__        if (nodeId != null) {_            rebootHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }_        if (group != null) {_            rebootHeaders.put(JcloudsConstants.GROUP, group)__        }_        return rebootHeaders__    };returns,a,map,with,the,reboot,headers,param,node,id,the,id,of,the,node,to,reboot,param,group,the,group,of,the,node,to,reboot;protected,map,string,object,reboot,headers,string,node,id,string,group,map,string,object,reboot,headers,new,hash,map,reboot,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,reboot,headers,put,jclouds,constants,node,id,if,group,null,reboot,headers,put,jclouds,constants,group,group,return,reboot,headers
JcloudsSpringComputeTest -> protected Map<String, Object> rebootHeaders(String nodeId, String group);1537290824;Returns a {@Map} with the reboot headers.__@param nodeId The id of the node to reboot._@param group  The group of the node to reboot.;protected Map<String, Object> rebootHeaders(String nodeId, String group) {_        Map<String, Object> rebootHeaders = new HashMap<>()__        rebootHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.REBOOT_NODE)__        if (nodeId != null) {_            rebootHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }_        if (group != null) {_            rebootHeaders.put(JcloudsConstants.GROUP, group)__        }_        return rebootHeaders__    };returns,a,map,with,the,reboot,headers,param,node,id,the,id,of,the,node,to,reboot,param,group,the,group,of,the,node,to,reboot;protected,map,string,object,reboot,headers,string,node,id,string,group,map,string,object,reboot,headers,new,hash,map,reboot,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,reboot,headers,put,jclouds,constants,node,id,if,group,null,reboot,headers,put,jclouds,constants,group,group,return,reboot,headers
JcloudsSpringComputeTest -> protected Map<String, Object> resumeHeaders(String nodeId, String group);1435500284;Returns a {@Map} with the suspend headers.__@param nodeId The id of the node to resume._@param group  The group of the node to resume.;protected Map<String, Object> resumeHeaders(String nodeId, String group) {_        Map<String, Object> rebootHeaders = new HashMap<String, Object>()__        rebootHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.RESUME_NODE)__        if (nodeId != null) {_            rebootHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }_        if (group != null) {_            rebootHeaders.put(JcloudsConstants.GROUP, group)__        }_        return rebootHeaders__    };returns,a,map,with,the,suspend,headers,param,node,id,the,id,of,the,node,to,resume,param,group,the,group,of,the,node,to,resume;protected,map,string,object,resume,headers,string,node,id,string,group,map,string,object,reboot,headers,new,hash,map,string,object,reboot,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,reboot,headers,put,jclouds,constants,node,id,if,group,null,reboot,headers,put,jclouds,constants,group,group,return,reboot,headers
JcloudsSpringComputeTest -> protected Map<String, Object> resumeHeaders(String nodeId, String group);1524001544;Returns a {@Map} with the suspend headers.__@param nodeId The id of the node to resume._@param group  The group of the node to resume.;protected Map<String, Object> resumeHeaders(String nodeId, String group) {_        Map<String, Object> rebootHeaders = new HashMap<>()__        rebootHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.RESUME_NODE)__        if (nodeId != null) {_            rebootHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }_        if (group != null) {_            rebootHeaders.put(JcloudsConstants.GROUP, group)__        }_        return rebootHeaders__    };returns,a,map,with,the,suspend,headers,param,node,id,the,id,of,the,node,to,resume,param,group,the,group,of,the,node,to,resume;protected,map,string,object,resume,headers,string,node,id,string,group,map,string,object,reboot,headers,new,hash,map,reboot,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,reboot,headers,put,jclouds,constants,node,id,if,group,null,reboot,headers,put,jclouds,constants,group,group,return,reboot,headers
JcloudsSpringComputeTest -> protected Map<String, Object> resumeHeaders(String nodeId, String group);1537290824;Returns a {@Map} with the suspend headers.__@param nodeId The id of the node to resume._@param group  The group of the node to resume.;protected Map<String, Object> resumeHeaders(String nodeId, String group) {_        Map<String, Object> rebootHeaders = new HashMap<>()__        rebootHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.RESUME_NODE)__        if (nodeId != null) {_            rebootHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }_        if (group != null) {_            rebootHeaders.put(JcloudsConstants.GROUP, group)__        }_        return rebootHeaders__    };returns,a,map,with,the,suspend,headers,param,node,id,the,id,of,the,node,to,resume,param,group,the,group,of,the,node,to,resume;protected,map,string,object,resume,headers,string,node,id,string,group,map,string,object,reboot,headers,new,hash,map,reboot,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,reboot,headers,put,jclouds,constants,node,id,if,group,null,reboot,headers,put,jclouds,constants,group,group,return,reboot,headers
JcloudsSpringComputeTest -> protected Map<String, Object> destroyHeaders(String nodeId, String group);1320504254;Returns a {@Map} with the destroy headers.__@param nodeId The id of the node to destroy._@param group  The group of the node to destroy._@return;protected Map<String, Object> destroyHeaders(String nodeId, String group) {_        Map<String, Object> destroyHeaders = new HashMap<String, Object>()__        destroyHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.DESTROY_NODE)__        if (nodeId != null) {_            destroyHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }_        if (group != null) {_            destroyHeaders.put(JcloudsConstants.GROUP, group)__        }_        return destroyHeaders__    };returns,a,map,with,the,destroy,headers,param,node,id,the,id,of,the,node,to,destroy,param,group,the,group,of,the,node,to,destroy,return;protected,map,string,object,destroy,headers,string,node,id,string,group,map,string,object,destroy,headers,new,hash,map,string,object,destroy,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,destroy,headers,put,jclouds,constants,node,id,if,group,null,destroy,headers,put,jclouds,constants,group,group,return,destroy,headers
JcloudsSpringComputeTest -> protected Map<String, Object> destroyHeaders(String nodeId, String group);1326392736;Returns a {@Map} with the destroy headers.__@param nodeId The id of the node to destroy._@param group  The group of the node to destroy._@return;protected Map<String, Object> destroyHeaders(String nodeId, String group) {_        Map<String, Object> destroyHeaders = new HashMap<String, Object>()__        destroyHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.DESTROY_NODE)__        if (nodeId != null) {_            destroyHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }_        if (group != null) {_            destroyHeaders.put(JcloudsConstants.GROUP, group)__        }_        return destroyHeaders__    };returns,a,map,with,the,destroy,headers,param,node,id,the,id,of,the,node,to,destroy,param,group,the,group,of,the,node,to,destroy,return;protected,map,string,object,destroy,headers,string,node,id,string,group,map,string,object,destroy,headers,new,hash,map,string,object,destroy,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,destroy,headers,put,jclouds,constants,node,id,if,group,null,destroy,headers,put,jclouds,constants,group,group,return,destroy,headers
JcloudsSpringComputeTest -> protected Map<String, Object> destroyHeaders(String nodeId, String group);1353141176;Returns a {@Map} with the destroy headers.__@param nodeId The id of the node to destroy._@param group  The group of the node to destroy.;protected Map<String, Object> destroyHeaders(String nodeId, String group) {_        Map<String, Object> destroyHeaders = new HashMap<String, Object>()__        destroyHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.DESTROY_NODE)__        if (nodeId != null) {_            destroyHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }_        if (group != null) {_            destroyHeaders.put(JcloudsConstants.GROUP, group)__        }_        return destroyHeaders__    };returns,a,map,with,the,destroy,headers,param,node,id,the,id,of,the,node,to,destroy,param,group,the,group,of,the,node,to,destroy;protected,map,string,object,destroy,headers,string,node,id,string,group,map,string,object,destroy,headers,new,hash,map,string,object,destroy,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,destroy,headers,put,jclouds,constants,node,id,if,group,null,destroy,headers,put,jclouds,constants,group,group,return,destroy,headers
JcloudsSpringComputeTest -> protected Map<String, Object> destroyHeaders(String nodeId, String group);1357815620;Returns a {@Map} with the destroy headers.__@param nodeId The id of the node to destroy._@param group  The group of the node to destroy.;protected Map<String, Object> destroyHeaders(String nodeId, String group) {_        Map<String, Object> destroyHeaders = new HashMap<String, Object>()__        destroyHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.DESTROY_NODE)__        if (nodeId != null) {_            destroyHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }_        if (group != null) {_            destroyHeaders.put(JcloudsConstants.GROUP, group)__        }_        return destroyHeaders__    };returns,a,map,with,the,destroy,headers,param,node,id,the,id,of,the,node,to,destroy,param,group,the,group,of,the,node,to,destroy;protected,map,string,object,destroy,headers,string,node,id,string,group,map,string,object,destroy,headers,new,hash,map,string,object,destroy,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,destroy,headers,put,jclouds,constants,node,id,if,group,null,destroy,headers,put,jclouds,constants,group,group,return,destroy,headers
JcloudsSpringComputeTest -> protected Map<String, Object> destroyHeaders(String nodeId, String group);1357815666;Returns a {@Map} with the destroy headers.__@param nodeId The id of the node to destroy._@param group  The group of the node to destroy.;protected Map<String, Object> destroyHeaders(String nodeId, String group) {_        Map<String, Object> destroyHeaders = new HashMap<String, Object>()__        destroyHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.DESTROY_NODE)__        if (nodeId != null) {_            destroyHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }_        if (group != null) {_            destroyHeaders.put(JcloudsConstants.GROUP, group)__        }_        return destroyHeaders__    };returns,a,map,with,the,destroy,headers,param,node,id,the,id,of,the,node,to,destroy,param,group,the,group,of,the,node,to,destroy;protected,map,string,object,destroy,headers,string,node,id,string,group,map,string,object,destroy,headers,new,hash,map,string,object,destroy,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,destroy,headers,put,jclouds,constants,node,id,if,group,null,destroy,headers,put,jclouds,constants,group,group,return,destroy,headers
JcloudsSpringComputeTest -> protected Map<String, Object> destroyHeaders(String nodeId, String group);1435496986;Returns a {@Map} with the destroy headers.__@param nodeId The id of the node to destroy._@param group  The group of the node to destroy.;protected Map<String, Object> destroyHeaders(String nodeId, String group) {_        Map<String, Object> destroyHeaders = new HashMap<String, Object>()__        destroyHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.DESTROY_NODE)__        if (nodeId != null) {_            destroyHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }_        if (group != null) {_            destroyHeaders.put(JcloudsConstants.GROUP, group)__        }_        return destroyHeaders__    };returns,a,map,with,the,destroy,headers,param,node,id,the,id,of,the,node,to,destroy,param,group,the,group,of,the,node,to,destroy;protected,map,string,object,destroy,headers,string,node,id,string,group,map,string,object,destroy,headers,new,hash,map,string,object,destroy,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,destroy,headers,put,jclouds,constants,node,id,if,group,null,destroy,headers,put,jclouds,constants,group,group,return,destroy,headers
JcloudsSpringComputeTest -> protected Map<String, Object> destroyHeaders(String nodeId, String group);1435497606;Returns a {@Map} with the destroy headers.__@param nodeId The id of the node to destroy._@param group  The group of the node to destroy.;protected Map<String, Object> destroyHeaders(String nodeId, String group) {_        Map<String, Object> destroyHeaders = new HashMap<String, Object>()__        destroyHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.DESTROY_NODE)__        if (nodeId != null) {_            destroyHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }_        if (group != null) {_            destroyHeaders.put(JcloudsConstants.GROUP, group)__        }_        return destroyHeaders__    };returns,a,map,with,the,destroy,headers,param,node,id,the,id,of,the,node,to,destroy,param,group,the,group,of,the,node,to,destroy;protected,map,string,object,destroy,headers,string,node,id,string,group,map,string,object,destroy,headers,new,hash,map,string,object,destroy,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,destroy,headers,put,jclouds,constants,node,id,if,group,null,destroy,headers,put,jclouds,constants,group,group,return,destroy,headers
JcloudsSpringComputeTest -> protected Map<String, Object> destroyHeaders(String nodeId, String group);1435500284;Returns a {@Map} with the destroy headers.__@param nodeId The id of the node to destroy._@param group  The group of the node to destroy.;protected Map<String, Object> destroyHeaders(String nodeId, String group) {_        Map<String, Object> destroyHeaders = new HashMap<String, Object>()__        destroyHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.DESTROY_NODE)__        if (nodeId != null) {_            destroyHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }_        if (group != null) {_            destroyHeaders.put(JcloudsConstants.GROUP, group)__        }_        return destroyHeaders__    };returns,a,map,with,the,destroy,headers,param,node,id,the,id,of,the,node,to,destroy,param,group,the,group,of,the,node,to,destroy;protected,map,string,object,destroy,headers,string,node,id,string,group,map,string,object,destroy,headers,new,hash,map,string,object,destroy,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,destroy,headers,put,jclouds,constants,node,id,if,group,null,destroy,headers,put,jclouds,constants,group,group,return,destroy,headers
JcloudsSpringComputeTest -> protected Map<String, Object> destroyHeaders(String nodeId, String group);1524001544;Returns a {@Map} with the destroy headers.__@param nodeId The id of the node to destroy._@param group  The group of the node to destroy.;protected Map<String, Object> destroyHeaders(String nodeId, String group) {_        Map<String, Object> destroyHeaders = new HashMap<>()__        destroyHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.DESTROY_NODE)__        if (nodeId != null) {_            destroyHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }_        if (group != null) {_            destroyHeaders.put(JcloudsConstants.GROUP, group)__        }_        return destroyHeaders__    };returns,a,map,with,the,destroy,headers,param,node,id,the,id,of,the,node,to,destroy,param,group,the,group,of,the,node,to,destroy;protected,map,string,object,destroy,headers,string,node,id,string,group,map,string,object,destroy,headers,new,hash,map,destroy,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,destroy,headers,put,jclouds,constants,node,id,if,group,null,destroy,headers,put,jclouds,constants,group,group,return,destroy,headers
JcloudsSpringComputeTest -> protected Map<String, Object> destroyHeaders(String nodeId, String group);1537290824;Returns a {@Map} with the destroy headers.__@param nodeId The id of the node to destroy._@param group  The group of the node to destroy.;protected Map<String, Object> destroyHeaders(String nodeId, String group) {_        Map<String, Object> destroyHeaders = new HashMap<>()__        destroyHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.DESTROY_NODE)__        if (nodeId != null) {_            destroyHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }_        if (group != null) {_            destroyHeaders.put(JcloudsConstants.GROUP, group)__        }_        return destroyHeaders__    };returns,a,map,with,the,destroy,headers,param,node,id,the,id,of,the,node,to,destroy,param,group,the,group,of,the,node,to,destroy;protected,map,string,object,destroy,headers,string,node,id,string,group,map,string,object,destroy,headers,new,hash,map,destroy,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,destroy,headers,put,jclouds,constants,node,id,if,group,null,destroy,headers,put,jclouds,constants,group,group,return,destroy,headers
JcloudsSpringComputeTest -> protected Map<String, Object> listNodeHeaders(String nodeId, String group, Object state);1320504254;Returns a {@Map} with the destroy headers.__@param nodeId The id of the node to destroy._@param group  The group of the node to destroy._@return;protected Map<String, Object> listNodeHeaders(String nodeId, String group, Object state) {_        Map<String, Object> listHeaders = new HashMap<String, Object>()__        listHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.LIST_NODES)__        if (nodeId != null) {_            listHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }__        if (group != null) {_            listHeaders.put(JcloudsConstants.GROUP, group)__        }__        if (state != null) {_            listHeaders.put(JcloudsConstants.NODE_STATE, state)__        }__        return listHeaders__    };returns,a,map,with,the,destroy,headers,param,node,id,the,id,of,the,node,to,destroy,param,group,the,group,of,the,node,to,destroy,return;protected,map,string,object,list,node,headers,string,node,id,string,group,object,state,map,string,object,list,headers,new,hash,map,string,object,list,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,list,headers,put,jclouds,constants,node,id,if,group,null,list,headers,put,jclouds,constants,group,group,if,state,null,list,headers,put,jclouds,constants,state,return,list,headers
JcloudsSpringComputeTest -> protected Map<String, Object> listNodeHeaders(String nodeId, String group, Object state);1326392736;Returns a {@Map} with the destroy headers.__@param nodeId The id of the node to destroy._@param group  The group of the node to destroy._@return;protected Map<String, Object> listNodeHeaders(String nodeId, String group, Object state) {_        Map<String, Object> listHeaders = new HashMap<String, Object>()__        listHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.LIST_NODES)__        if (nodeId != null) {_            listHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }__        if (group != null) {_            listHeaders.put(JcloudsConstants.GROUP, group)__        }__        if (state != null) {_            listHeaders.put(JcloudsConstants.NODE_STATE, state)__        }__        return listHeaders__    };returns,a,map,with,the,destroy,headers,param,node,id,the,id,of,the,node,to,destroy,param,group,the,group,of,the,node,to,destroy,return;protected,map,string,object,list,node,headers,string,node,id,string,group,object,state,map,string,object,list,headers,new,hash,map,string,object,list,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,list,headers,put,jclouds,constants,node,id,if,group,null,list,headers,put,jclouds,constants,group,group,if,state,null,list,headers,put,jclouds,constants,state,return,list,headers
JcloudsSpringComputeTest -> protected Map<String, Object> listNodeHeaders(String nodeId, String group, Object state);1353141176;Returns a {@Map} with the destroy headers.__@param nodeId The id of the node to destroy._@param group  The group of the node to destroy.;protected Map<String, Object> listNodeHeaders(String nodeId, String group, Object state) {_        Map<String, Object> listHeaders = new HashMap<String, Object>()__        listHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.LIST_NODES)__        if (nodeId != null) {_            listHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }__        if (group != null) {_            listHeaders.put(JcloudsConstants.GROUP, group)__        }__        if (state != null) {_            listHeaders.put(JcloudsConstants.NODE_STATE, state)__        }__        return listHeaders__    };returns,a,map,with,the,destroy,headers,param,node,id,the,id,of,the,node,to,destroy,param,group,the,group,of,the,node,to,destroy;protected,map,string,object,list,node,headers,string,node,id,string,group,object,state,map,string,object,list,headers,new,hash,map,string,object,list,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,list,headers,put,jclouds,constants,node,id,if,group,null,list,headers,put,jclouds,constants,group,group,if,state,null,list,headers,put,jclouds,constants,state,return,list,headers
JcloudsSpringComputeTest -> protected Map<String, Object> listNodeHeaders(String nodeId, String group, Object state);1357815620;Returns a {@Map} with the destroy headers.__@param nodeId The id of the node to destroy._@param group  The group of the node to destroy.;protected Map<String, Object> listNodeHeaders(String nodeId, String group, Object state) {_        Map<String, Object> listHeaders = new HashMap<String, Object>()__        listHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.LIST_NODES)__        if (nodeId != null) {_            listHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }__        if (group != null) {_            listHeaders.put(JcloudsConstants.GROUP, group)__        }__        if (state != null) {_            listHeaders.put(JcloudsConstants.NODE_STATE, state)__        }__        return listHeaders__    };returns,a,map,with,the,destroy,headers,param,node,id,the,id,of,the,node,to,destroy,param,group,the,group,of,the,node,to,destroy;protected,map,string,object,list,node,headers,string,node,id,string,group,object,state,map,string,object,list,headers,new,hash,map,string,object,list,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,list,headers,put,jclouds,constants,node,id,if,group,null,list,headers,put,jclouds,constants,group,group,if,state,null,list,headers,put,jclouds,constants,state,return,list,headers
JcloudsSpringComputeTest -> protected Map<String, Object> listNodeHeaders(String nodeId, String group, Object state);1357815666;Returns a {@Map} with the destroy headers.__@param nodeId The id of the node to destroy._@param group  The group of the node to destroy.;protected Map<String, Object> listNodeHeaders(String nodeId, String group, Object state) {_        Map<String, Object> listHeaders = new HashMap<String, Object>()__        listHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.LIST_NODES)__        if (nodeId != null) {_            listHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }__        if (group != null) {_            listHeaders.put(JcloudsConstants.GROUP, group)__        }__        if (state != null) {_            listHeaders.put(JcloudsConstants.NODE_STATE, state)__        }__        return listHeaders__    };returns,a,map,with,the,destroy,headers,param,node,id,the,id,of,the,node,to,destroy,param,group,the,group,of,the,node,to,destroy;protected,map,string,object,list,node,headers,string,node,id,string,group,object,state,map,string,object,list,headers,new,hash,map,string,object,list,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,list,headers,put,jclouds,constants,node,id,if,group,null,list,headers,put,jclouds,constants,group,group,if,state,null,list,headers,put,jclouds,constants,state,return,list,headers
JcloudsSpringComputeTest -> protected Map<String, Object> listNodeHeaders(String nodeId, String group, Object state);1435496986;Returns a {@Map} with the destroy headers.__@param nodeId The id of the node to destroy._@param group  The group of the node to destroy.;protected Map<String, Object> listNodeHeaders(String nodeId, String group, Object state) {_        Map<String, Object> listHeaders = new HashMap<String, Object>()__        listHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.LIST_NODES)__        if (nodeId != null) {_            listHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }__        if (group != null) {_            listHeaders.put(JcloudsConstants.GROUP, group)__        }__        if (state != null) {_            listHeaders.put(JcloudsConstants.NODE_STATE, state)__        }__        return listHeaders__    };returns,a,map,with,the,destroy,headers,param,node,id,the,id,of,the,node,to,destroy,param,group,the,group,of,the,node,to,destroy;protected,map,string,object,list,node,headers,string,node,id,string,group,object,state,map,string,object,list,headers,new,hash,map,string,object,list,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,list,headers,put,jclouds,constants,node,id,if,group,null,list,headers,put,jclouds,constants,group,group,if,state,null,list,headers,put,jclouds,constants,state,return,list,headers
JcloudsSpringComputeTest -> protected Map<String, Object> listNodeHeaders(String nodeId, String group, Object state);1435497606;Returns a {@Map} with the destroy headers.__@param nodeId The id of the node to destroy._@param group  The group of the node to destroy.;protected Map<String, Object> listNodeHeaders(String nodeId, String group, Object state) {_        Map<String, Object> listHeaders = new HashMap<String, Object>()__        listHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.LIST_NODES)__        if (nodeId != null) {_            listHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }__        if (group != null) {_            listHeaders.put(JcloudsConstants.GROUP, group)__        }__        if (state != null) {_            listHeaders.put(JcloudsConstants.NODE_STATE, state)__        }__        return listHeaders__    };returns,a,map,with,the,destroy,headers,param,node,id,the,id,of,the,node,to,destroy,param,group,the,group,of,the,node,to,destroy;protected,map,string,object,list,node,headers,string,node,id,string,group,object,state,map,string,object,list,headers,new,hash,map,string,object,list,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,list,headers,put,jclouds,constants,node,id,if,group,null,list,headers,put,jclouds,constants,group,group,if,state,null,list,headers,put,jclouds,constants,state,return,list,headers
JcloudsSpringComputeTest -> protected Map<String, Object> listNodeHeaders(String nodeId, String group, Object state);1435500284;Returns a {@Map} with the destroy headers.__@param nodeId The id of the node to destroy._@param group  The group of the node to destroy.;protected Map<String, Object> listNodeHeaders(String nodeId, String group, Object state) {_        Map<String, Object> listHeaders = new HashMap<String, Object>()__        listHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.LIST_NODES)__        if (nodeId != null) {_            listHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }__        if (group != null) {_            listHeaders.put(JcloudsConstants.GROUP, group)__        }__        if (state != null) {_            listHeaders.put(JcloudsConstants.NODE_STATE, state)__        }__        return listHeaders__    };returns,a,map,with,the,destroy,headers,param,node,id,the,id,of,the,node,to,destroy,param,group,the,group,of,the,node,to,destroy;protected,map,string,object,list,node,headers,string,node,id,string,group,object,state,map,string,object,list,headers,new,hash,map,string,object,list,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,list,headers,put,jclouds,constants,node,id,if,group,null,list,headers,put,jclouds,constants,group,group,if,state,null,list,headers,put,jclouds,constants,state,return,list,headers
JcloudsSpringComputeTest -> protected Map<String, Object> listNodeHeaders(String nodeId, String group, Object state);1524001544;Returns a {@Map} with the destroy headers.__@param nodeId The id of the node to destroy._@param group  The group of the node to destroy.;protected Map<String, Object> listNodeHeaders(String nodeId, String group, Object state) {_        Map<String, Object> listHeaders = new HashMap<>()__        listHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.LIST_NODES)__        if (nodeId != null) {_            listHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }__        if (group != null) {_            listHeaders.put(JcloudsConstants.GROUP, group)__        }__        if (state != null) {_            listHeaders.put(JcloudsConstants.NODE_STATE, state)__        }__        return listHeaders__    };returns,a,map,with,the,destroy,headers,param,node,id,the,id,of,the,node,to,destroy,param,group,the,group,of,the,node,to,destroy;protected,map,string,object,list,node,headers,string,node,id,string,group,object,state,map,string,object,list,headers,new,hash,map,list,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,list,headers,put,jclouds,constants,node,id,if,group,null,list,headers,put,jclouds,constants,group,group,if,state,null,list,headers,put,jclouds,constants,state,return,list,headers
JcloudsSpringComputeTest -> protected Map<String, Object> listNodeHeaders(String nodeId, String group, Object state);1537290824;Returns a {@Map} with the destroy headers.__@param nodeId The id of the node to destroy._@param group  The group of the node to destroy.;protected Map<String, Object> listNodeHeaders(String nodeId, String group, Object state) {_        Map<String, Object> listHeaders = new HashMap<>()__        listHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.LIST_NODES)__        if (nodeId != null) {_            listHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }__        if (group != null) {_            listHeaders.put(JcloudsConstants.GROUP, group)__        }__        if (state != null) {_            listHeaders.put(JcloudsConstants.NODE_STATE, state)__        }__        return listHeaders__    };returns,a,map,with,the,destroy,headers,param,node,id,the,id,of,the,node,to,destroy,param,group,the,group,of,the,node,to,destroy;protected,map,string,object,list,node,headers,string,node,id,string,group,object,state,map,string,object,list,headers,new,hash,map,list,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,list,headers,put,jclouds,constants,node,id,if,group,null,list,headers,put,jclouds,constants,group,group,if,state,null,list,headers,put,jclouds,constants,state,return,list,headers
JcloudsSpringComputeTest -> protected Map<String, Object> suspendHeaders(String nodeId, String group);1435497606;Returns a {@Map} with the suspend headers.__@param nodeId The id of the node to suspend._@param group  The group of the node to suspend.;protected Map<String, Object> suspendHeaders(String nodeId, String group) {_        Map<String, Object> rebootHeaders = new HashMap<String, Object>()__        rebootHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.SUSPEND_NODE)__        if (nodeId != null) {_        	rebootHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }_        if (group != null) {_        	rebootHeaders.put(JcloudsConstants.GROUP, group)__        }_        return rebootHeaders__    };returns,a,map,with,the,suspend,headers,param,node,id,the,id,of,the,node,to,suspend,param,group,the,group,of,the,node,to,suspend;protected,map,string,object,suspend,headers,string,node,id,string,group,map,string,object,reboot,headers,new,hash,map,string,object,reboot,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,reboot,headers,put,jclouds,constants,node,id,if,group,null,reboot,headers,put,jclouds,constants,group,group,return,reboot,headers
JcloudsSpringComputeTest -> protected Map<String, Object> suspendHeaders(String nodeId, String group);1435500284;Returns a {@Map} with the suspend headers.__@param nodeId The id of the node to suspend._@param group  The group of the node to suspend.;protected Map<String, Object> suspendHeaders(String nodeId, String group) {_        Map<String, Object> rebootHeaders = new HashMap<String, Object>()__        rebootHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.SUSPEND_NODE)__        if (nodeId != null) {_            rebootHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }_        if (group != null) {_            rebootHeaders.put(JcloudsConstants.GROUP, group)__        }_        return rebootHeaders__    };returns,a,map,with,the,suspend,headers,param,node,id,the,id,of,the,node,to,suspend,param,group,the,group,of,the,node,to,suspend;protected,map,string,object,suspend,headers,string,node,id,string,group,map,string,object,reboot,headers,new,hash,map,string,object,reboot,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,reboot,headers,put,jclouds,constants,node,id,if,group,null,reboot,headers,put,jclouds,constants,group,group,return,reboot,headers
JcloudsSpringComputeTest -> protected Map<String, Object> suspendHeaders(String nodeId, String group);1524001544;Returns a {@Map} with the suspend headers.__@param nodeId The id of the node to suspend._@param group  The group of the node to suspend.;protected Map<String, Object> suspendHeaders(String nodeId, String group) {_        Map<String, Object> rebootHeaders = new HashMap<>()__        rebootHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.SUSPEND_NODE)__        if (nodeId != null) {_            rebootHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }_        if (group != null) {_            rebootHeaders.put(JcloudsConstants.GROUP, group)__        }_        return rebootHeaders__    };returns,a,map,with,the,suspend,headers,param,node,id,the,id,of,the,node,to,suspend,param,group,the,group,of,the,node,to,suspend;protected,map,string,object,suspend,headers,string,node,id,string,group,map,string,object,reboot,headers,new,hash,map,reboot,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,reboot,headers,put,jclouds,constants,node,id,if,group,null,reboot,headers,put,jclouds,constants,group,group,return,reboot,headers
JcloudsSpringComputeTest -> protected Map<String, Object> suspendHeaders(String nodeId, String group);1537290824;Returns a {@Map} with the suspend headers.__@param nodeId The id of the node to suspend._@param group  The group of the node to suspend.;protected Map<String, Object> suspendHeaders(String nodeId, String group) {_        Map<String, Object> rebootHeaders = new HashMap<>()__        rebootHeaders.put(JcloudsConstants.OPERATION, JcloudsConstants.SUSPEND_NODE)__        if (nodeId != null) {_            rebootHeaders.put(JcloudsConstants.NODE_ID, nodeId)__        }_        if (group != null) {_            rebootHeaders.put(JcloudsConstants.GROUP, group)__        }_        return rebootHeaders__    };returns,a,map,with,the,suspend,headers,param,node,id,the,id,of,the,node,to,suspend,param,group,the,group,of,the,node,to,suspend;protected,map,string,object,suspend,headers,string,node,id,string,group,map,string,object,reboot,headers,new,hash,map,reboot,headers,put,jclouds,constants,operation,jclouds,constants,if,node,id,null,reboot,headers,put,jclouds,constants,node,id,if,group,null,reboot,headers,put,jclouds,constants,group,group,return,reboot,headers
