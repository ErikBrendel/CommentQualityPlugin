# id;timestamp;commentText;codeText;commentWords;codeWords
JcloudsComputeProducer -> protected String getNodeId(Exchange exchange);1317243118;Retrieves the node id from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getNodeId(Exchange exchange) {_        String nodeId = ((JcloudsComputeEndpoint) getEndpoint()).getNodeId()___        if (exchange.getIn().getHeader(JcloudsConstants.NODE_ID) != null) {_            nodeId = (String) exchange.getIn().getHeader(JcloudsConstants.NODE_ID)__        }_        return nodeId__    };retrieves,the,node,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,node,id,exchange,exchange,string,node,id,jclouds,compute,endpoint,get,endpoint,get,node,id,if,exchange,get,in,get,header,jclouds,constants,null,node,id,string,exchange,get,in,get,header,jclouds,constants,return,node,id
JcloudsComputeProducer -> protected String getNodeId(Exchange exchange);1320504254;Retrieves the node id from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getNodeId(Exchange exchange) {_        String nodeId = ((JcloudsComputeEndpoint) getEndpoint()).getNodeId()___        if (exchange.getIn().getHeader(JcloudsConstants.NODE_ID) != null) {_            nodeId = (String) exchange.getIn().getHeader(JcloudsConstants.NODE_ID)__        }_        return nodeId__    };retrieves,the,node,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,node,id,exchange,exchange,string,node,id,jclouds,compute,endpoint,get,endpoint,get,node,id,if,exchange,get,in,get,header,jclouds,constants,null,node,id,string,exchange,get,in,get,header,jclouds,constants,return,node,id
JcloudsComputeProducer -> protected String getNodeId(Exchange exchange);1326907405;Retrieves the node id from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getNodeId(Exchange exchange) {_        String nodeId = ((JcloudsComputeEndpoint) getEndpoint()).getNodeId()___        if (exchange.getIn().getHeader(JcloudsConstants.NODE_ID) != null) {_            nodeId = (String) exchange.getIn().getHeader(JcloudsConstants.NODE_ID)__        }_        return nodeId__    };retrieves,the,node,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,node,id,exchange,exchange,string,node,id,jclouds,compute,endpoint,get,endpoint,get,node,id,if,exchange,get,in,get,header,jclouds,constants,null,node,id,string,exchange,get,in,get,header,jclouds,constants,return,node,id
JcloudsComputeProducer -> protected String getNodeId(Exchange exchange);1327089055;Retrieves the node id from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getNodeId(Exchange exchange) {_        String nodeId = getEndpoint().getNodeId()___        if (exchange.getIn().getHeader(JcloudsConstants.NODE_ID) != null) {_            nodeId = (String) exchange.getIn().getHeader(JcloudsConstants.NODE_ID)__        }_        return nodeId__    };retrieves,the,node,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,node,id,exchange,exchange,string,node,id,get,endpoint,get,node,id,if,exchange,get,in,get,header,jclouds,constants,null,node,id,string,exchange,get,in,get,header,jclouds,constants,return,node,id
JcloudsComputeProducer -> protected String getNodeId(Exchange exchange);1333145181;Retrieves the node id from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getNodeId(Exchange exchange) {_        String nodeId = getEndpoint().getNodeId()___        if (exchange.getIn().getHeader(JcloudsConstants.NODE_ID) != null) {_            nodeId = (String) exchange.getIn().getHeader(JcloudsConstants.NODE_ID)__        }_        return nodeId__    };retrieves,the,node,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,node,id,exchange,exchange,string,node,id,get,endpoint,get,node,id,if,exchange,get,in,get,header,jclouds,constants,null,node,id,string,exchange,get,in,get,header,jclouds,constants,return,node,id
JcloudsComputeProducer -> protected String getNodeId(Exchange exchange);1353141176;Retrieves the node id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getNodeId(Exchange exchange) {_        String nodeId = getEndpoint().getNodeId()___        if (exchange.getIn().getHeader(JcloudsConstants.NODE_ID) != null) {_            nodeId = (String) exchange.getIn().getHeader(JcloudsConstants.NODE_ID)__        }_        return nodeId__    };retrieves,the,node,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,node,id,exchange,exchange,string,node,id,get,endpoint,get,node,id,if,exchange,get,in,get,header,jclouds,constants,null,node,id,string,exchange,get,in,get,header,jclouds,constants,return,node,id
JcloudsComputeProducer -> protected String getNodeId(Exchange exchange);1373281324;Retrieves the node id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getNodeId(Exchange exchange) {_        String nodeId = getEndpoint().getNodeId()___        if (exchange.getIn().getHeader(JcloudsConstants.NODE_ID) != null) {_            nodeId = (String) exchange.getIn().getHeader(JcloudsConstants.NODE_ID)__        }_        return nodeId__    };retrieves,the,node,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,node,id,exchange,exchange,string,node,id,get,endpoint,get,node,id,if,exchange,get,in,get,header,jclouds,constants,null,node,id,string,exchange,get,in,get,header,jclouds,constants,return,node,id
JcloudsComputeProducer -> protected String getNodeId(Exchange exchange);1388443957;Retrieves the node id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getNodeId(Exchange exchange) {_        String nodeId = getEndpoint().getNodeId()___        if (exchange.getIn().getHeader(JcloudsConstants.NODE_ID) != null) {_            nodeId = (String) exchange.getIn().getHeader(JcloudsConstants.NODE_ID)__        }_        return nodeId__    };retrieves,the,node,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,node,id,exchange,exchange,string,node,id,get,endpoint,get,node,id,if,exchange,get,in,get,header,jclouds,constants,null,node,id,string,exchange,get,in,get,header,jclouds,constants,return,node,id
JcloudsComputeProducer -> protected String getNodeId(Exchange exchange);1435493075;Retrieves the node id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getNodeId(Exchange exchange) {_        String nodeId = getEndpoint().getNodeId()___        if (exchange.getIn().getHeader(JcloudsConstants.NODE_ID) != null) {_            nodeId = (String) exchange.getIn().getHeader(JcloudsConstants.NODE_ID)__        }_        return nodeId__    };retrieves,the,node,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,node,id,exchange,exchange,string,node,id,get,endpoint,get,node,id,if,exchange,get,in,get,header,jclouds,constants,null,node,id,string,exchange,get,in,get,header,jclouds,constants,return,node,id
JcloudsComputeProducer -> protected String getNodeId(Exchange exchange);1435496986;Retrieves the node id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getNodeId(Exchange exchange) {_        String nodeId = getEndpoint().getNodeId()___        if (exchange.getIn().getHeader(JcloudsConstants.NODE_ID) != null) {_            nodeId = (String) exchange.getIn().getHeader(JcloudsConstants.NODE_ID)__        }_        return nodeId__    };retrieves,the,node,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,node,id,exchange,exchange,string,node,id,get,endpoint,get,node,id,if,exchange,get,in,get,header,jclouds,constants,null,node,id,string,exchange,get,in,get,header,jclouds,constants,return,node,id
JcloudsComputeProducer -> protected String getNodeId(Exchange exchange);1435497250;Retrieves the node id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getNodeId(Exchange exchange) {_        String nodeId = getEndpoint().getNodeId()___        if (exchange.getIn().getHeader(JcloudsConstants.NODE_ID) != null) {_            nodeId = (String) exchange.getIn().getHeader(JcloudsConstants.NODE_ID)__        }_        return nodeId__    };retrieves,the,node,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,node,id,exchange,exchange,string,node,id,get,endpoint,get,node,id,if,exchange,get,in,get,header,jclouds,constants,null,node,id,string,exchange,get,in,get,header,jclouds,constants,return,node,id
JcloudsComputeProducer -> protected String getNodeId(Exchange exchange);1435498142;Retrieves the node id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getNodeId(Exchange exchange) {_        String nodeId = getEndpoint().getNodeId()___        if (exchange.getIn().getHeader(JcloudsConstants.NODE_ID) != null) {_            nodeId = (String) exchange.getIn().getHeader(JcloudsConstants.NODE_ID)__        }_        return nodeId__    };retrieves,the,node,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,node,id,exchange,exchange,string,node,id,get,endpoint,get,node,id,if,exchange,get,in,get,header,jclouds,constants,null,node,id,string,exchange,get,in,get,header,jclouds,constants,return,node,id
JcloudsComputeProducer -> protected String getNodeId(Exchange exchange);1435500284;Retrieves the node id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getNodeId(Exchange exchange) {_        String nodeId = getEndpoint().getNodeId()___        if (exchange.getIn().getHeader(JcloudsConstants.NODE_ID) != null) {_            nodeId = (String) exchange.getIn().getHeader(JcloudsConstants.NODE_ID)__        }_        return nodeId__    };retrieves,the,node,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,node,id,exchange,exchange,string,node,id,get,endpoint,get,node,id,if,exchange,get,in,get,header,jclouds,constants,null,node,id,string,exchange,get,in,get,header,jclouds,constants,return,node,id
JcloudsComputeProducer -> protected String getNodeId(Exchange exchange);1435764273;Retrieves the node id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getNodeId(Exchange exchange) {_        String nodeId = getEndpoint().getNodeId()___        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.NODE_ID))) {_            nodeId = (String) exchange.getIn().getHeader(JcloudsConstants.NODE_ID)__        }_        return nodeId__    };retrieves,the,node,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,node,id,exchange,exchange,string,node,id,get,endpoint,get,node,id,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,node,id,string,exchange,get,in,get,header,jclouds,constants,return,node,id
JcloudsComputeProducer -> protected String getNodeId(Exchange exchange);1435767436;Retrieves the node id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getNodeId(Exchange exchange) {_        String nodeId = getEndpoint().getNodeId()___        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.NODE_ID))) {_            nodeId = exchange.getIn().getHeader(JcloudsConstants.NODE_ID, String.class)__        }_        return nodeId__    };retrieves,the,node,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,node,id,exchange,exchange,string,node,id,get,endpoint,get,node,id,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,node,id,exchange,get,in,get,header,jclouds,constants,string,class,return,node,id
JcloudsComputeProducer -> protected String getNodeId(Exchange exchange);1537290824;Retrieves the node id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getNodeId(Exchange exchange) {_        String nodeId = getEndpoint().getNodeId()___        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.NODE_ID))) {_            nodeId = exchange.getIn().getHeader(JcloudsConstants.NODE_ID, String.class)__        }_        return nodeId__    };retrieves,the,node,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,node,id,exchange,exchange,string,node,id,get,endpoint,get,node,id,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,node,id,exchange,get,in,get,header,jclouds,constants,string,class,return,node,id
JcloudsComputeProducer -> @SuppressWarnings("deprecation")     protected void runScriptOnNode(Exchange exchange) throws CamelException;1333145181;Runs a script on the target node.__@param exchange_@throws CamelException;@SuppressWarnings("deprecation")_    protected void runScriptOnNode(Exchange exchange) throws CamelException {_        String script = exchange.getIn().getBody(String.class)__        String nodeId = getNodeId(exchange)__        String user = getUser(exchange)___        LoginCredentials credentials = null___        if (user != null) {_            credentials = LoginCredentials.builder().user(user).build()__        }_        ExecResponse execResponse = null___        if (credentials == null) {_            execResponse = computeService.runScriptOnNode(nodeId, script)__        } else {_            execResponse = computeService.runScriptOnNode(nodeId, script, RunScriptOptions.Builder.overrideLoginCredentials(credentials).runAsRoot(false))__        }__        if (execResponse == null) {_            throw new CamelException("Failed to receive response for run script operation.")__        }__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_ERROR, execResponse.getError())__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_EXIT_CODE, execResponse.getExitCode())__        exchange.getOut().setBody(execResponse.getOutput())__    };runs,a,script,on,the,target,node,param,exchange,throws,camel,exception;suppress,warnings,deprecation,protected,void,run,script,on,node,exchange,exchange,throws,camel,exception,string,script,exchange,get,in,get,body,string,class,string,node,id,get,node,id,exchange,string,user,get,user,exchange,login,credentials,credentials,null,if,user,null,credentials,login,credentials,builder,user,user,build,exec,response,exec,response,null,if,credentials,null,exec,response,compute,service,run,script,on,node,node,id,script,else,exec,response,compute,service,run,script,on,node,node,id,script,run,script,options,builder,override,login,credentials,credentials,run,as,root,false,if,exec,response,null,throw,new,camel,exception,failed,to,receive,response,for,run,script,operation,exchange,set,property,jclouds,constants,exec,response,get,error,exchange,set,property,jclouds,constants,exec,response,get,exit,code,exchange,get,out,set,body,exec,response,get,output
JcloudsComputeProducer -> @SuppressWarnings("deprecation")     protected void runScriptOnNode(Exchange exchange) throws CamelException;1353141176;Runs a script on the target node.;@SuppressWarnings("deprecation")_    protected void runScriptOnNode(Exchange exchange) throws CamelException {_        String script = exchange.getIn().getBody(String.class)__        String nodeId = getNodeId(exchange)__        String user = getUser(exchange)___        LoginCredentials credentials = null___        if (user != null) {_            credentials = LoginCredentials.builder().user(user).build()__        }_        ExecResponse execResponse = null___        if (credentials == null) {_            execResponse = computeService.runScriptOnNode(nodeId, script)__        } else {_            execResponse = computeService.runScriptOnNode(nodeId, script, RunScriptOptions.Builder.overrideLoginCredentials(credentials).runAsRoot(false))__        }__        if (execResponse == null) {_            throw new CamelExchangeException("Failed to receive response for run script operation on node: " + nodeId + " using script: " + script, exchange)__        }__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_ERROR, execResponse.getError())__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_EXIT_CODE, execResponse.getExitCode())__        exchange.getOut().setBody(execResponse.getOutput())__    };runs,a,script,on,the,target,node;suppress,warnings,deprecation,protected,void,run,script,on,node,exchange,exchange,throws,camel,exception,string,script,exchange,get,in,get,body,string,class,string,node,id,get,node,id,exchange,string,user,get,user,exchange,login,credentials,credentials,null,if,user,null,credentials,login,credentials,builder,user,user,build,exec,response,exec,response,null,if,credentials,null,exec,response,compute,service,run,script,on,node,node,id,script,else,exec,response,compute,service,run,script,on,node,node,id,script,run,script,options,builder,override,login,credentials,credentials,run,as,root,false,if,exec,response,null,throw,new,camel,exchange,exception,failed,to,receive,response,for,run,script,operation,on,node,node,id,using,script,script,exchange,exchange,set,property,jclouds,constants,exec,response,get,error,exchange,set,property,jclouds,constants,exec,response,get,exit,code,exchange,get,out,set,body,exec,response,get,output
JcloudsComputeProducer -> @SuppressWarnings("deprecation")     protected void runScriptOnNode(Exchange exchange) throws CamelException;1373281324;Runs a script on the target node.;@SuppressWarnings("deprecation")_    protected void runScriptOnNode(Exchange exchange) throws CamelException {_        String script = exchange.getIn().getBody(String.class)__        String nodeId = getNodeId(exchange)__        String user = getUser(exchange)___        LoginCredentials credentials = null___        if (user != null) {_            credentials = LoginCredentials.builder().user(user).build()__        }_        ExecResponse execResponse = null___        if (credentials == null) {_            execResponse = computeService.runScriptOnNode(nodeId, script)__        } else {_            execResponse = computeService.runScriptOnNode(nodeId, script, RunScriptOptions.Builder.overrideLoginCredentials(credentials).runAsRoot(false))__        }__        if (execResponse == null) {_            throw new CamelExchangeException("Failed to receive response for run script operation on node: " + nodeId + " using script: " + script, exchange)__        }__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_ERROR, execResponse.getError())__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_EXIT_CODE, execResponse.getExitStatus())__        exchange.getOut().setBody(execResponse.getOutput())__    };runs,a,script,on,the,target,node;suppress,warnings,deprecation,protected,void,run,script,on,node,exchange,exchange,throws,camel,exception,string,script,exchange,get,in,get,body,string,class,string,node,id,get,node,id,exchange,string,user,get,user,exchange,login,credentials,credentials,null,if,user,null,credentials,login,credentials,builder,user,user,build,exec,response,exec,response,null,if,credentials,null,exec,response,compute,service,run,script,on,node,node,id,script,else,exec,response,compute,service,run,script,on,node,node,id,script,run,script,options,builder,override,login,credentials,credentials,run,as,root,false,if,exec,response,null,throw,new,camel,exchange,exception,failed,to,receive,response,for,run,script,operation,on,node,node,id,using,script,script,exchange,exchange,set,property,jclouds,constants,exec,response,get,error,exchange,set,property,jclouds,constants,exec,response,get,exit,status,exchange,get,out,set,body,exec,response,get,output
JcloudsComputeProducer -> protected void listHardware(Exchange exchange);1353141176;Sets the available hardware profiles to the out message.;protected void listHardware(Exchange exchange) {_        Set<? extends Hardware> hardwareProfiles = computeService.listHardwareProfiles()__        exchange.getOut().setBody(hardwareProfiles)__    };sets,the,available,hardware,profiles,to,the,out,message;protected,void,list,hardware,exchange,exchange,set,extends,hardware,hardware,profiles,compute,service,list,hardware,profiles,exchange,get,out,set,body,hardware,profiles
JcloudsComputeProducer -> protected void listHardware(Exchange exchange);1373281324;Sets the available hardware profiles to the out message.;protected void listHardware(Exchange exchange) {_        Set<? extends Hardware> hardwareProfiles = computeService.listHardwareProfiles()__        exchange.getOut().setBody(hardwareProfiles)__    };sets,the,available,hardware,profiles,to,the,out,message;protected,void,list,hardware,exchange,exchange,set,extends,hardware,hardware,profiles,compute,service,list,hardware,profiles,exchange,get,out,set,body,hardware,profiles
JcloudsComputeProducer -> protected void listHardware(Exchange exchange);1388443957;Sets the available hardware profiles to the out message.;protected void listHardware(Exchange exchange) {_        Set<? extends Hardware> hardwareProfiles = computeService.listHardwareProfiles()__        exchange.getOut().setBody(hardwareProfiles)__    };sets,the,available,hardware,profiles,to,the,out,message;protected,void,list,hardware,exchange,exchange,set,extends,hardware,hardware,profiles,compute,service,list,hardware,profiles,exchange,get,out,set,body,hardware,profiles
JcloudsComputeProducer -> protected void listHardware(Exchange exchange);1435493075;Sets the available hardware profiles to the out message.;protected void listHardware(Exchange exchange) {_        Set<? extends Hardware> hardwareProfiles = computeService.listHardwareProfiles()__        exchange.getOut().setBody(hardwareProfiles)__    };sets,the,available,hardware,profiles,to,the,out,message;protected,void,list,hardware,exchange,exchange,set,extends,hardware,hardware,profiles,compute,service,list,hardware,profiles,exchange,get,out,set,body,hardware,profiles
JcloudsComputeProducer -> protected void listHardware(Exchange exchange);1435496986;Sets the available hardware profiles to the out message.;protected void listHardware(Exchange exchange) {_        Set<? extends Hardware> hardwareProfiles = computeService.listHardwareProfiles()__        exchange.getOut().setBody(hardwareProfiles)__    };sets,the,available,hardware,profiles,to,the,out,message;protected,void,list,hardware,exchange,exchange,set,extends,hardware,hardware,profiles,compute,service,list,hardware,profiles,exchange,get,out,set,body,hardware,profiles
JcloudsComputeProducer -> protected void listHardware(Exchange exchange);1435497250;Sets the available hardware profiles to the out message.;protected void listHardware(Exchange exchange) {_        Set<? extends Hardware> hardwareProfiles = computeService.listHardwareProfiles()__        exchange.getOut().setBody(hardwareProfiles)__    };sets,the,available,hardware,profiles,to,the,out,message;protected,void,list,hardware,exchange,exchange,set,extends,hardware,hardware,profiles,compute,service,list,hardware,profiles,exchange,get,out,set,body,hardware,profiles
JcloudsComputeProducer -> protected void listHardware(Exchange exchange);1435498142;Sets the available hardware profiles to the out message.;protected void listHardware(Exchange exchange) {_        Set<? extends Hardware> hardwareProfiles = computeService.listHardwareProfiles()__        exchange.getOut().setBody(hardwareProfiles)__    };sets,the,available,hardware,profiles,to,the,out,message;protected,void,list,hardware,exchange,exchange,set,extends,hardware,hardware,profiles,compute,service,list,hardware,profiles,exchange,get,out,set,body,hardware,profiles
JcloudsComputeProducer -> protected void listHardware(Exchange exchange);1435500284;Sets the available hardware profiles to the out message.;protected void listHardware(Exchange exchange) {_        Set<? extends Hardware> hardwareProfiles = computeService.listHardwareProfiles()__        exchange.getOut().setBody(hardwareProfiles)__    };sets,the,available,hardware,profiles,to,the,out,message;protected,void,list,hardware,exchange,exchange,set,extends,hardware,hardware,profiles,compute,service,list,hardware,profiles,exchange,get,out,set,body,hardware,profiles
JcloudsComputeProducer -> protected void listHardware(Exchange exchange);1435764273;Sets the available hardware profiles to the out message.;protected void listHardware(Exchange exchange) {_        Set<? extends Hardware> hardwareProfiles = computeService.listHardwareProfiles()__        exchange.getOut().setBody(hardwareProfiles)__    };sets,the,available,hardware,profiles,to,the,out,message;protected,void,list,hardware,exchange,exchange,set,extends,hardware,hardware,profiles,compute,service,list,hardware,profiles,exchange,get,out,set,body,hardware,profiles
JcloudsComputeProducer -> protected void listHardware(Exchange exchange);1435767436;Sets the available hardware profiles to the out message.;protected void listHardware(Exchange exchange) {_        Set<? extends Hardware> hardwareProfiles = computeService.listHardwareProfiles()__        exchange.getOut().setBody(hardwareProfiles)__    };sets,the,available,hardware,profiles,to,the,out,message;protected,void,list,hardware,exchange,exchange,set,extends,hardware,hardware,profiles,compute,service,list,hardware,profiles,exchange,get,out,set,body,hardware,profiles
JcloudsComputeProducer -> protected void listHardware(Exchange exchange);1537290824;Sets the available hardware profiles to the out message.;protected void listHardware(Exchange exchange) {_        Set<? extends Hardware> hardwareProfiles = computeService.listHardwareProfiles()__        exchange.getOut().setBody(hardwareProfiles)__    };sets,the,available,hardware,profiles,to,the,out,message;protected,void,list,hardware,exchange,exchange,set,extends,hardware,hardware,profiles,compute,service,list,hardware,profiles,exchange,get,out,set,body,hardware,profiles
JcloudsComputeProducer -> public String getOperation(Exchange exchange);1317243118;Retrieves the operation from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;public String getOperation(Exchange exchange) {_        String operation = ((JcloudsComputeEndpoint) getEndpoint()).getOperation()___        if (exchange.getIn().getHeader(JcloudsConstants.OPERATION) != null) {_            operation = (String) exchange.getIn().getHeader(JcloudsConstants.OPERATION)__        }_        return operation__    };retrieves,the,operation,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;public,string,get,operation,exchange,exchange,string,operation,jclouds,compute,endpoint,get,endpoint,get,operation,if,exchange,get,in,get,header,jclouds,constants,operation,null,operation,string,exchange,get,in,get,header,jclouds,constants,operation,return,operation
JcloudsComputeProducer -> public String getOperation(Exchange exchange);1320504254;Retrieves the operation from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;public String getOperation(Exchange exchange) {_        String operation = ((JcloudsComputeEndpoint) getEndpoint()).getOperation()___        if (exchange.getIn().getHeader(JcloudsConstants.OPERATION) != null) {_            operation = (String) exchange.getIn().getHeader(JcloudsConstants.OPERATION)__        }_        return operation__    };retrieves,the,operation,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;public,string,get,operation,exchange,exchange,string,operation,jclouds,compute,endpoint,get,endpoint,get,operation,if,exchange,get,in,get,header,jclouds,constants,operation,null,operation,string,exchange,get,in,get,header,jclouds,constants,operation,return,operation
JcloudsComputeProducer -> public String getOperation(Exchange exchange);1326907405;Retrieves the operation from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;public String getOperation(Exchange exchange) {_        String operation = ((JcloudsComputeEndpoint) getEndpoint()).getOperation()___        if (exchange.getIn().getHeader(JcloudsConstants.OPERATION) != null) {_            operation = (String) exchange.getIn().getHeader(JcloudsConstants.OPERATION)__        }_        return operation__    };retrieves,the,operation,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;public,string,get,operation,exchange,exchange,string,operation,jclouds,compute,endpoint,get,endpoint,get,operation,if,exchange,get,in,get,header,jclouds,constants,operation,null,operation,string,exchange,get,in,get,header,jclouds,constants,operation,return,operation
JcloudsComputeProducer -> public String getOperation(Exchange exchange);1327089055;Retrieves the operation from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;public String getOperation(Exchange exchange) {_        String operation = getEndpoint().getOperation()___        if (exchange.getIn().getHeader(JcloudsConstants.OPERATION) != null) {_            operation = (String) exchange.getIn().getHeader(JcloudsConstants.OPERATION)__        }_        return operation__    };retrieves,the,operation,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;public,string,get,operation,exchange,exchange,string,operation,get,endpoint,get,operation,if,exchange,get,in,get,header,jclouds,constants,operation,null,operation,string,exchange,get,in,get,header,jclouds,constants,operation,return,operation
JcloudsComputeProducer -> public String getOperation(Exchange exchange);1333145181;Retrieves the operation from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;public String getOperation(Exchange exchange) {_        String operation = getEndpoint().getOperation()___        if (exchange.getIn().getHeader(JcloudsConstants.OPERATION) != null) {_            operation = (String) exchange.getIn().getHeader(JcloudsConstants.OPERATION)__        }_        return operation__    };retrieves,the,operation,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;public,string,get,operation,exchange,exchange,string,operation,get,endpoint,get,operation,if,exchange,get,in,get,header,jclouds,constants,operation,null,operation,string,exchange,get,in,get,header,jclouds,constants,operation,return,operation
JcloudsComputeProducer -> public String getOperation(Exchange exchange);1353141176;Retrieves the operation from the URI or from the exchange headers. The header will take precedence over the URI.;public String getOperation(Exchange exchange) {_        String operation = getEndpoint().getOperation()___        if (exchange.getIn().getHeader(JcloudsConstants.OPERATION) != null) {_            operation = (String) exchange.getIn().getHeader(JcloudsConstants.OPERATION)__        }_        return operation__    };retrieves,the,operation,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;public,string,get,operation,exchange,exchange,string,operation,get,endpoint,get,operation,if,exchange,get,in,get,header,jclouds,constants,operation,null,operation,string,exchange,get,in,get,header,jclouds,constants,operation,return,operation
JcloudsComputeProducer -> public String getOperation(Exchange exchange);1373281324;Retrieves the operation from the URI or from the exchange headers. The header will take precedence over the URI.;public String getOperation(Exchange exchange) {_        String operation = getEndpoint().getOperation()___        if (exchange.getIn().getHeader(JcloudsConstants.OPERATION) != null) {_            operation = (String) exchange.getIn().getHeader(JcloudsConstants.OPERATION)__        }_        return operation__    };retrieves,the,operation,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;public,string,get,operation,exchange,exchange,string,operation,get,endpoint,get,operation,if,exchange,get,in,get,header,jclouds,constants,operation,null,operation,string,exchange,get,in,get,header,jclouds,constants,operation,return,operation
JcloudsComputeProducer -> public String getOperation(Exchange exchange);1388443957;Retrieves the operation from the URI or from the exchange headers. The header will take precedence over the URI.;public String getOperation(Exchange exchange) {_        String operation = getEndpoint().getOperation()___        if (exchange.getIn().getHeader(JcloudsConstants.OPERATION) != null) {_            operation = (String) exchange.getIn().getHeader(JcloudsConstants.OPERATION)__        }_        return operation__    };retrieves,the,operation,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;public,string,get,operation,exchange,exchange,string,operation,get,endpoint,get,operation,if,exchange,get,in,get,header,jclouds,constants,operation,null,operation,string,exchange,get,in,get,header,jclouds,constants,operation,return,operation
JcloudsComputeProducer -> public String getOperation(Exchange exchange);1435493075;Retrieves the operation from the URI or from the exchange headers. The header will take precedence over the URI.;public String getOperation(Exchange exchange) {_        String operation = getEndpoint().getOperation()___        if (exchange.getIn().getHeader(JcloudsConstants.OPERATION) != null) {_            operation = (String) exchange.getIn().getHeader(JcloudsConstants.OPERATION)__        }_        return operation__    };retrieves,the,operation,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;public,string,get,operation,exchange,exchange,string,operation,get,endpoint,get,operation,if,exchange,get,in,get,header,jclouds,constants,operation,null,operation,string,exchange,get,in,get,header,jclouds,constants,operation,return,operation
JcloudsComputeProducer -> public String getOperation(Exchange exchange);1435496986;Retrieves the operation from the URI or from the exchange headers. The header will take precedence over the URI.;public String getOperation(Exchange exchange) {_        String operation = getEndpoint().getOperation()___        if (exchange.getIn().getHeader(JcloudsConstants.OPERATION) != null) {_            operation = (String) exchange.getIn().getHeader(JcloudsConstants.OPERATION)__        }_        return operation__    };retrieves,the,operation,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;public,string,get,operation,exchange,exchange,string,operation,get,endpoint,get,operation,if,exchange,get,in,get,header,jclouds,constants,operation,null,operation,string,exchange,get,in,get,header,jclouds,constants,operation,return,operation
JcloudsComputeProducer -> public String getOperation(Exchange exchange);1435497250;Retrieves the operation from the URI or from the exchange headers. The header will take precedence over the URI.;public String getOperation(Exchange exchange) {_        String operation = getEndpoint().getOperation()___        if (exchange.getIn().getHeader(JcloudsConstants.OPERATION) != null) {_            operation = (String) exchange.getIn().getHeader(JcloudsConstants.OPERATION)__        }_        return operation__    };retrieves,the,operation,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;public,string,get,operation,exchange,exchange,string,operation,get,endpoint,get,operation,if,exchange,get,in,get,header,jclouds,constants,operation,null,operation,string,exchange,get,in,get,header,jclouds,constants,operation,return,operation
JcloudsComputeProducer -> public String getOperation(Exchange exchange);1435498142;Retrieves the operation from the URI or from the exchange headers. The header will take precedence over the URI.;public String getOperation(Exchange exchange) {_        String operation = getEndpoint().getOperation()___        if (exchange.getIn().getHeader(JcloudsConstants.OPERATION) != null) {_            operation = (String) exchange.getIn().getHeader(JcloudsConstants.OPERATION)__        }_        return operation__    };retrieves,the,operation,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;public,string,get,operation,exchange,exchange,string,operation,get,endpoint,get,operation,if,exchange,get,in,get,header,jclouds,constants,operation,null,operation,string,exchange,get,in,get,header,jclouds,constants,operation,return,operation
JcloudsComputeProducer -> public String getOperation(Exchange exchange);1435500284;Retrieves the operation from the URI or from the exchange headers. The header will take precedence over the URI.;public String getOperation(Exchange exchange) {_        String operation = getEndpoint().getOperation()___        if (exchange.getIn().getHeader(JcloudsConstants.OPERATION) != null) {_            operation = (String) exchange.getIn().getHeader(JcloudsConstants.OPERATION)__        }_        return operation__    };retrieves,the,operation,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;public,string,get,operation,exchange,exchange,string,operation,get,endpoint,get,operation,if,exchange,get,in,get,header,jclouds,constants,operation,null,operation,string,exchange,get,in,get,header,jclouds,constants,operation,return,operation
JcloudsComputeProducer -> public String getOperation(Exchange exchange);1435764273;Retrieves the operation from the URI or from the exchange headers. The header will take precedence over the URI.;public String getOperation(Exchange exchange) {_        String operation = getEndpoint().getOperation()___        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.OPERATION))) {_            operation = (String) exchange.getIn().getHeader(JcloudsConstants.OPERATION)__        }_        return operation__    };retrieves,the,operation,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;public,string,get,operation,exchange,exchange,string,operation,get,endpoint,get,operation,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,operation,operation,string,exchange,get,in,get,header,jclouds,constants,operation,return,operation
JcloudsComputeProducer -> public String getOperation(Exchange exchange);1435767436;Retrieves the operation from the URI or from the exchange headers. The header will take precedence over the URI.;public String getOperation(Exchange exchange) {_        String operation = getEndpoint().getOperation()___        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.OPERATION))) {_            operation = exchange.getIn().getHeader(JcloudsConstants.OPERATION, String.class)__        }_        return operation__    };retrieves,the,operation,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;public,string,get,operation,exchange,exchange,string,operation,get,endpoint,get,operation,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,operation,operation,exchange,get,in,get,header,jclouds,constants,operation,string,class,return,operation
JcloudsComputeProducer -> public String getOperation(Exchange exchange);1537290824;Retrieves the operation from the URI or from the exchange headers. The header will take precedence over the URI.;public String getOperation(Exchange exchange) {_        String operation = getEndpoint().getOperation()___        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.OPERATION))) {_            operation = exchange.getIn().getHeader(JcloudsConstants.OPERATION, String.class)__        }_        return operation__    };retrieves,the,operation,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;public,string,get,operation,exchange,exchange,string,operation,get,endpoint,get,operation,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,operation,operation,exchange,get,in,get,header,jclouds,constants,operation,string,class,return,operation
JcloudsComputeProducer -> protected void destroyNode(Exchange exchange);1353141176;Destroys the node with the specified nodeId.;protected void destroyNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.destroyNodesMatching(predicate)__    };destroys,the,node,with,the,specified,node,id;protected,void,destroy,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,destroy,nodes,matching,predicate
JcloudsComputeProducer -> protected void destroyNode(Exchange exchange);1373281324;Destroys the node with the specified nodeId.;protected void destroyNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.destroyNodesMatching(predicate)__    };destroys,the,node,with,the,specified,node,id;protected,void,destroy,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,destroy,nodes,matching,predicate
JcloudsComputeProducer -> protected void destroyNode(Exchange exchange);1388443957;Destroys the node with the specified nodeId.;protected void destroyNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.destroyNodesMatching(predicate)__    };destroys,the,node,with,the,specified,node,id;protected,void,destroy,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,destroy,nodes,matching,predicate
JcloudsComputeProducer -> protected void destroyNode(Exchange exchange);1435493075;Destroys the node with the specified nodeId.;protected void destroyNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.destroyNodesMatching(predicate)__    };destroys,the,node,with,the,specified,node,id;protected,void,destroy,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,destroy,nodes,matching,predicate
JcloudsComputeProducer -> protected void destroyNode(Exchange exchange);1435496986;Destroys the node with the specified nodeId.;protected void destroyNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.destroyNodesMatching(predicate)__    };destroys,the,node,with,the,specified,node,id;protected,void,destroy,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,destroy,nodes,matching,predicate
JcloudsComputeProducer -> protected void destroyNode(Exchange exchange);1435497250;Destroys the node with the specified nodeId.;protected void destroyNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.destroyNodesMatching(predicate)__    };destroys,the,node,with,the,specified,node,id;protected,void,destroy,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,destroy,nodes,matching,predicate
JcloudsComputeProducer -> protected void destroyNode(Exchange exchange);1435498142;Destroys the node with the specified nodeId.;protected void destroyNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.destroyNodesMatching(predicate)__    };destroys,the,node,with,the,specified,node,id;protected,void,destroy,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,destroy,nodes,matching,predicate
JcloudsComputeProducer -> protected void destroyNode(Exchange exchange);1435500284;Destroys the node with the specified nodeId.;protected void destroyNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.destroyNodesMatching(predicate)__    };destroys,the,node,with,the,specified,node,id;protected,void,destroy,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,destroy,nodes,matching,predicate
JcloudsComputeProducer -> protected void destroyNode(Exchange exchange);1435764273;Destroys the node with the specified nodeId.;protected void destroyNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.destroyNodesMatching(predicate)__    };destroys,the,node,with,the,specified,node,id;protected,void,destroy,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,destroy,nodes,matching,predicate
JcloudsComputeProducer -> protected void destroyNode(Exchange exchange);1435767436;Destroys the node with the specified nodeId.;protected void destroyNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.destroyNodesMatching(predicate)__    };destroys,the,node,with,the,specified,node,id;protected,void,destroy,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,destroy,nodes,matching,predicate
JcloudsComputeProducer -> protected void destroyNode(Exchange exchange);1537290824;Destroys the node with the specified nodeId.;protected void destroyNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.destroyNodesMatching(predicate)__    };destroys,the,node,with,the,specified,node,id;protected,void,destroy,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,destroy,nodes,matching,predicate
JcloudsComputeProducer -> protected String getUser(Exchange exchange);1317243118;Retrieves the user from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getUser(Exchange exchange) {_        String user = ((JcloudsComputeEndpoint) getEndpoint()).getUser()___        if (exchange.getIn().getHeader(JcloudsConstants.USER) != null) {_            user = (String) exchange.getIn().getHeader(JcloudsConstants.USER)__        }_        return user__    };retrieves,the,user,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,user,exchange,exchange,string,user,jclouds,compute,endpoint,get,endpoint,get,user,if,exchange,get,in,get,header,jclouds,constants,user,null,user,string,exchange,get,in,get,header,jclouds,constants,user,return,user
JcloudsComputeProducer -> protected String getUser(Exchange exchange);1320504254;Retrieves the user from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getUser(Exchange exchange) {_        String user = ((JcloudsComputeEndpoint) getEndpoint()).getUser()___        if (exchange.getIn().getHeader(JcloudsConstants.USER) != null) {_            user = (String) exchange.getIn().getHeader(JcloudsConstants.USER)__        }_        return user__    };retrieves,the,user,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,user,exchange,exchange,string,user,jclouds,compute,endpoint,get,endpoint,get,user,if,exchange,get,in,get,header,jclouds,constants,user,null,user,string,exchange,get,in,get,header,jclouds,constants,user,return,user
JcloudsComputeProducer -> protected String getUser(Exchange exchange);1326907405;Retrieves the user from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getUser(Exchange exchange) {_        String user = ((JcloudsComputeEndpoint) getEndpoint()).getUser()___        if (exchange.getIn().getHeader(JcloudsConstants.USER) != null) {_            user = (String) exchange.getIn().getHeader(JcloudsConstants.USER)__        }_        return user__    };retrieves,the,user,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,user,exchange,exchange,string,user,jclouds,compute,endpoint,get,endpoint,get,user,if,exchange,get,in,get,header,jclouds,constants,user,null,user,string,exchange,get,in,get,header,jclouds,constants,user,return,user
JcloudsComputeProducer -> protected String getUser(Exchange exchange);1327089055;Retrieves the user from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getUser(Exchange exchange) {_        String user = getEndpoint().getUser()___        if (exchange.getIn().getHeader(JcloudsConstants.USER) != null) {_            user = (String) exchange.getIn().getHeader(JcloudsConstants.USER)__        }_        return user__    };retrieves,the,user,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,user,exchange,exchange,string,user,get,endpoint,get,user,if,exchange,get,in,get,header,jclouds,constants,user,null,user,string,exchange,get,in,get,header,jclouds,constants,user,return,user
JcloudsComputeProducer -> protected String getUser(Exchange exchange);1333145181;Retrieves the user from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getUser(Exchange exchange) {_        String user = getEndpoint().getUser()___        if (exchange.getIn().getHeader(JcloudsConstants.USER) != null) {_            user = (String) exchange.getIn().getHeader(JcloudsConstants.USER)__        }_        return user__    };retrieves,the,user,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,user,exchange,exchange,string,user,get,endpoint,get,user,if,exchange,get,in,get,header,jclouds,constants,user,null,user,string,exchange,get,in,get,header,jclouds,constants,user,return,user
JcloudsComputeProducer -> protected String getUser(Exchange exchange);1353141176;Retrieves the user from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getUser(Exchange exchange) {_        String user = getEndpoint().getUser()___        if (exchange.getIn().getHeader(JcloudsConstants.USER) != null) {_            user = (String) exchange.getIn().getHeader(JcloudsConstants.USER)__        }_        return user__    };retrieves,the,user,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,user,exchange,exchange,string,user,get,endpoint,get,user,if,exchange,get,in,get,header,jclouds,constants,user,null,user,string,exchange,get,in,get,header,jclouds,constants,user,return,user
JcloudsComputeProducer -> protected String getUser(Exchange exchange);1373281324;Retrieves the user from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getUser(Exchange exchange) {_        String user = getEndpoint().getUser()___        if (exchange.getIn().getHeader(JcloudsConstants.USER) != null) {_            user = (String) exchange.getIn().getHeader(JcloudsConstants.USER)__        }_        return user__    };retrieves,the,user,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,user,exchange,exchange,string,user,get,endpoint,get,user,if,exchange,get,in,get,header,jclouds,constants,user,null,user,string,exchange,get,in,get,header,jclouds,constants,user,return,user
JcloudsComputeProducer -> protected String getUser(Exchange exchange);1388443957;Retrieves the user from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getUser(Exchange exchange) {_        String user = getEndpoint().getUser()___        if (exchange.getIn().getHeader(JcloudsConstants.USER) != null) {_            user = (String) exchange.getIn().getHeader(JcloudsConstants.USER)__        }_        return user__    };retrieves,the,user,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,user,exchange,exchange,string,user,get,endpoint,get,user,if,exchange,get,in,get,header,jclouds,constants,user,null,user,string,exchange,get,in,get,header,jclouds,constants,user,return,user
JcloudsComputeProducer -> protected String getUser(Exchange exchange);1435493075;Retrieves the user from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getUser(Exchange exchange) {_        String user = getEndpoint().getUser()___        if (exchange.getIn().getHeader(JcloudsConstants.USER) != null) {_            user = (String) exchange.getIn().getHeader(JcloudsConstants.USER)__        }_        return user__    };retrieves,the,user,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,user,exchange,exchange,string,user,get,endpoint,get,user,if,exchange,get,in,get,header,jclouds,constants,user,null,user,string,exchange,get,in,get,header,jclouds,constants,user,return,user
JcloudsComputeProducer -> protected String getUser(Exchange exchange);1435496986;Retrieves the user from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getUser(Exchange exchange) {_        String user = getEndpoint().getUser()___        if (exchange.getIn().getHeader(JcloudsConstants.USER) != null) {_            user = (String) exchange.getIn().getHeader(JcloudsConstants.USER)__        }_        return user__    };retrieves,the,user,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,user,exchange,exchange,string,user,get,endpoint,get,user,if,exchange,get,in,get,header,jclouds,constants,user,null,user,string,exchange,get,in,get,header,jclouds,constants,user,return,user
JcloudsComputeProducer -> protected String getUser(Exchange exchange);1435497250;Retrieves the user from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getUser(Exchange exchange) {_        String user = getEndpoint().getUser()___        if (exchange.getIn().getHeader(JcloudsConstants.USER) != null) {_            user = (String) exchange.getIn().getHeader(JcloudsConstants.USER)__        }_        return user__    };retrieves,the,user,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,user,exchange,exchange,string,user,get,endpoint,get,user,if,exchange,get,in,get,header,jclouds,constants,user,null,user,string,exchange,get,in,get,header,jclouds,constants,user,return,user
JcloudsComputeProducer -> protected String getUser(Exchange exchange);1435498142;Retrieves the user from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getUser(Exchange exchange) {_        String user = getEndpoint().getUser()___        if (exchange.getIn().getHeader(JcloudsConstants.USER) != null) {_            user = (String) exchange.getIn().getHeader(JcloudsConstants.USER)__        }_        return user__    };retrieves,the,user,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,user,exchange,exchange,string,user,get,endpoint,get,user,if,exchange,get,in,get,header,jclouds,constants,user,null,user,string,exchange,get,in,get,header,jclouds,constants,user,return,user
JcloudsComputeProducer -> protected String getUser(Exchange exchange);1435500284;Retrieves the user from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getUser(Exchange exchange) {_        String user = getEndpoint().getUser()___        if (exchange.getIn().getHeader(JcloudsConstants.USER) != null) {_            user = (String) exchange.getIn().getHeader(JcloudsConstants.USER)__        }_        return user__    };retrieves,the,user,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,user,exchange,exchange,string,user,get,endpoint,get,user,if,exchange,get,in,get,header,jclouds,constants,user,null,user,string,exchange,get,in,get,header,jclouds,constants,user,return,user
JcloudsComputeProducer -> protected String getUser(Exchange exchange);1435764273;Retrieves the user from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getUser(Exchange exchange) {_        String user = getEndpoint().getUser()___        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.USER))) {_            user = (String) exchange.getIn().getHeader(JcloudsConstants.USER)__        }_        return user__    };retrieves,the,user,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,user,exchange,exchange,string,user,get,endpoint,get,user,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,user,user,string,exchange,get,in,get,header,jclouds,constants,user,return,user
JcloudsComputeProducer -> protected String getUser(Exchange exchange);1435767436;Retrieves the user from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getUser(Exchange exchange) {_        String user = getEndpoint().getUser()___        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.USER))) {_            user = exchange.getIn().getHeader(JcloudsConstants.USER, String.class)__        }_        return user__    };retrieves,the,user,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,user,exchange,exchange,string,user,get,endpoint,get,user,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,user,user,exchange,get,in,get,header,jclouds,constants,user,string,class,return,user
JcloudsComputeProducer -> protected String getUser(Exchange exchange);1537290824;Retrieves the user from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getUser(Exchange exchange) {_        String user = getEndpoint().getUser()___        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.USER))) {_            user = exchange.getIn().getHeader(JcloudsConstants.USER, String.class)__        }_        return user__    };retrieves,the,user,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,user,exchange,exchange,string,user,get,endpoint,get,user,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,user,user,exchange,get,in,get,header,jclouds,constants,user,string,class,return,user
JcloudsComputeProducer -> protected void rebootNode(Exchange exchange);1435493075;Reboot the node with the specified nodeId.;protected void rebootNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.rebootNodesMatching(predicate)__    };reboot,the,node,with,the,specified,node,id;protected,void,reboot,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,reboot,nodes,matching,predicate
JcloudsComputeProducer -> protected void rebootNode(Exchange exchange);1435496986;Reboot the node with the specified nodeId.;protected void rebootNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.rebootNodesMatching(predicate)__    };reboot,the,node,with,the,specified,node,id;protected,void,reboot,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,reboot,nodes,matching,predicate
JcloudsComputeProducer -> protected void rebootNode(Exchange exchange);1435497250;Reboot the node with the specified nodeId.;protected void rebootNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.rebootNodesMatching(predicate)__    };reboot,the,node,with,the,specified,node,id;protected,void,reboot,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,reboot,nodes,matching,predicate
JcloudsComputeProducer -> protected void rebootNode(Exchange exchange);1435498142;Reboot the node with the specified nodeId.;protected void rebootNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.rebootNodesMatching(predicate)__    };reboot,the,node,with,the,specified,node,id;protected,void,reboot,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,reboot,nodes,matching,predicate
JcloudsComputeProducer -> protected void rebootNode(Exchange exchange);1435500284;Reboot the node with the specified nodeId.;protected void rebootNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.rebootNodesMatching(predicate)__    };reboot,the,node,with,the,specified,node,id;protected,void,reboot,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,reboot,nodes,matching,predicate
JcloudsComputeProducer -> protected void rebootNode(Exchange exchange);1435764273;Reboot the node with the specified nodeId.;protected void rebootNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.rebootNodesMatching(predicate)__    };reboot,the,node,with,the,specified,node,id;protected,void,reboot,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,reboot,nodes,matching,predicate
JcloudsComputeProducer -> protected void rebootNode(Exchange exchange);1435767436;Reboot the node with the specified nodeId.;protected void rebootNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.rebootNodesMatching(predicate)__    };reboot,the,node,with,the,specified,node,id;protected,void,reboot,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,reboot,nodes,matching,predicate
JcloudsComputeProducer -> protected void rebootNode(Exchange exchange);1537290824;Reboot the node with the specified nodeId.;protected void rebootNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.rebootNodesMatching(predicate)__    };reboot,the,node,with,the,specified,node,id;protected,void,reboot,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,reboot,nodes,matching,predicate
JcloudsComputeProducer -> protected void suspendNode(Exchange exchange);1435497250;Reboot the node with the specified nodeId.;protected void suspendNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.suspendNodesMatching(predicate)__    };reboot,the,node,with,the,specified,node,id;protected,void,suspend,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,suspend,nodes,matching,predicate
JcloudsComputeProducer -> protected void suspendNode(Exchange exchange);1435498142;Suspend the node with the specified nodeId.;protected void suspendNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.suspendNodesMatching(predicate)__    };suspend,the,node,with,the,specified,node,id;protected,void,suspend,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,suspend,nodes,matching,predicate
JcloudsComputeProducer -> protected void suspendNode(Exchange exchange);1435500284;Suspend the node with the specified nodeId.;protected void suspendNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.suspendNodesMatching(predicate)__    };suspend,the,node,with,the,specified,node,id;protected,void,suspend,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,suspend,nodes,matching,predicate
JcloudsComputeProducer -> protected void suspendNode(Exchange exchange);1435764273;Suspend the node with the specified nodeId.;protected void suspendNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.suspendNodesMatching(predicate)__    };suspend,the,node,with,the,specified,node,id;protected,void,suspend,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,suspend,nodes,matching,predicate
JcloudsComputeProducer -> protected void suspendNode(Exchange exchange);1435767436;Suspend the node with the specified nodeId.;protected void suspendNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.suspendNodesMatching(predicate)__    };suspend,the,node,with,the,specified,node,id;protected,void,suspend,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,suspend,nodes,matching,predicate
JcloudsComputeProducer -> protected void suspendNode(Exchange exchange);1537290824;Suspend the node with the specified nodeId.;protected void suspendNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.suspendNodesMatching(predicate)__    };suspend,the,node,with,the,specified,node,id;protected,void,suspend,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,suspend,nodes,matching,predicate
JcloudsComputeProducer -> protected String getGroup(Exchange exchange);1317243118;Retrieves the group from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getGroup(Exchange exchange) {_        String group = ((JcloudsComputeEndpoint) getEndpoint()).getGroup()___        if (exchange.getIn().getHeader(JcloudsConstants.GROUP) != null) {_            group = (String) exchange.getIn().getHeader(JcloudsConstants.GROUP)__        }_        return group__    };retrieves,the,group,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,group,exchange,exchange,string,group,jclouds,compute,endpoint,get,endpoint,get,group,if,exchange,get,in,get,header,jclouds,constants,group,null,group,string,exchange,get,in,get,header,jclouds,constants,group,return,group
JcloudsComputeProducer -> protected String getGroup(Exchange exchange);1320504254;Retrieves the group from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getGroup(Exchange exchange) {_        String group = ((JcloudsComputeEndpoint) getEndpoint()).getGroup()___        if (exchange.getIn().getHeader(JcloudsConstants.GROUP) != null) {_            group = (String) exchange.getIn().getHeader(JcloudsConstants.GROUP)__        }_        return group__    };retrieves,the,group,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,group,exchange,exchange,string,group,jclouds,compute,endpoint,get,endpoint,get,group,if,exchange,get,in,get,header,jclouds,constants,group,null,group,string,exchange,get,in,get,header,jclouds,constants,group,return,group
JcloudsComputeProducer -> protected String getGroup(Exchange exchange);1326907405;Retrieves the group from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getGroup(Exchange exchange) {_        String group = ((JcloudsComputeEndpoint) getEndpoint()).getGroup()___        if (exchange.getIn().getHeader(JcloudsConstants.GROUP) != null) {_            group = (String) exchange.getIn().getHeader(JcloudsConstants.GROUP)__        }_        return group__    };retrieves,the,group,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,group,exchange,exchange,string,group,jclouds,compute,endpoint,get,endpoint,get,group,if,exchange,get,in,get,header,jclouds,constants,group,null,group,string,exchange,get,in,get,header,jclouds,constants,group,return,group
JcloudsComputeProducer -> protected String getGroup(Exchange exchange);1327089055;Retrieves the group from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getGroup(Exchange exchange) {_        String group = getEndpoint().getGroup()___        if (exchange.getIn().getHeader(JcloudsConstants.GROUP) != null) {_            group = (String) exchange.getIn().getHeader(JcloudsConstants.GROUP)__        }_        return group__    };retrieves,the,group,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,group,exchange,exchange,string,group,get,endpoint,get,group,if,exchange,get,in,get,header,jclouds,constants,group,null,group,string,exchange,get,in,get,header,jclouds,constants,group,return,group
JcloudsComputeProducer -> protected String getGroup(Exchange exchange);1333145181;Retrieves the group from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getGroup(Exchange exchange) {_        String group = getEndpoint().getGroup()___        if (exchange.getIn().getHeader(JcloudsConstants.GROUP) != null) {_            group = (String) exchange.getIn().getHeader(JcloudsConstants.GROUP)__        }_        return group__    };retrieves,the,group,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,group,exchange,exchange,string,group,get,endpoint,get,group,if,exchange,get,in,get,header,jclouds,constants,group,null,group,string,exchange,get,in,get,header,jclouds,constants,group,return,group
JcloudsComputeProducer -> protected String getGroup(Exchange exchange);1353141176;Retrieves the group from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getGroup(Exchange exchange) {_        String group = getEndpoint().getGroup()___        if (exchange.getIn().getHeader(JcloudsConstants.GROUP) != null) {_            group = (String) exchange.getIn().getHeader(JcloudsConstants.GROUP)__        }_        return group__    };retrieves,the,group,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,group,exchange,exchange,string,group,get,endpoint,get,group,if,exchange,get,in,get,header,jclouds,constants,group,null,group,string,exchange,get,in,get,header,jclouds,constants,group,return,group
JcloudsComputeProducer -> protected String getGroup(Exchange exchange);1373281324;Retrieves the group from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getGroup(Exchange exchange) {_        String group = getEndpoint().getGroup()___        if (exchange.getIn().getHeader(JcloudsConstants.GROUP) != null) {_            group = (String) exchange.getIn().getHeader(JcloudsConstants.GROUP)__        }_        return group__    };retrieves,the,group,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,group,exchange,exchange,string,group,get,endpoint,get,group,if,exchange,get,in,get,header,jclouds,constants,group,null,group,string,exchange,get,in,get,header,jclouds,constants,group,return,group
JcloudsComputeProducer -> protected String getGroup(Exchange exchange);1388443957;Retrieves the group from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getGroup(Exchange exchange) {_        String group = getEndpoint().getGroup()___        if (exchange.getIn().getHeader(JcloudsConstants.GROUP) != null) {_            group = (String) exchange.getIn().getHeader(JcloudsConstants.GROUP)__        }_        return group__    };retrieves,the,group,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,group,exchange,exchange,string,group,get,endpoint,get,group,if,exchange,get,in,get,header,jclouds,constants,group,null,group,string,exchange,get,in,get,header,jclouds,constants,group,return,group
JcloudsComputeProducer -> protected String getGroup(Exchange exchange);1435493075;Retrieves the group from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getGroup(Exchange exchange) {_        String group = getEndpoint().getGroup()___        if (exchange.getIn().getHeader(JcloudsConstants.GROUP) != null) {_            group = (String) exchange.getIn().getHeader(JcloudsConstants.GROUP)__        }_        return group__    };retrieves,the,group,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,group,exchange,exchange,string,group,get,endpoint,get,group,if,exchange,get,in,get,header,jclouds,constants,group,null,group,string,exchange,get,in,get,header,jclouds,constants,group,return,group
JcloudsComputeProducer -> protected String getGroup(Exchange exchange);1435496986;Retrieves the group from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getGroup(Exchange exchange) {_        String group = getEndpoint().getGroup()___        if (exchange.getIn().getHeader(JcloudsConstants.GROUP) != null) {_            group = (String) exchange.getIn().getHeader(JcloudsConstants.GROUP)__        }_        return group__    };retrieves,the,group,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,group,exchange,exchange,string,group,get,endpoint,get,group,if,exchange,get,in,get,header,jclouds,constants,group,null,group,string,exchange,get,in,get,header,jclouds,constants,group,return,group
JcloudsComputeProducer -> protected String getGroup(Exchange exchange);1435497250;Retrieves the group from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getGroup(Exchange exchange) {_        String group = getEndpoint().getGroup()___        if (exchange.getIn().getHeader(JcloudsConstants.GROUP) != null) {_            group = (String) exchange.getIn().getHeader(JcloudsConstants.GROUP)__        }_        return group__    };retrieves,the,group,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,group,exchange,exchange,string,group,get,endpoint,get,group,if,exchange,get,in,get,header,jclouds,constants,group,null,group,string,exchange,get,in,get,header,jclouds,constants,group,return,group
JcloudsComputeProducer -> protected String getGroup(Exchange exchange);1435498142;Retrieves the group from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getGroup(Exchange exchange) {_        String group = getEndpoint().getGroup()___        if (exchange.getIn().getHeader(JcloudsConstants.GROUP) != null) {_            group = (String) exchange.getIn().getHeader(JcloudsConstants.GROUP)__        }_        return group__    };retrieves,the,group,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,group,exchange,exchange,string,group,get,endpoint,get,group,if,exchange,get,in,get,header,jclouds,constants,group,null,group,string,exchange,get,in,get,header,jclouds,constants,group,return,group
JcloudsComputeProducer -> protected String getGroup(Exchange exchange);1435500284;Retrieves the group from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getGroup(Exchange exchange) {_        String group = getEndpoint().getGroup()___        if (exchange.getIn().getHeader(JcloudsConstants.GROUP) != null) {_            group = (String) exchange.getIn().getHeader(JcloudsConstants.GROUP)__        }_        return group__    };retrieves,the,group,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,group,exchange,exchange,string,group,get,endpoint,get,group,if,exchange,get,in,get,header,jclouds,constants,group,null,group,string,exchange,get,in,get,header,jclouds,constants,group,return,group
JcloudsComputeProducer -> protected String getGroup(Exchange exchange);1435764273;Retrieves the group from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getGroup(Exchange exchange) {_        String group = getEndpoint().getGroup()___        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.GROUP))) {_            group = (String) exchange.getIn().getHeader(JcloudsConstants.GROUP)__        }_        return group__    };retrieves,the,group,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,group,exchange,exchange,string,group,get,endpoint,get,group,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,group,group,string,exchange,get,in,get,header,jclouds,constants,group,return,group
JcloudsComputeProducer -> protected String getGroup(Exchange exchange);1435767436;Retrieves the group from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getGroup(Exchange exchange) {_        String group = getEndpoint().getGroup()___        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.GROUP))) {_            group = exchange.getIn().getHeader(JcloudsConstants.GROUP, String.class)__        }_        return group__    };retrieves,the,group,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,group,exchange,exchange,string,group,get,endpoint,get,group,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,group,group,exchange,get,in,get,header,jclouds,constants,group,string,class,return,group
JcloudsComputeProducer -> protected String getGroup(Exchange exchange);1537290824;Retrieves the group from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getGroup(Exchange exchange) {_        String group = getEndpoint().getGroup()___        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.GROUP))) {_            group = exchange.getIn().getHeader(JcloudsConstants.GROUP, String.class)__        }_        return group__    };retrieves,the,group,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,group,exchange,exchange,string,group,get,endpoint,get,group,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,group,group,exchange,get,in,get,header,jclouds,constants,group,string,class,return,group
JcloudsComputeProducer -> protected void listNodes(Exchange exchange) throws CamelException;1317243118;Sets the metadata of the available nodes to the out message.__@param exchange_@throws CamelException;protected void listNodes(Exchange exchange) throws CamelException {_        Set<? extends ComputeMetadata> computeMetadatas = computeService.listNodes()__        exchange.getOut().setBody(computeMetadatas)__    };sets,the,metadata,of,the,available,nodes,to,the,out,message,param,exchange,throws,camel,exception;protected,void,list,nodes,exchange,exchange,throws,camel,exception,set,extends,compute,metadata,compute,metadatas,compute,service,list,nodes,exchange,get,out,set,body,compute,metadatas
JcloudsComputeProducer -> protected void listNodes(Exchange exchange) throws CamelException;1320504254;Sets the metadata of the available nodes to the out message.__@param exchange_@throws CamelException;protected void listNodes(Exchange exchange) throws CamelException {_        Predicate<ComputeMetadata> predicate = getComputePredicate(exchange)__        Set<? extends ComputeMetadata> computeMetadatas = computeService.listNodesDetailsMatching(predicate)__        exchange.getOut().setBody(computeMetadatas)__    };sets,the,metadata,of,the,available,nodes,to,the,out,message,param,exchange,throws,camel,exception;protected,void,list,nodes,exchange,exchange,throws,camel,exception,predicate,compute,metadata,predicate,get,compute,predicate,exchange,set,extends,compute,metadata,compute,metadatas,compute,service,list,nodes,details,matching,predicate,exchange,get,out,set,body,compute,metadatas
JcloudsComputeProducer -> protected void listNodes(Exchange exchange) throws CamelException;1326907405;Sets the metadata of the available nodes to the out message.__@param exchange_@throws CamelException;protected void listNodes(Exchange exchange) throws CamelException {_        Predicate<ComputeMetadata> predicate = getComputePredicate(exchange)__        Set<? extends ComputeMetadata> computeMetadatas = computeService.listNodesDetailsMatching(predicate)__        exchange.getOut().setBody(computeMetadatas)__    };sets,the,metadata,of,the,available,nodes,to,the,out,message,param,exchange,throws,camel,exception;protected,void,list,nodes,exchange,exchange,throws,camel,exception,predicate,compute,metadata,predicate,get,compute,predicate,exchange,set,extends,compute,metadata,compute,metadatas,compute,service,list,nodes,details,matching,predicate,exchange,get,out,set,body,compute,metadatas
JcloudsComputeProducer -> protected void listNodes(Exchange exchange) throws CamelException;1327089055;Sets the metadata of the available nodes to the out message.__@param exchange_@throws CamelException;protected void listNodes(Exchange exchange) throws CamelException {_        Predicate<ComputeMetadata> predicate = getComputePredicate(exchange)__        Set<? extends ComputeMetadata> computeMetadatas = computeService.listNodesDetailsMatching(predicate)__        exchange.getOut().setBody(computeMetadatas)__    };sets,the,metadata,of,the,available,nodes,to,the,out,message,param,exchange,throws,camel,exception;protected,void,list,nodes,exchange,exchange,throws,camel,exception,predicate,compute,metadata,predicate,get,compute,predicate,exchange,set,extends,compute,metadata,compute,metadatas,compute,service,list,nodes,details,matching,predicate,exchange,get,out,set,body,compute,metadatas
JcloudsComputeProducer -> protected void listNodes(Exchange exchange) throws CamelException;1333145181;Sets the metadata of the available nodes to the out message.__@param exchange_@throws CamelException;protected void listNodes(Exchange exchange) throws CamelException {_        Predicate<ComputeMetadata> predicate = getComputePredicate(exchange)__        Set<? extends ComputeMetadata> computeMetadatas = computeService.listNodesDetailsMatching(predicate)__        exchange.getOut().setBody(computeMetadatas)__    };sets,the,metadata,of,the,available,nodes,to,the,out,message,param,exchange,throws,camel,exception;protected,void,list,nodes,exchange,exchange,throws,camel,exception,predicate,compute,metadata,predicate,get,compute,predicate,exchange,set,extends,compute,metadata,compute,metadatas,compute,service,list,nodes,details,matching,predicate,exchange,get,out,set,body,compute,metadatas
JcloudsComputeProducer -> protected void createNode(Exchange exchange) throws CamelException;1317243118;Create a node with the specified group.__@param exchange_@throws CamelException;protected void createNode(Exchange exchange) throws CamelException {_        String group = getGroup(exchange)__        String imageId = getImageId(exchange)__        String locationId = getLocationId(exchange)__        String hardwareId = getHardwareId(exchange)___        if (group == null) {_            throw new CamelException("Group must be specific in the URI or as exchange property for the destroy node operation.")__        }_        TemplateBuilder builder = computeService.templateBuilder()__        builder.any()___        if (locationId != null) {_            builder.locationId(locationId)__        }_        if (imageId != null) {_            builder.imageId(imageId)__        }_        if (hardwareId != null) {_            builder.hardwareId(hardwareId)__        }__        try {_            Set<? extends NodeMetadata> nodeMetadatas = computeService.createNodesInGroup(group, 1, builder.build())__            exchange.getOut().setBody(nodeMetadatas)__            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__        } catch (RunNodesException e) {_            throw new CamelException("Error creating jclouds node.", e)__        }_    };create,a,node,with,the,specified,group,param,exchange,throws,camel,exception;protected,void,create,node,exchange,exchange,throws,camel,exception,string,group,get,group,exchange,string,image,id,get,image,id,exchange,string,location,id,get,location,id,exchange,string,hardware,id,get,hardware,id,exchange,if,group,null,throw,new,camel,exception,group,must,be,specific,in,the,uri,or,as,exchange,property,for,the,destroy,node,operation,template,builder,builder,compute,service,template,builder,builder,any,if,location,id,null,builder,location,id,location,id,if,image,id,null,builder,image,id,image,id,if,hardware,id,null,builder,hardware,id,hardware,id,try,set,extends,node,metadata,node,metadatas,compute,service,create,nodes,in,group,group,1,builder,build,exchange,get,out,set,body,node,metadatas,exchange,get,out,set,headers,exchange,get,in,get,headers,catch,run,nodes,exception,e,throw,new,camel,exception,error,creating,jclouds,node,e
JcloudsComputeProducer -> protected void createNode(Exchange exchange) throws CamelException;1320504254;Create a node with the specified group.__@param exchange_@throws CamelException;protected void createNode(Exchange exchange) throws CamelException {_        String group = getGroup(exchange)__        String imageId = getImageId(exchange)__        String locationId = getLocationId(exchange)__        String hardwareId = getHardwareId(exchange)___        if (group == null) {_            throw new CamelException("Group must be specific in the URI or as exchange property for the destroy node operation.")__        }_        TemplateBuilder builder = computeService.templateBuilder()__        builder.any()___        if (locationId != null) {_            builder.locationId(locationId)__        }_        if (imageId != null) {_            builder.imageId(imageId)__        }_        if (hardwareId != null) {_            builder.hardwareId(hardwareId)__        }__        try {_            Set<? extends NodeMetadata> nodeMetadatas = computeService.createNodesInGroup(group, 1, builder.build())__            exchange.getOut().setBody(nodeMetadatas)__            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__        } catch (RunNodesException e) {_            throw new CamelException("Error creating jclouds node.", e)__        }_    };create,a,node,with,the,specified,group,param,exchange,throws,camel,exception;protected,void,create,node,exchange,exchange,throws,camel,exception,string,group,get,group,exchange,string,image,id,get,image,id,exchange,string,location,id,get,location,id,exchange,string,hardware,id,get,hardware,id,exchange,if,group,null,throw,new,camel,exception,group,must,be,specific,in,the,uri,or,as,exchange,property,for,the,destroy,node,operation,template,builder,builder,compute,service,template,builder,builder,any,if,location,id,null,builder,location,id,location,id,if,image,id,null,builder,image,id,image,id,if,hardware,id,null,builder,hardware,id,hardware,id,try,set,extends,node,metadata,node,metadatas,compute,service,create,nodes,in,group,group,1,builder,build,exchange,get,out,set,body,node,metadatas,exchange,get,out,set,headers,exchange,get,in,get,headers,catch,run,nodes,exception,e,throw,new,camel,exception,error,creating,jclouds,node,e
JcloudsComputeProducer -> protected void createNode(Exchange exchange) throws CamelException;1326907405;Create a node with the specified group.__@param exchange_@throws CamelException;protected void createNode(Exchange exchange) throws CamelException {_        String group = getGroup(exchange)__        String imageId = getImageId(exchange)__        String locationId = getLocationId(exchange)__        String hardwareId = getHardwareId(exchange)___        if (group == null) {_            throw new CamelException("Group must be specific in the URI or as exchange property for the destroy node operation.")__        }_        TemplateBuilder builder = computeService.templateBuilder()__        builder.any()___        if (locationId != null) {_            builder.locationId(locationId)__        }_        if (imageId != null) {_            builder.imageId(imageId)__        }_        if (hardwareId != null) {_            builder.hardwareId(hardwareId)__        }__        try {_            Set<? extends NodeMetadata> nodeMetadatas = computeService.createNodesInGroup(group, 1, builder.build())__            exchange.getOut().setBody(nodeMetadatas)__            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__        } catch (RunNodesException e) {_            throw new CamelException("Error creating jclouds node.", e)__        }_    };create,a,node,with,the,specified,group,param,exchange,throws,camel,exception;protected,void,create,node,exchange,exchange,throws,camel,exception,string,group,get,group,exchange,string,image,id,get,image,id,exchange,string,location,id,get,location,id,exchange,string,hardware,id,get,hardware,id,exchange,if,group,null,throw,new,camel,exception,group,must,be,specific,in,the,uri,or,as,exchange,property,for,the,destroy,node,operation,template,builder,builder,compute,service,template,builder,builder,any,if,location,id,null,builder,location,id,location,id,if,image,id,null,builder,image,id,image,id,if,hardware,id,null,builder,hardware,id,hardware,id,try,set,extends,node,metadata,node,metadatas,compute,service,create,nodes,in,group,group,1,builder,build,exchange,get,out,set,body,node,metadatas,exchange,get,out,set,headers,exchange,get,in,get,headers,catch,run,nodes,exception,e,throw,new,camel,exception,error,creating,jclouds,node,e
JcloudsComputeProducer -> protected void createNode(Exchange exchange) throws CamelException;1327089055;Create a node with the specified group.__@param exchange_@throws CamelException;protected void createNode(Exchange exchange) throws CamelException {_        String group = getGroup(exchange)__        String imageId = getImageId(exchange)__        String locationId = getLocationId(exchange)__        String hardwareId = getHardwareId(exchange)___        if (group == null) {_            throw new CamelException("Group must be specific in the URI or as exchange property for the destroy node operation.")__        }_        TemplateBuilder builder = computeService.templateBuilder()__        builder.any()___        if (locationId != null) {_            builder.locationId(locationId)__        }_        if (imageId != null) {_            builder.imageId(imageId)__        }_        if (hardwareId != null) {_            builder.hardwareId(hardwareId)__        }__        try {_            Set<? extends NodeMetadata> nodeMetadatas = computeService.createNodesInGroup(group, 1, builder.build())__            exchange.getOut().setBody(nodeMetadatas)__            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__        } catch (RunNodesException e) {_            throw new CamelException("Error creating jclouds node.", e)__        }_    };create,a,node,with,the,specified,group,param,exchange,throws,camel,exception;protected,void,create,node,exchange,exchange,throws,camel,exception,string,group,get,group,exchange,string,image,id,get,image,id,exchange,string,location,id,get,location,id,exchange,string,hardware,id,get,hardware,id,exchange,if,group,null,throw,new,camel,exception,group,must,be,specific,in,the,uri,or,as,exchange,property,for,the,destroy,node,operation,template,builder,builder,compute,service,template,builder,builder,any,if,location,id,null,builder,location,id,location,id,if,image,id,null,builder,image,id,image,id,if,hardware,id,null,builder,hardware,id,hardware,id,try,set,extends,node,metadata,node,metadatas,compute,service,create,nodes,in,group,group,1,builder,build,exchange,get,out,set,body,node,metadatas,exchange,get,out,set,headers,exchange,get,in,get,headers,catch,run,nodes,exception,e,throw,new,camel,exception,error,creating,jclouds,node,e
JcloudsComputeProducer -> protected void createNode(Exchange exchange) throws CamelException;1333145181;Create a node with the specified group.__@param exchange_@throws CamelException;protected void createNode(Exchange exchange) throws CamelException {_        String group = getGroup(exchange)__        String imageId = getImageId(exchange)__        String locationId = getLocationId(exchange)__        String hardwareId = getHardwareId(exchange)___        if (group == null) {_            throw new CamelException("Group must be specific in the URI or as exchange property for the destroy node operation.")__        }_        TemplateBuilder builder = computeService.templateBuilder()__        builder.any()___        if (locationId != null) {_            builder.locationId(locationId)__        }_        if (imageId != null) {_            builder.imageId(imageId)__        }_        if (hardwareId != null) {_            builder.hardwareId(hardwareId)__        }__        try {_            Set<? extends NodeMetadata> nodeMetadatas = computeService.createNodesInGroup(group, 1, builder.build())__            exchange.getOut().setBody(nodeMetadatas)__            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__        } catch (RunNodesException e) {_            throw new CamelException("Error creating jclouds node.", e)__        }_    };create,a,node,with,the,specified,group,param,exchange,throws,camel,exception;protected,void,create,node,exchange,exchange,throws,camel,exception,string,group,get,group,exchange,string,image,id,get,image,id,exchange,string,location,id,get,location,id,exchange,string,hardware,id,get,hardware,id,exchange,if,group,null,throw,new,camel,exception,group,must,be,specific,in,the,uri,or,as,exchange,property,for,the,destroy,node,operation,template,builder,builder,compute,service,template,builder,builder,any,if,location,id,null,builder,location,id,location,id,if,image,id,null,builder,image,id,image,id,if,hardware,id,null,builder,hardware,id,hardware,id,try,set,extends,node,metadata,node,metadatas,compute,service,create,nodes,in,group,group,1,builder,build,exchange,get,out,set,body,node,metadatas,exchange,get,out,set,headers,exchange,get,in,get,headers,catch,run,nodes,exception,e,throw,new,camel,exception,error,creating,jclouds,node,e
JcloudsComputeProducer -> protected void createNode(Exchange exchange) throws CamelException;1353141176;Create a node with the specified group.;protected void createNode(Exchange exchange) throws CamelException {_        String group = getGroup(exchange)__        String imageId = getImageId(exchange)__        String locationId = getLocationId(exchange)__        String hardwareId = getHardwareId(exchange)___        if (group == null) {_            throw new CamelExchangeException("Group must be specific in the URI or as exchange property for the destroy node operation.", exchange)__        }_        TemplateBuilder builder = computeService.templateBuilder()__        builder.any()___        if (locationId != null) {_            builder.locationId(locationId)__        }_        if (imageId != null) {_            builder.imageId(imageId)__        }_        if (hardwareId != null) {_            builder.hardwareId(hardwareId)__        }__        try {_            Set<? extends NodeMetadata> nodeMetadatas = computeService.createNodesInGroup(group, 1, builder.build())__            exchange.getOut().setBody(nodeMetadatas)__            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__        } catch (RunNodesException e) {_            throw new CamelExchangeException("Error creating jclouds node.", exchange, e)__        }_    };create,a,node,with,the,specified,group;protected,void,create,node,exchange,exchange,throws,camel,exception,string,group,get,group,exchange,string,image,id,get,image,id,exchange,string,location,id,get,location,id,exchange,string,hardware,id,get,hardware,id,exchange,if,group,null,throw,new,camel,exchange,exception,group,must,be,specific,in,the,uri,or,as,exchange,property,for,the,destroy,node,operation,exchange,template,builder,builder,compute,service,template,builder,builder,any,if,location,id,null,builder,location,id,location,id,if,image,id,null,builder,image,id,image,id,if,hardware,id,null,builder,hardware,id,hardware,id,try,set,extends,node,metadata,node,metadatas,compute,service,create,nodes,in,group,group,1,builder,build,exchange,get,out,set,body,node,metadatas,exchange,get,out,set,headers,exchange,get,in,get,headers,catch,run,nodes,exception,e,throw,new,camel,exchange,exception,error,creating,jclouds,node,exchange,e
JcloudsComputeProducer -> protected void createNode(Exchange exchange) throws CamelException;1373281324;Create a node with the specified group.;protected void createNode(Exchange exchange) throws CamelException {_        String group = getGroup(exchange)__        String imageId = getImageId(exchange)__        String locationId = getLocationId(exchange)__        String hardwareId = getHardwareId(exchange)___        if (group == null) {_            throw new CamelExchangeException("Group must be specific in the URI or as exchange property for the destroy node operation.", exchange)__        }_        TemplateBuilder builder = computeService.templateBuilder()__        builder.any()___        if (locationId != null) {_            builder.locationId(locationId)__        }_        if (imageId != null) {_            builder.imageId(imageId)__        }_        if (hardwareId != null) {_            builder.hardwareId(hardwareId)__        }__        try {_            Set<? extends NodeMetadata> nodeMetadatas = computeService.createNodesInGroup(group, 1, builder.build())__            exchange.getOut().setBody(nodeMetadatas)__            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__        } catch (RunNodesException e) {_            throw new CamelExchangeException("Error creating jclouds node.", exchange, e)__        }_    };create,a,node,with,the,specified,group;protected,void,create,node,exchange,exchange,throws,camel,exception,string,group,get,group,exchange,string,image,id,get,image,id,exchange,string,location,id,get,location,id,exchange,string,hardware,id,get,hardware,id,exchange,if,group,null,throw,new,camel,exchange,exception,group,must,be,specific,in,the,uri,or,as,exchange,property,for,the,destroy,node,operation,exchange,template,builder,builder,compute,service,template,builder,builder,any,if,location,id,null,builder,location,id,location,id,if,image,id,null,builder,image,id,image,id,if,hardware,id,null,builder,hardware,id,hardware,id,try,set,extends,node,metadata,node,metadatas,compute,service,create,nodes,in,group,group,1,builder,build,exchange,get,out,set,body,node,metadatas,exchange,get,out,set,headers,exchange,get,in,get,headers,catch,run,nodes,exception,e,throw,new,camel,exchange,exception,error,creating,jclouds,node,exchange,e
JcloudsComputeProducer -> protected void createNode(Exchange exchange) throws CamelException;1388443957;Create a node with the specified group.;protected void createNode(Exchange exchange) throws CamelException {_        String group = getGroup(exchange)__        String imageId = getImageId(exchange)__        String locationId = getLocationId(exchange)__        String hardwareId = getHardwareId(exchange)___        if (group == null) {_            throw new CamelExchangeException("Group must be specific in the URI or as exchange property for the destroy node operation.", exchange)__        }_        TemplateBuilder builder = computeService.templateBuilder()__        builder.any()___        if (locationId != null) {_            builder.locationId(locationId)__        }_        if (imageId != null) {_            builder.imageId(imageId)__        }_        if (hardwareId != null) {_            builder.hardwareId(hardwareId)__        }__        try {_            Set<? extends NodeMetadata> nodeMetadatas = computeService.createNodesInGroup(group, 1, builder.build())__            exchange.getOut().setBody(nodeMetadatas)__            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__        } catch (RunNodesException e) {_            throw new CamelExchangeException("Error creating jclouds node.", exchange, e)__        }_    };create,a,node,with,the,specified,group;protected,void,create,node,exchange,exchange,throws,camel,exception,string,group,get,group,exchange,string,image,id,get,image,id,exchange,string,location,id,get,location,id,exchange,string,hardware,id,get,hardware,id,exchange,if,group,null,throw,new,camel,exchange,exception,group,must,be,specific,in,the,uri,or,as,exchange,property,for,the,destroy,node,operation,exchange,template,builder,builder,compute,service,template,builder,builder,any,if,location,id,null,builder,location,id,location,id,if,image,id,null,builder,image,id,image,id,if,hardware,id,null,builder,hardware,id,hardware,id,try,set,extends,node,metadata,node,metadatas,compute,service,create,nodes,in,group,group,1,builder,build,exchange,get,out,set,body,node,metadatas,exchange,get,out,set,headers,exchange,get,in,get,headers,catch,run,nodes,exception,e,throw,new,camel,exchange,exception,error,creating,jclouds,node,exchange,e
JcloudsComputeProducer -> protected void createNode(Exchange exchange) throws CamelException;1435493075;Create a node with the specified group.;protected void createNode(Exchange exchange) throws CamelException {_        String group = getGroup(exchange)__        String imageId = getImageId(exchange)__        String locationId = getLocationId(exchange)__        String hardwareId = getHardwareId(exchange)___        if (group == null) {_            throw new CamelExchangeException("Group must be specific in the URI or as exchange property for the destroy node operation.", exchange)__        }_        TemplateBuilder builder = computeService.templateBuilder()__        builder.any()___        if (locationId != null) {_            builder.locationId(locationId)__        }_        if (imageId != null) {_            builder.imageId(imageId)__        }_        if (hardwareId != null) {_            builder.hardwareId(hardwareId)__        }__        try {_            Set<? extends NodeMetadata> nodeMetadatas = computeService.createNodesInGroup(group, 1, builder.build())__            exchange.getOut().setBody(nodeMetadatas)__            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__        } catch (RunNodesException e) {_            throw new CamelExchangeException("Error creating jclouds node.", exchange, e)__        }_    };create,a,node,with,the,specified,group;protected,void,create,node,exchange,exchange,throws,camel,exception,string,group,get,group,exchange,string,image,id,get,image,id,exchange,string,location,id,get,location,id,exchange,string,hardware,id,get,hardware,id,exchange,if,group,null,throw,new,camel,exchange,exception,group,must,be,specific,in,the,uri,or,as,exchange,property,for,the,destroy,node,operation,exchange,template,builder,builder,compute,service,template,builder,builder,any,if,location,id,null,builder,location,id,location,id,if,image,id,null,builder,image,id,image,id,if,hardware,id,null,builder,hardware,id,hardware,id,try,set,extends,node,metadata,node,metadatas,compute,service,create,nodes,in,group,group,1,builder,build,exchange,get,out,set,body,node,metadatas,exchange,get,out,set,headers,exchange,get,in,get,headers,catch,run,nodes,exception,e,throw,new,camel,exchange,exception,error,creating,jclouds,node,exchange,e
JcloudsComputeProducer -> protected void createNode(Exchange exchange) throws CamelException;1435496986;Create a node with the specified group.;protected void createNode(Exchange exchange) throws CamelException {_        String group = getGroup(exchange)__        String imageId = getImageId(exchange)__        String locationId = getLocationId(exchange)__        String hardwareId = getHardwareId(exchange)___        if (group == null) {_            throw new CamelExchangeException("Group must be specific in the URI or as exchange property for the destroy node operation.", exchange)__        }_        TemplateBuilder builder = computeService.templateBuilder()__        builder.any()___        if (locationId != null) {_            builder.locationId(locationId)__        }_        if (imageId != null) {_            builder.imageId(imageId)__        }_        if (hardwareId != null) {_            builder.hardwareId(hardwareId)__        }__        try {_            Set<? extends NodeMetadata> nodeMetadatas = computeService.createNodesInGroup(group, 1, builder.build())__            exchange.getOut().setBody(nodeMetadatas)__            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__        } catch (RunNodesException e) {_            throw new CamelExchangeException("Error creating jclouds node.", exchange, e)__        }_    };create,a,node,with,the,specified,group;protected,void,create,node,exchange,exchange,throws,camel,exception,string,group,get,group,exchange,string,image,id,get,image,id,exchange,string,location,id,get,location,id,exchange,string,hardware,id,get,hardware,id,exchange,if,group,null,throw,new,camel,exchange,exception,group,must,be,specific,in,the,uri,or,as,exchange,property,for,the,destroy,node,operation,exchange,template,builder,builder,compute,service,template,builder,builder,any,if,location,id,null,builder,location,id,location,id,if,image,id,null,builder,image,id,image,id,if,hardware,id,null,builder,hardware,id,hardware,id,try,set,extends,node,metadata,node,metadatas,compute,service,create,nodes,in,group,group,1,builder,build,exchange,get,out,set,body,node,metadatas,exchange,get,out,set,headers,exchange,get,in,get,headers,catch,run,nodes,exception,e,throw,new,camel,exchange,exception,error,creating,jclouds,node,exchange,e
JcloudsComputeProducer -> protected void createNode(Exchange exchange) throws CamelException;1435497250;Create a node with the specified group.;protected void createNode(Exchange exchange) throws CamelException {_        String group = getGroup(exchange)__        String imageId = getImageId(exchange)__        String locationId = getLocationId(exchange)__        String hardwareId = getHardwareId(exchange)___        if (group == null) {_            throw new CamelExchangeException("Group must be specific in the URI or as exchange property for the destroy node operation.", exchange)__        }_        TemplateBuilder builder = computeService.templateBuilder()__        builder.any()___        if (locationId != null) {_            builder.locationId(locationId)__        }_        if (imageId != null) {_            builder.imageId(imageId)__        }_        if (hardwareId != null) {_            builder.hardwareId(hardwareId)__        }__        try {_            Set<? extends NodeMetadata> nodeMetadatas = computeService.createNodesInGroup(group, 1, builder.build())__            exchange.getOut().setBody(nodeMetadatas)__            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__        } catch (RunNodesException e) {_            throw new CamelExchangeException("Error creating jclouds node.", exchange, e)__        }_    };create,a,node,with,the,specified,group;protected,void,create,node,exchange,exchange,throws,camel,exception,string,group,get,group,exchange,string,image,id,get,image,id,exchange,string,location,id,get,location,id,exchange,string,hardware,id,get,hardware,id,exchange,if,group,null,throw,new,camel,exchange,exception,group,must,be,specific,in,the,uri,or,as,exchange,property,for,the,destroy,node,operation,exchange,template,builder,builder,compute,service,template,builder,builder,any,if,location,id,null,builder,location,id,location,id,if,image,id,null,builder,image,id,image,id,if,hardware,id,null,builder,hardware,id,hardware,id,try,set,extends,node,metadata,node,metadatas,compute,service,create,nodes,in,group,group,1,builder,build,exchange,get,out,set,body,node,metadatas,exchange,get,out,set,headers,exchange,get,in,get,headers,catch,run,nodes,exception,e,throw,new,camel,exchange,exception,error,creating,jclouds,node,exchange,e
JcloudsComputeProducer -> protected void createNode(Exchange exchange) throws CamelException;1435498142;Create a node with the specified group.;protected void createNode(Exchange exchange) throws CamelException {_        String group = getGroup(exchange)__        String imageId = getImageId(exchange)__        String locationId = getLocationId(exchange)__        String hardwareId = getHardwareId(exchange)___        if (group == null) {_            throw new CamelExchangeException("Group must be specific in the URI or as exchange property for the destroy node operation.", exchange)__        }_        TemplateBuilder builder = computeService.templateBuilder()__        builder.any()___        if (locationId != null) {_            builder.locationId(locationId)__        }_        if (imageId != null) {_            builder.imageId(imageId)__        }_        if (hardwareId != null) {_            builder.hardwareId(hardwareId)__        }__        try {_            Set<? extends NodeMetadata> nodeMetadatas = computeService.createNodesInGroup(group, 1, builder.build())__            exchange.getOut().setBody(nodeMetadatas)__            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__        } catch (RunNodesException e) {_            throw new CamelExchangeException("Error creating jclouds node.", exchange, e)__        }_    };create,a,node,with,the,specified,group;protected,void,create,node,exchange,exchange,throws,camel,exception,string,group,get,group,exchange,string,image,id,get,image,id,exchange,string,location,id,get,location,id,exchange,string,hardware,id,get,hardware,id,exchange,if,group,null,throw,new,camel,exchange,exception,group,must,be,specific,in,the,uri,or,as,exchange,property,for,the,destroy,node,operation,exchange,template,builder,builder,compute,service,template,builder,builder,any,if,location,id,null,builder,location,id,location,id,if,image,id,null,builder,image,id,image,id,if,hardware,id,null,builder,hardware,id,hardware,id,try,set,extends,node,metadata,node,metadatas,compute,service,create,nodes,in,group,group,1,builder,build,exchange,get,out,set,body,node,metadatas,exchange,get,out,set,headers,exchange,get,in,get,headers,catch,run,nodes,exception,e,throw,new,camel,exchange,exception,error,creating,jclouds,node,exchange,e
JcloudsComputeProducer -> protected void createNode(Exchange exchange) throws CamelException;1435500284;Create a node with the specified group.;protected void createNode(Exchange exchange) throws CamelException {_        String group = getGroup(exchange)__        String imageId = getImageId(exchange)__        String locationId = getLocationId(exchange)__        String hardwareId = getHardwareId(exchange)___        if (group == null) {_            throw new CamelExchangeException("Group must be specific in the URI or as exchange property for the destroy node operation.", exchange)__        }_        TemplateBuilder builder = computeService.templateBuilder()__        builder.any()___        if (locationId != null) {_            builder.locationId(locationId)__        }_        if (imageId != null) {_            builder.imageId(imageId)__        }_        if (hardwareId != null) {_            builder.hardwareId(hardwareId)__        }__        try {_            Set<? extends NodeMetadata> nodeMetadatas = computeService.createNodesInGroup(group, 1, builder.build())__            exchange.getOut().setBody(nodeMetadatas)__            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__        } catch (RunNodesException e) {_            throw new CamelExchangeException("Error creating jclouds node.", exchange, e)__        }_    };create,a,node,with,the,specified,group;protected,void,create,node,exchange,exchange,throws,camel,exception,string,group,get,group,exchange,string,image,id,get,image,id,exchange,string,location,id,get,location,id,exchange,string,hardware,id,get,hardware,id,exchange,if,group,null,throw,new,camel,exchange,exception,group,must,be,specific,in,the,uri,or,as,exchange,property,for,the,destroy,node,operation,exchange,template,builder,builder,compute,service,template,builder,builder,any,if,location,id,null,builder,location,id,location,id,if,image,id,null,builder,image,id,image,id,if,hardware,id,null,builder,hardware,id,hardware,id,try,set,extends,node,metadata,node,metadatas,compute,service,create,nodes,in,group,group,1,builder,build,exchange,get,out,set,body,node,metadatas,exchange,get,out,set,headers,exchange,get,in,get,headers,catch,run,nodes,exception,e,throw,new,camel,exchange,exception,error,creating,jclouds,node,exchange,e
JcloudsComputeProducer -> protected void createNode(Exchange exchange) throws CamelException;1435764273;Create a node with the specified group.;protected void createNode(Exchange exchange) throws CamelException {_        String group = getGroup(exchange)__        String imageId = getImageId(exchange)__        String locationId = getLocationId(exchange)__        String hardwareId = getHardwareId(exchange)___        if (ObjectHelper.isEmpty(group)) {_            throw new CamelExchangeException("Group must be specific in the URI or as exchange property for the destroy node operation.", exchange)__        }_        TemplateBuilder builder = computeService.templateBuilder()__        builder.any()___        if (ObjectHelper.isNotEmpty(locationId)) {_            builder.locationId(locationId)__        }_        if (ObjectHelper.isNotEmpty(imageId)) {_            builder.imageId(imageId)__        }_        if (ObjectHelper.isNotEmpty(hardwareId)) {_            builder.hardwareId(hardwareId)__        }__        try {_            Set<? extends NodeMetadata> nodeMetadatas = computeService.createNodesInGroup(group, 1, builder.build())__            exchange.getOut().setBody(nodeMetadatas)__            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__        } catch (RunNodesException e) {_            throw new CamelExchangeException("Error creating jclouds node.", exchange, e)__        }_    };create,a,node,with,the,specified,group;protected,void,create,node,exchange,exchange,throws,camel,exception,string,group,get,group,exchange,string,image,id,get,image,id,exchange,string,location,id,get,location,id,exchange,string,hardware,id,get,hardware,id,exchange,if,object,helper,is,empty,group,throw,new,camel,exchange,exception,group,must,be,specific,in,the,uri,or,as,exchange,property,for,the,destroy,node,operation,exchange,template,builder,builder,compute,service,template,builder,builder,any,if,object,helper,is,not,empty,location,id,builder,location,id,location,id,if,object,helper,is,not,empty,image,id,builder,image,id,image,id,if,object,helper,is,not,empty,hardware,id,builder,hardware,id,hardware,id,try,set,extends,node,metadata,node,metadatas,compute,service,create,nodes,in,group,group,1,builder,build,exchange,get,out,set,body,node,metadatas,exchange,get,out,set,headers,exchange,get,in,get,headers,catch,run,nodes,exception,e,throw,new,camel,exchange,exception,error,creating,jclouds,node,exchange,e
JcloudsComputeProducer -> protected void createNode(Exchange exchange) throws CamelException;1435767436;Create a node with the specified group.;protected void createNode(Exchange exchange) throws CamelException {_        String group = getGroup(exchange)__        String imageId = getImageId(exchange)__        String locationId = getLocationId(exchange)__        String hardwareId = getHardwareId(exchange)___        if (ObjectHelper.isEmpty(group)) {_            throw new CamelExchangeException("Group must be specific in the URI or as exchange property for the destroy node operation.", exchange)__        }_        TemplateBuilder builder = computeService.templateBuilder()__        builder.any()___        if (ObjectHelper.isNotEmpty(locationId)) {_            builder.locationId(locationId)__        }_        if (ObjectHelper.isNotEmpty(imageId)) {_            builder.imageId(imageId)__        }_        if (ObjectHelper.isNotEmpty(hardwareId)) {_            builder.hardwareId(hardwareId)__        }__        try {_            Set<? extends NodeMetadata> nodeMetadatas = computeService.createNodesInGroup(group, 1, builder.build())__            exchange.getOut().setBody(nodeMetadatas)__            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__        } catch (RunNodesException e) {_            throw new CamelExchangeException("Error creating jclouds node.", exchange, e)__        }_    };create,a,node,with,the,specified,group;protected,void,create,node,exchange,exchange,throws,camel,exception,string,group,get,group,exchange,string,image,id,get,image,id,exchange,string,location,id,get,location,id,exchange,string,hardware,id,get,hardware,id,exchange,if,object,helper,is,empty,group,throw,new,camel,exchange,exception,group,must,be,specific,in,the,uri,or,as,exchange,property,for,the,destroy,node,operation,exchange,template,builder,builder,compute,service,template,builder,builder,any,if,object,helper,is,not,empty,location,id,builder,location,id,location,id,if,object,helper,is,not,empty,image,id,builder,image,id,image,id,if,object,helper,is,not,empty,hardware,id,builder,hardware,id,hardware,id,try,set,extends,node,metadata,node,metadatas,compute,service,create,nodes,in,group,group,1,builder,build,exchange,get,out,set,body,node,metadatas,exchange,get,out,set,headers,exchange,get,in,get,headers,catch,run,nodes,exception,e,throw,new,camel,exchange,exception,error,creating,jclouds,node,exchange,e
JcloudsComputeProducer -> protected void createNode(Exchange exchange) throws CamelException;1537290824;Create a node with the specified group.;protected void createNode(Exchange exchange) throws CamelException {_        String group = getGroup(exchange)__        String imageId = getImageId(exchange)__        String locationId = getLocationId(exchange)__        String hardwareId = getHardwareId(exchange)___        if (ObjectHelper.isEmpty(group)) {_            throw new CamelExchangeException("Group must be specific in the URI or as exchange property for the destroy node operation.", exchange)__        }_        TemplateBuilder builder = computeService.templateBuilder()__        builder.any()___        if (ObjectHelper.isNotEmpty(locationId)) {_            builder.locationId(locationId)__        }_        if (ObjectHelper.isNotEmpty(imageId)) {_            builder.imageId(imageId)__        }_        if (ObjectHelper.isNotEmpty(hardwareId)) {_            builder.hardwareId(hardwareId)__        }__        try {_            Set<? extends NodeMetadata> nodeMetadatas = computeService.createNodesInGroup(group, 1, builder.build())__            exchange.getOut().setBody(nodeMetadatas)__            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__        } catch (RunNodesException e) {_            throw new CamelExchangeException("Error creating jclouds node.", exchange, e)__        }_    };create,a,node,with,the,specified,group;protected,void,create,node,exchange,exchange,throws,camel,exception,string,group,get,group,exchange,string,image,id,get,image,id,exchange,string,location,id,get,location,id,exchange,string,hardware,id,get,hardware,id,exchange,if,object,helper,is,empty,group,throw,new,camel,exchange,exception,group,must,be,specific,in,the,uri,or,as,exchange,property,for,the,destroy,node,operation,exchange,template,builder,builder,compute,service,template,builder,builder,any,if,object,helper,is,not,empty,location,id,builder,location,id,location,id,if,object,helper,is,not,empty,image,id,builder,image,id,image,id,if,object,helper,is,not,empty,hardware,id,builder,hardware,id,hardware,id,try,set,extends,node,metadata,node,metadatas,compute,service,create,nodes,in,group,group,1,builder,build,exchange,get,out,set,body,node,metadatas,exchange,get,out,set,headers,exchange,get,in,get,headers,catch,run,nodes,exception,e,throw,new,camel,exchange,exception,error,creating,jclouds,node,exchange,e
JcloudsComputeProducer -> protected void destroyNode(Exchange exchange) throws CamelException;1317243118;Destroys the node with the specified nodeId.__@param exchange_@throws CamelException;protected void destroyNode(Exchange exchange) throws CamelException {_        String nodeId = getNodeId(exchange)__        if (nodeId == null) {_            throw new CamelException("Node id must be specific in the URI or as exchange property for the destroy node operation.")__        }_        computeService.destroyNode(nodeId)__    };destroys,the,node,with,the,specified,node,id,param,exchange,throws,camel,exception;protected,void,destroy,node,exchange,exchange,throws,camel,exception,string,node,id,get,node,id,exchange,if,node,id,null,throw,new,camel,exception,node,id,must,be,specific,in,the,uri,or,as,exchange,property,for,the,destroy,node,operation,compute,service,destroy,node,node,id
JcloudsComputeProducer -> protected void destroyNode(Exchange exchange) throws CamelException;1320504254;Destroys the node with the specified nodeId.__@param exchange_@throws CamelException;protected void destroyNode(Exchange exchange) throws CamelException {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.destroyNodesMatching(predicate)__    };destroys,the,node,with,the,specified,node,id,param,exchange,throws,camel,exception;protected,void,destroy,node,exchange,exchange,throws,camel,exception,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,destroy,nodes,matching,predicate
JcloudsComputeProducer -> protected void destroyNode(Exchange exchange) throws CamelException;1326907405;Destroys the node with the specified nodeId.__@param exchange_@throws CamelException;protected void destroyNode(Exchange exchange) throws CamelException {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.destroyNodesMatching(predicate)__    };destroys,the,node,with,the,specified,node,id,param,exchange,throws,camel,exception;protected,void,destroy,node,exchange,exchange,throws,camel,exception,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,destroy,nodes,matching,predicate
JcloudsComputeProducer -> protected void destroyNode(Exchange exchange) throws CamelException;1327089055;Destroys the node with the specified nodeId.__@param exchange_@throws CamelException;protected void destroyNode(Exchange exchange) throws CamelException {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.destroyNodesMatching(predicate)__    };destroys,the,node,with,the,specified,node,id,param,exchange,throws,camel,exception;protected,void,destroy,node,exchange,exchange,throws,camel,exception,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,destroy,nodes,matching,predicate
JcloudsComputeProducer -> protected void destroyNode(Exchange exchange) throws CamelException;1333145181;Destroys the node with the specified nodeId.__@param exchange_@throws CamelException;protected void destroyNode(Exchange exchange) throws CamelException {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.destroyNodesMatching(predicate)__    };destroys,the,node,with,the,specified,node,id,param,exchange,throws,camel,exception;protected,void,destroy,node,exchange,exchange,throws,camel,exception,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,destroy,nodes,matching,predicate
JcloudsComputeProducer -> protected void listImages(Exchange exchange) throws CamelException;1317243118;Sets the available images to the out message.__@param exchange_@throws CamelException;protected void listImages(Exchange exchange) throws CamelException {_        Set<? extends Image> images = computeService.listImages()__        exchange.getOut().setBody(images)__    };sets,the,available,images,to,the,out,message,param,exchange,throws,camel,exception;protected,void,list,images,exchange,exchange,throws,camel,exception,set,extends,image,images,compute,service,list,images,exchange,get,out,set,body,images
JcloudsComputeProducer -> protected void listImages(Exchange exchange) throws CamelException;1320504254;Sets the available images to the out message.__@param exchange_@throws CamelException;protected void listImages(Exchange exchange) throws CamelException {_        Set<? extends Image> images = computeService.listImages()__        exchange.getOut().setBody(images)__    };sets,the,available,images,to,the,out,message,param,exchange,throws,camel,exception;protected,void,list,images,exchange,exchange,throws,camel,exception,set,extends,image,images,compute,service,list,images,exchange,get,out,set,body,images
JcloudsComputeProducer -> protected void listImages(Exchange exchange) throws CamelException;1326907405;Sets the available images to the out message.__@param exchange_@throws CamelException;protected void listImages(Exchange exchange) throws CamelException {_        Set<? extends Image> images = computeService.listImages()__        exchange.getOut().setBody(images)__    };sets,the,available,images,to,the,out,message,param,exchange,throws,camel,exception;protected,void,list,images,exchange,exchange,throws,camel,exception,set,extends,image,images,compute,service,list,images,exchange,get,out,set,body,images
JcloudsComputeProducer -> protected void listImages(Exchange exchange) throws CamelException;1327089055;Sets the available images to the out message.__@param exchange_@throws CamelException;protected void listImages(Exchange exchange) throws CamelException {_        Set<? extends Image> images = computeService.listImages()__        exchange.getOut().setBody(images)__    };sets,the,available,images,to,the,out,message,param,exchange,throws,camel,exception;protected,void,list,images,exchange,exchange,throws,camel,exception,set,extends,image,images,compute,service,list,images,exchange,get,out,set,body,images
JcloudsComputeProducer -> protected void listImages(Exchange exchange) throws CamelException;1333145181;Sets the available images to the out message.__@param exchange_@throws CamelException;protected void listImages(Exchange exchange) throws CamelException {_        Set<? extends Image> images = computeService.listImages()__        exchange.getOut().setBody(images)__    };sets,the,available,images,to,the,out,message,param,exchange,throws,camel,exception;protected,void,list,images,exchange,exchange,throws,camel,exception,set,extends,image,images,compute,service,list,images,exchange,get,out,set,body,images
JcloudsComputeProducer -> public Predicate<NodeMetadata> getNodePredicate(Exchange exchange);1320504254;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.__@param exchange_@return;public Predicate<NodeMetadata> getNodePredicate(Exchange exchange) {_        final String nodeId = getNodeId(exchange)__        final String imageId = getImageId(exchange)__        final String group = getGroup(exchange)__        final NodeState queryState = getNodeState(exchange)___        Predicate<NodeMetadata> predicate = new Predicate<NodeMetadata>() {_            public boolean apply(NodeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }_                if (imageId != null && !imageId.equals(metadata.getImageId())) {_                    return false__                }_                if (queryState != null && !queryState.equals(metadata.getState())) {_                    return false__                }_                if (group != null && !group.equals(metadata.getGroup())) {_                    return false__                }_                return true__            }_        }__        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering,param,exchange,return;public,predicate,node,metadata,get,node,predicate,exchange,exchange,final,string,node,id,get,node,id,exchange,final,string,image,id,get,image,id,exchange,final,string,group,get,group,exchange,final,node,state,query,state,get,node,state,exchange,predicate,node,metadata,predicate,new,predicate,node,metadata,public,boolean,apply,node,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,image,id,null,image,id,equals,metadata,get,image,id,return,false,if,query,state,null,query,state,equals,metadata,get,state,return,false,if,group,null,group,equals,metadata,get,group,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<NodeMetadata> getNodePredicate(Exchange exchange);1326907405;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.__@param exchange_@return;public Predicate<NodeMetadata> getNodePredicate(Exchange exchange) {_        final String nodeId = getNodeId(exchange)__        final String imageId = getImageId(exchange)__        final String group = getGroup(exchange)__        final NodeState queryState = getNodeState(exchange)___        Predicate<NodeMetadata> predicate = new Predicate<NodeMetadata>() {_            public boolean apply(NodeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }_                if (imageId != null && !imageId.equals(metadata.getImageId())) {_                    return false__                }_                if (queryState != null && !queryState.equals(metadata.getState())) {_                    return false__                }_                if (group != null && !group.equals(metadata.getGroup())) {_                    return false__                }_                return true__            }_        }__        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering,param,exchange,return;public,predicate,node,metadata,get,node,predicate,exchange,exchange,final,string,node,id,get,node,id,exchange,final,string,image,id,get,image,id,exchange,final,string,group,get,group,exchange,final,node,state,query,state,get,node,state,exchange,predicate,node,metadata,predicate,new,predicate,node,metadata,public,boolean,apply,node,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,image,id,null,image,id,equals,metadata,get,image,id,return,false,if,query,state,null,query,state,equals,metadata,get,state,return,false,if,group,null,group,equals,metadata,get,group,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<NodeMetadata> getNodePredicate(Exchange exchange);1327089055;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.__@param exchange_@return;public Predicate<NodeMetadata> getNodePredicate(Exchange exchange) {_        final String nodeId = getNodeId(exchange)__        final String imageId = getImageId(exchange)__        final String group = getGroup(exchange)__        final NodeState queryState = getNodeState(exchange)___        Predicate<NodeMetadata> predicate = new Predicate<NodeMetadata>() {_            public boolean apply(NodeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }_                if (imageId != null && !imageId.equals(metadata.getImageId())) {_                    return false__                }_                if (queryState != null && !queryState.equals(metadata.getState())) {_                    return false__                }_                if (group != null && !group.equals(metadata.getGroup())) {_                    return false__                }_                return true__            }_        }__        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering,param,exchange,return;public,predicate,node,metadata,get,node,predicate,exchange,exchange,final,string,node,id,get,node,id,exchange,final,string,image,id,get,image,id,exchange,final,string,group,get,group,exchange,final,node,state,query,state,get,node,state,exchange,predicate,node,metadata,predicate,new,predicate,node,metadata,public,boolean,apply,node,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,image,id,null,image,id,equals,metadata,get,image,id,return,false,if,query,state,null,query,state,equals,metadata,get,state,return,false,if,group,null,group,equals,metadata,get,group,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<NodeMetadata> getNodePredicate(Exchange exchange);1333145181;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.__@param exchange_@return;public Predicate<NodeMetadata> getNodePredicate(Exchange exchange) {_        final String nodeId = getNodeId(exchange)__        final String imageId = getImageId(exchange)__        final String group = getGroup(exchange)__        final NodeState queryState = getNodeState(exchange)___        Predicate<NodeMetadata> predicate = new Predicate<NodeMetadata>() {_            public boolean apply(NodeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }_                if (imageId != null && !imageId.equals(metadata.getImageId())) {_                    return false__                }_                if (queryState != null && !queryState.equals(metadata.getState())) {_                    return false__                }_                if (group != null && !group.equals(metadata.getGroup())) {_                    return false__                }_                return true__            }_        }__        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering,param,exchange,return;public,predicate,node,metadata,get,node,predicate,exchange,exchange,final,string,node,id,get,node,id,exchange,final,string,image,id,get,image,id,exchange,final,string,group,get,group,exchange,final,node,state,query,state,get,node,state,exchange,predicate,node,metadata,predicate,new,predicate,node,metadata,public,boolean,apply,node,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,image,id,null,image,id,equals,metadata,get,image,id,return,false,if,query,state,null,query,state,equals,metadata,get,state,return,false,if,group,null,group,equals,metadata,get,group,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<NodeMetadata> getNodePredicate(Exchange exchange);1353141176;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.;public Predicate<NodeMetadata> getNodePredicate(Exchange exchange) {_        final String nodeId = getNodeId(exchange)__        final String imageId = getImageId(exchange)__        final String group = getGroup(exchange)__        final NodeState queryState = getNodeState(exchange)___        Predicate<NodeMetadata> predicate = new Predicate<NodeMetadata>() {_            public boolean apply(NodeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }_                if (imageId != null && !imageId.equals(metadata.getImageId())) {_                    return false__                }_                if (queryState != null && !queryState.equals(metadata.getState())) {_                    return false__                }_                if (group != null && !group.equals(metadata.getGroup())) {_                    return false__                }_                return true__            }_        }__        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering;public,predicate,node,metadata,get,node,predicate,exchange,exchange,final,string,node,id,get,node,id,exchange,final,string,image,id,get,image,id,exchange,final,string,group,get,group,exchange,final,node,state,query,state,get,node,state,exchange,predicate,node,metadata,predicate,new,predicate,node,metadata,public,boolean,apply,node,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,image,id,null,image,id,equals,metadata,get,image,id,return,false,if,query,state,null,query,state,equals,metadata,get,state,return,false,if,group,null,group,equals,metadata,get,group,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<NodeMetadata> getNodePredicate(Exchange exchange);1373281324;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.;public Predicate<NodeMetadata> getNodePredicate(Exchange exchange) {_        final String nodeId = getNodeId(exchange)__        final String imageId = getImageId(exchange)__        final String group = getGroup(exchange)__        final NodeMetadata.Status queryState = getNodeState(exchange)___        Predicate<NodeMetadata> predicate = new Predicate<NodeMetadata>() {_            public boolean apply(NodeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }_                if (imageId != null && !imageId.equals(metadata.getImageId())) {_                    return false__                }_                if (queryState != null && !queryState.equals(metadata.getStatus())) {_                    return false__                }_                if (group != null && !group.equals(metadata.getGroup())) {_                    return false__                }_                return true__            }_        }__        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering;public,predicate,node,metadata,get,node,predicate,exchange,exchange,final,string,node,id,get,node,id,exchange,final,string,image,id,get,image,id,exchange,final,string,group,get,group,exchange,final,node,metadata,status,query,state,get,node,state,exchange,predicate,node,metadata,predicate,new,predicate,node,metadata,public,boolean,apply,node,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,image,id,null,image,id,equals,metadata,get,image,id,return,false,if,query,state,null,query,state,equals,metadata,get,status,return,false,if,group,null,group,equals,metadata,get,group,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<NodeMetadata> getNodePredicate(Exchange exchange);1388443957;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.;public Predicate<NodeMetadata> getNodePredicate(Exchange exchange) {_        final String nodeId = getNodeId(exchange)__        final String imageId = getImageId(exchange)__        final String group = getGroup(exchange)__        final NodeMetadata.Status queryState = getNodeState(exchange)___        Predicate<NodeMetadata> predicate = new Predicate<NodeMetadata>() {_            public boolean apply(NodeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }_                if (imageId != null && !imageId.equals(metadata.getImageId())) {_                    return false__                }_                if (queryState != null && !queryState.equals(metadata.getStatus())) {_                    return false__                }_                if (group != null && !group.equals(metadata.getGroup())) {_                    return false__                }_                return true__            }_        }__        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering;public,predicate,node,metadata,get,node,predicate,exchange,exchange,final,string,node,id,get,node,id,exchange,final,string,image,id,get,image,id,exchange,final,string,group,get,group,exchange,final,node,metadata,status,query,state,get,node,state,exchange,predicate,node,metadata,predicate,new,predicate,node,metadata,public,boolean,apply,node,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,image,id,null,image,id,equals,metadata,get,image,id,return,false,if,query,state,null,query,state,equals,metadata,get,status,return,false,if,group,null,group,equals,metadata,get,group,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<NodeMetadata> getNodePredicate(Exchange exchange);1435493075;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.;public Predicate<NodeMetadata> getNodePredicate(Exchange exchange) {_        final String nodeId = getNodeId(exchange)__        final String imageId = getImageId(exchange)__        final String group = getGroup(exchange)__        final NodeMetadata.Status queryState = getNodeState(exchange)___        Predicate<NodeMetadata> predicate = new Predicate<NodeMetadata>() {_            public boolean apply(NodeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }_                if (imageId != null && !imageId.equals(metadata.getImageId())) {_                    return false__                }_                if (queryState != null && !queryState.equals(metadata.getStatus())) {_                    return false__                }_                if (group != null && !group.equals(metadata.getGroup())) {_                    return false__                }_                return true__            }_        }__        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering;public,predicate,node,metadata,get,node,predicate,exchange,exchange,final,string,node,id,get,node,id,exchange,final,string,image,id,get,image,id,exchange,final,string,group,get,group,exchange,final,node,metadata,status,query,state,get,node,state,exchange,predicate,node,metadata,predicate,new,predicate,node,metadata,public,boolean,apply,node,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,image,id,null,image,id,equals,metadata,get,image,id,return,false,if,query,state,null,query,state,equals,metadata,get,status,return,false,if,group,null,group,equals,metadata,get,group,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<NodeMetadata> getNodePredicate(Exchange exchange);1435496986;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.;public Predicate<NodeMetadata> getNodePredicate(Exchange exchange) {_        final String nodeId = getNodeId(exchange)__        final String imageId = getImageId(exchange)__        final String group = getGroup(exchange)__        final NodeMetadata.Status queryState = getNodeState(exchange)___        Predicate<NodeMetadata> predicate = new Predicate<NodeMetadata>() {_            public boolean apply(NodeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }_                if (imageId != null && !imageId.equals(metadata.getImageId())) {_                    return false__                }_                if (queryState != null && !queryState.equals(metadata.getStatus())) {_                    return false__                }_                if (group != null && !group.equals(metadata.getGroup())) {_                    return false__                }_                return true__            }_        }__        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering;public,predicate,node,metadata,get,node,predicate,exchange,exchange,final,string,node,id,get,node,id,exchange,final,string,image,id,get,image,id,exchange,final,string,group,get,group,exchange,final,node,metadata,status,query,state,get,node,state,exchange,predicate,node,metadata,predicate,new,predicate,node,metadata,public,boolean,apply,node,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,image,id,null,image,id,equals,metadata,get,image,id,return,false,if,query,state,null,query,state,equals,metadata,get,status,return,false,if,group,null,group,equals,metadata,get,group,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<NodeMetadata> getNodePredicate(Exchange exchange);1435497250;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.;public Predicate<NodeMetadata> getNodePredicate(Exchange exchange) {_        final String nodeId = getNodeId(exchange)__        final String imageId = getImageId(exchange)__        final String group = getGroup(exchange)__        final NodeMetadata.Status queryState = getNodeState(exchange)___        Predicate<NodeMetadata> predicate = new Predicate<NodeMetadata>() {_            public boolean apply(NodeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }_                if (imageId != null && !imageId.equals(metadata.getImageId())) {_                    return false__                }_                if (queryState != null && !queryState.equals(metadata.getStatus())) {_                    return false__                }_                if (group != null && !group.equals(metadata.getGroup())) {_                    return false__                }_                return true__            }_        }__        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering;public,predicate,node,metadata,get,node,predicate,exchange,exchange,final,string,node,id,get,node,id,exchange,final,string,image,id,get,image,id,exchange,final,string,group,get,group,exchange,final,node,metadata,status,query,state,get,node,state,exchange,predicate,node,metadata,predicate,new,predicate,node,metadata,public,boolean,apply,node,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,image,id,null,image,id,equals,metadata,get,image,id,return,false,if,query,state,null,query,state,equals,metadata,get,status,return,false,if,group,null,group,equals,metadata,get,group,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<NodeMetadata> getNodePredicate(Exchange exchange);1435498142;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.;public Predicate<NodeMetadata> getNodePredicate(Exchange exchange) {_        final String nodeId = getNodeId(exchange)__        final String imageId = getImageId(exchange)__        final String group = getGroup(exchange)__        final NodeMetadata.Status queryState = getNodeState(exchange)___        Predicate<NodeMetadata> predicate = new Predicate<NodeMetadata>() {_            public boolean apply(NodeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }_                if (imageId != null && !imageId.equals(metadata.getImageId())) {_                    return false__                }_                if (queryState != null && !queryState.equals(metadata.getStatus())) {_                    return false__                }_                if (group != null && !group.equals(metadata.getGroup())) {_                    return false__                }_                return true__            }_        }__        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering;public,predicate,node,metadata,get,node,predicate,exchange,exchange,final,string,node,id,get,node,id,exchange,final,string,image,id,get,image,id,exchange,final,string,group,get,group,exchange,final,node,metadata,status,query,state,get,node,state,exchange,predicate,node,metadata,predicate,new,predicate,node,metadata,public,boolean,apply,node,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,image,id,null,image,id,equals,metadata,get,image,id,return,false,if,query,state,null,query,state,equals,metadata,get,status,return,false,if,group,null,group,equals,metadata,get,group,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<NodeMetadata> getNodePredicate(Exchange exchange);1435500284;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.;public Predicate<NodeMetadata> getNodePredicate(Exchange exchange) {_        final String nodeId = getNodeId(exchange)__        final String imageId = getImageId(exchange)__        final String group = getGroup(exchange)__        final NodeMetadata.Status queryState = getNodeState(exchange)___        Predicate<NodeMetadata> predicate = new Predicate<NodeMetadata>() {_            public boolean apply(NodeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }_                if (imageId != null && !imageId.equals(metadata.getImageId())) {_                    return false__                }_                if (queryState != null && !queryState.equals(metadata.getStatus())) {_                    return false__                }_                if (group != null && !group.equals(metadata.getGroup())) {_                    return false__                }_                return true__            }_        }__        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering;public,predicate,node,metadata,get,node,predicate,exchange,exchange,final,string,node,id,get,node,id,exchange,final,string,image,id,get,image,id,exchange,final,string,group,get,group,exchange,final,node,metadata,status,query,state,get,node,state,exchange,predicate,node,metadata,predicate,new,predicate,node,metadata,public,boolean,apply,node,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,image,id,null,image,id,equals,metadata,get,image,id,return,false,if,query,state,null,query,state,equals,metadata,get,status,return,false,if,group,null,group,equals,metadata,get,group,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<NodeMetadata> getNodePredicate(Exchange exchange);1435764273;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.;public Predicate<NodeMetadata> getNodePredicate(Exchange exchange) {_        final String nodeId = getNodeId(exchange)__        final String imageId = getImageId(exchange)__        final String group = getGroup(exchange)__        final NodeMetadata.Status queryState = getNodeState(exchange)___        Predicate<NodeMetadata> predicate = new Predicate<NodeMetadata>() {_            public boolean apply(NodeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }_                if (imageId != null && !imageId.equals(metadata.getImageId())) {_                    return false__                }_                if (queryState != null && !queryState.equals(metadata.getStatus())) {_                    return false__                }_                if (group != null && !group.equals(metadata.getGroup())) {_                    return false__                }_                return true__            }_        }__        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering;public,predicate,node,metadata,get,node,predicate,exchange,exchange,final,string,node,id,get,node,id,exchange,final,string,image,id,get,image,id,exchange,final,string,group,get,group,exchange,final,node,metadata,status,query,state,get,node,state,exchange,predicate,node,metadata,predicate,new,predicate,node,metadata,public,boolean,apply,node,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,image,id,null,image,id,equals,metadata,get,image,id,return,false,if,query,state,null,query,state,equals,metadata,get,status,return,false,if,group,null,group,equals,metadata,get,group,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<NodeMetadata> getNodePredicate(Exchange exchange);1435767436;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.;public Predicate<NodeMetadata> getNodePredicate(Exchange exchange) {_        final String nodeId = getNodeId(exchange)__        final String imageId = getImageId(exchange)__        final String group = getGroup(exchange)__        final NodeMetadata.Status queryState = getNodeState(exchange)___        Predicate<NodeMetadata> predicate = new Predicate<NodeMetadata>() {_            public boolean apply(NodeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }_                if (imageId != null && !imageId.equals(metadata.getImageId())) {_                    return false__                }_                if (queryState != null && !queryState.equals(metadata.getStatus())) {_                    return false__                }_                if (group != null && !group.equals(metadata.getGroup())) {_                    return false__                }_                return true__            }_        }__        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering;public,predicate,node,metadata,get,node,predicate,exchange,exchange,final,string,node,id,get,node,id,exchange,final,string,image,id,get,image,id,exchange,final,string,group,get,group,exchange,final,node,metadata,status,query,state,get,node,state,exchange,predicate,node,metadata,predicate,new,predicate,node,metadata,public,boolean,apply,node,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,image,id,null,image,id,equals,metadata,get,image,id,return,false,if,query,state,null,query,state,equals,metadata,get,status,return,false,if,group,null,group,equals,metadata,get,group,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<NodeMetadata> getNodePredicate(Exchange exchange);1537290824;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.;public Predicate<NodeMetadata> getNodePredicate(Exchange exchange) {_        final String nodeId = getNodeId(exchange)__        final String imageId = getImageId(exchange)__        final String group = getGroup(exchange)__        final NodeMetadata.Status queryState = getNodeState(exchange)___        Predicate<NodeMetadata> predicate = new Predicate<NodeMetadata>() {_            public boolean apply(NodeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }_                if (imageId != null && !imageId.equals(metadata.getImageId())) {_                    return false__                }_                if (queryState != null && !queryState.equals(metadata.getStatus())) {_                    return false__                }_                if (group != null && !group.equals(metadata.getGroup())) {_                    return false__                }_                return true__            }_        }__        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering;public,predicate,node,metadata,get,node,predicate,exchange,exchange,final,string,node,id,get,node,id,exchange,final,string,image,id,get,image,id,exchange,final,string,group,get,group,exchange,final,node,metadata,status,query,state,get,node,state,exchange,predicate,node,metadata,predicate,new,predicate,node,metadata,public,boolean,apply,node,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,image,id,null,image,id,equals,metadata,get,image,id,return,false,if,query,state,null,query,state,equals,metadata,get,status,return,false,if,group,null,group,equals,metadata,get,group,return,false,return,true,return,predicate
JcloudsComputeProducer -> protected void listNodes(Exchange exchange);1353141176;Sets the metadata of the available nodes to the out message.;protected void listNodes(Exchange exchange) {_        Predicate<ComputeMetadata> predicate = getComputePredicate(exchange)__        Set<? extends ComputeMetadata> computeMetadatas = computeService.listNodesDetailsMatching(predicate)__        exchange.getOut().setBody(computeMetadatas)__    };sets,the,metadata,of,the,available,nodes,to,the,out,message;protected,void,list,nodes,exchange,exchange,predicate,compute,metadata,predicate,get,compute,predicate,exchange,set,extends,compute,metadata,compute,metadatas,compute,service,list,nodes,details,matching,predicate,exchange,get,out,set,body,compute,metadatas
JcloudsComputeProducer -> protected void listNodes(Exchange exchange);1373281324;Sets the metadata of the available nodes to the out message.;protected void listNodes(Exchange exchange) {_        Predicate<ComputeMetadata> predicate = getComputePredicate(exchange)__        Set<? extends ComputeMetadata> computeMetadatas = computeService.listNodesDetailsMatching(predicate)__        exchange.getOut().setBody(computeMetadatas)__    };sets,the,metadata,of,the,available,nodes,to,the,out,message;protected,void,list,nodes,exchange,exchange,predicate,compute,metadata,predicate,get,compute,predicate,exchange,set,extends,compute,metadata,compute,metadatas,compute,service,list,nodes,details,matching,predicate,exchange,get,out,set,body,compute,metadatas
JcloudsComputeProducer -> protected void listNodes(Exchange exchange);1388443957;Sets the metadata of the available nodes to the out message.;protected void listNodes(Exchange exchange) {_        Predicate<ComputeMetadata> predicate = getComputePredicate(exchange)__        Set<? extends ComputeMetadata> computeMetadatas = computeService.listNodesDetailsMatching(predicate)__        exchange.getOut().setBody(computeMetadatas)__    };sets,the,metadata,of,the,available,nodes,to,the,out,message;protected,void,list,nodes,exchange,exchange,predicate,compute,metadata,predicate,get,compute,predicate,exchange,set,extends,compute,metadata,compute,metadatas,compute,service,list,nodes,details,matching,predicate,exchange,get,out,set,body,compute,metadatas
JcloudsComputeProducer -> protected void listNodes(Exchange exchange);1435493075;Sets the metadata of the available nodes to the out message.;protected void listNodes(Exchange exchange) {_        Predicate<ComputeMetadata> predicate = getComputePredicate(exchange)__        Set<? extends ComputeMetadata> computeMetadatas = computeService.listNodesDetailsMatching(predicate)__        exchange.getOut().setBody(computeMetadatas)__    };sets,the,metadata,of,the,available,nodes,to,the,out,message;protected,void,list,nodes,exchange,exchange,predicate,compute,metadata,predicate,get,compute,predicate,exchange,set,extends,compute,metadata,compute,metadatas,compute,service,list,nodes,details,matching,predicate,exchange,get,out,set,body,compute,metadatas
JcloudsComputeProducer -> protected void listNodes(Exchange exchange);1435496986;Sets the metadata of the available nodes to the out message.;protected void listNodes(Exchange exchange) {_        Predicate<ComputeMetadata> predicate = getComputePredicate(exchange)__        Set<? extends ComputeMetadata> computeMetadatas = computeService.listNodesDetailsMatching(predicate)__        exchange.getOut().setBody(computeMetadatas)__    };sets,the,metadata,of,the,available,nodes,to,the,out,message;protected,void,list,nodes,exchange,exchange,predicate,compute,metadata,predicate,get,compute,predicate,exchange,set,extends,compute,metadata,compute,metadatas,compute,service,list,nodes,details,matching,predicate,exchange,get,out,set,body,compute,metadatas
JcloudsComputeProducer -> protected void listNodes(Exchange exchange);1435497250;Sets the metadata of the available nodes to the out message.;protected void listNodes(Exchange exchange) {_        Predicate<ComputeMetadata> predicate = getComputePredicate(exchange)__        Set<? extends ComputeMetadata> computeMetadatas = computeService.listNodesDetailsMatching(predicate)__        exchange.getOut().setBody(computeMetadatas)__    };sets,the,metadata,of,the,available,nodes,to,the,out,message;protected,void,list,nodes,exchange,exchange,predicate,compute,metadata,predicate,get,compute,predicate,exchange,set,extends,compute,metadata,compute,metadatas,compute,service,list,nodes,details,matching,predicate,exchange,get,out,set,body,compute,metadatas
JcloudsComputeProducer -> protected void listNodes(Exchange exchange);1435498142;Sets the metadata of the available nodes to the out message.;protected void listNodes(Exchange exchange) {_        Predicate<ComputeMetadata> predicate = getComputePredicate(exchange)__        Set<? extends ComputeMetadata> computeMetadatas = computeService.listNodesDetailsMatching(predicate)__        exchange.getOut().setBody(computeMetadatas)__    };sets,the,metadata,of,the,available,nodes,to,the,out,message;protected,void,list,nodes,exchange,exchange,predicate,compute,metadata,predicate,get,compute,predicate,exchange,set,extends,compute,metadata,compute,metadatas,compute,service,list,nodes,details,matching,predicate,exchange,get,out,set,body,compute,metadatas
JcloudsComputeProducer -> protected void listNodes(Exchange exchange);1435500284;Sets the metadata of the available nodes to the out message.;protected void listNodes(Exchange exchange) {_        Predicate<ComputeMetadata> predicate = getComputePredicate(exchange)__        Set<? extends ComputeMetadata> computeMetadatas = computeService.listNodesDetailsMatching(predicate)__        exchange.getOut().setBody(computeMetadatas)__    };sets,the,metadata,of,the,available,nodes,to,the,out,message;protected,void,list,nodes,exchange,exchange,predicate,compute,metadata,predicate,get,compute,predicate,exchange,set,extends,compute,metadata,compute,metadatas,compute,service,list,nodes,details,matching,predicate,exchange,get,out,set,body,compute,metadatas
JcloudsComputeProducer -> protected void listNodes(Exchange exchange);1435764273;Sets the metadata of the available nodes to the out message.;protected void listNodes(Exchange exchange) {_        Predicate<ComputeMetadata> predicate = getComputePredicate(exchange)__        Set<? extends ComputeMetadata> computeMetadatas = computeService.listNodesDetailsMatching(predicate)__        exchange.getOut().setBody(computeMetadatas)__    };sets,the,metadata,of,the,available,nodes,to,the,out,message;protected,void,list,nodes,exchange,exchange,predicate,compute,metadata,predicate,get,compute,predicate,exchange,set,extends,compute,metadata,compute,metadatas,compute,service,list,nodes,details,matching,predicate,exchange,get,out,set,body,compute,metadatas
JcloudsComputeProducer -> protected void listNodes(Exchange exchange);1435767436;Sets the metadata of the available nodes to the out message.;protected void listNodes(Exchange exchange) {_        Predicate<ComputeMetadata> predicate = getComputePredicate(exchange)__        Set<? extends ComputeMetadata> computeMetadatas = computeService.listNodesDetailsMatching(predicate)__        exchange.getOut().setBody(computeMetadatas)__    };sets,the,metadata,of,the,available,nodes,to,the,out,message;protected,void,list,nodes,exchange,exchange,predicate,compute,metadata,predicate,get,compute,predicate,exchange,set,extends,compute,metadata,compute,metadatas,compute,service,list,nodes,details,matching,predicate,exchange,get,out,set,body,compute,metadatas
JcloudsComputeProducer -> protected void listNodes(Exchange exchange);1537290824;Sets the metadata of the available nodes to the out message.;protected void listNodes(Exchange exchange) {_        Predicate<ComputeMetadata> predicate = getComputePredicate(exchange)__        Set<? extends ComputeMetadata> computeMetadatas = computeService.listNodesDetailsMatching(predicate)__        exchange.getOut().setBody(computeMetadatas)__    };sets,the,metadata,of,the,available,nodes,to,the,out,message;protected,void,list,nodes,exchange,exchange,predicate,compute,metadata,predicate,get,compute,predicate,exchange,set,extends,compute,metadata,compute,metadatas,compute,service,list,nodes,details,matching,predicate,exchange,get,out,set,body,compute,metadatas
JcloudsComputeProducer -> public NodeState getNodeState(Exchange exchange);1320504254;Retrieves the node state from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;public NodeState getNodeState(Exchange exchange) {_        NodeState nodeState = null__        String state = ((JcloudsComputeEndpoint) getEndpoint()).getNodeState()__        if (state != null) {_            nodeState = NodeState.valueOf(state)__        }__        if (exchange.getIn().getHeader(JcloudsConstants.NODE_STATE) != null) {_            Object stateHeader = exchange.getIn().getHeader(JcloudsConstants.NODE_STATE)__            if (stateHeader == null) {_                nodeState = null__            } else if (stateHeader instanceof NodeState) {_                nodeState = (NodeState) stateHeader__            } else {_                nodeState = NodeState.valueOf(String.valueOf(stateHeader))__            }_        }_        return nodeState__    };retrieves,the,node,state,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;public,node,state,get,node,state,exchange,exchange,node,state,node,state,null,string,state,jclouds,compute,endpoint,get,endpoint,get,node,state,if,state,null,node,state,node,state,value,of,state,if,exchange,get,in,get,header,jclouds,constants,null,object,state,header,exchange,get,in,get,header,jclouds,constants,if,state,header,null,node,state,null,else,if,state,header,instanceof,node,state,node,state,node,state,state,header,else,node,state,node,state,value,of,string,value,of,state,header,return,node,state
JcloudsComputeProducer -> public NodeState getNodeState(Exchange exchange);1326907405;Retrieves the node state from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;public NodeState getNodeState(Exchange exchange) {_        NodeState nodeState = null__        String state = ((JcloudsComputeEndpoint) getEndpoint()).getNodeState()__        if (state != null) {_            nodeState = NodeState.valueOf(state)__        }__        if (exchange.getIn().getHeader(JcloudsConstants.NODE_STATE) != null) {_            Object stateHeader = exchange.getIn().getHeader(JcloudsConstants.NODE_STATE)__            if (stateHeader == null) {_                nodeState = null__            } else if (stateHeader instanceof NodeState) {_                nodeState = (NodeState) stateHeader__            } else {_                nodeState = NodeState.valueOf(String.valueOf(stateHeader))__            }_        }_        return nodeState__    };retrieves,the,node,state,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;public,node,state,get,node,state,exchange,exchange,node,state,node,state,null,string,state,jclouds,compute,endpoint,get,endpoint,get,node,state,if,state,null,node,state,node,state,value,of,state,if,exchange,get,in,get,header,jclouds,constants,null,object,state,header,exchange,get,in,get,header,jclouds,constants,if,state,header,null,node,state,null,else,if,state,header,instanceof,node,state,node,state,node,state,state,header,else,node,state,node,state,value,of,string,value,of,state,header,return,node,state
JcloudsComputeProducer -> public NodeState getNodeState(Exchange exchange);1327089055;Retrieves the node state from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;public NodeState getNodeState(Exchange exchange) {_        NodeState nodeState = null__        String state = getEndpoint().getNodeState()__        if (state != null) {_            nodeState = NodeState.valueOf(state)__        }__        if (exchange.getIn().getHeader(JcloudsConstants.NODE_STATE) != null) {_            Object stateHeader = exchange.getIn().getHeader(JcloudsConstants.NODE_STATE)__            if (stateHeader == null) {_                nodeState = null__            } else if (stateHeader instanceof NodeState) {_                nodeState = (NodeState) stateHeader__            } else {_                nodeState = NodeState.valueOf(String.valueOf(stateHeader))__            }_        }_        return nodeState__    };retrieves,the,node,state,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;public,node,state,get,node,state,exchange,exchange,node,state,node,state,null,string,state,get,endpoint,get,node,state,if,state,null,node,state,node,state,value,of,state,if,exchange,get,in,get,header,jclouds,constants,null,object,state,header,exchange,get,in,get,header,jclouds,constants,if,state,header,null,node,state,null,else,if,state,header,instanceof,node,state,node,state,node,state,state,header,else,node,state,node,state,value,of,string,value,of,state,header,return,node,state
JcloudsComputeProducer -> public NodeState getNodeState(Exchange exchange);1333145181;Retrieves the node state from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;public NodeState getNodeState(Exchange exchange) {_        NodeState nodeState = null__        String state = getEndpoint().getNodeState()__        if (state != null) {_            nodeState = NodeState.valueOf(state)__        }__        if (exchange.getIn().getHeader(JcloudsConstants.NODE_STATE) != null) {_            Object stateHeader = exchange.getIn().getHeader(JcloudsConstants.NODE_STATE)__            if (stateHeader == null) {_                nodeState = null__            } else if (stateHeader instanceof NodeState) {_                nodeState = (NodeState) stateHeader__            } else {_                nodeState = NodeState.valueOf(String.valueOf(stateHeader))__            }_        }_        return nodeState__    };retrieves,the,node,state,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;public,node,state,get,node,state,exchange,exchange,node,state,node,state,null,string,state,get,endpoint,get,node,state,if,state,null,node,state,node,state,value,of,state,if,exchange,get,in,get,header,jclouds,constants,null,object,state,header,exchange,get,in,get,header,jclouds,constants,if,state,header,null,node,state,null,else,if,state,header,instanceof,node,state,node,state,node,state,state,header,else,node,state,node,state,value,of,string,value,of,state,header,return,node,state
JcloudsComputeProducer -> public NodeState getNodeState(Exchange exchange);1353141176;Retrieves the node state from the URI or from the exchange headers. The header will take precedence over the URI.;public NodeState getNodeState(Exchange exchange) {_        NodeState nodeState = null__        String state = getEndpoint().getNodeState()__        if (state != null) {_            nodeState = NodeState.valueOf(state)__        }__        if (exchange.getIn().getHeader(JcloudsConstants.NODE_STATE) != null) {_            Object stateHeader = exchange.getIn().getHeader(JcloudsConstants.NODE_STATE)__            if (stateHeader == null) {_                nodeState = null__            } else if (stateHeader instanceof NodeState) {_                nodeState = (NodeState) stateHeader__            } else {_                nodeState = NodeState.valueOf(String.valueOf(stateHeader))__            }_        }_        return nodeState__    };retrieves,the,node,state,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;public,node,state,get,node,state,exchange,exchange,node,state,node,state,null,string,state,get,endpoint,get,node,state,if,state,null,node,state,node,state,value,of,state,if,exchange,get,in,get,header,jclouds,constants,null,object,state,header,exchange,get,in,get,header,jclouds,constants,if,state,header,null,node,state,null,else,if,state,header,instanceof,node,state,node,state,node,state,state,header,else,node,state,node,state,value,of,string,value,of,state,header,return,node,state
JcloudsComputeProducer -> protected String getHardwareId(Exchange exchange);1317243118;Retrieves the hardware id from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getHardwareId(Exchange exchange) {_        String hardwareId = ((JcloudsComputeEndpoint) getEndpoint()).getHardwareId()___        if (exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID) != null) {_            hardwareId = (String) exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID)__        }_        return hardwareId__    };retrieves,the,hardware,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,hardware,id,exchange,exchange,string,hardware,id,jclouds,compute,endpoint,get,endpoint,get,hardware,id,if,exchange,get,in,get,header,jclouds,constants,null,hardware,id,string,exchange,get,in,get,header,jclouds,constants,return,hardware,id
JcloudsComputeProducer -> protected String getHardwareId(Exchange exchange);1320504254;Retrieves the hardware id from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getHardwareId(Exchange exchange) {_        String hardwareId = ((JcloudsComputeEndpoint) getEndpoint()).getHardwareId()___        if (exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID) != null) {_            hardwareId = (String) exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID)__        }_        return hardwareId__    };retrieves,the,hardware,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,hardware,id,exchange,exchange,string,hardware,id,jclouds,compute,endpoint,get,endpoint,get,hardware,id,if,exchange,get,in,get,header,jclouds,constants,null,hardware,id,string,exchange,get,in,get,header,jclouds,constants,return,hardware,id
JcloudsComputeProducer -> protected String getHardwareId(Exchange exchange);1326907405;Retrieves the hardware id from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getHardwareId(Exchange exchange) {_        String hardwareId = ((JcloudsComputeEndpoint) getEndpoint()).getHardwareId()___        if (exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID) != null) {_            hardwareId = (String) exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID)__        }_        return hardwareId__    };retrieves,the,hardware,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,hardware,id,exchange,exchange,string,hardware,id,jclouds,compute,endpoint,get,endpoint,get,hardware,id,if,exchange,get,in,get,header,jclouds,constants,null,hardware,id,string,exchange,get,in,get,header,jclouds,constants,return,hardware,id
JcloudsComputeProducer -> protected String getHardwareId(Exchange exchange);1327089055;Retrieves the hardware id from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getHardwareId(Exchange exchange) {_        String hardwareId = getEndpoint().getHardwareId()___        if (exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID) != null) {_            hardwareId = (String) exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID)__        }_        return hardwareId__    };retrieves,the,hardware,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,hardware,id,exchange,exchange,string,hardware,id,get,endpoint,get,hardware,id,if,exchange,get,in,get,header,jclouds,constants,null,hardware,id,string,exchange,get,in,get,header,jclouds,constants,return,hardware,id
JcloudsComputeProducer -> protected String getHardwareId(Exchange exchange);1333145181;Retrieves the hardware id from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getHardwareId(Exchange exchange) {_        String hardwareId = getEndpoint().getHardwareId()___        if (exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID) != null) {_            hardwareId = (String) exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID)__        }_        return hardwareId__    };retrieves,the,hardware,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,hardware,id,exchange,exchange,string,hardware,id,get,endpoint,get,hardware,id,if,exchange,get,in,get,header,jclouds,constants,null,hardware,id,string,exchange,get,in,get,header,jclouds,constants,return,hardware,id
JcloudsComputeProducer -> protected String getHardwareId(Exchange exchange);1353141176;Retrieves the hardware id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getHardwareId(Exchange exchange) {_        String hardwareId = getEndpoint().getHardwareId()___        if (exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID) != null) {_            hardwareId = (String) exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID)__        }_        return hardwareId__    };retrieves,the,hardware,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,hardware,id,exchange,exchange,string,hardware,id,get,endpoint,get,hardware,id,if,exchange,get,in,get,header,jclouds,constants,null,hardware,id,string,exchange,get,in,get,header,jclouds,constants,return,hardware,id
JcloudsComputeProducer -> protected String getHardwareId(Exchange exchange);1373281324;Retrieves the hardware id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getHardwareId(Exchange exchange) {_        String hardwareId = getEndpoint().getHardwareId()___        if (exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID) != null) {_            hardwareId = (String) exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID)__        }_        return hardwareId__    };retrieves,the,hardware,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,hardware,id,exchange,exchange,string,hardware,id,get,endpoint,get,hardware,id,if,exchange,get,in,get,header,jclouds,constants,null,hardware,id,string,exchange,get,in,get,header,jclouds,constants,return,hardware,id
JcloudsComputeProducer -> protected String getHardwareId(Exchange exchange);1388443957;Retrieves the hardware id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getHardwareId(Exchange exchange) {_        String hardwareId = getEndpoint().getHardwareId()___        if (exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID) != null) {_            hardwareId = (String) exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID)__        }_        return hardwareId__    };retrieves,the,hardware,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,hardware,id,exchange,exchange,string,hardware,id,get,endpoint,get,hardware,id,if,exchange,get,in,get,header,jclouds,constants,null,hardware,id,string,exchange,get,in,get,header,jclouds,constants,return,hardware,id
JcloudsComputeProducer -> protected String getHardwareId(Exchange exchange);1435493075;Retrieves the hardware id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getHardwareId(Exchange exchange) {_        String hardwareId = getEndpoint().getHardwareId()___        if (exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID) != null) {_            hardwareId = (String) exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID)__        }_        return hardwareId__    };retrieves,the,hardware,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,hardware,id,exchange,exchange,string,hardware,id,get,endpoint,get,hardware,id,if,exchange,get,in,get,header,jclouds,constants,null,hardware,id,string,exchange,get,in,get,header,jclouds,constants,return,hardware,id
JcloudsComputeProducer -> protected String getHardwareId(Exchange exchange);1435496986;Retrieves the hardware id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getHardwareId(Exchange exchange) {_        String hardwareId = getEndpoint().getHardwareId()___        if (exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID) != null) {_            hardwareId = (String) exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID)__        }_        return hardwareId__    };retrieves,the,hardware,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,hardware,id,exchange,exchange,string,hardware,id,get,endpoint,get,hardware,id,if,exchange,get,in,get,header,jclouds,constants,null,hardware,id,string,exchange,get,in,get,header,jclouds,constants,return,hardware,id
JcloudsComputeProducer -> protected String getHardwareId(Exchange exchange);1435497250;Retrieves the hardware id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getHardwareId(Exchange exchange) {_        String hardwareId = getEndpoint().getHardwareId()___        if (exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID) != null) {_            hardwareId = (String) exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID)__        }_        return hardwareId__    };retrieves,the,hardware,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,hardware,id,exchange,exchange,string,hardware,id,get,endpoint,get,hardware,id,if,exchange,get,in,get,header,jclouds,constants,null,hardware,id,string,exchange,get,in,get,header,jclouds,constants,return,hardware,id
JcloudsComputeProducer -> protected String getHardwareId(Exchange exchange);1435498142;Retrieves the hardware id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getHardwareId(Exchange exchange) {_        String hardwareId = getEndpoint().getHardwareId()___        if (exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID) != null) {_            hardwareId = (String) exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID)__        }_        return hardwareId__    };retrieves,the,hardware,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,hardware,id,exchange,exchange,string,hardware,id,get,endpoint,get,hardware,id,if,exchange,get,in,get,header,jclouds,constants,null,hardware,id,string,exchange,get,in,get,header,jclouds,constants,return,hardware,id
JcloudsComputeProducer -> protected String getHardwareId(Exchange exchange);1435500284;Retrieves the hardware id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getHardwareId(Exchange exchange) {_        String hardwareId = getEndpoint().getHardwareId()___        if (exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID) != null) {_            hardwareId = (String) exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID)__        }_        return hardwareId__    };retrieves,the,hardware,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,hardware,id,exchange,exchange,string,hardware,id,get,endpoint,get,hardware,id,if,exchange,get,in,get,header,jclouds,constants,null,hardware,id,string,exchange,get,in,get,header,jclouds,constants,return,hardware,id
JcloudsComputeProducer -> protected String getHardwareId(Exchange exchange);1435764273;Retrieves the hardware id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getHardwareId(Exchange exchange) {_        String hardwareId = getEndpoint().getHardwareId()___        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID))) {_            hardwareId = (String) exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID)__        }_        return hardwareId__    };retrieves,the,hardware,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,hardware,id,exchange,exchange,string,hardware,id,get,endpoint,get,hardware,id,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,hardware,id,string,exchange,get,in,get,header,jclouds,constants,return,hardware,id
JcloudsComputeProducer -> protected String getHardwareId(Exchange exchange);1435767436;Retrieves the hardware id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getHardwareId(Exchange exchange) {_        String hardwareId = getEndpoint().getHardwareId()___        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID))) {_            hardwareId = exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID, String.class)__        }_        return hardwareId__    };retrieves,the,hardware,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,hardware,id,exchange,exchange,string,hardware,id,get,endpoint,get,hardware,id,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,hardware,id,exchange,get,in,get,header,jclouds,constants,string,class,return,hardware,id
JcloudsComputeProducer -> protected String getHardwareId(Exchange exchange);1537290824;Retrieves the hardware id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getHardwareId(Exchange exchange) {_        String hardwareId = getEndpoint().getHardwareId()___        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID))) {_            hardwareId = exchange.getIn().getHeader(JcloudsConstants.HARDWARE_ID, String.class)__        }_        return hardwareId__    };retrieves,the,hardware,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,hardware,id,exchange,exchange,string,hardware,id,get,endpoint,get,hardware,id,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,hardware,id,exchange,get,in,get,header,jclouds,constants,string,class,return,hardware,id
JcloudsComputeProducer -> protected String getLocationId(Exchange exchange);1317243118;Retrieves the location id from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getLocationId(Exchange exchange) {_        String locationId = ((JcloudsComputeEndpoint) getEndpoint()).getLocationId()___        if (exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID) != null) {_            locationId = (String) exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID)__        }_        return locationId__    };retrieves,the,location,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,location,id,exchange,exchange,string,location,id,jclouds,compute,endpoint,get,endpoint,get,location,id,if,exchange,get,in,get,header,jclouds,constants,null,location,id,string,exchange,get,in,get,header,jclouds,constants,return,location,id
JcloudsComputeProducer -> protected String getLocationId(Exchange exchange);1320504254;Retrieves the location id from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getLocationId(Exchange exchange) {_        String locationId = ((JcloudsComputeEndpoint) getEndpoint()).getLocationId()___        if (exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID) != null) {_            locationId = (String) exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID)__        }_        return locationId__    };retrieves,the,location,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,location,id,exchange,exchange,string,location,id,jclouds,compute,endpoint,get,endpoint,get,location,id,if,exchange,get,in,get,header,jclouds,constants,null,location,id,string,exchange,get,in,get,header,jclouds,constants,return,location,id
JcloudsComputeProducer -> protected String getLocationId(Exchange exchange);1326907405;Retrieves the location id from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getLocationId(Exchange exchange) {_        String locationId = ((JcloudsComputeEndpoint) getEndpoint()).getLocationId()___        if (exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID) != null) {_            locationId = (String) exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID)__        }_        return locationId__    };retrieves,the,location,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,location,id,exchange,exchange,string,location,id,jclouds,compute,endpoint,get,endpoint,get,location,id,if,exchange,get,in,get,header,jclouds,constants,null,location,id,string,exchange,get,in,get,header,jclouds,constants,return,location,id
JcloudsComputeProducer -> protected String getLocationId(Exchange exchange);1327089055;Retrieves the location id from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getLocationId(Exchange exchange) {_        String locationId = getEndpoint().getLocationId()___        if (exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID) != null) {_            locationId = (String) exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID)__        }_        return locationId__    };retrieves,the,location,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,location,id,exchange,exchange,string,location,id,get,endpoint,get,location,id,if,exchange,get,in,get,header,jclouds,constants,null,location,id,string,exchange,get,in,get,header,jclouds,constants,return,location,id
JcloudsComputeProducer -> protected String getLocationId(Exchange exchange);1333145181;Retrieves the location id from the URI or from the exchange headers. The header will take precedence over the URI.__@param exchange_@return;protected String getLocationId(Exchange exchange) {_        String locationId = getEndpoint().getLocationId()___        if (exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID) != null) {_            locationId = (String) exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID)__        }_        return locationId__    };retrieves,the,location,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,location,id,exchange,exchange,string,location,id,get,endpoint,get,location,id,if,exchange,get,in,get,header,jclouds,constants,null,location,id,string,exchange,get,in,get,header,jclouds,constants,return,location,id
JcloudsComputeProducer -> protected String getLocationId(Exchange exchange);1353141176;Retrieves the location id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getLocationId(Exchange exchange) {_        String locationId = getEndpoint().getLocationId()___        if (exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID) != null) {_            locationId = (String) exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID)__        }_        return locationId__    };retrieves,the,location,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,location,id,exchange,exchange,string,location,id,get,endpoint,get,location,id,if,exchange,get,in,get,header,jclouds,constants,null,location,id,string,exchange,get,in,get,header,jclouds,constants,return,location,id
JcloudsComputeProducer -> protected String getLocationId(Exchange exchange);1373281324;Retrieves the location id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getLocationId(Exchange exchange) {_        String locationId = getEndpoint().getLocationId()___        if (exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID) != null) {_            locationId = (String) exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID)__        }_        return locationId__    };retrieves,the,location,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,location,id,exchange,exchange,string,location,id,get,endpoint,get,location,id,if,exchange,get,in,get,header,jclouds,constants,null,location,id,string,exchange,get,in,get,header,jclouds,constants,return,location,id
JcloudsComputeProducer -> protected String getLocationId(Exchange exchange);1388443957;Retrieves the location id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getLocationId(Exchange exchange) {_        String locationId = getEndpoint().getLocationId()___        if (exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID) != null) {_            locationId = (String) exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID)__        }_        return locationId__    };retrieves,the,location,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,location,id,exchange,exchange,string,location,id,get,endpoint,get,location,id,if,exchange,get,in,get,header,jclouds,constants,null,location,id,string,exchange,get,in,get,header,jclouds,constants,return,location,id
JcloudsComputeProducer -> protected String getLocationId(Exchange exchange);1435493075;Retrieves the location id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getLocationId(Exchange exchange) {_        String locationId = getEndpoint().getLocationId()___        if (exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID) != null) {_            locationId = (String) exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID)__        }_        return locationId__    };retrieves,the,location,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,location,id,exchange,exchange,string,location,id,get,endpoint,get,location,id,if,exchange,get,in,get,header,jclouds,constants,null,location,id,string,exchange,get,in,get,header,jclouds,constants,return,location,id
JcloudsComputeProducer -> protected String getLocationId(Exchange exchange);1435496986;Retrieves the location id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getLocationId(Exchange exchange) {_        String locationId = getEndpoint().getLocationId()___        if (exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID) != null) {_            locationId = (String) exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID)__        }_        return locationId__    };retrieves,the,location,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,location,id,exchange,exchange,string,location,id,get,endpoint,get,location,id,if,exchange,get,in,get,header,jclouds,constants,null,location,id,string,exchange,get,in,get,header,jclouds,constants,return,location,id
JcloudsComputeProducer -> protected String getLocationId(Exchange exchange);1435497250;Retrieves the location id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getLocationId(Exchange exchange) {_        String locationId = getEndpoint().getLocationId()___        if (exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID) != null) {_            locationId = (String) exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID)__        }_        return locationId__    };retrieves,the,location,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,location,id,exchange,exchange,string,location,id,get,endpoint,get,location,id,if,exchange,get,in,get,header,jclouds,constants,null,location,id,string,exchange,get,in,get,header,jclouds,constants,return,location,id
JcloudsComputeProducer -> protected String getLocationId(Exchange exchange);1435498142;Retrieves the location id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getLocationId(Exchange exchange) {_        String locationId = getEndpoint().getLocationId()___        if (exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID) != null) {_            locationId = (String) exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID)__        }_        return locationId__    };retrieves,the,location,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,location,id,exchange,exchange,string,location,id,get,endpoint,get,location,id,if,exchange,get,in,get,header,jclouds,constants,null,location,id,string,exchange,get,in,get,header,jclouds,constants,return,location,id
JcloudsComputeProducer -> protected String getLocationId(Exchange exchange);1435500284;Retrieves the location id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getLocationId(Exchange exchange) {_        String locationId = getEndpoint().getLocationId()___        if (exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID) != null) {_            locationId = (String) exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID)__        }_        return locationId__    };retrieves,the,location,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,location,id,exchange,exchange,string,location,id,get,endpoint,get,location,id,if,exchange,get,in,get,header,jclouds,constants,null,location,id,string,exchange,get,in,get,header,jclouds,constants,return,location,id
JcloudsComputeProducer -> protected String getLocationId(Exchange exchange);1435764273;Retrieves the location id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getLocationId(Exchange exchange) {_        String locationId = getEndpoint().getLocationId()___        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID))) {_            locationId = (String) exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID)__        }_        return locationId__    };retrieves,the,location,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,location,id,exchange,exchange,string,location,id,get,endpoint,get,location,id,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,location,id,string,exchange,get,in,get,header,jclouds,constants,return,location,id
JcloudsComputeProducer -> protected String getLocationId(Exchange exchange);1435767436;Retrieves the location id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getLocationId(Exchange exchange) {_        String locationId = getEndpoint().getLocationId()___        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID))) {_            locationId = exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID, String.class)__        }_        return locationId__    };retrieves,the,location,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,location,id,exchange,exchange,string,location,id,get,endpoint,get,location,id,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,location,id,exchange,get,in,get,header,jclouds,constants,string,class,return,location,id
JcloudsComputeProducer -> protected String getLocationId(Exchange exchange);1537290824;Retrieves the location id from the URI or from the exchange headers. The header will take precedence over the URI.;protected String getLocationId(Exchange exchange) {_        String locationId = getEndpoint().getLocationId()___        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID))) {_            locationId = exchange.getIn().getHeader(JcloudsConstants.LOCATION_ID, String.class)__        }_        return locationId__    };retrieves,the,location,id,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;protected,string,get,location,id,exchange,exchange,string,location,id,get,endpoint,get,location,id,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,location,id,exchange,get,in,get,header,jclouds,constants,string,class,return,location,id
JcloudsComputeProducer -> protected void resumeNode(Exchange exchange);1435498142;Suspend the node with the specified nodeId.;protected void resumeNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.resumeNodesMatching(predicate)__    };suspend,the,node,with,the,specified,node,id;protected,void,resume,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,resume,nodes,matching,predicate
JcloudsComputeProducer -> protected void resumeNode(Exchange exchange);1435500284;Suspend the node with the specified nodeId.;protected void resumeNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.resumeNodesMatching(predicate)__    };suspend,the,node,with,the,specified,node,id;protected,void,resume,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,resume,nodes,matching,predicate
JcloudsComputeProducer -> protected void resumeNode(Exchange exchange);1435764273;Suspend the node with the specified nodeId.;protected void resumeNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.resumeNodesMatching(predicate)__    };suspend,the,node,with,the,specified,node,id;protected,void,resume,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,resume,nodes,matching,predicate
JcloudsComputeProducer -> protected void resumeNode(Exchange exchange);1435767436;Suspend the node with the specified nodeId.;protected void resumeNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.resumeNodesMatching(predicate)__    };suspend,the,node,with,the,specified,node,id;protected,void,resume,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,resume,nodes,matching,predicate
JcloudsComputeProducer -> protected void resumeNode(Exchange exchange);1537290824;Suspend the node with the specified nodeId.;protected void resumeNode(Exchange exchange) {_        Predicate<NodeMetadata> predicate = getNodePredicate(exchange)__        computeService.resumeNodesMatching(predicate)__    };suspend,the,node,with,the,specified,node,id;protected,void,resume,node,exchange,exchange,predicate,node,metadata,predicate,get,node,predicate,exchange,compute,service,resume,nodes,matching,predicate
JcloudsComputeProducer -> protected String getImageId(Exchange exchange);1317243118;Retrieves the image id from the URI or from the exchange properties. The property will take precedence over the URI.__@param exchange_@return;protected String getImageId(Exchange exchange) {_        String imageId = ((JcloudsComputeEndpoint) getEndpoint()).getImageId()___        if (exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID) != null) {_            imageId = (String) exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID)__        }_        return imageId__    };retrieves,the,image,id,from,the,uri,or,from,the,exchange,properties,the,property,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,image,id,exchange,exchange,string,image,id,jclouds,compute,endpoint,get,endpoint,get,image,id,if,exchange,get,in,get,header,jclouds,constants,null,image,id,string,exchange,get,in,get,header,jclouds,constants,return,image,id
JcloudsComputeProducer -> protected String getImageId(Exchange exchange);1320504254;Retrieves the image id from the URI or from the exchange properties. The property will take precedence over the URI.__@param exchange_@return;protected String getImageId(Exchange exchange) {_        String imageId = ((JcloudsComputeEndpoint) getEndpoint()).getImageId()___        if (exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID) != null) {_            imageId = (String) exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID)__        }_        return imageId__    };retrieves,the,image,id,from,the,uri,or,from,the,exchange,properties,the,property,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,image,id,exchange,exchange,string,image,id,jclouds,compute,endpoint,get,endpoint,get,image,id,if,exchange,get,in,get,header,jclouds,constants,null,image,id,string,exchange,get,in,get,header,jclouds,constants,return,image,id
JcloudsComputeProducer -> protected String getImageId(Exchange exchange);1326907405;Retrieves the image id from the URI or from the exchange properties. The property will take precedence over the URI.__@param exchange_@return;protected String getImageId(Exchange exchange) {_        String imageId = ((JcloudsComputeEndpoint) getEndpoint()).getImageId()___        if (exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID) != null) {_            imageId = (String) exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID)__        }_        return imageId__    };retrieves,the,image,id,from,the,uri,or,from,the,exchange,properties,the,property,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,image,id,exchange,exchange,string,image,id,jclouds,compute,endpoint,get,endpoint,get,image,id,if,exchange,get,in,get,header,jclouds,constants,null,image,id,string,exchange,get,in,get,header,jclouds,constants,return,image,id
JcloudsComputeProducer -> protected String getImageId(Exchange exchange);1327089055;Retrieves the image id from the URI or from the exchange properties. The property will take precedence over the URI.__@param exchange_@return;protected String getImageId(Exchange exchange) {_        String imageId = getEndpoint().getImageId()___        if (exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID) != null) {_            imageId = (String) exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID)__        }_        return imageId__    };retrieves,the,image,id,from,the,uri,or,from,the,exchange,properties,the,property,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,image,id,exchange,exchange,string,image,id,get,endpoint,get,image,id,if,exchange,get,in,get,header,jclouds,constants,null,image,id,string,exchange,get,in,get,header,jclouds,constants,return,image,id
JcloudsComputeProducer -> protected String getImageId(Exchange exchange);1333145181;Retrieves the image id from the URI or from the exchange properties. The property will take precedence over the URI.__@param exchange_@return;protected String getImageId(Exchange exchange) {_        String imageId = getEndpoint().getImageId()___        if (exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID) != null) {_            imageId = (String) exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID)__        }_        return imageId__    };retrieves,the,image,id,from,the,uri,or,from,the,exchange,properties,the,property,will,take,precedence,over,the,uri,param,exchange,return;protected,string,get,image,id,exchange,exchange,string,image,id,get,endpoint,get,image,id,if,exchange,get,in,get,header,jclouds,constants,null,image,id,string,exchange,get,in,get,header,jclouds,constants,return,image,id
JcloudsComputeProducer -> protected String getImageId(Exchange exchange);1353141176;Retrieves the image id from the URI or from the exchange properties. The property will take precedence over the URI.;protected String getImageId(Exchange exchange) {_        String imageId = getEndpoint().getImageId()___        if (exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID) != null) {_            imageId = (String) exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID)__        }_        return imageId__    };retrieves,the,image,id,from,the,uri,or,from,the,exchange,properties,the,property,will,take,precedence,over,the,uri;protected,string,get,image,id,exchange,exchange,string,image,id,get,endpoint,get,image,id,if,exchange,get,in,get,header,jclouds,constants,null,image,id,string,exchange,get,in,get,header,jclouds,constants,return,image,id
JcloudsComputeProducer -> protected String getImageId(Exchange exchange);1373281324;Retrieves the image id from the URI or from the exchange properties. The property will take precedence over the URI.;protected String getImageId(Exchange exchange) {_        String imageId = getEndpoint().getImageId()___        if (exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID) != null) {_            imageId = (String) exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID)__        }_        return imageId__    };retrieves,the,image,id,from,the,uri,or,from,the,exchange,properties,the,property,will,take,precedence,over,the,uri;protected,string,get,image,id,exchange,exchange,string,image,id,get,endpoint,get,image,id,if,exchange,get,in,get,header,jclouds,constants,null,image,id,string,exchange,get,in,get,header,jclouds,constants,return,image,id
JcloudsComputeProducer -> protected String getImageId(Exchange exchange);1388443957;Retrieves the image id from the URI or from the exchange properties. The property will take precedence over the URI.;protected String getImageId(Exchange exchange) {_        String imageId = getEndpoint().getImageId()___        if (exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID) != null) {_            imageId = (String) exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID)__        }_        return imageId__    };retrieves,the,image,id,from,the,uri,or,from,the,exchange,properties,the,property,will,take,precedence,over,the,uri;protected,string,get,image,id,exchange,exchange,string,image,id,get,endpoint,get,image,id,if,exchange,get,in,get,header,jclouds,constants,null,image,id,string,exchange,get,in,get,header,jclouds,constants,return,image,id
JcloudsComputeProducer -> protected String getImageId(Exchange exchange);1435493075;Retrieves the image id from the URI or from the exchange properties. The property will take precedence over the URI.;protected String getImageId(Exchange exchange) {_        String imageId = getEndpoint().getImageId()___        if (exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID) != null) {_            imageId = (String) exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID)__        }_        return imageId__    };retrieves,the,image,id,from,the,uri,or,from,the,exchange,properties,the,property,will,take,precedence,over,the,uri;protected,string,get,image,id,exchange,exchange,string,image,id,get,endpoint,get,image,id,if,exchange,get,in,get,header,jclouds,constants,null,image,id,string,exchange,get,in,get,header,jclouds,constants,return,image,id
JcloudsComputeProducer -> protected String getImageId(Exchange exchange);1435496986;Retrieves the image id from the URI or from the exchange properties. The property will take precedence over the URI.;protected String getImageId(Exchange exchange) {_        String imageId = getEndpoint().getImageId()___        if (exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID) != null) {_            imageId = (String) exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID)__        }_        return imageId__    };retrieves,the,image,id,from,the,uri,or,from,the,exchange,properties,the,property,will,take,precedence,over,the,uri;protected,string,get,image,id,exchange,exchange,string,image,id,get,endpoint,get,image,id,if,exchange,get,in,get,header,jclouds,constants,null,image,id,string,exchange,get,in,get,header,jclouds,constants,return,image,id
JcloudsComputeProducer -> protected String getImageId(Exchange exchange);1435497250;Retrieves the image id from the URI or from the exchange properties. The property will take precedence over the URI.;protected String getImageId(Exchange exchange) {_        String imageId = getEndpoint().getImageId()___        if (exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID) != null) {_            imageId = (String) exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID)__        }_        return imageId__    };retrieves,the,image,id,from,the,uri,or,from,the,exchange,properties,the,property,will,take,precedence,over,the,uri;protected,string,get,image,id,exchange,exchange,string,image,id,get,endpoint,get,image,id,if,exchange,get,in,get,header,jclouds,constants,null,image,id,string,exchange,get,in,get,header,jclouds,constants,return,image,id
JcloudsComputeProducer -> protected String getImageId(Exchange exchange);1435498142;Retrieves the image id from the URI or from the exchange properties. The property will take precedence over the URI.;protected String getImageId(Exchange exchange) {_        String imageId = getEndpoint().getImageId()___        if (exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID) != null) {_            imageId = (String) exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID)__        }_        return imageId__    };retrieves,the,image,id,from,the,uri,or,from,the,exchange,properties,the,property,will,take,precedence,over,the,uri;protected,string,get,image,id,exchange,exchange,string,image,id,get,endpoint,get,image,id,if,exchange,get,in,get,header,jclouds,constants,null,image,id,string,exchange,get,in,get,header,jclouds,constants,return,image,id
JcloudsComputeProducer -> protected String getImageId(Exchange exchange);1435500284;Retrieves the image id from the URI or from the exchange properties. The property will take precedence over the URI.;protected String getImageId(Exchange exchange) {_        String imageId = getEndpoint().getImageId()___        if (exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID) != null) {_            imageId = (String) exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID)__        }_        return imageId__    };retrieves,the,image,id,from,the,uri,or,from,the,exchange,properties,the,property,will,take,precedence,over,the,uri;protected,string,get,image,id,exchange,exchange,string,image,id,get,endpoint,get,image,id,if,exchange,get,in,get,header,jclouds,constants,null,image,id,string,exchange,get,in,get,header,jclouds,constants,return,image,id
JcloudsComputeProducer -> protected String getImageId(Exchange exchange);1435764273;Retrieves the image id from the URI or from the exchange properties. The property will take precedence over the URI.;protected String getImageId(Exchange exchange) {_        String imageId = getEndpoint().getImageId()___        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID))) {_            imageId = (String) exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID)__        }_        return imageId__    };retrieves,the,image,id,from,the,uri,or,from,the,exchange,properties,the,property,will,take,precedence,over,the,uri;protected,string,get,image,id,exchange,exchange,string,image,id,get,endpoint,get,image,id,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,image,id,string,exchange,get,in,get,header,jclouds,constants,return,image,id
JcloudsComputeProducer -> protected String getImageId(Exchange exchange);1435767436;Retrieves the image id from the URI or from the exchange properties. The property will take precedence over the URI.;protected String getImageId(Exchange exchange) {_        String imageId = getEndpoint().getImageId()___        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID))) {_            imageId = exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID, String.class)__        }_        return imageId__    };retrieves,the,image,id,from,the,uri,or,from,the,exchange,properties,the,property,will,take,precedence,over,the,uri;protected,string,get,image,id,exchange,exchange,string,image,id,get,endpoint,get,image,id,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,image,id,exchange,get,in,get,header,jclouds,constants,string,class,return,image,id
JcloudsComputeProducer -> protected String getImageId(Exchange exchange);1537290824;Retrieves the image id from the URI or from the exchange properties. The property will take precedence over the URI.;protected String getImageId(Exchange exchange) {_        String imageId = getEndpoint().getImageId()___        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID))) {_            imageId = exchange.getIn().getHeader(JcloudsConstants.IMAGE_ID, String.class)__        }_        return imageId__    };retrieves,the,image,id,from,the,uri,or,from,the,exchange,properties,the,property,will,take,precedence,over,the,uri;protected,string,get,image,id,exchange,exchange,string,image,id,get,endpoint,get,image,id,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,image,id,exchange,get,in,get,header,jclouds,constants,string,class,return,image,id
JcloudsComputeProducer -> protected void runScriptOnNode(Exchange exchange) throws CamelException;1317243118;Runs a script on the target node.__@param exchange_@throws CamelException;protected void runScriptOnNode(Exchange exchange) throws CamelException {_        String script = exchange.getIn().getBody(String.class)__        String nodeId = getNodeId(exchange)__        String user = getUser(exchange)___        Credentials credentials = null___        if (user != null) {_            credentials = new Credentials(user, null)__        }_        ExecResponse execResponse = null___        if (credentials == null) {_            execResponse = computeService.runScriptOnNode(nodeId, script)__        } else {_            execResponse = computeService.runScriptOnNode(nodeId, script, RunScriptOptions.Builder.overrideCredentialsWith(credentials).runAsRoot(false))__        }__        if (execResponse == null) {_            throw new CamelException("Failed to receive response for run script operation.")__        }__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_ERROR, execResponse.getError())__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_EXIT_CODE, execResponse.getExitCode())__        if (execResponse != null) {_            exchange.getOut().setBody(execResponse.getOutput())__        }_    };runs,a,script,on,the,target,node,param,exchange,throws,camel,exception;protected,void,run,script,on,node,exchange,exchange,throws,camel,exception,string,script,exchange,get,in,get,body,string,class,string,node,id,get,node,id,exchange,string,user,get,user,exchange,credentials,credentials,null,if,user,null,credentials,new,credentials,user,null,exec,response,exec,response,null,if,credentials,null,exec,response,compute,service,run,script,on,node,node,id,script,else,exec,response,compute,service,run,script,on,node,node,id,script,run,script,options,builder,override,credentials,with,credentials,run,as,root,false,if,exec,response,null,throw,new,camel,exception,failed,to,receive,response,for,run,script,operation,exchange,set,property,jclouds,constants,exec,response,get,error,exchange,set,property,jclouds,constants,exec,response,get,exit,code,if,exec,response,null,exchange,get,out,set,body,exec,response,get,output
JcloudsComputeProducer -> protected void runScriptOnNode(Exchange exchange) throws CamelException;1320504254;Runs a script on the target node.__@param exchange_@throws CamelException;protected void runScriptOnNode(Exchange exchange) throws CamelException {_        String script = exchange.getIn().getBody(String.class)__        String nodeId = getNodeId(exchange)__        String user = getUser(exchange)___        Credentials credentials = null___        if (user != null) {_            credentials = new Credentials(user, null)__        }_        ExecResponse execResponse = null___        if (credentials == null) {_            execResponse = computeService.runScriptOnNode(nodeId, script)__        } else {_            execResponse = computeService.runScriptOnNode(nodeId, script, RunScriptOptions.Builder.overrideCredentialsWith(credentials).runAsRoot(false))__        }__        if (execResponse == null) {_            throw new CamelException("Failed to receive response for run script operation.")__        }__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_ERROR, execResponse.getError())__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_EXIT_CODE, execResponse.getExitCode())__        if (execResponse != null) {_            exchange.getOut().setBody(execResponse.getOutput())__        }_    };runs,a,script,on,the,target,node,param,exchange,throws,camel,exception;protected,void,run,script,on,node,exchange,exchange,throws,camel,exception,string,script,exchange,get,in,get,body,string,class,string,node,id,get,node,id,exchange,string,user,get,user,exchange,credentials,credentials,null,if,user,null,credentials,new,credentials,user,null,exec,response,exec,response,null,if,credentials,null,exec,response,compute,service,run,script,on,node,node,id,script,else,exec,response,compute,service,run,script,on,node,node,id,script,run,script,options,builder,override,credentials,with,credentials,run,as,root,false,if,exec,response,null,throw,new,camel,exception,failed,to,receive,response,for,run,script,operation,exchange,set,property,jclouds,constants,exec,response,get,error,exchange,set,property,jclouds,constants,exec,response,get,exit,code,if,exec,response,null,exchange,get,out,set,body,exec,response,get,output
JcloudsComputeProducer -> protected void runScriptOnNode(Exchange exchange) throws CamelException;1326907405;Runs a script on the target node.__@param exchange_@throws CamelException;protected void runScriptOnNode(Exchange exchange) throws CamelException {_        String script = exchange.getIn().getBody(String.class)__        String nodeId = getNodeId(exchange)__        String user = getUser(exchange)___        Credentials credentials = null___        if (user != null) {_            credentials = new Credentials(user, null)__        }_        ExecResponse execResponse = null___        if (credentials == null) {_            execResponse = computeService.runScriptOnNode(nodeId, script)__        } else {_            execResponse = computeService.runScriptOnNode(nodeId, script, RunScriptOptions.Builder.overrideCredentialsWith(credentials).runAsRoot(false))__        }__        if (execResponse == null) {_            throw new CamelException("Failed to receive response for run script operation.")__        }__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_ERROR, execResponse.getError())__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_EXIT_CODE, execResponse.getExitCode())__        if (execResponse != null) {_            exchange.getOut().setBody(execResponse.getOutput())__        }_    };runs,a,script,on,the,target,node,param,exchange,throws,camel,exception;protected,void,run,script,on,node,exchange,exchange,throws,camel,exception,string,script,exchange,get,in,get,body,string,class,string,node,id,get,node,id,exchange,string,user,get,user,exchange,credentials,credentials,null,if,user,null,credentials,new,credentials,user,null,exec,response,exec,response,null,if,credentials,null,exec,response,compute,service,run,script,on,node,node,id,script,else,exec,response,compute,service,run,script,on,node,node,id,script,run,script,options,builder,override,credentials,with,credentials,run,as,root,false,if,exec,response,null,throw,new,camel,exception,failed,to,receive,response,for,run,script,operation,exchange,set,property,jclouds,constants,exec,response,get,error,exchange,set,property,jclouds,constants,exec,response,get,exit,code,if,exec,response,null,exchange,get,out,set,body,exec,response,get,output
JcloudsComputeProducer -> protected void runScriptOnNode(Exchange exchange) throws CamelException;1327089055;Runs a script on the target node.__@param exchange_@throws CamelException;protected void runScriptOnNode(Exchange exchange) throws CamelException {_        String script = exchange.getIn().getBody(String.class)__        String nodeId = getNodeId(exchange)__        String user = getUser(exchange)___        LoginCredentials credentials = null___        if (user != null) {_            credentials = LoginCredentials.builder().user(user).build()__        }_        ExecResponse execResponse = null___        if (credentials == null) {_            execResponse = computeService.runScriptOnNode(nodeId, script)__        } else {_            execResponse = computeService.runScriptOnNode(nodeId, script, RunScriptOptions.Builder.overrideLoginCredentials(credentials).runAsRoot(false))__        }__        if (execResponse == null) {_            throw new CamelException("Failed to receive response for run script operation.")__        }__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_ERROR, execResponse.getError())__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_EXIT_CODE, execResponse.getExitCode())__        exchange.getOut().setBody(execResponse.getOutput())__    };runs,a,script,on,the,target,node,param,exchange,throws,camel,exception;protected,void,run,script,on,node,exchange,exchange,throws,camel,exception,string,script,exchange,get,in,get,body,string,class,string,node,id,get,node,id,exchange,string,user,get,user,exchange,login,credentials,credentials,null,if,user,null,credentials,login,credentials,builder,user,user,build,exec,response,exec,response,null,if,credentials,null,exec,response,compute,service,run,script,on,node,node,id,script,else,exec,response,compute,service,run,script,on,node,node,id,script,run,script,options,builder,override,login,credentials,credentials,run,as,root,false,if,exec,response,null,throw,new,camel,exception,failed,to,receive,response,for,run,script,operation,exchange,set,property,jclouds,constants,exec,response,get,error,exchange,set,property,jclouds,constants,exec,response,get,exit,code,exchange,get,out,set,body,exec,response,get,output
JcloudsComputeProducer -> protected void runScriptOnNode(Exchange exchange) throws CamelException;1388443957;Runs a script on the target node.;protected void runScriptOnNode(Exchange exchange) throws CamelException {_        String script = exchange.getIn().getBody(String.class)__        String nodeId = getNodeId(exchange)__        String user = getUser(exchange)___        LoginCredentials credentials = null___        if (user != null) {_            credentials = LoginCredentials.builder().user(user).build()__        }_        ExecResponse execResponse = null___        if (credentials == null) {_            execResponse = computeService.runScriptOnNode(nodeId, script)__        } else {_            execResponse = computeService.runScriptOnNode(nodeId, script, RunScriptOptions.Builder.overrideLoginCredentials(credentials).runAsRoot(false))__        }__        if (execResponse == null) {_            throw new CamelExchangeException("Failed to receive response for run script operation on node: " + nodeId + " using script: " + script, exchange)__        }__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_ERROR, execResponse.getError())__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_EXIT_CODE, execResponse.getExitStatus())__        exchange.getOut().setBody(execResponse.getOutput())__    };runs,a,script,on,the,target,node;protected,void,run,script,on,node,exchange,exchange,throws,camel,exception,string,script,exchange,get,in,get,body,string,class,string,node,id,get,node,id,exchange,string,user,get,user,exchange,login,credentials,credentials,null,if,user,null,credentials,login,credentials,builder,user,user,build,exec,response,exec,response,null,if,credentials,null,exec,response,compute,service,run,script,on,node,node,id,script,else,exec,response,compute,service,run,script,on,node,node,id,script,run,script,options,builder,override,login,credentials,credentials,run,as,root,false,if,exec,response,null,throw,new,camel,exchange,exception,failed,to,receive,response,for,run,script,operation,on,node,node,id,using,script,script,exchange,exchange,set,property,jclouds,constants,exec,response,get,error,exchange,set,property,jclouds,constants,exec,response,get,exit,status,exchange,get,out,set,body,exec,response,get,output
JcloudsComputeProducer -> protected void runScriptOnNode(Exchange exchange) throws CamelException;1435493075;Runs a script on the target node.;protected void runScriptOnNode(Exchange exchange) throws CamelException {_        String script = exchange.getIn().getBody(String.class)__        String nodeId = getNodeId(exchange)__        String user = getUser(exchange)___        LoginCredentials credentials = null___        if (user != null) {_            credentials = LoginCredentials.builder().user(user).build()__        }_        ExecResponse execResponse = null___        if (credentials == null) {_            execResponse = computeService.runScriptOnNode(nodeId, script)__        } else {_            execResponse = computeService.runScriptOnNode(nodeId, script, RunScriptOptions.Builder.overrideLoginCredentials(credentials).runAsRoot(false))__        }__        if (execResponse == null) {_            throw new CamelExchangeException("Failed to receive response for run script operation on node: " + nodeId + " using script: " + script, exchange)__        }__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_ERROR, execResponse.getError())__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_EXIT_CODE, execResponse.getExitStatus())__        exchange.getOut().setBody(execResponse.getOutput())__    };runs,a,script,on,the,target,node;protected,void,run,script,on,node,exchange,exchange,throws,camel,exception,string,script,exchange,get,in,get,body,string,class,string,node,id,get,node,id,exchange,string,user,get,user,exchange,login,credentials,credentials,null,if,user,null,credentials,login,credentials,builder,user,user,build,exec,response,exec,response,null,if,credentials,null,exec,response,compute,service,run,script,on,node,node,id,script,else,exec,response,compute,service,run,script,on,node,node,id,script,run,script,options,builder,override,login,credentials,credentials,run,as,root,false,if,exec,response,null,throw,new,camel,exchange,exception,failed,to,receive,response,for,run,script,operation,on,node,node,id,using,script,script,exchange,exchange,set,property,jclouds,constants,exec,response,get,error,exchange,set,property,jclouds,constants,exec,response,get,exit,status,exchange,get,out,set,body,exec,response,get,output
JcloudsComputeProducer -> protected void runScriptOnNode(Exchange exchange) throws CamelException;1435496986;Runs a script on the target node.;protected void runScriptOnNode(Exchange exchange) throws CamelException {_        String script = exchange.getIn().getBody(String.class)__        String nodeId = getNodeId(exchange)__        String user = getUser(exchange)___        LoginCredentials credentials = null___        if (user != null) {_            credentials = LoginCredentials.builder().user(user).build()__        }_        ExecResponse execResponse = null___        if (credentials == null) {_            execResponse = computeService.runScriptOnNode(nodeId, script)__        } else {_            execResponse = computeService.runScriptOnNode(nodeId, script, RunScriptOptions.Builder.overrideLoginCredentials(credentials).runAsRoot(false))__        }__        if (execResponse == null) {_            throw new CamelExchangeException("Failed to receive response for run script operation on node: " + nodeId + " using script: " + script, exchange)__        }__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_ERROR, execResponse.getError())__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_EXIT_CODE, execResponse.getExitStatus())__        exchange.getOut().setBody(execResponse.getOutput())__    };runs,a,script,on,the,target,node;protected,void,run,script,on,node,exchange,exchange,throws,camel,exception,string,script,exchange,get,in,get,body,string,class,string,node,id,get,node,id,exchange,string,user,get,user,exchange,login,credentials,credentials,null,if,user,null,credentials,login,credentials,builder,user,user,build,exec,response,exec,response,null,if,credentials,null,exec,response,compute,service,run,script,on,node,node,id,script,else,exec,response,compute,service,run,script,on,node,node,id,script,run,script,options,builder,override,login,credentials,credentials,run,as,root,false,if,exec,response,null,throw,new,camel,exchange,exception,failed,to,receive,response,for,run,script,operation,on,node,node,id,using,script,script,exchange,exchange,set,property,jclouds,constants,exec,response,get,error,exchange,set,property,jclouds,constants,exec,response,get,exit,status,exchange,get,out,set,body,exec,response,get,output
JcloudsComputeProducer -> protected void runScriptOnNode(Exchange exchange) throws CamelException;1435497250;Runs a script on the target node.;protected void runScriptOnNode(Exchange exchange) throws CamelException {_        String script = exchange.getIn().getBody(String.class)__        String nodeId = getNodeId(exchange)__        String user = getUser(exchange)___        LoginCredentials credentials = null___        if (user != null) {_            credentials = LoginCredentials.builder().user(user).build()__        }_        ExecResponse execResponse = null___        if (credentials == null) {_            execResponse = computeService.runScriptOnNode(nodeId, script)__        } else {_            execResponse = computeService.runScriptOnNode(nodeId, script, RunScriptOptions.Builder.overrideLoginCredentials(credentials).runAsRoot(false))__        }__        if (execResponse == null) {_            throw new CamelExchangeException("Failed to receive response for run script operation on node: " + nodeId + " using script: " + script, exchange)__        }__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_ERROR, execResponse.getError())__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_EXIT_CODE, execResponse.getExitStatus())__        exchange.getOut().setBody(execResponse.getOutput())__    };runs,a,script,on,the,target,node;protected,void,run,script,on,node,exchange,exchange,throws,camel,exception,string,script,exchange,get,in,get,body,string,class,string,node,id,get,node,id,exchange,string,user,get,user,exchange,login,credentials,credentials,null,if,user,null,credentials,login,credentials,builder,user,user,build,exec,response,exec,response,null,if,credentials,null,exec,response,compute,service,run,script,on,node,node,id,script,else,exec,response,compute,service,run,script,on,node,node,id,script,run,script,options,builder,override,login,credentials,credentials,run,as,root,false,if,exec,response,null,throw,new,camel,exchange,exception,failed,to,receive,response,for,run,script,operation,on,node,node,id,using,script,script,exchange,exchange,set,property,jclouds,constants,exec,response,get,error,exchange,set,property,jclouds,constants,exec,response,get,exit,status,exchange,get,out,set,body,exec,response,get,output
JcloudsComputeProducer -> protected void runScriptOnNode(Exchange exchange) throws CamelException;1435498142;Runs a script on the target node.;protected void runScriptOnNode(Exchange exchange) throws CamelException {_        String script = exchange.getIn().getBody(String.class)__        String nodeId = getNodeId(exchange)__        String user = getUser(exchange)___        LoginCredentials credentials = null___        if (user != null) {_            credentials = LoginCredentials.builder().user(user).build()__        }_        ExecResponse execResponse = null___        if (credentials == null) {_            execResponse = computeService.runScriptOnNode(nodeId, script)__        } else {_            execResponse = computeService.runScriptOnNode(nodeId, script, RunScriptOptions.Builder.overrideLoginCredentials(credentials).runAsRoot(false))__        }__        if (execResponse == null) {_            throw new CamelExchangeException("Failed to receive response for run script operation on node: " + nodeId + " using script: " + script, exchange)__        }__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_ERROR, execResponse.getError())__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_EXIT_CODE, execResponse.getExitStatus())__        exchange.getOut().setBody(execResponse.getOutput())__    };runs,a,script,on,the,target,node;protected,void,run,script,on,node,exchange,exchange,throws,camel,exception,string,script,exchange,get,in,get,body,string,class,string,node,id,get,node,id,exchange,string,user,get,user,exchange,login,credentials,credentials,null,if,user,null,credentials,login,credentials,builder,user,user,build,exec,response,exec,response,null,if,credentials,null,exec,response,compute,service,run,script,on,node,node,id,script,else,exec,response,compute,service,run,script,on,node,node,id,script,run,script,options,builder,override,login,credentials,credentials,run,as,root,false,if,exec,response,null,throw,new,camel,exchange,exception,failed,to,receive,response,for,run,script,operation,on,node,node,id,using,script,script,exchange,exchange,set,property,jclouds,constants,exec,response,get,error,exchange,set,property,jclouds,constants,exec,response,get,exit,status,exchange,get,out,set,body,exec,response,get,output
JcloudsComputeProducer -> protected void runScriptOnNode(Exchange exchange) throws CamelException;1435500284;Runs a script on the target node.;protected void runScriptOnNode(Exchange exchange) throws CamelException {_        String script = exchange.getIn().getBody(String.class)__        String nodeId = getNodeId(exchange)__        String user = getUser(exchange)___        LoginCredentials credentials = null___        if (user != null) {_            credentials = LoginCredentials.builder().user(user).build()__        }_        ExecResponse execResponse = null___        if (credentials == null) {_            execResponse = computeService.runScriptOnNode(nodeId, script)__        } else {_            execResponse = computeService.runScriptOnNode(nodeId, script, RunScriptOptions.Builder.overrideLoginCredentials(credentials).runAsRoot(false))__        }__        if (execResponse == null) {_            throw new CamelExchangeException("Failed to receive response for run script operation on node: " + nodeId + " using script: " + script, exchange)__        }__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_ERROR, execResponse.getError())__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_EXIT_CODE, execResponse.getExitStatus())__        exchange.getOut().setBody(execResponse.getOutput())__    };runs,a,script,on,the,target,node;protected,void,run,script,on,node,exchange,exchange,throws,camel,exception,string,script,exchange,get,in,get,body,string,class,string,node,id,get,node,id,exchange,string,user,get,user,exchange,login,credentials,credentials,null,if,user,null,credentials,login,credentials,builder,user,user,build,exec,response,exec,response,null,if,credentials,null,exec,response,compute,service,run,script,on,node,node,id,script,else,exec,response,compute,service,run,script,on,node,node,id,script,run,script,options,builder,override,login,credentials,credentials,run,as,root,false,if,exec,response,null,throw,new,camel,exchange,exception,failed,to,receive,response,for,run,script,operation,on,node,node,id,using,script,script,exchange,exchange,set,property,jclouds,constants,exec,response,get,error,exchange,set,property,jclouds,constants,exec,response,get,exit,status,exchange,get,out,set,body,exec,response,get,output
JcloudsComputeProducer -> protected void runScriptOnNode(Exchange exchange) throws CamelException;1435764273;Runs a script on the target node.;protected void runScriptOnNode(Exchange exchange) throws CamelException {_        String script = exchange.getIn().getBody(String.class)__        String nodeId = getNodeId(exchange)__        String user = getUser(exchange)___        LoginCredentials credentials = null___        if (ObjectHelper.isNotEmpty(user)) {_            credentials = LoginCredentials.builder().user(user).build()__        }_        ExecResponse execResponse = null___        if (credentials == null) {_            execResponse = computeService.runScriptOnNode(nodeId, script)__        } else {_            execResponse = computeService.runScriptOnNode(nodeId, script, RunScriptOptions.Builder.overrideLoginCredentials(credentials).runAsRoot(false))__        }__        if (execResponse == null) {_            throw new CamelExchangeException("Failed to receive response for run script operation on node: " + nodeId + " using script: " + script, exchange)__        }__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_ERROR, execResponse.getError())__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_EXIT_CODE, execResponse.getExitStatus())__        exchange.getOut().setBody(execResponse.getOutput())__    };runs,a,script,on,the,target,node;protected,void,run,script,on,node,exchange,exchange,throws,camel,exception,string,script,exchange,get,in,get,body,string,class,string,node,id,get,node,id,exchange,string,user,get,user,exchange,login,credentials,credentials,null,if,object,helper,is,not,empty,user,credentials,login,credentials,builder,user,user,build,exec,response,exec,response,null,if,credentials,null,exec,response,compute,service,run,script,on,node,node,id,script,else,exec,response,compute,service,run,script,on,node,node,id,script,run,script,options,builder,override,login,credentials,credentials,run,as,root,false,if,exec,response,null,throw,new,camel,exchange,exception,failed,to,receive,response,for,run,script,operation,on,node,node,id,using,script,script,exchange,exchange,set,property,jclouds,constants,exec,response,get,error,exchange,set,property,jclouds,constants,exec,response,get,exit,status,exchange,get,out,set,body,exec,response,get,output
JcloudsComputeProducer -> protected void runScriptOnNode(Exchange exchange) throws CamelException;1435767436;Runs a script on the target node.;protected void runScriptOnNode(Exchange exchange) throws CamelException {_        String script = exchange.getIn().getBody(String.class)__        String nodeId = getNodeId(exchange)__        String user = getUser(exchange)___        LoginCredentials credentials = null___        if (ObjectHelper.isNotEmpty(user)) {_            credentials = LoginCredentials.builder().user(user).build()__        }_        ExecResponse execResponse = null___        if (credentials == null) {_            execResponse = computeService.runScriptOnNode(nodeId, script)__        } else {_            execResponse = computeService.runScriptOnNode(nodeId, script, RunScriptOptions.Builder.overrideLoginCredentials(credentials).runAsRoot(false))__        }__        if (execResponse == null) {_            throw new CamelExchangeException("Failed to receive response for run script operation on node: " + nodeId + " using script: " + script, exchange)__        }__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_ERROR, execResponse.getError())__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_EXIT_CODE, execResponse.getExitStatus())__        exchange.getOut().setBody(execResponse.getOutput())__    };runs,a,script,on,the,target,node;protected,void,run,script,on,node,exchange,exchange,throws,camel,exception,string,script,exchange,get,in,get,body,string,class,string,node,id,get,node,id,exchange,string,user,get,user,exchange,login,credentials,credentials,null,if,object,helper,is,not,empty,user,credentials,login,credentials,builder,user,user,build,exec,response,exec,response,null,if,credentials,null,exec,response,compute,service,run,script,on,node,node,id,script,else,exec,response,compute,service,run,script,on,node,node,id,script,run,script,options,builder,override,login,credentials,credentials,run,as,root,false,if,exec,response,null,throw,new,camel,exchange,exception,failed,to,receive,response,for,run,script,operation,on,node,node,id,using,script,script,exchange,exchange,set,property,jclouds,constants,exec,response,get,error,exchange,set,property,jclouds,constants,exec,response,get,exit,status,exchange,get,out,set,body,exec,response,get,output
JcloudsComputeProducer -> protected void runScriptOnNode(Exchange exchange) throws CamelException;1537290824;Runs a script on the target node.;protected void runScriptOnNode(Exchange exchange) throws CamelException {_        String script = exchange.getIn().getBody(String.class)__        String nodeId = getNodeId(exchange)__        String user = getUser(exchange)___        LoginCredentials credentials = null___        if (ObjectHelper.isNotEmpty(user)) {_            credentials = LoginCredentials.builder().user(user).build()__        }_        ExecResponse execResponse = null___        if (credentials == null) {_            execResponse = computeService.runScriptOnNode(nodeId, script)__        } else {_            execResponse = computeService.runScriptOnNode(nodeId, script, RunScriptOptions.Builder.overrideLoginCredentials(credentials).runAsRoot(false))__        }__        if (execResponse == null) {_            throw new CamelExchangeException("Failed to receive response for run script operation on node: " + nodeId + " using script: " + script, exchange)__        }__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_ERROR, execResponse.getError())__        exchange.setProperty(JcloudsConstants.RUN_SCRIPT_EXIT_CODE, execResponse.getExitStatus())__        exchange.getOut().setBody(execResponse.getOutput())__    };runs,a,script,on,the,target,node;protected,void,run,script,on,node,exchange,exchange,throws,camel,exception,string,script,exchange,get,in,get,body,string,class,string,node,id,get,node,id,exchange,string,user,get,user,exchange,login,credentials,credentials,null,if,object,helper,is,not,empty,user,credentials,login,credentials,builder,user,user,build,exec,response,exec,response,null,if,credentials,null,exec,response,compute,service,run,script,on,node,node,id,script,else,exec,response,compute,service,run,script,on,node,node,id,script,run,script,options,builder,override,login,credentials,credentials,run,as,root,false,if,exec,response,null,throw,new,camel,exchange,exception,failed,to,receive,response,for,run,script,operation,on,node,node,id,using,script,script,exchange,exchange,set,property,jclouds,constants,exec,response,get,error,exchange,set,property,jclouds,constants,exec,response,get,exit,status,exchange,get,out,set,body,exec,response,get,output
JcloudsComputeProducer -> public NodeMetadata.Status getNodeState(Exchange exchange);1373281324;Retrieves the node state from the URI or from the exchange headers. The header will take precedence over the URI.;public NodeMetadata.Status getNodeState(Exchange exchange) {_        NodeMetadata.Status nodeState = null__        String state = getEndpoint().getNodeState()__        if (state != null) {_            nodeState =  NodeMetadata.Status.valueOf(state)__        }__        if (exchange.getIn().getHeader(JcloudsConstants.NODE_STATE) != null) {_            Object stateHeader = exchange.getIn().getHeader(JcloudsConstants.NODE_STATE)__            if (stateHeader == null) {_                nodeState = null__            } else if (stateHeader instanceof  NodeMetadata.Status) {_                nodeState = (NodeMetadata.Status) stateHeader__            } else {_                nodeState =  NodeMetadata.Status.valueOf(String.valueOf(stateHeader))__            }_        }_        return nodeState__    };retrieves,the,node,state,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;public,node,metadata,status,get,node,state,exchange,exchange,node,metadata,status,node,state,null,string,state,get,endpoint,get,node,state,if,state,null,node,state,node,metadata,status,value,of,state,if,exchange,get,in,get,header,jclouds,constants,null,object,state,header,exchange,get,in,get,header,jclouds,constants,if,state,header,null,node,state,null,else,if,state,header,instanceof,node,metadata,status,node,state,node,metadata,status,state,header,else,node,state,node,metadata,status,value,of,string,value,of,state,header,return,node,state
JcloudsComputeProducer -> public NodeMetadata.Status getNodeState(Exchange exchange);1388443957;Retrieves the node state from the URI or from the exchange headers. The header will take precedence over the URI.;public NodeMetadata.Status getNodeState(Exchange exchange) {_        NodeMetadata.Status nodeState = null__        String state = getEndpoint().getNodeState()__        if (state != null) {_            nodeState =  NodeMetadata.Status.valueOf(state)__        }__        if (exchange.getIn().getHeader(JcloudsConstants.NODE_STATE) != null) {_            Object stateHeader = exchange.getIn().getHeader(JcloudsConstants.NODE_STATE)__            if (stateHeader == null) {_                nodeState = null__            } else if (stateHeader instanceof  NodeMetadata.Status) {_                nodeState = (NodeMetadata.Status) stateHeader__            } else {_                nodeState =  NodeMetadata.Status.valueOf(String.valueOf(stateHeader))__            }_        }_        return nodeState__    };retrieves,the,node,state,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;public,node,metadata,status,get,node,state,exchange,exchange,node,metadata,status,node,state,null,string,state,get,endpoint,get,node,state,if,state,null,node,state,node,metadata,status,value,of,state,if,exchange,get,in,get,header,jclouds,constants,null,object,state,header,exchange,get,in,get,header,jclouds,constants,if,state,header,null,node,state,null,else,if,state,header,instanceof,node,metadata,status,node,state,node,metadata,status,state,header,else,node,state,node,metadata,status,value,of,string,value,of,state,header,return,node,state
JcloudsComputeProducer -> public NodeMetadata.Status getNodeState(Exchange exchange);1435493075;Retrieves the node state from the URI or from the exchange headers. The header will take precedence over the URI.;public NodeMetadata.Status getNodeState(Exchange exchange) {_        NodeMetadata.Status nodeState = null__        String state = getEndpoint().getNodeState()__        if (state != null) {_            nodeState =  NodeMetadata.Status.valueOf(state)__        }__        if (exchange.getIn().getHeader(JcloudsConstants.NODE_STATE) != null) {_            Object stateHeader = exchange.getIn().getHeader(JcloudsConstants.NODE_STATE)__            if (stateHeader == null) {_                nodeState = null__            } else if (stateHeader instanceof  NodeMetadata.Status) {_                nodeState = (NodeMetadata.Status) stateHeader__            } else {_                nodeState =  NodeMetadata.Status.valueOf(String.valueOf(stateHeader))__            }_        }_        return nodeState__    };retrieves,the,node,state,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;public,node,metadata,status,get,node,state,exchange,exchange,node,metadata,status,node,state,null,string,state,get,endpoint,get,node,state,if,state,null,node,state,node,metadata,status,value,of,state,if,exchange,get,in,get,header,jclouds,constants,null,object,state,header,exchange,get,in,get,header,jclouds,constants,if,state,header,null,node,state,null,else,if,state,header,instanceof,node,metadata,status,node,state,node,metadata,status,state,header,else,node,state,node,metadata,status,value,of,string,value,of,state,header,return,node,state
JcloudsComputeProducer -> public NodeMetadata.Status getNodeState(Exchange exchange);1435496986;Retrieves the node state from the URI or from the exchange headers. The header will take precedence over the URI.;public NodeMetadata.Status getNodeState(Exchange exchange) {_        NodeMetadata.Status nodeState = null__        String state = getEndpoint().getNodeState()__        if (state != null) {_            nodeState =  NodeMetadata.Status.valueOf(state)__        }__        if (exchange.getIn().getHeader(JcloudsConstants.NODE_STATE) != null) {_            Object stateHeader = exchange.getIn().getHeader(JcloudsConstants.NODE_STATE)__            if (stateHeader == null) {_                nodeState = null__            } else if (stateHeader instanceof  NodeMetadata.Status) {_                nodeState = (NodeMetadata.Status) stateHeader__            } else {_                nodeState =  NodeMetadata.Status.valueOf(String.valueOf(stateHeader))__            }_        }_        return nodeState__    };retrieves,the,node,state,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;public,node,metadata,status,get,node,state,exchange,exchange,node,metadata,status,node,state,null,string,state,get,endpoint,get,node,state,if,state,null,node,state,node,metadata,status,value,of,state,if,exchange,get,in,get,header,jclouds,constants,null,object,state,header,exchange,get,in,get,header,jclouds,constants,if,state,header,null,node,state,null,else,if,state,header,instanceof,node,metadata,status,node,state,node,metadata,status,state,header,else,node,state,node,metadata,status,value,of,string,value,of,state,header,return,node,state
JcloudsComputeProducer -> public NodeMetadata.Status getNodeState(Exchange exchange);1435497250;Retrieves the node state from the URI or from the exchange headers. The header will take precedence over the URI.;public NodeMetadata.Status getNodeState(Exchange exchange) {_        NodeMetadata.Status nodeState = null__        String state = getEndpoint().getNodeState()__        if (state != null) {_            nodeState =  NodeMetadata.Status.valueOf(state)__        }__        if (exchange.getIn().getHeader(JcloudsConstants.NODE_STATE) != null) {_            Object stateHeader = exchange.getIn().getHeader(JcloudsConstants.NODE_STATE)__            if (stateHeader == null) {_                nodeState = null__            } else if (stateHeader instanceof  NodeMetadata.Status) {_                nodeState = (NodeMetadata.Status) stateHeader__            } else {_                nodeState =  NodeMetadata.Status.valueOf(String.valueOf(stateHeader))__            }_        }_        return nodeState__    };retrieves,the,node,state,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;public,node,metadata,status,get,node,state,exchange,exchange,node,metadata,status,node,state,null,string,state,get,endpoint,get,node,state,if,state,null,node,state,node,metadata,status,value,of,state,if,exchange,get,in,get,header,jclouds,constants,null,object,state,header,exchange,get,in,get,header,jclouds,constants,if,state,header,null,node,state,null,else,if,state,header,instanceof,node,metadata,status,node,state,node,metadata,status,state,header,else,node,state,node,metadata,status,value,of,string,value,of,state,header,return,node,state
JcloudsComputeProducer -> public NodeMetadata.Status getNodeState(Exchange exchange);1435498142;Retrieves the node state from the URI or from the exchange headers. The header will take precedence over the URI.;public NodeMetadata.Status getNodeState(Exchange exchange) {_        NodeMetadata.Status nodeState = null__        String state = getEndpoint().getNodeState()__        if (state != null) {_            nodeState =  NodeMetadata.Status.valueOf(state)__        }__        if (exchange.getIn().getHeader(JcloudsConstants.NODE_STATE) != null) {_            Object stateHeader = exchange.getIn().getHeader(JcloudsConstants.NODE_STATE)__            if (stateHeader == null) {_                nodeState = null__            } else if (stateHeader instanceof  NodeMetadata.Status) {_                nodeState = (NodeMetadata.Status) stateHeader__            } else {_                nodeState =  NodeMetadata.Status.valueOf(String.valueOf(stateHeader))__            }_        }_        return nodeState__    };retrieves,the,node,state,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;public,node,metadata,status,get,node,state,exchange,exchange,node,metadata,status,node,state,null,string,state,get,endpoint,get,node,state,if,state,null,node,state,node,metadata,status,value,of,state,if,exchange,get,in,get,header,jclouds,constants,null,object,state,header,exchange,get,in,get,header,jclouds,constants,if,state,header,null,node,state,null,else,if,state,header,instanceof,node,metadata,status,node,state,node,metadata,status,state,header,else,node,state,node,metadata,status,value,of,string,value,of,state,header,return,node,state
JcloudsComputeProducer -> public NodeMetadata.Status getNodeState(Exchange exchange);1435500284;Retrieves the node state from the URI or from the exchange headers. The header will take precedence over the URI.;public NodeMetadata.Status getNodeState(Exchange exchange) {_        NodeMetadata.Status nodeState = null__        String state = getEndpoint().getNodeState()__        if (state != null) {_            nodeState =  NodeMetadata.Status.valueOf(state)__        }__        if (exchange.getIn().getHeader(JcloudsConstants.NODE_STATE) != null) {_            Object stateHeader = exchange.getIn().getHeader(JcloudsConstants.NODE_STATE)__            if (stateHeader == null) {_                nodeState = null__            } else if (stateHeader instanceof  NodeMetadata.Status) {_                nodeState = (NodeMetadata.Status) stateHeader__            } else {_                nodeState =  NodeMetadata.Status.valueOf(String.valueOf(stateHeader))__            }_        }_        return nodeState__    };retrieves,the,node,state,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;public,node,metadata,status,get,node,state,exchange,exchange,node,metadata,status,node,state,null,string,state,get,endpoint,get,node,state,if,state,null,node,state,node,metadata,status,value,of,state,if,exchange,get,in,get,header,jclouds,constants,null,object,state,header,exchange,get,in,get,header,jclouds,constants,if,state,header,null,node,state,null,else,if,state,header,instanceof,node,metadata,status,node,state,node,metadata,status,state,header,else,node,state,node,metadata,status,value,of,string,value,of,state,header,return,node,state
JcloudsComputeProducer -> public NodeMetadata.Status getNodeState(Exchange exchange);1435764273;Retrieves the node state from the URI or from the exchange headers. The header will take precedence over the URI.;public NodeMetadata.Status getNodeState(Exchange exchange) {_        NodeMetadata.Status nodeState = null__        String state = getEndpoint().getNodeState()__        if (ObjectHelper.isNotEmpty(state)) {_            nodeState =  NodeMetadata.Status.valueOf(state)__        }__        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.NODE_STATE))) {_            Object stateHeader = exchange.getIn().getHeader(JcloudsConstants.NODE_STATE)__            if (stateHeader == null) {_                nodeState = null__            } else if (stateHeader instanceof  NodeMetadata.Status) {_                nodeState = (NodeMetadata.Status) stateHeader__            } else {_                nodeState =  NodeMetadata.Status.valueOf(String.valueOf(stateHeader))__            }_        }_        return nodeState__    };retrieves,the,node,state,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;public,node,metadata,status,get,node,state,exchange,exchange,node,metadata,status,node,state,null,string,state,get,endpoint,get,node,state,if,object,helper,is,not,empty,state,node,state,node,metadata,status,value,of,state,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,object,state,header,exchange,get,in,get,header,jclouds,constants,if,state,header,null,node,state,null,else,if,state,header,instanceof,node,metadata,status,node,state,node,metadata,status,state,header,else,node,state,node,metadata,status,value,of,string,value,of,state,header,return,node,state
JcloudsComputeProducer -> public NodeMetadata.Status getNodeState(Exchange exchange);1435767436;Retrieves the node state from the URI or from the exchange headers. The header will take precedence over the URI.;public NodeMetadata.Status getNodeState(Exchange exchange) {_        NodeMetadata.Status nodeState = null__        String state = getEndpoint().getNodeState()__        if (ObjectHelper.isNotEmpty(state)) {_            nodeState =  NodeMetadata.Status.valueOf(state)__        }__        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.NODE_STATE))) {_            Object stateHeader = exchange.getIn().getHeader(JcloudsConstants.NODE_STATE)__            if (stateHeader == null) {_                nodeState = null__            } else if (stateHeader instanceof  NodeMetadata.Status) {_                nodeState = (NodeMetadata.Status) stateHeader__            } else {_                nodeState =  NodeMetadata.Status.valueOf(String.valueOf(stateHeader))__            }_        }_        return nodeState__    };retrieves,the,node,state,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;public,node,metadata,status,get,node,state,exchange,exchange,node,metadata,status,node,state,null,string,state,get,endpoint,get,node,state,if,object,helper,is,not,empty,state,node,state,node,metadata,status,value,of,state,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,object,state,header,exchange,get,in,get,header,jclouds,constants,if,state,header,null,node,state,null,else,if,state,header,instanceof,node,metadata,status,node,state,node,metadata,status,state,header,else,node,state,node,metadata,status,value,of,string,value,of,state,header,return,node,state
JcloudsComputeProducer -> public NodeMetadata.Status getNodeState(Exchange exchange);1537290824;Retrieves the node state from the URI or from the exchange headers. The header will take precedence over the URI.;public NodeMetadata.Status getNodeState(Exchange exchange) {_        NodeMetadata.Status nodeState = null__        String state = getEndpoint().getNodeState()__        if (ObjectHelper.isNotEmpty(state)) {_            nodeState =  NodeMetadata.Status.valueOf(state)__        }__        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(JcloudsConstants.NODE_STATE))) {_            Object stateHeader = exchange.getIn().getHeader(JcloudsConstants.NODE_STATE)__            if (stateHeader == null) {_                nodeState = null__            } else if (stateHeader instanceof  NodeMetadata.Status) {_                nodeState = (NodeMetadata.Status) stateHeader__            } else {_                nodeState =  NodeMetadata.Status.valueOf(String.valueOf(stateHeader))__            }_        }_        return nodeState__    };retrieves,the,node,state,from,the,uri,or,from,the,exchange,headers,the,header,will,take,precedence,over,the,uri;public,node,metadata,status,get,node,state,exchange,exchange,node,metadata,status,node,state,null,string,state,get,endpoint,get,node,state,if,object,helper,is,not,empty,state,node,state,node,metadata,status,value,of,state,if,object,helper,is,not,empty,exchange,get,in,get,header,jclouds,constants,object,state,header,exchange,get,in,get,header,jclouds,constants,if,state,header,null,node,state,null,else,if,state,header,instanceof,node,metadata,status,node,state,node,metadata,status,state,header,else,node,state,node,metadata,status,value,of,string,value,of,state,header,return,node,state
JcloudsComputeProducer -> protected void listHardware(Exchange exchange) throws CamelException;1317243118;Sets the available hardware profiles to the out message.__@param exchange_@throws CamelException;protected void listHardware(Exchange exchange) throws CamelException {_        Set<? extends Hardware> hardwareProfiles = computeService.listHardwareProfiles()__        exchange.getOut().setBody(hardwareProfiles)__    };sets,the,available,hardware,profiles,to,the,out,message,param,exchange,throws,camel,exception;protected,void,list,hardware,exchange,exchange,throws,camel,exception,set,extends,hardware,hardware,profiles,compute,service,list,hardware,profiles,exchange,get,out,set,body,hardware,profiles
JcloudsComputeProducer -> protected void listHardware(Exchange exchange) throws CamelException;1320504254;Sets the available hardware profiles to the out message.__@param exchange_@throws CamelException;protected void listHardware(Exchange exchange) throws CamelException {_        Set<? extends Hardware> hardwareProfiles = computeService.listHardwareProfiles()__        exchange.getOut().setBody(hardwareProfiles)__    };sets,the,available,hardware,profiles,to,the,out,message,param,exchange,throws,camel,exception;protected,void,list,hardware,exchange,exchange,throws,camel,exception,set,extends,hardware,hardware,profiles,compute,service,list,hardware,profiles,exchange,get,out,set,body,hardware,profiles
JcloudsComputeProducer -> protected void listHardware(Exchange exchange) throws CamelException;1326907405;Sets the available hardware profiles to the out message.__@param exchange_@throws CamelException;protected void listHardware(Exchange exchange) throws CamelException {_        Set<? extends Hardware> hardwareProfiles = computeService.listHardwareProfiles()__        exchange.getOut().setBody(hardwareProfiles)__    };sets,the,available,hardware,profiles,to,the,out,message,param,exchange,throws,camel,exception;protected,void,list,hardware,exchange,exchange,throws,camel,exception,set,extends,hardware,hardware,profiles,compute,service,list,hardware,profiles,exchange,get,out,set,body,hardware,profiles
JcloudsComputeProducer -> protected void listHardware(Exchange exchange) throws CamelException;1327089055;Sets the available hardware profiles to the out message.__@param exchange_@throws CamelException;protected void listHardware(Exchange exchange) throws CamelException {_        Set<? extends Hardware> hardwareProfiles = computeService.listHardwareProfiles()__        exchange.getOut().setBody(hardwareProfiles)__    };sets,the,available,hardware,profiles,to,the,out,message,param,exchange,throws,camel,exception;protected,void,list,hardware,exchange,exchange,throws,camel,exception,set,extends,hardware,hardware,profiles,compute,service,list,hardware,profiles,exchange,get,out,set,body,hardware,profiles
JcloudsComputeProducer -> protected void listHardware(Exchange exchange) throws CamelException;1333145181;Sets the available hardware profiles to the out message.__@param exchange_@throws CamelException;protected void listHardware(Exchange exchange) throws CamelException {_        Set<? extends Hardware> hardwareProfiles = computeService.listHardwareProfiles()__        exchange.getOut().setBody(hardwareProfiles)__    };sets,the,available,hardware,profiles,to,the,out,message,param,exchange,throws,camel,exception;protected,void,list,hardware,exchange,exchange,throws,camel,exception,set,extends,hardware,hardware,profiles,compute,service,list,hardware,profiles,exchange,get,out,set,body,hardware,profiles
JcloudsComputeProducer -> public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange);1320504254;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.__@param exchange_@return;public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange) {_        final String nodeId = getNodeId(exchange)__        final String imageId = getImageId(exchange)__        final String group = getGroup(exchange)__        final NodeState queryState = getNodeState(exchange)___        Predicate<ComputeMetadata> predicate = new Predicate<ComputeMetadata>() {_            public boolean apply(ComputeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }__                _                if (metadata instanceof NodeMetadataImpl) {_                    Predicate<NodeMetadata> nodeMetadataPredicate = getNodePredicate(exchange)__                    if (!nodeMetadataPredicate.apply((NodeMetadataImpl) metadata)) {_                        return false__                    }_                }_                return true__            }_        }___        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering,param,exchange,return;public,predicate,compute,metadata,get,compute,predicate,final,exchange,exchange,final,string,node,id,get,node,id,exchange,final,string,image,id,get,image,id,exchange,final,string,group,get,group,exchange,final,node,state,query,state,get,node,state,exchange,predicate,compute,metadata,predicate,new,predicate,compute,metadata,public,boolean,apply,compute,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,metadata,instanceof,node,metadata,impl,predicate,node,metadata,node,metadata,predicate,get,node,predicate,exchange,if,node,metadata,predicate,apply,node,metadata,impl,metadata,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange);1326907405;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.__@param exchange_@return;public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange) {_        final String nodeId = getNodeId(exchange)___        Predicate<ComputeMetadata> predicate = new Predicate<ComputeMetadata>() {_            public boolean apply(ComputeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }__                _                if (metadata instanceof NodeMetadataImpl) {_                    Predicate<NodeMetadata> nodeMetadataPredicate = getNodePredicate(exchange)__                    if (!nodeMetadataPredicate.apply((NodeMetadataImpl) metadata)) {_                        return false__                    }_                }_                return true__            }_        }___        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering,param,exchange,return;public,predicate,compute,metadata,get,compute,predicate,final,exchange,exchange,final,string,node,id,get,node,id,exchange,predicate,compute,metadata,predicate,new,predicate,compute,metadata,public,boolean,apply,compute,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,metadata,instanceof,node,metadata,impl,predicate,node,metadata,node,metadata,predicate,get,node,predicate,exchange,if,node,metadata,predicate,apply,node,metadata,impl,metadata,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange);1327089055;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.__@param exchange_@return;public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange) {_        final String nodeId = getNodeId(exchange)___        Predicate<ComputeMetadata> predicate = new Predicate<ComputeMetadata>() {_            public boolean apply(ComputeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }__                _                if (metadata instanceof NodeMetadataImpl) {_                    Predicate<NodeMetadata> nodeMetadataPredicate = getNodePredicate(exchange)__                    if (!nodeMetadataPredicate.apply((NodeMetadataImpl) metadata)) {_                        return false__                    }_                }_                return true__            }_        }___        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering,param,exchange,return;public,predicate,compute,metadata,get,compute,predicate,final,exchange,exchange,final,string,node,id,get,node,id,exchange,predicate,compute,metadata,predicate,new,predicate,compute,metadata,public,boolean,apply,compute,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,metadata,instanceof,node,metadata,impl,predicate,node,metadata,node,metadata,predicate,get,node,predicate,exchange,if,node,metadata,predicate,apply,node,metadata,impl,metadata,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange);1333145181;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.__@param exchange_@return;public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange) {_        final String nodeId = getNodeId(exchange)___        Predicate<ComputeMetadata> predicate = new Predicate<ComputeMetadata>() {_            public boolean apply(ComputeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }__                _                if (metadata instanceof NodeMetadataImpl) {_                    Predicate<NodeMetadata> nodeMetadataPredicate = getNodePredicate(exchange)__                    if (!nodeMetadataPredicate.apply((NodeMetadataImpl) metadata)) {_                        return false__                    }_                }_                return true__            }_        }___        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering,param,exchange,return;public,predicate,compute,metadata,get,compute,predicate,final,exchange,exchange,final,string,node,id,get,node,id,exchange,predicate,compute,metadata,predicate,new,predicate,compute,metadata,public,boolean,apply,compute,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,metadata,instanceof,node,metadata,impl,predicate,node,metadata,node,metadata,predicate,get,node,predicate,exchange,if,node,metadata,predicate,apply,node,metadata,impl,metadata,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange);1353141176;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.;public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange) {_        final String nodeId = getNodeId(exchange)___        Predicate<ComputeMetadata> predicate = new Predicate<ComputeMetadata>() {_            public boolean apply(ComputeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }__                _                if (metadata instanceof NodeMetadataImpl) {_                    Predicate<NodeMetadata> nodeMetadataPredicate = getNodePredicate(exchange)__                    if (!nodeMetadataPredicate.apply((NodeMetadataImpl) metadata)) {_                        return false__                    }_                }_                return true__            }_        }___        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering;public,predicate,compute,metadata,get,compute,predicate,final,exchange,exchange,final,string,node,id,get,node,id,exchange,predicate,compute,metadata,predicate,new,predicate,compute,metadata,public,boolean,apply,compute,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,metadata,instanceof,node,metadata,impl,predicate,node,metadata,node,metadata,predicate,get,node,predicate,exchange,if,node,metadata,predicate,apply,node,metadata,impl,metadata,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange);1373281324;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.;public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange) {_        final String nodeId = getNodeId(exchange)___        Predicate<ComputeMetadata> predicate = new Predicate<ComputeMetadata>() {_            public boolean apply(ComputeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }__                _                if (metadata instanceof NodeMetadataImpl) {_                    Predicate<NodeMetadata> nodeMetadataPredicate = getNodePredicate(exchange)__                    if (!nodeMetadataPredicate.apply((NodeMetadataImpl) metadata)) {_                        return false__                    }_                }_                return true__            }_        }___        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering;public,predicate,compute,metadata,get,compute,predicate,final,exchange,exchange,final,string,node,id,get,node,id,exchange,predicate,compute,metadata,predicate,new,predicate,compute,metadata,public,boolean,apply,compute,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,metadata,instanceof,node,metadata,impl,predicate,node,metadata,node,metadata,predicate,get,node,predicate,exchange,if,node,metadata,predicate,apply,node,metadata,impl,metadata,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange);1388443957;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.;public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange) {_        final String nodeId = getNodeId(exchange)___        Predicate<ComputeMetadata> predicate = new Predicate<ComputeMetadata>() {_            public boolean apply(ComputeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }__                _                if (metadata instanceof NodeMetadataImpl) {_                    Predicate<NodeMetadata> nodeMetadataPredicate = getNodePredicate(exchange)__                    if (!nodeMetadataPredicate.apply((NodeMetadataImpl) metadata)) {_                        return false__                    }_                }_                return true__            }_        }___        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering;public,predicate,compute,metadata,get,compute,predicate,final,exchange,exchange,final,string,node,id,get,node,id,exchange,predicate,compute,metadata,predicate,new,predicate,compute,metadata,public,boolean,apply,compute,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,metadata,instanceof,node,metadata,impl,predicate,node,metadata,node,metadata,predicate,get,node,predicate,exchange,if,node,metadata,predicate,apply,node,metadata,impl,metadata,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange);1435493075;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.;public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange) {_        final String nodeId = getNodeId(exchange)___        Predicate<ComputeMetadata> predicate = new Predicate<ComputeMetadata>() {_            public boolean apply(ComputeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }__                _                if (metadata instanceof NodeMetadataImpl) {_                    Predicate<NodeMetadata> nodeMetadataPredicate = getNodePredicate(exchange)__                    if (!nodeMetadataPredicate.apply((NodeMetadataImpl) metadata)) {_                        return false__                    }_                }_                return true__            }_        }___        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering;public,predicate,compute,metadata,get,compute,predicate,final,exchange,exchange,final,string,node,id,get,node,id,exchange,predicate,compute,metadata,predicate,new,predicate,compute,metadata,public,boolean,apply,compute,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,metadata,instanceof,node,metadata,impl,predicate,node,metadata,node,metadata,predicate,get,node,predicate,exchange,if,node,metadata,predicate,apply,node,metadata,impl,metadata,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange);1435496986;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.;public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange) {_        final String nodeId = getNodeId(exchange)___        Predicate<ComputeMetadata> predicate = new Predicate<ComputeMetadata>() {_            public boolean apply(ComputeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }__                _                if (metadata instanceof NodeMetadataImpl) {_                    Predicate<NodeMetadata> nodeMetadataPredicate = getNodePredicate(exchange)__                    if (!nodeMetadataPredicate.apply((NodeMetadataImpl) metadata)) {_                        return false__                    }_                }_                return true__            }_        }___        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering;public,predicate,compute,metadata,get,compute,predicate,final,exchange,exchange,final,string,node,id,get,node,id,exchange,predicate,compute,metadata,predicate,new,predicate,compute,metadata,public,boolean,apply,compute,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,metadata,instanceof,node,metadata,impl,predicate,node,metadata,node,metadata,predicate,get,node,predicate,exchange,if,node,metadata,predicate,apply,node,metadata,impl,metadata,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange);1435497250;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.;public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange) {_        final String nodeId = getNodeId(exchange)___        Predicate<ComputeMetadata> predicate = new Predicate<ComputeMetadata>() {_            public boolean apply(ComputeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }__                _                if (metadata instanceof NodeMetadataImpl) {_                    Predicate<NodeMetadata> nodeMetadataPredicate = getNodePredicate(exchange)__                    if (!nodeMetadataPredicate.apply((NodeMetadataImpl) metadata)) {_                        return false__                    }_                }_                return true__            }_        }___        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering;public,predicate,compute,metadata,get,compute,predicate,final,exchange,exchange,final,string,node,id,get,node,id,exchange,predicate,compute,metadata,predicate,new,predicate,compute,metadata,public,boolean,apply,compute,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,metadata,instanceof,node,metadata,impl,predicate,node,metadata,node,metadata,predicate,get,node,predicate,exchange,if,node,metadata,predicate,apply,node,metadata,impl,metadata,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange);1435498142;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.;public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange) {_        final String nodeId = getNodeId(exchange)___        Predicate<ComputeMetadata> predicate = new Predicate<ComputeMetadata>() {_            public boolean apply(ComputeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }__                _                if (metadata instanceof NodeMetadataImpl) {_                    Predicate<NodeMetadata> nodeMetadataPredicate = getNodePredicate(exchange)__                    if (!nodeMetadataPredicate.apply((NodeMetadataImpl) metadata)) {_                        return false__                    }_                }_                return true__            }_        }___        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering;public,predicate,compute,metadata,get,compute,predicate,final,exchange,exchange,final,string,node,id,get,node,id,exchange,predicate,compute,metadata,predicate,new,predicate,compute,metadata,public,boolean,apply,compute,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,metadata,instanceof,node,metadata,impl,predicate,node,metadata,node,metadata,predicate,get,node,predicate,exchange,if,node,metadata,predicate,apply,node,metadata,impl,metadata,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange);1435500284;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.;public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange) {_        final String nodeId = getNodeId(exchange)___        Predicate<ComputeMetadata> predicate = new Predicate<ComputeMetadata>() {_            public boolean apply(ComputeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }__                _                if (metadata instanceof NodeMetadataImpl) {_                    Predicate<NodeMetadata> nodeMetadataPredicate = getNodePredicate(exchange)__                    if (!nodeMetadataPredicate.apply((NodeMetadataImpl) metadata)) {_                        return false__                    }_                }_                return true__            }_        }___        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering;public,predicate,compute,metadata,get,compute,predicate,final,exchange,exchange,final,string,node,id,get,node,id,exchange,predicate,compute,metadata,predicate,new,predicate,compute,metadata,public,boolean,apply,compute,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,metadata,instanceof,node,metadata,impl,predicate,node,metadata,node,metadata,predicate,get,node,predicate,exchange,if,node,metadata,predicate,apply,node,metadata,impl,metadata,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange);1435764273;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.;public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange) {_        final String nodeId = getNodeId(exchange)___        Predicate<ComputeMetadata> predicate = new Predicate<ComputeMetadata>() {_            public boolean apply(ComputeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }__                _                if (metadata instanceof NodeMetadataImpl) {_                    Predicate<NodeMetadata> nodeMetadataPredicate = getNodePredicate(exchange)__                    if (!nodeMetadataPredicate.apply((NodeMetadataImpl) metadata)) {_                        return false__                    }_                }_                return true__            }_        }___        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering;public,predicate,compute,metadata,get,compute,predicate,final,exchange,exchange,final,string,node,id,get,node,id,exchange,predicate,compute,metadata,predicate,new,predicate,compute,metadata,public,boolean,apply,compute,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,metadata,instanceof,node,metadata,impl,predicate,node,metadata,node,metadata,predicate,get,node,predicate,exchange,if,node,metadata,predicate,apply,node,metadata,impl,metadata,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange);1435767436;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.;public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange) {_        final String nodeId = getNodeId(exchange)___        Predicate<ComputeMetadata> predicate = new Predicate<ComputeMetadata>() {_            public boolean apply(ComputeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }__                _                if (metadata instanceof NodeMetadataImpl) {_                    Predicate<NodeMetadata> nodeMetadataPredicate = getNodePredicate(exchange)__                    if (!nodeMetadataPredicate.apply((NodeMetadataImpl) metadata)) {_                        return false__                    }_                }_                return true__            }_        }___        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering;public,predicate,compute,metadata,get,compute,predicate,final,exchange,exchange,final,string,node,id,get,node,id,exchange,predicate,compute,metadata,predicate,new,predicate,compute,metadata,public,boolean,apply,compute,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,metadata,instanceof,node,metadata,impl,predicate,node,metadata,node,metadata,predicate,get,node,predicate,exchange,if,node,metadata,predicate,apply,node,metadata,impl,metadata,return,false,return,true,return,predicate
JcloudsComputeProducer -> public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange);1537290824;Returns the required {@ComputeMetadata} {@link Predicate} for the Exhcnage._The predicate can be used for filtering.;public Predicate<ComputeMetadata> getComputePredicate(final Exchange exchange) {_        final String nodeId = getNodeId(exchange)___        Predicate<ComputeMetadata> predicate = new Predicate<ComputeMetadata>() {_            public boolean apply(ComputeMetadata metadata) {_                if (nodeId != null && !nodeId.equals(metadata.getId())) {_                    return false__                }__                _                if (metadata instanceof NodeMetadataImpl) {_                    Predicate<NodeMetadata> nodeMetadataPredicate = getNodePredicate(exchange)__                    if (!nodeMetadataPredicate.apply((NodeMetadataImpl) metadata)) {_                        return false__                    }_                }_                return true__            }_        }___        return predicate__    };returns,the,required,compute,metadata,link,predicate,for,the,exhcnage,the,predicate,can,be,used,for,filtering;public,predicate,compute,metadata,get,compute,predicate,final,exchange,exchange,final,string,node,id,get,node,id,exchange,predicate,compute,metadata,predicate,new,predicate,compute,metadata,public,boolean,apply,compute,metadata,metadata,if,node,id,null,node,id,equals,metadata,get,id,return,false,if,metadata,instanceof,node,metadata,impl,predicate,node,metadata,node,metadata,predicate,get,node,predicate,exchange,if,node,metadata,predicate,apply,node,metadata,impl,metadata,return,false,return,true,return,predicate
JcloudsComputeProducer -> protected void listImages(Exchange exchange);1353141176;Sets the available images to the out message.;protected void listImages(Exchange exchange) {_        Set<? extends Image> images = computeService.listImages()__        exchange.getOut().setBody(images)__    };sets,the,available,images,to,the,out,message;protected,void,list,images,exchange,exchange,set,extends,image,images,compute,service,list,images,exchange,get,out,set,body,images
JcloudsComputeProducer -> protected void listImages(Exchange exchange);1373281324;Sets the available images to the out message.;protected void listImages(Exchange exchange) {_        Set<? extends Image> images = computeService.listImages()__        exchange.getOut().setBody(images)__    };sets,the,available,images,to,the,out,message;protected,void,list,images,exchange,exchange,set,extends,image,images,compute,service,list,images,exchange,get,out,set,body,images
JcloudsComputeProducer -> protected void listImages(Exchange exchange);1388443957;Sets the available images to the out message.;protected void listImages(Exchange exchange) {_        Set<? extends Image> images = computeService.listImages()__        exchange.getOut().setBody(images)__    };sets,the,available,images,to,the,out,message;protected,void,list,images,exchange,exchange,set,extends,image,images,compute,service,list,images,exchange,get,out,set,body,images
JcloudsComputeProducer -> protected void listImages(Exchange exchange);1435493075;Sets the available images to the out message.;protected void listImages(Exchange exchange) {_        Set<? extends Image> images = computeService.listImages()__        exchange.getOut().setBody(images)__    };sets,the,available,images,to,the,out,message;protected,void,list,images,exchange,exchange,set,extends,image,images,compute,service,list,images,exchange,get,out,set,body,images
JcloudsComputeProducer -> protected void listImages(Exchange exchange);1435496986;Sets the available images to the out message.;protected void listImages(Exchange exchange) {_        Set<? extends Image> images = computeService.listImages()__        exchange.getOut().setBody(images)__    };sets,the,available,images,to,the,out,message;protected,void,list,images,exchange,exchange,set,extends,image,images,compute,service,list,images,exchange,get,out,set,body,images
JcloudsComputeProducer -> protected void listImages(Exchange exchange);1435497250;Sets the available images to the out message.;protected void listImages(Exchange exchange) {_        Set<? extends Image> images = computeService.listImages()__        exchange.getOut().setBody(images)__    };sets,the,available,images,to,the,out,message;protected,void,list,images,exchange,exchange,set,extends,image,images,compute,service,list,images,exchange,get,out,set,body,images
JcloudsComputeProducer -> protected void listImages(Exchange exchange);1435498142;Sets the available images to the out message.;protected void listImages(Exchange exchange) {_        Set<? extends Image> images = computeService.listImages()__        exchange.getOut().setBody(images)__    };sets,the,available,images,to,the,out,message;protected,void,list,images,exchange,exchange,set,extends,image,images,compute,service,list,images,exchange,get,out,set,body,images
JcloudsComputeProducer -> protected void listImages(Exchange exchange);1435500284;Sets the available images to the out message.;protected void listImages(Exchange exchange) {_        Set<? extends Image> images = computeService.listImages()__        exchange.getOut().setBody(images)__    };sets,the,available,images,to,the,out,message;protected,void,list,images,exchange,exchange,set,extends,image,images,compute,service,list,images,exchange,get,out,set,body,images
JcloudsComputeProducer -> protected void listImages(Exchange exchange);1435764273;Sets the available images to the out message.;protected void listImages(Exchange exchange) {_        Set<? extends Image> images = computeService.listImages()__        exchange.getOut().setBody(images)__    };sets,the,available,images,to,the,out,message;protected,void,list,images,exchange,exchange,set,extends,image,images,compute,service,list,images,exchange,get,out,set,body,images
JcloudsComputeProducer -> protected void listImages(Exchange exchange);1435767436;Sets the available images to the out message.;protected void listImages(Exchange exchange) {_        Set<? extends Image> images = computeService.listImages()__        exchange.getOut().setBody(images)__    };sets,the,available,images,to,the,out,message;protected,void,list,images,exchange,exchange,set,extends,image,images,compute,service,list,images,exchange,get,out,set,body,images
JcloudsComputeProducer -> protected void listImages(Exchange exchange);1537290824;Sets the available images to the out message.;protected void listImages(Exchange exchange) {_        Set<? extends Image> images = computeService.listImages()__        exchange.getOut().setBody(images)__    };sets,the,available,images,to,the,out,message;protected,void,list,images,exchange,exchange,set,extends,image,images,compute,service,list,images,exchange,get,out,set,body,images
