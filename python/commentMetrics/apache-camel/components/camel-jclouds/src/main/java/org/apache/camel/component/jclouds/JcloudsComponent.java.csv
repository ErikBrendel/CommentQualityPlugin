# id;timestamp;commentText;codeText;commentWords;codeWords
JcloudsComponent -> public void setBlobStores(List<BlobStore> blobStores);1431079073;To use the given BlobStore which must be configured when using blobstore.;public void setBlobStores(List<BlobStore> blobStores) {_        this.blobStores = blobStores__    };to,use,the,given,blob,store,which,must,be,configured,when,using,blobstore;public,void,set,blob,stores,list,blob,store,blob,stores,this,blob,stores,blob,stores
JcloudsComponent -> public void setBlobStores(List<BlobStore> blobStores);1540108158;To use the given BlobStore which must be configured when using blobstore.;public void setBlobStores(List<BlobStore> blobStores) {_        this.blobStores = blobStores__    };to,use,the,given,blob,store,which,must,be,configured,when,using,blobstore;public,void,set,blob,stores,list,blob,store,blob,stores,this,blob,stores,blob,stores
JcloudsComponent -> public void setBlobStores(List<BlobStore> blobStores);1540108163;To use the given BlobStore which must be configured when using blobstore.;public void setBlobStores(List<BlobStore> blobStores) {_        this.blobStores = blobStores__    };to,use,the,given,blob,store,which,must,be,configured,when,using,blobstore;public,void,set,blob,stores,list,blob,store,blob,stores,this,blob,stores,blob,stores
JcloudsComponent -> public void setBlobStores(List<BlobStore> blobStores);1547241305;To use the given BlobStore which must be configured when using blobstore.;public void setBlobStores(List<BlobStore> blobStores) {_        this.blobStores = blobStores__    };to,use,the,given,blob,store,which,must,be,configured,when,using,blobstore;public,void,set,blob,stores,list,blob,store,blob,stores,this,blob,stores,blob,stores
JcloudsComponent -> protected BlobStore getBlobStore(String predicate) throws Exception;1351265468;Returns the {@link BlobStore} that matches the given providerOrApi._@param predicate The blobstore context name, provider or api._@return The matching {@link BlobStore};protected BlobStore getBlobStore(String predicate) throws Exception {_        if (blobStores != null && !blobStores.isEmpty()) {__            _            if (isNameSupportedByContext()) {_                for (BlobStore blobStore : blobStores) {_                    if (blobStore.getContext().unwrap().getName().equals(predicate)) {_                        return blobStore__                    }_                }_            }__            for (BlobStore blobStore : blobStores) {_                if (blobStore.getContext().unwrap().getId().equals(predicate)) {_                    return blobStore__                }_            }_            throw new Exception(String.format("No blobstore found for:%s", predicate))__        } else {_            throw new Exception("No blobstore available.")__        }_    };returns,the,link,blob,store,that,matches,the,given,provider,or,api,param,predicate,the,blobstore,context,name,provider,or,api,return,the,matching,link,blob,store;protected,blob,store,get,blob,store,string,predicate,throws,exception,if,blob,stores,null,blob,stores,is,empty,if,is,name,supported,by,context,for,blob,store,blob,store,blob,stores,if,blob,store,get,context,unwrap,get,name,equals,predicate,return,blob,store,for,blob,store,blob,store,blob,stores,if,blob,store,get,context,unwrap,get,id,equals,predicate,return,blob,store,throw,new,exception,string,format,no,blobstore,found,for,s,predicate,else,throw,new,exception,no,blobstore,available
JcloudsComponent -> protected BlobStore getBlobStore(String predicate) throws Exception;1351660130;Returns the {@link BlobStore} that matches the given providerOrApi._@param predicate The blobstore context name, provider or api._@return The matching {@link BlobStore};protected BlobStore getBlobStore(String predicate) throws Exception {_        if (blobStores != null && !blobStores.isEmpty()) {__            _            if (isNameSupportedByContext()) {_                for (BlobStore blobStore : blobStores) {_                    if (blobStore.getContext().unwrap().getName().equals(predicate)) {_                        return blobStore__                    }_                }_            }__            for (BlobStore blobStore : blobStores) {_                if (blobStore.getContext().unwrap().getId().equals(predicate)) {_                    return blobStore__                }_            }_            throw new Exception(String.format("No blobstore found for:%s", predicate))__        } else {_            throw new Exception("No blobstore available.")__        }_    };returns,the,link,blob,store,that,matches,the,given,provider,or,api,param,predicate,the,blobstore,context,name,provider,or,api,return,the,matching,link,blob,store;protected,blob,store,get,blob,store,string,predicate,throws,exception,if,blob,stores,null,blob,stores,is,empty,if,is,name,supported,by,context,for,blob,store,blob,store,blob,stores,if,blob,store,get,context,unwrap,get,name,equals,predicate,return,blob,store,for,blob,store,blob,store,blob,stores,if,blob,store,get,context,unwrap,get,id,equals,predicate,return,blob,store,throw,new,exception,string,format,no,blobstore,found,for,s,predicate,else,throw,new,exception,no,blobstore,available
JcloudsComponent -> protected ComputeService getComputeService(String predicate) throws IllegalArgumentException;1353141176;Returns the {@link ComputeService} that matches the given predicate._@param predicate The compute context name, provider or api._@return The matching {@link ComputeService};protected ComputeService getComputeService(String predicate) throws IllegalArgumentException {__        if (computeServices != null && !computeServices.isEmpty()) {_            _            if (isNameSupportedByContext()) {_                for (ComputeService computeService : computeServices) {_                    if (computeService.getContext().unwrap().getName().equals(predicate)) {_                        return computeService__                    }_                }_            }__            for (ComputeService computeService : computeServices) {_                if (computeService.getContext().unwrap().getId().equals(predicate)) {_                    return computeService__                }_            }_            throw new IllegalArgumentException(String.format("No compute service found for :%s", predicate))__        } else {_            throw new IllegalArgumentException("No compute service available.")__        }_    };returns,the,link,compute,service,that,matches,the,given,predicate,param,predicate,the,compute,context,name,provider,or,api,return,the,matching,link,compute,service;protected,compute,service,get,compute,service,string,predicate,throws,illegal,argument,exception,if,compute,services,null,compute,services,is,empty,if,is,name,supported,by,context,for,compute,service,compute,service,compute,services,if,compute,service,get,context,unwrap,get,name,equals,predicate,return,compute,service,for,compute,service,compute,service,compute,services,if,compute,service,get,context,unwrap,get,id,equals,predicate,return,compute,service,throw,new,illegal,argument,exception,string,format,no,compute,service,found,for,s,predicate,else,throw,new,illegal,argument,exception,no,compute,service,available
JcloudsComponent -> protected ComputeService getComputeService(String predicate) throws IllegalArgumentException;1420449485;Returns the {@link ComputeService} that matches the given predicate._@param predicate The compute context name, provider or api._@return The matching {@link ComputeService};protected ComputeService getComputeService(String predicate) throws IllegalArgumentException {_        if (computeServices != null && !computeServices.isEmpty()) {_            _            if (isNameSupportedByContext()) {_                for (ComputeService computeService : computeServices) {_                    if (computeService.getContext().unwrap().getName().equals(predicate)) {_                        return computeService__                    }_                }_            }__            for (ComputeService computeService : computeServices) {_                if (computeService.getContext().unwrap().getId().equals(predicate)) {_                    return computeService__                }_            }_            throw new IllegalArgumentException(String.format("No compute service found for :%s", predicate))__        } else {_            throw new IllegalArgumentException("No compute service available.")__        }_    };returns,the,link,compute,service,that,matches,the,given,predicate,param,predicate,the,compute,context,name,provider,or,api,return,the,matching,link,compute,service;protected,compute,service,get,compute,service,string,predicate,throws,illegal,argument,exception,if,compute,services,null,compute,services,is,empty,if,is,name,supported,by,context,for,compute,service,compute,service,compute,services,if,compute,service,get,context,unwrap,get,name,equals,predicate,return,compute,service,for,compute,service,compute,service,compute,services,if,compute,service,get,context,unwrap,get,id,equals,predicate,return,compute,service,throw,new,illegal,argument,exception,string,format,no,compute,service,found,for,s,predicate,else,throw,new,illegal,argument,exception,no,compute,service,available
JcloudsComponent -> protected ComputeService getComputeService(String predicate) throws IllegalArgumentException;1420449849;Returns the {@link ComputeService} that matches the given predicate._@param predicate The compute context name, provider or api._@return The matching {@link ComputeService};protected ComputeService getComputeService(String predicate) throws IllegalArgumentException {_        if (computeServices != null && !computeServices.isEmpty()) {_            _            if (isNameSupportedByContext()) {_                for (ComputeService computeService : computeServices) {_                    if (computeService.getContext().unwrap().getName().equals(predicate)) {_                        return computeService__                    }_                }_            }__            for (ComputeService computeService : computeServices) {_                if (computeService.getContext().unwrap().getId().equals(predicate)) {_                    return computeService__                }_            }_            throw new IllegalArgumentException(String.format("No compute service found for :%s", predicate))__        } else {_            throw new IllegalArgumentException("No compute service available.")__        }_    };returns,the,link,compute,service,that,matches,the,given,predicate,param,predicate,the,compute,context,name,provider,or,api,return,the,matching,link,compute,service;protected,compute,service,get,compute,service,string,predicate,throws,illegal,argument,exception,if,compute,services,null,compute,services,is,empty,if,is,name,supported,by,context,for,compute,service,compute,service,compute,services,if,compute,service,get,context,unwrap,get,name,equals,predicate,return,compute,service,for,compute,service,compute,service,compute,services,if,compute,service,get,context,unwrap,get,id,equals,predicate,return,compute,service,throw,new,illegal,argument,exception,string,format,no,compute,service,found,for,s,predicate,else,throw,new,illegal,argument,exception,no,compute,service,available
JcloudsComponent -> protected ComputeService getComputeService(String predicate) throws IllegalArgumentException;1431079073;Returns the {@link ComputeService} that matches the given predicate._@param predicate The compute context name, provider or api._@return The matching {@link ComputeService};protected ComputeService getComputeService(String predicate) throws IllegalArgumentException {_        if (computeServices != null && !computeServices.isEmpty()) {_            _            if (isNameSupportedByContext()) {_                for (ComputeService computeService : computeServices) {_                    if (computeService.getContext().unwrap().getName().equals(predicate)) {_                        return computeService__                    }_                }_            }__            for (ComputeService computeService : computeServices) {_                if (computeService.getContext().unwrap().getId().equals(predicate)) {_                    return computeService__                }_            }_            throw new IllegalArgumentException(String.format("No compute service found for :%s", predicate))__        } else {_            throw new IllegalArgumentException("No compute service available.")__        }_    };returns,the,link,compute,service,that,matches,the,given,predicate,param,predicate,the,compute,context,name,provider,or,api,return,the,matching,link,compute,service;protected,compute,service,get,compute,service,string,predicate,throws,illegal,argument,exception,if,compute,services,null,compute,services,is,empty,if,is,name,supported,by,context,for,compute,service,compute,service,compute,services,if,compute,service,get,context,unwrap,get,name,equals,predicate,return,compute,service,for,compute,service,compute,service,compute,services,if,compute,service,get,context,unwrap,get,id,equals,predicate,return,compute,service,throw,new,illegal,argument,exception,string,format,no,compute,service,found,for,s,predicate,else,throw,new,illegal,argument,exception,no,compute,service,available
JcloudsComponent -> protected ComputeService getComputeService(String predicate) throws IllegalArgumentException;1540108158;Returns the {@link ComputeService} that matches the given predicate._@param predicate The compute context name, provider or api._@return The matching {@link ComputeService};protected ComputeService getComputeService(String predicate) throws IllegalArgumentException {_        if (computeServices != null && !computeServices.isEmpty()) {_            _            if (isNameSupportedByContext()) {_                for (ComputeService computeService : computeServices) {_                    if (computeService.getContext().unwrap().getName().equals(predicate)) {_                        return computeService__                    }_                }_            }__            for (ComputeService computeService : computeServices) {_                if (computeService.getContext().unwrap().getId().equals(predicate)) {_                    return computeService__                }_            }_            throw new IllegalArgumentException(String.format("No compute service found for :%s", predicate))__        } else {_            throw new IllegalArgumentException("No compute service available.")__        }_    };returns,the,link,compute,service,that,matches,the,given,predicate,param,predicate,the,compute,context,name,provider,or,api,return,the,matching,link,compute,service;protected,compute,service,get,compute,service,string,predicate,throws,illegal,argument,exception,if,compute,services,null,compute,services,is,empty,if,is,name,supported,by,context,for,compute,service,compute,service,compute,services,if,compute,service,get,context,unwrap,get,name,equals,predicate,return,compute,service,for,compute,service,compute,service,compute,services,if,compute,service,get,context,unwrap,get,id,equals,predicate,return,compute,service,throw,new,illegal,argument,exception,string,format,no,compute,service,found,for,s,predicate,else,throw,new,illegal,argument,exception,no,compute,service,available
JcloudsComponent -> protected ComputeService getComputeService(String predicate) throws IllegalArgumentException;1540108163;Returns the {@link ComputeService} that matches the given predicate._@param predicate The compute context name, provider or api._@return The matching {@link ComputeService};protected ComputeService getComputeService(String predicate) throws IllegalArgumentException {_        if (computeServices != null && !computeServices.isEmpty()) {_            _            if (isNameSupportedByContext()) {_                for (ComputeService computeService : computeServices) {_                    if (computeService.getContext().unwrap().getName().equals(predicate)) {_                        return computeService__                    }_                }_            }__            for (ComputeService computeService : computeServices) {_                if (computeService.getContext().unwrap().getId().equals(predicate)) {_                    return computeService__                }_            }_            throw new IllegalArgumentException(String.format("No compute service found for :%s", predicate))__        } else {_            throw new IllegalArgumentException("No compute service available.")__        }_    };returns,the,link,compute,service,that,matches,the,given,predicate,param,predicate,the,compute,context,name,provider,or,api,return,the,matching,link,compute,service;protected,compute,service,get,compute,service,string,predicate,throws,illegal,argument,exception,if,compute,services,null,compute,services,is,empty,if,is,name,supported,by,context,for,compute,service,compute,service,compute,services,if,compute,service,get,context,unwrap,get,name,equals,predicate,return,compute,service,for,compute,service,compute,service,compute,services,if,compute,service,get,context,unwrap,get,id,equals,predicate,return,compute,service,throw,new,illegal,argument,exception,string,format,no,compute,service,found,for,s,predicate,else,throw,new,illegal,argument,exception,no,compute,service,available
JcloudsComponent -> protected ComputeService getComputeService(String predicate) throws IllegalArgumentException;1547241305;Returns the {@link ComputeService} that matches the given predicate._@param predicate The compute context name, provider or api._@return The matching {@link ComputeService};protected ComputeService getComputeService(String predicate) throws IllegalArgumentException {_        if (computeServices != null && !computeServices.isEmpty()) {_            _            if (isNameSupportedByContext()) {_                for (ComputeService computeService : computeServices) {_                    if (computeService.getContext().unwrap().getName().equals(predicate)) {_                        return computeService__                    }_                }_            }__            for (ComputeService computeService : computeServices) {_                if (computeService.getContext().unwrap().getId().equals(predicate)) {_                    return computeService__                }_            }_            throw new IllegalArgumentException(String.format("No compute service found for :%s", predicate))__        } else {_            throw new IllegalArgumentException("No compute service available.")__        }_    };returns,the,link,compute,service,that,matches,the,given,predicate,param,predicate,the,compute,context,name,provider,or,api,return,the,matching,link,compute,service;protected,compute,service,get,compute,service,string,predicate,throws,illegal,argument,exception,if,compute,services,null,compute,services,is,empty,if,is,name,supported,by,context,for,compute,service,compute,service,compute,services,if,compute,service,get,context,unwrap,get,name,equals,predicate,return,compute,service,for,compute,service,compute,service,compute,services,if,compute,service,get,context,unwrap,get,id,equals,predicate,return,compute,service,throw,new,illegal,argument,exception,string,format,no,compute,service,found,for,s,predicate,else,throw,new,illegal,argument,exception,no,compute,service,available
JcloudsComponent -> protected BlobStore getBlobStore(String predicate) throws IllegalArgumentException;1353141176;Returns the {@link BlobStore} that matches the given providerOrApi._@param predicate The blobstore context name, provider or api._@return The matching {@link BlobStore};protected BlobStore getBlobStore(String predicate) throws IllegalArgumentException {_        if (blobStores != null && !blobStores.isEmpty()) {__            _            if (isNameSupportedByContext()) {_                for (BlobStore blobStore : blobStores) {_                    if (blobStore.getContext().unwrap().getName().equals(predicate)) {_                        return blobStore__                    }_                }_            }__            for (BlobStore blobStore : blobStores) {_                if (blobStore.getContext().unwrap().getId().equals(predicate)) {_                    return blobStore__                }_            }_            throw new IllegalArgumentException(String.format("No blobstore found for:%s", predicate))__        } else {_            throw new IllegalArgumentException("No blobstore available.")__        }_    };returns,the,link,blob,store,that,matches,the,given,provider,or,api,param,predicate,the,blobstore,context,name,provider,or,api,return,the,matching,link,blob,store;protected,blob,store,get,blob,store,string,predicate,throws,illegal,argument,exception,if,blob,stores,null,blob,stores,is,empty,if,is,name,supported,by,context,for,blob,store,blob,store,blob,stores,if,blob,store,get,context,unwrap,get,name,equals,predicate,return,blob,store,for,blob,store,blob,store,blob,stores,if,blob,store,get,context,unwrap,get,id,equals,predicate,return,blob,store,throw,new,illegal,argument,exception,string,format,no,blobstore,found,for,s,predicate,else,throw,new,illegal,argument,exception,no,blobstore,available
JcloudsComponent -> protected BlobStore getBlobStore(String predicate) throws IllegalArgumentException;1420449485;Returns the {@link BlobStore} that matches the given providerOrApi._@param predicate The blobstore context name, provider or api._@return The matching {@link BlobStore};protected BlobStore getBlobStore(String predicate) throws IllegalArgumentException {_        if (blobStores != null && !blobStores.isEmpty()) {__            _            if (isNameSupportedByContext()) {_                for (BlobStore blobStore : blobStores) {_                    if (blobStore.getContext().unwrap().getName().equals(predicate)) {_                        return blobStore__                    }_                }_            }__            for (BlobStore blobStore : blobStores) {_                if (blobStore.getContext().unwrap().getId().equals(predicate)) {_                    return blobStore__                }_            }_            throw new IllegalArgumentException(String.format("No blobstore found for:%s", predicate))__        } else {_            throw new IllegalArgumentException("No blobstore available.")__        }_    };returns,the,link,blob,store,that,matches,the,given,provider,or,api,param,predicate,the,blobstore,context,name,provider,or,api,return,the,matching,link,blob,store;protected,blob,store,get,blob,store,string,predicate,throws,illegal,argument,exception,if,blob,stores,null,blob,stores,is,empty,if,is,name,supported,by,context,for,blob,store,blob,store,blob,stores,if,blob,store,get,context,unwrap,get,name,equals,predicate,return,blob,store,for,blob,store,blob,store,blob,stores,if,blob,store,get,context,unwrap,get,id,equals,predicate,return,blob,store,throw,new,illegal,argument,exception,string,format,no,blobstore,found,for,s,predicate,else,throw,new,illegal,argument,exception,no,blobstore,available
JcloudsComponent -> protected BlobStore getBlobStore(String predicate) throws IllegalArgumentException;1420449849;Returns the {@link BlobStore} that matches the given providerOrApi._@param predicate The blobstore context name, provider or api._@return The matching {@link BlobStore};protected BlobStore getBlobStore(String predicate) throws IllegalArgumentException {_        if (blobStores != null && !blobStores.isEmpty()) {__            _            if (isNameSupportedByContext()) {_                for (BlobStore blobStore : blobStores) {_                    if (blobStore.getContext().unwrap().getName().equals(predicate)) {_                        return blobStore__                    }_                }_            }__            for (BlobStore blobStore : blobStores) {_                if (blobStore.getContext().unwrap().getId().equals(predicate)) {_                    return blobStore__                }_            }_            throw new IllegalArgumentException(String.format("No blobstore found for:%s", predicate))__        } else {_            throw new IllegalArgumentException("No blobstore available.")__        }_    };returns,the,link,blob,store,that,matches,the,given,provider,or,api,param,predicate,the,blobstore,context,name,provider,or,api,return,the,matching,link,blob,store;protected,blob,store,get,blob,store,string,predicate,throws,illegal,argument,exception,if,blob,stores,null,blob,stores,is,empty,if,is,name,supported,by,context,for,blob,store,blob,store,blob,stores,if,blob,store,get,context,unwrap,get,name,equals,predicate,return,blob,store,for,blob,store,blob,store,blob,stores,if,blob,store,get,context,unwrap,get,id,equals,predicate,return,blob,store,throw,new,illegal,argument,exception,string,format,no,blobstore,found,for,s,predicate,else,throw,new,illegal,argument,exception,no,blobstore,available
JcloudsComponent -> protected BlobStore getBlobStore(String predicate) throws IllegalArgumentException;1431079073;Returns the {@link BlobStore} that matches the given providerOrApi._@param predicate The blobstore context name, provider or api._@return The matching {@link BlobStore};protected BlobStore getBlobStore(String predicate) throws IllegalArgumentException {_        if (blobStores != null && !blobStores.isEmpty()) {__            _            if (isNameSupportedByContext()) {_                for (BlobStore blobStore : blobStores) {_                    if (blobStore.getContext().unwrap().getName().equals(predicate)) {_                        return blobStore__                    }_                }_            }__            for (BlobStore blobStore : blobStores) {_                if (blobStore.getContext().unwrap().getId().equals(predicate)) {_                    return blobStore__                }_            }_            throw new IllegalArgumentException(String.format("No blobstore found for:%s", predicate))__        } else {_            throw new IllegalArgumentException("No blobstore available.")__        }_    };returns,the,link,blob,store,that,matches,the,given,provider,or,api,param,predicate,the,blobstore,context,name,provider,or,api,return,the,matching,link,blob,store;protected,blob,store,get,blob,store,string,predicate,throws,illegal,argument,exception,if,blob,stores,null,blob,stores,is,empty,if,is,name,supported,by,context,for,blob,store,blob,store,blob,stores,if,blob,store,get,context,unwrap,get,name,equals,predicate,return,blob,store,for,blob,store,blob,store,blob,stores,if,blob,store,get,context,unwrap,get,id,equals,predicate,return,blob,store,throw,new,illegal,argument,exception,string,format,no,blobstore,found,for,s,predicate,else,throw,new,illegal,argument,exception,no,blobstore,available
JcloudsComponent -> protected BlobStore getBlobStore(String predicate) throws IllegalArgumentException;1540108158;Returns the {@link BlobStore} that matches the given providerOrApi._@param predicate The blobstore context name, provider or api._@return The matching {@link BlobStore};protected BlobStore getBlobStore(String predicate) throws IllegalArgumentException {_        if (blobStores != null && !blobStores.isEmpty()) {__            _            if (isNameSupportedByContext()) {_                for (BlobStore blobStore : blobStores) {_                    if (blobStore.getContext().unwrap().getName().equals(predicate)) {_                        return blobStore__                    }_                }_            }__            for (BlobStore blobStore : blobStores) {_                if (blobStore.getContext().unwrap().getId().equals(predicate)) {_                    return blobStore__                }_            }_            throw new IllegalArgumentException(String.format("No blobstore found for:%s", predicate))__        } else {_            throw new IllegalArgumentException("No blobstore available.")__        }_    };returns,the,link,blob,store,that,matches,the,given,provider,or,api,param,predicate,the,blobstore,context,name,provider,or,api,return,the,matching,link,blob,store;protected,blob,store,get,blob,store,string,predicate,throws,illegal,argument,exception,if,blob,stores,null,blob,stores,is,empty,if,is,name,supported,by,context,for,blob,store,blob,store,blob,stores,if,blob,store,get,context,unwrap,get,name,equals,predicate,return,blob,store,for,blob,store,blob,store,blob,stores,if,blob,store,get,context,unwrap,get,id,equals,predicate,return,blob,store,throw,new,illegal,argument,exception,string,format,no,blobstore,found,for,s,predicate,else,throw,new,illegal,argument,exception,no,blobstore,available
JcloudsComponent -> protected BlobStore getBlobStore(String predicate) throws IllegalArgumentException;1540108163;Returns the {@link BlobStore} that matches the given providerOrApi._@param predicate The blobstore context name, provider or api._@return The matching {@link BlobStore};protected BlobStore getBlobStore(String predicate) throws IllegalArgumentException {_        if (blobStores != null && !blobStores.isEmpty()) {__            _            if (isNameSupportedByContext()) {_                for (BlobStore blobStore : blobStores) {_                    if (blobStore.getContext().unwrap().getName().equals(predicate)) {_                        return blobStore__                    }_                }_            }__            for (BlobStore blobStore : blobStores) {_                if (blobStore.getContext().unwrap().getId().equals(predicate)) {_                    return blobStore__                }_            }_            throw new IllegalArgumentException(String.format("No blobstore found for:%s", predicate))__        } else {_            throw new IllegalArgumentException("No blobstore available.")__        }_    };returns,the,link,blob,store,that,matches,the,given,provider,or,api,param,predicate,the,blobstore,context,name,provider,or,api,return,the,matching,link,blob,store;protected,blob,store,get,blob,store,string,predicate,throws,illegal,argument,exception,if,blob,stores,null,blob,stores,is,empty,if,is,name,supported,by,context,for,blob,store,blob,store,blob,stores,if,blob,store,get,context,unwrap,get,name,equals,predicate,return,blob,store,for,blob,store,blob,store,blob,stores,if,blob,store,get,context,unwrap,get,id,equals,predicate,return,blob,store,throw,new,illegal,argument,exception,string,format,no,blobstore,found,for,s,predicate,else,throw,new,illegal,argument,exception,no,blobstore,available
JcloudsComponent -> protected BlobStore getBlobStore(String predicate) throws IllegalArgumentException;1547241305;Returns the {@link BlobStore} that matches the given providerOrApi._@param predicate The blobstore context name, provider or api._@return The matching {@link BlobStore};protected BlobStore getBlobStore(String predicate) throws IllegalArgumentException {_        if (blobStores != null && !blobStores.isEmpty()) {__            _            if (isNameSupportedByContext()) {_                for (BlobStore blobStore : blobStores) {_                    if (blobStore.getContext().unwrap().getName().equals(predicate)) {_                        return blobStore__                    }_                }_            }__            for (BlobStore blobStore : blobStores) {_                if (blobStore.getContext().unwrap().getId().equals(predicate)) {_                    return blobStore__                }_            }_            throw new IllegalArgumentException(String.format("No blobstore found for:%s", predicate))__        } else {_            throw new IllegalArgumentException("No blobstore available.")__        }_    };returns,the,link,blob,store,that,matches,the,given,provider,or,api,param,predicate,the,blobstore,context,name,provider,or,api,return,the,matching,link,blob,store;protected,blob,store,get,blob,store,string,predicate,throws,illegal,argument,exception,if,blob,stores,null,blob,stores,is,empty,if,is,name,supported,by,context,for,blob,store,blob,store,blob,stores,if,blob,store,get,context,unwrap,get,name,equals,predicate,return,blob,store,for,blob,store,blob,store,blob,stores,if,blob,store,get,context,unwrap,get,id,equals,predicate,return,blob,store,throw,new,illegal,argument,exception,string,format,no,blobstore,found,for,s,predicate,else,throw,new,illegal,argument,exception,no,blobstore,available
JcloudsComponent -> public void setComputeServices(List<ComputeService> computeServices);1431079073;To use the given ComputeService which must be configured when use compute.;public void setComputeServices(List<ComputeService> computeServices) {_        this.computeServices = computeServices__    };to,use,the,given,compute,service,which,must,be,configured,when,use,compute;public,void,set,compute,services,list,compute,service,compute,services,this,compute,services,compute,services
JcloudsComponent -> public void setComputeServices(List<ComputeService> computeServices);1540108158;To use the given ComputeService which must be configured when use compute.;public void setComputeServices(List<ComputeService> computeServices) {_        this.computeServices = computeServices__    };to,use,the,given,compute,service,which,must,be,configured,when,use,compute;public,void,set,compute,services,list,compute,service,compute,services,this,compute,services,compute,services
JcloudsComponent -> public void setComputeServices(List<ComputeService> computeServices);1540108163;To use the given ComputeService which must be configured when use compute.;public void setComputeServices(List<ComputeService> computeServices) {_        this.computeServices = computeServices__    };to,use,the,given,compute,service,which,must,be,configured,when,use,compute;public,void,set,compute,services,list,compute,service,compute,services,this,compute,services,compute,services
JcloudsComponent -> public void setComputeServices(List<ComputeService> computeServices);1547241305;To use the given ComputeService which must be configured when use compute.;public void setComputeServices(List<ComputeService> computeServices) {_        this.computeServices = computeServices__    };to,use,the,given,compute,service,which,must,be,configured,when,use,compute;public,void,set,compute,services,list,compute,service,compute,services,this,compute,services,compute,services
JcloudsComponent -> protected ComputeService getComputeService(String predicate) throws Exception;1351265468;Returns the {@link ComputeService} that matches the given predicate._@param predicate The compute context name, provider or api._@return The matching {@link ComputeService};protected ComputeService getComputeService(String predicate) throws Exception {__        if (computeServices != null && !computeServices.isEmpty()) {_            _            if (isNameSupportedByContext()) {_                for (ComputeService computeService : computeServices) {_                    if (computeService.getContext().unwrap().getName().equals(predicate)) {_                        return computeService__                    }_                }_            }__            for (ComputeService computeService : computeServices) {_                if (computeService.getContext().unwrap().getId().equals(predicate)) {_                    return computeService__                }_            }_            throw new Exception(String.format("No compute service found for :%s", predicate))__        } else {_            throw new Exception("No compute service available.")__        }_    };returns,the,link,compute,service,that,matches,the,given,predicate,param,predicate,the,compute,context,name,provider,or,api,return,the,matching,link,compute,service;protected,compute,service,get,compute,service,string,predicate,throws,exception,if,compute,services,null,compute,services,is,empty,if,is,name,supported,by,context,for,compute,service,compute,service,compute,services,if,compute,service,get,context,unwrap,get,name,equals,predicate,return,compute,service,for,compute,service,compute,service,compute,services,if,compute,service,get,context,unwrap,get,id,equals,predicate,return,compute,service,throw,new,exception,string,format,no,compute,service,found,for,s,predicate,else,throw,new,exception,no,compute,service,available
JcloudsComponent -> protected ComputeService getComputeService(String predicate) throws Exception;1351660130;Returns the {@link ComputeService} that matches the given predicate._@param predicate The compute context name, provider or api._@return The matching {@link ComputeService};protected ComputeService getComputeService(String predicate) throws Exception {__        if (computeServices != null && !computeServices.isEmpty()) {_            _            if (isNameSupportedByContext()) {_                for (ComputeService computeService : computeServices) {_                    if (computeService.getContext().unwrap().getName().equals(predicate)) {_                        return computeService__                    }_                }_            }__            for (ComputeService computeService : computeServices) {_                if (computeService.getContext().unwrap().getId().equals(predicate)) {_                    return computeService__                }_            }_            throw new Exception(String.format("No compute service found for :%s", predicate))__        } else {_            throw new Exception("No compute service available.")__        }_    };returns,the,link,compute,service,that,matches,the,given,predicate,param,predicate,the,compute,context,name,provider,or,api,return,the,matching,link,compute,service;protected,compute,service,get,compute,service,string,predicate,throws,exception,if,compute,services,null,compute,services,is,empty,if,is,name,supported,by,context,for,compute,service,compute,service,compute,services,if,compute,service,get,context,unwrap,get,name,equals,predicate,return,compute,service,for,compute,service,compute,service,compute,services,if,compute,service,get,context,unwrap,get,id,equals,predicate,return,compute,service,throw,new,exception,string,format,no,compute,service,found,for,s,predicate,else,throw,new,exception,no,compute,service,available
JcloudsComponent -> private boolean isNameSupportedByContext();1351265468;Checks if jclouds {@link Context} supports the name._We need this method as getName is not supported in earlier micro version of 1.5.x._So we use this check to fallback to traditional means of looking up contexts and services, if name is not present.__@return;private boolean isNameSupportedByContext() {_        try {_            Context.class.getMethod("getName", null)__            return true__        } catch (NoSuchMethodException ex) {_            return false__        }_    };checks,if,jclouds,link,context,supports,the,name,we,need,this,method,as,get,name,is,not,supported,in,earlier,micro,version,of,1,5,x,so,we,use,this,check,to,fallback,to,traditional,means,of,looking,up,contexts,and,services,if,name,is,not,present,return;private,boolean,is,name,supported,by,context,try,context,class,get,method,get,name,null,return,true,catch,no,such,method,exception,ex,return,false
JcloudsComponent -> private boolean isNameSupportedByContext();1351660130;Checks if jclouds {@link Context} supports the name._We need this method as getName is not supported in earlier micro version of 1.5.x._So we use this check to fallback to traditional means of looking up contexts and services, if name is not present.__@return;private boolean isNameSupportedByContext() {_        try {_            Context.class.getMethod("getName")__            return true__        } catch (NoSuchMethodException ex) {_            return false__        }_    };checks,if,jclouds,link,context,supports,the,name,we,need,this,method,as,get,name,is,not,supported,in,earlier,micro,version,of,1,5,x,so,we,use,this,check,to,fallback,to,traditional,means,of,looking,up,contexts,and,services,if,name,is,not,present,return;private,boolean,is,name,supported,by,context,try,context,class,get,method,get,name,return,true,catch,no,such,method,exception,ex,return,false
JcloudsComponent -> private boolean isNameSupportedByContext();1353141176;Checks if jclouds {@link Context} supports the name._We need this method as getName is not supported in earlier micro version of 1.5.x._So we use this check to fallback to traditional means of looking up contexts and services, if name is not present.;private boolean isNameSupportedByContext() {_        try {_            Context.class.getMethod("getName")__            return true__        } catch (NoSuchMethodException ex) {_            return false__        }_    };checks,if,jclouds,link,context,supports,the,name,we,need,this,method,as,get,name,is,not,supported,in,earlier,micro,version,of,1,5,x,so,we,use,this,check,to,fallback,to,traditional,means,of,looking,up,contexts,and,services,if,name,is,not,present;private,boolean,is,name,supported,by,context,try,context,class,get,method,get,name,return,true,catch,no,such,method,exception,ex,return,false
JcloudsComponent -> private boolean isNameSupportedByContext();1420449485;Checks if jclouds {@link Context} supports the name._We need this method as getName is not supported in earlier micro version of 1.5.x._So we use this check to fallback to traditional means of looking up contexts and services, if name is not present.;private boolean isNameSupportedByContext() {_        try {_            Context.class.getMethod("getName")__            return true__        } catch (NoSuchMethodException ex) {_            return false__        }_    };checks,if,jclouds,link,context,supports,the,name,we,need,this,method,as,get,name,is,not,supported,in,earlier,micro,version,of,1,5,x,so,we,use,this,check,to,fallback,to,traditional,means,of,looking,up,contexts,and,services,if,name,is,not,present;private,boolean,is,name,supported,by,context,try,context,class,get,method,get,name,return,true,catch,no,such,method,exception,ex,return,false
JcloudsComponent -> private boolean isNameSupportedByContext();1420449849;Checks if jclouds {@link Context} supports the name._We need this method as getName is not supported in earlier micro version of 1.5.x._So we use this check to fallback to traditional means of looking up contexts and services, if name is not present.;private boolean isNameSupportedByContext() {_        try {_            Context.class.getMethod("getName")__            return true__        } catch (NoSuchMethodException ex) {_            return false__        }_    };checks,if,jclouds,link,context,supports,the,name,we,need,this,method,as,get,name,is,not,supported,in,earlier,micro,version,of,1,5,x,so,we,use,this,check,to,fallback,to,traditional,means,of,looking,up,contexts,and,services,if,name,is,not,present;private,boolean,is,name,supported,by,context,try,context,class,get,method,get,name,return,true,catch,no,such,method,exception,ex,return,false
JcloudsComponent -> private boolean isNameSupportedByContext();1431079073;Checks if jclouds {@link Context} supports the name._We need this method as getName is not supported in earlier micro version of 1.5.x._So we use this check to fallback to traditional means of looking up contexts and services, if name is not present.;private boolean isNameSupportedByContext() {_        try {_            Context.class.getMethod("getName")__            return true__        } catch (NoSuchMethodException ex) {_            return false__        }_    };checks,if,jclouds,link,context,supports,the,name,we,need,this,method,as,get,name,is,not,supported,in,earlier,micro,version,of,1,5,x,so,we,use,this,check,to,fallback,to,traditional,means,of,looking,up,contexts,and,services,if,name,is,not,present;private,boolean,is,name,supported,by,context,try,context,class,get,method,get,name,return,true,catch,no,such,method,exception,ex,return,false
JcloudsComponent -> private boolean isNameSupportedByContext();1540108158;Checks if jclouds {@link Context} supports the name._We need this method as getName is not supported in earlier micro version of 1.5.x._So we use this check to fallback to traditional means of looking up contexts and services, if name is not present.;private boolean isNameSupportedByContext() {_        try {_            Context.class.getMethod("getName")__            return true__        } catch (NoSuchMethodException ex) {_            return false__        }_    };checks,if,jclouds,link,context,supports,the,name,we,need,this,method,as,get,name,is,not,supported,in,earlier,micro,version,of,1,5,x,so,we,use,this,check,to,fallback,to,traditional,means,of,looking,up,contexts,and,services,if,name,is,not,present;private,boolean,is,name,supported,by,context,try,context,class,get,method,get,name,return,true,catch,no,such,method,exception,ex,return,false
JcloudsComponent -> private boolean isNameSupportedByContext();1540108163;Checks if jclouds {@link Context} supports the name._We need this method as getName is not supported in earlier micro version of 1.5.x._So we use this check to fallback to traditional means of looking up contexts and services, if name is not present.;private boolean isNameSupportedByContext() {_        try {_            Context.class.getMethod("getName")__            return true__        } catch (NoSuchMethodException ex) {_            return false__        }_    };checks,if,jclouds,link,context,supports,the,name,we,need,this,method,as,get,name,is,not,supported,in,earlier,micro,version,of,1,5,x,so,we,use,this,check,to,fallback,to,traditional,means,of,looking,up,contexts,and,services,if,name,is,not,present;private,boolean,is,name,supported,by,context,try,context,class,get,method,get,name,return,true,catch,no,such,method,exception,ex,return,false
JcloudsComponent -> private boolean isNameSupportedByContext();1547241305;Checks if jclouds {@link Context} supports the name._We need this method as getName is not supported in earlier micro version of 1.5.x._So we use this check to fallback to traditional means of looking up contexts and services, if name is not present.;private boolean isNameSupportedByContext() {_        try {_            Context.class.getMethod("getName")__            return true__        } catch (NoSuchMethodException ex) {_            return false__        }_    };checks,if,jclouds,link,context,supports,the,name,we,need,this,method,as,get,name,is,not,supported,in,earlier,micro,version,of,1,5,x,so,we,use,this,check,to,fallback,to,traditional,means,of,looking,up,contexts,and,services,if,name,is,not,present;private,boolean,is,name,supported,by,context,try,context,class,get,method,get,name,return,true,catch,no,such,method,exception,ex,return,false
