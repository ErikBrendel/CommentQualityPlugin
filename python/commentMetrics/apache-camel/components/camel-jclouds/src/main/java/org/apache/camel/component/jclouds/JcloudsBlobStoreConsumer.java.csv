# id;timestamp;commentText;codeText;commentWords;codeWords
JcloudsBlobStoreConsumer -> protected Object readBlob(String container, String blobName);1316636294;Reads from a {@link BlobStore}. It returns an Object.__@param container_@param blobName_@return;protected Object readBlob(String container, String blobName) {_        Object result = null__        ObjectInputStream ois = null__        BlobStore blobStore = blobStoreContext.getBlobStore()__        blobStore.createContainerInLocation(null, container)___        InputStream is = blobStore.getBlob(container, blobName).getPayload().getInput()___        try {_            ois = new ObjectInputStream(is) {_                @Override_                public Class resolveClass(ObjectStreamClass desc) throws IOException,_                        ClassNotFoundException {_                    try {_                        return getEndpoint().getCamelContext().getClassResolver().resolveClass(desc.getName())__                    } catch (Exception e) {_                    }_                    return super.resolveClass(desc)__                }_            }__            result = ois.readObject()__        } catch (IOException_                e) {_            e.printStackTrace()__        } catch (ClassNotFoundException_                e) {_            e.printStackTrace()__        } finally {_            if (ois != null) {_                try {_                    ois.close()__                } catch (IOException e) {_                }_            }__            if (is != null) {_                try {_                    is.close()__                } catch (IOException e) {_                }_            }_        }__        return result__    };reads,from,a,link,blob,store,it,returns,an,object,param,container,param,blob,name,return;protected,object,read,blob,string,container,string,blob,name,object,result,null,object,input,stream,ois,null,blob,store,blob,store,blob,store,context,get,blob,store,blob,store,create,container,in,location,null,container,input,stream,is,blob,store,get,blob,container,blob,name,get,payload,get,input,try,ois,new,object,input,stream,is,override,public,class,resolve,class,object,stream,class,desc,throws,ioexception,class,not,found,exception,try,return,get,endpoint,get,camel,context,get,class,resolver,resolve,class,desc,get,name,catch,exception,e,return,super,resolve,class,desc,result,ois,read,object,catch,ioexception,e,e,print,stack,trace,catch,class,not,found,exception,e,e,print,stack,trace,finally,if,ois,null,try,ois,close,catch,ioexception,e,if,is,null,try,is,close,catch,ioexception,e,return,result
JcloudsBlobStoreConsumer -> protected Object readBlob(String container, String blobName);1316637712;Reads from a {@link BlobStore}. It returns an Object.__@param container_@param blobName_@return;protected Object readBlob(String container, String blobName) {_        Object result = null__        ObjectInputStream ois = null__        BlobStore blobStore = blobStoreContext.getBlobStore()__        blobStore.createContainerInLocation(null, container)___        InputStream is = blobStore.getBlob(container, blobName).getPayload().getInput()___        try {_            ois = new ObjectInputStream(is) {_                @Override_                public Class resolveClass(ObjectStreamClass desc) throws IOException,_                        ClassNotFoundException {_                    try {_                        return getEndpoint().getCamelContext().getClassResolver().resolveClass(desc.getName())__                    } catch (Exception e) {_                    }_                    return super.resolveClass(desc)__                }_            }__            result = ois.readObject()__        } catch (IOException_                e) {_            e.printStackTrace()__        } catch (ClassNotFoundException_                e) {_            e.printStackTrace()__        } finally {_            if (ois != null) {_                try {_                    ois.close()__                } catch (IOException e) {_                }_            }__            if (is != null) {_                try {_                    is.close()__                } catch (IOException e) {_                }_            }_        }__        return result__    };reads,from,a,link,blob,store,it,returns,an,object,param,container,param,blob,name,return;protected,object,read,blob,string,container,string,blob,name,object,result,null,object,input,stream,ois,null,blob,store,blob,store,blob,store,context,get,blob,store,blob,store,create,container,in,location,null,container,input,stream,is,blob,store,get,blob,container,blob,name,get,payload,get,input,try,ois,new,object,input,stream,is,override,public,class,resolve,class,object,stream,class,desc,throws,ioexception,class,not,found,exception,try,return,get,endpoint,get,camel,context,get,class,resolver,resolve,class,desc,get,name,catch,exception,e,return,super,resolve,class,desc,result,ois,read,object,catch,ioexception,e,e,print,stack,trace,catch,class,not,found,exception,e,e,print,stack,trace,finally,if,ois,null,try,ois,close,catch,ioexception,e,if,is,null,try,is,close,catch,ioexception,e,return,result
JcloudsBlobStoreConsumer -> protected Object readBlob(String container, String blobName);1316709580;Reads from a {@link BlobStore}. It returns an Object.__@param container_@param blobName_@return;protected Object readBlob(String container, String blobName) {_        Object result = null__        ObjectInputStream ois = null__        BlobStore blobStore = blobStoreContext.getBlobStore()__        blobStore.createContainerInLocation(null, container)___        InputStream is = blobStore.getBlob(container, blobName).getPayload().getInput()___        try {_            ois = new ObjectInputStream(is) {_                @Override_                public Class<?> resolveClass(ObjectStreamClass desc) throws IOException,_                        ClassNotFoundException {_                    try {_                        return getEndpoint().getCamelContext().getClassResolver().resolveClass(desc.getName())__                    } catch (Exception e) {_                    }_                    return super.resolveClass(desc)__                }_            }__            result = ois.readObject()__        } catch (IOException_                e) {_            e.printStackTrace()__        } catch (ClassNotFoundException_                e) {_            e.printStackTrace()__        } finally {_            if (ois != null) {_                try {_                    ois.close()__                } catch (IOException e) {_                }_            }__            if (is != null) {_                try {_                    is.close()__                } catch (IOException e) {_                }_            }_        }__        return result__    };reads,from,a,link,blob,store,it,returns,an,object,param,container,param,blob,name,return;protected,object,read,blob,string,container,string,blob,name,object,result,null,object,input,stream,ois,null,blob,store,blob,store,blob,store,context,get,blob,store,blob,store,create,container,in,location,null,container,input,stream,is,blob,store,get,blob,container,blob,name,get,payload,get,input,try,ois,new,object,input,stream,is,override,public,class,resolve,class,object,stream,class,desc,throws,ioexception,class,not,found,exception,try,return,get,endpoint,get,camel,context,get,class,resolver,resolve,class,desc,get,name,catch,exception,e,return,super,resolve,class,desc,result,ois,read,object,catch,ioexception,e,e,print,stack,trace,catch,class,not,found,exception,e,e,print,stack,trace,finally,if,ois,null,try,ois,close,catch,ioexception,e,if,is,null,try,is,close,catch,ioexception,e,return,result
