commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Override public void configure() throws Exception {     from("direct:in").to("docker://" + getOperation().toString() + "?imageId=" + imageId + "&noPrune=" + noPrune + "&force=" + force). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:in").to("docker://" + getOperation().toString() + "?imageId=" + imageId + "&noPrune=" + noPrune + "&force=" + force).         }     }. }
false;public;0;10;;@Ignore @Test public void removeImageHeaderTest() {     Map<String, Object> headers = getDefaultParameters().     template.sendBodyAndHeaders("direct:in", "", headers).     Mockito.verify(dockerClient, Mockito.times(1)).removeImageCmd(imageId). }
false;protected;0;4;;@Override protected void setupMocks() {     Mockito.when(dockerClient.removeImageCmd(anyString())).thenReturn(mockObject). }
false;protected;0;4;;@Override protected DockerOperation getOperation() {     return DockerOperation.REMOVE_IMAGE. }
