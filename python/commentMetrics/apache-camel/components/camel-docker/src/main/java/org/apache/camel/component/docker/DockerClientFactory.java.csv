# id;timestamp;commentText;codeText;commentWords;codeWords
DockerClientFactory -> public static DockerClient getDockerClient(DockerConfiguration dockerConfiguration, Message message) throws DockerException;1415211488;Produces a {@link DockerClient} to communicate with Docker__@param dockerConfiguration_@param message the Camel message_@return a DockerClient_@throws DockerException;public static DockerClient getDockerClient(DockerConfiguration dockerConfiguration, Message message) throws DockerException {_        _        ObjectHelper.notNull(dockerConfiguration, "dockerConfiguration")__        _        Integer port = null__        String host = null__        DockerClient client = null__       _            _        port = DockerHelper.getProperty(DockerConstants.DOCKER_PORT, dockerConfiguration, message, Integer.class)__        host = DockerHelper.getProperty(DockerConstants.DOCKER_HOST, dockerConfiguration, message, String.class)__       _        int uriPort = port != null ? port : dockerConfiguration.getDefaultPort()__        String uriHost = host != null ? host : dockerConfiguration.getDefaultHost()__        _        String username = DockerHelper.getProperty(DockerConstants.DOCKER_USERNAME, dockerConfiguration, message, String.class)__        String password = DockerHelper.getProperty(DockerConstants.DOCKER_PASSWORD, dockerConfiguration, message, String.class)__        String email = DockerHelper.getProperty(DockerConstants.DOCKER_EMAIL, dockerConfiguration, message, String.class)__        Integer requestTimeout = DockerHelper.getProperty(DockerConstants.DOCKER_API_REQUEST_TIMEOUT, dockerConfiguration, message, Integer.class)__        String serverAddress = DockerHelper.getProperty(DockerConstants.DOCKER_SERVER_ADDRESS, dockerConfiguration, message, String.class)__        Boolean secure = DockerHelper.getProperty(DockerConstants.DOCKER_SECURE, dockerConfiguration, message, Boolean.class)__        _        _        DockerClientProfile clientProfile = new DockerClientProfile()__        clientProfile.setHost(uriHost)__        clientProfile.setPort(uriPort)__        clientProfile.setEmail(email)__        clientProfile.setUsername(username)__        clientProfile.setPassword(password)__        clientProfile.setRequestTimeout(requestTimeout)__        clientProfile.setServerAddress(serverAddress)__        _        if (secure != null && secure) {_            clientProfile.setSecure(secure)__        }_        _        client = dockerConfiguration.getClient(clientProfile)__        _        if (client != null) {_            return client__        }_        _        DockerClientConfig.DockerClientConfigBuilder configBuilder = new DockerClientConfig.DockerClientConfigBuilder()_            .withUsername(username).withPassword(password).withEmail(email).withReadTimeout(requestTimeout)_            .withUri(clientProfile.toUrl())__        _        DockerClientConfig config = configBuilder.build()__        _        return DockerClientBuilder.getInstance(config).build()__        _    };produces,a,link,docker,client,to,communicate,with,docker,param,docker,configuration,param,message,the,camel,message,return,a,docker,client,throws,docker,exception;public,static,docker,client,get,docker,client,docker,configuration,docker,configuration,message,message,throws,docker,exception,object,helper,not,null,docker,configuration,docker,configuration,integer,port,null,string,host,null,docker,client,client,null,port,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,host,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,int,uri,port,port,null,port,docker,configuration,get,default,port,string,uri,host,host,null,host,docker,configuration,get,default,host,string,username,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,string,password,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,string,email,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,integer,request,timeout,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,string,server,address,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,boolean,secure,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,docker,client,profile,client,profile,new,docker,client,profile,client,profile,set,host,uri,host,client,profile,set,port,uri,port,client,profile,set,email,email,client,profile,set,username,username,client,profile,set,password,password,client,profile,set,request,timeout,request,timeout,client,profile,set,server,address,server,address,if,secure,null,secure,client,profile,set,secure,secure,client,docker,configuration,get,client,client,profile,if,client,null,return,client,docker,client,config,docker,client,config,builder,config,builder,new,docker,client,config,docker,client,config,builder,with,username,username,with,password,password,with,email,email,with,read,timeout,request,timeout,with,uri,client,profile,to,url,docker,client,config,config,config,builder,build,return,docker,client,builder,get,instance,config,build
DockerClientFactory -> public static DockerClient getDockerClient(DockerConfiguration dockerConfiguration, Message message) throws DockerException;1415517409;Produces a {@link DockerClient} to communicate with Docker__@param dockerConfiguration_@param message the Camel message_@return a DockerClient_@throws DockerException;public static DockerClient getDockerClient(DockerConfiguration dockerConfiguration, Message message) throws DockerException {_        _        ObjectHelper.notNull(dockerConfiguration, "dockerConfiguration")__        _        Integer port = null__        String host = null__        DockerClient client = null__       _            _        port = DockerHelper.getProperty(DockerConstants.DOCKER_PORT, dockerConfiguration, message, Integer.class)__        host = DockerHelper.getProperty(DockerConstants.DOCKER_HOST, dockerConfiguration, message, String.class)__       _        int uriPort = port != null ? port : dockerConfiguration.getDefaultPort()__        String uriHost = host != null ? host : dockerConfiguration.getDefaultHost()__        _        String username = DockerHelper.getProperty(DockerConstants.DOCKER_USERNAME, dockerConfiguration, message, String.class)__        String password = DockerHelper.getProperty(DockerConstants.DOCKER_PASSWORD, dockerConfiguration, message, String.class)__        String email = DockerHelper.getProperty(DockerConstants.DOCKER_EMAIL, dockerConfiguration, message, String.class)__        Integer requestTimeout = DockerHelper.getProperty(DockerConstants.DOCKER_API_REQUEST_TIMEOUT, dockerConfiguration, message, Integer.class)__        String serverAddress = DockerHelper.getProperty(DockerConstants.DOCKER_SERVER_ADDRESS, dockerConfiguration, message, String.class)__        Boolean secure = DockerHelper.getProperty(DockerConstants.DOCKER_SECURE, dockerConfiguration, message, Boolean.class)__        String certPath = DockerHelper.getProperty(DockerConstants.DOCKER_CERT_PATH, dockerConfiguration, message, String.class)__        _        DockerClientProfile clientProfile = new DockerClientProfile()__        clientProfile.setHost(uriHost)__        clientProfile.setPort(uriPort)__        clientProfile.setEmail(email)__        clientProfile.setUsername(username)__        clientProfile.setPassword(password)__        clientProfile.setRequestTimeout(requestTimeout)__        clientProfile.setServerAddress(serverAddress)__        clientProfile.setCertPath(certPath)__        _        if (secure != null && secure) {_            clientProfile.setSecure(secure)__        }_        _        client = dockerConfiguration.getClient(clientProfile)__        _        if (client != null) {_            return client__        }_ _        DockerClientConfig.DockerClientConfigBuilder configBuilder = new DockerClientConfig.DockerClientConfigBuilder()_            .withUsername(username).withPassword(password).withEmail(email).withReadTimeout(requestTimeout).withDockerCertPath(certPath)_            .withUri(clientProfile.toUrl())__        _        DockerClientConfig config = configBuilder.build()__        _        DockerCmdExecFactory dockerClientFactory = new DockerCmdExecFactoryImpl()__        _        return DockerClientBuilder.getInstance(config).withDockerCmdExecFactory(dockerClientFactory).build()__        _    };produces,a,link,docker,client,to,communicate,with,docker,param,docker,configuration,param,message,the,camel,message,return,a,docker,client,throws,docker,exception;public,static,docker,client,get,docker,client,docker,configuration,docker,configuration,message,message,throws,docker,exception,object,helper,not,null,docker,configuration,docker,configuration,integer,port,null,string,host,null,docker,client,client,null,port,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,host,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,int,uri,port,port,null,port,docker,configuration,get,default,port,string,uri,host,host,null,host,docker,configuration,get,default,host,string,username,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,string,password,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,string,email,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,integer,request,timeout,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,string,server,address,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,boolean,secure,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,string,cert,path,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,client,profile,client,profile,new,docker,client,profile,client,profile,set,host,uri,host,client,profile,set,port,uri,port,client,profile,set,email,email,client,profile,set,username,username,client,profile,set,password,password,client,profile,set,request,timeout,request,timeout,client,profile,set,server,address,server,address,client,profile,set,cert,path,cert,path,if,secure,null,secure,client,profile,set,secure,secure,client,docker,configuration,get,client,client,profile,if,client,null,return,client,docker,client,config,docker,client,config,builder,config,builder,new,docker,client,config,docker,client,config,builder,with,username,username,with,password,password,with,email,email,with,read,timeout,request,timeout,with,docker,cert,path,cert,path,with,uri,client,profile,to,url,docker,client,config,config,config,builder,build,docker,cmd,exec,factory,docker,client,factory,new,docker,cmd,exec,factory,impl,return,docker,client,builder,get,instance,config,with,docker,cmd,exec,factory,docker,client,factory,build
DockerClientFactory -> public static DockerClient getDockerClient(DockerConfiguration dockerConfiguration, Message message) throws DockerException;1424675020;Produces a {@link DockerClient} to communicate with Docker__@param dockerConfiguration_@param endpointClientProfile a {@link DockerClientProfile} specified on the Endpoint_@param message the Camel message_@return a DockerClient_@throws DockerException;public static DockerClient getDockerClient(DockerConfiguration dockerConfiguration, Message message) throws DockerException {_        _        ObjectHelper.notNull(dockerConfiguration, "dockerConfiguration")__        _        DockerClientProfile endpointClientProfile = dockerConfiguration.getClientProfile()__        _        DockerClientProfile clientProfile = null__        DockerClient client = null___        _        if(endpointClientProfile != null) {_            clientProfile = endpointClientProfile__        }_        else {_            _            clientProfile = new DockerClientProfile()__        _            Integer port = DockerHelper.getProperty(DockerConstants.DOCKER_PORT, dockerConfiguration, message, Integer.class, clientProfile.getPort())__            String host = DockerHelper.getProperty(DockerConstants.DOCKER_HOST, dockerConfiguration, message, String.class, clientProfile.getHost())__                       _            Integer maxTotalConnections = DockerHelper.getProperty(DockerConstants.DOCKER_MAX_TOTAL_CONNECTIONS, dockerConfiguration, message, Integer.class, clientProfile.getMaxTotalConnections())__            Integer maxPerRouteConnections = DockerHelper.getProperty(DockerConstants.DOCKER_MAX_PER_ROUTE_CONNECTIONS, dockerConfiguration, message, Integer.class, clientProfile.getMaxPerRouteConnections())__                _            String username = DockerHelper.getProperty(DockerConstants.DOCKER_USERNAME, dockerConfiguration, message, String.class, clientProfile.getUsername())__            String password = DockerHelper.getProperty(DockerConstants.DOCKER_PASSWORD, dockerConfiguration, message, String.class, clientProfile.getPassword())__            String email = DockerHelper.getProperty(DockerConstants.DOCKER_EMAIL, dockerConfiguration, message, String.class, clientProfile.getEmail())__            Integer requestTimeout = DockerHelper.getProperty(DockerConstants.DOCKER_API_REQUEST_TIMEOUT, dockerConfiguration, message, Integer.class, clientProfile.getRequestTimeout())__            String serverAddress = DockerHelper.getProperty(DockerConstants.DOCKER_SERVER_ADDRESS, dockerConfiguration, message, String.class, clientProfile.getServerAddress())__            String certPath = DockerHelper.getProperty(DockerConstants.DOCKER_CERT_PATH, dockerConfiguration, message, String.class, clientProfile.getCertPath())__            Boolean secure = DockerHelper.getProperty(DockerConstants.DOCKER_SECURE, dockerConfiguration, message, Boolean.class, clientProfile.isSecure())__            _            clientProfile.setHost(host)__            clientProfile.setPort(port)__            clientProfile.setEmail(email)__            clientProfile.setUsername(username)__            clientProfile.setPassword(password)__            clientProfile.setRequestTimeout(requestTimeout)__            clientProfile.setServerAddress(serverAddress)__            clientProfile.setCertPath(certPath)__            clientProfile.setMaxTotalConnections(maxTotalConnections)__            clientProfile.setMaxPerRouteConnections(maxPerRouteConnections)__            clientProfile.setSecure(secure)___        }__        client = dockerConfiguration.getClient(clientProfile)___        if (client != null) {_            return client__        }__        SSLConfig sslConfig__        if (clientProfile.isSecure() != null && clientProfile.isSecure()) {__            ObjectHelper.notNull(clientProfile.getCertPath(), "certPath must be specified in secure mode")___            sslConfig = new LocalDirectorySSLConfig(clientProfile.getCertPath())__        }_        else {_            _            _            sslConfig = new NoImplSslConfig()__        }_ _        DockerClientConfig.DockerClientConfigBuilder configBuilder = new DockerClientConfig.DockerClientConfigBuilder()_            .withUsername(clientProfile.getUsername()).withPassword(clientProfile.getPassword()).withEmail(clientProfile.getEmail()).withReadTimeout(clientProfile.getRequestTimeout())_            .withUri(clientProfile.toUrl()).withMaxPerRouteConnections(clientProfile.getMaxPerRouteConnections()).withMaxTotalConnections(clientProfile.getMaxTotalConnections())_            .withSSLConfig(sslConfig).withServerAddress(clientProfile.getServerAddress())__        _        if(clientProfile.getCertPath() != null) {_            configBuilder.withDockerCertPath(clientProfile.getCertPath())__        }__        DockerClientConfig config = configBuilder.build()__        _        DockerCmdExecFactory dockerClientFactory = new DockerCmdExecFactoryImpl()__        _        client = DockerClientBuilder.getInstance(config).withDockerCmdExecFactory(dockerClientFactory).build()__        _        dockerConfiguration.setClient(clientProfile, client)__        _        return client__        _    };produces,a,link,docker,client,to,communicate,with,docker,param,docker,configuration,param,endpoint,client,profile,a,link,docker,client,profile,specified,on,the,endpoint,param,message,the,camel,message,return,a,docker,client,throws,docker,exception;public,static,docker,client,get,docker,client,docker,configuration,docker,configuration,message,message,throws,docker,exception,object,helper,not,null,docker,configuration,docker,configuration,docker,client,profile,endpoint,client,profile,docker,configuration,get,client,profile,docker,client,profile,client,profile,null,docker,client,client,null,if,endpoint,client,profile,null,client,profile,endpoint,client,profile,else,client,profile,new,docker,client,profile,integer,port,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,client,profile,get,port,string,host,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,client,profile,get,host,integer,max,total,connections,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,client,profile,get,max,total,connections,integer,max,per,route,connections,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,client,profile,get,max,per,route,connections,string,username,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,client,profile,get,username,string,password,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,client,profile,get,password,string,email,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,client,profile,get,email,integer,request,timeout,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,client,profile,get,request,timeout,string,server,address,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,client,profile,get,server,address,string,cert,path,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,client,profile,get,cert,path,boolean,secure,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,client,profile,is,secure,client,profile,set,host,host,client,profile,set,port,port,client,profile,set,email,email,client,profile,set,username,username,client,profile,set,password,password,client,profile,set,request,timeout,request,timeout,client,profile,set,server,address,server,address,client,profile,set,cert,path,cert,path,client,profile,set,max,total,connections,max,total,connections,client,profile,set,max,per,route,connections,max,per,route,connections,client,profile,set,secure,secure,client,docker,configuration,get,client,client,profile,if,client,null,return,client,sslconfig,ssl,config,if,client,profile,is,secure,null,client,profile,is,secure,object,helper,not,null,client,profile,get,cert,path,cert,path,must,be,specified,in,secure,mode,ssl,config,new,local,directory,sslconfig,client,profile,get,cert,path,else,ssl,config,new,no,impl,ssl,config,docker,client,config,docker,client,config,builder,config,builder,new,docker,client,config,docker,client,config,builder,with,username,client,profile,get,username,with,password,client,profile,get,password,with,email,client,profile,get,email,with,read,timeout,client,profile,get,request,timeout,with,uri,client,profile,to,url,with,max,per,route,connections,client,profile,get,max,per,route,connections,with,max,total,connections,client,profile,get,max,total,connections,with,sslconfig,ssl,config,with,server,address,client,profile,get,server,address,if,client,profile,get,cert,path,null,config,builder,with,docker,cert,path,client,profile,get,cert,path,docker,client,config,config,config,builder,build,docker,cmd,exec,factory,docker,client,factory,new,docker,cmd,exec,factory,impl,client,docker,client,builder,get,instance,config,with,docker,cmd,exec,factory,docker,client,factory,build,docker,configuration,set,client,client,profile,client,return,client
DockerClientFactory -> public static DockerClient getDockerClient(DockerConfiguration dockerConfiguration, Message message) throws DockerException;1424675476;Produces a {@link DockerClient} to communicate with Docker;public static DockerClient getDockerClient(DockerConfiguration dockerConfiguration, Message message) throws DockerException {__        ObjectHelper.notNull(dockerConfiguration, "dockerConfiguration")___        DockerClientProfile endpointClientProfile = dockerConfiguration.getClientProfile()___        DockerClientProfile clientProfile__        DockerClient client___        _        if (endpointClientProfile != null) {_            clientProfile = endpointClientProfile__        } else {__            clientProfile = new DockerClientProfile()___            Integer port = DockerHelper.getProperty(DockerConstants.DOCKER_PORT, dockerConfiguration, message, Integer.class, clientProfile.getPort())__            String host = DockerHelper.getProperty(DockerConstants.DOCKER_HOST, dockerConfiguration, message, String.class, clientProfile.getHost())___            Integer maxTotalConnections = DockerHelper.getProperty(DockerConstants.DOCKER_MAX_TOTAL_CONNECTIONS, dockerConfiguration,_                    message, Integer.class, clientProfile.getMaxTotalConnections())__            Integer maxPerRouteConnections = DockerHelper.getProperty(DockerConstants.DOCKER_MAX_PER_ROUTE_CONNECTIONS, dockerConfiguration,_                    message, Integer.class, clientProfile.getMaxPerRouteConnections())___            String username = DockerHelper.getProperty(DockerConstants.DOCKER_USERNAME, dockerConfiguration, message, String.class, clientProfile.getUsername())__            String password = DockerHelper.getProperty(DockerConstants.DOCKER_PASSWORD, dockerConfiguration, message, String.class, clientProfile.getPassword())__            String email = DockerHelper.getProperty(DockerConstants.DOCKER_EMAIL, dockerConfiguration, message, String.class, clientProfile.getEmail())__            Integer requestTimeout = DockerHelper.getProperty(DockerConstants.DOCKER_API_REQUEST_TIMEOUT, dockerConfiguration, message, Integer.class, clientProfile.getRequestTimeout())__            String serverAddress = DockerHelper.getProperty(DockerConstants.DOCKER_SERVER_ADDRESS, dockerConfiguration, message, String.class, clientProfile.getServerAddress())__            String certPath = DockerHelper.getProperty(DockerConstants.DOCKER_CERT_PATH, dockerConfiguration, message, String.class, clientProfile.getCertPath())__            Boolean secure = DockerHelper.getProperty(DockerConstants.DOCKER_SECURE, dockerConfiguration, message, Boolean.class, clientProfile.isSecure())___            clientProfile.setHost(host)__            clientProfile.setPort(port)__            clientProfile.setEmail(email)__            clientProfile.setUsername(username)__            clientProfile.setPassword(password)__            clientProfile.setRequestTimeout(requestTimeout)__            clientProfile.setServerAddress(serverAddress)__            clientProfile.setCertPath(certPath)__            clientProfile.setMaxTotalConnections(maxTotalConnections)__            clientProfile.setMaxPerRouteConnections(maxPerRouteConnections)__            clientProfile.setSecure(secure)__        }__        client = dockerConfiguration.getClient(clientProfile)___        if (client != null) {_            return client__        }__        SSLConfig sslConfig__        if (clientProfile.isSecure() != null && clientProfile.isSecure()) {_            ObjectHelper.notNull(clientProfile.getCertPath(), "certPath must be specified in secure mode")__            sslConfig = new LocalDirectorySSLConfig(clientProfile.getCertPath())__        } else {_            _            _            sslConfig = new NoImplSslConfig()__        }__        DockerClientConfig.DockerClientConfigBuilder configBuilder = new DockerClientConfig.DockerClientConfigBuilder()_                .withUsername(clientProfile.getUsername()).withPassword(clientProfile.getPassword()).withEmail(clientProfile.getEmail()).withReadTimeout(clientProfile.getRequestTimeout())_                .withUri(clientProfile.toUrl()).withMaxPerRouteConnections(clientProfile.getMaxPerRouteConnections()).withMaxTotalConnections(clientProfile.getMaxTotalConnections())_                .withSSLConfig(sslConfig).withServerAddress(clientProfile.getServerAddress())___        if (clientProfile.getCertPath() != null) {_            configBuilder.withDockerCertPath(clientProfile.getCertPath())__        }__        DockerClientConfig config = configBuilder.build()__        DockerCmdExecFactory dockerClientFactory = new DockerCmdExecFactoryImpl()__        client = DockerClientBuilder.getInstance(config).withDockerCmdExecFactory(dockerClientFactory).build()__        dockerConfiguration.setClient(clientProfile, client)___        return client__    };produces,a,link,docker,client,to,communicate,with,docker;public,static,docker,client,get,docker,client,docker,configuration,docker,configuration,message,message,throws,docker,exception,object,helper,not,null,docker,configuration,docker,configuration,docker,client,profile,endpoint,client,profile,docker,configuration,get,client,profile,docker,client,profile,client,profile,docker,client,client,if,endpoint,client,profile,null,client,profile,endpoint,client,profile,else,client,profile,new,docker,client,profile,integer,port,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,client,profile,get,port,string,host,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,client,profile,get,host,integer,max,total,connections,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,client,profile,get,max,total,connections,integer,max,per,route,connections,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,client,profile,get,max,per,route,connections,string,username,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,client,profile,get,username,string,password,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,client,profile,get,password,string,email,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,client,profile,get,email,integer,request,timeout,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,client,profile,get,request,timeout,string,server,address,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,client,profile,get,server,address,string,cert,path,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,client,profile,get,cert,path,boolean,secure,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,client,profile,is,secure,client,profile,set,host,host,client,profile,set,port,port,client,profile,set,email,email,client,profile,set,username,username,client,profile,set,password,password,client,profile,set,request,timeout,request,timeout,client,profile,set,server,address,server,address,client,profile,set,cert,path,cert,path,client,profile,set,max,total,connections,max,total,connections,client,profile,set,max,per,route,connections,max,per,route,connections,client,profile,set,secure,secure,client,docker,configuration,get,client,client,profile,if,client,null,return,client,sslconfig,ssl,config,if,client,profile,is,secure,null,client,profile,is,secure,object,helper,not,null,client,profile,get,cert,path,cert,path,must,be,specified,in,secure,mode,ssl,config,new,local,directory,sslconfig,client,profile,get,cert,path,else,ssl,config,new,no,impl,ssl,config,docker,client,config,docker,client,config,builder,config,builder,new,docker,client,config,docker,client,config,builder,with,username,client,profile,get,username,with,password,client,profile,get,password,with,email,client,profile,get,email,with,read,timeout,client,profile,get,request,timeout,with,uri,client,profile,to,url,with,max,per,route,connections,client,profile,get,max,per,route,connections,with,max,total,connections,client,profile,get,max,total,connections,with,sslconfig,ssl,config,with,server,address,client,profile,get,server,address,if,client,profile,get,cert,path,null,config,builder,with,docker,cert,path,client,profile,get,cert,path,docker,client,config,config,config,builder,build,docker,cmd,exec,factory,docker,client,factory,new,docker,cmd,exec,factory,impl,client,docker,client,builder,get,instance,config,with,docker,cmd,exec,factory,docker,client,factory,build,docker,configuration,set,client,client,profile,client,return,client
DockerClientFactory -> public static DockerClient getDockerClient(DockerComponent dockerComponent, DockerConfiguration dockerConfiguration, Message message) throws DockerException;1424877876;Produces a {@link DockerClient} to communicate with Docker;public static DockerClient getDockerClient(DockerComponent dockerComponent, DockerConfiguration dockerConfiguration, Message message) throws DockerException {__        ObjectHelper.notNull(dockerConfiguration, "dockerConfiguration")___        DockerClientProfile clientProfile = new DockerClientProfile()___        Integer port = DockerHelper.getProperty(DockerConstants.DOCKER_PORT, dockerConfiguration, message, Integer.class, dockerConfiguration.getPort())__        String host = DockerHelper.getProperty(DockerConstants.DOCKER_HOST, dockerConfiguration, message, String.class, dockerConfiguration.getHost())___        Integer maxTotalConnections = DockerHelper.getProperty(DockerConstants.DOCKER_MAX_TOTAL_CONNECTIONS, dockerConfiguration, message, Integer.class,_                                                               dockerConfiguration.getMaxTotalConnections())__        Integer maxPerRouteConnections = DockerHelper.getProperty(DockerConstants.DOCKER_MAX_PER_ROUTE_CONNECTIONS, dockerConfiguration, message, Integer.class,_                                                                  dockerConfiguration.getMaxPerRouteConnections())___        String username = DockerHelper.getProperty(DockerConstants.DOCKER_USERNAME, dockerConfiguration, message, String.class, dockerConfiguration.getUsername())__        String password = DockerHelper.getProperty(DockerConstants.DOCKER_PASSWORD, dockerConfiguration, message, String.class, dockerConfiguration.getPassword())__        String email = DockerHelper.getProperty(DockerConstants.DOCKER_EMAIL, dockerConfiguration, message, String.class, dockerConfiguration.getEmail())__        Integer requestTimeout = DockerHelper.getProperty(DockerConstants.DOCKER_API_REQUEST_TIMEOUT, dockerConfiguration, message, Integer.class,_                                                          dockerConfiguration.getRequestTimeout())__        String serverAddress = DockerHelper.getProperty(DockerConstants.DOCKER_SERVER_ADDRESS, dockerConfiguration, message, String.class, dockerConfiguration.getServerAddress())__        String certPath = DockerHelper.getProperty(DockerConstants.DOCKER_CERT_PATH, dockerConfiguration, message, String.class, dockerConfiguration.getCertPath())__        Boolean secure = DockerHelper.getProperty(DockerConstants.DOCKER_SECURE, dockerConfiguration, message, Boolean.class, dockerConfiguration.isSecure())___        clientProfile.setHost(host)__        clientProfile.setPort(port)__        clientProfile.setEmail(email)__        clientProfile.setUsername(username)__        clientProfile.setPassword(password)__        clientProfile.setRequestTimeout(requestTimeout)__        clientProfile.setServerAddress(serverAddress)__        clientProfile.setCertPath(certPath)__        clientProfile.setMaxTotalConnections(maxTotalConnections)__        clientProfile.setMaxPerRouteConnections(maxPerRouteConnections)__        clientProfile.setSecure(secure)___        DockerClient client = dockerComponent.getClient(clientProfile)___        if (client != null) {_            return client__        }__        SSLConfig sslConfig__        if (clientProfile.isSecure() != null && clientProfile.isSecure()) {_            ObjectHelper.notNull(clientProfile.getCertPath(), "certPath must be specified in secure mode")__            sslConfig = new LocalDirectorySSLConfig(clientProfile.getCertPath())__        } else {_            _            _            sslConfig = new NoImplSslConfig()__        }__        DockerClientConfig.DockerClientConfigBuilder configBuilder = new DockerClientConfig.DockerClientConfigBuilder().withUsername(clientProfile.getUsername())_            .withPassword(clientProfile.getPassword()).withEmail(clientProfile.getEmail()).withReadTimeout(clientProfile.getRequestTimeout()).withUri(clientProfile.toUrl())_            .withMaxPerRouteConnections(clientProfile.getMaxPerRouteConnections()).withMaxTotalConnections(clientProfile.getMaxTotalConnections()).withSSLConfig(sslConfig)_            .withServerAddress(clientProfile.getServerAddress())___        if (clientProfile.getCertPath() != null) {_            configBuilder.withDockerCertPath(clientProfile.getCertPath())__        }__        DockerClientConfig config = configBuilder.build()__        DockerCmdExecFactory dockerClientFactory = new DockerCmdExecFactoryImpl()__        client = DockerClientBuilder.getInstance(config).withDockerCmdExecFactory(dockerClientFactory).build()__        dockerComponent.setClient(clientProfile, client)___        return client__    };produces,a,link,docker,client,to,communicate,with,docker;public,static,docker,client,get,docker,client,docker,component,docker,component,docker,configuration,docker,configuration,message,message,throws,docker,exception,object,helper,not,null,docker,configuration,docker,configuration,docker,client,profile,client,profile,new,docker,client,profile,integer,port,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,port,string,host,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,host,integer,max,total,connections,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,max,total,connections,integer,max,per,route,connections,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,max,per,route,connections,string,username,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,username,string,password,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,password,string,email,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,email,integer,request,timeout,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,request,timeout,string,server,address,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,server,address,string,cert,path,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,cert,path,boolean,secure,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,docker,configuration,is,secure,client,profile,set,host,host,client,profile,set,port,port,client,profile,set,email,email,client,profile,set,username,username,client,profile,set,password,password,client,profile,set,request,timeout,request,timeout,client,profile,set,server,address,server,address,client,profile,set,cert,path,cert,path,client,profile,set,max,total,connections,max,total,connections,client,profile,set,max,per,route,connections,max,per,route,connections,client,profile,set,secure,secure,docker,client,client,docker,component,get,client,client,profile,if,client,null,return,client,sslconfig,ssl,config,if,client,profile,is,secure,null,client,profile,is,secure,object,helper,not,null,client,profile,get,cert,path,cert,path,must,be,specified,in,secure,mode,ssl,config,new,local,directory,sslconfig,client,profile,get,cert,path,else,ssl,config,new,no,impl,ssl,config,docker,client,config,docker,client,config,builder,config,builder,new,docker,client,config,docker,client,config,builder,with,username,client,profile,get,username,with,password,client,profile,get,password,with,email,client,profile,get,email,with,read,timeout,client,profile,get,request,timeout,with,uri,client,profile,to,url,with,max,per,route,connections,client,profile,get,max,per,route,connections,with,max,total,connections,client,profile,get,max,total,connections,with,sslconfig,ssl,config,with,server,address,client,profile,get,server,address,if,client,profile,get,cert,path,null,config,builder,with,docker,cert,path,client,profile,get,cert,path,docker,client,config,config,config,builder,build,docker,cmd,exec,factory,docker,client,factory,new,docker,cmd,exec,factory,impl,client,docker,client,builder,get,instance,config,with,docker,cmd,exec,factory,docker,client,factory,build,docker,component,set,client,client,profile,client,return,client
DockerClientFactory -> public static DockerClient getDockerClient(DockerComponent dockerComponent, DockerConfiguration dockerConfiguration, Message message) throws DockerException;1429805156;Produces a {@link DockerClient} to communicate with Docker;public static DockerClient getDockerClient(DockerComponent dockerComponent, DockerConfiguration dockerConfiguration, Message message) throws DockerException {__        ObjectHelper.notNull(dockerConfiguration, "dockerConfiguration")___        DockerClientProfile clientProfile = new DockerClientProfile()___        Integer port = DockerHelper.getProperty(DockerConstants.DOCKER_PORT, dockerConfiguration, message, Integer.class, dockerConfiguration.getPort())__        String host = DockerHelper.getProperty(DockerConstants.DOCKER_HOST, dockerConfiguration, message, String.class, dockerConfiguration.getHost())___        Integer maxTotalConnections = DockerHelper.getProperty(DockerConstants.DOCKER_MAX_TOTAL_CONNECTIONS, dockerConfiguration, message, Integer.class,_                                                               dockerConfiguration.getMaxTotalConnections())__        Integer maxPerRouteConnections = DockerHelper.getProperty(DockerConstants.DOCKER_MAX_PER_ROUTE_CONNECTIONS, dockerConfiguration, message, Integer.class,_                                                                  dockerConfiguration.getMaxPerRouteConnections())___        String username = DockerHelper.getProperty(DockerConstants.DOCKER_USERNAME, dockerConfiguration, message, String.class, dockerConfiguration.getUsername())__        String password = DockerHelper.getProperty(DockerConstants.DOCKER_PASSWORD, dockerConfiguration, message, String.class, dockerConfiguration.getPassword())__        String email = DockerHelper.getProperty(DockerConstants.DOCKER_EMAIL, dockerConfiguration, message, String.class, dockerConfiguration.getEmail())__        Integer requestTimeout = DockerHelper.getProperty(DockerConstants.DOCKER_API_REQUEST_TIMEOUT, dockerConfiguration, message, Integer.class,_                                                          dockerConfiguration.getRequestTimeout())__        String serverAddress = DockerHelper.getProperty(DockerConstants.DOCKER_SERVER_ADDRESS, dockerConfiguration, message, String.class, dockerConfiguration.getServerAddress())__        String certPath = DockerHelper.getProperty(DockerConstants.DOCKER_CERT_PATH, dockerConfiguration, message, String.class, dockerConfiguration.getCertPath())__        Boolean secure = DockerHelper.getProperty(DockerConstants.DOCKER_SECURE, dockerConfiguration, message, Boolean.class, dockerConfiguration.isSecure())__        Boolean loggingFilter = DockerHelper.getProperty(DockerConstants.DOCKER_LOGGING_FILTER, dockerConfiguration, message, Boolean.class, dockerConfiguration.isLoggingFilterEnabled())__        Boolean followRedirectFilter = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_REDIRECT_FILTER, dockerConfiguration, message, _                Boolean.class, dockerConfiguration.isFollowRedirectFilterEnabled())__        _        clientProfile.setHost(host)__        clientProfile.setPort(port)__        clientProfile.setEmail(email)__        clientProfile.setUsername(username)__        clientProfile.setPassword(password)__        clientProfile.setRequestTimeout(requestTimeout)__        clientProfile.setServerAddress(serverAddress)__        clientProfile.setCertPath(certPath)__        clientProfile.setMaxTotalConnections(maxTotalConnections)__        clientProfile.setMaxPerRouteConnections(maxPerRouteConnections)__        clientProfile.setSecure(secure)__        clientProfile.setFollowRedirectFilter(followRedirectFilter)__        clientProfile.setLoggingFilter(loggingFilter)___        DockerClient client = dockerComponent.getClient(clientProfile)___        if (client != null) {_            return client__        }__        SSLConfig sslConfig__        if (clientProfile.isSecure() != null && clientProfile.isSecure()) {_            ObjectHelper.notNull(clientProfile.getCertPath(), "certPath must be specified in secure mode")__            sslConfig = new LocalDirectorySSLConfig(clientProfile.getCertPath())__        } else {_            _            _            sslConfig = new NoImplSslConfig()__        }__        DockerClientConfig.DockerClientConfigBuilder configBuilder = new DockerClientConfig.DockerClientConfigBuilder().withUsername(clientProfile.getUsername())_            .withPassword(clientProfile.getPassword()).withEmail(clientProfile.getEmail()).withReadTimeout(clientProfile.getRequestTimeout()).withUri(clientProfile.toUrl())_            .withMaxPerRouteConnections(clientProfile.getMaxPerRouteConnections()).withMaxTotalConnections(clientProfile.getMaxTotalConnections()).withSSLConfig(sslConfig)_            .withServerAddress(clientProfile.getServerAddress())___        if (clientProfile.getCertPath() != null) {_            configBuilder.withDockerCertPath(clientProfile.getCertPath())__        }_        _        if (clientProfile.isFollowRedirectFilterEnabled() != null && clientProfile.isFollowRedirectFilterEnabled()) {_            configBuilder.withFollowRedirectsFilter(clientProfile.isFollowRedirectFilterEnabled())__        }__        if (clientProfile.isLoggingFilterEnabled() != null && clientProfile.isLoggingFilterEnabled()) {_            configBuilder.withLoggingFilter(clientProfile.isLoggingFilterEnabled())__        }_        _        DockerClientConfig config = configBuilder.build()__        DockerCmdExecFactory dockerClientFactory = new DockerCmdExecFactoryImpl()__        client = DockerClientBuilder.getInstance(config).withDockerCmdExecFactory(dockerClientFactory).build()__        dockerComponent.setClient(clientProfile, client)___        return client__    };produces,a,link,docker,client,to,communicate,with,docker;public,static,docker,client,get,docker,client,docker,component,docker,component,docker,configuration,docker,configuration,message,message,throws,docker,exception,object,helper,not,null,docker,configuration,docker,configuration,docker,client,profile,client,profile,new,docker,client,profile,integer,port,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,port,string,host,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,host,integer,max,total,connections,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,max,total,connections,integer,max,per,route,connections,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,max,per,route,connections,string,username,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,username,string,password,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,password,string,email,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,email,integer,request,timeout,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,request,timeout,string,server,address,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,server,address,string,cert,path,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,cert,path,boolean,secure,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,docker,configuration,is,secure,boolean,logging,filter,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,docker,configuration,is,logging,filter,enabled,boolean,follow,redirect,filter,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,docker,configuration,is,follow,redirect,filter,enabled,client,profile,set,host,host,client,profile,set,port,port,client,profile,set,email,email,client,profile,set,username,username,client,profile,set,password,password,client,profile,set,request,timeout,request,timeout,client,profile,set,server,address,server,address,client,profile,set,cert,path,cert,path,client,profile,set,max,total,connections,max,total,connections,client,profile,set,max,per,route,connections,max,per,route,connections,client,profile,set,secure,secure,client,profile,set,follow,redirect,filter,follow,redirect,filter,client,profile,set,logging,filter,logging,filter,docker,client,client,docker,component,get,client,client,profile,if,client,null,return,client,sslconfig,ssl,config,if,client,profile,is,secure,null,client,profile,is,secure,object,helper,not,null,client,profile,get,cert,path,cert,path,must,be,specified,in,secure,mode,ssl,config,new,local,directory,sslconfig,client,profile,get,cert,path,else,ssl,config,new,no,impl,ssl,config,docker,client,config,docker,client,config,builder,config,builder,new,docker,client,config,docker,client,config,builder,with,username,client,profile,get,username,with,password,client,profile,get,password,with,email,client,profile,get,email,with,read,timeout,client,profile,get,request,timeout,with,uri,client,profile,to,url,with,max,per,route,connections,client,profile,get,max,per,route,connections,with,max,total,connections,client,profile,get,max,total,connections,with,sslconfig,ssl,config,with,server,address,client,profile,get,server,address,if,client,profile,get,cert,path,null,config,builder,with,docker,cert,path,client,profile,get,cert,path,if,client,profile,is,follow,redirect,filter,enabled,null,client,profile,is,follow,redirect,filter,enabled,config,builder,with,follow,redirects,filter,client,profile,is,follow,redirect,filter,enabled,if,client,profile,is,logging,filter,enabled,null,client,profile,is,logging,filter,enabled,config,builder,with,logging,filter,client,profile,is,logging,filter,enabled,docker,client,config,config,config,builder,build,docker,cmd,exec,factory,docker,client,factory,new,docker,cmd,exec,factory,impl,client,docker,client,builder,get,instance,config,with,docker,cmd,exec,factory,docker,client,factory,build,docker,component,set,client,client,profile,client,return,client
DockerClientFactory -> @SuppressWarnings("resource")     public static DockerClient getDockerClient(DockerComponent dockerComponent, DockerConfiguration dockerConfiguration, Message message) throws DockerException;1474362454;Produces a {@link DockerClient} to communicate with Docker;@SuppressWarnings("resource")_    public static DockerClient getDockerClient(DockerComponent dockerComponent, DockerConfiguration dockerConfiguration, Message message) throws DockerException {__        ObjectHelper.notNull(dockerConfiguration, "dockerConfiguration")___        DockerClientProfile clientProfile = new DockerClientProfile()___        Integer port = DockerHelper.getProperty(DockerConstants.DOCKER_PORT, dockerConfiguration, message, Integer.class, dockerConfiguration.getPort())__        String host = DockerHelper.getProperty(DockerConstants.DOCKER_HOST, dockerConfiguration, message, String.class, dockerConfiguration.getHost())___        Integer maxTotalConnections = DockerHelper.getProperty(DockerConstants.DOCKER_MAX_TOTAL_CONNECTIONS, dockerConfiguration, message, Integer.class,_                                                               dockerConfiguration.getMaxTotalConnections())__        Integer maxPerRouteConnections = DockerHelper.getProperty(DockerConstants.DOCKER_MAX_PER_ROUTE_CONNECTIONS, dockerConfiguration, message, Integer.class,_                                                                  dockerConfiguration.getMaxPerRouteConnections())___        String username = DockerHelper.getProperty(DockerConstants.DOCKER_USERNAME, dockerConfiguration, message, String.class, dockerConfiguration.getUsername())__        String password = DockerHelper.getProperty(DockerConstants.DOCKER_PASSWORD, dockerConfiguration, message, String.class, dockerConfiguration.getPassword())__        String email = DockerHelper.getProperty(DockerConstants.DOCKER_EMAIL, dockerConfiguration, message, String.class, dockerConfiguration.getEmail())__        Integer requestTimeout = DockerHelper.getProperty(DockerConstants.DOCKER_API_REQUEST_TIMEOUT, dockerConfiguration, message, Integer.class,_                                                          dockerConfiguration.getRequestTimeout())__        String serverAddress = DockerHelper.getProperty(DockerConstants.DOCKER_SERVER_ADDRESS, dockerConfiguration, message, String.class, dockerConfiguration.getServerAddress())__        String certPath = DockerHelper.getProperty(DockerConstants.DOCKER_CERT_PATH, dockerConfiguration, message, String.class, dockerConfiguration.getCertPath())__        Boolean secure = DockerHelper.getProperty(DockerConstants.DOCKER_SECURE, dockerConfiguration, message, Boolean.class, dockerConfiguration.isSecure())__        Boolean loggingFilter = DockerHelper.getProperty(DockerConstants.DOCKER_LOGGING_FILTER, dockerConfiguration, message, Boolean.class,_                                                         dockerConfiguration.isLoggingFilterEnabled())__        Boolean followRedirectFilter = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_REDIRECT_FILTER, dockerConfiguration, message, Boolean.class,_                                                                dockerConfiguration.isFollowRedirectFilterEnabled())__        Boolean tlsVerify = DockerHelper.getProperty(DockerConstants.DOCKER_TLSVERIFY, dockerConfiguration, message, Boolean.class, dockerConfiguration.isTlsVerify())___        clientProfile.setHost(host)__        clientProfile.setPort(port)__        clientProfile.setEmail(email)__        clientProfile.setUsername(username)__        clientProfile.setPassword(password)__        clientProfile.setRequestTimeout(requestTimeout)__        clientProfile.setServerAddress(serverAddress)__        clientProfile.setCertPath(certPath)__        clientProfile.setMaxTotalConnections(maxTotalConnections)__        clientProfile.setMaxPerRouteConnections(maxPerRouteConnections)__        clientProfile.setSecure(secure)__        clientProfile.setFollowRedirectFilter(followRedirectFilter)__        clientProfile.setLoggingFilter(loggingFilter)__        clientProfile.setTlsVerify(tlsVerify)___        DockerClient dockerClient = dockerComponent.getClient(clientProfile)___        if (dockerClient != null) {_            return dockerClient__        }__        SSLConfig sslConfig__        if (clientProfile.isSecure() != null && clientProfile.isSecure()) {_            ObjectHelper.notNull(clientProfile.getCertPath(), "certPath must be specified in secure mode")__            sslConfig = new LocalDirectorySSLConfig(clientProfile.getCertPath())__        } else {_            _            _            sslConfig = new NoImplSslConfig()__        }__        DefaultDockerClientConfig.Builder configBuilder = DefaultDockerClientConfig.createDefaultConfigBuilder().withDockerHost(clientProfile.toUrl())_            .withDockerTlsVerify(clientProfile.isTlsVerify()).withRegistryUsername(clientProfile.getUsername()).withRegistryPassword(clientProfile.getPassword())_            .withRegistryEmail(clientProfile.getEmail()).withRegistryUrl(clientProfile.getServerAddress()).withCustomSslConfig(sslConfig)___        if (clientProfile.getCertPath() != null) {_            configBuilder.withDockerCertPath(clientProfile.getCertPath())__        }__        __        DockerCmdExecFactory dockerCmdExecFactory = new JerseyDockerCmdExecFactory().withReadTimeout(clientProfile.getRequestTimeout())_            .withConnectTimeout(clientProfile.getRequestTimeout()).withMaxTotalConnections(clientProfile.getMaxTotalConnections())_            .withMaxPerRouteConnections(clientProfile.getMaxPerRouteConnections())___        dockerClient = DockerClientBuilder.getInstance(configBuilder).withDockerCmdExecFactory(dockerCmdExecFactory).build()___        dockerComponent.setClient(clientProfile, dockerClient)___        return dockerClient__    };produces,a,link,docker,client,to,communicate,with,docker;suppress,warnings,resource,public,static,docker,client,get,docker,client,docker,component,docker,component,docker,configuration,docker,configuration,message,message,throws,docker,exception,object,helper,not,null,docker,configuration,docker,configuration,docker,client,profile,client,profile,new,docker,client,profile,integer,port,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,port,string,host,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,host,integer,max,total,connections,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,max,total,connections,integer,max,per,route,connections,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,max,per,route,connections,string,username,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,username,string,password,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,password,string,email,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,email,integer,request,timeout,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,request,timeout,string,server,address,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,server,address,string,cert,path,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,cert,path,boolean,secure,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,docker,configuration,is,secure,boolean,logging,filter,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,docker,configuration,is,logging,filter,enabled,boolean,follow,redirect,filter,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,docker,configuration,is,follow,redirect,filter,enabled,boolean,tls,verify,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,docker,configuration,is,tls,verify,client,profile,set,host,host,client,profile,set,port,port,client,profile,set,email,email,client,profile,set,username,username,client,profile,set,password,password,client,profile,set,request,timeout,request,timeout,client,profile,set,server,address,server,address,client,profile,set,cert,path,cert,path,client,profile,set,max,total,connections,max,total,connections,client,profile,set,max,per,route,connections,max,per,route,connections,client,profile,set,secure,secure,client,profile,set,follow,redirect,filter,follow,redirect,filter,client,profile,set,logging,filter,logging,filter,client,profile,set,tls,verify,tls,verify,docker,client,docker,client,docker,component,get,client,client,profile,if,docker,client,null,return,docker,client,sslconfig,ssl,config,if,client,profile,is,secure,null,client,profile,is,secure,object,helper,not,null,client,profile,get,cert,path,cert,path,must,be,specified,in,secure,mode,ssl,config,new,local,directory,sslconfig,client,profile,get,cert,path,else,ssl,config,new,no,impl,ssl,config,default,docker,client,config,builder,config,builder,default,docker,client,config,create,default,config,builder,with,docker,host,client,profile,to,url,with,docker,tls,verify,client,profile,is,tls,verify,with,registry,username,client,profile,get,username,with,registry,password,client,profile,get,password,with,registry,email,client,profile,get,email,with,registry,url,client,profile,get,server,address,with,custom,ssl,config,ssl,config,if,client,profile,get,cert,path,null,config,builder,with,docker,cert,path,client,profile,get,cert,path,docker,cmd,exec,factory,docker,cmd,exec,factory,new,jersey,docker,cmd,exec,factory,with,read,timeout,client,profile,get,request,timeout,with,connect,timeout,client,profile,get,request,timeout,with,max,total,connections,client,profile,get,max,total,connections,with,max,per,route,connections,client,profile,get,max,per,route,connections,docker,client,docker,client,builder,get,instance,config,builder,with,docker,cmd,exec,factory,docker,cmd,exec,factory,build,docker,component,set,client,client,profile,docker,client,return,docker,client
DockerClientFactory -> @SuppressWarnings("resource")     public static DockerClient getDockerClient(DockerComponent dockerComponent, DockerConfiguration dockerConfiguration, Message message) throws DockerException;1474362454;Produces a {@link DockerClient} to communicate with Docker;@SuppressWarnings("resource")_    public static DockerClient getDockerClient(DockerComponent dockerComponent, DockerConfiguration dockerConfiguration, Message message) throws DockerException {__        ObjectHelper.notNull(dockerConfiguration, "dockerConfiguration")___        DockerClientProfile clientProfile = new DockerClientProfile()___        Integer port = DockerHelper.getProperty(DockerConstants.DOCKER_PORT, dockerConfiguration, message, Integer.class, dockerConfiguration.getPort())__        String host = DockerHelper.getProperty(DockerConstants.DOCKER_HOST, dockerConfiguration, message, String.class, dockerConfiguration.getHost())___        Integer maxTotalConnections = DockerHelper.getProperty(DockerConstants.DOCKER_MAX_TOTAL_CONNECTIONS, dockerConfiguration, message, Integer.class,_                                                               dockerConfiguration.getMaxTotalConnections())__        Integer maxPerRouteConnections = DockerHelper.getProperty(DockerConstants.DOCKER_MAX_PER_ROUTE_CONNECTIONS, dockerConfiguration, message, Integer.class,_                                                                  dockerConfiguration.getMaxPerRouteConnections())___        String username = DockerHelper.getProperty(DockerConstants.DOCKER_USERNAME, dockerConfiguration, message, String.class, dockerConfiguration.getUsername())__        String password = DockerHelper.getProperty(DockerConstants.DOCKER_PASSWORD, dockerConfiguration, message, String.class, dockerConfiguration.getPassword())__        String email = DockerHelper.getProperty(DockerConstants.DOCKER_EMAIL, dockerConfiguration, message, String.class, dockerConfiguration.getEmail())__        Integer requestTimeout = DockerHelper.getProperty(DockerConstants.DOCKER_API_REQUEST_TIMEOUT, dockerConfiguration, message, Integer.class,_                                                          dockerConfiguration.getRequestTimeout())__        String serverAddress = DockerHelper.getProperty(DockerConstants.DOCKER_SERVER_ADDRESS, dockerConfiguration, message, String.class, dockerConfiguration.getServerAddress())__        String certPath = DockerHelper.getProperty(DockerConstants.DOCKER_CERT_PATH, dockerConfiguration, message, String.class, dockerConfiguration.getCertPath())__        Boolean secure = DockerHelper.getProperty(DockerConstants.DOCKER_SECURE, dockerConfiguration, message, Boolean.class, dockerConfiguration.isSecure())__        Boolean tlsVerify = DockerHelper.getProperty(DockerConstants.DOCKER_TLSVERIFY, dockerConfiguration, message, Boolean.class, dockerConfiguration.isTlsVerify())___        clientProfile.setHost(host)__        clientProfile.setPort(port)__        clientProfile.setEmail(email)__        clientProfile.setUsername(username)__        clientProfile.setPassword(password)__        clientProfile.setRequestTimeout(requestTimeout)__        clientProfile.setServerAddress(serverAddress)__        clientProfile.setCertPath(certPath)__        clientProfile.setMaxTotalConnections(maxTotalConnections)__        clientProfile.setMaxPerRouteConnections(maxPerRouteConnections)__        clientProfile.setSecure(secure)__        clientProfile.setTlsVerify(tlsVerify)___        DockerClient dockerClient = dockerComponent.getClient(clientProfile)___        if (dockerClient != null) {_            return dockerClient__        }__        SSLConfig sslConfig__        if (clientProfile.isSecure() != null && clientProfile.isSecure()) {_            ObjectHelper.notNull(clientProfile.getCertPath(), "certPath must be specified in secure mode")__            sslConfig = new LocalDirectorySSLConfig(clientProfile.getCertPath())__        } else {_            _            _            sslConfig = new NoImplSslConfig()__        }__        DefaultDockerClientConfig.Builder configBuilder = DefaultDockerClientConfig.createDefaultConfigBuilder().withDockerHost(clientProfile.toUrl())_            .withDockerTlsVerify(clientProfile.isTlsVerify()).withRegistryUsername(clientProfile.getUsername()).withRegistryPassword(clientProfile.getPassword())_            .withRegistryEmail(clientProfile.getEmail()).withRegistryUrl(clientProfile.getServerAddress()).withCustomSslConfig(sslConfig)___        if (clientProfile.getCertPath() != null) {_            configBuilder.withDockerCertPath(clientProfile.getCertPath())__        }__        __        DockerCmdExecFactory dockerCmdExecFactory = new JerseyDockerCmdExecFactory().withReadTimeout(clientProfile.getRequestTimeout())_            .withConnectTimeout(clientProfile.getRequestTimeout()).withMaxTotalConnections(clientProfile.getMaxTotalConnections())_            .withMaxPerRouteConnections(clientProfile.getMaxPerRouteConnections())___        dockerClient = DockerClientBuilder.getInstance(configBuilder).withDockerCmdExecFactory(dockerCmdExecFactory).build()___        dockerComponent.setClient(clientProfile, dockerClient)___        return dockerClient__    };produces,a,link,docker,client,to,communicate,with,docker;suppress,warnings,resource,public,static,docker,client,get,docker,client,docker,component,docker,component,docker,configuration,docker,configuration,message,message,throws,docker,exception,object,helper,not,null,docker,configuration,docker,configuration,docker,client,profile,client,profile,new,docker,client,profile,integer,port,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,port,string,host,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,host,integer,max,total,connections,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,max,total,connections,integer,max,per,route,connections,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,max,per,route,connections,string,username,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,username,string,password,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,password,string,email,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,email,integer,request,timeout,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,request,timeout,string,server,address,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,server,address,string,cert,path,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,cert,path,boolean,secure,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,docker,configuration,is,secure,boolean,tls,verify,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,docker,configuration,is,tls,verify,client,profile,set,host,host,client,profile,set,port,port,client,profile,set,email,email,client,profile,set,username,username,client,profile,set,password,password,client,profile,set,request,timeout,request,timeout,client,profile,set,server,address,server,address,client,profile,set,cert,path,cert,path,client,profile,set,max,total,connections,max,total,connections,client,profile,set,max,per,route,connections,max,per,route,connections,client,profile,set,secure,secure,client,profile,set,tls,verify,tls,verify,docker,client,docker,client,docker,component,get,client,client,profile,if,docker,client,null,return,docker,client,sslconfig,ssl,config,if,client,profile,is,secure,null,client,profile,is,secure,object,helper,not,null,client,profile,get,cert,path,cert,path,must,be,specified,in,secure,mode,ssl,config,new,local,directory,sslconfig,client,profile,get,cert,path,else,ssl,config,new,no,impl,ssl,config,default,docker,client,config,builder,config,builder,default,docker,client,config,create,default,config,builder,with,docker,host,client,profile,to,url,with,docker,tls,verify,client,profile,is,tls,verify,with,registry,username,client,profile,get,username,with,registry,password,client,profile,get,password,with,registry,email,client,profile,get,email,with,registry,url,client,profile,get,server,address,with,custom,ssl,config,ssl,config,if,client,profile,get,cert,path,null,config,builder,with,docker,cert,path,client,profile,get,cert,path,docker,cmd,exec,factory,docker,cmd,exec,factory,new,jersey,docker,cmd,exec,factory,with,read,timeout,client,profile,get,request,timeout,with,connect,timeout,client,profile,get,request,timeout,with,max,total,connections,client,profile,get,max,total,connections,with,max,per,route,connections,client,profile,get,max,per,route,connections,docker,client,docker,client,builder,get,instance,config,builder,with,docker,cmd,exec,factory,docker,cmd,exec,factory,build,docker,component,set,client,client,profile,docker,client,return,docker,client
DockerClientFactory -> @SuppressWarnings("resource")     public static DockerClient getDockerClient(DockerComponent dockerComponent, DockerConfiguration dockerConfiguration, Message message) throws DockerException;1474362454;Produces a {@link DockerClient} to communicate with Docker;@SuppressWarnings("resource")_    public static DockerClient getDockerClient(DockerComponent dockerComponent, DockerConfiguration dockerConfiguration, Message message) throws DockerException {__        ObjectHelper.notNull(dockerConfiguration, "dockerConfiguration")___        DockerClientProfile clientProfile = new DockerClientProfile()___        Integer port = DockerHelper.getProperty(DockerConstants.DOCKER_PORT, dockerConfiguration, message, Integer.class, dockerConfiguration.getPort())__        String host = DockerHelper.getProperty(DockerConstants.DOCKER_HOST, dockerConfiguration, message, String.class, dockerConfiguration.getHost())___        Integer maxTotalConnections = DockerHelper.getProperty(DockerConstants.DOCKER_MAX_TOTAL_CONNECTIONS, dockerConfiguration, message, Integer.class,_                                                               dockerConfiguration.getMaxTotalConnections())__        Integer maxPerRouteConnections = DockerHelper.getProperty(DockerConstants.DOCKER_MAX_PER_ROUTE_CONNECTIONS, dockerConfiguration, message, Integer.class,_                                                                  dockerConfiguration.getMaxPerRouteConnections())___        String username = DockerHelper.getProperty(DockerConstants.DOCKER_USERNAME, dockerConfiguration, message, String.class, dockerConfiguration.getUsername())__        String password = DockerHelper.getProperty(DockerConstants.DOCKER_PASSWORD, dockerConfiguration, message, String.class, dockerConfiguration.getPassword())__        String email = DockerHelper.getProperty(DockerConstants.DOCKER_EMAIL, dockerConfiguration, message, String.class, dockerConfiguration.getEmail())__        Integer requestTimeout = DockerHelper.getProperty(DockerConstants.DOCKER_API_REQUEST_TIMEOUT, dockerConfiguration, message, Integer.class,_                                                          dockerConfiguration.getRequestTimeout())__        String serverAddress = DockerHelper.getProperty(DockerConstants.DOCKER_SERVER_ADDRESS, dockerConfiguration, message, String.class, dockerConfiguration.getServerAddress())__        String certPath = DockerHelper.getProperty(DockerConstants.DOCKER_CERT_PATH, dockerConfiguration, message, String.class, dockerConfiguration.getCertPath())__        Boolean secure = DockerHelper.getProperty(DockerConstants.DOCKER_SECURE, dockerConfiguration, message, Boolean.class, dockerConfiguration.isSecure())__        Boolean tlsVerify = DockerHelper.getProperty(DockerConstants.DOCKER_TLSVERIFY, dockerConfiguration, message, Boolean.class, dockerConfiguration.isTlsVerify())__        Boolean socket = DockerHelper.getProperty(DockerConstants.DOCKER_SOCKET_ENABLED, dockerConfiguration, message, Boolean.class, dockerConfiguration.isSocket())___        clientProfile.setHost(host)__        clientProfile.setPort(port)__        clientProfile.setEmail(email)__        clientProfile.setUsername(username)__        clientProfile.setPassword(password)__        clientProfile.setRequestTimeout(requestTimeout)__        clientProfile.setServerAddress(serverAddress)__        clientProfile.setCertPath(certPath)__        clientProfile.setMaxTotalConnections(maxTotalConnections)__        clientProfile.setMaxPerRouteConnections(maxPerRouteConnections)__        clientProfile.setSecure(secure)__        clientProfile.setTlsVerify(tlsVerify)__        clientProfile.setSocket(socket)___        DockerClient dockerClient = dockerComponent.getClient(clientProfile)___        if (dockerClient != null) {_            return dockerClient__        }__        SSLConfig sslConfig__        if (clientProfile.isSecure() != null && clientProfile.isSecure()) {_            ObjectHelper.notNull(clientProfile.getCertPath(), "certPath must be specified in secure mode")__            sslConfig = new LocalDirectorySSLConfig(clientProfile.getCertPath())__        } else {_            _            _            sslConfig = new NoImplSslConfig()__        }__        DefaultDockerClientConfig.Builder configBuilder = DefaultDockerClientConfig.createDefaultConfigBuilder().withDockerHost(clientProfile.toUrl())_            .withDockerTlsVerify(clientProfile.isTlsVerify()).withRegistryUsername(clientProfile.getUsername()).withRegistryPassword(clientProfile.getPassword())_            .withRegistryEmail(clientProfile.getEmail()).withRegistryUrl(clientProfile.getServerAddress()).withCustomSslConfig(sslConfig)___        if (clientProfile.getCertPath() != null) {_            configBuilder.withDockerCertPath(clientProfile.getCertPath())__        }__        __        DockerCmdExecFactory dockerCmdExecFactory = new JerseyDockerCmdExecFactory().withReadTimeout(clientProfile.getRequestTimeout())_            .withConnectTimeout(clientProfile.getRequestTimeout()).withMaxTotalConnections(clientProfile.getMaxTotalConnections())_            .withMaxPerRouteConnections(clientProfile.getMaxPerRouteConnections())___        dockerClient = DockerClientBuilder.getInstance(configBuilder).withDockerCmdExecFactory(dockerCmdExecFactory).build()___        dockerComponent.setClient(clientProfile, dockerClient)___        return dockerClient__    };produces,a,link,docker,client,to,communicate,with,docker;suppress,warnings,resource,public,static,docker,client,get,docker,client,docker,component,docker,component,docker,configuration,docker,configuration,message,message,throws,docker,exception,object,helper,not,null,docker,configuration,docker,configuration,docker,client,profile,client,profile,new,docker,client,profile,integer,port,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,port,string,host,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,host,integer,max,total,connections,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,max,total,connections,integer,max,per,route,connections,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,max,per,route,connections,string,username,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,username,string,password,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,password,string,email,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,email,integer,request,timeout,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,request,timeout,string,server,address,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,server,address,string,cert,path,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,cert,path,boolean,secure,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,docker,configuration,is,secure,boolean,tls,verify,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,docker,configuration,is,tls,verify,boolean,socket,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,docker,configuration,is,socket,client,profile,set,host,host,client,profile,set,port,port,client,profile,set,email,email,client,profile,set,username,username,client,profile,set,password,password,client,profile,set,request,timeout,request,timeout,client,profile,set,server,address,server,address,client,profile,set,cert,path,cert,path,client,profile,set,max,total,connections,max,total,connections,client,profile,set,max,per,route,connections,max,per,route,connections,client,profile,set,secure,secure,client,profile,set,tls,verify,tls,verify,client,profile,set,socket,socket,docker,client,docker,client,docker,component,get,client,client,profile,if,docker,client,null,return,docker,client,sslconfig,ssl,config,if,client,profile,is,secure,null,client,profile,is,secure,object,helper,not,null,client,profile,get,cert,path,cert,path,must,be,specified,in,secure,mode,ssl,config,new,local,directory,sslconfig,client,profile,get,cert,path,else,ssl,config,new,no,impl,ssl,config,default,docker,client,config,builder,config,builder,default,docker,client,config,create,default,config,builder,with,docker,host,client,profile,to,url,with,docker,tls,verify,client,profile,is,tls,verify,with,registry,username,client,profile,get,username,with,registry,password,client,profile,get,password,with,registry,email,client,profile,get,email,with,registry,url,client,profile,get,server,address,with,custom,ssl,config,ssl,config,if,client,profile,get,cert,path,null,config,builder,with,docker,cert,path,client,profile,get,cert,path,docker,cmd,exec,factory,docker,cmd,exec,factory,new,jersey,docker,cmd,exec,factory,with,read,timeout,client,profile,get,request,timeout,with,connect,timeout,client,profile,get,request,timeout,with,max,total,connections,client,profile,get,max,total,connections,with,max,per,route,connections,client,profile,get,max,per,route,connections,docker,client,docker,client,builder,get,instance,config,builder,with,docker,cmd,exec,factory,docker,cmd,exec,factory,build,docker,component,set,client,client,profile,docker,client,return,docker,client
DockerClientFactory -> @SuppressWarnings("resource")     public static DockerClient getDockerClient(DockerComponent dockerComponent, DockerConfiguration dockerConfiguration, Message message) throws DockerException;1488877173;Produces a {@link DockerClient} to communicate with Docker;@SuppressWarnings("resource")_    public static DockerClient getDockerClient(DockerComponent dockerComponent, DockerConfiguration dockerConfiguration, Message message) throws DockerException {__        ObjectHelper.notNull(dockerConfiguration, "dockerConfiguration")___        Integer port = DockerHelper.getProperty(DockerConstants.DOCKER_PORT, dockerConfiguration, message, Integer.class, dockerConfiguration.getPort())__        String host = DockerHelper.getProperty(DockerConstants.DOCKER_HOST, dockerConfiguration, message, String.class, dockerConfiguration.getHost())___        Integer maxTotalConnections = DockerHelper.getProperty(DockerConstants.DOCKER_MAX_TOTAL_CONNECTIONS, dockerConfiguration, message, Integer.class,_                                                               dockerConfiguration.getMaxTotalConnections())__        Integer maxPerRouteConnections = DockerHelper.getProperty(DockerConstants.DOCKER_MAX_PER_ROUTE_CONNECTIONS, dockerConfiguration, message, Integer.class,_                                                                  dockerConfiguration.getMaxPerRouteConnections())___        String username = DockerHelper.getProperty(DockerConstants.DOCKER_USERNAME, dockerConfiguration, message, String.class, dockerConfiguration.getUsername())__        String password = DockerHelper.getProperty(DockerConstants.DOCKER_PASSWORD, dockerConfiguration, message, String.class, dockerConfiguration.getPassword())__        String email = DockerHelper.getProperty(DockerConstants.DOCKER_EMAIL, dockerConfiguration, message, String.class, dockerConfiguration.getEmail())__        Integer requestTimeout = DockerHelper.getProperty(DockerConstants.DOCKER_API_REQUEST_TIMEOUT, dockerConfiguration, message, Integer.class,_                                                          dockerConfiguration.getRequestTimeout())__        String serverAddress = DockerHelper.getProperty(DockerConstants.DOCKER_SERVER_ADDRESS, dockerConfiguration, message, String.class, dockerConfiguration.getServerAddress())__        String certPath = DockerHelper.getProperty(DockerConstants.DOCKER_CERT_PATH, dockerConfiguration, message, String.class, dockerConfiguration.getCertPath())__        Boolean secure = DockerHelper.getProperty(DockerConstants.DOCKER_SECURE, dockerConfiguration, message, Boolean.class, dockerConfiguration.isSecure())__        Boolean tlsVerify = DockerHelper.getProperty(DockerConstants.DOCKER_TLSVERIFY, dockerConfiguration, message, Boolean.class, dockerConfiguration.isTlsVerify())__        Boolean socket = DockerHelper.getProperty(DockerConstants.DOCKER_SOCKET_ENABLED, dockerConfiguration, message, Boolean.class, dockerConfiguration.isSocket())___        String cmdExecFactory = DockerHelper.getProperty(DockerConstants.DOCKER_CMD_EXEC_FACTORY,_            dockerConfiguration, message, String.class, dockerConfiguration.getCmdExecFactory())___        DockerClientProfile clientProfile = new DockerClientProfile()__        clientProfile.setHost(host)__        clientProfile.setPort(port)__        clientProfile.setEmail(email)__        clientProfile.setUsername(username)__        clientProfile.setPassword(password)__        clientProfile.setRequestTimeout(requestTimeout)__        clientProfile.setServerAddress(serverAddress)__        clientProfile.setCertPath(certPath)__        clientProfile.setMaxTotalConnections(maxTotalConnections)__        clientProfile.setMaxPerRouteConnections(maxPerRouteConnections)__        clientProfile.setSecure(secure)__        clientProfile.setTlsVerify(tlsVerify)__        clientProfile.setSocket(socket)__        clientProfile.setCmdExecFactory(cmdExecFactory)___        DockerClient dockerClient = dockerComponent.getClient(clientProfile)___        if (dockerClient != null) {_            return dockerClient__        }__        SSLConfig sslConfig__        if (clientProfile.isSecure() != null && clientProfile.isSecure()) {_            ObjectHelper.notNull(clientProfile.getCertPath(), "certPath must be specified in secure mode")__            sslConfig = new LocalDirectorySSLConfig(clientProfile.getCertPath())__        } else {_            _            _            sslConfig = new NoImplSslConfig()__        }__        DefaultDockerClientConfig.Builder configBuilder = DefaultDockerClientConfig.createDefaultConfigBuilder()_            .withDockerHost(clientProfile.toUrl())_            .withDockerTlsVerify(clientProfile.isTlsVerify())_            .withRegistryUsername(clientProfile.getUsername())_            .withRegistryPassword(clientProfile.getPassword())_            .withRegistryEmail(clientProfile.getEmail())_            .withRegistryUrl(clientProfile.getServerAddress())_            .withCustomSslConfig(sslConfig)___        if (clientProfile.getCertPath() != null) {_            configBuilder.withDockerCertPath(clientProfile.getCertPath())__        }__        CamelContext camelContext = dockerComponent.getCamelContext()__        try {_            DockerCmdExecFactory factory = null___            if (cmdExecFactory.equals(JerseyDockerCmdExecFactory.class.getName())) {_                factory = new JerseyDockerCmdExecFactory()__                ((JerseyDockerCmdExecFactory) factory)_                    .withReadTimeout(clientProfile.getRequestTimeout())_                    .withConnectTimeout(clientProfile.getRequestTimeout())_                    .withMaxTotalConnections(clientProfile.getMaxTotalConnections())_                    .withMaxPerRouteConnections(clientProfile.getMaxPerRouteConnections())__            } else if (cmdExecFactory.equals(NettyDockerCmdExecFactory.class.getName())) {_                factory = new NettyDockerCmdExecFactory()__                ((NettyDockerCmdExecFactory) factory)_                    .withConnectTimeout(clientProfile.getRequestTimeout())__            } else {_                Class<DockerCmdExecFactory> clazz = camelContext.getClassResolver().resolveMandatoryClass(cmdExecFactory, DockerCmdExecFactory.class)__                factory = ObjectHelper.newInstance(clazz)__            }__            dockerClient = DockerClientBuilder.getInstance(configBuilder)_                .withDockerCmdExecFactory(factory)_                .build()___            dockerComponent.setClient(clientProfile, dockerClient)___            return dockerClient__        } catch (ClassNotFoundException e) {_            throw new IllegalStateException("Unable to resolve DockerCmdExecFactory class: " + cmdExecFactory, e)__        }_    };produces,a,link,docker,client,to,communicate,with,docker;suppress,warnings,resource,public,static,docker,client,get,docker,client,docker,component,docker,component,docker,configuration,docker,configuration,message,message,throws,docker,exception,object,helper,not,null,docker,configuration,docker,configuration,integer,port,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,port,string,host,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,host,integer,max,total,connections,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,max,total,connections,integer,max,per,route,connections,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,max,per,route,connections,string,username,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,username,string,password,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,password,string,email,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,email,integer,request,timeout,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,request,timeout,string,server,address,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,server,address,string,cert,path,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,cert,path,boolean,secure,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,docker,configuration,is,secure,boolean,tls,verify,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,docker,configuration,is,tls,verify,boolean,socket,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,docker,configuration,is,socket,string,cmd,exec,factory,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,cmd,exec,factory,docker,client,profile,client,profile,new,docker,client,profile,client,profile,set,host,host,client,profile,set,port,port,client,profile,set,email,email,client,profile,set,username,username,client,profile,set,password,password,client,profile,set,request,timeout,request,timeout,client,profile,set,server,address,server,address,client,profile,set,cert,path,cert,path,client,profile,set,max,total,connections,max,total,connections,client,profile,set,max,per,route,connections,max,per,route,connections,client,profile,set,secure,secure,client,profile,set,tls,verify,tls,verify,client,profile,set,socket,socket,client,profile,set,cmd,exec,factory,cmd,exec,factory,docker,client,docker,client,docker,component,get,client,client,profile,if,docker,client,null,return,docker,client,sslconfig,ssl,config,if,client,profile,is,secure,null,client,profile,is,secure,object,helper,not,null,client,profile,get,cert,path,cert,path,must,be,specified,in,secure,mode,ssl,config,new,local,directory,sslconfig,client,profile,get,cert,path,else,ssl,config,new,no,impl,ssl,config,default,docker,client,config,builder,config,builder,default,docker,client,config,create,default,config,builder,with,docker,host,client,profile,to,url,with,docker,tls,verify,client,profile,is,tls,verify,with,registry,username,client,profile,get,username,with,registry,password,client,profile,get,password,with,registry,email,client,profile,get,email,with,registry,url,client,profile,get,server,address,with,custom,ssl,config,ssl,config,if,client,profile,get,cert,path,null,config,builder,with,docker,cert,path,client,profile,get,cert,path,camel,context,camel,context,docker,component,get,camel,context,try,docker,cmd,exec,factory,factory,null,if,cmd,exec,factory,equals,jersey,docker,cmd,exec,factory,class,get,name,factory,new,jersey,docker,cmd,exec,factory,jersey,docker,cmd,exec,factory,factory,with,read,timeout,client,profile,get,request,timeout,with,connect,timeout,client,profile,get,request,timeout,with,max,total,connections,client,profile,get,max,total,connections,with,max,per,route,connections,client,profile,get,max,per,route,connections,else,if,cmd,exec,factory,equals,netty,docker,cmd,exec,factory,class,get,name,factory,new,netty,docker,cmd,exec,factory,netty,docker,cmd,exec,factory,factory,with,connect,timeout,client,profile,get,request,timeout,else,class,docker,cmd,exec,factory,clazz,camel,context,get,class,resolver,resolve,mandatory,class,cmd,exec,factory,docker,cmd,exec,factory,class,factory,object,helper,new,instance,clazz,docker,client,docker,client,builder,get,instance,config,builder,with,docker,cmd,exec,factory,factory,build,docker,component,set,client,client,profile,docker,client,return,docker,client,catch,class,not,found,exception,e,throw,new,illegal,state,exception,unable,to,resolve,docker,cmd,exec,factory,class,cmd,exec,factory,e
DockerClientFactory -> @SuppressWarnings("resource")     public static DockerClient getDockerClient(DockerComponent dockerComponent, DockerConfiguration dockerConfiguration, Message message) throws DockerException;1540108163;Produces a {@link DockerClient} to communicate with Docker;@SuppressWarnings("resource")_    public static DockerClient getDockerClient(DockerComponent dockerComponent, DockerConfiguration dockerConfiguration, Message message) throws DockerException {__        org.apache.camel.util.ObjectHelper.notNull(dockerConfiguration, "dockerConfiguration")___        Integer port = DockerHelper.getProperty(DockerConstants.DOCKER_PORT, dockerConfiguration, message, Integer.class, dockerConfiguration.getPort())__        String host = DockerHelper.getProperty(DockerConstants.DOCKER_HOST, dockerConfiguration, message, String.class, dockerConfiguration.getHost())___        Integer maxTotalConnections = DockerHelper.getProperty(DockerConstants.DOCKER_MAX_TOTAL_CONNECTIONS, dockerConfiguration, message, Integer.class,_                                                               dockerConfiguration.getMaxTotalConnections())__        Integer maxPerRouteConnections = DockerHelper.getProperty(DockerConstants.DOCKER_MAX_PER_ROUTE_CONNECTIONS, dockerConfiguration, message, Integer.class,_                                                                  dockerConfiguration.getMaxPerRouteConnections())___        String username = DockerHelper.getProperty(DockerConstants.DOCKER_USERNAME, dockerConfiguration, message, String.class, dockerConfiguration.getUsername())__        String password = DockerHelper.getProperty(DockerConstants.DOCKER_PASSWORD, dockerConfiguration, message, String.class, dockerConfiguration.getPassword())__        String email = DockerHelper.getProperty(DockerConstants.DOCKER_EMAIL, dockerConfiguration, message, String.class, dockerConfiguration.getEmail())__        Integer requestTimeout = DockerHelper.getProperty(DockerConstants.DOCKER_API_REQUEST_TIMEOUT, dockerConfiguration, message, Integer.class,_                                                          dockerConfiguration.getRequestTimeout())__        String serverAddress = DockerHelper.getProperty(DockerConstants.DOCKER_SERVER_ADDRESS, dockerConfiguration, message, String.class, dockerConfiguration.getServerAddress())__        String certPath = DockerHelper.getProperty(DockerConstants.DOCKER_CERT_PATH, dockerConfiguration, message, String.class, dockerConfiguration.getCertPath())__        Boolean secure = DockerHelper.getProperty(DockerConstants.DOCKER_SECURE, dockerConfiguration, message, Boolean.class, dockerConfiguration.isSecure())__        Boolean tlsVerify = DockerHelper.getProperty(DockerConstants.DOCKER_TLSVERIFY, dockerConfiguration, message, Boolean.class, dockerConfiguration.isTlsVerify())__        Boolean socket = DockerHelper.getProperty(DockerConstants.DOCKER_SOCKET_ENABLED, dockerConfiguration, message, Boolean.class, dockerConfiguration.isSocket())___        String cmdExecFactory = DockerHelper.getProperty(DockerConstants.DOCKER_CMD_EXEC_FACTORY,_            dockerConfiguration, message, String.class, dockerConfiguration.getCmdExecFactory())___        DockerClientProfile clientProfile = new DockerClientProfile()__        clientProfile.setHost(host)__        clientProfile.setPort(port)__        clientProfile.setEmail(email)__        clientProfile.setUsername(username)__        clientProfile.setPassword(password)__        clientProfile.setRequestTimeout(requestTimeout)__        clientProfile.setServerAddress(serverAddress)__        clientProfile.setCertPath(certPath)__        clientProfile.setMaxTotalConnections(maxTotalConnections)__        clientProfile.setMaxPerRouteConnections(maxPerRouteConnections)__        clientProfile.setSecure(secure)__        clientProfile.setTlsVerify(tlsVerify)__        clientProfile.setSocket(socket)__        clientProfile.setCmdExecFactory(cmdExecFactory)___        DockerClient dockerClient = dockerComponent.getClient(clientProfile)___        if (dockerClient != null) {_            return dockerClient__        }__        SSLConfig sslConfig__        if (clientProfile.isSecure() != null && clientProfile.isSecure()) {_            org.apache.camel.util.ObjectHelper.notNull(clientProfile.getCertPath(), "certPath must be specified in secure mode")__            sslConfig = new LocalDirectorySSLConfig(clientProfile.getCertPath())__        } else {_            _            _            sslConfig = new NoImplSslConfig()__        }__        DefaultDockerClientConfig.Builder configBuilder = DefaultDockerClientConfig.createDefaultConfigBuilder()_            .withDockerHost(clientProfile.toUrl())_            .withDockerTlsVerify(clientProfile.isTlsVerify())_            .withRegistryUsername(clientProfile.getUsername())_            .withRegistryPassword(clientProfile.getPassword())_            .withRegistryEmail(clientProfile.getEmail())_            .withRegistryUrl(clientProfile.getServerAddress())_            .withCustomSslConfig(sslConfig)___        if (clientProfile.getCertPath() != null) {_            configBuilder.withDockerCertPath(clientProfile.getCertPath())__        }__        CamelContext camelContext = dockerComponent.getCamelContext()__        try {_            DockerCmdExecFactory factory = null___            if (cmdExecFactory.equals(JerseyDockerCmdExecFactory.class.getName())) {_                factory = new JerseyDockerCmdExecFactory()__                ((JerseyDockerCmdExecFactory) factory)_                    .withReadTimeout(clientProfile.getRequestTimeout())_                    .withConnectTimeout(clientProfile.getRequestTimeout())_                    .withMaxTotalConnections(clientProfile.getMaxTotalConnections())_                    .withMaxPerRouteConnections(clientProfile.getMaxPerRouteConnections())__            } else if (cmdExecFactory.equals(NettyDockerCmdExecFactory.class.getName())) {_                factory = new NettyDockerCmdExecFactory()__                ((NettyDockerCmdExecFactory) factory)_                    .withConnectTimeout(clientProfile.getRequestTimeout())__            } else {_                Class<DockerCmdExecFactory> clazz = camelContext.getClassResolver().resolveMandatoryClass(cmdExecFactory, DockerCmdExecFactory.class)__                factory = ObjectHelper.newInstance(clazz)__            }__            dockerClient = DockerClientBuilder.getInstance(configBuilder)_                .withDockerCmdExecFactory(factory)_                .build()___            dockerComponent.setClient(clientProfile, dockerClient)___            return dockerClient__        } catch (ClassNotFoundException e) {_            throw new IllegalStateException("Unable to resolve DockerCmdExecFactory class: " + cmdExecFactory, e)__        }_    };produces,a,link,docker,client,to,communicate,with,docker;suppress,warnings,resource,public,static,docker,client,get,docker,client,docker,component,docker,component,docker,configuration,docker,configuration,message,message,throws,docker,exception,org,apache,camel,util,object,helper,not,null,docker,configuration,docker,configuration,integer,port,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,port,string,host,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,host,integer,max,total,connections,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,max,total,connections,integer,max,per,route,connections,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,max,per,route,connections,string,username,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,username,string,password,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,password,string,email,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,email,integer,request,timeout,docker,helper,get,property,docker,constants,docker,configuration,message,integer,class,docker,configuration,get,request,timeout,string,server,address,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,server,address,string,cert,path,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,cert,path,boolean,secure,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,docker,configuration,is,secure,boolean,tls,verify,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,docker,configuration,is,tls,verify,boolean,socket,docker,helper,get,property,docker,constants,docker,configuration,message,boolean,class,docker,configuration,is,socket,string,cmd,exec,factory,docker,helper,get,property,docker,constants,docker,configuration,message,string,class,docker,configuration,get,cmd,exec,factory,docker,client,profile,client,profile,new,docker,client,profile,client,profile,set,host,host,client,profile,set,port,port,client,profile,set,email,email,client,profile,set,username,username,client,profile,set,password,password,client,profile,set,request,timeout,request,timeout,client,profile,set,server,address,server,address,client,profile,set,cert,path,cert,path,client,profile,set,max,total,connections,max,total,connections,client,profile,set,max,per,route,connections,max,per,route,connections,client,profile,set,secure,secure,client,profile,set,tls,verify,tls,verify,client,profile,set,socket,socket,client,profile,set,cmd,exec,factory,cmd,exec,factory,docker,client,docker,client,docker,component,get,client,client,profile,if,docker,client,null,return,docker,client,sslconfig,ssl,config,if,client,profile,is,secure,null,client,profile,is,secure,org,apache,camel,util,object,helper,not,null,client,profile,get,cert,path,cert,path,must,be,specified,in,secure,mode,ssl,config,new,local,directory,sslconfig,client,profile,get,cert,path,else,ssl,config,new,no,impl,ssl,config,default,docker,client,config,builder,config,builder,default,docker,client,config,create,default,config,builder,with,docker,host,client,profile,to,url,with,docker,tls,verify,client,profile,is,tls,verify,with,registry,username,client,profile,get,username,with,registry,password,client,profile,get,password,with,registry,email,client,profile,get,email,with,registry,url,client,profile,get,server,address,with,custom,ssl,config,ssl,config,if,client,profile,get,cert,path,null,config,builder,with,docker,cert,path,client,profile,get,cert,path,camel,context,camel,context,docker,component,get,camel,context,try,docker,cmd,exec,factory,factory,null,if,cmd,exec,factory,equals,jersey,docker,cmd,exec,factory,class,get,name,factory,new,jersey,docker,cmd,exec,factory,jersey,docker,cmd,exec,factory,factory,with,read,timeout,client,profile,get,request,timeout,with,connect,timeout,client,profile,get,request,timeout,with,max,total,connections,client,profile,get,max,total,connections,with,max,per,route,connections,client,profile,get,max,per,route,connections,else,if,cmd,exec,factory,equals,netty,docker,cmd,exec,factory,class,get,name,factory,new,netty,docker,cmd,exec,factory,netty,docker,cmd,exec,factory,factory,with,connect,timeout,client,profile,get,request,timeout,else,class,docker,cmd,exec,factory,clazz,camel,context,get,class,resolver,resolve,mandatory,class,cmd,exec,factory,docker,cmd,exec,factory,class,factory,object,helper,new,instance,clazz,docker,client,docker,client,builder,get,instance,config,builder,with,docker,cmd,exec,factory,factory,build,docker,component,set,client,client,profile,docker,client,return,docker,client,catch,class,not,found,exception,e,throw,new,illegal,state,exception,unable,to,resolve,docker,cmd,exec,factory,class,cmd,exec,factory,e
