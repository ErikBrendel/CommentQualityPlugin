# id;timestamp;commentText;codeText;commentWords;codeWords
DockerHelper -> public static String[] parseDelimitedStringHeader(String headerName, Message message);1424675020;@param headerName name of the header_@param message the Camel message_@return;public static String[] parseDelimitedStringHeader(String headerName, Message message) {__        Object header = message.getHeader(headerName)__        _        if (header != null) {_            _            if (header instanceof String) {_                return ((String) header).split(STRING_DELIMITER)__            }_            _            if (header instanceof String[]) {_                return (String[]) header__            }_        }__        return null___    };param,header,name,name,of,the,header,param,message,the,camel,message,return;public,static,string,parse,delimited,string,header,string,header,name,message,message,object,header,message,get,header,header,name,if,header,null,if,header,instanceof,string,return,string,header,split,if,header,instanceof,string,return,string,header,return,null
DockerHelper -> public static String[] parseDelimitedStringHeader(String headerName, Message message);1424675476;@param headerName name of the header_@param message    the Camel message_@return;public static String[] parseDelimitedStringHeader(String headerName, Message message) {__        Object header = message.getHeader(headerName)___        if (header != null) {__            if (header instanceof String) {_                return ((String) header).split(STRING_DELIMITER)__            }__            if (header instanceof String[]) {_                return (String[]) header__            }_        }__        return null___    };param,header,name,name,of,the,header,param,message,the,camel,message,return;public,static,string,parse,delimited,string,header,string,header,name,message,message,object,header,message,get,header,header,name,if,header,null,if,header,instanceof,string,return,string,header,split,if,header,instanceof,string,return,string,header,return,null
DockerHelper -> public static String[] parseDelimitedStringHeader(String headerName, Message message);1474362454;@param headerName name of the header_@param message    the Camel message_@return;public static String[] parseDelimitedStringHeader(String headerName, Message message) {__        Object header = message.getHeader(headerName)___        if (header != null) {__            if (header instanceof String) {_                return ((String) header).split(STRING_DELIMITER)__            }__            if (header instanceof String[]) {_                return (String[]) header__            }_        }__        return null___    };param,header,name,name,of,the,header,param,message,the,camel,message,return;public,static,string,parse,delimited,string,header,string,header,name,message,message,object,header,message,get,header,header,name,if,header,null,if,header,instanceof,string,return,string,header,split,if,header,instanceof,string,return,string,header,return,null
DockerHelper -> public static String[] parseDelimitedStringHeader(String headerName, Message message);1474362454;@param headerName name of the header_@param message the Camel message_@return;public static String[] parseDelimitedStringHeader(String headerName, Message message) {__        Object header = message.getHeader(headerName)___        if (header != null) {__            if (header instanceof String) {_                return ((String)header).split(STRING_DELIMITER)__            }__            if (header instanceof String[]) {_                return (String[])header__            }_        }__        return null___    };param,header,name,name,of,the,header,param,message,the,camel,message,return;public,static,string,parse,delimited,string,header,string,header,name,message,message,object,header,message,get,header,header,name,if,header,null,if,header,instanceof,string,return,string,header,split,if,header,instanceof,string,return,string,header,return,null
DockerHelper -> public static String[] parseDelimitedStringHeader(String headerName, Message message);1488877173;@param headerName name of the header_@param message the Camel message_@return;public static String[] parseDelimitedStringHeader(String headerName, Message message) {__        Object header = message.getHeader(headerName)___        if (header != null) {__            if (header instanceof String) {_                return ((String)header).split(STRING_DELIMITER)__            }__            if (header instanceof String[]) {_                return (String[])header__            }_        }__        return null__    };param,header,name,name,of,the,header,param,message,the,camel,message,return;public,static,string,parse,delimited,string,header,string,header,name,message,message,object,header,message,get,header,header,name,if,header,null,if,header,instanceof,string,return,string,header,split,if,header,instanceof,string,return,string,header,return,null
DockerHelper -> public static String[] parseDelimitedStringHeader(String headerName, Message message);1506506021;@param headerName name of the header_@param message the Camel message_@return;public static String[] parseDelimitedStringHeader(String headerName, Message message) {__        Object header = message.getHeader(headerName)___        if (header != null) {__            if (header instanceof String) {_                return ((String)header).split(STRING_DELIMITER)__            }__            if (header instanceof String[]) {_                return (String[])header__            }_        }__        return null__    };param,header,name,name,of,the,header,param,message,the,camel,message,return;public,static,string,parse,delimited,string,header,string,header,name,message,message,object,header,message,get,header,header,name,if,header,null,if,header,instanceof,string,return,string,header,split,if,header,instanceof,string,return,string,header,return,null
DockerHelper -> public static String[] parseDelimitedStringHeader(String headerName, Message message);1540108158;@param headerName name of the header_@param message the Camel message_@return;public static String[] parseDelimitedStringHeader(String headerName, Message message) {__        Object header = message.getHeader(headerName)___        if (header != null) {__            if (header instanceof String) {_                return ((String)header).split(STRING_DELIMITER)__            }__            if (header instanceof String[]) {_                return (String[])header__            }_        }__        return null__    };param,header,name,name,of,the,header,param,message,the,camel,message,return;public,static,string,parse,delimited,string,header,string,header,name,message,message,object,header,message,get,header,header,name,if,header,null,if,header,instanceof,string,return,string,header,split,if,header,instanceof,string,return,string,header,return,null
DockerHelper -> @SuppressWarnings("unchecked")     public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz, T defaultValue);1424675020;Attempts to locate a given property name within a URI parameter or the message header._A found value in a message header takes precedence over a URI parameter. Returns a_default value if given__@param name_@param configuration_@param message_@param clazz_@param defaultValue_@return;@SuppressWarnings("unchecked")_    public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz, T defaultValue) {_        _       _        if (message != null) {_            T headerProperty = message.getHeader(name, clazz)__            _            if (headerProperty != null) {_                return headerProperty__            }_        }_        _        Object prop = configuration.getParameters().get(transformFromHeaderName(name))__        _        if (prop != null) {_            _            if (prop.getClass().isAssignableFrom(clazz)) {_                return (T) prop__            } else if (Integer.class == clazz) {_                return (T) Integer.valueOf((String)prop)__            } else if (Boolean.class == clazz) {_                return (T)BooleanUtils.toBooleanObject((String)prop, "true", "false", "null")__            }_        }_        else if (defaultValue != null) {_            return defaultValue__        }_        _        return null__        _        _    };attempts,to,locate,a,given,property,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,returns,a,default,value,if,given,param,name,param,configuration,param,message,param,clazz,param,default,value,return;suppress,warnings,unchecked,public,static,t,t,get,property,string,name,docker,configuration,configuration,message,message,class,t,clazz,t,default,value,if,message,null,t,header,property,message,get,header,name,clazz,if,header,property,null,return,header,property,object,prop,configuration,get,parameters,get,transform,from,header,name,name,if,prop,null,if,prop,get,class,is,assignable,from,clazz,return,t,prop,else,if,integer,class,clazz,return,t,integer,value,of,string,prop,else,if,boolean,class,clazz,return,t,boolean,utils,to,boolean,object,string,prop,true,false,null,else,if,default,value,null,return,default,value,return,null
DockerHelper -> @SuppressWarnings("unchecked")     public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz, T defaultValue);1424675476;Attempts to locate a given property name within a URI parameter or the message header._A found value in a message header takes precedence over a URI parameter. Returns a_default value if given__@param name_@param configuration_@param message_@param clazz_@param defaultValue_@return;@SuppressWarnings("unchecked")_    public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz, T defaultValue) {_        __        if (message != null) {_            T headerProperty = message.getHeader(name, clazz)___            if (headerProperty != null) {_                return headerProperty__            }_        }__        Object prop = configuration.getParameters().get(transformFromHeaderName(name))___        if (prop != null) {__            if (prop.getClass().isAssignableFrom(clazz)) {_                return (T) prop__            } else if (Integer.class == clazz) {_                return (T) Integer.valueOf((String) prop)__            } else if (Boolean.class == clazz) {_                return (T) BooleanUtils.toBooleanObject((String) prop, "true", "false", "null")__            }_        } else if (defaultValue != null) {_            return defaultValue__        }__        return null____    };attempts,to,locate,a,given,property,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,returns,a,default,value,if,given,param,name,param,configuration,param,message,param,clazz,param,default,value,return;suppress,warnings,unchecked,public,static,t,t,get,property,string,name,docker,configuration,configuration,message,message,class,t,clazz,t,default,value,if,message,null,t,header,property,message,get,header,name,clazz,if,header,property,null,return,header,property,object,prop,configuration,get,parameters,get,transform,from,header,name,name,if,prop,null,if,prop,get,class,is,assignable,from,clazz,return,t,prop,else,if,integer,class,clazz,return,t,integer,value,of,string,prop,else,if,boolean,class,clazz,return,t,boolean,utils,to,boolean,object,string,prop,true,false,null,else,if,default,value,null,return,default,value,return,null
DockerHelper -> @SuppressWarnings("unchecked")     public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz, T defaultValue);1474362454;Attempts to locate a given property name within a URI parameter or the message header._A found value in a message header takes precedence over a URI parameter. Returns a_default value if given__@param name_@param configuration_@param message_@param clazz_@param defaultValue_@return;@SuppressWarnings("unchecked")_    public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz, T defaultValue) {_        __        if (message != null) {_            T headerProperty = message.getHeader(name, clazz)___            if (headerProperty != null) {_                return headerProperty__            }_        }__        Object prop = configuration.getParameters().get(transformFromHeaderName(name))___        if (prop != null) {__            if (prop.getClass().isAssignableFrom(clazz)) {_                return (T) prop__            } else if (Integer.class == clazz) {_                return (T) Integer.valueOf((String) prop)__            } else if (Boolean.class == clazz) {_                return (T) BooleanUtils.toBooleanObject((String) prop, "true", "false", "null")__            }_        } else if (defaultValue != null) {_            return defaultValue__        }__        return null____    };attempts,to,locate,a,given,property,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,returns,a,default,value,if,given,param,name,param,configuration,param,message,param,clazz,param,default,value,return;suppress,warnings,unchecked,public,static,t,t,get,property,string,name,docker,configuration,configuration,message,message,class,t,clazz,t,default,value,if,message,null,t,header,property,message,get,header,name,clazz,if,header,property,null,return,header,property,object,prop,configuration,get,parameters,get,transform,from,header,name,name,if,prop,null,if,prop,get,class,is,assignable,from,clazz,return,t,prop,else,if,integer,class,clazz,return,t,integer,value,of,string,prop,else,if,boolean,class,clazz,return,t,boolean,utils,to,boolean,object,string,prop,true,false,null,else,if,default,value,null,return,default,value,return,null
DockerHelper -> @SuppressWarnings("unchecked")     public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz, T defaultValue);1474362454;Attempts to locate a given property name within a URI parameter or the_message header. A found value in a message header takes precedence over a_URI parameter. Returns a default value if given__@param name_@param configuration_@param message_@param clazz_@param defaultValue_@return;@SuppressWarnings("unchecked")_    public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz, T defaultValue) {_        _        __        if (message != null) {_            T headerProperty = message.getHeader(name, clazz)___            if (headerProperty != null) {_                return headerProperty__            }_        }__        Object prop = configuration.getParameters().get(transformFromHeaderName(name))___        if (prop != null) {__            if (prop.getClass().isAssignableFrom(clazz)) {_                return (T)prop__            } else if (Integer.class == clazz) {_                return (T)Integer.valueOf((String)prop)__            } else if (Boolean.class == clazz) {_                return (T)BooleanUtils.toBooleanObject((String)prop, "true", "false", "null")__            }_        } else if (defaultValue != null) {_            return defaultValue__        }__        return null___    };attempts,to,locate,a,given,property,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,returns,a,default,value,if,given,param,name,param,configuration,param,message,param,clazz,param,default,value,return;suppress,warnings,unchecked,public,static,t,t,get,property,string,name,docker,configuration,configuration,message,message,class,t,clazz,t,default,value,if,message,null,t,header,property,message,get,header,name,clazz,if,header,property,null,return,header,property,object,prop,configuration,get,parameters,get,transform,from,header,name,name,if,prop,null,if,prop,get,class,is,assignable,from,clazz,return,t,prop,else,if,integer,class,clazz,return,t,integer,value,of,string,prop,else,if,boolean,class,clazz,return,t,boolean,utils,to,boolean,object,string,prop,true,false,null,else,if,default,value,null,return,default,value,return,null
DockerHelper -> @SuppressWarnings("unchecked")     public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz, T defaultValue);1488877173;Attempts to locate a given property name within a URI parameter or the_message header. A found value in a message header takes precedence over a_URI parameter. Returns a default value if given__@param name_@param configuration_@param message_@param clazz_@param defaultValue_@return;@SuppressWarnings("unchecked")_    public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz, T defaultValue) {_        _        __        if (message != null) {_            T headerProperty = message.getHeader(name, clazz)___            if (headerProperty != null) {_                return headerProperty__            }_        }__        Object prop = configuration.getParameters().get(transformFromHeaderName(name))___        if (prop != null) {__            if (prop.getClass().isAssignableFrom(clazz)) {_                return (T)prop__            } else if (Integer.class == clazz) {_                return (T)Integer.valueOf((String)prop)__            } else if (Boolean.class == clazz) {_                return (T)BooleanUtils.toBooleanObject((String)prop, "true", "false", "null")__            }_        } else if (defaultValue != null) {_            return defaultValue__        }__        return null__    };attempts,to,locate,a,given,property,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,returns,a,default,value,if,given,param,name,param,configuration,param,message,param,clazz,param,default,value,return;suppress,warnings,unchecked,public,static,t,t,get,property,string,name,docker,configuration,configuration,message,message,class,t,clazz,t,default,value,if,message,null,t,header,property,message,get,header,name,clazz,if,header,property,null,return,header,property,object,prop,configuration,get,parameters,get,transform,from,header,name,name,if,prop,null,if,prop,get,class,is,assignable,from,clazz,return,t,prop,else,if,integer,class,clazz,return,t,integer,value,of,string,prop,else,if,boolean,class,clazz,return,t,boolean,utils,to,boolean,object,string,prop,true,false,null,else,if,default,value,null,return,default,value,return,null
DockerHelper -> @SuppressWarnings("unchecked")     public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz, T defaultValue);1506506021;Attempts to locate a given property name within a URI parameter or the_message header. A found value in a message header takes precedence over a_URI parameter. Returns a default value if given__@param name_@param configuration_@param message_@param clazz_@param defaultValue_@return;@SuppressWarnings("unchecked")_    public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz, T defaultValue) {_        _        __        if (message != null) {_            T headerProperty = message.getHeader(name, clazz)___            if (headerProperty != null) {_                return headerProperty__            }_        }__        Object prop = configuration.getParameters().get(transformFromHeaderName(name))___        if (prop != null) {__            if (prop.getClass().isAssignableFrom(clazz)) {_                return (T)prop__            } else if (Integer.class == clazz) {_                return (T)Integer.valueOf((String)prop)__            } else if (Boolean.class == clazz) {_                return (T)BooleanUtils.toBooleanObject((String)prop, "true", "false", "null")__            }_        } else if (defaultValue != null) {_            return defaultValue__        }__        return null__    };attempts,to,locate,a,given,property,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,returns,a,default,value,if,given,param,name,param,configuration,param,message,param,clazz,param,default,value,return;suppress,warnings,unchecked,public,static,t,t,get,property,string,name,docker,configuration,configuration,message,message,class,t,clazz,t,default,value,if,message,null,t,header,property,message,get,header,name,clazz,if,header,property,null,return,header,property,object,prop,configuration,get,parameters,get,transform,from,header,name,name,if,prop,null,if,prop,get,class,is,assignable,from,clazz,return,t,prop,else,if,integer,class,clazz,return,t,integer,value,of,string,prop,else,if,boolean,class,clazz,return,t,boolean,utils,to,boolean,object,string,prop,true,false,null,else,if,default,value,null,return,default,value,return,null
DockerHelper -> @SuppressWarnings("unchecked")     public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz, T defaultValue);1540108158;Attempts to locate a given property name within a URI parameter or the_message header. A found value in a message header takes precedence over a_URI parameter. Returns a default value if given__@param name_@param configuration_@param message_@param clazz_@param defaultValue_@return;@SuppressWarnings("unchecked")_    public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz, T defaultValue) {_        _        __        if (message != null) {_            T headerProperty = message.getHeader(name, clazz)___            if (headerProperty != null) {_                return headerProperty__            }_        }__        Object prop = configuration.getParameters().get(transformFromHeaderName(name))___        if (prop != null) {__            if (prop.getClass().isAssignableFrom(clazz)) {_                return (T)prop__            } else if (Integer.class == clazz) {_                return (T)Integer.valueOf((String)prop)__            } else if (Boolean.class == clazz) {_                return (T)BooleanUtils.toBooleanObject((String)prop, "true", "false", "null")__            }_        } else if (defaultValue != null) {_            return defaultValue__        }__        return null__    };attempts,to,locate,a,given,property,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,returns,a,default,value,if,given,param,name,param,configuration,param,message,param,clazz,param,default,value,return;suppress,warnings,unchecked,public,static,t,t,get,property,string,name,docker,configuration,configuration,message,message,class,t,clazz,t,default,value,if,message,null,t,header,property,message,get,header,name,clazz,if,header,property,null,return,header,property,object,prop,configuration,get,parameters,get,transform,from,header,name,name,if,prop,null,if,prop,get,class,is,assignable,from,clazz,return,t,prop,else,if,integer,class,clazz,return,t,integer,value,of,string,prop,else,if,boolean,class,clazz,return,t,boolean,utils,to,boolean,object,string,prop,true,false,null,else,if,default,value,null,return,default,value,return,null
DockerHelper -> public static String transformToHeaderName(String name);1415211488;Transforms a Docker Component URI parameter to its' analogous header value_@param name_@return;public static String transformToHeaderName(String name) {_        ObjectHelper.notEmpty(name, "name")__        _        StringBuilder formattedName = new StringBuilder(DockerConstants.DOCKER_PREFIX)__        _        _        if (name.length() > 0) {_            formattedName.append(name.substring(0, 1).toUpperCase())__            formattedName.append(name.substring(1))_   _        }_        _        return formattedName.toString()__    };transforms,a,docker,component,uri,parameter,to,its,analogous,header,value,param,name,return;public,static,string,transform,to,header,name,string,name,object,helper,not,empty,name,name,string,builder,formatted,name,new,string,builder,docker,constants,if,name,length,0,formatted,name,append,name,substring,0,1,to,upper,case,formatted,name,append,name,substring,1,return,formatted,name,to,string
DockerHelper -> public static String transformToHeaderName(String name);1415517409;Transforms a Docker Component URI parameter to its' analogous header value_@param name_@return;public static String transformToHeaderName(String name) {_        ObjectHelper.notEmpty(name, "name")__        _        StringBuilder formattedName = new StringBuilder(DockerConstants.DOCKER_PREFIX)__        _        _        if (name.length() > 0) {_            formattedName.append(name.substring(0, 1).toUpperCase())__            formattedName.append(name.substring(1))_   _        }_        _        return formattedName.toString()__    };transforms,a,docker,component,uri,parameter,to,its,analogous,header,value,param,name,return;public,static,string,transform,to,header,name,string,name,object,helper,not,empty,name,name,string,builder,formatted,name,new,string,builder,docker,constants,if,name,length,0,formatted,name,append,name,substring,0,1,to,upper,case,formatted,name,append,name,substring,1,return,formatted,name,to,string
DockerHelper -> public static String transformToHeaderName(String name);1424675020;Transforms a Docker Component URI parameter to its' analogous header value_@param name_@return;public static String transformToHeaderName(String name) {_        ObjectHelper.notEmpty(name, "name")__        _        StringBuilder formattedName = new StringBuilder(DockerConstants.DOCKER_PREFIX)__        _        _        if (name.length() > 0) {_            formattedName.append(name.substring(0, 1).toUpperCase())__            formattedName.append(name.substring(1))_   _        }_        _        return formattedName.toString()__    };transforms,a,docker,component,uri,parameter,to,its,analogous,header,value,param,name,return;public,static,string,transform,to,header,name,string,name,object,helper,not,empty,name,name,string,builder,formatted,name,new,string,builder,docker,constants,if,name,length,0,formatted,name,append,name,substring,0,1,to,upper,case,formatted,name,append,name,substring,1,return,formatted,name,to,string
DockerHelper -> public static String transformToHeaderName(String name);1424675476;Transforms a Docker Component URI parameter to its' analogous header value__@param name_@return;public static String transformToHeaderName(String name) {_        ObjectHelper.notEmpty(name, "name")___        StringBuilder formattedName = new StringBuilder(DockerConstants.DOCKER_PREFIX)____        if (name.length() > 0) {_            formattedName.append(name.substring(0, 1).toUpperCase())__            formattedName.append(name.substring(1))__        }__        return formattedName.toString()__    };transforms,a,docker,component,uri,parameter,to,its,analogous,header,value,param,name,return;public,static,string,transform,to,header,name,string,name,object,helper,not,empty,name,name,string,builder,formatted,name,new,string,builder,docker,constants,if,name,length,0,formatted,name,append,name,substring,0,1,to,upper,case,formatted,name,append,name,substring,1,return,formatted,name,to,string
DockerHelper -> public static String transformToHeaderName(String name);1474362454;Transforms a Docker Component URI parameter to its' analogous header value__@param name_@return;public static String transformToHeaderName(String name) {_        ObjectHelper.notEmpty(name, "name")___        StringBuilder formattedName = new StringBuilder(DockerConstants.DOCKER_PREFIX)____        if (name.length() > 0) {_            formattedName.append(name.substring(0, 1).toUpperCase())__            formattedName.append(name.substring(1))__        }__        return formattedName.toString()__    };transforms,a,docker,component,uri,parameter,to,its,analogous,header,value,param,name,return;public,static,string,transform,to,header,name,string,name,object,helper,not,empty,name,name,string,builder,formatted,name,new,string,builder,docker,constants,if,name,length,0,formatted,name,append,name,substring,0,1,to,upper,case,formatted,name,append,name,substring,1,return,formatted,name,to,string
DockerHelper -> public static String transformToHeaderName(String name);1474362454;Transforms a Docker Component URI parameter to its' analogous header_value__@param name_@return;public static String transformToHeaderName(String name) {_        ObjectHelper.notEmpty(name, "name")___        StringBuilder formattedName = new StringBuilder(DockerConstants.DOCKER_PREFIX)___        if (name.length() > 0) {_            formattedName.append(name.substring(0, 1).toUpperCase())__            formattedName.append(name.substring(1))__        }__        return formattedName.toString()__    };transforms,a,docker,component,uri,parameter,to,its,analogous,header,value,param,name,return;public,static,string,transform,to,header,name,string,name,object,helper,not,empty,name,name,string,builder,formatted,name,new,string,builder,docker,constants,if,name,length,0,formatted,name,append,name,substring,0,1,to,upper,case,formatted,name,append,name,substring,1,return,formatted,name,to,string
DockerHelper -> public static String transformToHeaderName(String name);1488877173;Transforms a Docker Component URI parameter to its analogous header_value__@param name_@return;public static String transformToHeaderName(String name) {_        ObjectHelper.notEmpty(name, "name")___        StringBuilder formattedName = new StringBuilder(DockerConstants.DOCKER_PREFIX)___        if (name.length() > 0) {_            formattedName.append(name.substring(0, 1).toUpperCase())__            formattedName.append(name.substring(1))__        }__        return formattedName.toString()__    };transforms,a,docker,component,uri,parameter,to,its,analogous,header,value,param,name,return;public,static,string,transform,to,header,name,string,name,object,helper,not,empty,name,name,string,builder,formatted,name,new,string,builder,docker,constants,if,name,length,0,formatted,name,append,name,substring,0,1,to,upper,case,formatted,name,append,name,substring,1,return,formatted,name,to,string
DockerHelper -> @SuppressWarnings("unchecked")     public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz);1415211488;Attempts to locate a given property name within a URI parameter or the message header._A found value in a message header takes precedence over a URI parameter.__@param name_@param configuration_@param message_@param clazz_@return;@SuppressWarnings("unchecked")_    public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz) {_        _       _        if (message != null) {_            T headerProperty = message.getHeader(name, clazz)__            _            if (headerProperty != null) {_                return headerProperty__            }_        }_        _        Object prop = configuration.getParameters().get(transformFromHeaderName(name))__        _        if (prop != null) {_            _            if (prop.getClass().isAssignableFrom(clazz)) {_                return (T) prop__            } else if (Integer.class == clazz) {_                return (T) Integer.valueOf((String)prop)__            } else if (Boolean.class == clazz) {_                return (T)BooleanUtils.toBooleanObject((String)prop, "true", "false", "null")__            }_        }_        _        return null__        _        _    };attempts,to,locate,a,given,property,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,param,name,param,configuration,param,message,param,clazz,return;suppress,warnings,unchecked,public,static,t,t,get,property,string,name,docker,configuration,configuration,message,message,class,t,clazz,if,message,null,t,header,property,message,get,header,name,clazz,if,header,property,null,return,header,property,object,prop,configuration,get,parameters,get,transform,from,header,name,name,if,prop,null,if,prop,get,class,is,assignable,from,clazz,return,t,prop,else,if,integer,class,clazz,return,t,integer,value,of,string,prop,else,if,boolean,class,clazz,return,t,boolean,utils,to,boolean,object,string,prop,true,false,null,return,null
DockerHelper -> @SuppressWarnings("unchecked")     public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz);1415517409;Attempts to locate a given property name within a URI parameter or the message header._A found value in a message header takes precedence over a URI parameter.__@param name_@param configuration_@param message_@param clazz_@return;@SuppressWarnings("unchecked")_    public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz) {_        _       _        if (message != null) {_            T headerProperty = message.getHeader(name, clazz)__            _            if (headerProperty != null) {_                return headerProperty__            }_        }_        _        Object prop = configuration.getParameters().get(transformFromHeaderName(name))__        _        if (prop != null) {_            _            if (prop.getClass().isAssignableFrom(clazz)) {_                return (T) prop__            } else if (Integer.class == clazz) {_                return (T) Integer.valueOf((String)prop)__            } else if (Boolean.class == clazz) {_                return (T)BooleanUtils.toBooleanObject((String)prop, "true", "false", "null")__            }_        }_        _        return null__        _        _    };attempts,to,locate,a,given,property,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,param,name,param,configuration,param,message,param,clazz,return;suppress,warnings,unchecked,public,static,t,t,get,property,string,name,docker,configuration,configuration,message,message,class,t,clazz,if,message,null,t,header,property,message,get,header,name,clazz,if,header,property,null,return,header,property,object,prop,configuration,get,parameters,get,transform,from,header,name,name,if,prop,null,if,prop,get,class,is,assignable,from,clazz,return,t,prop,else,if,integer,class,clazz,return,t,integer,value,of,string,prop,else,if,boolean,class,clazz,return,t,boolean,utils,to,boolean,object,string,prop,true,false,null,return,null
DockerHelper -> @SuppressWarnings("unchecked")     public static <T> T[] getArrayProperty(String name, Message message, Class<T> clazz);1415211488;Attempts to locate a given property which is an array by name within a URI parameter or the message header._A found value in a message header takes precedence over a URI parameter.__@param name_@param message_@param clazz_@return;@SuppressWarnings("unchecked")_    public static <T> T[] getArrayProperty(String name, Message message, Class<T> clazz) {_       _        if (message != null) {_            Object header = message.getHeader(name)___            if (header != null) {_                if (header.getClass().isAssignableFrom(clazz)) {__                    T[] headerArray = (T[])Array.newInstance(clazz, 1)__                    headerArray[0] = (T)header__                    return headerArray___                }__                if (header.getClass().isArray()) {_                    if (header.getClass().getDeclaringClass().isAssignableFrom(clazz)) {_                        return (T[])header__                    }_                }_            }__        }_        _        return null__        _    };attempts,to,locate,a,given,property,which,is,an,array,by,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,param,name,param,message,param,clazz,return;suppress,warnings,unchecked,public,static,t,t,get,array,property,string,name,message,message,class,t,clazz,if,message,null,object,header,message,get,header,name,if,header,null,if,header,get,class,is,assignable,from,clazz,t,header,array,t,array,new,instance,clazz,1,header,array,0,t,header,return,header,array,if,header,get,class,is,array,if,header,get,class,get,declaring,class,is,assignable,from,clazz,return,t,header,return,null
DockerHelper -> @SuppressWarnings("unchecked")     public static <T> T[] getArrayProperty(String name, Message message, Class<T> clazz);1415517409;Attempts to locate a given property which is an array by name within a URI parameter or the message header._A found value in a message header takes precedence over a URI parameter.__@param name_@param message_@param clazz_@return;@SuppressWarnings("unchecked")_    public static <T> T[] getArrayProperty(String name, Message message, Class<T> clazz) {_       _        if (message != null) {_            Object header = message.getHeader(name)__            _            if (header != null) {_                if (header.getClass().isAssignableFrom(clazz)) {_                    _                    T[] headerArray = (T[])Array.newInstance(clazz, 1)__                    headerArray[0] = (T)header__                    return headerArray___                }_                _                if (header.getClass().isArray()) {_                    if (header.getClass().getDeclaringClass().isAssignableFrom(clazz)) {_                        return (T[])header__                    }_                }_            }__        }_        _        return null__        _    };attempts,to,locate,a,given,property,which,is,an,array,by,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,param,name,param,message,param,clazz,return;suppress,warnings,unchecked,public,static,t,t,get,array,property,string,name,message,message,class,t,clazz,if,message,null,object,header,message,get,header,name,if,header,null,if,header,get,class,is,assignable,from,clazz,t,header,array,t,array,new,instance,clazz,1,header,array,0,t,header,return,header,array,if,header,get,class,is,array,if,header,get,class,get,declaring,class,is,assignable,from,clazz,return,t,header,return,null
DockerHelper -> @SuppressWarnings("unchecked")     public static <T> T[] getArrayProperty(String name, Message message, Class<T> clazz);1424675020;Attempts to locate a given property which is an array by name within a URI parameter or the message header._A found value in a message header takes precedence over a URI parameter.__@param name_@param message_@param clazz_@return;@SuppressWarnings("unchecked")_    public static <T> T[] getArrayProperty(String name, Message message, Class<T> clazz) {_       _        if (message != null) {_            Object header = message.getHeader(name)__            _            if (header != null) {_                if (header.getClass().isAssignableFrom(clazz)) {_                    _                    T[] headerArray = (T[])Array.newInstance(clazz, 1)__                    headerArray[0] = (T)header__                    return headerArray___                }__                if (header.getClass().isArray()) {_                    if (header.getClass().getComponentType().isAssignableFrom(clazz) || header.getClass().getDeclaringClass().isAssignableFrom(clazz)) {_                        return (T[])header__                    }_                }_            }__        }_        _        return null__        _    };attempts,to,locate,a,given,property,which,is,an,array,by,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,param,name,param,message,param,clazz,return;suppress,warnings,unchecked,public,static,t,t,get,array,property,string,name,message,message,class,t,clazz,if,message,null,object,header,message,get,header,name,if,header,null,if,header,get,class,is,assignable,from,clazz,t,header,array,t,array,new,instance,clazz,1,header,array,0,t,header,return,header,array,if,header,get,class,is,array,if,header,get,class,get,component,type,is,assignable,from,clazz,header,get,class,get,declaring,class,is,assignable,from,clazz,return,t,header,return,null
DockerHelper -> @SuppressWarnings("unchecked")     public static <T> T[] getArrayProperty(String name, Message message, Class<T> clazz);1424675476;Attempts to locate a given property which is an array by name within a URI parameter or the message header._A found value in a message header takes precedence over a URI parameter.__@param name_@param message_@param clazz_@return;@SuppressWarnings("unchecked")_    public static <T> T[] getArrayProperty(String name, Message message, Class<T> clazz) {__        if (message != null) {_            Object header = message.getHeader(name)___            if (header != null) {_                if (header.getClass().isAssignableFrom(clazz)) {__                    T[] headerArray = (T[]) Array.newInstance(clazz, 1)__                    headerArray[0] = (T) header__                    return headerArray___                }__                if (header.getClass().isArray()) {_                    if (header.getClass().getComponentType().isAssignableFrom(clazz) || header.getClass().getDeclaringClass().isAssignableFrom(clazz)) {_                        return (T[]) header__                    }_                }_            }__        }__        return null___    };attempts,to,locate,a,given,property,which,is,an,array,by,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,param,name,param,message,param,clazz,return;suppress,warnings,unchecked,public,static,t,t,get,array,property,string,name,message,message,class,t,clazz,if,message,null,object,header,message,get,header,name,if,header,null,if,header,get,class,is,assignable,from,clazz,t,header,array,t,array,new,instance,clazz,1,header,array,0,t,header,return,header,array,if,header,get,class,is,array,if,header,get,class,get,component,type,is,assignable,from,clazz,header,get,class,get,declaring,class,is,assignable,from,clazz,return,t,header,return,null
DockerHelper -> @SuppressWarnings("unchecked")     public static <T> T[] getArrayProperty(String name, Message message, Class<T> clazz);1474362454;Attempts to locate a given property which is an array by name within a URI parameter or the message header._A found value in a message header takes precedence over a URI parameter.__@param name_@param message_@param clazz_@return;@SuppressWarnings("unchecked")_    public static <T> T[] getArrayProperty(String name, Message message, Class<T> clazz) {__        if (message != null) {_            Object header = message.getHeader(name)___            if (header != null) {_                if (header.getClass().isAssignableFrom(clazz)) {__                    T[] headerArray = (T[]) Array.newInstance(clazz, 1)__                    headerArray[0] = (T) header__                    return headerArray___                }__                if (header.getClass().isArray()) {_                    if (header.getClass().getComponentType().isAssignableFrom(clazz) || header.getClass().getDeclaringClass().isAssignableFrom(clazz)) {_                        return (T[]) header__                    }_                }_            }__        }__        return null___    };attempts,to,locate,a,given,property,which,is,an,array,by,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,param,name,param,message,param,clazz,return;suppress,warnings,unchecked,public,static,t,t,get,array,property,string,name,message,message,class,t,clazz,if,message,null,object,header,message,get,header,name,if,header,null,if,header,get,class,is,assignable,from,clazz,t,header,array,t,array,new,instance,clazz,1,header,array,0,t,header,return,header,array,if,header,get,class,is,array,if,header,get,class,get,component,type,is,assignable,from,clazz,header,get,class,get,declaring,class,is,assignable,from,clazz,return,t,header,return,null
DockerHelper -> @SuppressWarnings("unchecked")     public static <T> T[] getArrayProperty(String name, Message message, Class<T> clazz);1474362454;Attempts to locate a given property which is an array by name within a_URI parameter or the message header. A found value in a message header_takes precedence over a URI parameter.__@param name_@param message_@param clazz_@return;@SuppressWarnings("unchecked")_    public static <T> T[] getArrayProperty(String name, Message message, Class<T> clazz) {__        if (message != null) {_            Object header = message.getHeader(name)___            if (header != null) {_                if (header.getClass().isAssignableFrom(clazz)) {__                    T[] headerArray = (T[])Array.newInstance(clazz, 1)__                    headerArray[0] = (T)header__                    return headerArray___                }__                if (header.getClass().isArray()) {_                    if (header.getClass().getComponentType().isAssignableFrom(clazz) || header.getClass().getDeclaringClass().isAssignableFrom(clazz)) {_                        return (T[])header__                    }_                }_            }__        }__        return null___    };attempts,to,locate,a,given,property,which,is,an,array,by,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,param,name,param,message,param,clazz,return;suppress,warnings,unchecked,public,static,t,t,get,array,property,string,name,message,message,class,t,clazz,if,message,null,object,header,message,get,header,name,if,header,null,if,header,get,class,is,assignable,from,clazz,t,header,array,t,array,new,instance,clazz,1,header,array,0,t,header,return,header,array,if,header,get,class,is,array,if,header,get,class,get,component,type,is,assignable,from,clazz,header,get,class,get,declaring,class,is,assignable,from,clazz,return,t,header,return,null
DockerHelper -> @SuppressWarnings("unchecked")     public static <T> T[] getArrayProperty(String name, Message message, Class<T> clazz);1488877173;Attempts to locate a given property which is an array by name within a_URI parameter or the message header. A found value in a message header_takes precedence over a URI parameter.__@param name_@param message_@param clazz_@return;@SuppressWarnings("unchecked")_    public static <T> T[] getArrayProperty(String name, Message message, Class<T> clazz) {__        if (message != null) {_            Object header = message.getHeader(name)___            if (header != null) {_                if (header.getClass().isAssignableFrom(clazz)) {__                    T[] headerArray = (T[])Array.newInstance(clazz, 1)__                    headerArray[0] = (T)header__                    return headerArray___                }__                if (header.getClass().isArray()) {_                    if (header.getClass().getComponentType().isAssignableFrom(clazz) || header.getClass().getDeclaringClass().isAssignableFrom(clazz)) {_                        return (T[])header__                    }_                }_            }__        }__        return null__    };attempts,to,locate,a,given,property,which,is,an,array,by,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,param,name,param,message,param,clazz,return;suppress,warnings,unchecked,public,static,t,t,get,array,property,string,name,message,message,class,t,clazz,if,message,null,object,header,message,get,header,name,if,header,null,if,header,get,class,is,assignable,from,clazz,t,header,array,t,array,new,instance,clazz,1,header,array,0,t,header,return,header,array,if,header,get,class,is,array,if,header,get,class,get,component,type,is,assignable,from,clazz,header,get,class,get,declaring,class,is,assignable,from,clazz,return,t,header,return,null
DockerHelper -> @SuppressWarnings("unchecked")     public static <T> T[] getArrayProperty(String name, Message message, Class<T> clazz);1506506021;Attempts to locate a given property which is an array by name within a_URI parameter or the message header. A found value in a message header_takes precedence over a URI parameter.__@param name_@param message_@param clazz_@return;@SuppressWarnings("unchecked")_    public static <T> T[] getArrayProperty(String name, Message message, Class<T> clazz) {__        if (message != null) {_            Object header = message.getHeader(name)___            if (header != null) {_                if (header.getClass().isAssignableFrom(clazz)) {__                    T[] headerArray = (T[])Array.newInstance(clazz, 1)__                    headerArray[0] = (T)header__                    return headerArray___                }__                if (header.getClass().isArray()) {_                    if (header.getClass().getComponentType().isAssignableFrom(clazz) || header.getClass().getDeclaringClass().isAssignableFrom(clazz)) {_                        return (T[])header__                    }_                }_            }__        }__        return null__    };attempts,to,locate,a,given,property,which,is,an,array,by,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,param,name,param,message,param,clazz,return;suppress,warnings,unchecked,public,static,t,t,get,array,property,string,name,message,message,class,t,clazz,if,message,null,object,header,message,get,header,name,if,header,null,if,header,get,class,is,assignable,from,clazz,t,header,array,t,array,new,instance,clazz,1,header,array,0,t,header,return,header,array,if,header,get,class,is,array,if,header,get,class,get,component,type,is,assignable,from,clazz,header,get,class,get,declaring,class,is,assignable,from,clazz,return,t,header,return,null
DockerHelper -> @SuppressWarnings("unchecked")     public static <T> T[] getArrayProperty(String name, Message message, Class<T> clazz);1540108158;Attempts to locate a given property which is an array by name within a_URI parameter or the message header. A found value in a message header_takes precedence over a URI parameter.__@param name_@param message_@param clazz_@return;@SuppressWarnings("unchecked")_    public static <T> T[] getArrayProperty(String name, Message message, Class<T> clazz) {__        if (message != null) {_            Object header = message.getHeader(name)___            if (header != null) {_                if (header.getClass().isAssignableFrom(clazz)) {__                    T[] headerArray = (T[])Array.newInstance(clazz, 1)__                    headerArray[0] = (T)header__                    return headerArray___                }__                if (header.getClass().isArray()) {_                    if (header.getClass().getComponentType().isAssignableFrom(clazz) || header.getClass().getDeclaringClass().isAssignableFrom(clazz)) {_                        return (T[])header__                    }_                }_            }__        }__        return null__    };attempts,to,locate,a,given,property,which,is,an,array,by,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,param,name,param,message,param,clazz,return;suppress,warnings,unchecked,public,static,t,t,get,array,property,string,name,message,message,class,t,clazz,if,message,null,object,header,message,get,header,name,if,header,null,if,header,get,class,is,assignable,from,clazz,t,header,array,t,array,new,instance,clazz,1,header,array,0,t,header,return,header,array,if,header,get,class,is,array,if,header,get,class,get,component,type,is,assignable,from,clazz,header,get,class,get,declaring,class,is,assignable,from,clazz,return,t,header,return,null
DockerHelper -> public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz);1424675020;Attempts to locate a given property name within a URI parameter or the message header._A found value in a message header takes precedence over a URI parameter.__@param name_@param configuration_@param message_@param clazz_@return;public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz) {_        return getProperty(name, configuration, message, clazz, null)__    };attempts,to,locate,a,given,property,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,param,name,param,configuration,param,message,param,clazz,return;public,static,t,t,get,property,string,name,docker,configuration,configuration,message,message,class,t,clazz,return,get,property,name,configuration,message,clazz,null
DockerHelper -> public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz);1424675476;Attempts to locate a given property name within a URI parameter or the message header._A found value in a message header takes precedence over a URI parameter.__@param name_@param configuration_@param message_@param clazz_@return;public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz) {_        return getProperty(name, configuration, message, clazz, null)__    };attempts,to,locate,a,given,property,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,param,name,param,configuration,param,message,param,clazz,return;public,static,t,t,get,property,string,name,docker,configuration,configuration,message,message,class,t,clazz,return,get,property,name,configuration,message,clazz,null
DockerHelper -> public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz);1474362454;Attempts to locate a given property name within a URI parameter or the message header._A found value in a message header takes precedence over a URI parameter.__@param name_@param configuration_@param message_@param clazz_@return;public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz) {_        return getProperty(name, configuration, message, clazz, null)__    };attempts,to,locate,a,given,property,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,param,name,param,configuration,param,message,param,clazz,return;public,static,t,t,get,property,string,name,docker,configuration,configuration,message,message,class,t,clazz,return,get,property,name,configuration,message,clazz,null
DockerHelper -> public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz);1474362454;Attempts to locate a given property name within a URI parameter or the_message header. A found value in a message header takes precedence over a_URI parameter.__@param name_@param configuration_@param message_@param clazz_@return;public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz) {_        return getProperty(name, configuration, message, clazz, null)__    };attempts,to,locate,a,given,property,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,param,name,param,configuration,param,message,param,clazz,return;public,static,t,t,get,property,string,name,docker,configuration,configuration,message,message,class,t,clazz,return,get,property,name,configuration,message,clazz,null
DockerHelper -> public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz);1488877173;Attempts to locate a given property name within a URI parameter or the_message header. A found value in a message header takes precedence over a_URI parameter.__@param name_@param configuration_@param message_@param clazz_@return;public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz) {_        return getProperty(name, configuration, message, clazz, null)__    };attempts,to,locate,a,given,property,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,param,name,param,configuration,param,message,param,clazz,return;public,static,t,t,get,property,string,name,docker,configuration,configuration,message,message,class,t,clazz,return,get,property,name,configuration,message,clazz,null
DockerHelper -> public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz);1506506021;Attempts to locate a given property name within a URI parameter or the_message header. A found value in a message header takes precedence over a_URI parameter.__@param name_@param configuration_@param message_@param clazz_@return;public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz) {_        return getProperty(name, configuration, message, clazz, null)__    };attempts,to,locate,a,given,property,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,param,name,param,configuration,param,message,param,clazz,return;public,static,t,t,get,property,string,name,docker,configuration,configuration,message,message,class,t,clazz,return,get,property,name,configuration,message,clazz,null
DockerHelper -> public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz);1540108158;Attempts to locate a given property name within a URI parameter or the_message header. A found value in a message header takes precedence over a_URI parameter.__@param name_@param configuration_@param message_@param clazz_@return;public static <T> T getProperty(String name, DockerConfiguration configuration, Message message, Class<T> clazz) {_        return getProperty(name, configuration, message, clazz, null)__    };attempts,to,locate,a,given,property,name,within,a,uri,parameter,or,the,message,header,a,found,value,in,a,message,header,takes,precedence,over,a,uri,parameter,param,name,param,configuration,param,message,param,clazz,return;public,static,t,t,get,property,string,name,docker,configuration,configuration,message,message,class,t,clazz,return,get,property,name,configuration,message,clazz,null
DockerHelper -> public static void validateParameters(DockerOperation dockerOperation, Map<String, Object> parameters);1415211488;Validates the URI parameters for a given {@link DockerOperation}__@param dockerOperation_@param parameters;public static void validateParameters(DockerOperation dockerOperation, Map<String, Object> parameters) {_        Map<String, Class<?>> validParamMap = new HashMap<String, Class<?>>()__        validParamMap.putAll(DockerConstants.DOCKER_DEFAULT_PARAMETERS)__        validParamMap.putAll(dockerOperation.getParameters())__        _        for (String key : parameters.keySet()) {_            _            String transformedKey = DockerHelper.transformToHeaderName(key)__            _            _            if (!validParamMap.containsKey(transformedKey)) {_                throw new DockerClientException(key + " is not a valid URI parameter")__            }_            _            _            try {_                Class<?> parameterClass = validParamMap.get(transformedKey)__                Object parameterValue = parameters.get(key)__                _                if (parameterClass == null || parameterValue == null) {_                    throw new DockerClientException("Failed to validate parameter type for property " + key)__                } _                _                if (Integer.class == parameterClass) {_                    Integer.parseInt((String)parameterValue)__                } else if (Boolean.class == parameterClass) {_                    BooleanUtils.toBooleanObject((String)parameterValue, "true", "false", "null")__                }_                _            } catch (Exception e) {_                throw new DockerClientException("Failed to validate parameter type for property " + key)_                    _            }_        }_              _    };validates,the,uri,parameters,for,a,given,link,docker,operation,param,docker,operation,param,parameters;public,static,void,validate,parameters,docker,operation,docker,operation,map,string,object,parameters,map,string,class,valid,param,map,new,hash,map,string,class,valid,param,map,put,all,docker,constants,valid,param,map,put,all,docker,operation,get,parameters,for,string,key,parameters,key,set,string,transformed,key,docker,helper,transform,to,header,name,key,if,valid,param,map,contains,key,transformed,key,throw,new,docker,client,exception,key,is,not,a,valid,uri,parameter,try,class,parameter,class,valid,param,map,get,transformed,key,object,parameter,value,parameters,get,key,if,parameter,class,null,parameter,value,null,throw,new,docker,client,exception,failed,to,validate,parameter,type,for,property,key,if,integer,class,parameter,class,integer,parse,int,string,parameter,value,else,if,boolean,class,parameter,class,boolean,utils,to,boolean,object,string,parameter,value,true,false,null,catch,exception,e,throw,new,docker,client,exception,failed,to,validate,parameter,type,for,property,key
DockerHelper -> public static void validateParameters(DockerOperation dockerOperation, Map<String, Object> parameters);1415517409;Validates the URI parameters for a given {@link DockerOperation}__@param dockerOperation_@param parameters;public static void validateParameters(DockerOperation dockerOperation, Map<String, Object> parameters) {_        Map<String, Class<?>> validParamMap = new HashMap<String, Class<?>>()__        validParamMap.putAll(DockerConstants.DOCKER_DEFAULT_PARAMETERS)__        validParamMap.putAll(dockerOperation.getParameters())__        _        for (String key : parameters.keySet()) {_            _            String transformedKey = DockerHelper.transformToHeaderName(key)__            _            _            if (!validParamMap.containsKey(transformedKey)) {_                throw new DockerClientException(key + " is not a valid URI parameter")__            }_            _            _            try {_                Class<?> parameterClass = validParamMap.get(transformedKey)__                Object parameterValue = parameters.get(key)__                _                if (parameterClass == null || parameterValue == null) {_                    throw new DockerClientException("Failed to validate parameter type for property " + key)__                } _                _                if (Integer.class == parameterClass) {_                    Integer.parseInt((String)parameterValue)__                } else if (Boolean.class == parameterClass) {_                    BooleanUtils.toBooleanObject((String)parameterValue, "true", "false", "null")__                }_            } catch (Exception e) {_                throw new DockerClientException("Failed to validate parameter type for property " + key)_                    _            }_        }_              _    };validates,the,uri,parameters,for,a,given,link,docker,operation,param,docker,operation,param,parameters;public,static,void,validate,parameters,docker,operation,docker,operation,map,string,object,parameters,map,string,class,valid,param,map,new,hash,map,string,class,valid,param,map,put,all,docker,constants,valid,param,map,put,all,docker,operation,get,parameters,for,string,key,parameters,key,set,string,transformed,key,docker,helper,transform,to,header,name,key,if,valid,param,map,contains,key,transformed,key,throw,new,docker,client,exception,key,is,not,a,valid,uri,parameter,try,class,parameter,class,valid,param,map,get,transformed,key,object,parameter,value,parameters,get,key,if,parameter,class,null,parameter,value,null,throw,new,docker,client,exception,failed,to,validate,parameter,type,for,property,key,if,integer,class,parameter,class,integer,parse,int,string,parameter,value,else,if,boolean,class,parameter,class,boolean,utils,to,boolean,object,string,parameter,value,true,false,null,catch,exception,e,throw,new,docker,client,exception,failed,to,validate,parameter,type,for,property,key
DockerHelper -> public static void validateParameters(DockerOperation dockerOperation, Map<String, Object> parameters);1424675020;Validates the URI parameters for a given {@link DockerOperation}__@param dockerOperation_@param parameters;public static void validateParameters(DockerOperation dockerOperation, Map<String, Object> parameters) {_        Map<String, Class<?>> validParamMap = new HashMap<String, Class<?>>()__        validParamMap.putAll(DockerConstants.DOCKER_DEFAULT_PARAMETERS)__        validParamMap.putAll(dockerOperation.getParameters())__        _        for (String key : parameters.keySet()) {_            _            String transformedKey = DockerHelper.transformToHeaderName(key)__            _            _            if (!validParamMap.containsKey(transformedKey)) {_                throw new DockerClientException(key + " is not a valid URI parameter")__            }_            _            _            try {_                Class<?> parameterClass = validParamMap.get(transformedKey)__                Object parameterValue = parameters.get(key)__                _                if (parameterClass == null || parameterValue == null) {_                    throw new DockerClientException("Failed to validate parameter type for property " + key)__                } _                _                if (Integer.class == parameterClass) {_                    Integer.parseInt((String)parameterValue)__                } else if (Boolean.class == parameterClass) {_                    BooleanUtils.toBooleanObject((String)parameterValue, "true", "false", "null")__                }_            } catch (Exception e) {_                throw new DockerClientException("Failed to validate parameter type for property " + key)_                    _            }_        }_              _    };validates,the,uri,parameters,for,a,given,link,docker,operation,param,docker,operation,param,parameters;public,static,void,validate,parameters,docker,operation,docker,operation,map,string,object,parameters,map,string,class,valid,param,map,new,hash,map,string,class,valid,param,map,put,all,docker,constants,valid,param,map,put,all,docker,operation,get,parameters,for,string,key,parameters,key,set,string,transformed,key,docker,helper,transform,to,header,name,key,if,valid,param,map,contains,key,transformed,key,throw,new,docker,client,exception,key,is,not,a,valid,uri,parameter,try,class,parameter,class,valid,param,map,get,transformed,key,object,parameter,value,parameters,get,key,if,parameter,class,null,parameter,value,null,throw,new,docker,client,exception,failed,to,validate,parameter,type,for,property,key,if,integer,class,parameter,class,integer,parse,int,string,parameter,value,else,if,boolean,class,parameter,class,boolean,utils,to,boolean,object,string,parameter,value,true,false,null,catch,exception,e,throw,new,docker,client,exception,failed,to,validate,parameter,type,for,property,key
DockerHelper -> public static void validateParameters(DockerOperation dockerOperation, Map<String, Object> parameters);1424675476;Validates the URI parameters for a given {@link DockerOperation}__@param dockerOperation_@param parameters;public static void validateParameters(DockerOperation dockerOperation, Map<String, Object> parameters) {_        Map<String, Class<?>> validParamMap = new HashMap<String, Class<?>>()__        validParamMap.putAll(DockerConstants.DOCKER_DEFAULT_PARAMETERS)__        validParamMap.putAll(dockerOperation.getParameters())___        for (String key : parameters.keySet()) {__            String transformedKey = DockerHelper.transformToHeaderName(key)___            _            if (!validParamMap.containsKey(transformedKey)) {_                throw new DockerClientException(key + " is not a valid URI parameter")__            }___            try {_                Class<?> parameterClass = validParamMap.get(transformedKey)__                Object parameterValue = parameters.get(key)___                if (parameterClass == null || parameterValue == null) {_                    throw new DockerClientException("Failed to validate parameter type for property " + key)__                }__                if (Integer.class == parameterClass) {_                    Integer.parseInt((String) parameterValue)__                } else if (Boolean.class == parameterClass) {_                    BooleanUtils.toBooleanObject((String) parameterValue, "true", "false", "null")__                }_            } catch (Exception e) {_                throw new DockerClientException("Failed to validate parameter type for property " + key)__            }_        }__    };validates,the,uri,parameters,for,a,given,link,docker,operation,param,docker,operation,param,parameters;public,static,void,validate,parameters,docker,operation,docker,operation,map,string,object,parameters,map,string,class,valid,param,map,new,hash,map,string,class,valid,param,map,put,all,docker,constants,valid,param,map,put,all,docker,operation,get,parameters,for,string,key,parameters,key,set,string,transformed,key,docker,helper,transform,to,header,name,key,if,valid,param,map,contains,key,transformed,key,throw,new,docker,client,exception,key,is,not,a,valid,uri,parameter,try,class,parameter,class,valid,param,map,get,transformed,key,object,parameter,value,parameters,get,key,if,parameter,class,null,parameter,value,null,throw,new,docker,client,exception,failed,to,validate,parameter,type,for,property,key,if,integer,class,parameter,class,integer,parse,int,string,parameter,value,else,if,boolean,class,parameter,class,boolean,utils,to,boolean,object,string,parameter,value,true,false,null,catch,exception,e,throw,new,docker,client,exception,failed,to,validate,parameter,type,for,property,key
DockerHelper -> public static void validateParameters(DockerOperation dockerOperation, Map<String, Object> parameters);1474362454;Validates the URI parameters for a given {@link DockerOperation}__@param dockerOperation_@param parameters;public static void validateParameters(DockerOperation dockerOperation, Map<String, Object> parameters) {_        Map<String, Class<?>> validParamMap = new HashMap<String, Class<?>>()__        validParamMap.putAll(DockerConstants.DOCKER_DEFAULT_PARAMETERS)__        validParamMap.putAll(dockerOperation.getParameters())___        for (String key : parameters.keySet()) {__            String transformedKey = DockerHelper.transformToHeaderName(key)___            _            if (!validParamMap.containsKey(transformedKey)) {_                throw new DockerClientException(key + " is not a valid URI parameter")__            }___            try {_                Class<?> parameterClass = validParamMap.get(transformedKey)__                Object parameterValue = parameters.get(key)___                if (parameterClass == null || parameterValue == null) {_                    throw new DockerClientException("Failed to validate parameter type for property " + key)__                }__                if (Integer.class == parameterClass) {_                    Integer.parseInt((String) parameterValue)__                } else if (Boolean.class == parameterClass) {_                    BooleanUtils.toBooleanObject((String) parameterValue, "true", "false", "null")__                }_            } catch (Exception e) {_                throw new DockerClientException("Failed to validate parameter type for property " + key)__            }_        }__    };validates,the,uri,parameters,for,a,given,link,docker,operation,param,docker,operation,param,parameters;public,static,void,validate,parameters,docker,operation,docker,operation,map,string,object,parameters,map,string,class,valid,param,map,new,hash,map,string,class,valid,param,map,put,all,docker,constants,valid,param,map,put,all,docker,operation,get,parameters,for,string,key,parameters,key,set,string,transformed,key,docker,helper,transform,to,header,name,key,if,valid,param,map,contains,key,transformed,key,throw,new,docker,client,exception,key,is,not,a,valid,uri,parameter,try,class,parameter,class,valid,param,map,get,transformed,key,object,parameter,value,parameters,get,key,if,parameter,class,null,parameter,value,null,throw,new,docker,client,exception,failed,to,validate,parameter,type,for,property,key,if,integer,class,parameter,class,integer,parse,int,string,parameter,value,else,if,boolean,class,parameter,class,boolean,utils,to,boolean,object,string,parameter,value,true,false,null,catch,exception,e,throw,new,docker,client,exception,failed,to,validate,parameter,type,for,property,key
DockerHelper -> public static void validateParameters(DockerOperation dockerOperation, Map<String, Object> parameters);1474362454;Validates the URI parameters for a given {@link DockerOperation}__@param dockerOperation_@param parameters;public static void validateParameters(DockerOperation dockerOperation, Map<String, Object> parameters) {_        Map<String, Class<?>> validParamMap = new HashMap<String, Class<?>>()__        validParamMap.putAll(DockerConstants.DOCKER_DEFAULT_PARAMETERS)__        validParamMap.putAll(dockerOperation.getParameters())___        for (String key : parameters.keySet()) {__            String transformedKey = DockerHelper.transformToHeaderName(key)___            _            if (!validParamMap.containsKey(transformedKey)) {_                throw new DockerClientException(key + " is not a valid URI parameter")__            }__            try {_                Class<?> parameterClass = validParamMap.get(transformedKey)__                Object parameterValue = parameters.get(key)___                if (parameterClass == null || parameterValue == null) {_                    throw new DockerClientException("Failed to validate parameter type for property " + key)__                }__                if (Integer.class == parameterClass) {_                    Integer.parseInt((String)parameterValue)__                } else if (Boolean.class == parameterClass) {_                    BooleanUtils.toBooleanObject((String)parameterValue, "true", "false", "null")__                }_            } catch (Exception e) {_                throw new DockerClientException("Failed to validate parameter type for property " + key)__            }_        }__    };validates,the,uri,parameters,for,a,given,link,docker,operation,param,docker,operation,param,parameters;public,static,void,validate,parameters,docker,operation,docker,operation,map,string,object,parameters,map,string,class,valid,param,map,new,hash,map,string,class,valid,param,map,put,all,docker,constants,valid,param,map,put,all,docker,operation,get,parameters,for,string,key,parameters,key,set,string,transformed,key,docker,helper,transform,to,header,name,key,if,valid,param,map,contains,key,transformed,key,throw,new,docker,client,exception,key,is,not,a,valid,uri,parameter,try,class,parameter,class,valid,param,map,get,transformed,key,object,parameter,value,parameters,get,key,if,parameter,class,null,parameter,value,null,throw,new,docker,client,exception,failed,to,validate,parameter,type,for,property,key,if,integer,class,parameter,class,integer,parse,int,string,parameter,value,else,if,boolean,class,parameter,class,boolean,utils,to,boolean,object,string,parameter,value,true,false,null,catch,exception,e,throw,new,docker,client,exception,failed,to,validate,parameter,type,for,property,key
DockerHelper -> public static void validateParameters(DockerOperation dockerOperation, Map<String, Object> parameters);1488877173;Validates the URI parameters for a given {@link DockerOperation}__@param dockerOperation_@param parameters;public static void validateParameters(DockerOperation dockerOperation, Map<String, Object> parameters) {_        Map<String, Class<?>> validParamMap = new HashMap<String, Class<?>>()__        validParamMap.putAll(DockerConstants.DOCKER_DEFAULT_PARAMETERS)__        validParamMap.putAll(dockerOperation.getParameters())___        for (String key : parameters.keySet()) {__            String transformedKey = DockerHelper.transformToHeaderName(key)___            _            if (!validParamMap.containsKey(transformedKey)) {_                throw new DockerClientException(key + " is not a valid URI parameter")__            }__            try {_                Class<?> parameterClass = validParamMap.get(transformedKey)__                Object parameterValue = parameters.get(key)___                if (parameterClass == null || parameterValue == null) {_                    throw new DockerClientException("Failed to validate parameter type for property " + key)__                }__                if (Integer.class == parameterClass) {_                    Integer.parseInt((String)parameterValue)__                } else if (Boolean.class == parameterClass) {_                    BooleanUtils.toBooleanObject((String)parameterValue, "true", "false", "null")__                }_            } catch (Exception e) {_                throw new DockerClientException("Failed to validate parameter type for property " + key)__            }_        }_    };validates,the,uri,parameters,for,a,given,link,docker,operation,param,docker,operation,param,parameters;public,static,void,validate,parameters,docker,operation,docker,operation,map,string,object,parameters,map,string,class,valid,param,map,new,hash,map,string,class,valid,param,map,put,all,docker,constants,valid,param,map,put,all,docker,operation,get,parameters,for,string,key,parameters,key,set,string,transformed,key,docker,helper,transform,to,header,name,key,if,valid,param,map,contains,key,transformed,key,throw,new,docker,client,exception,key,is,not,a,valid,uri,parameter,try,class,parameter,class,valid,param,map,get,transformed,key,object,parameter,value,parameters,get,key,if,parameter,class,null,parameter,value,null,throw,new,docker,client,exception,failed,to,validate,parameter,type,for,property,key,if,integer,class,parameter,class,integer,parse,int,string,parameter,value,else,if,boolean,class,parameter,class,boolean,utils,to,boolean,object,string,parameter,value,true,false,null,catch,exception,e,throw,new,docker,client,exception,failed,to,validate,parameter,type,for,property,key
DockerHelper -> public static String transformFromHeaderName(String name);1415211488;Transforms a Docker Component header value to its' analogous URI parameter_@param name_@return;public static String transformFromHeaderName(String name) {_        ObjectHelper.notEmpty(name, "name")__        _        StringBuilder formattedName = new StringBuilder()__        _        String nameSubstring = name.substring(DockerConstants.DOCKER_PREFIX.length())__        _        if (nameSubstring.length() > 0) {_            formattedName.append(nameSubstring.substring(0, 1).toLowerCase())__            formattedName.append(nameSubstring.substring(1))_   _        }_        _        return formattedName.toString()__    };transforms,a,docker,component,header,value,to,its,analogous,uri,parameter,param,name,return;public,static,string,transform,from,header,name,string,name,object,helper,not,empty,name,name,string,builder,formatted,name,new,string,builder,string,name,substring,name,substring,docker,constants,length,if,name,substring,length,0,formatted,name,append,name,substring,substring,0,1,to,lower,case,formatted,name,append,name,substring,substring,1,return,formatted,name,to,string
DockerHelper -> public static String transformFromHeaderName(String name);1415517409;Transforms a Docker Component header value to its' analogous URI parameter_@param name_@return;public static String transformFromHeaderName(String name) {_        ObjectHelper.notEmpty(name, "name")__        _        StringBuilder formattedName = new StringBuilder()__        _        String nameSubstring = name.substring(DockerConstants.DOCKER_PREFIX.length())__        _        if (nameSubstring.length() > 0) {_            formattedName.append(nameSubstring.substring(0, 1).toLowerCase())__            formattedName.append(nameSubstring.substring(1))_   _        }_        _        return formattedName.toString()__    };transforms,a,docker,component,header,value,to,its,analogous,uri,parameter,param,name,return;public,static,string,transform,from,header,name,string,name,object,helper,not,empty,name,name,string,builder,formatted,name,new,string,builder,string,name,substring,name,substring,docker,constants,length,if,name,substring,length,0,formatted,name,append,name,substring,substring,0,1,to,lower,case,formatted,name,append,name,substring,substring,1,return,formatted,name,to,string
DockerHelper -> public static String transformFromHeaderName(String name);1424675020;Transforms a Docker Component header value to its' analogous URI parameter_@param name_@return;public static String transformFromHeaderName(String name) {_        ObjectHelper.notEmpty(name, "name")__        _        StringBuilder formattedName = new StringBuilder()__        _        String nameSubstring = name.substring(DockerConstants.DOCKER_PREFIX.length())__        _        if (nameSubstring.length() > 0) {_            formattedName.append(nameSubstring.substring(0, 1).toLowerCase())__            formattedName.append(nameSubstring.substring(1))_   _        }_        _        return formattedName.toString()__    };transforms,a,docker,component,header,value,to,its,analogous,uri,parameter,param,name,return;public,static,string,transform,from,header,name,string,name,object,helper,not,empty,name,name,string,builder,formatted,name,new,string,builder,string,name,substring,name,substring,docker,constants,length,if,name,substring,length,0,formatted,name,append,name,substring,substring,0,1,to,lower,case,formatted,name,append,name,substring,substring,1,return,formatted,name,to,string
DockerHelper -> public static String transformFromHeaderName(String name);1424675476;Transforms a Docker Component header value to its' analogous URI parameter__@param name_@return;public static String transformFromHeaderName(String name) {_        ObjectHelper.notEmpty(name, "name")___        StringBuilder formattedName = new StringBuilder()___        String nameSubstring = name.substring(DockerConstants.DOCKER_PREFIX.length())___        if (nameSubstring.length() > 0) {_            formattedName.append(nameSubstring.substring(0, 1).toLowerCase())__            formattedName.append(nameSubstring.substring(1))__        }__        return formattedName.toString()__    };transforms,a,docker,component,header,value,to,its,analogous,uri,parameter,param,name,return;public,static,string,transform,from,header,name,string,name,object,helper,not,empty,name,name,string,builder,formatted,name,new,string,builder,string,name,substring,name,substring,docker,constants,length,if,name,substring,length,0,formatted,name,append,name,substring,substring,0,1,to,lower,case,formatted,name,append,name,substring,substring,1,return,formatted,name,to,string
DockerHelper -> public static String transformFromHeaderName(String name);1474362454;Transforms a Docker Component header value to its' analogous URI parameter__@param name_@return;public static String transformFromHeaderName(String name) {_        ObjectHelper.notEmpty(name, "name")___        StringBuilder formattedName = new StringBuilder()___        String nameSubstring = name.substring(DockerConstants.DOCKER_PREFIX.length())___        if (nameSubstring.length() > 0) {_            formattedName.append(nameSubstring.substring(0, 1).toLowerCase())__            formattedName.append(nameSubstring.substring(1))__        }__        return formattedName.toString()__    };transforms,a,docker,component,header,value,to,its,analogous,uri,parameter,param,name,return;public,static,string,transform,from,header,name,string,name,object,helper,not,empty,name,name,string,builder,formatted,name,new,string,builder,string,name,substring,name,substring,docker,constants,length,if,name,substring,length,0,formatted,name,append,name,substring,substring,0,1,to,lower,case,formatted,name,append,name,substring,substring,1,return,formatted,name,to,string
DockerHelper -> public static String transformFromHeaderName(String name);1474362454;Transforms a Docker Component header value to its' analogous URI_parameter__@param name_@return;public static String transformFromHeaderName(String name) {_        ObjectHelper.notEmpty(name, "name")___        StringBuilder formattedName = new StringBuilder()___        String nameSubstring = name.substring(DockerConstants.DOCKER_PREFIX.length())___        if (nameSubstring.length() > 0) {_            formattedName.append(nameSubstring.substring(0, 1).toLowerCase())__            formattedName.append(nameSubstring.substring(1))__        }__        return formattedName.toString()__    };transforms,a,docker,component,header,value,to,its,analogous,uri,parameter,param,name,return;public,static,string,transform,from,header,name,string,name,object,helper,not,empty,name,name,string,builder,formatted,name,new,string,builder,string,name,substring,name,substring,docker,constants,length,if,name,substring,length,0,formatted,name,append,name,substring,substring,0,1,to,lower,case,formatted,name,append,name,substring,substring,1,return,formatted,name,to,string
DockerHelper -> public static String transformFromHeaderName(String name);1488877173;Transforms a Docker Component header value to its analogous URI_parameter__@param name_@return;public static String transformFromHeaderName(String name) {_        ObjectHelper.notEmpty(name, "name")___        StringBuilder formattedName = new StringBuilder()___        String nameSubstring = name.substring(DockerConstants.DOCKER_PREFIX.length())___        if (nameSubstring.length() > 0) {_            formattedName.append(nameSubstring.substring(0, 1).toLowerCase())__            formattedName.append(nameSubstring.substring(1))__        }__        return formattedName.toString()__    };transforms,a,docker,component,header,value,to,its,analogous,uri,parameter,param,name,return;public,static,string,transform,from,header,name,string,name,object,helper,not,empty,name,name,string,builder,formatted,name,new,string,builder,string,name,substring,name,substring,docker,constants,length,if,name,substring,length,0,formatted,name,append,name,substring,substring,0,1,to,lower,case,formatted,name,append,name,substring,substring,1,return,formatted,name,to,string
DockerHelper -> public static String transformFromHeaderName(String name);1506506021;Transforms a Docker Component header value to its analogous URI_parameter__@param name_@return;public static String transformFromHeaderName(String name) {_        ObjectHelper.notEmpty(name, "name")___        StringBuilder formattedName = new StringBuilder()___        String nameSubstring = name.substring(DockerConstants.DOCKER_PREFIX.length())___        if (nameSubstring.length() > 0) {_            formattedName.append(nameSubstring.substring(0, 1).toLowerCase())__            formattedName.append(nameSubstring.substring(1))__        }__        return formattedName.toString()__    };transforms,a,docker,component,header,value,to,its,analogous,uri,parameter,param,name,return;public,static,string,transform,from,header,name,string,name,object,helper,not,empty,name,name,string,builder,formatted,name,new,string,builder,string,name,substring,name,substring,docker,constants,length,if,name,substring,length,0,formatted,name,append,name,substring,substring,0,1,to,lower,case,formatted,name,append,name,substring,substring,1,return,formatted,name,to,string
DockerHelper -> public static String transformFromHeaderName(String name);1540108158;Transforms a Docker Component header value to its analogous URI_parameter__@param name_@return;public static String transformFromHeaderName(String name) {_        StringHelper.notEmpty(name, "name")___        StringBuilder formattedName = new StringBuilder()___        String nameSubstring = name.substring(DockerConstants.DOCKER_PREFIX.length())___        if (nameSubstring.length() > 0) {_            formattedName.append(nameSubstring.substring(0, 1).toLowerCase())__            formattedName.append(nameSubstring.substring(1))__        }__        return formattedName.toString()__    };transforms,a,docker,component,header,value,to,its,analogous,uri,parameter,param,name,return;public,static,string,transform,from,header,name,string,name,string,helper,not,empty,name,name,string,builder,formatted,name,new,string,builder,string,name,substring,name,substring,docker,constants,length,if,name,substring,length,0,formatted,name,append,name,substring,substring,0,1,to,lower,case,formatted,name,append,name,substring,substring,1,return,formatted,name,to,string
