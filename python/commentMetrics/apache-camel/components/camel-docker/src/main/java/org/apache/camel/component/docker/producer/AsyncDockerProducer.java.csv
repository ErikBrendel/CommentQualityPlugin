# id;timestamp;commentText;codeText;commentWords;codeWords
AsyncDockerProducer -> private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException;1474362454;Produces a build image request__@param client_@param message_@return_@throws DockerException;private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Build Image Request")___        Object body = message.getBody()___        BuildImageCmd buildImageCmd___        if (body != null && body instanceof InputStream) {_            buildImageCmd = client.buildImageCmd((InputStream)body)__        } else if (body != null && body instanceof File) {_            buildImageCmd = client.buildImageCmd((File)body)__        } else {_            throw new DockerException("Unable to location source Image")__        }__        Boolean noCache = DockerHelper.getProperty(DockerConstants.DOCKER_NO_CACHE, configuration, message, Boolean.class)___        if (noCache != null) {_            buildImageCmd.withNoCache(noCache)__        }__        Boolean quiet = DockerHelper.getProperty(DockerConstants.DOCKER_QUIET, configuration, message, Boolean.class)___        if (quiet != null) {_            buildImageCmd.withQuiet(quiet)__        }__        Boolean remove = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE, configuration, message, Boolean.class)___        if (remove != null) {_            buildImageCmd.withRemove(remove)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            buildImageCmd.withTag(tag)__        }__        return buildImageCmd___    };produces,a,build,image,request,param,client,param,message,return,throws,docker,exception;private,build,image,cmd,execute,build,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,build,image,request,object,body,message,get,body,build,image,cmd,build,image,cmd,if,body,null,body,instanceof,input,stream,build,image,cmd,client,build,image,cmd,input,stream,body,else,if,body,null,body,instanceof,file,build,image,cmd,client,build,image,cmd,file,body,else,throw,new,docker,exception,unable,to,location,source,image,boolean,no,cache,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,cache,null,build,image,cmd,with,no,cache,no,cache,boolean,quiet,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,quiet,null,build,image,cmd,with,quiet,quiet,boolean,remove,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,null,build,image,cmd,with,remove,remove,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,build,image,cmd,with,tag,tag,return,build,image,cmd
AsyncDockerProducer -> private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException;1474362454;Produces a build image request__@param client_@param message_@return_@throws DockerException;private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Build Image Request")___        Object body = message.getBody()___        BuildImageCmd buildImageCmd___        if (body != null && body instanceof InputStream) {_            buildImageCmd = client.buildImageCmd((InputStream)body)__        } else if (body != null && body instanceof File) {_            buildImageCmd = client.buildImageCmd((File)body)__        } else {_            throw new DockerException("Unable to location source Image")__        }__        Boolean noCache = DockerHelper.getProperty(DockerConstants.DOCKER_NO_CACHE, configuration, message, Boolean.class)___        if (noCache != null) {_            buildImageCmd.withNoCache(noCache)__        }__        Boolean quiet = DockerHelper.getProperty(DockerConstants.DOCKER_QUIET, configuration, message, Boolean.class)___        if (quiet != null) {_            buildImageCmd.withQuiet(quiet)__        }__        Boolean remove = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE, configuration, message, Boolean.class)___        if (remove != null) {_            buildImageCmd.withRemove(remove)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            buildImageCmd.withTag(tag)__        }__        return buildImageCmd___    };produces,a,build,image,request,param,client,param,message,return,throws,docker,exception;private,build,image,cmd,execute,build,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,build,image,request,object,body,message,get,body,build,image,cmd,build,image,cmd,if,body,null,body,instanceof,input,stream,build,image,cmd,client,build,image,cmd,input,stream,body,else,if,body,null,body,instanceof,file,build,image,cmd,client,build,image,cmd,file,body,else,throw,new,docker,exception,unable,to,location,source,image,boolean,no,cache,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,cache,null,build,image,cmd,with,no,cache,no,cache,boolean,quiet,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,quiet,null,build,image,cmd,with,quiet,quiet,boolean,remove,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,null,build,image,cmd,with,remove,remove,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,build,image,cmd,with,tag,tag,return,build,image,cmd
AsyncDockerProducer -> private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException;1479916234;Produces a build image request__@param client_@param message_@return_@throws DockerException;private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Build Image Request")___        Object body = message.getBody()___        BuildImageCmd buildImageCmd___        if (body != null && body instanceof InputStream) {_            buildImageCmd = client.buildImageCmd((InputStream)body)__        } else if (body != null && body instanceof File) {_            buildImageCmd = client.buildImageCmd((File)body)__        } else {_            throw new DockerException("Unable to location source Image")__        }__        Boolean noCache = DockerHelper.getProperty(DockerConstants.DOCKER_NO_CACHE, configuration, message, Boolean.class)___        if (noCache != null) {_            buildImageCmd.withNoCache(noCache)__        }__        Boolean quiet = DockerHelper.getProperty(DockerConstants.DOCKER_QUIET, configuration, message, Boolean.class)___        if (quiet != null) {_            buildImageCmd.withQuiet(quiet)__        }__        Boolean remove = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE, configuration, message, Boolean.class)___        if (remove != null) {_            buildImageCmd.withRemove(remove)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            buildImageCmd.withTag(tag)__        }__        return buildImageCmd___    };produces,a,build,image,request,param,client,param,message,return,throws,docker,exception;private,build,image,cmd,execute,build,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,build,image,request,object,body,message,get,body,build,image,cmd,build,image,cmd,if,body,null,body,instanceof,input,stream,build,image,cmd,client,build,image,cmd,input,stream,body,else,if,body,null,body,instanceof,file,build,image,cmd,client,build,image,cmd,file,body,else,throw,new,docker,exception,unable,to,location,source,image,boolean,no,cache,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,cache,null,build,image,cmd,with,no,cache,no,cache,boolean,quiet,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,quiet,null,build,image,cmd,with,quiet,quiet,boolean,remove,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,null,build,image,cmd,with,remove,remove,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,build,image,cmd,with,tag,tag,return,build,image,cmd
AsyncDockerProducer -> private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException;1513158838;Produces a build image request__@param client_@param message_@return_@throws DockerException;private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Build Image Request")___        Object body = message.getBody()___        BuildImageCmd buildImageCmd___        if (body instanceof InputStream) {_            buildImageCmd = client.buildImageCmd((InputStream)body)__        } else if (body instanceof File) {_            buildImageCmd = client.buildImageCmd((File)body)__        } else {_            throw new DockerException("Unable to location source Image")__        }__        Boolean noCache = DockerHelper.getProperty(DockerConstants.DOCKER_NO_CACHE, configuration, message, Boolean.class)___        if (noCache != null) {_            buildImageCmd.withNoCache(noCache)__        }__        Boolean quiet = DockerHelper.getProperty(DockerConstants.DOCKER_QUIET, configuration, message, Boolean.class)___        if (quiet != null) {_            buildImageCmd.withQuiet(quiet)__        }__        Boolean remove = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE, configuration, message, Boolean.class)___        if (remove != null) {_            buildImageCmd.withRemove(remove)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            buildImageCmd.withTag(tag)__        }__        return buildImageCmd___    };produces,a,build,image,request,param,client,param,message,return,throws,docker,exception;private,build,image,cmd,execute,build,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,build,image,request,object,body,message,get,body,build,image,cmd,build,image,cmd,if,body,instanceof,input,stream,build,image,cmd,client,build,image,cmd,input,stream,body,else,if,body,instanceof,file,build,image,cmd,client,build,image,cmd,file,body,else,throw,new,docker,exception,unable,to,location,source,image,boolean,no,cache,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,cache,null,build,image,cmd,with,no,cache,no,cache,boolean,quiet,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,quiet,null,build,image,cmd,with,quiet,quiet,boolean,remove,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,null,build,image,cmd,with,remove,remove,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,build,image,cmd,with,tag,tag,return,build,image,cmd
AsyncDockerProducer -> private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException;1534005238;Produces a build image request__@param client_@param message_@return_@throws DockerException;private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Build Image Request")___        Object body = message.getBody()___        BuildImageCmd buildImageCmd___        if (body instanceof InputStream) {_            buildImageCmd = client.buildImageCmd((InputStream)body)__        } else if (body instanceof File) {_            buildImageCmd = client.buildImageCmd((File)body)__        } else {_            throw new DockerException("Unable to location source Image")__        }__        Boolean noCache = DockerHelper.getProperty(DockerConstants.DOCKER_NO_CACHE, configuration, message, Boolean.class)___        if (noCache != null) {_            buildImageCmd.withNoCache(noCache)__        }__        Boolean quiet = DockerHelper.getProperty(DockerConstants.DOCKER_QUIET, configuration, message, Boolean.class)___        if (quiet != null) {_            buildImageCmd.withQuiet(quiet)__        }__        Boolean remove = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE, configuration, message, Boolean.class)___        if (remove != null) {_            buildImageCmd.withRemove(remove)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            buildImageCmd.withTag(tag)__        }__        return buildImageCmd___    };produces,a,build,image,request,param,client,param,message,return,throws,docker,exception;private,build,image,cmd,execute,build,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,build,image,request,object,body,message,get,body,build,image,cmd,build,image,cmd,if,body,instanceof,input,stream,build,image,cmd,client,build,image,cmd,input,stream,body,else,if,body,instanceof,file,build,image,cmd,client,build,image,cmd,file,body,else,throw,new,docker,exception,unable,to,location,source,image,boolean,no,cache,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,cache,null,build,image,cmd,with,no,cache,no,cache,boolean,quiet,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,quiet,null,build,image,cmd,with,quiet,quiet,boolean,remove,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,null,build,image,cmd,with,remove,remove,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,build,image,cmd,with,tag,tag,return,build,image,cmd
AsyncDockerProducer -> private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException;1540108163;Produces a build image request__@param client_@param message_@return_@throws DockerException;private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Build Image Request")___        Object body = message.getBody()___        BuildImageCmd buildImageCmd___        if (body instanceof InputStream) {_            buildImageCmd = client.buildImageCmd((InputStream)body)__        } else if (body instanceof File) {_            buildImageCmd = client.buildImageCmd((File)body)__        } else {_            throw new DockerException("Unable to location source Image")__        }__        Boolean noCache = DockerHelper.getProperty(DockerConstants.DOCKER_NO_CACHE, configuration, message, Boolean.class)___        if (noCache != null) {_            buildImageCmd.withNoCache(noCache)__        }__        Boolean quiet = DockerHelper.getProperty(DockerConstants.DOCKER_QUIET, configuration, message, Boolean.class)___        if (quiet != null) {_            buildImageCmd.withQuiet(quiet)__        }__        Boolean remove = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE, configuration, message, Boolean.class)___        if (remove != null) {_            buildImageCmd.withRemove(remove)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            buildImageCmd.withTag(tag)__        }__        return buildImageCmd___    };produces,a,build,image,request,param,client,param,message,return,throws,docker,exception;private,build,image,cmd,execute,build,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,build,image,request,object,body,message,get,body,build,image,cmd,build,image,cmd,if,body,instanceof,input,stream,build,image,cmd,client,build,image,cmd,input,stream,body,else,if,body,instanceof,file,build,image,cmd,client,build,image,cmd,file,body,else,throw,new,docker,exception,unable,to,location,source,image,boolean,no,cache,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,cache,null,build,image,cmd,with,no,cache,no,cache,boolean,quiet,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,quiet,null,build,image,cmd,with,quiet,quiet,boolean,remove,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,null,build,image,cmd,with,remove,remove,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,build,image,cmd,with,tag,tag,return,build,image,cmd
AsyncDockerProducer -> private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException;1542904331;Produces a build image request__@param client_@param message_@return_@throws DockerException;private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Build Image Request")___        Object body = message.getBody()___        BuildImageCmd buildImageCmd___        if (body instanceof InputStream) {_            buildImageCmd = client.buildImageCmd((InputStream)body)__        } else if (body instanceof File) {_            buildImageCmd = client.buildImageCmd((File)body)__        } else {_            throw new DockerException("Unable to location source Image")__        }__        Boolean noCache = DockerHelper.getProperty(DockerConstants.DOCKER_NO_CACHE, configuration, message, Boolean.class)___        if (noCache != null) {_            buildImageCmd.withNoCache(noCache)__        }__        Boolean quiet = DockerHelper.getProperty(DockerConstants.DOCKER_QUIET, configuration, message, Boolean.class)___        if (quiet != null) {_            buildImageCmd.withQuiet(quiet)__        }__        Boolean remove = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE, configuration, message, Boolean.class)___        if (remove != null) {_            buildImageCmd.withRemove(remove)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            buildImageCmd.withTag(tag)__        }__        return buildImageCmd___    };produces,a,build,image,request,param,client,param,message,return,throws,docker,exception;private,build,image,cmd,execute,build,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,build,image,request,object,body,message,get,body,build,image,cmd,build,image,cmd,if,body,instanceof,input,stream,build,image,cmd,client,build,image,cmd,input,stream,body,else,if,body,instanceof,file,build,image,cmd,client,build,image,cmd,file,body,else,throw,new,docker,exception,unable,to,location,source,image,boolean,no,cache,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,cache,null,build,image,cmd,with,no,cache,no,cache,boolean,quiet,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,quiet,null,build,image,cmd,with,quiet,quiet,boolean,remove,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,null,build,image,cmd,with,remove,remove,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,build,image,cmd,with,tag,tag,return,build,image,cmd
AsyncDockerProducer -> private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message);1474362454;Produce a wait container request__@param client_@param message_@return;private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Wait Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        WaitContainerCmd waitContainerCmd = client.waitContainerCmd(containerId)___        return waitContainerCmd___    };produce,a,wait,container,request,param,client,param,message,return;private,wait,container,cmd,execute,wait,container,request,docker,client,client,message,message,logger,debug,executing,docker,wait,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,wait,container,cmd,wait,container,cmd,client,wait,container,cmd,container,id,return,wait,container,cmd
AsyncDockerProducer -> private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message);1474362454;Produce a wait container request__@param client_@param message_@return;private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Wait Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        WaitContainerCmd waitContainerCmd = client.waitContainerCmd(containerId)___        return waitContainerCmd___    };produce,a,wait,container,request,param,client,param,message,return;private,wait,container,cmd,execute,wait,container,request,docker,client,client,message,message,logger,debug,executing,docker,wait,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,wait,container,cmd,wait,container,cmd,client,wait,container,cmd,container,id,return,wait,container,cmd
AsyncDockerProducer -> private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message);1479916234;Produce a wait container request__@param client_@param message_@return;private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Wait Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        WaitContainerCmd waitContainerCmd = client.waitContainerCmd(containerId)___        return waitContainerCmd___    };produce,a,wait,container,request,param,client,param,message,return;private,wait,container,cmd,execute,wait,container,request,docker,client,client,message,message,logger,debug,executing,docker,wait,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,wait,container,cmd,wait,container,cmd,client,wait,container,cmd,container,id,return,wait,container,cmd
AsyncDockerProducer -> private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message);1513158838;Produce a wait container request__@param client_@param message_@return;private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Wait Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        WaitContainerCmd waitContainerCmd = client.waitContainerCmd(containerId)___        return waitContainerCmd___    };produce,a,wait,container,request,param,client,param,message,return;private,wait,container,cmd,execute,wait,container,request,docker,client,client,message,message,logger,debug,executing,docker,wait,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,wait,container,cmd,wait,container,cmd,client,wait,container,cmd,container,id,return,wait,container,cmd
AsyncDockerProducer -> private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message);1534005238;Produce a wait container request__@param client_@param message_@return;private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Wait Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        WaitContainerCmd waitContainerCmd = client.waitContainerCmd(containerId)___        return waitContainerCmd___    };produce,a,wait,container,request,param,client,param,message,return;private,wait,container,cmd,execute,wait,container,request,docker,client,client,message,message,logger,debug,executing,docker,wait,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,wait,container,cmd,wait,container,cmd,client,wait,container,cmd,container,id,return,wait,container,cmd
AsyncDockerProducer -> private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message);1540108163;Produce a wait container request__@param client_@param message_@return;private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Wait Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        WaitContainerCmd waitContainerCmd = client.waitContainerCmd(containerId)___        return waitContainerCmd___    };produce,a,wait,container,request,param,client,param,message,return;private,wait,container,cmd,execute,wait,container,request,docker,client,client,message,message,logger,debug,executing,docker,wait,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,wait,container,cmd,wait,container,cmd,client,wait,container,cmd,container,id,return,wait,container,cmd
AsyncDockerProducer -> private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message);1542904331;Produce a wait container request__@param client_@param message_@return;private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Wait Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        WaitContainerCmd waitContainerCmd = client.waitContainerCmd(containerId)___        return waitContainerCmd___    };produce,a,wait,container,request,param,client,param,message,return;private,wait,container,cmd,execute,wait,container,request,docker,client,client,message,message,logger,debug,executing,docker,wait,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,wait,container,cmd,wait,container,cmd,client,wait,container,cmd,container,id,return,wait,container,cmd
AsyncDockerProducer -> private ExecStartCmd executeExecStartRequest(DockerClient client, Message message);1474362454;Produces a exec start request__@param client_@param message_@return;private ExecStartCmd executeExecStartRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Exec Create Request")___        String execId = DockerHelper.getProperty(DockerConstants.DOCKER_EXEC_ID, configuration, message, String.class)___        ObjectHelper.notNull(execId, "Exec ID must be specified")___        ExecStartCmd execStartCmd = client.execStartCmd(execId)___        Boolean detach = DockerHelper.getProperty(DockerConstants.DOCKER_DETACH, configuration, message, Boolean.class)___        if (detach != null) {_            execStartCmd.withDetach(detach)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            execStartCmd.withTty(tty)__        }__        return execStartCmd___    };produces,a,exec,start,request,param,client,param,message,return;private,exec,start,cmd,execute,exec,start,request,docker,client,client,message,message,logger,debug,executing,docker,exec,create,request,string,exec,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,exec,id,exec,id,must,be,specified,exec,start,cmd,exec,start,cmd,client,exec,start,cmd,exec,id,boolean,detach,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,detach,null,exec,start,cmd,with,detach,detach,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,exec,start,cmd,with,tty,tty,return,exec,start,cmd
AsyncDockerProducer -> private ExecStartCmd executeExecStartRequest(DockerClient client, Message message);1474362454;Produces a exec start request__@param client_@param message_@return;private ExecStartCmd executeExecStartRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Exec Create Request")___        String execId = DockerHelper.getProperty(DockerConstants.DOCKER_EXEC_ID, configuration, message, String.class)___        ObjectHelper.notNull(execId, "Exec ID must be specified")___        ExecStartCmd execStartCmd = client.execStartCmd(execId)___        Boolean detach = DockerHelper.getProperty(DockerConstants.DOCKER_DETACH, configuration, message, Boolean.class)___        if (detach != null) {_            execStartCmd.withDetach(detach)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            execStartCmd.withTty(tty)__        }__        return execStartCmd___    };produces,a,exec,start,request,param,client,param,message,return;private,exec,start,cmd,execute,exec,start,request,docker,client,client,message,message,logger,debug,executing,docker,exec,create,request,string,exec,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,exec,id,exec,id,must,be,specified,exec,start,cmd,exec,start,cmd,client,exec,start,cmd,exec,id,boolean,detach,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,detach,null,exec,start,cmd,with,detach,detach,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,exec,start,cmd,with,tty,tty,return,exec,start,cmd
AsyncDockerProducer -> private ExecStartCmd executeExecStartRequest(DockerClient client, Message message);1479916234;Produces a exec start request__@param client_@param message_@return;private ExecStartCmd executeExecStartRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Exec Create Request")___        String execId = DockerHelper.getProperty(DockerConstants.DOCKER_EXEC_ID, configuration, message, String.class)___        ObjectHelper.notNull(execId, "Exec ID must be specified")___        ExecStartCmd execStartCmd = client.execStartCmd(execId)___        Boolean detach = DockerHelper.getProperty(DockerConstants.DOCKER_DETACH, configuration, message, Boolean.class)___        if (detach != null) {_            execStartCmd.withDetach(detach)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            execStartCmd.withTty(tty)__        }__        return execStartCmd___    };produces,a,exec,start,request,param,client,param,message,return;private,exec,start,cmd,execute,exec,start,request,docker,client,client,message,message,logger,debug,executing,docker,exec,create,request,string,exec,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,exec,id,exec,id,must,be,specified,exec,start,cmd,exec,start,cmd,client,exec,start,cmd,exec,id,boolean,detach,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,detach,null,exec,start,cmd,with,detach,detach,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,exec,start,cmd,with,tty,tty,return,exec,start,cmd
AsyncDockerProducer -> private ExecStartCmd executeExecStartRequest(DockerClient client, Message message);1513158838;Produces a exec start request__@param client_@param message_@return;private ExecStartCmd executeExecStartRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Exec Create Request")___        String execId = DockerHelper.getProperty(DockerConstants.DOCKER_EXEC_ID, configuration, message, String.class)___        ObjectHelper.notNull(execId, "Exec ID must be specified")___        ExecStartCmd execStartCmd = client.execStartCmd(execId)___        Boolean detach = DockerHelper.getProperty(DockerConstants.DOCKER_DETACH, configuration, message, Boolean.class)___        if (detach != null) {_            execStartCmd.withDetach(detach)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            execStartCmd.withTty(tty)__        }__        return execStartCmd___    };produces,a,exec,start,request,param,client,param,message,return;private,exec,start,cmd,execute,exec,start,request,docker,client,client,message,message,logger,debug,executing,docker,exec,create,request,string,exec,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,exec,id,exec,id,must,be,specified,exec,start,cmd,exec,start,cmd,client,exec,start,cmd,exec,id,boolean,detach,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,detach,null,exec,start,cmd,with,detach,detach,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,exec,start,cmd,with,tty,tty,return,exec,start,cmd
AsyncDockerProducer -> private ExecStartCmd executeExecStartRequest(DockerClient client, Message message);1534005238;Produces a exec start request__@param client_@param message_@return;private ExecStartCmd executeExecStartRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Exec Start Request")___        String execId = DockerHelper.getProperty(DockerConstants.DOCKER_EXEC_ID, configuration, message, String.class)___        ObjectHelper.notNull(execId, "Exec ID must be specified")___        ExecStartCmd execStartCmd = client.execStartCmd(execId)___        Boolean detach = DockerHelper.getProperty(DockerConstants.DOCKER_DETACH, configuration, message, Boolean.class)___        if (detach != null) {_            execStartCmd.withDetach(detach)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            execStartCmd.withTty(tty)__        }__        return execStartCmd___    };produces,a,exec,start,request,param,client,param,message,return;private,exec,start,cmd,execute,exec,start,request,docker,client,client,message,message,logger,debug,executing,docker,exec,start,request,string,exec,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,exec,id,exec,id,must,be,specified,exec,start,cmd,exec,start,cmd,client,exec,start,cmd,exec,id,boolean,detach,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,detach,null,exec,start,cmd,with,detach,detach,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,exec,start,cmd,with,tty,tty,return,exec,start,cmd
AsyncDockerProducer -> private ExecStartCmd executeExecStartRequest(DockerClient client, Message message);1540108163;Produces a exec start request__@param client_@param message_@return;private ExecStartCmd executeExecStartRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Exec Start Request")___        String execId = DockerHelper.getProperty(DockerConstants.DOCKER_EXEC_ID, configuration, message, String.class)___        ObjectHelper.notNull(execId, "Exec ID must be specified")___        ExecStartCmd execStartCmd = client.execStartCmd(execId)___        Boolean detach = DockerHelper.getProperty(DockerConstants.DOCKER_DETACH, configuration, message, Boolean.class)___        if (detach != null) {_            execStartCmd.withDetach(detach)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            execStartCmd.withTty(tty)__        }__        return execStartCmd___    };produces,a,exec,start,request,param,client,param,message,return;private,exec,start,cmd,execute,exec,start,request,docker,client,client,message,message,logger,debug,executing,docker,exec,start,request,string,exec,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,exec,id,exec,id,must,be,specified,exec,start,cmd,exec,start,cmd,client,exec,start,cmd,exec,id,boolean,detach,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,detach,null,exec,start,cmd,with,detach,detach,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,exec,start,cmd,with,tty,tty,return,exec,start,cmd
AsyncDockerProducer -> private ExecStartCmd executeExecStartRequest(DockerClient client, Message message);1542904331;Produces a exec start request__@param client_@param message_@return;private ExecStartCmd executeExecStartRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Exec Start Request")___        String execId = DockerHelper.getProperty(DockerConstants.DOCKER_EXEC_ID, configuration, message, String.class)___        ObjectHelper.notNull(execId, "Exec ID must be specified")___        ExecStartCmd execStartCmd = client.execStartCmd(execId)___        Boolean detach = DockerHelper.getProperty(DockerConstants.DOCKER_DETACH, configuration, message, Boolean.class)___        if (detach != null) {_            execStartCmd.withDetach(detach)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            execStartCmd.withTty(tty)__        }__        return execStartCmd___    };produces,a,exec,start,request,param,client,param,message,return;private,exec,start,cmd,execute,exec,start,request,docker,client,client,message,message,logger,debug,executing,docker,exec,start,request,string,exec,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,exec,id,exec,id,must,be,specified,exec,start,cmd,exec,start,cmd,client,exec,start,cmd,exec,id,boolean,detach,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,detach,null,exec,start,cmd,with,detach,detach,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,exec,start,cmd,with,tty,tty,return,exec,start,cmd
AsyncDockerProducer -> private PullImageCmd executePullImageRequest(DockerClient client, Message message);1474362454;Produces a pull image request__@param client_@param message_@return;private PullImageCmd executePullImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Pull Image Request")___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        ObjectHelper.notNull(repository, "Repository must be specified")___        PullImageCmd pullImageCmd = client.pullImageCmd(repository)___        String registry = DockerHelper.getProperty(DockerConstants.DOCKER_REGISTRY, configuration, message, String.class)__        if (registry != null) {_            pullImageCmd.withRegistry(registry)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)__        if (tag != null) {_            pullImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pullImageCmd.withAuthConfig(authConfig)__        }__        return pullImageCmd___    };produces,a,pull,image,request,param,client,param,message,return;private,pull,image,cmd,execute,pull,image,request,docker,client,client,message,message,logger,debug,executing,docker,pull,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,repository,repository,must,be,specified,pull,image,cmd,pull,image,cmd,client,pull,image,cmd,repository,string,registry,docker,helper,get,property,docker,constants,configuration,message,string,class,if,registry,null,pull,image,cmd,with,registry,registry,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,pull,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,pull,image,cmd,with,auth,config,auth,config,return,pull,image,cmd
AsyncDockerProducer -> private PullImageCmd executePullImageRequest(DockerClient client, Message message);1474362454;Produces a pull image request__@param client_@param message_@return;private PullImageCmd executePullImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Pull Image Request")___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        ObjectHelper.notNull(repository, "Repository must be specified")___        PullImageCmd pullImageCmd = client.pullImageCmd(repository)___        String registry = DockerHelper.getProperty(DockerConstants.DOCKER_REGISTRY, configuration, message, String.class)__        if (registry != null) {_            pullImageCmd.withRegistry(registry)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)__        if (tag != null) {_            pullImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pullImageCmd.withAuthConfig(authConfig)__        }__        return pullImageCmd___    };produces,a,pull,image,request,param,client,param,message,return;private,pull,image,cmd,execute,pull,image,request,docker,client,client,message,message,logger,debug,executing,docker,pull,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,repository,repository,must,be,specified,pull,image,cmd,pull,image,cmd,client,pull,image,cmd,repository,string,registry,docker,helper,get,property,docker,constants,configuration,message,string,class,if,registry,null,pull,image,cmd,with,registry,registry,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,pull,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,pull,image,cmd,with,auth,config,auth,config,return,pull,image,cmd
AsyncDockerProducer -> private PullImageCmd executePullImageRequest(DockerClient client, Message message);1479916234;Produces a pull image request__@param client_@param message_@return;private PullImageCmd executePullImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Pull Image Request")___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        ObjectHelper.notNull(repository, "Repository must be specified")___        PullImageCmd pullImageCmd = client.pullImageCmd(repository)___        String registry = DockerHelper.getProperty(DockerConstants.DOCKER_REGISTRY, configuration, message, String.class)__        if (registry != null) {_            pullImageCmd.withRegistry(registry)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)__        if (tag != null) {_            pullImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pullImageCmd.withAuthConfig(authConfig)__        }__        return pullImageCmd___    };produces,a,pull,image,request,param,client,param,message,return;private,pull,image,cmd,execute,pull,image,request,docker,client,client,message,message,logger,debug,executing,docker,pull,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,repository,repository,must,be,specified,pull,image,cmd,pull,image,cmd,client,pull,image,cmd,repository,string,registry,docker,helper,get,property,docker,constants,configuration,message,string,class,if,registry,null,pull,image,cmd,with,registry,registry,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,pull,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,pull,image,cmd,with,auth,config,auth,config,return,pull,image,cmd
AsyncDockerProducer -> private PullImageCmd executePullImageRequest(DockerClient client, Message message);1513158838;Produces a pull image request__@param client_@param message_@return;private PullImageCmd executePullImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Pull Image Request")___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        ObjectHelper.notNull(repository, "Repository must be specified")___        PullImageCmd pullImageCmd = client.pullImageCmd(repository)___        String registry = DockerHelper.getProperty(DockerConstants.DOCKER_REGISTRY, configuration, message, String.class)__        if (registry != null) {_            pullImageCmd.withRegistry(registry)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)__        if (tag != null) {_            pullImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pullImageCmd.withAuthConfig(authConfig)__        }__        return pullImageCmd___    };produces,a,pull,image,request,param,client,param,message,return;private,pull,image,cmd,execute,pull,image,request,docker,client,client,message,message,logger,debug,executing,docker,pull,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,repository,repository,must,be,specified,pull,image,cmd,pull,image,cmd,client,pull,image,cmd,repository,string,registry,docker,helper,get,property,docker,constants,configuration,message,string,class,if,registry,null,pull,image,cmd,with,registry,registry,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,pull,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,pull,image,cmd,with,auth,config,auth,config,return,pull,image,cmd
AsyncDockerProducer -> private PullImageCmd executePullImageRequest(DockerClient client, Message message);1534005238;Produces a pull image request__@param client_@param message_@return;private PullImageCmd executePullImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Pull Image Request")___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        ObjectHelper.notNull(repository, "Repository must be specified")___        PullImageCmd pullImageCmd = client.pullImageCmd(repository)___        String registry = DockerHelper.getProperty(DockerConstants.DOCKER_REGISTRY, configuration, message, String.class)__        if (registry != null) {_            pullImageCmd.withRegistry(registry)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)__        if (tag != null) {_            pullImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pullImageCmd.withAuthConfig(authConfig)__        }__        return pullImageCmd___    };produces,a,pull,image,request,param,client,param,message,return;private,pull,image,cmd,execute,pull,image,request,docker,client,client,message,message,logger,debug,executing,docker,pull,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,repository,repository,must,be,specified,pull,image,cmd,pull,image,cmd,client,pull,image,cmd,repository,string,registry,docker,helper,get,property,docker,constants,configuration,message,string,class,if,registry,null,pull,image,cmd,with,registry,registry,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,pull,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,pull,image,cmd,with,auth,config,auth,config,return,pull,image,cmd
AsyncDockerProducer -> private PullImageCmd executePullImageRequest(DockerClient client, Message message);1540108163;Produces a pull image request__@param client_@param message_@return;private PullImageCmd executePullImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Pull Image Request")___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        ObjectHelper.notNull(repository, "Repository must be specified")___        PullImageCmd pullImageCmd = client.pullImageCmd(repository)___        String registry = DockerHelper.getProperty(DockerConstants.DOCKER_REGISTRY, configuration, message, String.class)__        if (registry != null) {_            pullImageCmd.withRegistry(registry)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)__        if (tag != null) {_            pullImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pullImageCmd.withAuthConfig(authConfig)__        }__        return pullImageCmd___    };produces,a,pull,image,request,param,client,param,message,return;private,pull,image,cmd,execute,pull,image,request,docker,client,client,message,message,logger,debug,executing,docker,pull,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,repository,repository,must,be,specified,pull,image,cmd,pull,image,cmd,client,pull,image,cmd,repository,string,registry,docker,helper,get,property,docker,constants,configuration,message,string,class,if,registry,null,pull,image,cmd,with,registry,registry,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,pull,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,pull,image,cmd,with,auth,config,auth,config,return,pull,image,cmd
AsyncDockerProducer -> private PullImageCmd executePullImageRequest(DockerClient client, Message message);1542904331;Produces a pull image request__@param client_@param message_@return;private PullImageCmd executePullImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Pull Image Request")___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        ObjectHelper.notNull(repository, "Repository must be specified")___        PullImageCmd pullImageCmd = client.pullImageCmd(repository)___        String registry = DockerHelper.getProperty(DockerConstants.DOCKER_REGISTRY, configuration, message, String.class)__        if (registry != null) {_            pullImageCmd.withRegistry(registry)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)__        if (tag != null) {_            pullImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pullImageCmd.withAuthConfig(authConfig)__        }__        return pullImageCmd___    };produces,a,pull,image,request,param,client,param,message,return;private,pull,image,cmd,execute,pull,image,request,docker,client,client,message,message,logger,debug,executing,docker,pull,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,repository,repository,must,be,specified,pull,image,cmd,pull,image,cmd,client,pull,image,cmd,repository,string,registry,docker,helper,get,property,docker,constants,configuration,message,string,class,if,registry,null,pull,image,cmd,with,registry,registry,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,pull,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,pull,image,cmd,with,auth,config,auth,config,return,pull,image,cmd
AsyncDockerProducer -> private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message);1474362454;Produce a attach container request__@param client_@param message_@return;private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Attach Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        AttachContainerCmd attachContainerCmd = client.attachContainerCmd(containerId)__        _        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            attachContainerCmd.withFollowStream(followStream)__        }__        Boolean logs = DockerHelper.getProperty(DockerConstants.DOCKER_LOGS, configuration, message, Boolean.class)___        if (logs != null) {_            attachContainerCmd.withLogs(logs)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            attachContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            attachContainerCmd.withStdOut(stdOut)__        }__        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            attachContainerCmd.withTimestamps(timestamps)__        }__        return attachContainerCmd___    };produce,a,attach,container,request,param,client,param,message,return;private,attach,container,cmd,execute,attach,container,request,docker,client,client,message,message,logger,debug,executing,docker,attach,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,attach,container,cmd,attach,container,cmd,client,attach,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,attach,container,cmd,with,follow,stream,follow,stream,boolean,logs,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,logs,null,attach,container,cmd,with,logs,logs,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,attach,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,attach,container,cmd,with,std,out,std,out,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,attach,container,cmd,with,timestamps,timestamps,return,attach,container,cmd
AsyncDockerProducer -> private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message);1474362454;Produce a attach container request__@param client_@param message_@return;private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Attach Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        AttachContainerCmd attachContainerCmd = client.attachContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            attachContainerCmd.withFollowStream(followStream)__        }__        Boolean logs = DockerHelper.getProperty(DockerConstants.DOCKER_LOGS, configuration, message, Boolean.class)___        if (logs != null) {_            attachContainerCmd.withLogs(logs)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            attachContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            attachContainerCmd.withStdOut(stdOut)__        }__        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            attachContainerCmd.withTimestamps(timestamps)__        }__        return attachContainerCmd___    };produce,a,attach,container,request,param,client,param,message,return;private,attach,container,cmd,execute,attach,container,request,docker,client,client,message,message,logger,debug,executing,docker,attach,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,attach,container,cmd,attach,container,cmd,client,attach,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,attach,container,cmd,with,follow,stream,follow,stream,boolean,logs,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,logs,null,attach,container,cmd,with,logs,logs,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,attach,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,attach,container,cmd,with,std,out,std,out,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,attach,container,cmd,with,timestamps,timestamps,return,attach,container,cmd
AsyncDockerProducer -> private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message);1479916234;Produce a attach container request__@param client_@param message_@return;private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Attach Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        AttachContainerCmd attachContainerCmd = client.attachContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            attachContainerCmd.withFollowStream(followStream)__        }__        Boolean logs = DockerHelper.getProperty(DockerConstants.DOCKER_LOGS, configuration, message, Boolean.class)___        if (logs != null) {_            attachContainerCmd.withLogs(logs)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            attachContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            attachContainerCmd.withStdOut(stdOut)__        }__        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            attachContainerCmd.withTimestamps(timestamps)__        }__        return attachContainerCmd___    };produce,a,attach,container,request,param,client,param,message,return;private,attach,container,cmd,execute,attach,container,request,docker,client,client,message,message,logger,debug,executing,docker,attach,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,attach,container,cmd,attach,container,cmd,client,attach,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,attach,container,cmd,with,follow,stream,follow,stream,boolean,logs,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,logs,null,attach,container,cmd,with,logs,logs,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,attach,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,attach,container,cmd,with,std,out,std,out,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,attach,container,cmd,with,timestamps,timestamps,return,attach,container,cmd
AsyncDockerProducer -> private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message);1513158838;Produce a attach container request__@param client_@param message_@return;private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Attach Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        AttachContainerCmd attachContainerCmd = client.attachContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            attachContainerCmd.withFollowStream(followStream)__        }__        Boolean logs = DockerHelper.getProperty(DockerConstants.DOCKER_LOGS, configuration, message, Boolean.class)___        if (logs != null) {_            attachContainerCmd.withLogs(logs)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            attachContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            attachContainerCmd.withStdOut(stdOut)__        }__        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            attachContainerCmd.withTimestamps(timestamps)__        }__        return attachContainerCmd___    };produce,a,attach,container,request,param,client,param,message,return;private,attach,container,cmd,execute,attach,container,request,docker,client,client,message,message,logger,debug,executing,docker,attach,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,attach,container,cmd,attach,container,cmd,client,attach,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,attach,container,cmd,with,follow,stream,follow,stream,boolean,logs,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,logs,null,attach,container,cmd,with,logs,logs,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,attach,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,attach,container,cmd,with,std,out,std,out,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,attach,container,cmd,with,timestamps,timestamps,return,attach,container,cmd
AsyncDockerProducer -> private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message);1534005238;Produce a attach container request__@param client_@param message_@return;private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Attach Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        AttachContainerCmd attachContainerCmd = client.attachContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            attachContainerCmd.withFollowStream(followStream)__        }__        Boolean logs = DockerHelper.getProperty(DockerConstants.DOCKER_LOGS, configuration, message, Boolean.class)___        if (logs != null) {_            attachContainerCmd.withLogs(logs)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            attachContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            attachContainerCmd.withStdOut(stdOut)__        }__        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            attachContainerCmd.withTimestamps(timestamps)__        }__        return attachContainerCmd___    };produce,a,attach,container,request,param,client,param,message,return;private,attach,container,cmd,execute,attach,container,request,docker,client,client,message,message,logger,debug,executing,docker,attach,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,attach,container,cmd,attach,container,cmd,client,attach,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,attach,container,cmd,with,follow,stream,follow,stream,boolean,logs,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,logs,null,attach,container,cmd,with,logs,logs,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,attach,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,attach,container,cmd,with,std,out,std,out,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,attach,container,cmd,with,timestamps,timestamps,return,attach,container,cmd
AsyncDockerProducer -> private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message);1540108163;Produce a attach container request__@param client_@param message_@return;private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Attach Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        AttachContainerCmd attachContainerCmd = client.attachContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            attachContainerCmd.withFollowStream(followStream)__        }__        Boolean logs = DockerHelper.getProperty(DockerConstants.DOCKER_LOGS, configuration, message, Boolean.class)___        if (logs != null) {_            attachContainerCmd.withLogs(logs)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            attachContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            attachContainerCmd.withStdOut(stdOut)__        }__        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            attachContainerCmd.withTimestamps(timestamps)__        }__        return attachContainerCmd___    };produce,a,attach,container,request,param,client,param,message,return;private,attach,container,cmd,execute,attach,container,request,docker,client,client,message,message,logger,debug,executing,docker,attach,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,attach,container,cmd,attach,container,cmd,client,attach,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,attach,container,cmd,with,follow,stream,follow,stream,boolean,logs,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,logs,null,attach,container,cmd,with,logs,logs,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,attach,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,attach,container,cmd,with,std,out,std,out,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,attach,container,cmd,with,timestamps,timestamps,return,attach,container,cmd
AsyncDockerProducer -> private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message);1542904331;Produce a attach container request__@param client_@param message_@return;private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Attach Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        AttachContainerCmd attachContainerCmd = client.attachContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            attachContainerCmd.withFollowStream(followStream)__        }__        Boolean logs = DockerHelper.getProperty(DockerConstants.DOCKER_LOGS, configuration, message, Boolean.class)___        if (logs != null) {_            attachContainerCmd.withLogs(logs)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            attachContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            attachContainerCmd.withStdOut(stdOut)__        }__        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            attachContainerCmd.withTimestamps(timestamps)__        }__        return attachContainerCmd___    };produce,a,attach,container,request,param,client,param,message,return;private,attach,container,cmd,execute,attach,container,request,docker,client,client,message,message,logger,debug,executing,docker,attach,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,attach,container,cmd,attach,container,cmd,client,attach,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,attach,container,cmd,with,follow,stream,follow,stream,boolean,logs,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,logs,null,attach,container,cmd,with,logs,logs,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,attach,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,attach,container,cmd,with,std,out,std,out,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,attach,container,cmd,with,timestamps,timestamps,return,attach,container,cmd
AsyncDockerProducer -> private PushImageCmd executePushImageRequest(DockerClient client, Message message);1474362454;Produces a push image request__@param client_@param message_@return;private PushImageCmd executePushImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Push Image Request")___        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        ObjectHelper.notNull(name, "Image name must be specified")___        PushImageCmd pushImageCmd = client.pushImageCmd(name)___        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            pushImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pushImageCmd.withAuthConfig(authConfig)__        }__        return pushImageCmd___    };produces,a,push,image,request,param,client,param,message,return;private,push,image,cmd,execute,push,image,request,docker,client,client,message,message,logger,debug,executing,docker,push,image,request,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,name,image,name,must,be,specified,push,image,cmd,push,image,cmd,client,push,image,cmd,name,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,push,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,push,image,cmd,with,auth,config,auth,config,return,push,image,cmd
AsyncDockerProducer -> private PushImageCmd executePushImageRequest(DockerClient client, Message message);1474362454;Produces a push image request__@param client_@param message_@return;private PushImageCmd executePushImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Push Image Request")___        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        ObjectHelper.notNull(name, "Image name must be specified")___        PushImageCmd pushImageCmd = client.pushImageCmd(name)___        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            pushImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pushImageCmd.withAuthConfig(authConfig)__        }__        return pushImageCmd___    };produces,a,push,image,request,param,client,param,message,return;private,push,image,cmd,execute,push,image,request,docker,client,client,message,message,logger,debug,executing,docker,push,image,request,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,name,image,name,must,be,specified,push,image,cmd,push,image,cmd,client,push,image,cmd,name,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,push,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,push,image,cmd,with,auth,config,auth,config,return,push,image,cmd
AsyncDockerProducer -> private PushImageCmd executePushImageRequest(DockerClient client, Message message);1479916234;Produces a push image request__@param client_@param message_@return;private PushImageCmd executePushImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Push Image Request")___        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        ObjectHelper.notNull(name, "Image name must be specified")___        PushImageCmd pushImageCmd = client.pushImageCmd(name)___        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            pushImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pushImageCmd.withAuthConfig(authConfig)__        }__        return pushImageCmd___    };produces,a,push,image,request,param,client,param,message,return;private,push,image,cmd,execute,push,image,request,docker,client,client,message,message,logger,debug,executing,docker,push,image,request,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,name,image,name,must,be,specified,push,image,cmd,push,image,cmd,client,push,image,cmd,name,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,push,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,push,image,cmd,with,auth,config,auth,config,return,push,image,cmd
AsyncDockerProducer -> private PushImageCmd executePushImageRequest(DockerClient client, Message message);1513158838;Produces a push image request__@param client_@param message_@return;private PushImageCmd executePushImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Push Image Request")___        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        ObjectHelper.notNull(name, "Image name must be specified")___        PushImageCmd pushImageCmd = client.pushImageCmd(name)___        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            pushImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pushImageCmd.withAuthConfig(authConfig)__        }__        return pushImageCmd___    };produces,a,push,image,request,param,client,param,message,return;private,push,image,cmd,execute,push,image,request,docker,client,client,message,message,logger,debug,executing,docker,push,image,request,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,name,image,name,must,be,specified,push,image,cmd,push,image,cmd,client,push,image,cmd,name,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,push,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,push,image,cmd,with,auth,config,auth,config,return,push,image,cmd
AsyncDockerProducer -> private PushImageCmd executePushImageRequest(DockerClient client, Message message);1534005238;Produces a push image request__@param client_@param message_@return;private PushImageCmd executePushImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Push Image Request")___        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        ObjectHelper.notNull(name, "Image name must be specified")___        PushImageCmd pushImageCmd = client.pushImageCmd(name)___        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            pushImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pushImageCmd.withAuthConfig(authConfig)__        }__        return pushImageCmd___    };produces,a,push,image,request,param,client,param,message,return;private,push,image,cmd,execute,push,image,request,docker,client,client,message,message,logger,debug,executing,docker,push,image,request,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,name,image,name,must,be,specified,push,image,cmd,push,image,cmd,client,push,image,cmd,name,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,push,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,push,image,cmd,with,auth,config,auth,config,return,push,image,cmd
AsyncDockerProducer -> private PushImageCmd executePushImageRequest(DockerClient client, Message message);1540108163;Produces a push image request__@param client_@param message_@return;private PushImageCmd executePushImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Push Image Request")___        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        ObjectHelper.notNull(name, "Image name must be specified")___        PushImageCmd pushImageCmd = client.pushImageCmd(name)___        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            pushImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pushImageCmd.withAuthConfig(authConfig)__        }__        return pushImageCmd___    };produces,a,push,image,request,param,client,param,message,return;private,push,image,cmd,execute,push,image,request,docker,client,client,message,message,logger,debug,executing,docker,push,image,request,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,name,image,name,must,be,specified,push,image,cmd,push,image,cmd,client,push,image,cmd,name,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,push,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,push,image,cmd,with,auth,config,auth,config,return,push,image,cmd
AsyncDockerProducer -> private PushImageCmd executePushImageRequest(DockerClient client, Message message);1542904331;Produces a push image request__@param client_@param message_@return;private PushImageCmd executePushImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Push Image Request")___        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        ObjectHelper.notNull(name, "Image name must be specified")___        PushImageCmd pushImageCmd = client.pushImageCmd(name)___        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            pushImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pushImageCmd.withAuthConfig(authConfig)__        }__        return pushImageCmd___    };produces,a,push,image,request,param,client,param,message,return;private,push,image,cmd,execute,push,image,request,docker,client,client,message,message,logger,debug,executing,docker,push,image,request,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,name,image,name,must,be,specified,push,image,cmd,push,image,cmd,client,push,image,cmd,name,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,push,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,push,image,cmd,with,auth,config,auth,config,return,push,image,cmd
AsyncDockerProducer -> private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message);1474362454;Produce a log container request__@param client_@param message_@return;private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Log Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        LogContainerCmd logContainerCmd = client.logContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            logContainerCmd.withFollowStream(followStream)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            logContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            logContainerCmd.withStdOut(stdOut)__        }__        Integer tail = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL, configuration, message, Integer.class)___        if (tail != null) {_            logContainerCmd.withTail(tail)__        }__        Boolean tailAll = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL_ALL, configuration, message, Boolean.class)___        if (tailAll != null && tailAll) {_            logContainerCmd.withTailAll()__        }__        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            logContainerCmd.withTimestamps(timestamps)__        }__        return logContainerCmd___    };produce,a,log,container,request,param,client,param,message,return;private,log,container,cmd,execute,log,container,request,docker,client,client,message,message,logger,debug,executing,docker,log,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,log,container,cmd,log,container,cmd,client,log,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,log,container,cmd,with,follow,stream,follow,stream,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,log,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,log,container,cmd,with,std,out,std,out,integer,tail,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,tail,null,log,container,cmd,with,tail,tail,boolean,tail,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tail,all,null,tail,all,log,container,cmd,with,tail,all,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,log,container,cmd,with,timestamps,timestamps,return,log,container,cmd
AsyncDockerProducer -> private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message);1474362454;Produce a log container request__@param client_@param message_@return;private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Log Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        LogContainerCmd logContainerCmd = client.logContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            logContainerCmd.withFollowStream(followStream)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            logContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            logContainerCmd.withStdOut(stdOut)__        }__        Integer tail = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL, configuration, message, Integer.class)___        if (tail != null) {_            logContainerCmd.withTail(tail)__        }__        Boolean tailAll = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL_ALL, configuration, message, Boolean.class)___        if (tailAll != null && tailAll) {_            logContainerCmd.withTailAll()__        }__        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            logContainerCmd.withTimestamps(timestamps)__        }__        return logContainerCmd___    };produce,a,log,container,request,param,client,param,message,return;private,log,container,cmd,execute,log,container,request,docker,client,client,message,message,logger,debug,executing,docker,log,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,log,container,cmd,log,container,cmd,client,log,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,log,container,cmd,with,follow,stream,follow,stream,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,log,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,log,container,cmd,with,std,out,std,out,integer,tail,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,tail,null,log,container,cmd,with,tail,tail,boolean,tail,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tail,all,null,tail,all,log,container,cmd,with,tail,all,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,log,container,cmd,with,timestamps,timestamps,return,log,container,cmd
AsyncDockerProducer -> private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message);1479916234;Produce a log container request__@param client_@param message_@return;private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Log Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        LogContainerCmd logContainerCmd = client.logContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            logContainerCmd.withFollowStream(followStream)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            logContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            logContainerCmd.withStdOut(stdOut)__        }__        Integer tail = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL, configuration, message, Integer.class)___        if (tail != null) {_            logContainerCmd.withTail(tail)__        }__        Boolean tailAll = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL_ALL, configuration, message, Boolean.class)___        if (tailAll != null && tailAll) {_            logContainerCmd.withTailAll()__        }__        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            logContainerCmd.withTimestamps(timestamps)__        }__        return logContainerCmd___    };produce,a,log,container,request,param,client,param,message,return;private,log,container,cmd,execute,log,container,request,docker,client,client,message,message,logger,debug,executing,docker,log,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,log,container,cmd,log,container,cmd,client,log,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,log,container,cmd,with,follow,stream,follow,stream,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,log,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,log,container,cmd,with,std,out,std,out,integer,tail,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,tail,null,log,container,cmd,with,tail,tail,boolean,tail,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tail,all,null,tail,all,log,container,cmd,with,tail,all,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,log,container,cmd,with,timestamps,timestamps,return,log,container,cmd
AsyncDockerProducer -> private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message);1513158838;Produce a log container request__@param client_@param message_@return;private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Log Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        LogContainerCmd logContainerCmd = client.logContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            logContainerCmd.withFollowStream(followStream)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            logContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            logContainerCmd.withStdOut(stdOut)__        }__        Integer tail = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL, configuration, message, Integer.class)___        if (tail != null) {_            logContainerCmd.withTail(tail)__        }__        Boolean tailAll = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL_ALL, configuration, message, Boolean.class)___        if (tailAll != null && tailAll) {_            logContainerCmd.withTailAll()__        }__        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            logContainerCmd.withTimestamps(timestamps)__        }__        return logContainerCmd___    };produce,a,log,container,request,param,client,param,message,return;private,log,container,cmd,execute,log,container,request,docker,client,client,message,message,logger,debug,executing,docker,log,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,log,container,cmd,log,container,cmd,client,log,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,log,container,cmd,with,follow,stream,follow,stream,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,log,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,log,container,cmd,with,std,out,std,out,integer,tail,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,tail,null,log,container,cmd,with,tail,tail,boolean,tail,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tail,all,null,tail,all,log,container,cmd,with,tail,all,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,log,container,cmd,with,timestamps,timestamps,return,log,container,cmd
AsyncDockerProducer -> private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message);1534005238;Produce a log container request__@param client_@param message_@return;private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Log Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        LogContainerCmd logContainerCmd = client.logContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            logContainerCmd.withFollowStream(followStream)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            logContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            logContainerCmd.withStdOut(stdOut)__        }__        Integer tail = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL, configuration, message, Integer.class)___        if (tail != null) {_            logContainerCmd.withTail(tail)__        }__        Boolean tailAll = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL_ALL, configuration, message, Boolean.class)___        if (tailAll != null && tailAll) {_            logContainerCmd.withTailAll()__        }__        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            logContainerCmd.withTimestamps(timestamps)__        }__        return logContainerCmd___    };produce,a,log,container,request,param,client,param,message,return;private,log,container,cmd,execute,log,container,request,docker,client,client,message,message,logger,debug,executing,docker,log,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,log,container,cmd,log,container,cmd,client,log,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,log,container,cmd,with,follow,stream,follow,stream,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,log,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,log,container,cmd,with,std,out,std,out,integer,tail,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,tail,null,log,container,cmd,with,tail,tail,boolean,tail,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tail,all,null,tail,all,log,container,cmd,with,tail,all,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,log,container,cmd,with,timestamps,timestamps,return,log,container,cmd
AsyncDockerProducer -> private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message);1540108163;Produce a log container request__@param client_@param message_@return;private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Log Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        LogContainerCmd logContainerCmd = client.logContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            logContainerCmd.withFollowStream(followStream)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            logContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            logContainerCmd.withStdOut(stdOut)__        }__        Integer tail = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL, configuration, message, Integer.class)___        if (tail != null) {_            logContainerCmd.withTail(tail)__        }__        Boolean tailAll = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL_ALL, configuration, message, Boolean.class)___        if (tailAll != null && tailAll) {_            logContainerCmd.withTailAll()__        }__        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            logContainerCmd.withTimestamps(timestamps)__        }__        return logContainerCmd___    };produce,a,log,container,request,param,client,param,message,return;private,log,container,cmd,execute,log,container,request,docker,client,client,message,message,logger,debug,executing,docker,log,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,log,container,cmd,log,container,cmd,client,log,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,log,container,cmd,with,follow,stream,follow,stream,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,log,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,log,container,cmd,with,std,out,std,out,integer,tail,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,tail,null,log,container,cmd,with,tail,tail,boolean,tail,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tail,all,null,tail,all,log,container,cmd,with,tail,all,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,log,container,cmd,with,timestamps,timestamps,return,log,container,cmd
AsyncDockerProducer -> private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message);1542904331;Produce a log container request__@param client_@param message_@return;private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Log Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        LogContainerCmd logContainerCmd = client.logContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            logContainerCmd.withFollowStream(followStream)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            logContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            logContainerCmd.withStdOut(stdOut)__        }__        Integer tail = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL, configuration, message, Integer.class)___        if (tail != null) {_            logContainerCmd.withTail(tail)__        }__        Boolean tailAll = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL_ALL, configuration, message, Boolean.class)___        if (tailAll != null && tailAll) {_            logContainerCmd.withTailAll()__        }__        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            logContainerCmd.withTimestamps(timestamps)__        }__        return logContainerCmd___    };produce,a,log,container,request,param,client,param,message,return;private,log,container,cmd,execute,log,container,request,docker,client,client,message,message,logger,debug,executing,docker,log,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,log,container,cmd,log,container,cmd,client,log,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,log,container,cmd,with,follow,stream,follow,stream,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,log,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,log,container,cmd,with,std,out,std,out,integer,tail,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,tail,null,log,container,cmd,with,tail,tail,boolean,tail,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tail,all,null,tail,all,log,container,cmd,with,tail,all,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,log,container,cmd,with,timestamps,timestamps,return,log,container,cmd
